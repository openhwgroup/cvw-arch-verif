///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/F/WALLY-COV-fmsub.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x9, x2, x18 # perform first operation
fmsub.s f21, f14, f27, f26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x31, x1 # perform first operation
fmsub.s f12, f17, f14, f29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x13, x25, x9 # perform first operation
fmsub.s f2, f21, f12, f5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f31, f2, f19 # perform first operation
fmsub.s f31, f31, f5, f1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f12, f15, f29 # perform first operation
fmsub.s f15, f10, f12, f9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f8, f12, f22 # perform first operation
fmsub.s f12, f11, f28, f8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f24, f21, f8 # perform first operation
fmsub.s f24, f16, f17, f10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f13, f12, f7 # perform first operation
fmsub.s f13, f23, f11, f20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f12, f15, f14 # perform first operation
fmsub.s f12, f25, f29, f23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f30, f15, f26 # perform first operation
fmsub.s f15, f28, f1, f7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f31, f30, f7 # perform first operation
fmsub.s f7, f6, f1, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f1, f10, f18 # perform first operation
fmsub.s f31, f11, f20, f15 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xfa1e945f # load x3 with value 0xfa1e945f
sw x3, 0(x2) # store 0xfa1e945f in memory
flw f0, 0(x2) # load 0xfa1e945f from memory into f0
la x2, scratch
li x3, 0xadea2180 # load x3 with value 0xadea2180
sw x3, 0(x2) # store 0xadea2180 in memory
flw f12, 0(x2) # load 0xadea2180 from memory into f12
la x2, scratch
li x3, 0xe787d471 # load x3 with value 0xe787d471
sw x3, 0(x2) # store 0xe787d471 in memory
flw f19, 0(x2) # load 0xe787d471 from memory into f19
fmsub.s f21, f0, f12, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x91cc27d1 # load x3 with value 0x91cc27d1
sw x3, 0(x2) # store 0x91cc27d1 in memory
flw f1, 0(x2) # load 0x91cc27d1 from memory into f1
la x2, scratch
li x3, 0x416a652c # load x3 with value 0x416a652c
sw x3, 0(x2) # store 0x416a652c in memory
flw f18, 0(x2) # load 0x416a652c from memory into f18
la x2, scratch
li x3, 0x32c28964 # load x3 with value 0x32c28964
sw x3, 0(x2) # store 0x32c28964 in memory
flw f26, 0(x2) # load 0x32c28964 from memory into f26
fmsub.s f28, f1, f18, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0xa2cb3aa9 # load x3 with value 0xa2cb3aa9
sw x3, 0(x2) # store 0xa2cb3aa9 in memory
flw f2, 0(x2) # load 0xa2cb3aa9 from memory into f2
la x2, scratch
li x3, 0xdc274658 # load x3 with value 0xdc274658
sw x3, 0(x2) # store 0xdc274658 in memory
flw f20, 0(x2) # load 0xdc274658 from memory into f20
la x2, scratch
li x3, 0x82572026 # load x3 with value 0x82572026
sw x3, 0(x2) # store 0x82572026 in memory
flw f7, 0(x2) # load 0x82572026 from memory into f7
fmsub.s f5, f2, f20, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xd1244a3c # load x3 with value 0xd1244a3c
sw x3, 0(x2) # store 0xd1244a3c in memory
flw f3, 0(x2) # load 0xd1244a3c from memory into f3
la x2, scratch
li x3, 0x36aaaee6 # load x3 with value 0x36aaaee6
sw x3, 0(x2) # store 0x36aaaee6 in memory
flw f31, 0(x2) # load 0x36aaaee6 from memory into f31
la x2, scratch
li x3, 0x5575235d # load x3 with value 0x5575235d
sw x3, 0(x2) # store 0x5575235d in memory
flw f16, 0(x2) # load 0x5575235d from memory into f16
fmsub.s f19, f3, f31, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2de9b630 # load x3 with value 0x2de9b630
sw x3, 0(x2) # store 0x2de9b630 in memory
flw f4, 0(x2) # load 0x2de9b630 from memory into f4
la x2, scratch
li x3, 0x07a2629e # load x3 with value 0x07a2629e
sw x3, 0(x2) # store 0x07a2629e in memory
flw f20, 0(x2) # load 0x07a2629e from memory into f20
la x2, scratch
li x3, 0x8877644f # load x3 with value 0x8877644f
sw x3, 0(x2) # store 0x8877644f in memory
flw f14, 0(x2) # load 0x8877644f from memory into f14
fmsub.s f22, f4, f20, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3f7c2032 # load x3 with value 0x3f7c2032
sw x3, 0(x2) # store 0x3f7c2032 in memory
flw f5, 0(x2) # load 0x3f7c2032 from memory into f5
la x2, scratch
li x3, 0x0e140d98 # load x3 with value 0x0e140d98
sw x3, 0(x2) # store 0x0e140d98 in memory
flw f9, 0(x2) # load 0x0e140d98 from memory into f9
la x2, scratch
li x3, 0xf912b0c3 # load x3 with value 0xf912b0c3
sw x3, 0(x2) # store 0xf912b0c3 in memory
flw f24, 0(x2) # load 0xf912b0c3 from memory into f24
fmsub.s f8, f5, f9, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2b46dbbb # load x3 with value 0x2b46dbbb
sw x3, 0(x2) # store 0x2b46dbbb in memory
flw f6, 0(x2) # load 0x2b46dbbb from memory into f6
la x2, scratch
li x3, 0x57cae857 # load x3 with value 0x57cae857
sw x3, 0(x2) # store 0x57cae857 in memory
flw f21, 0(x2) # load 0x57cae857 from memory into f21
la x2, scratch
li x3, 0x6390fa09 # load x3 with value 0x6390fa09
sw x3, 0(x2) # store 0x6390fa09 in memory
flw f26, 0(x2) # load 0x6390fa09 from memory into f26
fmsub.s f1, f6, f21, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x340142b2 # load x3 with value 0x340142b2
sw x3, 0(x2) # store 0x340142b2 in memory
flw f7, 0(x2) # load 0x340142b2 from memory into f7
la x2, scratch
li x3, 0x6b441917 # load x3 with value 0x6b441917
sw x3, 0(x2) # store 0x6b441917 in memory
flw f14, 0(x2) # load 0x6b441917 from memory into f14
la x2, scratch
li x3, 0x2273df1e # load x3 with value 0x2273df1e
sw x3, 0(x2) # store 0x2273df1e in memory
flw f29, 0(x2) # load 0x2273df1e from memory into f29
fmsub.s f1, f7, f14, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x46dc18e0 # load x3 with value 0x46dc18e0
sw x3, 0(x2) # store 0x46dc18e0 in memory
flw f8, 0(x2) # load 0x46dc18e0 from memory into f8
la x2, scratch
li x3, 0x78a6eaaf # load x3 with value 0x78a6eaaf
sw x3, 0(x2) # store 0x78a6eaaf in memory
flw f29, 0(x2) # load 0x78a6eaaf from memory into f29
la x2, scratch
li x3, 0xc929418e # load x3 with value 0xc929418e
sw x3, 0(x2) # store 0xc929418e in memory
flw f27, 0(x2) # load 0xc929418e from memory into f27
fmsub.s f7, f8, f29, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x1578abea # load x3 with value 0x1578abea
sw x3, 0(x2) # store 0x1578abea in memory
flw f9, 0(x2) # load 0x1578abea from memory into f9
la x2, scratch
li x3, 0x685764af # load x3 with value 0x685764af
sw x3, 0(x2) # store 0x685764af in memory
flw f22, 0(x2) # load 0x685764af from memory into f22
la x2, scratch
li x3, 0x8d9436eb # load x3 with value 0x8d9436eb
sw x3, 0(x2) # store 0x8d9436eb in memory
flw f17, 0(x2) # load 0x8d9436eb from memory into f17
fmsub.s f26, f9, f22, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x590475b3 # load x3 with value 0x590475b3
sw x3, 0(x2) # store 0x590475b3 in memory
flw f10, 0(x2) # load 0x590475b3 from memory into f10
la x2, scratch
li x3, 0x6612be6d # load x3 with value 0x6612be6d
sw x3, 0(x2) # store 0x6612be6d in memory
flw f13, 0(x2) # load 0x6612be6d from memory into f13
la x2, scratch
li x3, 0x3a19cd2c # load x3 with value 0x3a19cd2c
sw x3, 0(x2) # store 0x3a19cd2c in memory
flw f22, 0(x2) # load 0x3a19cd2c from memory into f22
fmsub.s f3, f10, f13, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x22be15b0 # load x3 with value 0x22be15b0
sw x3, 0(x2) # store 0x22be15b0 in memory
flw f11, 0(x2) # load 0x22be15b0 from memory into f11
la x2, scratch
li x3, 0x14d41895 # load x3 with value 0x14d41895
sw x3, 0(x2) # store 0x14d41895 in memory
flw f2, 0(x2) # load 0x14d41895 from memory into f2
la x2, scratch
li x3, 0xf7814f8a # load x3 with value 0xf7814f8a
sw x3, 0(x2) # store 0xf7814f8a in memory
flw f3, 0(x2) # load 0xf7814f8a from memory into f3
fmsub.s f14, f11, f2, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x31bbec61 # load x3 with value 0x31bbec61
sw x3, 0(x2) # store 0x31bbec61 in memory
flw f12, 0(x2) # load 0x31bbec61 from memory into f12
la x2, scratch
li x3, 0xea44664a # load x3 with value 0xea44664a
sw x3, 0(x2) # store 0xea44664a in memory
flw f18, 0(x2) # load 0xea44664a from memory into f18
la x2, scratch
li x3, 0x2da769c3 # load x3 with value 0x2da769c3
sw x3, 0(x2) # store 0x2da769c3 in memory
flw f6, 0(x2) # load 0x2da769c3 from memory into f6
fmsub.s f1, f12, f18, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0x2edb6269 # load x3 with value 0x2edb6269
sw x3, 0(x2) # store 0x2edb6269 in memory
flw f13, 0(x2) # load 0x2edb6269 from memory into f13
la x2, scratch
li x3, 0x4d046bac # load x3 with value 0x4d046bac
sw x3, 0(x2) # store 0x4d046bac in memory
flw f27, 0(x2) # load 0x4d046bac from memory into f27
la x2, scratch
li x3, 0x51a40606 # load x3 with value 0x51a40606
sw x3, 0(x2) # store 0x51a40606 in memory
flw f29, 0(x2) # load 0x51a40606 from memory into f29
fmsub.s f18, f13, f27, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0xe20c58c3 # load x3 with value 0xe20c58c3
sw x3, 0(x2) # store 0xe20c58c3 in memory
flw f14, 0(x2) # load 0xe20c58c3 from memory into f14
la x2, scratch
li x3, 0x09d45e7d # load x3 with value 0x09d45e7d
sw x3, 0(x2) # store 0x09d45e7d in memory
flw f1, 0(x2) # load 0x09d45e7d from memory into f1
la x2, scratch
li x3, 0x07b776bb # load x3 with value 0x07b776bb
sw x3, 0(x2) # store 0x07b776bb in memory
flw f10, 0(x2) # load 0x07b776bb from memory into f10
fmsub.s f23, f14, f1, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0xb48b64ed # load x3 with value 0xb48b64ed
sw x3, 0(x2) # store 0xb48b64ed in memory
flw f15, 0(x2) # load 0xb48b64ed from memory into f15
la x2, scratch
li x3, 0x10143aff # load x3 with value 0x10143aff
sw x3, 0(x2) # store 0x10143aff in memory
flw f1, 0(x2) # load 0x10143aff from memory into f1
la x2, scratch
li x3, 0x23463df1 # load x3 with value 0x23463df1
sw x3, 0(x2) # store 0x23463df1 in memory
flw f20, 0(x2) # load 0x23463df1 from memory into f20
fmsub.s f16, f15, f1, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xc3add637 # load x3 with value 0xc3add637
sw x3, 0(x2) # store 0xc3add637 in memory
flw f16, 0(x2) # load 0xc3add637 from memory into f16
la x2, scratch
li x3, 0xd661f054 # load x3 with value 0xd661f054
sw x3, 0(x2) # store 0xd661f054 in memory
flw f22, 0(x2) # load 0xd661f054 from memory into f22
la x2, scratch
li x3, 0x10f23eea # load x3 with value 0x10f23eea
sw x3, 0(x2) # store 0x10f23eea in memory
flw f15, 0(x2) # load 0x10f23eea from memory into f15
fmsub.s f10, f16, f22, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x739d1a6f # load x3 with value 0x739d1a6f
sw x3, 0(x2) # store 0x739d1a6f in memory
flw f17, 0(x2) # load 0x739d1a6f from memory into f17
la x2, scratch
li x3, 0x6e7ad55d # load x3 with value 0x6e7ad55d
sw x3, 0(x2) # store 0x6e7ad55d in memory
flw f15, 0(x2) # load 0x6e7ad55d from memory into f15
la x2, scratch
li x3, 0x7d644844 # load x3 with value 0x7d644844
sw x3, 0(x2) # store 0x7d644844 in memory
flw f6, 0(x2) # load 0x7d644844 from memory into f6
fmsub.s f30, f17, f15, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xb13cc55a # load x3 with value 0xb13cc55a
sw x3, 0(x2) # store 0xb13cc55a in memory
flw f18, 0(x2) # load 0xb13cc55a from memory into f18
la x2, scratch
li x3, 0x3474c5b6 # load x3 with value 0x3474c5b6
sw x3, 0(x2) # store 0x3474c5b6 in memory
flw f10, 0(x2) # load 0x3474c5b6 from memory into f10
la x2, scratch
li x3, 0xd4e49ad8 # load x3 with value 0xd4e49ad8
sw x3, 0(x2) # store 0xd4e49ad8 in memory
flw f15, 0(x2) # load 0xd4e49ad8 from memory into f15
fmsub.s f19, f18, f10, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x733b7069 # load x3 with value 0x733b7069
sw x3, 0(x2) # store 0x733b7069 in memory
flw f19, 0(x2) # load 0x733b7069 from memory into f19
la x2, scratch
li x3, 0xbd1799b8 # load x3 with value 0xbd1799b8
sw x3, 0(x2) # store 0xbd1799b8 in memory
flw f15, 0(x2) # load 0xbd1799b8 from memory into f15
la x2, scratch
li x3, 0xa5a4838c # load x3 with value 0xa5a4838c
sw x3, 0(x2) # store 0xa5a4838c in memory
flw f29, 0(x2) # load 0xa5a4838c from memory into f29
fmsub.s f5, f19, f15, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x679cdcb8 # load x3 with value 0x679cdcb8
sw x3, 0(x2) # store 0x679cdcb8 in memory
flw f20, 0(x2) # load 0x679cdcb8 from memory into f20
la x2, scratch
li x3, 0x70736fae # load x3 with value 0x70736fae
sw x3, 0(x2) # store 0x70736fae in memory
flw f29, 0(x2) # load 0x70736fae from memory into f29
la x2, scratch
li x3, 0x81d87609 # load x3 with value 0x81d87609
sw x3, 0(x2) # store 0x81d87609 in memory
flw f7, 0(x2) # load 0x81d87609 from memory into f7
fmsub.s f10, f20, f29, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x8a557a09 # load x3 with value 0x8a557a09
sw x3, 0(x2) # store 0x8a557a09 in memory
flw f21, 0(x2) # load 0x8a557a09 from memory into f21
la x2, scratch
li x3, 0x5222cdea # load x3 with value 0x5222cdea
sw x3, 0(x2) # store 0x5222cdea in memory
flw f26, 0(x2) # load 0x5222cdea from memory into f26
la x2, scratch
li x3, 0xd498e6d5 # load x3 with value 0xd498e6d5
sw x3, 0(x2) # store 0xd498e6d5 in memory
flw f27, 0(x2) # load 0xd498e6d5 from memory into f27
fmsub.s f3, f21, f26, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0xaef3470f # load x3 with value 0xaef3470f
sw x3, 0(x2) # store 0xaef3470f in memory
flw f22, 0(x2) # load 0xaef3470f from memory into f22
la x2, scratch
li x3, 0x8aec3eaa # load x3 with value 0x8aec3eaa
sw x3, 0(x2) # store 0x8aec3eaa in memory
flw f8, 0(x2) # load 0x8aec3eaa from memory into f8
la x2, scratch
li x3, 0x45819a80 # load x3 with value 0x45819a80
sw x3, 0(x2) # store 0x45819a80 in memory
flw f15, 0(x2) # load 0x45819a80 from memory into f15
fmsub.s f30, f22, f8, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x26359b36 # load x3 with value 0x26359b36
sw x3, 0(x2) # store 0x26359b36 in memory
flw f23, 0(x2) # load 0x26359b36 from memory into f23
la x2, scratch
li x3, 0x558e326e # load x3 with value 0x558e326e
sw x3, 0(x2) # store 0x558e326e in memory
flw f9, 0(x2) # load 0x558e326e from memory into f9
la x2, scratch
li x3, 0x34ed786f # load x3 with value 0x34ed786f
sw x3, 0(x2) # store 0x34ed786f in memory
flw f15, 0(x2) # load 0x34ed786f from memory into f15
fmsub.s f8, f23, f9, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0xbc068ea8 # load x3 with value 0xbc068ea8
sw x3, 0(x2) # store 0xbc068ea8 in memory
flw f24, 0(x2) # load 0xbc068ea8 from memory into f24
la x2, scratch
li x3, 0x389d28a7 # load x3 with value 0x389d28a7
sw x3, 0(x2) # store 0x389d28a7 in memory
flw f2, 0(x2) # load 0x389d28a7 from memory into f2
la x2, scratch
li x3, 0x82b4edad # load x3 with value 0x82b4edad
sw x3, 0(x2) # store 0x82b4edad in memory
flw f31, 0(x2) # load 0x82b4edad from memory into f31
fmsub.s f9, f24, f2, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x2f98e33d # load x3 with value 0x2f98e33d
sw x3, 0(x2) # store 0x2f98e33d in memory
flw f25, 0(x2) # load 0x2f98e33d from memory into f25
la x2, scratch
li x3, 0x74aa0a54 # load x3 with value 0x74aa0a54
sw x3, 0(x2) # store 0x74aa0a54 in memory
flw f29, 0(x2) # load 0x74aa0a54 from memory into f29
la x2, scratch
li x3, 0x33ff4f80 # load x3 with value 0x33ff4f80
sw x3, 0(x2) # store 0x33ff4f80 in memory
flw f2, 0(x2) # load 0x33ff4f80 from memory into f2
fmsub.s f13, f25, f29, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x5af7dc1c # load x3 with value 0x5af7dc1c
sw x3, 0(x2) # store 0x5af7dc1c in memory
flw f26, 0(x2) # load 0x5af7dc1c from memory into f26
la x2, scratch
li x3, 0x241950a4 # load x3 with value 0x241950a4
sw x3, 0(x2) # store 0x241950a4 in memory
flw f19, 0(x2) # load 0x241950a4 from memory into f19
la x2, scratch
li x3, 0x195145fd # load x3 with value 0x195145fd
sw x3, 0(x2) # store 0x195145fd in memory
flw f12, 0(x2) # load 0x195145fd from memory into f12
fmsub.s f31, f26, f19, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x48e651a1 # load x3 with value 0x48e651a1
sw x3, 0(x2) # store 0x48e651a1 in memory
flw f27, 0(x2) # load 0x48e651a1 from memory into f27
la x2, scratch
li x3, 0xc00b539a # load x3 with value 0xc00b539a
sw x3, 0(x2) # store 0xc00b539a in memory
flw f12, 0(x2) # load 0xc00b539a from memory into f12
la x2, scratch
li x3, 0xa282783b # load x3 with value 0xa282783b
sw x3, 0(x2) # store 0xa282783b in memory
flw f23, 0(x2) # load 0xa282783b from memory into f23
fmsub.s f21, f27, f12, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xb343fee8 # load x3 with value 0xb343fee8
sw x3, 0(x2) # store 0xb343fee8 in memory
flw f28, 0(x2) # load 0xb343fee8 from memory into f28
la x2, scratch
li x3, 0xd4913e3c # load x3 with value 0xd4913e3c
sw x3, 0(x2) # store 0xd4913e3c in memory
flw f20, 0(x2) # load 0xd4913e3c from memory into f20
la x2, scratch
li x3, 0xe2d38721 # load x3 with value 0xe2d38721
sw x3, 0(x2) # store 0xe2d38721 in memory
flw f31, 0(x2) # load 0xe2d38721 from memory into f31
fmsub.s f23, f28, f20, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0x8d2b1819 # load x3 with value 0x8d2b1819
sw x3, 0(x2) # store 0x8d2b1819 in memory
flw f29, 0(x2) # load 0x8d2b1819 from memory into f29
la x2, scratch
li x3, 0xf6ebbd18 # load x3 with value 0xf6ebbd18
sw x3, 0(x2) # store 0xf6ebbd18 in memory
flw f14, 0(x2) # load 0xf6ebbd18 from memory into f14
la x2, scratch
li x3, 0x5cf08544 # load x3 with value 0x5cf08544
sw x3, 0(x2) # store 0x5cf08544 in memory
flw f21, 0(x2) # load 0x5cf08544 from memory into f21
fmsub.s f30, f29, f14, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x3d00aab0 # load x3 with value 0x3d00aab0
sw x3, 0(x2) # store 0x3d00aab0 in memory
flw f30, 0(x2) # load 0x3d00aab0 from memory into f30
la x2, scratch
li x3, 0x119b2466 # load x3 with value 0x119b2466
sw x3, 0(x2) # store 0x119b2466 in memory
flw f25, 0(x2) # load 0x119b2466 from memory into f25
la x2, scratch
li x3, 0x25b691a1 # load x3 with value 0x25b691a1
sw x3, 0(x2) # store 0x25b691a1 in memory
flw f22, 0(x2) # load 0x25b691a1 from memory into f22
fmsub.s f5, f30, f25, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xb670471f # load x3 with value 0xb670471f
sw x3, 0(x2) # store 0xb670471f in memory
flw f31, 0(x2) # load 0xb670471f from memory into f31
la x2, scratch
li x3, 0x02ac76c6 # load x3 with value 0x02ac76c6
sw x3, 0(x2) # store 0x02ac76c6 in memory
flw f14, 0(x2) # load 0x02ac76c6 from memory into f14
la x2, scratch
li x3, 0x6d5f08ac # load x3 with value 0x6d5f08ac
sw x3, 0(x2) # store 0x6d5f08ac in memory
flw f11, 0(x2) # load 0x6d5f08ac from memory into f11
fmsub.s f10, f31, f14, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x6333e8b8 # load x3 with value 0x6333e8b8
sw x3, 0(x2) # store 0x6333e8b8 in memory
flw f7, 0(x2) # load 0x6333e8b8 from memory into f7
la x2, scratch
li x3, 0x9d5e48a5 # load x3 with value 0x9d5e48a5
sw x3, 0(x2) # store 0x9d5e48a5 in memory
flw f0, 0(x2) # load 0x9d5e48a5 from memory into f0
la x2, scratch
li x3, 0x5627273e # load x3 with value 0x5627273e
sw x3, 0(x2) # store 0x5627273e in memory
flw f30, 0(x2) # load 0x5627273e from memory into f30
fmsub.s f23, f7, f0, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0xdc8a2dc3 # load x3 with value 0xdc8a2dc3
sw x3, 0(x2) # store 0xdc8a2dc3 in memory
flw f24, 0(x2) # load 0xdc8a2dc3 from memory into f24
la x2, scratch
li x3, 0x423c7a0f # load x3 with value 0x423c7a0f
sw x3, 0(x2) # store 0x423c7a0f in memory
flw f1, 0(x2) # load 0x423c7a0f from memory into f1
la x2, scratch
li x3, 0xd0c3b803 # load x3 with value 0xd0c3b803
sw x3, 0(x2) # store 0xd0c3b803 in memory
flw f28, 0(x2) # load 0xd0c3b803 from memory into f28
fmsub.s f3, f24, f1, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0xa3474739 # load x3 with value 0xa3474739
sw x3, 0(x2) # store 0xa3474739 in memory
flw f20, 0(x2) # load 0xa3474739 from memory into f20
la x2, scratch
li x3, 0x16e4c598 # load x3 with value 0x16e4c598
sw x3, 0(x2) # store 0x16e4c598 in memory
flw f2, 0(x2) # load 0x16e4c598 from memory into f2
la x2, scratch
li x3, 0x62f3a05d # load x3 with value 0x62f3a05d
sw x3, 0(x2) # store 0x62f3a05d in memory
flw f14, 0(x2) # load 0x62f3a05d from memory into f14
fmsub.s f29, f20, f2, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0xf8964945 # load x3 with value 0xf8964945
sw x3, 0(x2) # store 0xf8964945 in memory
flw f27, 0(x2) # load 0xf8964945 from memory into f27
la x2, scratch
li x3, 0x2d1cc94f # load x3 with value 0x2d1cc94f
sw x3, 0(x2) # store 0x2d1cc94f in memory
flw f3, 0(x2) # load 0x2d1cc94f from memory into f3
la x2, scratch
li x3, 0x5f9de046 # load x3 with value 0x5f9de046
sw x3, 0(x2) # store 0x5f9de046 in memory
flw f9, 0(x2) # load 0x5f9de046 from memory into f9
fmsub.s f16, f27, f3, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x58b1bfeb # load x3 with value 0x58b1bfeb
sw x3, 0(x2) # store 0x58b1bfeb in memory
flw f10, 0(x2) # load 0x58b1bfeb from memory into f10
la x2, scratch
li x3, 0xbd2b35ff # load x3 with value 0xbd2b35ff
sw x3, 0(x2) # store 0xbd2b35ff in memory
flw f4, 0(x2) # load 0xbd2b35ff from memory into f4
la x2, scratch
li x3, 0xab77bc18 # load x3 with value 0xab77bc18
sw x3, 0(x2) # store 0xab77bc18 in memory
flw f7, 0(x2) # load 0xab77bc18 from memory into f7
fmsub.s f14, f10, f4, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa31caee2 # load x3 with value 0xa31caee2
sw x3, 0(x2) # store 0xa31caee2 in memory
flw f15, 0(x2) # load 0xa31caee2 from memory into f15
la x2, scratch
li x3, 0x623ef840 # load x3 with value 0x623ef840
sw x3, 0(x2) # store 0x623ef840 in memory
flw f5, 0(x2) # load 0x623ef840 from memory into f5
la x2, scratch
li x3, 0x576576bb # load x3 with value 0x576576bb
sw x3, 0(x2) # store 0x576576bb in memory
flw f9, 0(x2) # load 0x576576bb from memory into f9
fmsub.s f23, f15, f5, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf16850a7 # load x3 with value 0xf16850a7
sw x3, 0(x2) # store 0xf16850a7 in memory
flw f25, 0(x2) # load 0xf16850a7 from memory into f25
la x2, scratch
li x3, 0x0b1233c0 # load x3 with value 0x0b1233c0
sw x3, 0(x2) # store 0x0b1233c0 in memory
flw f6, 0(x2) # load 0x0b1233c0 from memory into f6
la x2, scratch
li x3, 0xd91b7468 # load x3 with value 0xd91b7468
sw x3, 0(x2) # store 0xd91b7468 in memory
flw f12, 0(x2) # load 0xd91b7468 from memory into f12
fmsub.s f14, f25, f6, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3a55d788 # load x3 with value 0x3a55d788
sw x3, 0(x2) # store 0x3a55d788 in memory
flw f24, 0(x2) # load 0x3a55d788 from memory into f24
la x2, scratch
li x3, 0xfe266e78 # load x3 with value 0xfe266e78
sw x3, 0(x2) # store 0xfe266e78 in memory
flw f7, 0(x2) # load 0xfe266e78 from memory into f7
la x2, scratch
li x3, 0x3c80d589 # load x3 with value 0x3c80d589
sw x3, 0(x2) # store 0x3c80d589 in memory
flw f17, 0(x2) # load 0x3c80d589 from memory into f17
fmsub.s f27, f24, f7, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xa77a5d48 # load x3 with value 0xa77a5d48
sw x3, 0(x2) # store 0xa77a5d48 in memory
flw f26, 0(x2) # load 0xa77a5d48 from memory into f26
la x2, scratch
li x3, 0xa393de4c # load x3 with value 0xa393de4c
sw x3, 0(x2) # store 0xa393de4c in memory
flw f8, 0(x2) # load 0xa393de4c from memory into f8
la x2, scratch
li x3, 0x8a3c97e4 # load x3 with value 0x8a3c97e4
sw x3, 0(x2) # store 0x8a3c97e4 in memory
flw f18, 0(x2) # load 0x8a3c97e4 from memory into f18
fmsub.s f30, f26, f8, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xd78c5e5a # load x3 with value 0xd78c5e5a
sw x3, 0(x2) # store 0xd78c5e5a in memory
flw f17, 0(x2) # load 0xd78c5e5a from memory into f17
la x2, scratch
li x3, 0xcdbbdee1 # load x3 with value 0xcdbbdee1
sw x3, 0(x2) # store 0xcdbbdee1 in memory
flw f9, 0(x2) # load 0xcdbbdee1 from memory into f9
la x2, scratch
li x3, 0x64cdb3c4 # load x3 with value 0x64cdb3c4
sw x3, 0(x2) # store 0x64cdb3c4 in memory
flw f26, 0(x2) # load 0x64cdb3c4 from memory into f26
fmsub.s f3, f17, f9, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x9b7ed158 # load x3 with value 0x9b7ed158
sw x3, 0(x2) # store 0x9b7ed158 in memory
flw f30, 0(x2) # load 0x9b7ed158 from memory into f30
la x2, scratch
li x3, 0xed6866ec # load x3 with value 0xed6866ec
sw x3, 0(x2) # store 0xed6866ec in memory
flw f10, 0(x2) # load 0xed6866ec from memory into f10
la x2, scratch
li x3, 0x74eb9496 # load x3 with value 0x74eb9496
sw x3, 0(x2) # store 0x74eb9496 in memory
flw f14, 0(x2) # load 0x74eb9496 from memory into f14
fmsub.s f23, f30, f10, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x19d3ae3d # load x3 with value 0x19d3ae3d
sw x3, 0(x2) # store 0x19d3ae3d in memory
flw f7, 0(x2) # load 0x19d3ae3d from memory into f7
la x2, scratch
li x3, 0x81a2cff4 # load x3 with value 0x81a2cff4
sw x3, 0(x2) # store 0x81a2cff4 in memory
flw f11, 0(x2) # load 0x81a2cff4 from memory into f11
la x2, scratch
li x3, 0x8cf997d8 # load x3 with value 0x8cf997d8
sw x3, 0(x2) # store 0x8cf997d8 in memory
flw f5, 0(x2) # load 0x8cf997d8 from memory into f5
fmsub.s f21, f7, f11, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x65f7a500 # load x3 with value 0x65f7a500
sw x3, 0(x2) # store 0x65f7a500 in memory
flw f31, 0(x2) # load 0x65f7a500 from memory into f31
la x2, scratch
li x3, 0xe4dffda1 # load x3 with value 0xe4dffda1
sw x3, 0(x2) # store 0xe4dffda1 in memory
flw f12, 0(x2) # load 0xe4dffda1 from memory into f12
la x2, scratch
li x3, 0xcaca7cfe # load x3 with value 0xcaca7cfe
sw x3, 0(x2) # store 0xcaca7cfe in memory
flw f8, 0(x2) # load 0xcaca7cfe from memory into f8
fmsub.s f7, f31, f12, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x201be3dc # load x3 with value 0x201be3dc
sw x3, 0(x2) # store 0x201be3dc in memory
flw f15, 0(x2) # load 0x201be3dc from memory into f15
la x2, scratch
li x3, 0xaa2b0d58 # load x3 with value 0xaa2b0d58
sw x3, 0(x2) # store 0xaa2b0d58 in memory
flw f13, 0(x2) # load 0xaa2b0d58 from memory into f13
la x2, scratch
li x3, 0xb8e8249f # load x3 with value 0xb8e8249f
sw x3, 0(x2) # store 0xb8e8249f in memory
flw f8, 0(x2) # load 0xb8e8249f from memory into f8
fmsub.s f18, f15, f13, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x13efceda # load x3 with value 0x13efceda
sw x3, 0(x2) # store 0x13efceda in memory
flw f29, 0(x2) # load 0x13efceda from memory into f29
la x2, scratch
li x3, 0x5000f331 # load x3 with value 0x5000f331
sw x3, 0(x2) # store 0x5000f331 in memory
flw f14, 0(x2) # load 0x5000f331 from memory into f14
la x2, scratch
li x3, 0x159eb8cf # load x3 with value 0x159eb8cf
sw x3, 0(x2) # store 0x159eb8cf in memory
flw f26, 0(x2) # load 0x159eb8cf from memory into f26
fmsub.s f21, f29, f14, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x045dc40b # load x3 with value 0x045dc40b
sw x3, 0(x2) # store 0x045dc40b in memory
flw f24, 0(x2) # load 0x045dc40b from memory into f24
la x2, scratch
li x3, 0xcfa7be87 # load x3 with value 0xcfa7be87
sw x3, 0(x2) # store 0xcfa7be87 in memory
flw f15, 0(x2) # load 0xcfa7be87 from memory into f15
la x2, scratch
li x3, 0xf3d63c79 # load x3 with value 0xf3d63c79
sw x3, 0(x2) # store 0xf3d63c79 in memory
flw f3, 0(x2) # load 0xf3d63c79 from memory into f3
fmsub.s f14, f24, f15, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x835b8fdc # load x3 with value 0x835b8fdc
sw x3, 0(x2) # store 0x835b8fdc in memory
flw f10, 0(x2) # load 0x835b8fdc from memory into f10
la x2, scratch
li x3, 0x59fff58c # load x3 with value 0x59fff58c
sw x3, 0(x2) # store 0x59fff58c in memory
flw f16, 0(x2) # load 0x59fff58c from memory into f16
la x2, scratch
li x3, 0x02d9c86d # load x3 with value 0x02d9c86d
sw x3, 0(x2) # store 0x02d9c86d in memory
flw f11, 0(x2) # load 0x02d9c86d from memory into f11
fmsub.s f8, f10, f16, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xcdf3b02a # load x3 with value 0xcdf3b02a
sw x3, 0(x2) # store 0xcdf3b02a in memory
flw f30, 0(x2) # load 0xcdf3b02a from memory into f30
la x2, scratch
li x3, 0xed4dd8cb # load x3 with value 0xed4dd8cb
sw x3, 0(x2) # store 0xed4dd8cb in memory
flw f17, 0(x2) # load 0xed4dd8cb from memory into f17
la x2, scratch
li x3, 0xe09b8dc6 # load x3 with value 0xe09b8dc6
sw x3, 0(x2) # store 0xe09b8dc6 in memory
flw f26, 0(x2) # load 0xe09b8dc6 from memory into f26
fmsub.s f2, f30, f17, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x3100b449 # load x3 with value 0x3100b449
sw x3, 0(x2) # store 0x3100b449 in memory
flw f19, 0(x2) # load 0x3100b449 from memory into f19
la x2, scratch
li x3, 0x6eeb8772 # load x3 with value 0x6eeb8772
sw x3, 0(x2) # store 0x6eeb8772 in memory
flw f18, 0(x2) # load 0x6eeb8772 from memory into f18
la x2, scratch
li x3, 0x75744ed6 # load x3 with value 0x75744ed6
sw x3, 0(x2) # store 0x75744ed6 in memory
flw f22, 0(x2) # load 0x75744ed6 from memory into f22
fmsub.s f23, f19, f18, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xc1fadc73 # load x3 with value 0xc1fadc73
sw x3, 0(x2) # store 0xc1fadc73 in memory
flw f27, 0(x2) # load 0xc1fadc73 from memory into f27
la x2, scratch
li x3, 0x51d8e4b5 # load x3 with value 0x51d8e4b5
sw x3, 0(x2) # store 0x51d8e4b5 in memory
flw f19, 0(x2) # load 0x51d8e4b5 from memory into f19
la x2, scratch
li x3, 0x4991a3f1 # load x3 with value 0x4991a3f1
sw x3, 0(x2) # store 0x4991a3f1 in memory
flw f21, 0(x2) # load 0x4991a3f1 from memory into f21
fmsub.s f6, f27, f19, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x02ffe7e2 # load x3 with value 0x02ffe7e2
sw x3, 0(x2) # store 0x02ffe7e2 in memory
flw f9, 0(x2) # load 0x02ffe7e2 from memory into f9
la x2, scratch
li x3, 0xae1e4195 # load x3 with value 0xae1e4195
sw x3, 0(x2) # store 0xae1e4195 in memory
flw f20, 0(x2) # load 0xae1e4195 from memory into f20
la x2, scratch
li x3, 0xe765c7b5 # load x3 with value 0xe765c7b5
sw x3, 0(x2) # store 0xe765c7b5 in memory
flw f16, 0(x2) # load 0xe765c7b5 from memory into f16
fmsub.s f15, f9, f20, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0xcbd73ed6 # load x3 with value 0xcbd73ed6
sw x3, 0(x2) # store 0xcbd73ed6 in memory
flw f2, 0(x2) # load 0xcbd73ed6 from memory into f2
la x2, scratch
li x3, 0x6df1929d # load x3 with value 0x6df1929d
sw x3, 0(x2) # store 0x6df1929d in memory
flw f21, 0(x2) # load 0x6df1929d from memory into f21
la x2, scratch
li x3, 0xf593fe2e # load x3 with value 0xf593fe2e
sw x3, 0(x2) # store 0xf593fe2e in memory
flw f23, 0(x2) # load 0xf593fe2e from memory into f23
fmsub.s f1, f2, f21, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0xcba46627 # load x3 with value 0xcba46627
sw x3, 0(x2) # store 0xcba46627 in memory
flw f1, 0(x2) # load 0xcba46627 from memory into f1
la x2, scratch
li x3, 0x44d3d732 # load x3 with value 0x44d3d732
sw x3, 0(x2) # store 0x44d3d732 in memory
flw f22, 0(x2) # load 0x44d3d732 from memory into f22
la x2, scratch
li x3, 0x0039b25a # load x3 with value 0x0039b25a
sw x3, 0(x2) # store 0x0039b25a in memory
flw f15, 0(x2) # load 0x0039b25a from memory into f15
fmsub.s f13, f1, f22, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x0eb0d8b8 # load x3 with value 0x0eb0d8b8
sw x3, 0(x2) # store 0x0eb0d8b8 in memory
flw f24, 0(x2) # load 0x0eb0d8b8 from memory into f24
la x2, scratch
li x3, 0x285c5057 # load x3 with value 0x285c5057
sw x3, 0(x2) # store 0x285c5057 in memory
flw f23, 0(x2) # load 0x285c5057 from memory into f23
la x2, scratch
li x3, 0x45a11904 # load x3 with value 0x45a11904
sw x3, 0(x2) # store 0x45a11904 in memory
flw f18, 0(x2) # load 0x45a11904 from memory into f18
fmsub.s f25, f24, f23, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xdb4f4d65 # load x3 with value 0xdb4f4d65
sw x3, 0(x2) # store 0xdb4f4d65 in memory
flw f18, 0(x2) # load 0xdb4f4d65 from memory into f18
la x2, scratch
li x3, 0x72cff22b # load x3 with value 0x72cff22b
sw x3, 0(x2) # store 0x72cff22b in memory
flw f24, 0(x2) # load 0x72cff22b from memory into f24
la x2, scratch
li x3, 0x85238d8a # load x3 with value 0x85238d8a
sw x3, 0(x2) # store 0x85238d8a in memory
flw f10, 0(x2) # load 0x85238d8a from memory into f10
fmsub.s f19, f18, f24, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x1c6c30f4 # load x3 with value 0x1c6c30f4
sw x3, 0(x2) # store 0x1c6c30f4 in memory
flw f24, 0(x2) # load 0x1c6c30f4 from memory into f24
la x2, scratch
li x3, 0xed7f3902 # load x3 with value 0xed7f3902
sw x3, 0(x2) # store 0xed7f3902 in memory
flw f25, 0(x2) # load 0xed7f3902 from memory into f25
la x2, scratch
li x3, 0x66bcb439 # load x3 with value 0x66bcb439
sw x3, 0(x2) # store 0x66bcb439 in memory
flw f27, 0(x2) # load 0x66bcb439 from memory into f27
fmsub.s f13, f24, f25, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0xdffc11aa # load x3 with value 0xdffc11aa
sw x3, 0(x2) # store 0xdffc11aa in memory
flw f2, 0(x2) # load 0xdffc11aa from memory into f2
la x2, scratch
li x3, 0x1ceecfeb # load x3 with value 0x1ceecfeb
sw x3, 0(x2) # store 0x1ceecfeb in memory
flw f26, 0(x2) # load 0x1ceecfeb from memory into f26
la x2, scratch
li x3, 0x7b6d52ac # load x3 with value 0x7b6d52ac
sw x3, 0(x2) # store 0x7b6d52ac in memory
flw f29, 0(x2) # load 0x7b6d52ac from memory into f29
fmsub.s f15, f2, f26, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x3bd19ec5 # load x3 with value 0x3bd19ec5
sw x3, 0(x2) # store 0x3bd19ec5 in memory
flw f16, 0(x2) # load 0x3bd19ec5 from memory into f16
la x2, scratch
li x3, 0x1bdda627 # load x3 with value 0x1bdda627
sw x3, 0(x2) # store 0x1bdda627 in memory
flw f27, 0(x2) # load 0x1bdda627 from memory into f27
la x2, scratch
li x3, 0x5dedfd1e # load x3 with value 0x5dedfd1e
sw x3, 0(x2) # store 0x5dedfd1e in memory
flw f3, 0(x2) # load 0x5dedfd1e from memory into f3
fmsub.s f14, f16, f27, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x2de7fdad # load x3 with value 0x2de7fdad
sw x3, 0(x2) # store 0x2de7fdad in memory
flw f2, 0(x2) # load 0x2de7fdad from memory into f2
la x2, scratch
li x3, 0x04e87028 # load x3 with value 0x04e87028
sw x3, 0(x2) # store 0x04e87028 in memory
flw f28, 0(x2) # load 0x04e87028 from memory into f28
la x2, scratch
li x3, 0x8373e35b # load x3 with value 0x8373e35b
sw x3, 0(x2) # store 0x8373e35b in memory
flw f7, 0(x2) # load 0x8373e35b from memory into f7
fmsub.s f29, f2, f28, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x5fa44e3b # load x3 with value 0x5fa44e3b
sw x3, 0(x2) # store 0x5fa44e3b in memory
flw f22, 0(x2) # load 0x5fa44e3b from memory into f22
la x2, scratch
li x3, 0xfc3da2a4 # load x3 with value 0xfc3da2a4
sw x3, 0(x2) # store 0xfc3da2a4 in memory
flw f29, 0(x2) # load 0xfc3da2a4 from memory into f29
la x2, scratch
li x3, 0xa4c91925 # load x3 with value 0xa4c91925
sw x3, 0(x2) # store 0xa4c91925 in memory
flw f2, 0(x2) # load 0xa4c91925 from memory into f2
fmsub.s f15, f22, f29, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x6a33fe0f # load x3 with value 0x6a33fe0f
sw x3, 0(x2) # store 0x6a33fe0f in memory
flw f3, 0(x2) # load 0x6a33fe0f from memory into f3
la x2, scratch
li x3, 0x4e4f4a96 # load x3 with value 0x4e4f4a96
sw x3, 0(x2) # store 0x4e4f4a96 in memory
flw f30, 0(x2) # load 0x4e4f4a96 from memory into f30
la x2, scratch
li x3, 0xc12f9e64 # load x3 with value 0xc12f9e64
sw x3, 0(x2) # store 0xc12f9e64 in memory
flw f9, 0(x2) # load 0xc12f9e64 from memory into f9
fmsub.s f24, f3, f30, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0xce3fe7ba # load x3 with value 0xce3fe7ba
sw x3, 0(x2) # store 0xce3fe7ba in memory
flw f16, 0(x2) # load 0xce3fe7ba from memory into f16
la x2, scratch
li x3, 0x58d0a3de # load x3 with value 0x58d0a3de
sw x3, 0(x2) # store 0x58d0a3de in memory
flw f31, 0(x2) # load 0x58d0a3de from memory into f31
la x2, scratch
li x3, 0x7233b9ae # load x3 with value 0x7233b9ae
sw x3, 0(x2) # store 0x7233b9ae in memory
flw f28, 0(x2) # load 0x7233b9ae from memory into f28
fmsub.s f27, f16, f31, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x7ab81ba3 # load x3 with value 0x7ab81ba3
sw x3, 0(x2) # store 0x7ab81ba3 in memory
flw f8, 0(x2) # load 0x7ab81ba3 from memory into f8
la x2, scratch
li x3, 0xcd2e28f9 # load x3 with value 0xcd2e28f9
sw x3, 0(x2) # store 0xcd2e28f9 in memory
flw f17, 0(x2) # load 0xcd2e28f9 from memory into f17
la x2, scratch
li x3, 0xdb7727be # load x3 with value 0xdb7727be
sw x3, 0(x2) # store 0xdb7727be in memory
flw f0, 0(x2) # load 0xdb7727be from memory into f0
fmsub.s f9, f8, f17, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xc41d7274 # load x3 with value 0xc41d7274
sw x3, 0(x2) # store 0xc41d7274 in memory
flw f20, 0(x2) # load 0xc41d7274 from memory into f20
la x2, scratch
li x3, 0xbfef020d # load x3 with value 0xbfef020d
sw x3, 0(x2) # store 0xbfef020d in memory
flw f8, 0(x2) # load 0xbfef020d from memory into f8
la x2, scratch
li x3, 0xdd257bd3 # load x3 with value 0xdd257bd3
sw x3, 0(x2) # store 0xdd257bd3 in memory
flw f1, 0(x2) # load 0xdd257bd3 from memory into f1
fmsub.s f30, f20, f8, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0x1c2dfdd0 # load x3 with value 0x1c2dfdd0
sw x3, 0(x2) # store 0x1c2dfdd0 in memory
flw f19, 0(x2) # load 0x1c2dfdd0 from memory into f19
la x2, scratch
li x3, 0x2e209c05 # load x3 with value 0x2e209c05
sw x3, 0(x2) # store 0x2e209c05 in memory
flw f23, 0(x2) # load 0x2e209c05 from memory into f23
la x2, scratch
li x3, 0x72a663a0 # load x3 with value 0x72a663a0
sw x3, 0(x2) # store 0x72a663a0 in memory
flw f2, 0(x2) # load 0x72a663a0 from memory into f2
fmsub.s f24, f19, f23, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x2657a5b0 # load x3 with value 0x2657a5b0
sw x3, 0(x2) # store 0x2657a5b0 in memory
flw f2, 0(x2) # load 0x2657a5b0 from memory into f2
la x2, scratch
li x3, 0x0d07c862 # load x3 with value 0x0d07c862
sw x3, 0(x2) # store 0x0d07c862 in memory
flw f23, 0(x2) # load 0x0d07c862 from memory into f23
la x2, scratch
li x3, 0xa5206ca8 # load x3 with value 0xa5206ca8
sw x3, 0(x2) # store 0xa5206ca8 in memory
flw f3, 0(x2) # load 0xa5206ca8 from memory into f3
fmsub.s f25, f2, f23, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x535a87e5 # load x3 with value 0x535a87e5
sw x3, 0(x2) # store 0x535a87e5 in memory
flw f5, 0(x2) # load 0x535a87e5 from memory into f5
la x2, scratch
li x3, 0xd1a2add7 # load x3 with value 0xd1a2add7
sw x3, 0(x2) # store 0xd1a2add7 in memory
flw f16, 0(x2) # load 0xd1a2add7 from memory into f16
la x2, scratch
li x3, 0xdf15844b # load x3 with value 0xdf15844b
sw x3, 0(x2) # store 0xdf15844b in memory
flw f4, 0(x2) # load 0xdf15844b from memory into f4
fmsub.s f28, f5, f16, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0x5202853c # load x3 with value 0x5202853c
sw x3, 0(x2) # store 0x5202853c in memory
flw f9, 0(x2) # load 0x5202853c from memory into f9
la x2, scratch
li x3, 0xd994b285 # load x3 with value 0xd994b285
sw x3, 0(x2) # store 0xd994b285 in memory
flw f10, 0(x2) # load 0xd994b285 from memory into f10
la x2, scratch
li x3, 0x504b3110 # load x3 with value 0x504b3110
sw x3, 0(x2) # store 0x504b3110 in memory
flw f5, 0(x2) # load 0x504b3110 from memory into f5
fmsub.s f14, f9, f10, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0xd0304790 # load x3 with value 0xd0304790
sw x3, 0(x2) # store 0xd0304790 in memory
flw f22, 0(x2) # load 0xd0304790 from memory into f22
la x2, scratch
li x3, 0x40e72b57 # load x3 with value 0x40e72b57
sw x3, 0(x2) # store 0x40e72b57 in memory
flw f28, 0(x2) # load 0x40e72b57 from memory into f28
la x2, scratch
li x3, 0x6cda980d # load x3 with value 0x6cda980d
sw x3, 0(x2) # store 0x6cda980d in memory
flw f6, 0(x2) # load 0x6cda980d from memory into f6
fmsub.s f3, f22, f28, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0xcb027c60 # load x3 with value 0xcb027c60
sw x3, 0(x2) # store 0xcb027c60 in memory
flw f15, 0(x2) # load 0xcb027c60 from memory into f15
la x2, scratch
li x3, 0x26215a70 # load x3 with value 0x26215a70
sw x3, 0(x2) # store 0x26215a70 in memory
flw f11, 0(x2) # load 0x26215a70 from memory into f11
la x2, scratch
li x3, 0xfda10843 # load x3 with value 0xfda10843
sw x3, 0(x2) # store 0xfda10843 in memory
flw f7, 0(x2) # load 0xfda10843 from memory into f7
fmsub.s f26, f15, f11, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x3b102e0d # load x3 with value 0x3b102e0d
sw x3, 0(x2) # store 0x3b102e0d in memory
flw f21, 0(x2) # load 0x3b102e0d from memory into f21
la x2, scratch
li x3, 0x4d596e81 # load x3 with value 0x4d596e81
sw x3, 0(x2) # store 0x4d596e81 in memory
flw f17, 0(x2) # load 0x4d596e81 from memory into f17
la x2, scratch
li x3, 0xd6d777b0 # load x3 with value 0xd6d777b0
sw x3, 0(x2) # store 0xd6d777b0 in memory
flw f8, 0(x2) # load 0xd6d777b0 from memory into f8
fmsub.s f2, f21, f17, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x5d9ff05c # load x3 with value 0x5d9ff05c
sw x3, 0(x2) # store 0x5d9ff05c in memory
flw f2, 0(x2) # load 0x5d9ff05c from memory into f2
la x2, scratch
li x3, 0x04b495e9 # load x3 with value 0x04b495e9
sw x3, 0(x2) # store 0x04b495e9 in memory
flw f7, 0(x2) # load 0x04b495e9 from memory into f7
la x2, scratch
li x3, 0xe0445cf8 # load x3 with value 0xe0445cf8
sw x3, 0(x2) # store 0xe0445cf8 in memory
flw f9, 0(x2) # load 0xe0445cf8 from memory into f9
fmsub.s f11, f2, f7, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0xa172b7df # load x3 with value 0xa172b7df
sw x3, 0(x2) # store 0xa172b7df in memory
flw f22, 0(x2) # load 0xa172b7df from memory into f22
la x2, scratch
li x3, 0xa5bc4c97 # load x3 with value 0xa5bc4c97
sw x3, 0(x2) # store 0xa5bc4c97 in memory
flw f25, 0(x2) # load 0xa5bc4c97 from memory into f25
la x2, scratch
li x3, 0x9e16bebb # load x3 with value 0x9e16bebb
sw x3, 0(x2) # store 0x9e16bebb in memory
flw f10, 0(x2) # load 0x9e16bebb from memory into f10
fmsub.s f28, f22, f25, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x7f16ab8e # load x3 with value 0x7f16ab8e
sw x3, 0(x2) # store 0x7f16ab8e in memory
flw f30, 0(x2) # load 0x7f16ab8e from memory into f30
la x2, scratch
li x3, 0xe6738e4b # load x3 with value 0xe6738e4b
sw x3, 0(x2) # store 0xe6738e4b in memory
flw f9, 0(x2) # load 0xe6738e4b from memory into f9
la x2, scratch
li x3, 0x6fb11925 # load x3 with value 0x6fb11925
sw x3, 0(x2) # store 0x6fb11925 in memory
flw f11, 0(x2) # load 0x6fb11925 from memory into f11
fmsub.s f16, f30, f9, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x5a4a5c13 # load x3 with value 0x5a4a5c13
sw x3, 0(x2) # store 0x5a4a5c13 in memory
flw f13, 0(x2) # load 0x5a4a5c13 from memory into f13
la x2, scratch
li x3, 0x5b66b959 # load x3 with value 0x5b66b959
sw x3, 0(x2) # store 0x5b66b959 in memory
flw f18, 0(x2) # load 0x5b66b959 from memory into f18
la x2, scratch
li x3, 0x07a0df84 # load x3 with value 0x07a0df84
sw x3, 0(x2) # store 0x07a0df84 in memory
flw f12, 0(x2) # load 0x07a0df84 from memory into f12
fmsub.s f22, f13, f18, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x1eed013a # load x3 with value 0x1eed013a
sw x3, 0(x2) # store 0x1eed013a in memory
flw f25, 0(x2) # load 0x1eed013a from memory into f25
la x2, scratch
li x3, 0xefe10054 # load x3 with value 0xefe10054
sw x3, 0(x2) # store 0xefe10054 in memory
flw f18, 0(x2) # load 0xefe10054 from memory into f18
la x2, scratch
li x3, 0x35c3b28c # load x3 with value 0x35c3b28c
sw x3, 0(x2) # store 0x35c3b28c in memory
flw f13, 0(x2) # load 0x35c3b28c from memory into f13
fmsub.s f23, f25, f18, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x8218db9b # load x3 with value 0x8218db9b
sw x3, 0(x2) # store 0x8218db9b in memory
flw f21, 0(x2) # load 0x8218db9b from memory into f21
la x2, scratch
li x3, 0xae9330dc # load x3 with value 0xae9330dc
sw x3, 0(x2) # store 0xae9330dc in memory
flw f26, 0(x2) # load 0xae9330dc from memory into f26
la x2, scratch
li x3, 0xb174e36a # load x3 with value 0xb174e36a
sw x3, 0(x2) # store 0xb174e36a in memory
flw f14, 0(x2) # load 0xb174e36a from memory into f14
fmsub.s f15, f21, f26, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x73093a28 # load x3 with value 0x73093a28
sw x3, 0(x2) # store 0x73093a28 in memory
flw f28, 0(x2) # load 0x73093a28 from memory into f28
la x2, scratch
li x3, 0x0ae95dd6 # load x3 with value 0x0ae95dd6
sw x3, 0(x2) # store 0x0ae95dd6 in memory
flw f8, 0(x2) # load 0x0ae95dd6 from memory into f8
la x2, scratch
li x3, 0xfbfec5eb # load x3 with value 0xfbfec5eb
sw x3, 0(x2) # store 0xfbfec5eb in memory
flw f15, 0(x2) # load 0xfbfec5eb from memory into f15
fmsub.s f26, f28, f8, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0xbd57c3e5 # load x3 with value 0xbd57c3e5
sw x3, 0(x2) # store 0xbd57c3e5 in memory
flw f15, 0(x2) # load 0xbd57c3e5 from memory into f15
la x2, scratch
li x3, 0x22a7c8ce # load x3 with value 0x22a7c8ce
sw x3, 0(x2) # store 0x22a7c8ce in memory
flw f27, 0(x2) # load 0x22a7c8ce from memory into f27
la x2, scratch
li x3, 0x00c83865 # load x3 with value 0x00c83865
sw x3, 0(x2) # store 0x00c83865 in memory
flw f16, 0(x2) # load 0x00c83865 from memory into f16
fmsub.s f30, f15, f27, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x694ee691 # load x3 with value 0x694ee691
sw x3, 0(x2) # store 0x694ee691 in memory
flw f7, 0(x2) # load 0x694ee691 from memory into f7
la x2, scratch
li x3, 0x7c3847ae # load x3 with value 0x7c3847ae
sw x3, 0(x2) # store 0x7c3847ae in memory
flw f14, 0(x2) # load 0x7c3847ae from memory into f14
la x2, scratch
li x3, 0xddc247e2 # load x3 with value 0xddc247e2
sw x3, 0(x2) # store 0xddc247e2 in memory
flw f17, 0(x2) # load 0xddc247e2 from memory into f17
fmsub.s f17, f7, f14, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x65210dfe # load x3 with value 0x65210dfe
sw x3, 0(x2) # store 0x65210dfe in memory
flw f28, 0(x2) # load 0x65210dfe from memory into f28
la x2, scratch
li x3, 0xf72a346b # load x3 with value 0xf72a346b
sw x3, 0(x2) # store 0xf72a346b in memory
flw f17, 0(x2) # load 0xf72a346b from memory into f17
la x2, scratch
li x3, 0xacedab08 # load x3 with value 0xacedab08
sw x3, 0(x2) # store 0xacedab08 in memory
flw f18, 0(x2) # load 0xacedab08 from memory into f18
fmsub.s f7, f28, f17, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x1e967ddb # load x3 with value 0x1e967ddb
sw x3, 0(x2) # store 0x1e967ddb in memory
flw f7, 0(x2) # load 0x1e967ddb from memory into f7
la x2, scratch
li x3, 0xd3e44616 # load x3 with value 0xd3e44616
sw x3, 0(x2) # store 0xd3e44616 in memory
flw f23, 0(x2) # load 0xd3e44616 from memory into f23
la x2, scratch
li x3, 0x6cc8e449 # load x3 with value 0x6cc8e449
sw x3, 0(x2) # store 0x6cc8e449 in memory
flw f19, 0(x2) # load 0x6cc8e449 from memory into f19
fmsub.s f17, f7, f23, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x6a7807a8 # load x3 with value 0x6a7807a8
sw x3, 0(x2) # store 0x6a7807a8 in memory
flw f22, 0(x2) # load 0x6a7807a8 from memory into f22
la x2, scratch
li x3, 0xaeeb293a # load x3 with value 0xaeeb293a
sw x3, 0(x2) # store 0xaeeb293a in memory
flw f10, 0(x2) # load 0xaeeb293a from memory into f10
la x2, scratch
li x3, 0x5729f839 # load x3 with value 0x5729f839
sw x3, 0(x2) # store 0x5729f839 in memory
flw f20, 0(x2) # load 0x5729f839 from memory into f20
fmsub.s f9, f22, f10, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x72ab7ad9 # load x3 with value 0x72ab7ad9
sw x3, 0(x2) # store 0x72ab7ad9 in memory
flw f25, 0(x2) # load 0x72ab7ad9 from memory into f25
la x2, scratch
li x3, 0x9307056d # load x3 with value 0x9307056d
sw x3, 0(x2) # store 0x9307056d in memory
flw f9, 0(x2) # load 0x9307056d from memory into f9
la x2, scratch
li x3, 0x826fa945 # load x3 with value 0x826fa945
sw x3, 0(x2) # store 0x826fa945 in memory
flw f21, 0(x2) # load 0x826fa945 from memory into f21
fmsub.s f18, f25, f9, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0xe16adb24 # load x3 with value 0xe16adb24
sw x3, 0(x2) # store 0xe16adb24 in memory
flw f13, 0(x2) # load 0xe16adb24 from memory into f13
la x2, scratch
li x3, 0x3b36d3be # load x3 with value 0x3b36d3be
sw x3, 0(x2) # store 0x3b36d3be in memory
flw f10, 0(x2) # load 0x3b36d3be from memory into f10
la x2, scratch
li x3, 0x7edac74c # load x3 with value 0x7edac74c
sw x3, 0(x2) # store 0x7edac74c in memory
flw f22, 0(x2) # load 0x7edac74c from memory into f22
fmsub.s f3, f13, f10, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0xc24a7f2b # load x3 with value 0xc24a7f2b
sw x3, 0(x2) # store 0xc24a7f2b in memory
flw f1, 0(x2) # load 0xc24a7f2b from memory into f1
la x2, scratch
li x3, 0xe551efa9 # load x3 with value 0xe551efa9
sw x3, 0(x2) # store 0xe551efa9 in memory
flw f2, 0(x2) # load 0xe551efa9 from memory into f2
la x2, scratch
li x3, 0x2dbf3b31 # load x3 with value 0x2dbf3b31
sw x3, 0(x2) # store 0x2dbf3b31 in memory
flw f23, 0(x2) # load 0x2dbf3b31 from memory into f23
fmsub.s f23, f1, f2, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0xa92dc8a6 # load x3 with value 0xa92dc8a6
sw x3, 0(x2) # store 0xa92dc8a6 in memory
flw f26, 0(x2) # load 0xa92dc8a6 from memory into f26
la x2, scratch
li x3, 0x33a8703f # load x3 with value 0x33a8703f
sw x3, 0(x2) # store 0x33a8703f in memory
flw f17, 0(x2) # load 0x33a8703f from memory into f17
la x2, scratch
li x3, 0xcaf64173 # load x3 with value 0xcaf64173
sw x3, 0(x2) # store 0xcaf64173 in memory
flw f24, 0(x2) # load 0xcaf64173 from memory into f24
fmsub.s f31, f26, f17, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x9dfa24a4 # load x3 with value 0x9dfa24a4
sw x3, 0(x2) # store 0x9dfa24a4 in memory
flw f17, 0(x2) # load 0x9dfa24a4 from memory into f17
la x2, scratch
li x3, 0xf48512fc # load x3 with value 0xf48512fc
sw x3, 0(x2) # store 0xf48512fc in memory
flw f22, 0(x2) # load 0xf48512fc from memory into f22
la x2, scratch
li x3, 0x87529174 # load x3 with value 0x87529174
sw x3, 0(x2) # store 0x87529174 in memory
flw f25, 0(x2) # load 0x87529174 from memory into f25
fmsub.s f8, f17, f22, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0x146eed83 # load x3 with value 0x146eed83
sw x3, 0(x2) # store 0x146eed83 in memory
flw f14, 0(x2) # load 0x146eed83 from memory into f14
la x2, scratch
li x3, 0xa4c8ea40 # load x3 with value 0xa4c8ea40
sw x3, 0(x2) # store 0xa4c8ea40 in memory
flw f31, 0(x2) # load 0xa4c8ea40 from memory into f31
la x2, scratch
li x3, 0x8019ce52 # load x3 with value 0x8019ce52
sw x3, 0(x2) # store 0x8019ce52 in memory
flw f26, 0(x2) # load 0x8019ce52 from memory into f26
fmsub.s f13, f14, f31, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0x633fa7bc # load x3 with value 0x633fa7bc
sw x3, 0(x2) # store 0x633fa7bc in memory
flw f11, 0(x2) # load 0x633fa7bc from memory into f11
la x2, scratch
li x3, 0x928e013f # load x3 with value 0x928e013f
sw x3, 0(x2) # store 0x928e013f in memory
flw f15, 0(x2) # load 0x928e013f from memory into f15
la x2, scratch
li x3, 0x9a57a12c # load x3 with value 0x9a57a12c
sw x3, 0(x2) # store 0x9a57a12c in memory
flw f27, 0(x2) # load 0x9a57a12c from memory into f27
fmsub.s f16, f11, f15, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x68d45f2e # load x3 with value 0x68d45f2e
sw x3, 0(x2) # store 0x68d45f2e in memory
flw f9, 0(x2) # load 0x68d45f2e from memory into f9
la x2, scratch
li x3, 0xcb80245b # load x3 with value 0xcb80245b
sw x3, 0(x2) # store 0xcb80245b in memory
flw f1, 0(x2) # load 0xcb80245b from memory into f1
la x2, scratch
li x3, 0x929c06c0 # load x3 with value 0x929c06c0
sw x3, 0(x2) # store 0x929c06c0 in memory
flw f28, 0(x2) # load 0x929c06c0 from memory into f28
fmsub.s f16, f9, f1, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0xbf4c6f27 # load x3 with value 0xbf4c6f27
sw x3, 0(x2) # store 0xbf4c6f27 in memory
flw f8, 0(x2) # load 0xbf4c6f27 from memory into f8
la x2, scratch
li x3, 0x46b3e7e2 # load x3 with value 0x46b3e7e2
sw x3, 0(x2) # store 0x46b3e7e2 in memory
flw f11, 0(x2) # load 0x46b3e7e2 from memory into f11
la x2, scratch
li x3, 0xca6d4b23 # load x3 with value 0xca6d4b23
sw x3, 0(x2) # store 0xca6d4b23 in memory
flw f29, 0(x2) # load 0xca6d4b23 from memory into f29
fmsub.s f2, f8, f11, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x3f282df5 # load x3 with value 0x3f282df5
sw x3, 0(x2) # store 0x3f282df5 in memory
flw f2, 0(x2) # load 0x3f282df5 from memory into f2
la x2, scratch
li x3, 0xe89883e6 # load x3 with value 0xe89883e6
sw x3, 0(x2) # store 0xe89883e6 in memory
flw f29, 0(x2) # load 0xe89883e6 from memory into f29
la x2, scratch
li x3, 0xa1ad761d # load x3 with value 0xa1ad761d
sw x3, 0(x2) # store 0xa1ad761d in memory
flw f30, 0(x2) # load 0xa1ad761d from memory into f30
fmsub.s f11, f2, f29, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0xb82fa3eb # load x3 with value 0xb82fa3eb
sw x3, 0(x2) # store 0xb82fa3eb in memory
flw f18, 0(x2) # load 0xb82fa3eb from memory into f18
la x2, scratch
li x3, 0x3cafb015 # load x3 with value 0x3cafb015
sw x3, 0(x2) # store 0x3cafb015 in memory
flw f1, 0(x2) # load 0x3cafb015 from memory into f1
la x2, scratch
li x3, 0xfee30443 # load x3 with value 0xfee30443
sw x3, 0(x2) # store 0xfee30443 in memory
flw f31, 0(x2) # load 0xfee30443 from memory into f31
fmsub.s f15, f18, f1, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xd8aefff5 # load x3 with value 0xd8aefff5
sw x3, 0(x2) # store 0xd8aefff5 in memory
flw f6, 0(x2) # load 0xd8aefff5 from memory into f6
la x2, scratch
li x3, 0x19c0458f # load x3 with value 0x19c0458f
sw x3, 0(x2) # store 0x19c0458f in memory
flw f7, 0(x2) # load 0x19c0458f from memory into f7
la x2, scratch
li x3, 0xb473341a # load x3 with value 0xb473341a
sw x3, 0(x2) # store 0xb473341a in memory
flw f12, 0(x2) # load 0xb473341a from memory into f12
fmsub.s f0, f6, f7, f12 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x6851416c # load x3 with value 0x6851416c
sw x3, 0(x2) # store 0x6851416c in memory
flw f28, 0(x2) # load 0x6851416c from memory into f28
la x2, scratch
li x3, 0x2fcbb505 # load x3 with value 0x2fcbb505
sw x3, 0(x2) # store 0x2fcbb505 in memory
flw f16, 0(x2) # load 0x2fcbb505 from memory into f16
la x2, scratch
li x3, 0x99a49347 # load x3 with value 0x99a49347
sw x3, 0(x2) # store 0x99a49347 in memory
flw f22, 0(x2) # load 0x99a49347 from memory into f22
fmsub.s f1, f28, f16, f22 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x2933d7ee # load x3 with value 0x2933d7ee
sw x3, 0(x2) # store 0x2933d7ee in memory
flw f8, 0(x2) # load 0x2933d7ee from memory into f8
la x2, scratch
li x3, 0x2c2bc0b7 # load x3 with value 0x2c2bc0b7
sw x3, 0(x2) # store 0x2c2bc0b7 in memory
flw f19, 0(x2) # load 0x2c2bc0b7 from memory into f19
la x2, scratch
li x3, 0xff86b602 # load x3 with value 0xff86b602
sw x3, 0(x2) # store 0xff86b602 in memory
flw f12, 0(x2) # load 0xff86b602 from memory into f12
fmsub.s f2, f8, f19, f12 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xdb020dc0 # load x3 with value 0xdb020dc0
sw x3, 0(x2) # store 0xdb020dc0 in memory
flw f5, 0(x2) # load 0xdb020dc0 from memory into f5
la x2, scratch
li x3, 0x34190eaf # load x3 with value 0x34190eaf
sw x3, 0(x2) # store 0x34190eaf in memory
flw f19, 0(x2) # load 0x34190eaf from memory into f19
la x2, scratch
li x3, 0xc1c01d68 # load x3 with value 0xc1c01d68
sw x3, 0(x2) # store 0xc1c01d68 in memory
flw f17, 0(x2) # load 0xc1c01d68 from memory into f17
fmsub.s f3, f5, f19, f17 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9e0e163e # load x3 with value 0x9e0e163e
sw x3, 0(x2) # store 0x9e0e163e in memory
flw f2, 0(x2) # load 0x9e0e163e from memory into f2
la x2, scratch
li x3, 0x930505ff # load x3 with value 0x930505ff
sw x3, 0(x2) # store 0x930505ff in memory
flw f24, 0(x2) # load 0x930505ff from memory into f24
la x2, scratch
li x3, 0x358b0da7 # load x3 with value 0x358b0da7
sw x3, 0(x2) # store 0x358b0da7 in memory
flw f11, 0(x2) # load 0x358b0da7 from memory into f11
fmsub.s f4, f2, f24, f11 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0cbc8869 # load x3 with value 0x0cbc8869
sw x3, 0(x2) # store 0x0cbc8869 in memory
flw f20, 0(x2) # load 0x0cbc8869 from memory into f20
la x2, scratch
li x3, 0xbfafba0a # load x3 with value 0xbfafba0a
sw x3, 0(x2) # store 0xbfafba0a in memory
flw f3, 0(x2) # load 0xbfafba0a from memory into f3
la x2, scratch
li x3, 0x6593395b # load x3 with value 0x6593395b
sw x3, 0(x2) # store 0x6593395b in memory
flw f29, 0(x2) # load 0x6593395b from memory into f29
fmsub.s f5, f20, f3, f29 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa8c74815 # load x3 with value 0xa8c74815
sw x3, 0(x2) # store 0xa8c74815 in memory
flw f14, 0(x2) # load 0xa8c74815 from memory into f14
la x2, scratch
li x3, 0x2f71219f # load x3 with value 0x2f71219f
sw x3, 0(x2) # store 0x2f71219f in memory
flw f7, 0(x2) # load 0x2f71219f from memory into f7
la x2, scratch
li x3, 0x60d3f218 # load x3 with value 0x60d3f218
sw x3, 0(x2) # store 0x60d3f218 in memory
flw f5, 0(x2) # load 0x60d3f218 from memory into f5
fmsub.s f6, f14, f7, f5 # perform operation

# Testcase cp_fd (Test destination fd = x7)
la x2, scratch
li x3, 0x38a7a294 # load x3 with value 0x38a7a294
sw x3, 0(x2) # store 0x38a7a294 in memory
flw f1, 0(x2) # load 0x38a7a294 from memory into f1
la x2, scratch
li x3, 0x9bf03a90 # load x3 with value 0x9bf03a90
sw x3, 0(x2) # store 0x9bf03a90 in memory
flw f26, 0(x2) # load 0x9bf03a90 from memory into f26
la x2, scratch
li x3, 0x87deb292 # load x3 with value 0x87deb292
sw x3, 0(x2) # store 0x87deb292 in memory
flw f20, 0(x2) # load 0x87deb292 from memory into f20
fmsub.s f7, f1, f26, f20 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0xd1c2195f # load x3 with value 0xd1c2195f
sw x3, 0(x2) # store 0xd1c2195f in memory
flw f30, 0(x2) # load 0xd1c2195f from memory into f30
la x2, scratch
li x3, 0x23a4c2a7 # load x3 with value 0x23a4c2a7
sw x3, 0(x2) # store 0x23a4c2a7 in memory
flw f18, 0(x2) # load 0x23a4c2a7 from memory into f18
la x2, scratch
li x3, 0x61f0a9b0 # load x3 with value 0x61f0a9b0
sw x3, 0(x2) # store 0x61f0a9b0 in memory
flw f12, 0(x2) # load 0x61f0a9b0 from memory into f12
fmsub.s f8, f30, f18, f12 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x5fe83353 # load x3 with value 0x5fe83353
sw x3, 0(x2) # store 0x5fe83353 in memory
flw f24, 0(x2) # load 0x5fe83353 from memory into f24
la x2, scratch
li x3, 0x5d9fe60d # load x3 with value 0x5d9fe60d
sw x3, 0(x2) # store 0x5d9fe60d in memory
flw f3, 0(x2) # load 0x5d9fe60d from memory into f3
la x2, scratch
li x3, 0x460f267f # load x3 with value 0x460f267f
sw x3, 0(x2) # store 0x460f267f in memory
flw f22, 0(x2) # load 0x460f267f from memory into f22
fmsub.s f9, f24, f3, f22 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x373c3c86 # load x3 with value 0x373c3c86
sw x3, 0(x2) # store 0x373c3c86 in memory
flw f23, 0(x2) # load 0x373c3c86 from memory into f23
la x2, scratch
li x3, 0x71543e82 # load x3 with value 0x71543e82
sw x3, 0(x2) # store 0x71543e82 in memory
flw f22, 0(x2) # load 0x71543e82 from memory into f22
la x2, scratch
li x3, 0xe89312b1 # load x3 with value 0xe89312b1
sw x3, 0(x2) # store 0xe89312b1 in memory
flw f27, 0(x2) # load 0xe89312b1 from memory into f27
fmsub.s f10, f23, f22, f27 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x45a8fcf1 # load x3 with value 0x45a8fcf1
sw x3, 0(x2) # store 0x45a8fcf1 in memory
flw f3, 0(x2) # load 0x45a8fcf1 from memory into f3
la x2, scratch
li x3, 0x7a57eb6b # load x3 with value 0x7a57eb6b
sw x3, 0(x2) # store 0x7a57eb6b in memory
flw f2, 0(x2) # load 0x7a57eb6b from memory into f2
la x2, scratch
li x3, 0x6ce8dd82 # load x3 with value 0x6ce8dd82
sw x3, 0(x2) # store 0x6ce8dd82 in memory
flw f18, 0(x2) # load 0x6ce8dd82 from memory into f18
fmsub.s f11, f3, f2, f18 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0xa13fce32 # load x3 with value 0xa13fce32
sw x3, 0(x2) # store 0xa13fce32 in memory
flw f10, 0(x2) # load 0xa13fce32 from memory into f10
la x2, scratch
li x3, 0x5a6fe448 # load x3 with value 0x5a6fe448
sw x3, 0(x2) # store 0x5a6fe448 in memory
flw f8, 0(x2) # load 0x5a6fe448 from memory into f8
la x2, scratch
li x3, 0x6d0d3da3 # load x3 with value 0x6d0d3da3
sw x3, 0(x2) # store 0x6d0d3da3 in memory
flw f31, 0(x2) # load 0x6d0d3da3 from memory into f31
fmsub.s f12, f10, f8, f31 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xedcc5847 # load x3 with value 0xedcc5847
sw x3, 0(x2) # store 0xedcc5847 in memory
flw f16, 0(x2) # load 0xedcc5847 from memory into f16
la x2, scratch
li x3, 0x864949f0 # load x3 with value 0x864949f0
sw x3, 0(x2) # store 0x864949f0 in memory
flw f27, 0(x2) # load 0x864949f0 from memory into f27
la x2, scratch
li x3, 0xa4875491 # load x3 with value 0xa4875491
sw x3, 0(x2) # store 0xa4875491 in memory
flw f9, 0(x2) # load 0xa4875491 from memory into f9
fmsub.s f13, f16, f27, f9 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x76433db7 # load x3 with value 0x76433db7
sw x3, 0(x2) # store 0x76433db7 in memory
flw f14, 0(x2) # load 0x76433db7 from memory into f14
la x2, scratch
li x3, 0xc1a4cf0a # load x3 with value 0xc1a4cf0a
sw x3, 0(x2) # store 0xc1a4cf0a in memory
flw f24, 0(x2) # load 0xc1a4cf0a from memory into f24
la x2, scratch
li x3, 0x2d5945d2 # load x3 with value 0x2d5945d2
sw x3, 0(x2) # store 0x2d5945d2 in memory
flw f27, 0(x2) # load 0x2d5945d2 from memory into f27
fmsub.s f14, f14, f24, f27 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xaa426f8b # load x3 with value 0xaa426f8b
sw x3, 0(x2) # store 0xaa426f8b in memory
flw f25, 0(x2) # load 0xaa426f8b from memory into f25
la x2, scratch
li x3, 0x6eec06a8 # load x3 with value 0x6eec06a8
sw x3, 0(x2) # store 0x6eec06a8 in memory
flw f31, 0(x2) # load 0x6eec06a8 from memory into f31
la x2, scratch
li x3, 0x9442a2e3 # load x3 with value 0x9442a2e3
sw x3, 0(x2) # store 0x9442a2e3 in memory
flw f24, 0(x2) # load 0x9442a2e3 from memory into f24
fmsub.s f15, f25, f31, f24 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xcef5eb2d # load x3 with value 0xcef5eb2d
sw x3, 0(x2) # store 0xcef5eb2d in memory
flw f25, 0(x2) # load 0xcef5eb2d from memory into f25
la x2, scratch
li x3, 0x1e80eafe # load x3 with value 0x1e80eafe
sw x3, 0(x2) # store 0x1e80eafe in memory
flw f22, 0(x2) # load 0x1e80eafe from memory into f22
la x2, scratch
li x3, 0xea9aa140 # load x3 with value 0xea9aa140
sw x3, 0(x2) # store 0xea9aa140 in memory
flw f9, 0(x2) # load 0xea9aa140 from memory into f9
fmsub.s f16, f25, f22, f9 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x22857845 # load x3 with value 0x22857845
sw x3, 0(x2) # store 0x22857845 in memory
flw f15, 0(x2) # load 0x22857845 from memory into f15
la x2, scratch
li x3, 0x274132fc # load x3 with value 0x274132fc
sw x3, 0(x2) # store 0x274132fc in memory
flw f31, 0(x2) # load 0x274132fc from memory into f31
la x2, scratch
li x3, 0xfdde916e # load x3 with value 0xfdde916e
sw x3, 0(x2) # store 0xfdde916e in memory
flw f11, 0(x2) # load 0xfdde916e from memory into f11
fmsub.s f17, f15, f31, f11 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x64ef9ee8 # load x3 with value 0x64ef9ee8
sw x3, 0(x2) # store 0x64ef9ee8 in memory
flw f18, 0(x2) # load 0x64ef9ee8 from memory into f18
la x2, scratch
li x3, 0xa294415c # load x3 with value 0xa294415c
sw x3, 0(x2) # store 0xa294415c in memory
flw f23, 0(x2) # load 0xa294415c from memory into f23
la x2, scratch
li x3, 0x2c5da962 # load x3 with value 0x2c5da962
sw x3, 0(x2) # store 0x2c5da962 in memory
flw f3, 0(x2) # load 0x2c5da962 from memory into f3
fmsub.s f18, f18, f23, f3 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x15b6ce3b # load x3 with value 0x15b6ce3b
sw x3, 0(x2) # store 0x15b6ce3b in memory
flw f21, 0(x2) # load 0x15b6ce3b from memory into f21
la x2, scratch
li x3, 0xacc4732d # load x3 with value 0xacc4732d
sw x3, 0(x2) # store 0xacc4732d in memory
flw f6, 0(x2) # load 0xacc4732d from memory into f6
la x2, scratch
li x3, 0xde05faa5 # load x3 with value 0xde05faa5
sw x3, 0(x2) # store 0xde05faa5 in memory
flw f22, 0(x2) # load 0xde05faa5 from memory into f22
fmsub.s f19, f21, f6, f22 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x8076f037 # load x3 with value 0x8076f037
sw x3, 0(x2) # store 0x8076f037 in memory
flw f7, 0(x2) # load 0x8076f037 from memory into f7
la x2, scratch
li x3, 0x4d74d69b # load x3 with value 0x4d74d69b
sw x3, 0(x2) # store 0x4d74d69b in memory
flw f18, 0(x2) # load 0x4d74d69b from memory into f18
la x2, scratch
li x3, 0x3187119a # load x3 with value 0x3187119a
sw x3, 0(x2) # store 0x3187119a in memory
flw f19, 0(x2) # load 0x3187119a from memory into f19
fmsub.s f20, f7, f18, f19 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x6ecd6b08 # load x3 with value 0x6ecd6b08
sw x3, 0(x2) # store 0x6ecd6b08 in memory
flw f17, 0(x2) # load 0x6ecd6b08 from memory into f17
la x2, scratch
li x3, 0x85af22d9 # load x3 with value 0x85af22d9
sw x3, 0(x2) # store 0x85af22d9 in memory
flw f30, 0(x2) # load 0x85af22d9 from memory into f30
la x2, scratch
li x3, 0x32564dbb # load x3 with value 0x32564dbb
sw x3, 0(x2) # store 0x32564dbb in memory
flw f18, 0(x2) # load 0x32564dbb from memory into f18
fmsub.s f21, f17, f30, f18 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0xcdcdafe8 # load x3 with value 0xcdcdafe8
sw x3, 0(x2) # store 0xcdcdafe8 in memory
flw f9, 0(x2) # load 0xcdcdafe8 from memory into f9
la x2, scratch
li x3, 0xc913e593 # load x3 with value 0xc913e593
sw x3, 0(x2) # store 0xc913e593 in memory
flw f28, 0(x2) # load 0xc913e593 from memory into f28
la x2, scratch
li x3, 0x759bdb45 # load x3 with value 0x759bdb45
sw x3, 0(x2) # store 0x759bdb45 in memory
flw f29, 0(x2) # load 0x759bdb45 from memory into f29
fmsub.s f22, f9, f28, f29 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x3cdadabf # load x3 with value 0x3cdadabf
sw x3, 0(x2) # store 0x3cdadabf in memory
flw f28, 0(x2) # load 0x3cdadabf from memory into f28
la x2, scratch
li x3, 0xac281f91 # load x3 with value 0xac281f91
sw x3, 0(x2) # store 0xac281f91 in memory
flw f8, 0(x2) # load 0xac281f91 from memory into f8
la x2, scratch
li x3, 0x70341e84 # load x3 with value 0x70341e84
sw x3, 0(x2) # store 0x70341e84 in memory
flw f7, 0(x2) # load 0x70341e84 from memory into f7
fmsub.s f23, f28, f8, f7 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x39fd9e5f # load x3 with value 0x39fd9e5f
sw x3, 0(x2) # store 0x39fd9e5f in memory
flw f9, 0(x2) # load 0x39fd9e5f from memory into f9
la x2, scratch
li x3, 0xc264f01a # load x3 with value 0xc264f01a
sw x3, 0(x2) # store 0xc264f01a in memory
flw f7, 0(x2) # load 0xc264f01a from memory into f7
la x2, scratch
li x3, 0x6ebc9d5c # load x3 with value 0x6ebc9d5c
sw x3, 0(x2) # store 0x6ebc9d5c in memory
flw f2, 0(x2) # load 0x6ebc9d5c from memory into f2
fmsub.s f24, f9, f7, f2 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xf3d6a7a5 # load x3 with value 0xf3d6a7a5
sw x3, 0(x2) # store 0xf3d6a7a5 in memory
flw f18, 0(x2) # load 0xf3d6a7a5 from memory into f18
la x2, scratch
li x3, 0xb97d5a9e # load x3 with value 0xb97d5a9e
sw x3, 0(x2) # store 0xb97d5a9e in memory
flw f6, 0(x2) # load 0xb97d5a9e from memory into f6
la x2, scratch
li x3, 0xeabff794 # load x3 with value 0xeabff794
sw x3, 0(x2) # store 0xeabff794 in memory
flw f22, 0(x2) # load 0xeabff794 from memory into f22
fmsub.s f25, f18, f6, f22 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x17fee69b # load x3 with value 0x17fee69b
sw x3, 0(x2) # store 0x17fee69b in memory
flw f1, 0(x2) # load 0x17fee69b from memory into f1
la x2, scratch
li x3, 0xaffc5806 # load x3 with value 0xaffc5806
sw x3, 0(x2) # store 0xaffc5806 in memory
flw f19, 0(x2) # load 0xaffc5806 from memory into f19
la x2, scratch
li x3, 0xe3934ed4 # load x3 with value 0xe3934ed4
sw x3, 0(x2) # store 0xe3934ed4 in memory
flw f27, 0(x2) # load 0xe3934ed4 from memory into f27
fmsub.s f26, f1, f19, f27 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xe5063698 # load x3 with value 0xe5063698
sw x3, 0(x2) # store 0xe5063698 in memory
flw f3, 0(x2) # load 0xe5063698 from memory into f3
la x2, scratch
li x3, 0x8e754c48 # load x3 with value 0x8e754c48
sw x3, 0(x2) # store 0x8e754c48 in memory
flw f20, 0(x2) # load 0x8e754c48 from memory into f20
la x2, scratch
li x3, 0xf9b29c7b # load x3 with value 0xf9b29c7b
sw x3, 0(x2) # store 0xf9b29c7b in memory
flw f6, 0(x2) # load 0xf9b29c7b from memory into f6
fmsub.s f27, f3, f20, f6 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xf96bea12 # load x3 with value 0xf96bea12
sw x3, 0(x2) # store 0xf96bea12 in memory
flw f24, 0(x2) # load 0xf96bea12 from memory into f24
la x2, scratch
li x3, 0x35a0a308 # load x3 with value 0x35a0a308
sw x3, 0(x2) # store 0x35a0a308 in memory
flw f12, 0(x2) # load 0x35a0a308 from memory into f12
la x2, scratch
li x3, 0xa5e8e1a6 # load x3 with value 0xa5e8e1a6
sw x3, 0(x2) # store 0xa5e8e1a6 in memory
flw f15, 0(x2) # load 0xa5e8e1a6 from memory into f15
fmsub.s f28, f24, f12, f15 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x204ef0ac # load x3 with value 0x204ef0ac
sw x3, 0(x2) # store 0x204ef0ac in memory
flw f29, 0(x2) # load 0x204ef0ac from memory into f29
la x2, scratch
li x3, 0xcfae218f # load x3 with value 0xcfae218f
sw x3, 0(x2) # store 0xcfae218f in memory
flw f7, 0(x2) # load 0xcfae218f from memory into f7
la x2, scratch
li x3, 0xc3d91a7a # load x3 with value 0xc3d91a7a
sw x3, 0(x2) # store 0xc3d91a7a in memory
flw f18, 0(x2) # load 0xc3d91a7a from memory into f18
fmsub.s f29, f29, f7, f18 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0xf3432ada # load x3 with value 0xf3432ada
sw x3, 0(x2) # store 0xf3432ada in memory
flw f16, 0(x2) # load 0xf3432ada from memory into f16
la x2, scratch
li x3, 0x23f48c1d # load x3 with value 0x23f48c1d
sw x3, 0(x2) # store 0x23f48c1d in memory
flw f29, 0(x2) # load 0x23f48c1d from memory into f29
la x2, scratch
li x3, 0x4ae84bd8 # load x3 with value 0x4ae84bd8
sw x3, 0(x2) # store 0x4ae84bd8 in memory
flw f14, 0(x2) # load 0x4ae84bd8 from memory into f14
fmsub.s f30, f16, f29, f14 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x22d82c7b # load x3 with value 0x22d82c7b
sw x3, 0(x2) # store 0x22d82c7b in memory
flw f1, 0(x2) # load 0x22d82c7b from memory into f1
la x2, scratch
li x3, 0x278c2cdf # load x3 with value 0x278c2cdf
sw x3, 0(x2) # store 0x278c2cdf in memory
flw f19, 0(x2) # load 0x278c2cdf from memory into f19
la x2, scratch
li x3, 0x73a54cc0 # load x3 with value 0x73a54cc0
sw x3, 0(x2) # store 0x73a54cc0 in memory
flw f17, 0(x2) # load 0x73a54cc0 from memory into f17
fmsub.s f31, f1, f19, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x58990237 # load x3 with value 0x58990237
sw x3, 0(x2) # store 0x58990237 in memory
flw f21, 0(x2) # load 0x58990237 from memory into f21
la x2, scratch
li x3, 0x95a83b81 # load x3 with value 0x95a83b81
sw x3, 0(x2) # store 0x95a83b81 in memory
flw f9, 0(x2) # load 0x95a83b81 from memory into f9
fmsub.s f3, f6, f21, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xc780abe7 # load x3 with value 0xc780abe7
sw x3, 0(x2) # store 0xc780abe7 in memory
flw f18, 0(x2) # load 0xc780abe7 from memory into f18
la x2, scratch
li x3, 0x3b58f795 # load x3 with value 0x3b58f795
sw x3, 0(x2) # store 0x3b58f795 in memory
flw f29, 0(x2) # load 0x3b58f795 from memory into f29
fmsub.s f25, f13, f18, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x8c8b371e # load x3 with value 0x8c8b371e
sw x3, 0(x2) # store 0x8c8b371e in memory
flw f22, 0(x2) # load 0x8c8b371e from memory into f22
la x2, scratch
li x3, 0xe691395d # load x3 with value 0xe691395d
sw x3, 0(x2) # store 0xe691395d in memory
flw f19, 0(x2) # load 0xe691395d from memory into f19
fmsub.s f6, f2, f22, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xf04a9e69 # load x3 with value 0xf04a9e69
sw x3, 0(x2) # store 0xf04a9e69 in memory
flw f6, 0(x2) # load 0xf04a9e69 from memory into f6
la x2, scratch
li x3, 0x185309ec # load x3 with value 0x185309ec
sw x3, 0(x2) # store 0x185309ec in memory
flw f15, 0(x2) # load 0x185309ec from memory into f15
fmsub.s f5, f24, f6, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xd3fe794b # load x3 with value 0xd3fe794b
sw x3, 0(x2) # store 0xd3fe794b in memory
flw f23, 0(x2) # load 0xd3fe794b from memory into f23
la x2, scratch
li x3, 0xa10ba317 # load x3 with value 0xa10ba317
sw x3, 0(x2) # store 0xa10ba317 in memory
flw f30, 0(x2) # load 0xa10ba317 from memory into f30
fmsub.s f3, f11, f23, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x37caf4f4 # load x3 with value 0x37caf4f4
sw x3, 0(x2) # store 0x37caf4f4 in memory
flw f30, 0(x2) # load 0x37caf4f4 from memory into f30
la x2, scratch
li x3, 0x3106bc25 # load x3 with value 0x3106bc25
sw x3, 0(x2) # store 0x3106bc25 in memory
flw f16, 0(x2) # load 0x3106bc25 from memory into f16
fmsub.s f23, f5, f30, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xa0cbd785 # load x3 with value 0xa0cbd785
sw x3, 0(x2) # store 0xa0cbd785 in memory
flw f7, 0(x2) # load 0xa0cbd785 from memory into f7
la x2, scratch
li x3, 0xc4514dda # load x3 with value 0xc4514dda
sw x3, 0(x2) # store 0xc4514dda in memory
flw f10, 0(x2) # load 0xc4514dda from memory into f10
fmsub.s f2, f23, f7, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x6afd118d # load x3 with value 0x6afd118d
sw x3, 0(x2) # store 0x6afd118d in memory
flw f21, 0(x2) # load 0x6afd118d from memory into f21
la x2, scratch
li x3, 0x257282d6 # load x3 with value 0x257282d6
sw x3, 0(x2) # store 0x257282d6 in memory
flw f7, 0(x2) # load 0x257282d6 from memory into f7
fmsub.s f14, f6, f21, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x6adb72aa # load x3 with value 0x6adb72aa
sw x3, 0(x2) # store 0x6adb72aa in memory
flw f8, 0(x2) # load 0x6adb72aa from memory into f8
la x2, scratch
li x3, 0x1013dae3 # load x3 with value 0x1013dae3
sw x3, 0(x2) # store 0x1013dae3 in memory
flw f17, 0(x2) # load 0x1013dae3 from memory into f17
fmsub.s f10, f7, f8, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xfd42ab1f # load x3 with value 0xfd42ab1f
sw x3, 0(x2) # store 0xfd42ab1f in memory
flw f15, 0(x2) # load 0xfd42ab1f from memory into f15
la x2, scratch
li x3, 0x942bed70 # load x3 with value 0x942bed70
sw x3, 0(x2) # store 0x942bed70 in memory
flw f11, 0(x2) # load 0x942bed70 from memory into f11
fmsub.s f16, f3, f15, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xba88a70a # load x3 with value 0xba88a70a
sw x3, 0(x2) # store 0xba88a70a in memory
flw f19, 0(x2) # load 0xba88a70a from memory into f19
la x2, scratch
li x3, 0x72fc2b8a # load x3 with value 0x72fc2b8a
sw x3, 0(x2) # store 0x72fc2b8a in memory
flw f27, 0(x2) # load 0x72fc2b8a from memory into f27
fmsub.s f5, f16, f19, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xbd1a0208 # load x3 with value 0xbd1a0208
sw x3, 0(x2) # store 0xbd1a0208 in memory
flw f31, 0(x2) # load 0xbd1a0208 from memory into f31
la x2, scratch
li x3, 0x9e75dd36 # load x3 with value 0x9e75dd36
sw x3, 0(x2) # store 0x9e75dd36 in memory
flw f17, 0(x2) # load 0x9e75dd36 from memory into f17
fmsub.s f24, f27, f31, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x9e14e83f # load x3 with value 0x9e14e83f
sw x3, 0(x2) # store 0x9e14e83f in memory
flw f6, 0(x2) # load 0x9e14e83f from memory into f6
la x2, scratch
li x3, 0xddc29cd9 # load x3 with value 0xddc29cd9
sw x3, 0(x2) # store 0xddc29cd9 in memory
flw f10, 0(x2) # load 0xddc29cd9 from memory into f10
fmsub.s f29, f28, f6, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xcaa0e6ff # load x3 with value 0xcaa0e6ff
sw x3, 0(x2) # store 0xcaa0e6ff in memory
flw f19, 0(x2) # load 0xcaa0e6ff from memory into f19
la x2, scratch
li x3, 0xf28418a4 # load x3 with value 0xf28418a4
sw x3, 0(x2) # store 0xf28418a4 in memory
flw f20, 0(x2) # load 0xf28418a4 from memory into f20
fmsub.s f24, f2, f19, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x06c8add3 # load x3 with value 0x06c8add3
sw x3, 0(x2) # store 0x06c8add3 in memory
flw f17, 0(x2) # load 0x06c8add3 from memory into f17
la x2, scratch
li x3, 0x1021b5fa # load x3 with value 0x1021b5fa
sw x3, 0(x2) # store 0x1021b5fa in memory
flw f2, 0(x2) # load 0x1021b5fa from memory into f2
fmsub.s f31, f20, f17, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x4be6059a # load x3 with value 0x4be6059a
sw x3, 0(x2) # store 0x4be6059a in memory
flw f25, 0(x2) # load 0x4be6059a from memory into f25
la x2, scratch
li x3, 0x0d5f9815 # load x3 with value 0x0d5f9815
sw x3, 0(x2) # store 0x0d5f9815 in memory
flw f27, 0(x2) # load 0x0d5f9815 from memory into f27
fmsub.s f7, f23, f25, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x2128d281 # load x3 with value 0x2128d281
sw x3, 0(x2) # store 0x2128d281 in memory
flw f10, 0(x2) # load 0x2128d281 from memory into f10
la x2, scratch
li x3, 0x54e541d6 # load x3 with value 0x54e541d6
sw x3, 0(x2) # store 0x54e541d6 in memory
flw f11, 0(x2) # load 0x54e541d6 from memory into f11
fmsub.s f5, f25, f10, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xe0d9d043 # load x3 with value 0xe0d9d043
sw x3, 0(x2) # store 0xe0d9d043 in memory
flw f18, 0(x2) # load 0xe0d9d043 from memory into f18
la x2, scratch
li x3, 0x9bdbd73d # load x3 with value 0x9bdbd73d
sw x3, 0(x2) # store 0x9bdbd73d in memory
flw f23, 0(x2) # load 0x9bdbd73d from memory into f23
fmsub.s f19, f11, f18, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x5cf0fb4c # load x3 with value 0x5cf0fb4c
sw x3, 0(x2) # store 0x5cf0fb4c in memory
flw f16, 0(x2) # load 0x5cf0fb4c from memory into f16
la x2, scratch
li x3, 0x5a1ee3ef # load x3 with value 0x5a1ee3ef
sw x3, 0(x2) # store 0x5a1ee3ef in memory
flw f15, 0(x2) # load 0x5a1ee3ef from memory into f15
fmsub.s f28, f20, f16, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xb76a1ae1 # load x3 with value 0xb76a1ae1
sw x3, 0(x2) # store 0xb76a1ae1 in memory
flw f25, 0(x2) # load 0xb76a1ae1 from memory into f25
la x2, scratch
li x3, 0x5b338bf2 # load x3 with value 0x5b338bf2
sw x3, 0(x2) # store 0x5b338bf2 in memory
flw f15, 0(x2) # load 0x5b338bf2 from memory into f15
fmsub.s f19, f3, f25, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xa64bd8cc # load x3 with value 0xa64bd8cc
sw x3, 0(x2) # store 0xa64bd8cc in memory
flw f28, 0(x2) # load 0xa64bd8cc from memory into f28
la x2, scratch
li x3, 0x4ad0f7f4 # load x3 with value 0x4ad0f7f4
sw x3, 0(x2) # store 0x4ad0f7f4 in memory
flw f5, 0(x2) # load 0x4ad0f7f4 from memory into f5
fmsub.s f30, f13, f28, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xae44a538 # load x3 with value 0xae44a538
sw x3, 0(x2) # store 0xae44a538 in memory
flw f10, 0(x2) # load 0xae44a538 from memory into f10
la x2, scratch
li x3, 0x763795a9 # load x3 with value 0x763795a9
sw x3, 0(x2) # store 0x763795a9 in memory
flw f12, 0(x2) # load 0x763795a9 from memory into f12
fmsub.s f22, f1, f10, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x2c866c30 # load x3 with value 0x2c866c30
sw x3, 0(x2) # store 0x2c866c30 in memory
flw f19, 0(x2) # load 0x2c866c30 from memory into f19
la x2, scratch
li x3, 0xd84fba24 # load x3 with value 0xd84fba24
sw x3, 0(x2) # store 0xd84fba24 in memory
flw f13, 0(x2) # load 0xd84fba24 from memory into f13
fmsub.s f7, f20, f19, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x8803609c # load x3 with value 0x8803609c
sw x3, 0(x2) # store 0x8803609c in memory
flw f24, 0(x2) # load 0x8803609c from memory into f24
la x2, scratch
li x3, 0x6042edbf # load x3 with value 0x6042edbf
sw x3, 0(x2) # store 0x6042edbf in memory
flw f5, 0(x2) # load 0x6042edbf from memory into f5
fmsub.s f23, f18, f24, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x64701272 # load x3 with value 0x64701272
sw x3, 0(x2) # store 0x64701272 in memory
flw f8, 0(x2) # load 0x64701272 from memory into f8
la x2, scratch
li x3, 0xe7f8fe5c # load x3 with value 0xe7f8fe5c
sw x3, 0(x2) # store 0xe7f8fe5c in memory
flw f24, 0(x2) # load 0xe7f8fe5c from memory into f24
fmsub.s f10, f16, f8, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xbf004ab8 # load x3 with value 0xbf004ab8
sw x3, 0(x2) # store 0xbf004ab8 in memory
flw f27, 0(x2) # load 0xbf004ab8 from memory into f27
la x2, scratch
li x3, 0x3b0c4e97 # load x3 with value 0x3b0c4e97
sw x3, 0(x2) # store 0x3b0c4e97 in memory
flw f25, 0(x2) # load 0x3b0c4e97 from memory into f25
fmsub.s f26, f24, f27, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x5dbf3cf6 # load x3 with value 0x5dbf3cf6
sw x3, 0(x2) # store 0x5dbf3cf6 in memory
flw f19, 0(x2) # load 0x5dbf3cf6 from memory into f19
la x2, scratch
li x3, 0x36660543 # load x3 with value 0x36660543
sw x3, 0(x2) # store 0x36660543 in memory
flw f22, 0(x2) # load 0x36660543 from memory into f22
fmsub.s f5, f29, f19, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xcd465c76 # load x3 with value 0xcd465c76
sw x3, 0(x2) # store 0xcd465c76 in memory
flw f3, 0(x2) # load 0xcd465c76 from memory into f3
la x2, scratch
li x3, 0xa73046b7 # load x3 with value 0xa73046b7
sw x3, 0(x2) # store 0xa73046b7 in memory
flw f13, 0(x2) # load 0xa73046b7 from memory into f13
fmsub.s f15, f19, f3, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x78b54a56 # load x3 with value 0x78b54a56
sw x3, 0(x2) # store 0x78b54a56 in memory
flw f27, 0(x2) # load 0x78b54a56 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x4f1c67f0 # load x3 with value 0x4f1c67f0
sw x3, 0(x2) # store 0x4f1c67f0 in memory
flw f19, 0(x2) # load 0x4f1c67f0 from memory into f19
fmsub.s f2, f27, f10, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0xe64dcd6f # load x3 with value 0xe64dcd6f
sw x3, 0(x2) # store 0xe64dcd6f in memory
flw f1, 0(x2) # load 0xe64dcd6f from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x38dbbc58 # load x3 with value 0x38dbbc58
sw x3, 0(x2) # store 0x38dbbc58 in memory
flw f20, 0(x2) # load 0x38dbbc58 from memory into f20
fmsub.s f19, f1, f29, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0xf64531dd # load x3 with value 0xf64531dd
sw x3, 0(x2) # store 0xf64531dd in memory
flw f17, 0(x2) # load 0xf64531dd from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x5202ce93 # load x3 with value 0x5202ce93
sw x3, 0(x2) # store 0x5202ce93 in memory
flw f8, 0(x2) # load 0x5202ce93 from memory into f8
fmsub.s f14, f17, f29, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0x0e32613a # load x3 with value 0x0e32613a
sw x3, 0(x2) # store 0x0e32613a in memory
flw f28, 0(x2) # load 0x0e32613a from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x916d93a1 # load x3 with value 0x916d93a1
sw x3, 0(x2) # store 0x916d93a1 in memory
flw f25, 0(x2) # load 0x916d93a1 from memory into f25
fmsub.s f8, f28, f26, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0x8abc6a79 # load x3 with value 0x8abc6a79
sw x3, 0(x2) # store 0x8abc6a79 in memory
flw f28, 0(x2) # load 0x8abc6a79 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xbd16c2d4 # load x3 with value 0xbd16c2d4
sw x3, 0(x2) # store 0xbd16c2d4 in memory
flw f23, 0(x2) # load 0xbd16c2d4 from memory into f23
fmsub.s f20, f28, f16, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0x0b7d0235 # load x3 with value 0x0b7d0235
sw x3, 0(x2) # store 0x0b7d0235 in memory
flw f30, 0(x2) # load 0x0b7d0235 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xdc02b77f # load x3 with value 0xdc02b77f
sw x3, 0(x2) # store 0xdc02b77f in memory
flw f29, 0(x2) # load 0xdc02b77f from memory into f29
fmsub.s f1, f30, f23, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xbc66960a # load x3 with value 0xbc66960a
sw x3, 0(x2) # store 0xbc66960a in memory
flw f23, 0(x2) # load 0xbc66960a from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x1c8f2afb # load x3 with value 0x1c8f2afb
sw x3, 0(x2) # store 0x1c8f2afb in memory
flw f5, 0(x2) # load 0x1c8f2afb from memory into f5
fmsub.s f16, f23, f19, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0x5a2da26b # load x3 with value 0x5a2da26b
sw x3, 0(x2) # store 0x5a2da26b in memory
flw f10, 0(x2) # load 0x5a2da26b from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x10369da8 # load x3 with value 0x10369da8
sw x3, 0(x2) # store 0x10369da8 in memory
flw f24, 0(x2) # load 0x10369da8 from memory into f24
fmsub.s f8, f10, f23, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0x8fa8b35c # load x3 with value 0x8fa8b35c
sw x3, 0(x2) # store 0x8fa8b35c in memory
flw f27, 0(x2) # load 0x8fa8b35c from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x4f1b2bd2 # load x3 with value 0x4f1b2bd2
sw x3, 0(x2) # store 0x4f1b2bd2 in memory
flw f31, 0(x2) # load 0x4f1b2bd2 from memory into f31
fmsub.s f7, f27, f3, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0x1742a4c2 # load x3 with value 0x1742a4c2
sw x3, 0(x2) # store 0x1742a4c2 in memory
flw f29, 0(x2) # load 0x1742a4c2 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xe0307730 # load x3 with value 0xe0307730
sw x3, 0(x2) # store 0xe0307730 in memory
flw f28, 0(x2) # load 0xe0307730 from memory into f28
fmsub.s f30, f29, f6, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0xd43eddca # load x3 with value 0xd43eddca
sw x3, 0(x2) # store 0xd43eddca in memory
flw f12, 0(x2) # load 0xd43eddca from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x5c0adf35 # load x3 with value 0x5c0adf35
sw x3, 0(x2) # store 0x5c0adf35 in memory
flw f17, 0(x2) # load 0x5c0adf35 from memory into f17
fmsub.s f19, f12, f6, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0x979ce563 # load x3 with value 0x979ce563
sw x3, 0(x2) # store 0x979ce563 in memory
flw f19, 0(x2) # load 0x979ce563 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xb3d40d82 # load x3 with value 0xb3d40d82
sw x3, 0(x2) # store 0xb3d40d82 in memory
flw f10, 0(x2) # load 0xb3d40d82 from memory into f10
fmsub.s f15, f19, f7, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xb2d80721 # load x3 with value 0xb2d80721
sw x3, 0(x2) # store 0xb2d80721 in memory
flw f8, 0(x2) # load 0xb2d80721 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x5bbb66ef # load x3 with value 0x5bbb66ef
sw x3, 0(x2) # store 0x5bbb66ef in memory
flw f27, 0(x2) # load 0x5bbb66ef from memory into f27
fmsub.s f6, f8, f15, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0xe20d2fc5 # load x3 with value 0xe20d2fc5
sw x3, 0(x2) # store 0xe20d2fc5 in memory
flw f15, 0(x2) # load 0xe20d2fc5 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x37af11f7 # load x3 with value 0x37af11f7
sw x3, 0(x2) # store 0x37af11f7 in memory
flw f7, 0(x2) # load 0x37af11f7 from memory into f7
fmsub.s f16, f15, f31, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0xcdbc1c41 # load x3 with value 0xcdbc1c41
sw x3, 0(x2) # store 0xcdbc1c41 in memory
flw f19, 0(x2) # load 0xcdbc1c41 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xcffd6780 # load x3 with value 0xcffd6780
sw x3, 0(x2) # store 0xcffd6780 in memory
flw f22, 0(x2) # load 0xcffd6780 from memory into f22
fmsub.s f9, f19, f3, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x1f54cdd5 # load x3 with value 0x1f54cdd5
sw x3, 0(x2) # store 0x1f54cdd5 in memory
flw f25, 0(x2) # load 0x1f54cdd5 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x063f0714 # load x3 with value 0x063f0714
sw x3, 0(x2) # store 0x063f0714 in memory
flw f7, 0(x2) # load 0x063f0714 from memory into f7
fmsub.s f5, f25, f10, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x565628e6 # load x3 with value 0x565628e6
sw x3, 0(x2) # store 0x565628e6 in memory
flw f15, 0(x2) # load 0x565628e6 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x959b6526 # load x3 with value 0x959b6526
sw x3, 0(x2) # store 0x959b6526 in memory
flw f10, 0(x2) # load 0x959b6526 from memory into f10
fmsub.s f7, f15, f28, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0xb62934fa # load x3 with value 0xb62934fa
sw x3, 0(x2) # store 0xb62934fa in memory
flw f24, 0(x2) # load 0xb62934fa from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xc73e6f6d # load x3 with value 0xc73e6f6d
sw x3, 0(x2) # store 0xc73e6f6d in memory
flw f3, 0(x2) # load 0xc73e6f6d from memory into f3
fmsub.s f22, f24, f2, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0xd45cfb72 # load x3 with value 0xd45cfb72
sw x3, 0(x2) # store 0xd45cfb72 in memory
flw f1, 0(x2) # load 0xd45cfb72 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x20694fff # load x3 with value 0x20694fff
sw x3, 0(x2) # store 0x20694fff in memory
flw f13, 0(x2) # load 0x20694fff from memory into f13
fmsub.s f29, f1, f6, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0x887326c6 # load x3 with value 0x887326c6
sw x3, 0(x2) # store 0x887326c6 in memory
flw f1, 0(x2) # load 0x887326c6 from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x03d63b4a # load x3 with value 0x03d63b4a
sw x3, 0(x2) # store 0x03d63b4a in memory
flw f21, 0(x2) # load 0x03d63b4a from memory into f21
fmsub.s f26, f1, f5, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0xf5aefd71 # load x3 with value 0xf5aefd71
sw x3, 0(x2) # store 0xf5aefd71 in memory
flw f21, 0(x2) # load 0xf5aefd71 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xb04ea09c # load x3 with value 0xb04ea09c
sw x3, 0(x2) # store 0xb04ea09c in memory
flw f24, 0(x2) # load 0xb04ea09c from memory into f24
fmsub.s f19, f21, f28, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0xaaf2b714 # load x3 with value 0xaaf2b714
sw x3, 0(x2) # store 0xaaf2b714 in memory
flw f9, 0(x2) # load 0xaaf2b714 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x720d877e # load x3 with value 0x720d877e
sw x3, 0(x2) # store 0x720d877e in memory
flw f30, 0(x2) # load 0x720d877e from memory into f30
fmsub.s f1, f9, f20, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0xfe14df66 # load x3 with value 0xfe14df66
sw x3, 0(x2) # store 0xfe14df66 in memory
flw f9, 0(x2) # load 0xfe14df66 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x0ebdbd67 # load x3 with value 0x0ebdbd67
sw x3, 0(x2) # store 0x0ebdbd67 in memory
flw f6, 0(x2) # load 0x0ebdbd67 from memory into f6
fmsub.s f12, f9, f13, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x78eafc0a # load x3 with value 0x78eafc0a
sw x3, 0(x2) # store 0x78eafc0a in memory
flw f15, 0(x2) # load 0x78eafc0a from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xf173af6c # load x3 with value 0xf173af6c
sw x3, 0(x2) # store 0xf173af6c in memory
flw f5, 0(x2) # load 0xf173af6c from memory into f5
fmsub.s f23, f15, f8, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0xd8687089 # load x3 with value 0xd8687089
sw x3, 0(x2) # store 0xd8687089 in memory
flw f19, 0(x2) # load 0xd8687089 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0xf21edd48 # load x3 with value 0xf21edd48
sw x3, 0(x2) # store 0xf21edd48 in memory
flw f9, 0(x2) # load 0xf21edd48 from memory into f9
fmsub.s f27, f19, f24, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0x48df46a6 # load x3 with value 0x48df46a6
sw x3, 0(x2) # store 0x48df46a6 in memory
flw f10, 0(x2) # load 0x48df46a6 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xa57efbf9 # load x3 with value 0xa57efbf9
sw x3, 0(x2) # store 0xa57efbf9 in memory
flw f13, 0(x2) # load 0xa57efbf9 from memory into f13
fmsub.s f8, f10, f27, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0xe5d95c55 # load x3 with value 0xe5d95c55
sw x3, 0(x2) # store 0xe5d95c55 in memory
flw f30, 0(x2) # load 0xe5d95c55 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x2bb5f53a # load x3 with value 0x2bb5f53a
sw x3, 0(x2) # store 0x2bb5f53a in memory
flw f11, 0(x2) # load 0x2bb5f53a from memory into f11
fmsub.s f23, f30, f20, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0x8ac0b070 # load x3 with value 0x8ac0b070
sw x3, 0(x2) # store 0x8ac0b070 in memory
flw f10, 0(x2) # load 0x8ac0b070 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x774b2853 # load x3 with value 0x774b2853
sw x3, 0(x2) # store 0x774b2853 in memory
flw f25, 0(x2) # load 0x774b2853 from memory into f25
fmsub.s f11, f10, f29, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0x4d09b6fa # load x3 with value 0x4d09b6fa
sw x3, 0(x2) # store 0x4d09b6fa in memory
flw f21, 0(x2) # load 0x4d09b6fa from memory into f21
la x2, scratch
li x3, 0xfc158734 # load x3 with value 0xfc158734
sw x3, 0(x2) # store 0xfc158734 in memory
flw f6, 0(x2) # load 0xfc158734 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f12, f21, f6, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0x88da1a2e # load x3 with value 0x88da1a2e
sw x3, 0(x2) # store 0x88da1a2e in memory
flw f14, 0(x2) # load 0x88da1a2e from memory into f14
la x2, scratch
li x3, 0x00da1ca1 # load x3 with value 0x00da1ca1
sw x3, 0(x2) # store 0x00da1ca1 in memory
flw f21, 0(x2) # load 0x00da1ca1 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmsub.s f12, f14, f21, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x9bcd5fd6 # load x3 with value 0x9bcd5fd6
sw x3, 0(x2) # store 0x9bcd5fd6 in memory
flw f7, 0(x2) # load 0x9bcd5fd6 from memory into f7
la x2, scratch
li x3, 0x46a069a3 # load x3 with value 0x46a069a3
sw x3, 0(x2) # store 0x46a069a3 in memory
flw f21, 0(x2) # load 0x46a069a3 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fmsub.s f14, f7, f21, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x0276ab46 # load x3 with value 0x0276ab46
sw x3, 0(x2) # store 0x0276ab46 in memory
flw f7, 0(x2) # load 0x0276ab46 from memory into f7
la x2, scratch
li x3, 0xe030ccb9 # load x3 with value 0xe030ccb9
sw x3, 0(x2) # store 0xe030ccb9 in memory
flw f14, 0(x2) # load 0xe030ccb9 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f30, f7, f14, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0xbf635954 # load x3 with value 0xbf635954
sw x3, 0(x2) # store 0xbf635954 in memory
flw f5, 0(x2) # load 0xbf635954 from memory into f5
la x2, scratch
li x3, 0x2930dc2e # load x3 with value 0x2930dc2e
sw x3, 0(x2) # store 0x2930dc2e in memory
flw f30, 0(x2) # load 0x2930dc2e from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmsub.s f15, f5, f30, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0x7ac85aac # load x3 with value 0x7ac85aac
sw x3, 0(x2) # store 0x7ac85aac in memory
flw f24, 0(x2) # load 0x7ac85aac from memory into f24
la x2, scratch
li x3, 0x0a5cb733 # load x3 with value 0x0a5cb733
sw x3, 0(x2) # store 0x0a5cb733 in memory
flw f10, 0(x2) # load 0x0a5cb733 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fmsub.s f16, f24, f10, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0xc58c7d20 # load x3 with value 0xc58c7d20
sw x3, 0(x2) # store 0xc58c7d20 in memory
flw f25, 0(x2) # load 0xc58c7d20 from memory into f25
la x2, scratch
li x3, 0xd3a15235 # load x3 with value 0xd3a15235
sw x3, 0(x2) # store 0xd3a15235 in memory
flw f11, 0(x2) # load 0xd3a15235 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f27, f25, f11, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0x8865ffe7 # load x3 with value 0x8865ffe7
sw x3, 0(x2) # store 0x8865ffe7 in memory
flw f26, 0(x2) # load 0x8865ffe7 from memory into f26
la x2, scratch
li x3, 0x39bdd23e # load x3 with value 0x39bdd23e
sw x3, 0(x2) # store 0x39bdd23e in memory
flw f27, 0(x2) # load 0x39bdd23e from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmsub.s f3, f26, f27, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0xaf957dd7 # load x3 with value 0xaf957dd7
sw x3, 0(x2) # store 0xaf957dd7 in memory
flw f19, 0(x2) # load 0xaf957dd7 from memory into f19
la x2, scratch
li x3, 0x7184f319 # load x3 with value 0x7184f319
sw x3, 0(x2) # store 0x7184f319 in memory
flw f27, 0(x2) # load 0x7184f319 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmsub.s f31, f19, f27, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0x97fd2afd # load x3 with value 0x97fd2afd
sw x3, 0(x2) # store 0x97fd2afd in memory
flw f16, 0(x2) # load 0x97fd2afd from memory into f16
la x2, scratch
li x3, 0x1749e06c # load x3 with value 0x1749e06c
sw x3, 0(x2) # store 0x1749e06c in memory
flw f17, 0(x2) # load 0x1749e06c from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f11, f16, f17, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x1ced207d # load x3 with value 0x1ced207d
sw x3, 0(x2) # store 0x1ced207d in memory
flw f18, 0(x2) # load 0x1ced207d from memory into f18
la x2, scratch
li x3, 0x21122b6c # load x3 with value 0x21122b6c
sw x3, 0(x2) # store 0x21122b6c in memory
flw f10, 0(x2) # load 0x21122b6c from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmsub.s f27, f18, f10, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0xfa8f906a # load x3 with value 0xfa8f906a
sw x3, 0(x2) # store 0xfa8f906a in memory
flw f31, 0(x2) # load 0xfa8f906a from memory into f31
la x2, scratch
li x3, 0x771b1fa3 # load x3 with value 0x771b1fa3
sw x3, 0(x2) # store 0x771b1fa3 in memory
flw f2, 0(x2) # load 0x771b1fa3 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f6, f31, f2, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0x1e4ed016 # load x3 with value 0x1e4ed016
sw x3, 0(x2) # store 0x1e4ed016 in memory
flw f27, 0(x2) # load 0x1e4ed016 from memory into f27
la x2, scratch
li x3, 0x19d291c5 # load x3 with value 0x19d291c5
sw x3, 0(x2) # store 0x19d291c5 in memory
flw f31, 0(x2) # load 0x19d291c5 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f22, f27, f31, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0xa5d71cc5 # load x3 with value 0xa5d71cc5
sw x3, 0(x2) # store 0xa5d71cc5 in memory
flw f6, 0(x2) # load 0xa5d71cc5 from memory into f6
la x2, scratch
li x3, 0x6ec495d1 # load x3 with value 0x6ec495d1
sw x3, 0(x2) # store 0x6ec495d1 in memory
flw f7, 0(x2) # load 0x6ec495d1 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f30, f6, f7, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0x7c69d6d1 # load x3 with value 0x7c69d6d1
sw x3, 0(x2) # store 0x7c69d6d1 in memory
flw f8, 0(x2) # load 0x7c69d6d1 from memory into f8
la x2, scratch
li x3, 0x3f6c7e53 # load x3 with value 0x3f6c7e53
sw x3, 0(x2) # store 0x3f6c7e53 in memory
flw f7, 0(x2) # load 0x3f6c7e53 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f9, f8, f7, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0xabfba910 # load x3 with value 0xabfba910
sw x3, 0(x2) # store 0xabfba910 in memory
flw f13, 0(x2) # load 0xabfba910 from memory into f13
la x2, scratch
li x3, 0x6da82005 # load x3 with value 0x6da82005
sw x3, 0(x2) # store 0x6da82005 in memory
flw f6, 0(x2) # load 0x6da82005 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmsub.s f1, f13, f6, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x2fcc4304 # load x3 with value 0x2fcc4304
sw x3, 0(x2) # store 0x2fcc4304 in memory
flw f6, 0(x2) # load 0x2fcc4304 from memory into f6
la x2, scratch
li x3, 0x128eae29 # load x3 with value 0x128eae29
sw x3, 0(x2) # store 0x128eae29 in memory
flw f19, 0(x2) # load 0x128eae29 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmsub.s f15, f6, f19, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0x3ded139d # load x3 with value 0x3ded139d
sw x3, 0(x2) # store 0x3ded139d in memory
flw f29, 0(x2) # load 0x3ded139d from memory into f29
la x2, scratch
li x3, 0x67610da1 # load x3 with value 0x67610da1
sw x3, 0(x2) # store 0x67610da1 in memory
flw f13, 0(x2) # load 0x67610da1 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmsub.s f7, f29, f13, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0xc351f367 # load x3 with value 0xc351f367
sw x3, 0(x2) # store 0xc351f367 in memory
flw f28, 0(x2) # load 0xc351f367 from memory into f28
la x2, scratch
li x3, 0x0f3bbffa # load x3 with value 0x0f3bbffa
sw x3, 0(x2) # store 0x0f3bbffa in memory
flw f6, 0(x2) # load 0x0f3bbffa from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f26, f28, f6, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0xf200b4c5 # load x3 with value 0xf200b4c5
sw x3, 0(x2) # store 0xf200b4c5 in memory
flw f26, 0(x2) # load 0xf200b4c5 from memory into f26
la x2, scratch
li x3, 0x5e243942 # load x3 with value 0x5e243942
sw x3, 0(x2) # store 0x5e243942 in memory
flw f10, 0(x2) # load 0x5e243942 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f19, f26, f10, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0x455e98b6 # load x3 with value 0x455e98b6
sw x3, 0(x2) # store 0x455e98b6 in memory
flw f7, 0(x2) # load 0x455e98b6 from memory into f7
la x2, scratch
li x3, 0x3b1a689c # load x3 with value 0x3b1a689c
sw x3, 0(x2) # store 0x3b1a689c in memory
flw f9, 0(x2) # load 0x3b1a689c from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmsub.s f22, f7, f9, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0xeee5b1a6 # load x3 with value 0xeee5b1a6
sw x3, 0(x2) # store 0xeee5b1a6 in memory
flw f19, 0(x2) # load 0xeee5b1a6 from memory into f19
la x2, scratch
li x3, 0x78225163 # load x3 with value 0x78225163
sw x3, 0(x2) # store 0x78225163 in memory
flw f6, 0(x2) # load 0x78225163 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmsub.s f26, f19, f6, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0x652e86b0 # load x3 with value 0x652e86b0
sw x3, 0(x2) # store 0x652e86b0 in memory
flw f21, 0(x2) # load 0x652e86b0 from memory into f21
la x2, scratch
li x3, 0x0ec7fb71 # load x3 with value 0x0ec7fb71
sw x3, 0(x2) # store 0x0ec7fb71 in memory
flw f14, 0(x2) # load 0x0ec7fb71 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmsub.s f20, f21, f14, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0x2c071eae # load x3 with value 0x2c071eae
sw x3, 0(x2) # store 0x2c071eae in memory
flw f22, 0(x2) # load 0x2c071eae from memory into f22
la x2, scratch
li x3, 0xb21552ea # load x3 with value 0xb21552ea
sw x3, 0(x2) # store 0xb21552ea in memory
flw f15, 0(x2) # load 0xb21552ea from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f8, f22, f15, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x7c0abae3 # load x3 with value 0x7c0abae3
sw x3, 0(x2) # store 0x7c0abae3 in memory
flw f25, 0(x2) # load 0x7c0abae3 from memory into f25
la x2, scratch
li x3, 0x58f0d9f3 # load x3 with value 0x58f0d9f3
sw x3, 0(x2) # store 0x58f0d9f3 in memory
flw f28, 0(x2) # load 0x58f0d9f3 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmsub.s f2, f25, f28, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0x615d7d05 # load x3 with value 0x615d7d05
sw x3, 0(x2) # store 0x615d7d05 in memory
flw f28, 0(x2) # load 0x615d7d05 from memory into f28
la x2, scratch
li x3, 0xb39bf336 # load x3 with value 0xb39bf336
sw x3, 0(x2) # store 0xb39bf336 in memory
flw f20, 0(x2) # load 0xb39bf336 from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmsub.s f31, f28, f20, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x3b1b6a5f # load x3 with value 0x3b1b6a5f
sw x3, 0(x2) # store 0x3b1b6a5f in memory
flw f20, 0(x2) # load 0x3b1b6a5f from memory into f20
la x2, scratch
li x3, 0x5239c025 # load x3 with value 0x5239c025
sw x3, 0(x2) # store 0x5239c025 in memory
flw f28, 0(x2) # load 0x5239c025 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmsub.s f16, f20, f28, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x5c68d552 # load x3 with value 0x5c68d552
sw x3, 0(x2) # store 0x5c68d552 in memory
flw f26, 0(x2) # load 0x5c68d552 from memory into f26
la x2, scratch
li x3, 0x2780bb1f # load x3 with value 0x2780bb1f
sw x3, 0(x2) # store 0x2780bb1f in memory
flw f10, 0(x2) # load 0x2780bb1f from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f12, f26, f10, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x7a9934f4 # load x3 with value 0x7a9934f4
sw x3, 0(x2) # store 0x7a9934f4 in memory
flw f0, 0(x2) # load 0x7a9934f4 from memory into f0
la x2, scratch
li x3, 0x8c703d34 # load x3 with value 0x8c703d34
sw x3, 0(x2) # store 0x8c703d34 in memory
flw f24, 0(x2) # load 0x8c703d34 from memory into f24
la x2, scratch
li x3, 0xf60f889e # load x3 with value 0xf60f889e
sw x3, 0(x2) # store 0xf60f889e in memory
flw f17, 0(x2) # load 0xf60f889e from memory into f17
fmsub.s f0, f0, f24, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x4479f9d3 # load x3 with value 0x4479f9d3
sw x3, 0(x2) # store 0x4479f9d3 in memory
flw f1, 0(x2) # load 0x4479f9d3 from memory into f1
la x2, scratch
li x3, 0x5c5145ee # load x3 with value 0x5c5145ee
sw x3, 0(x2) # store 0x5c5145ee in memory
flw f12, 0(x2) # load 0x5c5145ee from memory into f12
la x2, scratch
li x3, 0xb1a043ba # load x3 with value 0xb1a043ba
sw x3, 0(x2) # store 0xb1a043ba in memory
flw f14, 0(x2) # load 0xb1a043ba from memory into f14
fmsub.s f1, f1, f12, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x2a2e8c49 # load x3 with value 0x2a2e8c49
sw x3, 0(x2) # store 0x2a2e8c49 in memory
flw f2, 0(x2) # load 0x2a2e8c49 from memory into f2
la x2, scratch
li x3, 0xfa75fa3a # load x3 with value 0xfa75fa3a
sw x3, 0(x2) # store 0xfa75fa3a in memory
flw f31, 0(x2) # load 0xfa75fa3a from memory into f31
la x2, scratch
li x3, 0x87f1c610 # load x3 with value 0x87f1c610
sw x3, 0(x2) # store 0x87f1c610 in memory
flw f16, 0(x2) # load 0x87f1c610 from memory into f16
fmsub.s f2, f2, f31, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0xb2e81003 # load x3 with value 0xb2e81003
sw x3, 0(x2) # store 0xb2e81003 in memory
flw f3, 0(x2) # load 0xb2e81003 from memory into f3
la x2, scratch
li x3, 0x6e6304ca # load x3 with value 0x6e6304ca
sw x3, 0(x2) # store 0x6e6304ca in memory
flw f18, 0(x2) # load 0x6e6304ca from memory into f18
la x2, scratch
li x3, 0x9349183b # load x3 with value 0x9349183b
sw x3, 0(x2) # store 0x9349183b in memory
flw f26, 0(x2) # load 0x9349183b from memory into f26
fmsub.s f3, f3, f18, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa61eacc5 # load x3 with value 0xa61eacc5
sw x3, 0(x2) # store 0xa61eacc5 in memory
flw f4, 0(x2) # load 0xa61eacc5 from memory into f4
la x2, scratch
li x3, 0x67a0e3a0 # load x3 with value 0x67a0e3a0
sw x3, 0(x2) # store 0x67a0e3a0 in memory
flw f23, 0(x2) # load 0x67a0e3a0 from memory into f23
la x2, scratch
li x3, 0x3867b222 # load x3 with value 0x3867b222
sw x3, 0(x2) # store 0x3867b222 in memory
flw f15, 0(x2) # load 0x3867b222 from memory into f15
fmsub.s f4, f4, f23, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb7cfad1a # load x3 with value 0xb7cfad1a
sw x3, 0(x2) # store 0xb7cfad1a in memory
flw f5, 0(x2) # load 0xb7cfad1a from memory into f5
la x2, scratch
li x3, 0x10bee722 # load x3 with value 0x10bee722
sw x3, 0(x2) # store 0x10bee722 in memory
flw f29, 0(x2) # load 0x10bee722 from memory into f29
la x2, scratch
li x3, 0x0119c266 # load x3 with value 0x0119c266
sw x3, 0(x2) # store 0x0119c266 in memory
flw f2, 0(x2) # load 0x0119c266 from memory into f2
fmsub.s f5, f5, f29, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfac9a709 # load x3 with value 0xfac9a709
sw x3, 0(x2) # store 0xfac9a709 in memory
flw f6, 0(x2) # load 0xfac9a709 from memory into f6
la x2, scratch
li x3, 0x39beebdb # load x3 with value 0x39beebdb
sw x3, 0(x2) # store 0x39beebdb in memory
flw f1, 0(x2) # load 0x39beebdb from memory into f1
la x2, scratch
li x3, 0x0201699b # load x3 with value 0x0201699b
sw x3, 0(x2) # store 0x0201699b in memory
flw f9, 0(x2) # load 0x0201699b from memory into f9
fmsub.s f6, f6, f1, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfa81f158 # load x3 with value 0xfa81f158
sw x3, 0(x2) # store 0xfa81f158 in memory
flw f7, 0(x2) # load 0xfa81f158 from memory into f7
la x2, scratch
li x3, 0xbd5b3eda # load x3 with value 0xbd5b3eda
sw x3, 0(x2) # store 0xbd5b3eda in memory
flw f11, 0(x2) # load 0xbd5b3eda from memory into f11
la x2, scratch
li x3, 0x3e556b6f # load x3 with value 0x3e556b6f
sw x3, 0(x2) # store 0x3e556b6f in memory
flw f1, 0(x2) # load 0x3e556b6f from memory into f1
fmsub.s f7, f7, f11, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x0602566e # load x3 with value 0x0602566e
sw x3, 0(x2) # store 0x0602566e in memory
flw f8, 0(x2) # load 0x0602566e from memory into f8
la x2, scratch
li x3, 0xc9209561 # load x3 with value 0xc9209561
sw x3, 0(x2) # store 0xc9209561 in memory
flw f12, 0(x2) # load 0xc9209561 from memory into f12
la x2, scratch
li x3, 0x2e00d17e # load x3 with value 0x2e00d17e
sw x3, 0(x2) # store 0x2e00d17e in memory
flw f29, 0(x2) # load 0x2e00d17e from memory into f29
fmsub.s f8, f8, f12, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xd68cd2e7 # load x3 with value 0xd68cd2e7
sw x3, 0(x2) # store 0xd68cd2e7 in memory
flw f9, 0(x2) # load 0xd68cd2e7 from memory into f9
la x2, scratch
li x3, 0x07aaf989 # load x3 with value 0x07aaf989
sw x3, 0(x2) # store 0x07aaf989 in memory
flw f26, 0(x2) # load 0x07aaf989 from memory into f26
la x2, scratch
li x3, 0x1af48679 # load x3 with value 0x1af48679
sw x3, 0(x2) # store 0x1af48679 in memory
flw f18, 0(x2) # load 0x1af48679 from memory into f18
fmsub.s f9, f9, f26, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x9a9ce2ce # load x3 with value 0x9a9ce2ce
sw x3, 0(x2) # store 0x9a9ce2ce in memory
flw f10, 0(x2) # load 0x9a9ce2ce from memory into f10
la x2, scratch
li x3, 0x1b1accc8 # load x3 with value 0x1b1accc8
sw x3, 0(x2) # store 0x1b1accc8 in memory
flw f25, 0(x2) # load 0x1b1accc8 from memory into f25
la x2, scratch
li x3, 0x50180191 # load x3 with value 0x50180191
sw x3, 0(x2) # store 0x50180191 in memory
flw f24, 0(x2) # load 0x50180191 from memory into f24
fmsub.s f10, f10, f25, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x66cc84b8 # load x3 with value 0x66cc84b8
sw x3, 0(x2) # store 0x66cc84b8 in memory
flw f11, 0(x2) # load 0x66cc84b8 from memory into f11
la x2, scratch
li x3, 0xf7e6e71a # load x3 with value 0xf7e6e71a
sw x3, 0(x2) # store 0xf7e6e71a in memory
flw f16, 0(x2) # load 0xf7e6e71a from memory into f16
la x2, scratch
li x3, 0x8a095c5b # load x3 with value 0x8a095c5b
sw x3, 0(x2) # store 0x8a095c5b in memory
flw f24, 0(x2) # load 0x8a095c5b from memory into f24
fmsub.s f11, f11, f16, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x4504650c # load x3 with value 0x4504650c
sw x3, 0(x2) # store 0x4504650c in memory
flw f12, 0(x2) # load 0x4504650c from memory into f12
la x2, scratch
li x3, 0x96bd1a1c # load x3 with value 0x96bd1a1c
sw x3, 0(x2) # store 0x96bd1a1c in memory
flw f26, 0(x2) # load 0x96bd1a1c from memory into f26
la x2, scratch
li x3, 0x19181b9f # load x3 with value 0x19181b9f
sw x3, 0(x2) # store 0x19181b9f in memory
flw f16, 0(x2) # load 0x19181b9f from memory into f16
fmsub.s f12, f12, f26, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x345b5ea6 # load x3 with value 0x345b5ea6
sw x3, 0(x2) # store 0x345b5ea6 in memory
flw f13, 0(x2) # load 0x345b5ea6 from memory into f13
la x2, scratch
li x3, 0xbd246556 # load x3 with value 0xbd246556
sw x3, 0(x2) # store 0xbd246556 in memory
flw f10, 0(x2) # load 0xbd246556 from memory into f10
la x2, scratch
li x3, 0x269188ba # load x3 with value 0x269188ba
sw x3, 0(x2) # store 0x269188ba in memory
flw f2, 0(x2) # load 0x269188ba from memory into f2
fmsub.s f13, f13, f10, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x862f02e6 # load x3 with value 0x862f02e6
sw x3, 0(x2) # store 0x862f02e6 in memory
flw f14, 0(x2) # load 0x862f02e6 from memory into f14
la x2, scratch
li x3, 0x89780a0e # load x3 with value 0x89780a0e
sw x3, 0(x2) # store 0x89780a0e in memory
flw f15, 0(x2) # load 0x89780a0e from memory into f15
la x2, scratch
li x3, 0x98b4bd34 # load x3 with value 0x98b4bd34
sw x3, 0(x2) # store 0x98b4bd34 in memory
flw f20, 0(x2) # load 0x98b4bd34 from memory into f20
fmsub.s f14, f14, f15, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xa65ab96b # load x3 with value 0xa65ab96b
sw x3, 0(x2) # store 0xa65ab96b in memory
flw f15, 0(x2) # load 0xa65ab96b from memory into f15
la x2, scratch
li x3, 0xede755ec # load x3 with value 0xede755ec
sw x3, 0(x2) # store 0xede755ec in memory
flw f21, 0(x2) # load 0xede755ec from memory into f21
la x2, scratch
li x3, 0xf880e0df # load x3 with value 0xf880e0df
sw x3, 0(x2) # store 0xf880e0df in memory
flw f6, 0(x2) # load 0xf880e0df from memory into f6
fmsub.s f15, f15, f21, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0xe76ed1bc # load x3 with value 0xe76ed1bc
sw x3, 0(x2) # store 0xe76ed1bc in memory
flw f16, 0(x2) # load 0xe76ed1bc from memory into f16
la x2, scratch
li x3, 0xcad5cd07 # load x3 with value 0xcad5cd07
sw x3, 0(x2) # store 0xcad5cd07 in memory
flw f20, 0(x2) # load 0xcad5cd07 from memory into f20
la x2, scratch
li x3, 0xe76684ea # load x3 with value 0xe76684ea
sw x3, 0(x2) # store 0xe76684ea in memory
flw f21, 0(x2) # load 0xe76684ea from memory into f21
fmsub.s f16, f16, f20, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xf358c3cf # load x3 with value 0xf358c3cf
sw x3, 0(x2) # store 0xf358c3cf in memory
flw f17, 0(x2) # load 0xf358c3cf from memory into f17
la x2, scratch
li x3, 0x290af807 # load x3 with value 0x290af807
sw x3, 0(x2) # store 0x290af807 in memory
flw f6, 0(x2) # load 0x290af807 from memory into f6
la x2, scratch
li x3, 0xde48ac26 # load x3 with value 0xde48ac26
sw x3, 0(x2) # store 0xde48ac26 in memory
flw f7, 0(x2) # load 0xde48ac26 from memory into f7
fmsub.s f17, f17, f6, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xb131f5cc # load x3 with value 0xb131f5cc
sw x3, 0(x2) # store 0xb131f5cc in memory
flw f18, 0(x2) # load 0xb131f5cc from memory into f18
la x2, scratch
li x3, 0xfb21e258 # load x3 with value 0xfb21e258
sw x3, 0(x2) # store 0xfb21e258 in memory
flw f27, 0(x2) # load 0xfb21e258 from memory into f27
la x2, scratch
li x3, 0xe576cea4 # load x3 with value 0xe576cea4
sw x3, 0(x2) # store 0xe576cea4 in memory
flw f26, 0(x2) # load 0xe576cea4 from memory into f26
fmsub.s f18, f18, f27, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0xd18dff55 # load x3 with value 0xd18dff55
sw x3, 0(x2) # store 0xd18dff55 in memory
flw f19, 0(x2) # load 0xd18dff55 from memory into f19
la x2, scratch
li x3, 0x711ae416 # load x3 with value 0x711ae416
sw x3, 0(x2) # store 0x711ae416 in memory
flw f1, 0(x2) # load 0x711ae416 from memory into f1
la x2, scratch
li x3, 0x205fef0f # load x3 with value 0x205fef0f
sw x3, 0(x2) # store 0x205fef0f in memory
flw f24, 0(x2) # load 0x205fef0f from memory into f24
fmsub.s f19, f19, f1, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x0446858f # load x3 with value 0x0446858f
sw x3, 0(x2) # store 0x0446858f in memory
flw f20, 0(x2) # load 0x0446858f from memory into f20
la x2, scratch
li x3, 0x8d09b773 # load x3 with value 0x8d09b773
sw x3, 0(x2) # store 0x8d09b773 in memory
flw f18, 0(x2) # load 0x8d09b773 from memory into f18
la x2, scratch
li x3, 0x2704e4d4 # load x3 with value 0x2704e4d4
sw x3, 0(x2) # store 0x2704e4d4 in memory
flw f28, 0(x2) # load 0x2704e4d4 from memory into f28
fmsub.s f20, f20, f18, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0xfa4273d4 # load x3 with value 0xfa4273d4
sw x3, 0(x2) # store 0xfa4273d4 in memory
flw f21, 0(x2) # load 0xfa4273d4 from memory into f21
la x2, scratch
li x3, 0xfaa407c8 # load x3 with value 0xfaa407c8
sw x3, 0(x2) # store 0xfaa407c8 in memory
flw f30, 0(x2) # load 0xfaa407c8 from memory into f30
la x2, scratch
li x3, 0xa225676f # load x3 with value 0xa225676f
sw x3, 0(x2) # store 0xa225676f in memory
flw f27, 0(x2) # load 0xa225676f from memory into f27
fmsub.s f21, f21, f30, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0xf02c17c2 # load x3 with value 0xf02c17c2
sw x3, 0(x2) # store 0xf02c17c2 in memory
flw f22, 0(x2) # load 0xf02c17c2 from memory into f22
la x2, scratch
li x3, 0x7824c81e # load x3 with value 0x7824c81e
sw x3, 0(x2) # store 0x7824c81e in memory
flw f20, 0(x2) # load 0x7824c81e from memory into f20
la x2, scratch
li x3, 0x40f68abf # load x3 with value 0x40f68abf
sw x3, 0(x2) # store 0x40f68abf in memory
flw f14, 0(x2) # load 0x40f68abf from memory into f14
fmsub.s f22, f22, f20, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0xe888c490 # load x3 with value 0xe888c490
sw x3, 0(x2) # store 0xe888c490 in memory
flw f23, 0(x2) # load 0xe888c490 from memory into f23
la x2, scratch
li x3, 0x613906ff # load x3 with value 0x613906ff
sw x3, 0(x2) # store 0x613906ff in memory
flw f13, 0(x2) # load 0x613906ff from memory into f13
la x2, scratch
li x3, 0x0a3ef987 # load x3 with value 0x0a3ef987
sw x3, 0(x2) # store 0x0a3ef987 in memory
flw f5, 0(x2) # load 0x0a3ef987 from memory into f5
fmsub.s f23, f23, f13, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0x3c505384 # load x3 with value 0x3c505384
sw x3, 0(x2) # store 0x3c505384 in memory
flw f24, 0(x2) # load 0x3c505384 from memory into f24
la x2, scratch
li x3, 0x888edcc7 # load x3 with value 0x888edcc7
sw x3, 0(x2) # store 0x888edcc7 in memory
flw f25, 0(x2) # load 0x888edcc7 from memory into f25
la x2, scratch
li x3, 0x4f1b4040 # load x3 with value 0x4f1b4040
sw x3, 0(x2) # store 0x4f1b4040 in memory
flw f16, 0(x2) # load 0x4f1b4040 from memory into f16
fmsub.s f24, f24, f25, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x5683e4ed # load x3 with value 0x5683e4ed
sw x3, 0(x2) # store 0x5683e4ed in memory
flw f25, 0(x2) # load 0x5683e4ed from memory into f25
la x2, scratch
li x3, 0xeb690b6c # load x3 with value 0xeb690b6c
sw x3, 0(x2) # store 0xeb690b6c in memory
flw f22, 0(x2) # load 0xeb690b6c from memory into f22
la x2, scratch
li x3, 0xdefbf371 # load x3 with value 0xdefbf371
sw x3, 0(x2) # store 0xdefbf371 in memory
flw f11, 0(x2) # load 0xdefbf371 from memory into f11
fmsub.s f25, f25, f22, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x224a54e0 # load x3 with value 0x224a54e0
sw x3, 0(x2) # store 0x224a54e0 in memory
flw f26, 0(x2) # load 0x224a54e0 from memory into f26
la x2, scratch
li x3, 0xf446b554 # load x3 with value 0xf446b554
sw x3, 0(x2) # store 0xf446b554 in memory
flw f13, 0(x2) # load 0xf446b554 from memory into f13
la x2, scratch
li x3, 0x79aa9a33 # load x3 with value 0x79aa9a33
sw x3, 0(x2) # store 0x79aa9a33 in memory
flw f6, 0(x2) # load 0x79aa9a33 from memory into f6
fmsub.s f26, f26, f13, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0xdf932521 # load x3 with value 0xdf932521
sw x3, 0(x2) # store 0xdf932521 in memory
flw f27, 0(x2) # load 0xdf932521 from memory into f27
la x2, scratch
li x3, 0xd9a5150d # load x3 with value 0xd9a5150d
sw x3, 0(x2) # store 0xd9a5150d in memory
flw f25, 0(x2) # load 0xd9a5150d from memory into f25
la x2, scratch
li x3, 0x18eb6dc2 # load x3 with value 0x18eb6dc2
sw x3, 0(x2) # store 0x18eb6dc2 in memory
flw f12, 0(x2) # load 0x18eb6dc2 from memory into f12
fmsub.s f27, f27, f25, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x1db436b1 # load x3 with value 0x1db436b1
sw x3, 0(x2) # store 0x1db436b1 in memory
flw f28, 0(x2) # load 0x1db436b1 from memory into f28
la x2, scratch
li x3, 0xf07e54d5 # load x3 with value 0xf07e54d5
sw x3, 0(x2) # store 0xf07e54d5 in memory
flw f31, 0(x2) # load 0xf07e54d5 from memory into f31
la x2, scratch
li x3, 0x73912603 # load x3 with value 0x73912603
sw x3, 0(x2) # store 0x73912603 in memory
flw f10, 0(x2) # load 0x73912603 from memory into f10
fmsub.s f28, f28, f31, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x9a68d785 # load x3 with value 0x9a68d785
sw x3, 0(x2) # store 0x9a68d785 in memory
flw f29, 0(x2) # load 0x9a68d785 from memory into f29
la x2, scratch
li x3, 0xda534d0d # load x3 with value 0xda534d0d
sw x3, 0(x2) # store 0xda534d0d in memory
flw f3, 0(x2) # load 0xda534d0d from memory into f3
la x2, scratch
li x3, 0xb9b3bacc # load x3 with value 0xb9b3bacc
sw x3, 0(x2) # store 0xb9b3bacc in memory
flw f10, 0(x2) # load 0xb9b3bacc from memory into f10
fmsub.s f29, f29, f3, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x9d81798a # load x3 with value 0x9d81798a
sw x3, 0(x2) # store 0x9d81798a in memory
flw f30, 0(x2) # load 0x9d81798a from memory into f30
la x2, scratch
li x3, 0xe8a35c3b # load x3 with value 0xe8a35c3b
sw x3, 0(x2) # store 0xe8a35c3b in memory
flw f1, 0(x2) # load 0xe8a35c3b from memory into f1
la x2, scratch
li x3, 0x84d3b318 # load x3 with value 0x84d3b318
sw x3, 0(x2) # store 0x84d3b318 in memory
flw f5, 0(x2) # load 0x84d3b318 from memory into f5
fmsub.s f30, f30, f1, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0xf70e4bc4 # load x3 with value 0xf70e4bc4
sw x3, 0(x2) # store 0xf70e4bc4 in memory
flw f31, 0(x2) # load 0xf70e4bc4 from memory into f31
la x2, scratch
li x3, 0x5fff7a60 # load x3 with value 0x5fff7a60
sw x3, 0(x2) # store 0x5fff7a60 in memory
flw f26, 0(x2) # load 0x5fff7a60 from memory into f26
la x2, scratch
li x3, 0x9fe88f72 # load x3 with value 0x9fe88f72
sw x3, 0(x2) # store 0x9fe88f72 in memory
flw f27, 0(x2) # load 0x9fe88f72 from memory into f27
fmsub.s f31, f31, f26, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xfdd56be6 # load x3 with value 0xfdd56be6
sw x3, 0(x2) # store 0xfdd56be6 in memory
flw f18, 0(x2) # load 0xfdd56be6 from memory into f18
la x2, scratch
li x3, 0x49ce7ccb # load x3 with value 0x49ce7ccb
sw x3, 0(x2) # store 0x49ce7ccb in memory
flw f0, 0(x2) # load 0x49ce7ccb from memory into f0
la x2, scratch
li x3, 0x81ca0e53 # load x3 with value 0x81ca0e53
sw x3, 0(x2) # store 0x81ca0e53 in memory
flw f2, 0(x2) # load 0x81ca0e53 from memory into f2
fmsub.s f0, f18, f0, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x5c15be22 # load x3 with value 0x5c15be22
sw x3, 0(x2) # store 0x5c15be22 in memory
flw f6, 0(x2) # load 0x5c15be22 from memory into f6
la x2, scratch
li x3, 0x1c240738 # load x3 with value 0x1c240738
sw x3, 0(x2) # store 0x1c240738 in memory
flw f1, 0(x2) # load 0x1c240738 from memory into f1
la x2, scratch
li x3, 0xe03e4078 # load x3 with value 0xe03e4078
sw x3, 0(x2) # store 0xe03e4078 in memory
flw f12, 0(x2) # load 0xe03e4078 from memory into f12
fmsub.s f1, f6, f1, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x8f89ae62 # load x3 with value 0x8f89ae62
sw x3, 0(x2) # store 0x8f89ae62 in memory
flw f15, 0(x2) # load 0x8f89ae62 from memory into f15
la x2, scratch
li x3, 0x68e2f5dc # load x3 with value 0x68e2f5dc
sw x3, 0(x2) # store 0x68e2f5dc in memory
flw f2, 0(x2) # load 0x68e2f5dc from memory into f2
la x2, scratch
li x3, 0xabac56b1 # load x3 with value 0xabac56b1
sw x3, 0(x2) # store 0xabac56b1 in memory
flw f7, 0(x2) # load 0xabac56b1 from memory into f7
fmsub.s f2, f15, f2, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x23b992fe # load x3 with value 0x23b992fe
sw x3, 0(x2) # store 0x23b992fe in memory
flw f27, 0(x2) # load 0x23b992fe from memory into f27
la x2, scratch
li x3, 0xcef53488 # load x3 with value 0xcef53488
sw x3, 0(x2) # store 0xcef53488 in memory
flw f3, 0(x2) # load 0xcef53488 from memory into f3
la x2, scratch
li x3, 0x196afa89 # load x3 with value 0x196afa89
sw x3, 0(x2) # store 0x196afa89 in memory
flw f17, 0(x2) # load 0x196afa89 from memory into f17
fmsub.s f3, f27, f3, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x513103dc # load x3 with value 0x513103dc
sw x3, 0(x2) # store 0x513103dc in memory
flw f22, 0(x2) # load 0x513103dc from memory into f22
la x2, scratch
li x3, 0xdb378ca5 # load x3 with value 0xdb378ca5
sw x3, 0(x2) # store 0xdb378ca5 in memory
flw f4, 0(x2) # load 0xdb378ca5 from memory into f4
la x2, scratch
li x3, 0x786944b6 # load x3 with value 0x786944b6
sw x3, 0(x2) # store 0x786944b6 in memory
flw f7, 0(x2) # load 0x786944b6 from memory into f7
fmsub.s f4, f22, f4, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa5c5a3bf # load x3 with value 0xa5c5a3bf
sw x3, 0(x2) # store 0xa5c5a3bf in memory
flw f8, 0(x2) # load 0xa5c5a3bf from memory into f8
la x2, scratch
li x3, 0x3dff4670 # load x3 with value 0x3dff4670
sw x3, 0(x2) # store 0x3dff4670 in memory
flw f5, 0(x2) # load 0x3dff4670 from memory into f5
la x2, scratch
li x3, 0xd3d9e682 # load x3 with value 0xd3d9e682
sw x3, 0(x2) # store 0xd3d9e682 in memory
flw f24, 0(x2) # load 0xd3d9e682 from memory into f24
fmsub.s f5, f8, f5, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9cbb4d1d # load x3 with value 0x9cbb4d1d
sw x3, 0(x2) # store 0x9cbb4d1d in memory
flw f26, 0(x2) # load 0x9cbb4d1d from memory into f26
la x2, scratch
li x3, 0xbf1830c3 # load x3 with value 0xbf1830c3
sw x3, 0(x2) # store 0xbf1830c3 in memory
flw f6, 0(x2) # load 0xbf1830c3 from memory into f6
la x2, scratch
li x3, 0xd8b7812d # load x3 with value 0xd8b7812d
sw x3, 0(x2) # store 0xd8b7812d in memory
flw f21, 0(x2) # load 0xd8b7812d from memory into f21
fmsub.s f6, f26, f6, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x85be0926 # load x3 with value 0x85be0926
sw x3, 0(x2) # store 0x85be0926 in memory
flw f29, 0(x2) # load 0x85be0926 from memory into f29
la x2, scratch
li x3, 0xc3ae100d # load x3 with value 0xc3ae100d
sw x3, 0(x2) # store 0xc3ae100d in memory
flw f7, 0(x2) # load 0xc3ae100d from memory into f7
la x2, scratch
li x3, 0xf767d732 # load x3 with value 0xf767d732
sw x3, 0(x2) # store 0xf767d732 in memory
flw f22, 0(x2) # load 0xf767d732 from memory into f22
fmsub.s f7, f29, f7, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x67157b3e # load x3 with value 0x67157b3e
sw x3, 0(x2) # store 0x67157b3e in memory
flw f8, 0(x2) # load 0x67157b3e from memory into f8
la x2, scratch
li x3, 0x5ba92785 # load x3 with value 0x5ba92785
sw x3, 0(x2) # store 0x5ba92785 in memory
flw f8, 0(x2) # load 0x5ba92785 from memory into f8
la x2, scratch
li x3, 0xfaa296a5 # load x3 with value 0xfaa296a5
sw x3, 0(x2) # store 0xfaa296a5 in memory
flw f21, 0(x2) # load 0xfaa296a5 from memory into f21
fmsub.s f8, f8, f8, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0xade4ce6d # load x3 with value 0xade4ce6d
sw x3, 0(x2) # store 0xade4ce6d in memory
flw f27, 0(x2) # load 0xade4ce6d from memory into f27
la x2, scratch
li x3, 0x09c72e3d # load x3 with value 0x09c72e3d
sw x3, 0(x2) # store 0x09c72e3d in memory
flw f9, 0(x2) # load 0x09c72e3d from memory into f9
la x2, scratch
li x3, 0x54412f0a # load x3 with value 0x54412f0a
sw x3, 0(x2) # store 0x54412f0a in memory
flw f21, 0(x2) # load 0x54412f0a from memory into f21
fmsub.s f9, f27, f9, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x761b7f59 # load x3 with value 0x761b7f59
sw x3, 0(x2) # store 0x761b7f59 in memory
flw f6, 0(x2) # load 0x761b7f59 from memory into f6
la x2, scratch
li x3, 0xd7989ed7 # load x3 with value 0xd7989ed7
sw x3, 0(x2) # store 0xd7989ed7 in memory
flw f10, 0(x2) # load 0xd7989ed7 from memory into f10
la x2, scratch
li x3, 0x11ee786b # load x3 with value 0x11ee786b
sw x3, 0(x2) # store 0x11ee786b in memory
flw f9, 0(x2) # load 0x11ee786b from memory into f9
fmsub.s f10, f6, f10, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xd56d937d # load x3 with value 0xd56d937d
sw x3, 0(x2) # store 0xd56d937d in memory
flw f17, 0(x2) # load 0xd56d937d from memory into f17
la x2, scratch
li x3, 0x7122fd74 # load x3 with value 0x7122fd74
sw x3, 0(x2) # store 0x7122fd74 in memory
flw f11, 0(x2) # load 0x7122fd74 from memory into f11
la x2, scratch
li x3, 0x463a5ad9 # load x3 with value 0x463a5ad9
sw x3, 0(x2) # store 0x463a5ad9 in memory
flw f27, 0(x2) # load 0x463a5ad9 from memory into f27
fmsub.s f11, f17, f11, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0xaabf6bae # load x3 with value 0xaabf6bae
sw x3, 0(x2) # store 0xaabf6bae in memory
flw f5, 0(x2) # load 0xaabf6bae from memory into f5
la x2, scratch
li x3, 0x944d808c # load x3 with value 0x944d808c
sw x3, 0(x2) # store 0x944d808c in memory
flw f12, 0(x2) # load 0x944d808c from memory into f12
la x2, scratch
li x3, 0xe4acff41 # load x3 with value 0xe4acff41
sw x3, 0(x2) # store 0xe4acff41 in memory
flw f30, 0(x2) # load 0xe4acff41 from memory into f30
fmsub.s f12, f5, f12, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xb4568991 # load x3 with value 0xb4568991
sw x3, 0(x2) # store 0xb4568991 in memory
flw f12, 0(x2) # load 0xb4568991 from memory into f12
la x2, scratch
li x3, 0xaad63b48 # load x3 with value 0xaad63b48
sw x3, 0(x2) # store 0xaad63b48 in memory
flw f13, 0(x2) # load 0xaad63b48 from memory into f13
la x2, scratch
li x3, 0x71c69aa9 # load x3 with value 0x71c69aa9
sw x3, 0(x2) # store 0x71c69aa9 in memory
flw f9, 0(x2) # load 0x71c69aa9 from memory into f9
fmsub.s f13, f12, f13, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0x13a65e1f # load x3 with value 0x13a65e1f
sw x3, 0(x2) # store 0x13a65e1f in memory
flw f14, 0(x2) # load 0x13a65e1f from memory into f14
la x2, scratch
li x3, 0xf68bc635 # load x3 with value 0xf68bc635
sw x3, 0(x2) # store 0xf68bc635 in memory
flw f14, 0(x2) # load 0xf68bc635 from memory into f14
la x2, scratch
li x3, 0x4cf6b530 # load x3 with value 0x4cf6b530
sw x3, 0(x2) # store 0x4cf6b530 in memory
flw f18, 0(x2) # load 0x4cf6b530 from memory into f18
fmsub.s f14, f14, f14, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x5266466f # load x3 with value 0x5266466f
sw x3, 0(x2) # store 0x5266466f in memory
flw f14, 0(x2) # load 0x5266466f from memory into f14
la x2, scratch
li x3, 0x608ee75b # load x3 with value 0x608ee75b
sw x3, 0(x2) # store 0x608ee75b in memory
flw f15, 0(x2) # load 0x608ee75b from memory into f15
la x2, scratch
li x3, 0x262d1280 # load x3 with value 0x262d1280
sw x3, 0(x2) # store 0x262d1280 in memory
flw f18, 0(x2) # load 0x262d1280 from memory into f18
fmsub.s f15, f14, f15, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xb221269e # load x3 with value 0xb221269e
sw x3, 0(x2) # store 0xb221269e in memory
flw f27, 0(x2) # load 0xb221269e from memory into f27
la x2, scratch
li x3, 0xc8702f2b # load x3 with value 0xc8702f2b
sw x3, 0(x2) # store 0xc8702f2b in memory
flw f16, 0(x2) # load 0xc8702f2b from memory into f16
la x2, scratch
li x3, 0x9cb7bd48 # load x3 with value 0x9cb7bd48
sw x3, 0(x2) # store 0x9cb7bd48 in memory
flw f15, 0(x2) # load 0x9cb7bd48 from memory into f15
fmsub.s f16, f27, f16, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xdc88317f # load x3 with value 0xdc88317f
sw x3, 0(x2) # store 0xdc88317f in memory
flw f1, 0(x2) # load 0xdc88317f from memory into f1
la x2, scratch
li x3, 0x7bfc0452 # load x3 with value 0x7bfc0452
sw x3, 0(x2) # store 0x7bfc0452 in memory
flw f17, 0(x2) # load 0x7bfc0452 from memory into f17
la x2, scratch
li x3, 0xf25aded0 # load x3 with value 0xf25aded0
sw x3, 0(x2) # store 0xf25aded0 in memory
flw f15, 0(x2) # load 0xf25aded0 from memory into f15
fmsub.s f17, f1, f17, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x4a891ebc # load x3 with value 0x4a891ebc
sw x3, 0(x2) # store 0x4a891ebc in memory
flw f15, 0(x2) # load 0x4a891ebc from memory into f15
la x2, scratch
li x3, 0xb9b831fb # load x3 with value 0xb9b831fb
sw x3, 0(x2) # store 0xb9b831fb in memory
flw f18, 0(x2) # load 0xb9b831fb from memory into f18
la x2, scratch
li x3, 0x1b463413 # load x3 with value 0x1b463413
sw x3, 0(x2) # store 0x1b463413 in memory
flw f11, 0(x2) # load 0x1b463413 from memory into f11
fmsub.s f18, f15, f18, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x4230a612 # load x3 with value 0x4230a612
sw x3, 0(x2) # store 0x4230a612 in memory
flw f21, 0(x2) # load 0x4230a612 from memory into f21
la x2, scratch
li x3, 0xde825c2a # load x3 with value 0xde825c2a
sw x3, 0(x2) # store 0xde825c2a in memory
flw f19, 0(x2) # load 0xde825c2a from memory into f19
la x2, scratch
li x3, 0x675caa33 # load x3 with value 0x675caa33
sw x3, 0(x2) # store 0x675caa33 in memory
flw f30, 0(x2) # load 0x675caa33 from memory into f30
fmsub.s f19, f21, f19, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x92d0a448 # load x3 with value 0x92d0a448
sw x3, 0(x2) # store 0x92d0a448 in memory
flw f15, 0(x2) # load 0x92d0a448 from memory into f15
la x2, scratch
li x3, 0xf45b4a72 # load x3 with value 0xf45b4a72
sw x3, 0(x2) # store 0xf45b4a72 in memory
flw f20, 0(x2) # load 0xf45b4a72 from memory into f20
la x2, scratch
li x3, 0x3c20b961 # load x3 with value 0x3c20b961
sw x3, 0(x2) # store 0x3c20b961 in memory
flw f13, 0(x2) # load 0x3c20b961 from memory into f13
fmsub.s f20, f15, f20, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xd4633c19 # load x3 with value 0xd4633c19
sw x3, 0(x2) # store 0xd4633c19 in memory
flw f7, 0(x2) # load 0xd4633c19 from memory into f7
la x2, scratch
li x3, 0xf7df1d15 # load x3 with value 0xf7df1d15
sw x3, 0(x2) # store 0xf7df1d15 in memory
flw f21, 0(x2) # load 0xf7df1d15 from memory into f21
la x2, scratch
li x3, 0x343f0362 # load x3 with value 0x343f0362
sw x3, 0(x2) # store 0x343f0362 in memory
flw f18, 0(x2) # load 0x343f0362 from memory into f18
fmsub.s f21, f7, f21, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xf87fb844 # load x3 with value 0xf87fb844
sw x3, 0(x2) # store 0xf87fb844 in memory
flw f3, 0(x2) # load 0xf87fb844 from memory into f3
la x2, scratch
li x3, 0xdf0f2827 # load x3 with value 0xdf0f2827
sw x3, 0(x2) # store 0xdf0f2827 in memory
flw f22, 0(x2) # load 0xdf0f2827 from memory into f22
la x2, scratch
li x3, 0x74f06646 # load x3 with value 0x74f06646
sw x3, 0(x2) # store 0x74f06646 in memory
flw f14, 0(x2) # load 0x74f06646 from memory into f14
fmsub.s f22, f3, f22, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x9faaa02c # load x3 with value 0x9faaa02c
sw x3, 0(x2) # store 0x9faaa02c in memory
flw f17, 0(x2) # load 0x9faaa02c from memory into f17
la x2, scratch
li x3, 0xb746b1e4 # load x3 with value 0xb746b1e4
sw x3, 0(x2) # store 0xb746b1e4 in memory
flw f23, 0(x2) # load 0xb746b1e4 from memory into f23
la x2, scratch
li x3, 0x11128e1a # load x3 with value 0x11128e1a
sw x3, 0(x2) # store 0x11128e1a in memory
flw f18, 0(x2) # load 0x11128e1a from memory into f18
fmsub.s f23, f17, f23, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x5769c8f4 # load x3 with value 0x5769c8f4
sw x3, 0(x2) # store 0x5769c8f4 in memory
flw f9, 0(x2) # load 0x5769c8f4 from memory into f9
la x2, scratch
li x3, 0xbbf5c7cb # load x3 with value 0xbbf5c7cb
sw x3, 0(x2) # store 0xbbf5c7cb in memory
flw f24, 0(x2) # load 0xbbf5c7cb from memory into f24
la x2, scratch
li x3, 0x2ac8abfd # load x3 with value 0x2ac8abfd
sw x3, 0(x2) # store 0x2ac8abfd in memory
flw f10, 0(x2) # load 0x2ac8abfd from memory into f10
fmsub.s f24, f9, f24, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0xb0591ce3 # load x3 with value 0xb0591ce3
sw x3, 0(x2) # store 0xb0591ce3 in memory
flw f22, 0(x2) # load 0xb0591ce3 from memory into f22
la x2, scratch
li x3, 0x1af559c4 # load x3 with value 0x1af559c4
sw x3, 0(x2) # store 0x1af559c4 in memory
flw f25, 0(x2) # load 0x1af559c4 from memory into f25
la x2, scratch
li x3, 0x98ec899e # load x3 with value 0x98ec899e
sw x3, 0(x2) # store 0x98ec899e in memory
flw f14, 0(x2) # load 0x98ec899e from memory into f14
fmsub.s f25, f22, f25, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x18dc2275 # load x3 with value 0x18dc2275
sw x3, 0(x2) # store 0x18dc2275 in memory
flw f30, 0(x2) # load 0x18dc2275 from memory into f30
la x2, scratch
li x3, 0x11f14911 # load x3 with value 0x11f14911
sw x3, 0(x2) # store 0x11f14911 in memory
flw f26, 0(x2) # load 0x11f14911 from memory into f26
la x2, scratch
li x3, 0xdaad0149 # load x3 with value 0xdaad0149
sw x3, 0(x2) # store 0xdaad0149 in memory
flw f26, 0(x2) # load 0xdaad0149 from memory into f26
fmsub.s f26, f30, f26, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xfb455e2a # load x3 with value 0xfb455e2a
sw x3, 0(x2) # store 0xfb455e2a in memory
flw f28, 0(x2) # load 0xfb455e2a from memory into f28
la x2, scratch
li x3, 0x09200260 # load x3 with value 0x09200260
sw x3, 0(x2) # store 0x09200260 in memory
flw f27, 0(x2) # load 0x09200260 from memory into f27
la x2, scratch
li x3, 0x33d136df # load x3 with value 0x33d136df
sw x3, 0(x2) # store 0x33d136df in memory
flw f15, 0(x2) # load 0x33d136df from memory into f15
fmsub.s f27, f28, f27, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x14ab9913 # load x3 with value 0x14ab9913
sw x3, 0(x2) # store 0x14ab9913 in memory
flw f18, 0(x2) # load 0x14ab9913 from memory into f18
la x2, scratch
li x3, 0xcd7016b0 # load x3 with value 0xcd7016b0
sw x3, 0(x2) # store 0xcd7016b0 in memory
flw f28, 0(x2) # load 0xcd7016b0 from memory into f28
la x2, scratch
li x3, 0x9d3b427e # load x3 with value 0x9d3b427e
sw x3, 0(x2) # store 0x9d3b427e in memory
flw f14, 0(x2) # load 0x9d3b427e from memory into f14
fmsub.s f28, f18, f28, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xdb01a954 # load x3 with value 0xdb01a954
sw x3, 0(x2) # store 0xdb01a954 in memory
flw f1, 0(x2) # load 0xdb01a954 from memory into f1
la x2, scratch
li x3, 0x2a79dde2 # load x3 with value 0x2a79dde2
sw x3, 0(x2) # store 0x2a79dde2 in memory
flw f29, 0(x2) # load 0x2a79dde2 from memory into f29
la x2, scratch
li x3, 0xc3da23cd # load x3 with value 0xc3da23cd
sw x3, 0(x2) # store 0xc3da23cd in memory
flw f26, 0(x2) # load 0xc3da23cd from memory into f26
fmsub.s f29, f1, f29, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0xf79da965 # load x3 with value 0xf79da965
sw x3, 0(x2) # store 0xf79da965 in memory
flw f21, 0(x2) # load 0xf79da965 from memory into f21
la x2, scratch
li x3, 0x74187129 # load x3 with value 0x74187129
sw x3, 0(x2) # store 0x74187129 in memory
flw f30, 0(x2) # load 0x74187129 from memory into f30
la x2, scratch
li x3, 0x6713f5dd # load x3 with value 0x6713f5dd
sw x3, 0(x2) # store 0x6713f5dd in memory
flw f29, 0(x2) # load 0x6713f5dd from memory into f29
fmsub.s f30, f21, f30, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x7e83cfb9 # load x3 with value 0x7e83cfb9
sw x3, 0(x2) # store 0x7e83cfb9 in memory
flw f26, 0(x2) # load 0x7e83cfb9 from memory into f26
la x2, scratch
li x3, 0x7dc70df2 # load x3 with value 0x7dc70df2
sw x3, 0(x2) # store 0x7dc70df2 in memory
flw f31, 0(x2) # load 0x7dc70df2 from memory into f31
la x2, scratch
li x3, 0x6c730f1b # load x3 with value 0x6c730f1b
sw x3, 0(x2) # store 0x6c730f1b in memory
flw f22, 0(x2) # load 0x6c730f1b from memory into f22
fmsub.s f31, f26, f31, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0xcce88f3e # load x3 with value 0xcce88f3e
sw x3, 0(x2) # store 0xcce88f3e in memory
flw f29, 0(x2) # load 0xcce88f3e from memory into f29
la x2, scratch
li x3, 0x9e464b4d # load x3 with value 0x9e464b4d
sw x3, 0(x2) # store 0x9e464b4d in memory
flw f12, 0(x2) # load 0x9e464b4d from memory into f12
la x2, scratch
li x3, 0x70160d41 # load x3 with value 0x70160d41
sw x3, 0(x2) # store 0x70160d41 in memory
flw f0, 0(x2) # load 0x70160d41 from memory into f0
fmsub.s f0, f29, f12, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x4e2964ca # load x3 with value 0x4e2964ca
sw x3, 0(x2) # store 0x4e2964ca in memory
flw f15, 0(x2) # load 0x4e2964ca from memory into f15
la x2, scratch
li x3, 0x3389f5c5 # load x3 with value 0x3389f5c5
sw x3, 0(x2) # store 0x3389f5c5 in memory
flw f29, 0(x2) # load 0x3389f5c5 from memory into f29
la x2, scratch
li x3, 0xca8f69aa # load x3 with value 0xca8f69aa
sw x3, 0(x2) # store 0xca8f69aa in memory
flw f1, 0(x2) # load 0xca8f69aa from memory into f1
fmsub.s f1, f15, f29, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0x906a9093 # load x3 with value 0x906a9093
sw x3, 0(x2) # store 0x906a9093 in memory
flw f2, 0(x2) # load 0x906a9093 from memory into f2
la x2, scratch
li x3, 0xc8dfa237 # load x3 with value 0xc8dfa237
sw x3, 0(x2) # store 0xc8dfa237 in memory
flw f15, 0(x2) # load 0xc8dfa237 from memory into f15
la x2, scratch
li x3, 0xb7fbdceb # load x3 with value 0xb7fbdceb
sw x3, 0(x2) # store 0xb7fbdceb in memory
flw f2, 0(x2) # load 0xb7fbdceb from memory into f2
fmsub.s f2, f2, f15, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x8c7903b6 # load x3 with value 0x8c7903b6
sw x3, 0(x2) # store 0x8c7903b6 in memory
flw f6, 0(x2) # load 0x8c7903b6 from memory into f6
la x2, scratch
li x3, 0x43592fa6 # load x3 with value 0x43592fa6
sw x3, 0(x2) # store 0x43592fa6 in memory
flw f17, 0(x2) # load 0x43592fa6 from memory into f17
la x2, scratch
li x3, 0xea3b779b # load x3 with value 0xea3b779b
sw x3, 0(x2) # store 0xea3b779b in memory
flw f3, 0(x2) # load 0xea3b779b from memory into f3
fmsub.s f3, f6, f17, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x492dd1cb # load x3 with value 0x492dd1cb
sw x3, 0(x2) # store 0x492dd1cb in memory
flw f8, 0(x2) # load 0x492dd1cb from memory into f8
la x2, scratch
li x3, 0x70789650 # load x3 with value 0x70789650
sw x3, 0(x2) # store 0x70789650 in memory
flw f7, 0(x2) # load 0x70789650 from memory into f7
la x2, scratch
li x3, 0xc7b3d95e # load x3 with value 0xc7b3d95e
sw x3, 0(x2) # store 0xc7b3d95e in memory
flw f4, 0(x2) # load 0xc7b3d95e from memory into f4
fmsub.s f4, f8, f7, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5c5217d0 # load x3 with value 0x5c5217d0
sw x3, 0(x2) # store 0x5c5217d0 in memory
flw f18, 0(x2) # load 0x5c5217d0 from memory into f18
la x2, scratch
li x3, 0x54a7365a # load x3 with value 0x54a7365a
sw x3, 0(x2) # store 0x54a7365a in memory
flw f7, 0(x2) # load 0x54a7365a from memory into f7
la x2, scratch
li x3, 0x9b984530 # load x3 with value 0x9b984530
sw x3, 0(x2) # store 0x9b984530 in memory
flw f5, 0(x2) # load 0x9b984530 from memory into f5
fmsub.s f5, f18, f7, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf438f2fe # load x3 with value 0xf438f2fe
sw x3, 0(x2) # store 0xf438f2fe in memory
flw f4, 0(x2) # load 0xf438f2fe from memory into f4
la x2, scratch
li x3, 0x72ae7715 # load x3 with value 0x72ae7715
sw x3, 0(x2) # store 0x72ae7715 in memory
flw f24, 0(x2) # load 0x72ae7715 from memory into f24
la x2, scratch
li x3, 0xfde0d4be # load x3 with value 0xfde0d4be
sw x3, 0(x2) # store 0xfde0d4be in memory
flw f6, 0(x2) # load 0xfde0d4be from memory into f6
fmsub.s f6, f4, f24, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbbf5b41c # load x3 with value 0xbbf5b41c
sw x3, 0(x2) # store 0xbbf5b41c in memory
flw f16, 0(x2) # load 0xbbf5b41c from memory into f16
la x2, scratch
li x3, 0x767f1cf1 # load x3 with value 0x767f1cf1
sw x3, 0(x2) # store 0x767f1cf1 in memory
flw f2, 0(x2) # load 0x767f1cf1 from memory into f2
la x2, scratch
li x3, 0x7710ea52 # load x3 with value 0x7710ea52
sw x3, 0(x2) # store 0x7710ea52 in memory
flw f7, 0(x2) # load 0x7710ea52 from memory into f7
fmsub.s f7, f16, f2, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x8c4eec75 # load x3 with value 0x8c4eec75
sw x3, 0(x2) # store 0x8c4eec75 in memory
flw f30, 0(x2) # load 0x8c4eec75 from memory into f30
la x2, scratch
li x3, 0x9c7ebb58 # load x3 with value 0x9c7ebb58
sw x3, 0(x2) # store 0x9c7ebb58 in memory
flw f16, 0(x2) # load 0x9c7ebb58 from memory into f16
la x2, scratch
li x3, 0x85ee9cc9 # load x3 with value 0x85ee9cc9
sw x3, 0(x2) # store 0x85ee9cc9 in memory
flw f8, 0(x2) # load 0x85ee9cc9 from memory into f8
fmsub.s f8, f30, f16, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x4db40b1c # load x3 with value 0x4db40b1c
sw x3, 0(x2) # store 0x4db40b1c in memory
flw f5, 0(x2) # load 0x4db40b1c from memory into f5
la x2, scratch
li x3, 0xcdc18f4a # load x3 with value 0xcdc18f4a
sw x3, 0(x2) # store 0xcdc18f4a in memory
flw f30, 0(x2) # load 0xcdc18f4a from memory into f30
la x2, scratch
li x3, 0xb11344f8 # load x3 with value 0xb11344f8
sw x3, 0(x2) # store 0xb11344f8 in memory
flw f9, 0(x2) # load 0xb11344f8 from memory into f9
fmsub.s f9, f5, f30, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0xb99fc504 # load x3 with value 0xb99fc504
sw x3, 0(x2) # store 0xb99fc504 in memory
flw f26, 0(x2) # load 0xb99fc504 from memory into f26
la x2, scratch
li x3, 0x1afb035f # load x3 with value 0x1afb035f
sw x3, 0(x2) # store 0x1afb035f in memory
flw f12, 0(x2) # load 0x1afb035f from memory into f12
la x2, scratch
li x3, 0xbe1db613 # load x3 with value 0xbe1db613
sw x3, 0(x2) # store 0xbe1db613 in memory
flw f10, 0(x2) # load 0xbe1db613 from memory into f10
fmsub.s f10, f26, f12, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x1677633d # load x3 with value 0x1677633d
sw x3, 0(x2) # store 0x1677633d in memory
flw f5, 0(x2) # load 0x1677633d from memory into f5
la x2, scratch
li x3, 0xc46748fc # load x3 with value 0xc46748fc
sw x3, 0(x2) # store 0xc46748fc in memory
flw f26, 0(x2) # load 0xc46748fc from memory into f26
la x2, scratch
li x3, 0x4f57c804 # load x3 with value 0x4f57c804
sw x3, 0(x2) # store 0x4f57c804 in memory
flw f11, 0(x2) # load 0x4f57c804 from memory into f11
fmsub.s f11, f5, f26, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0x9eeb1cd6 # load x3 with value 0x9eeb1cd6
sw x3, 0(x2) # store 0x9eeb1cd6 in memory
flw f12, 0(x2) # load 0x9eeb1cd6 from memory into f12
la x2, scratch
li x3, 0xe9d581c1 # load x3 with value 0xe9d581c1
sw x3, 0(x2) # store 0xe9d581c1 in memory
flw f21, 0(x2) # load 0xe9d581c1 from memory into f21
la x2, scratch
li x3, 0xb9529417 # load x3 with value 0xb9529417
sw x3, 0(x2) # store 0xb9529417 in memory
flw f12, 0(x2) # load 0xb9529417 from memory into f12
fmsub.s f12, f12, f21, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0xc82b0826 # load x3 with value 0xc82b0826
sw x3, 0(x2) # store 0xc82b0826 in memory
flw f28, 0(x2) # load 0xc82b0826 from memory into f28
la x2, scratch
li x3, 0xa1affd14 # load x3 with value 0xa1affd14
sw x3, 0(x2) # store 0xa1affd14 in memory
flw f25, 0(x2) # load 0xa1affd14 from memory into f25
la x2, scratch
li x3, 0xe84b779f # load x3 with value 0xe84b779f
sw x3, 0(x2) # store 0xe84b779f in memory
flw f13, 0(x2) # load 0xe84b779f from memory into f13
fmsub.s f13, f28, f25, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xd90b6f04 # load x3 with value 0xd90b6f04
sw x3, 0(x2) # store 0xd90b6f04 in memory
flw f20, 0(x2) # load 0xd90b6f04 from memory into f20
la x2, scratch
li x3, 0x2dce3621 # load x3 with value 0x2dce3621
sw x3, 0(x2) # store 0x2dce3621 in memory
flw f7, 0(x2) # load 0x2dce3621 from memory into f7
la x2, scratch
li x3, 0x2288d72e # load x3 with value 0x2288d72e
sw x3, 0(x2) # store 0x2288d72e in memory
flw f14, 0(x2) # load 0x2288d72e from memory into f14
fmsub.s f14, f20, f7, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x6e9e3870 # load x3 with value 0x6e9e3870
sw x3, 0(x2) # store 0x6e9e3870 in memory
flw f8, 0(x2) # load 0x6e9e3870 from memory into f8
la x2, scratch
li x3, 0x26797d8d # load x3 with value 0x26797d8d
sw x3, 0(x2) # store 0x26797d8d in memory
flw f9, 0(x2) # load 0x26797d8d from memory into f9
la x2, scratch
li x3, 0x579fd0e9 # load x3 with value 0x579fd0e9
sw x3, 0(x2) # store 0x579fd0e9 in memory
flw f15, 0(x2) # load 0x579fd0e9 from memory into f15
fmsub.s f15, f8, f9, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x41e936a4 # load x3 with value 0x41e936a4
sw x3, 0(x2) # store 0x41e936a4 in memory
flw f17, 0(x2) # load 0x41e936a4 from memory into f17
la x2, scratch
li x3, 0xb82244dc # load x3 with value 0xb82244dc
sw x3, 0(x2) # store 0xb82244dc in memory
flw f9, 0(x2) # load 0xb82244dc from memory into f9
la x2, scratch
li x3, 0x238bcd09 # load x3 with value 0x238bcd09
sw x3, 0(x2) # store 0x238bcd09 in memory
flw f16, 0(x2) # load 0x238bcd09 from memory into f16
fmsub.s f16, f17, f9, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0xcdcade16 # load x3 with value 0xcdcade16
sw x3, 0(x2) # store 0xcdcade16 in memory
flw f19, 0(x2) # load 0xcdcade16 from memory into f19
la x2, scratch
li x3, 0xf1a9fd4a # load x3 with value 0xf1a9fd4a
sw x3, 0(x2) # store 0xf1a9fd4a in memory
flw f1, 0(x2) # load 0xf1a9fd4a from memory into f1
la x2, scratch
li x3, 0x25c15f16 # load x3 with value 0x25c15f16
sw x3, 0(x2) # store 0x25c15f16 in memory
flw f17, 0(x2) # load 0x25c15f16 from memory into f17
fmsub.s f17, f19, f1, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x9f3869f0 # load x3 with value 0x9f3869f0
sw x3, 0(x2) # store 0x9f3869f0 in memory
flw f15, 0(x2) # load 0x9f3869f0 from memory into f15
la x2, scratch
li x3, 0xa45e0ecd # load x3 with value 0xa45e0ecd
sw x3, 0(x2) # store 0xa45e0ecd in memory
flw f27, 0(x2) # load 0xa45e0ecd from memory into f27
la x2, scratch
li x3, 0x638effd3 # load x3 with value 0x638effd3
sw x3, 0(x2) # store 0x638effd3 in memory
flw f18, 0(x2) # load 0x638effd3 from memory into f18
fmsub.s f18, f15, f27, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x82cea42f # load x3 with value 0x82cea42f
sw x3, 0(x2) # store 0x82cea42f in memory
flw f28, 0(x2) # load 0x82cea42f from memory into f28
la x2, scratch
li x3, 0xd4b6bbe1 # load x3 with value 0xd4b6bbe1
sw x3, 0(x2) # store 0xd4b6bbe1 in memory
flw f11, 0(x2) # load 0xd4b6bbe1 from memory into f11
la x2, scratch
li x3, 0x0ce463f3 # load x3 with value 0x0ce463f3
sw x3, 0(x2) # store 0x0ce463f3 in memory
flw f19, 0(x2) # load 0x0ce463f3 from memory into f19
fmsub.s f19, f28, f11, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0xd350a93f # load x3 with value 0xd350a93f
sw x3, 0(x2) # store 0xd350a93f in memory
flw f31, 0(x2) # load 0xd350a93f from memory into f31
la x2, scratch
li x3, 0x25a0d989 # load x3 with value 0x25a0d989
sw x3, 0(x2) # store 0x25a0d989 in memory
flw f27, 0(x2) # load 0x25a0d989 from memory into f27
la x2, scratch
li x3, 0x98ba657b # load x3 with value 0x98ba657b
sw x3, 0(x2) # store 0x98ba657b in memory
flw f20, 0(x2) # load 0x98ba657b from memory into f20
fmsub.s f20, f31, f27, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x11994d0f # load x3 with value 0x11994d0f
sw x3, 0(x2) # store 0x11994d0f in memory
flw f3, 0(x2) # load 0x11994d0f from memory into f3
la x2, scratch
li x3, 0x4b51f3b4 # load x3 with value 0x4b51f3b4
sw x3, 0(x2) # store 0x4b51f3b4 in memory
flw f16, 0(x2) # load 0x4b51f3b4 from memory into f16
la x2, scratch
li x3, 0x9811f762 # load x3 with value 0x9811f762
sw x3, 0(x2) # store 0x9811f762 in memory
flw f21, 0(x2) # load 0x9811f762 from memory into f21
fmsub.s f21, f3, f16, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0xb4f2769f # load x3 with value 0xb4f2769f
sw x3, 0(x2) # store 0xb4f2769f in memory
flw f3, 0(x2) # load 0xb4f2769f from memory into f3
la x2, scratch
li x3, 0xd849eb5e # load x3 with value 0xd849eb5e
sw x3, 0(x2) # store 0xd849eb5e in memory
flw f12, 0(x2) # load 0xd849eb5e from memory into f12
la x2, scratch
li x3, 0x33d28d77 # load x3 with value 0x33d28d77
sw x3, 0(x2) # store 0x33d28d77 in memory
flw f22, 0(x2) # load 0x33d28d77 from memory into f22
fmsub.s f22, f3, f12, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0x329a12a6 # load x3 with value 0x329a12a6
sw x3, 0(x2) # store 0x329a12a6 in memory
flw f11, 0(x2) # load 0x329a12a6 from memory into f11
la x2, scratch
li x3, 0x8fc61db0 # load x3 with value 0x8fc61db0
sw x3, 0(x2) # store 0x8fc61db0 in memory
flw f28, 0(x2) # load 0x8fc61db0 from memory into f28
la x2, scratch
li x3, 0x43d889cc # load x3 with value 0x43d889cc
sw x3, 0(x2) # store 0x43d889cc in memory
flw f23, 0(x2) # load 0x43d889cc from memory into f23
fmsub.s f23, f11, f28, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x0cefded6 # load x3 with value 0x0cefded6
sw x3, 0(x2) # store 0x0cefded6 in memory
flw f31, 0(x2) # load 0x0cefded6 from memory into f31
la x2, scratch
li x3, 0x55268b27 # load x3 with value 0x55268b27
sw x3, 0(x2) # store 0x55268b27 in memory
flw f9, 0(x2) # load 0x55268b27 from memory into f9
la x2, scratch
li x3, 0x5d71840a # load x3 with value 0x5d71840a
sw x3, 0(x2) # store 0x5d71840a in memory
flw f24, 0(x2) # load 0x5d71840a from memory into f24
fmsub.s f24, f31, f9, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x7d398340 # load x3 with value 0x7d398340
sw x3, 0(x2) # store 0x7d398340 in memory
flw f11, 0(x2) # load 0x7d398340 from memory into f11
la x2, scratch
li x3, 0x9c82ce5c # load x3 with value 0x9c82ce5c
sw x3, 0(x2) # store 0x9c82ce5c in memory
flw f29, 0(x2) # load 0x9c82ce5c from memory into f29
la x2, scratch
li x3, 0x795a7412 # load x3 with value 0x795a7412
sw x3, 0(x2) # store 0x795a7412 in memory
flw f25, 0(x2) # load 0x795a7412 from memory into f25
fmsub.s f25, f11, f29, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x33247316 # load x3 with value 0x33247316
sw x3, 0(x2) # store 0x33247316 in memory
flw f17, 0(x2) # load 0x33247316 from memory into f17
la x2, scratch
li x3, 0xb0cf14ab # load x3 with value 0xb0cf14ab
sw x3, 0(x2) # store 0xb0cf14ab in memory
flw f22, 0(x2) # load 0xb0cf14ab from memory into f22
la x2, scratch
li x3, 0x03bfcf59 # load x3 with value 0x03bfcf59
sw x3, 0(x2) # store 0x03bfcf59 in memory
flw f26, 0(x2) # load 0x03bfcf59 from memory into f26
fmsub.s f26, f17, f22, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0x5e8434be # load x3 with value 0x5e8434be
sw x3, 0(x2) # store 0x5e8434be in memory
flw f9, 0(x2) # load 0x5e8434be from memory into f9
la x2, scratch
li x3, 0x5872dcfa # load x3 with value 0x5872dcfa
sw x3, 0(x2) # store 0x5872dcfa in memory
flw f1, 0(x2) # load 0x5872dcfa from memory into f1
la x2, scratch
li x3, 0x672a3c31 # load x3 with value 0x672a3c31
sw x3, 0(x2) # store 0x672a3c31 in memory
flw f27, 0(x2) # load 0x672a3c31 from memory into f27
fmsub.s f27, f9, f1, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x83a467d0 # load x3 with value 0x83a467d0
sw x3, 0(x2) # store 0x83a467d0 in memory
flw f26, 0(x2) # load 0x83a467d0 from memory into f26
la x2, scratch
li x3, 0x6d0635c8 # load x3 with value 0x6d0635c8
sw x3, 0(x2) # store 0x6d0635c8 in memory
flw f17, 0(x2) # load 0x6d0635c8 from memory into f17
la x2, scratch
li x3, 0x6dbc4793 # load x3 with value 0x6dbc4793
sw x3, 0(x2) # store 0x6dbc4793 in memory
flw f28, 0(x2) # load 0x6dbc4793 from memory into f28
fmsub.s f28, f26, f17, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0xba8780fe # load x3 with value 0xba8780fe
sw x3, 0(x2) # store 0xba8780fe in memory
flw f20, 0(x2) # load 0xba8780fe from memory into f20
la x2, scratch
li x3, 0x4608e2db # load x3 with value 0x4608e2db
sw x3, 0(x2) # store 0x4608e2db in memory
flw f25, 0(x2) # load 0x4608e2db from memory into f25
la x2, scratch
li x3, 0xf49450a1 # load x3 with value 0xf49450a1
sw x3, 0(x2) # store 0xf49450a1 in memory
flw f29, 0(x2) # load 0xf49450a1 from memory into f29
fmsub.s f29, f20, f25, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x1922518c # load x3 with value 0x1922518c
sw x3, 0(x2) # store 0x1922518c in memory
flw f23, 0(x2) # load 0x1922518c from memory into f23
la x2, scratch
li x3, 0x385ac1ab # load x3 with value 0x385ac1ab
sw x3, 0(x2) # store 0x385ac1ab in memory
flw f25, 0(x2) # load 0x385ac1ab from memory into f25
la x2, scratch
li x3, 0xdee20d24 # load x3 with value 0xdee20d24
sw x3, 0(x2) # store 0xdee20d24 in memory
flw f30, 0(x2) # load 0xdee20d24 from memory into f30
fmsub.s f30, f23, f25, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0xda21a08f # load x3 with value 0xda21a08f
sw x3, 0(x2) # store 0xda21a08f in memory
flw f10, 0(x2) # load 0xda21a08f from memory into f10
la x2, scratch
li x3, 0xaceab803 # load x3 with value 0xaceab803
sw x3, 0(x2) # store 0xaceab803 in memory
flw f13, 0(x2) # load 0xaceab803 from memory into f13
la x2, scratch
li x3, 0x06bb397b # load x3 with value 0x06bb397b
sw x3, 0(x2) # store 0x06bb397b in memory
flw f31, 0(x2) # load 0x06bb397b from memory into f31
fmsub.s f31, f10, f13, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xf857a4d6 # load x3 with value 0xf857a4d6
sw x3, 0(x2) # store 0xf857a4d6 in memory
flw f7, 0(x2) # load 0xf857a4d6 from memory into f7
la x2, scratch
li x3, 0xf5cf5dc5 # load x3 with value 0xf5cf5dc5
sw x3, 0(x2) # store 0xf5cf5dc5 in memory
flw f8, 0(x2) # load 0xf5cf5dc5 from memory into f8
la x2, scratch
li x3, 0x00000006 # load x3 with value 0x00000006
sw x3, 0(x2) # store 0x00000006 in memory
flw f6, 0(x2) # load 0x00000006 from memory into f6
fmsub.s f19, f7, f8, f6, dyn # perform operation
fmsub.s f19, f7, f8, f6, rdn # perform operation
fmsub.s f19, f7, f8, f6, rmm # perform operation
fmsub.s f19, f7, f8, f6, rne # perform operation
fmsub.s f19, f7, f8, f6, rtz # perform operation
fmsub.s f19, f7, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x4a7936bd # load x3 with value 0x4a7936bd
sw x3, 0(x2) # store 0x4a7936bd in memory
flw f10, 0(x2) # load 0x4a7936bd from memory into f10
fmsub.s f19, f15, f1, f10, dyn # perform operation
fmsub.s f19, f15, f1, f10, rdn # perform operation
fmsub.s f19, f15, f1, f10, rmm # perform operation
fmsub.s f19, f15, f1, f10, rne # perform operation
fmsub.s f19, f15, f1, f10, rtz # perform operation
fmsub.s f19, f15, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xa8890470 # load x3 with value 0xa8890470
sw x3, 0(x2) # store 0xa8890470 in memory
flw f9, 0(x2) # load 0xa8890470 from memory into f9
fmsub.s f10, f12, f31, f9, dyn # perform operation
fmsub.s f10, f12, f31, f9, rdn # perform operation
fmsub.s f10, f12, f31, f9, rmm # perform operation
fmsub.s f10, f12, f31, f9, rne # perform operation
fmsub.s f10, f12, f31, f9, rtz # perform operation
fmsub.s f10, f12, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x7806d884 # load x3 with value 0x7806d884
sw x3, 0(x2) # store 0x7806d884 in memory
flw f21, 0(x2) # load 0x7806d884 from memory into f21
fmsub.s f30, f6, f23, f21, dyn # perform operation
fmsub.s f30, f6, f23, f21, rdn # perform operation
fmsub.s f30, f6, f23, f21, rmm # perform operation
fmsub.s f30, f6, f23, f21, rne # perform operation
fmsub.s f30, f6, f23, f21, rtz # perform operation
fmsub.s f30, f6, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f6, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f6, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f6, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f6, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f6, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x5db6e28d # load x3 with value 0x5db6e28d
sw x3, 0(x2) # store 0x5db6e28d in memory
flw f13, 0(x2) # load 0x5db6e28d from memory into f13
fmsub.s f17, f9, f6, f13, dyn # perform operation
fmsub.s f17, f9, f6, f13, rdn # perform operation
fmsub.s f17, f9, f6, f13, rmm # perform operation
fmsub.s f17, f9, f6, f13, rne # perform operation
fmsub.s f17, f9, f6, f13, rtz # perform operation
fmsub.s f17, f9, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xa7b7d4c3 # load x3 with value 0xa7b7d4c3
sw x3, 0(x2) # store 0xa7b7d4c3 in memory
flw f15, 0(x2) # load 0xa7b7d4c3 from memory into f15
fmsub.s f13, f25, f19, f15, dyn # perform operation
fmsub.s f13, f25, f19, f15, rdn # perform operation
fmsub.s f13, f25, f19, f15, rmm # perform operation
fmsub.s f13, f25, f19, f15, rne # perform operation
fmsub.s f13, f25, f19, f15, rtz # perform operation
fmsub.s f13, f25, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f25, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f25, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f25, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f25, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f25, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xea22c3c9 # load x3 with value 0xea22c3c9
sw x3, 0(x2) # store 0xea22c3c9 in memory
flw f27, 0(x2) # load 0xea22c3c9 from memory into f27
fmsub.s f13, f30, f2, f27, dyn # perform operation
fmsub.s f13, f30, f2, f27, rdn # perform operation
fmsub.s f13, f30, f2, f27, rmm # perform operation
fmsub.s f13, f30, f2, f27, rne # perform operation
fmsub.s f13, f30, f2, f27, rtz # perform operation
fmsub.s f13, f30, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x42e2b74b # load x3 with value 0x42e2b74b
sw x3, 0(x2) # store 0x42e2b74b in memory
flw f29, 0(x2) # load 0x42e2b74b from memory into f29
fmsub.s f7, f16, f31, f29, dyn # perform operation
fmsub.s f7, f16, f31, f29, rdn # perform operation
fmsub.s f7, f16, f31, f29, rmm # perform operation
fmsub.s f7, f16, f31, f29, rne # perform operation
fmsub.s f7, f16, f31, f29, rtz # perform operation
fmsub.s f7, f16, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f16, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f16, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f16, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f16, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f16, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x2ba56424 # load x3 with value 0x2ba56424
sw x3, 0(x2) # store 0x2ba56424 in memory
flw f11, 0(x2) # load 0x2ba56424 from memory into f11
fmsub.s f25, f16, f5, f11, dyn # perform operation
fmsub.s f25, f16, f5, f11, rdn # perform operation
fmsub.s f25, f16, f5, f11, rmm # perform operation
fmsub.s f25, f16, f5, f11, rne # perform operation
fmsub.s f25, f16, f5, f11, rtz # perform operation
fmsub.s f25, f16, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0xee0aa036 # load x3 with value 0xee0aa036
sw x3, 0(x2) # store 0xee0aa036 in memory
flw f27, 0(x2) # load 0xee0aa036 from memory into f27
fmsub.s f14, f18, f13, f27, dyn # perform operation
fmsub.s f14, f18, f13, f27, rdn # perform operation
fmsub.s f14, f18, f13, f27, rmm # perform operation
fmsub.s f14, f18, f13, f27, rne # perform operation
fmsub.s f14, f18, f13, f27, rtz # perform operation
fmsub.s f14, f18, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x2e7dee5b # load x3 with value 0x2e7dee5b
sw x3, 0(x2) # store 0x2e7dee5b in memory
flw f31, 0(x2) # load 0x2e7dee5b from memory into f31
fmsub.s f28, f8, f26, f31, dyn # perform operation
fmsub.s f28, f8, f26, f31, rdn # perform operation
fmsub.s f28, f8, f26, f31, rmm # perform operation
fmsub.s f28, f8, f26, f31, rne # perform operation
fmsub.s f28, f8, f26, f31, rtz # perform operation
fmsub.s f28, f8, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xde89cad2 # load x3 with value 0xde89cad2
sw x3, 0(x2) # store 0xde89cad2 in memory
flw f25, 0(x2) # load 0xde89cad2 from memory into f25
fmsub.s f7, f1, f8, f25, dyn # perform operation
fmsub.s f7, f1, f8, f25, rdn # perform operation
fmsub.s f7, f1, f8, f25, rmm # perform operation
fmsub.s f7, f1, f8, f25, rne # perform operation
fmsub.s f7, f1, f8, f25, rtz # perform operation
fmsub.s f7, f1, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x71b85825 # load x3 with value 0x71b85825
sw x3, 0(x2) # store 0x71b85825 in memory
flw f31, 0(x2) # load 0x71b85825 from memory into f31
fmsub.s f24, f25, f18, f31, dyn # perform operation
fmsub.s f24, f25, f18, f31, rdn # perform operation
fmsub.s f24, f25, f18, f31, rmm # perform operation
fmsub.s f24, f25, f18, f31, rne # perform operation
fmsub.s f24, f25, f18, f31, rtz # perform operation
fmsub.s f24, f25, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xc21df722 # load x3 with value 0xc21df722
sw x3, 0(x2) # store 0xc21df722 in memory
flw f16, 0(x2) # load 0xc21df722 from memory into f16
fmsub.s f13, f26, f27, f16, dyn # perform operation
fmsub.s f13, f26, f27, f16, rdn # perform operation
fmsub.s f13, f26, f27, f16, rmm # perform operation
fmsub.s f13, f26, f27, f16, rne # perform operation
fmsub.s f13, f26, f27, f16, rtz # perform operation
fmsub.s f13, f26, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f26, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f26, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f26, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f26, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f26, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x0832c300 # load x3 with value 0x0832c300
sw x3, 0(x2) # store 0x0832c300 in memory
flw f11, 0(x2) # load 0x0832c300 from memory into f11
fmsub.s f1, f2, f24, f11, dyn # perform operation
fmsub.s f1, f2, f24, f11, rdn # perform operation
fmsub.s f1, f2, f24, f11, rmm # perform operation
fmsub.s f1, f2, f24, f11, rne # perform operation
fmsub.s f1, f2, f24, f11, rtz # perform operation
fmsub.s f1, f2, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0xdd816fda # load x3 with value 0xdd816fda
sw x3, 0(x2) # store 0xdd816fda in memory
flw f7, 0(x2) # load 0xdd816fda from memory into f7
fmsub.s f10, f23, f11, f7, dyn # perform operation
fmsub.s f10, f23, f11, f7, rdn # perform operation
fmsub.s f10, f23, f11, f7, rmm # perform operation
fmsub.s f10, f23, f11, f7, rne # perform operation
fmsub.s f10, f23, f11, f7, rtz # perform operation
fmsub.s f10, f23, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x2ae9ddfa # load x3 with value 0x2ae9ddfa
sw x3, 0(x2) # store 0x2ae9ddfa in memory
flw f17, 0(x2) # load 0x2ae9ddfa from memory into f17
fmsub.s f14, f1, f29, f17, dyn # perform operation
fmsub.s f14, f1, f29, f17, rdn # perform operation
fmsub.s f14, f1, f29, f17, rmm # perform operation
fmsub.s f14, f1, f29, f17, rne # perform operation
fmsub.s f14, f1, f29, f17, rtz # perform operation
fmsub.s f14, f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xb0ab88af # load x3 with value 0xb0ab88af
sw x3, 0(x2) # store 0xb0ab88af in memory
flw f26, 0(x2) # load 0xb0ab88af from memory into f26
fmsub.s f22, f19, f21, f26, dyn # perform operation
fmsub.s f22, f19, f21, f26, rdn # perform operation
fmsub.s f22, f19, f21, f26, rmm # perform operation
fmsub.s f22, f19, f21, f26, rne # perform operation
fmsub.s f22, f19, f21, f26, rtz # perform operation
fmsub.s f22, f19, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f19, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f19, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f19, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f19, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f19, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x208ec03e # load x3 with value 0x208ec03e
sw x3, 0(x2) # store 0x208ec03e in memory
flw f31, 0(x2) # load 0x208ec03e from memory into f31
fmsub.s f13, f15, f8, f31, dyn # perform operation
fmsub.s f13, f15, f8, f31, rdn # perform operation
fmsub.s f13, f15, f8, f31, rmm # perform operation
fmsub.s f13, f15, f8, f31, rne # perform operation
fmsub.s f13, f15, f8, f31, rtz # perform operation
fmsub.s f13, f15, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x5b5bd4bc # load x3 with value 0x5b5bd4bc
sw x3, 0(x2) # store 0x5b5bd4bc in memory
flw f8, 0(x2) # load 0x5b5bd4bc from memory into f8
fmsub.s f28, f25, f30, f8, dyn # perform operation
fmsub.s f28, f25, f30, f8, rdn # perform operation
fmsub.s f28, f25, f30, f8, rmm # perform operation
fmsub.s f28, f25, f30, f8, rne # perform operation
fmsub.s f28, f25, f30, f8, rtz # perform operation
fmsub.s f28, f25, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x5c36340e # load x3 with value 0x5c36340e
sw x3, 0(x2) # store 0x5c36340e in memory
flw f5, 0(x2) # load 0x5c36340e from memory into f5
fmsub.s f25, f15, f10, f5, dyn # perform operation
fmsub.s f25, f15, f10, f5, rdn # perform operation
fmsub.s f25, f15, f10, f5, rmm # perform operation
fmsub.s f25, f15, f10, f5, rne # perform operation
fmsub.s f25, f15, f10, f5, rtz # perform operation
fmsub.s f25, f15, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f15, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xe18b8f1e # load x3 with value 0xe18b8f1e
sw x3, 0(x2) # store 0xe18b8f1e in memory
flw f22, 0(x2) # load 0xe18b8f1e from memory into f22
fmsub.s f5, f26, f11, f22, dyn # perform operation
fmsub.s f5, f26, f11, f22, rdn # perform operation
fmsub.s f5, f26, f11, f22, rmm # perform operation
fmsub.s f5, f26, f11, f22, rne # perform operation
fmsub.s f5, f26, f11, f22, rtz # perform operation
fmsub.s f5, f26, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x73b7d303 # load x3 with value 0x73b7d303
sw x3, 0(x2) # store 0x73b7d303 in memory
flw f18, 0(x2) # load 0x73b7d303 from memory into f18
fmsub.s f2, f25, f20, f18, dyn # perform operation
fmsub.s f2, f25, f20, f18, rdn # perform operation
fmsub.s f2, f25, f20, f18, rmm # perform operation
fmsub.s f2, f25, f20, f18, rne # perform operation
fmsub.s f2, f25, f20, f18, rtz # perform operation
fmsub.s f2, f25, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f25, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xce4b8274 # load x3 with value 0xce4b8274
sw x3, 0(x2) # store 0xce4b8274 in memory
flw f17, 0(x2) # load 0xce4b8274 from memory into f17
fmsub.s f14, f5, f7, f17, dyn # perform operation
fmsub.s f14, f5, f7, f17, rdn # perform operation
fmsub.s f14, f5, f7, f17, rmm # perform operation
fmsub.s f14, f5, f7, f17, rne # perform operation
fmsub.s f14, f5, f7, f17, rtz # perform operation
fmsub.s f14, f5, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x52fff243 # load x3 with value 0x52fff243
sw x3, 0(x2) # store 0x52fff243 in memory
flw f27, 0(x2) # load 0x52fff243 from memory into f27
fmsub.s f10, f24, f6, f27, dyn # perform operation
fmsub.s f10, f24, f6, f27, rdn # perform operation
fmsub.s f10, f24, f6, f27, rmm # perform operation
fmsub.s f10, f24, f6, f27, rne # perform operation
fmsub.s f10, f24, f6, f27, rtz # perform operation
fmsub.s f10, f24, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xb5a4963a # load x3 with value 0xb5a4963a
sw x3, 0(x2) # store 0xb5a4963a in memory
flw f11, 0(x2) # load 0xb5a4963a from memory into f11
fmsub.s f5, f18, f13, f11, dyn # perform operation
fmsub.s f5, f18, f13, f11, rdn # perform operation
fmsub.s f5, f18, f13, f11, rmm # perform operation
fmsub.s f5, f18, f13, f11, rne # perform operation
fmsub.s f5, f18, f13, f11, rtz # perform operation
fmsub.s f5, f18, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x34698e7b # load x3 with value 0x34698e7b
sw x3, 0(x2) # store 0x34698e7b in memory
flw f24, 0(x2) # load 0x34698e7b from memory into f24
fmsub.s f1, f15, f22, f24, dyn # perform operation
fmsub.s f1, f15, f22, f24, rdn # perform operation
fmsub.s f1, f15, f22, f24, rmm # perform operation
fmsub.s f1, f15, f22, f24, rne # perform operation
fmsub.s f1, f15, f22, f24, rtz # perform operation
fmsub.s f1, f15, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x2e12bc08 # load x3 with value 0x2e12bc08
sw x3, 0(x2) # store 0x2e12bc08 in memory
flw f29, 0(x2) # load 0x2e12bc08 from memory into f29
fmsub.s f25, f12, f21, f29, dyn # perform operation
fmsub.s f25, f12, f21, f29, rdn # perform operation
fmsub.s f25, f12, f21, f29, rmm # perform operation
fmsub.s f25, f12, f21, f29, rne # perform operation
fmsub.s f25, f12, f21, f29, rtz # perform operation
fmsub.s f25, f12, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x7e404717 # load x3 with value 0x7e404717
sw x3, 0(x2) # store 0x7e404717 in memory
flw f19, 0(x2) # load 0x7e404717 from memory into f19
fmsub.s f25, f31, f15, f19, dyn # perform operation
fmsub.s f25, f31, f15, f19, rdn # perform operation
fmsub.s f25, f31, f15, f19, rmm # perform operation
fmsub.s f25, f31, f15, f19, rne # perform operation
fmsub.s f25, f31, f15, f19, rtz # perform operation
fmsub.s f25, f31, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f31, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xc0f0b337 # load x3 with value 0xc0f0b337
sw x3, 0(x2) # store 0xc0f0b337 in memory
flw f30, 0(x2) # load 0xc0f0b337 from memory into f30
fmsub.s f26, f8, f13, f30, dyn # perform operation
fmsub.s f26, f8, f13, f30, rdn # perform operation
fmsub.s f26, f8, f13, f30, rmm # perform operation
fmsub.s f26, f8, f13, f30, rne # perform operation
fmsub.s f26, f8, f13, f30, rtz # perform operation
fmsub.s f26, f8, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f8, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x577adbe4 # load x3 with value 0x577adbe4
sw x3, 0(x2) # store 0x577adbe4 in memory
flw f17, 0(x2) # load 0x577adbe4 from memory into f17
fmsub.s f18, f3, f6, f17, dyn # perform operation
fmsub.s f18, f3, f6, f17, rdn # perform operation
fmsub.s f18, f3, f6, f17, rmm # perform operation
fmsub.s f18, f3, f6, f17, rne # perform operation
fmsub.s f18, f3, f6, f17, rtz # perform operation
fmsub.s f18, f3, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0xbf4e3026 # load x3 with value 0xbf4e3026
sw x3, 0(x2) # store 0xbf4e3026 in memory
flw f18, 0(x2) # load 0xbf4e3026 from memory into f18
fmsub.s f26, f1, f15, f18, dyn # perform operation
fmsub.s f26, f1, f15, f18, rdn # perform operation
fmsub.s f26, f1, f15, f18, rmm # perform operation
fmsub.s f26, f1, f15, f18, rne # perform operation
fmsub.s f26, f1, f15, f18, rtz # perform operation
fmsub.s f26, f1, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f1, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f1, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f1, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f1, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f1, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x98186696 # load x3 with value 0x98186696
sw x3, 0(x2) # store 0x98186696 in memory
flw f29, 0(x2) # load 0x98186696 from memory into f29
fmsub.s f7, f6, f17, f29, dyn # perform operation
fmsub.s f7, f6, f17, f29, rdn # perform operation
fmsub.s f7, f6, f17, f29, rmm # perform operation
fmsub.s f7, f6, f17, f29, rne # perform operation
fmsub.s f7, f6, f17, f29, rtz # perform operation
fmsub.s f7, f6, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xaa044686 # load x3 with value 0xaa044686
sw x3, 0(x2) # store 0xaa044686 in memory
flw f7, 0(x2) # load 0xaa044686 from memory into f7
fmsub.s f3, f31, f19, f7, dyn # perform operation
fmsub.s f3, f31, f19, f7, rdn # perform operation
fmsub.s f3, f31, f19, f7, rmm # perform operation
fmsub.s f3, f31, f19, f7, rne # perform operation
fmsub.s f3, f31, f19, f7, rtz # perform operation
fmsub.s f3, f31, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x57aae4f0 # load x3 with value 0x57aae4f0
sw x3, 0(x2) # store 0x57aae4f0 in memory
flw f18, 0(x2) # load 0x57aae4f0 from memory into f18
fmsub.s f26, f13, f31, f18, dyn # perform operation
fmsub.s f26, f13, f31, f18, rdn # perform operation
fmsub.s f26, f13, f31, f18, rmm # perform operation
fmsub.s f26, f13, f31, f18, rne # perform operation
fmsub.s f26, f13, f31, f18, rtz # perform operation
fmsub.s f26, f13, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0xfac35e23 # load x3 with value 0xfac35e23
sw x3, 0(x2) # store 0xfac35e23 in memory
flw f30, 0(x2) # load 0xfac35e23 from memory into f30
fmsub.s f19, f9, f29, f30, dyn # perform operation
fmsub.s f19, f9, f29, f30, rdn # perform operation
fmsub.s f19, f9, f29, f30, rmm # perform operation
fmsub.s f19, f9, f29, f30, rne # perform operation
fmsub.s f19, f9, f29, f30, rtz # perform operation
fmsub.s f19, f9, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x80c07b55 # load x3 with value 0x80c07b55
sw x3, 0(x2) # store 0x80c07b55 in memory
flw f25, 0(x2) # load 0x80c07b55 from memory into f25
fmsub.s f18, f26, f27, f25, dyn # perform operation
fmsub.s f18, f26, f27, f25, rdn # perform operation
fmsub.s f18, f26, f27, f25, rmm # perform operation
fmsub.s f18, f26, f27, f25, rne # perform operation
fmsub.s f18, f26, f27, f25, rtz # perform operation
fmsub.s f18, f26, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xe8857018 # load x3 with value 0xe8857018
sw x3, 0(x2) # store 0xe8857018 in memory
flw f19, 0(x2) # load 0xe8857018 from memory into f19
fmsub.s f23, f27, f21, f19, dyn # perform operation
fmsub.s f23, f27, f21, f19, rdn # perform operation
fmsub.s f23, f27, f21, f19, rmm # perform operation
fmsub.s f23, f27, f21, f19, rne # perform operation
fmsub.s f23, f27, f21, f19, rtz # perform operation
fmsub.s f23, f27, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xd5de705c # load x3 with value 0xd5de705c
sw x3, 0(x2) # store 0xd5de705c in memory
flw f6, 0(x2) # load 0xd5de705c from memory into f6
fmsub.s f29, f8, f25, f6, dyn # perform operation
fmsub.s f29, f8, f25, f6, rdn # perform operation
fmsub.s f29, f8, f25, f6, rmm # perform operation
fmsub.s f29, f8, f25, f6, rne # perform operation
fmsub.s f29, f8, f25, f6, rtz # perform operation
fmsub.s f29, f8, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x8fec0c9c # load x3 with value 0x8fec0c9c
sw x3, 0(x2) # store 0x8fec0c9c in memory
flw f24, 0(x2) # load 0x8fec0c9c from memory into f24
fmsub.s f29, f21, f15, f24, dyn # perform operation
fmsub.s f29, f21, f15, f24, rdn # perform operation
fmsub.s f29, f21, f15, f24, rmm # perform operation
fmsub.s f29, f21, f15, f24, rne # perform operation
fmsub.s f29, f21, f15, f24, rtz # perform operation
fmsub.s f29, f21, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x6032ea6b # load x3 with value 0x6032ea6b
sw x3, 0(x2) # store 0x6032ea6b in memory
flw f14, 0(x2) # load 0x6032ea6b from memory into f14
fmsub.s f24, f3, f2, f14, dyn # perform operation
fmsub.s f24, f3, f2, f14, rdn # perform operation
fmsub.s f24, f3, f2, f14, rmm # perform operation
fmsub.s f24, f3, f2, f14, rne # perform operation
fmsub.s f24, f3, f2, f14, rtz # perform operation
fmsub.s f24, f3, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f3, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f3, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f3, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f3, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f3, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xd12f4ee4 # load x3 with value 0xd12f4ee4
sw x3, 0(x2) # store 0xd12f4ee4 in memory
flw f15, 0(x2) # load 0xd12f4ee4 from memory into f15
fmsub.s f17, f7, f29, f15, dyn # perform operation
fmsub.s f17, f7, f29, f15, rdn # perform operation
fmsub.s f17, f7, f29, f15, rmm # perform operation
fmsub.s f17, f7, f29, f15, rne # perform operation
fmsub.s f17, f7, f29, f15, rtz # perform operation
fmsub.s f17, f7, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0xcba5dff7 # load x3 with value 0xcba5dff7
sw x3, 0(x2) # store 0xcba5dff7 in memory
flw f12, 0(x2) # load 0xcba5dff7 from memory into f12
fmsub.s f17, f30, f6, f12, dyn # perform operation
fmsub.s f17, f30, f6, f12, rdn # perform operation
fmsub.s f17, f30, f6, f12, rmm # perform operation
fmsub.s f17, f30, f6, f12, rne # perform operation
fmsub.s f17, f30, f6, f12, rtz # perform operation
fmsub.s f17, f30, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f30, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x89cf03fa # load x3 with value 0x89cf03fa
sw x3, 0(x2) # store 0x89cf03fa in memory
flw f30, 0(x2) # load 0x89cf03fa from memory into f30
fmsub.s f18, f17, f1, f30, dyn # perform operation
fmsub.s f18, f17, f1, f30, rdn # perform operation
fmsub.s f18, f17, f1, f30, rmm # perform operation
fmsub.s f18, f17, f1, f30, rne # perform operation
fmsub.s f18, f17, f1, f30, rtz # perform operation
fmsub.s f18, f17, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f17, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x23486c30 # load x3 with value 0x23486c30
sw x3, 0(x2) # store 0x23486c30 in memory
flw f24, 0(x2) # load 0x23486c30 from memory into f24
fmsub.s f7, f27, f1, f24, dyn # perform operation
fmsub.s f7, f27, f1, f24, rdn # perform operation
fmsub.s f7, f27, f1, f24, rmm # perform operation
fmsub.s f7, f27, f1, f24, rne # perform operation
fmsub.s f7, f27, f1, f24, rtz # perform operation
fmsub.s f7, f27, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xbfe0adbc # load x3 with value 0xbfe0adbc
sw x3, 0(x2) # store 0xbfe0adbc in memory
flw f31, 0(x2) # load 0xbfe0adbc from memory into f31
fmsub.s f19, f18, f16, f31, dyn # perform operation
fmsub.s f19, f18, f16, f31, rdn # perform operation
fmsub.s f19, f18, f16, f31, rmm # perform operation
fmsub.s f19, f18, f16, f31, rne # perform operation
fmsub.s f19, f18, f16, f31, rtz # perform operation
fmsub.s f19, f18, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x36fcd9ba # load x3 with value 0x36fcd9ba
sw x3, 0(x2) # store 0x36fcd9ba in memory
flw f13, 0(x2) # load 0x36fcd9ba from memory into f13
fmsub.s f15, f7, f14, f13, dyn # perform operation
fmsub.s f15, f7, f14, f13, rdn # perform operation
fmsub.s f15, f7, f14, f13, rmm # perform operation
fmsub.s f15, f7, f14, f13, rne # perform operation
fmsub.s f15, f7, f14, f13, rtz # perform operation
fmsub.s f15, f7, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f7, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x1b59779b # load x3 with value 0x1b59779b
sw x3, 0(x2) # store 0x1b59779b in memory
flw f26, 0(x2) # load 0x1b59779b from memory into f26
fmsub.s f17, f15, f10, f26, dyn # perform operation
fmsub.s f17, f15, f10, f26, rdn # perform operation
fmsub.s f17, f15, f10, f26, rmm # perform operation
fmsub.s f17, f15, f10, f26, rne # perform operation
fmsub.s f17, f15, f10, f26, rtz # perform operation
fmsub.s f17, f15, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xf3f232f5 # load x3 with value 0xf3f232f5
sw x3, 0(x2) # store 0xf3f232f5 in memory
flw f9, 0(x2) # load 0xf3f232f5 from memory into f9
fmsub.s f28, f23, f6, f9, dyn # perform operation
fmsub.s f28, f23, f6, f9, rdn # perform operation
fmsub.s f28, f23, f6, f9, rmm # perform operation
fmsub.s f28, f23, f6, f9, rne # perform operation
fmsub.s f28, f23, f6, f9, rtz # perform operation
fmsub.s f28, f23, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f23, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x6410c5d9 # load x3 with value 0x6410c5d9
sw x3, 0(x2) # store 0x6410c5d9 in memory
flw f17, 0(x2) # load 0x6410c5d9 from memory into f17
fmsub.s f2, f7, f24, f17, dyn # perform operation
fmsub.s f2, f7, f24, f17, rdn # perform operation
fmsub.s f2, f7, f24, f17, rmm # perform operation
fmsub.s f2, f7, f24, f17, rne # perform operation
fmsub.s f2, f7, f24, f17, rtz # perform operation
fmsub.s f2, f7, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xfc4eb9a5 # load x3 with value 0xfc4eb9a5
sw x3, 0(x2) # store 0xfc4eb9a5 in memory
flw f18, 0(x2) # load 0xfc4eb9a5 from memory into f18
fmsub.s f26, f25, f15, f18, dyn # perform operation
fmsub.s f26, f25, f15, f18, rdn # perform operation
fmsub.s f26, f25, f15, f18, rmm # perform operation
fmsub.s f26, f25, f15, f18, rne # perform operation
fmsub.s f26, f25, f15, f18, rtz # perform operation
fmsub.s f26, f25, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x6526df28 # load x3 with value 0x6526df28
sw x3, 0(x2) # store 0x6526df28 in memory
flw f26, 0(x2) # load 0x6526df28 from memory into f26
fmsub.s f29, f2, f22, f26, dyn # perform operation
fmsub.s f29, f2, f22, f26, rdn # perform operation
fmsub.s f29, f2, f22, f26, rmm # perform operation
fmsub.s f29, f2, f22, f26, rne # perform operation
fmsub.s f29, f2, f22, f26, rtz # perform operation
fmsub.s f29, f2, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xe27342f7 # load x3 with value 0xe27342f7
sw x3, 0(x2) # store 0xe27342f7 in memory
flw f23, 0(x2) # load 0xe27342f7 from memory into f23
fmsub.s f22, f5, f18, f23, dyn # perform operation
fmsub.s f22, f5, f18, f23, rdn # perform operation
fmsub.s f22, f5, f18, f23, rmm # perform operation
fmsub.s f22, f5, f18, f23, rne # perform operation
fmsub.s f22, f5, f18, f23, rtz # perform operation
fmsub.s f22, f5, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xb9b47a63 # load x3 with value 0xb9b47a63
sw x3, 0(x2) # store 0xb9b47a63 in memory
flw f29, 0(x2) # load 0xb9b47a63 from memory into f29
fmsub.s f19, f14, f15, f29, dyn # perform operation
fmsub.s f19, f14, f15, f29, rdn # perform operation
fmsub.s f19, f14, f15, f29, rmm # perform operation
fmsub.s f19, f14, f15, f29, rne # perform operation
fmsub.s f19, f14, f15, f29, rtz # perform operation
fmsub.s f19, f14, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f14, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x51277b17 # load x3 with value 0x51277b17
sw x3, 0(x2) # store 0x51277b17 in memory
flw f11, 0(x2) # load 0x51277b17 from memory into f11
fmsub.s f9, f7, f10, f11, dyn # perform operation
fmsub.s f9, f7, f10, f11, rdn # perform operation
fmsub.s f9, f7, f10, f11, rmm # perform operation
fmsub.s f9, f7, f10, f11, rne # perform operation
fmsub.s f9, f7, f10, f11, rtz # perform operation
fmsub.s f9, f7, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xbac392de # load x3 with value 0xbac392de
sw x3, 0(x2) # store 0xbac392de in memory
flw f23, 0(x2) # load 0xbac392de from memory into f23
fmsub.s f21, f3, f12, f23, dyn # perform operation
fmsub.s f21, f3, f12, f23, rdn # perform operation
fmsub.s f21, f3, f12, f23, rmm # perform operation
fmsub.s f21, f3, f12, f23, rne # perform operation
fmsub.s f21, f3, f12, f23, rtz # perform operation
fmsub.s f21, f3, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x9b67288a # load x3 with value 0x9b67288a
sw x3, 0(x2) # store 0x9b67288a in memory
flw f14, 0(x2) # load 0x9b67288a from memory into f14
fmsub.s f27, f10, f13, f14, dyn # perform operation
fmsub.s f27, f10, f13, f14, rdn # perform operation
fmsub.s f27, f10, f13, f14, rmm # perform operation
fmsub.s f27, f10, f13, f14, rne # perform operation
fmsub.s f27, f10, f13, f14, rtz # perform operation
fmsub.s f27, f10, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xa0a834ce # load x3 with value 0xa0a834ce
sw x3, 0(x2) # store 0xa0a834ce in memory
flw f15, 0(x2) # load 0xa0a834ce from memory into f15
fmsub.s f6, f14, f25, f15, dyn # perform operation
fmsub.s f6, f14, f25, f15, rdn # perform operation
fmsub.s f6, f14, f25, f15, rmm # perform operation
fmsub.s f6, f14, f25, f15, rne # perform operation
fmsub.s f6, f14, f25, f15, rtz # perform operation
fmsub.s f6, f14, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f14, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x93b224e0 # load x3 with value 0x93b224e0
sw x3, 0(x2) # store 0x93b224e0 in memory
flw f15, 0(x2) # load 0x93b224e0 from memory into f15
fmsub.s f23, f27, f3, f15, dyn # perform operation
fmsub.s f23, f27, f3, f15, rdn # perform operation
fmsub.s f23, f27, f3, f15, rmm # perform operation
fmsub.s f23, f27, f3, f15, rne # perform operation
fmsub.s f23, f27, f3, f15, rtz # perform operation
fmsub.s f23, f27, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x67d75cad # load x3 with value 0x67d75cad
sw x3, 0(x2) # store 0x67d75cad in memory
flw f5, 0(x2) # load 0x67d75cad from memory into f5
fmsub.s f29, f7, f15, f5, dyn # perform operation
fmsub.s f29, f7, f15, f5, rdn # perform operation
fmsub.s f29, f7, f15, f5, rmm # perform operation
fmsub.s f29, f7, f15, f5, rne # perform operation
fmsub.s f29, f7, f15, f5, rtz # perform operation
fmsub.s f29, f7, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f7, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x780d5588 # load x3 with value 0x780d5588
sw x3, 0(x2) # store 0x780d5588 in memory
flw f31, 0(x2) # load 0x780d5588 from memory into f31
fmsub.s f26, f12, f10, f31, dyn # perform operation
fmsub.s f26, f12, f10, f31, rdn # perform operation
fmsub.s f26, f12, f10, f31, rmm # perform operation
fmsub.s f26, f12, f10, f31, rne # perform operation
fmsub.s f26, f12, f10, f31, rtz # perform operation
fmsub.s f26, f12, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xeb7c7135 # load x3 with value 0xeb7c7135
sw x3, 0(x2) # store 0xeb7c7135 in memory
flw f29, 0(x2) # load 0xeb7c7135 from memory into f29
fmsub.s f11, f16, f2, f29, dyn # perform operation
fmsub.s f11, f16, f2, f29, rdn # perform operation
fmsub.s f11, f16, f2, f29, rmm # perform operation
fmsub.s f11, f16, f2, f29, rne # perform operation
fmsub.s f11, f16, f2, f29, rtz # perform operation
fmsub.s f11, f16, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x36bc1dcc # load x3 with value 0x36bc1dcc
sw x3, 0(x2) # store 0x36bc1dcc in memory
flw f3, 0(x2) # load 0x36bc1dcc from memory into f3
fmsub.s f31, f17, f1, f3, dyn # perform operation
fmsub.s f31, f17, f1, f3, rdn # perform operation
fmsub.s f31, f17, f1, f3, rmm # perform operation
fmsub.s f31, f17, f1, f3, rne # perform operation
fmsub.s f31, f17, f1, f3, rtz # perform operation
fmsub.s f31, f17, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x934d3dee # load x3 with value 0x934d3dee
sw x3, 0(x2) # store 0x934d3dee in memory
flw f10, 0(x2) # load 0x934d3dee from memory into f10
fmsub.s f12, f9, f1, f10, dyn # perform operation
fmsub.s f12, f9, f1, f10, rdn # perform operation
fmsub.s f12, f9, f1, f10, rmm # perform operation
fmsub.s f12, f9, f1, f10, rne # perform operation
fmsub.s f12, f9, f1, f10, rtz # perform operation
fmsub.s f12, f9, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xd456d033 # load x3 with value 0xd456d033
sw x3, 0(x2) # store 0xd456d033 in memory
flw f9, 0(x2) # load 0xd456d033 from memory into f9
fmsub.s f27, f13, f18, f9, dyn # perform operation
fmsub.s f27, f13, f18, f9, rdn # perform operation
fmsub.s f27, f13, f18, f9, rmm # perform operation
fmsub.s f27, f13, f18, f9, rne # perform operation
fmsub.s f27, f13, f18, f9, rtz # perform operation
fmsub.s f27, f13, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x4956c445 # load x3 with value 0x4956c445
sw x3, 0(x2) # store 0x4956c445 in memory
flw f30, 0(x2) # load 0x4956c445 from memory into f30
fmsub.s f31, f3, f25, f30, dyn # perform operation
fmsub.s f31, f3, f25, f30, rdn # perform operation
fmsub.s f31, f3, f25, f30, rmm # perform operation
fmsub.s f31, f3, f25, f30, rne # perform operation
fmsub.s f31, f3, f25, f30, rtz # perform operation
fmsub.s f31, f3, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x8aa5bb07 # load x3 with value 0x8aa5bb07
sw x3, 0(x2) # store 0x8aa5bb07 in memory
flw f31, 0(x2) # load 0x8aa5bb07 from memory into f31
fmsub.s f13, f28, f14, f31, dyn # perform operation
fmsub.s f13, f28, f14, f31, rdn # perform operation
fmsub.s f13, f28, f14, f31, rmm # perform operation
fmsub.s f13, f28, f14, f31, rne # perform operation
fmsub.s f13, f28, f14, f31, rtz # perform operation
fmsub.s f13, f28, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0xd0a9d115 # load x3 with value 0xd0a9d115
sw x3, 0(x2) # store 0xd0a9d115 in memory
flw f18, 0(x2) # load 0xd0a9d115 from memory into f18
fmsub.s f15, f21, f26, f18, dyn # perform operation
fmsub.s f15, f21, f26, f18, rdn # perform operation
fmsub.s f15, f21, f26, f18, rmm # perform operation
fmsub.s f15, f21, f26, f18, rne # perform operation
fmsub.s f15, f21, f26, f18, rtz # perform operation
fmsub.s f15, f21, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f21, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x5029f2a0 # load x3 with value 0x5029f2a0
sw x3, 0(x2) # store 0x5029f2a0 in memory
flw f5, 0(x2) # load 0x5029f2a0 from memory into f5
fmsub.s f9, f31, f26, f5, dyn # perform operation
fmsub.s f9, f31, f26, f5, rdn # perform operation
fmsub.s f9, f31, f26, f5, rmm # perform operation
fmsub.s f9, f31, f26, f5, rne # perform operation
fmsub.s f9, f31, f26, f5, rtz # perform operation
fmsub.s f9, f31, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x12c08cb1 # load x3 with value 0x12c08cb1
sw x3, 0(x2) # store 0x12c08cb1 in memory
flw f19, 0(x2) # load 0x12c08cb1 from memory into f19
fmsub.s f6, f22, f13, f19, dyn # perform operation
fmsub.s f6, f22, f13, f19, rdn # perform operation
fmsub.s f6, f22, f13, f19, rmm # perform operation
fmsub.s f6, f22, f13, f19, rne # perform operation
fmsub.s f6, f22, f13, f19, rtz # perform operation
fmsub.s f6, f22, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f22, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xe5296d00 # load x3 with value 0xe5296d00
sw x3, 0(x2) # store 0xe5296d00 in memory
flw f19, 0(x2) # load 0xe5296d00 from memory into f19
fmsub.s f26, f27, f18, f19, dyn # perform operation
fmsub.s f26, f27, f18, f19, rdn # perform operation
fmsub.s f26, f27, f18, f19, rmm # perform operation
fmsub.s f26, f27, f18, f19, rne # perform operation
fmsub.s f26, f27, f18, f19, rtz # perform operation
fmsub.s f26, f27, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x77e7eb29 # load x3 with value 0x77e7eb29
sw x3, 0(x2) # store 0x77e7eb29 in memory
flw f17, 0(x2) # load 0x77e7eb29 from memory into f17
fmsub.s f11, f18, f7, f17, dyn # perform operation
fmsub.s f11, f18, f7, f17, rdn # perform operation
fmsub.s f11, f18, f7, f17, rmm # perform operation
fmsub.s f11, f18, f7, f17, rne # perform operation
fmsub.s f11, f18, f7, f17, rtz # perform operation
fmsub.s f11, f18, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xa957d876 # load x3 with value 0xa957d876
sw x3, 0(x2) # store 0xa957d876 in memory
flw f15, 0(x2) # load 0xa957d876 from memory into f15
fmsub.s f11, f10, f17, f15, dyn # perform operation
fmsub.s f11, f10, f17, f15, rdn # perform operation
fmsub.s f11, f10, f17, f15, rmm # perform operation
fmsub.s f11, f10, f17, f15, rne # perform operation
fmsub.s f11, f10, f17, f15, rtz # perform operation
fmsub.s f11, f10, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f10, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f10, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f10, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f10, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f10, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x8a4e6017 # load x3 with value 0x8a4e6017
sw x3, 0(x2) # store 0x8a4e6017 in memory
flw f7, 0(x2) # load 0x8a4e6017 from memory into f7
fmsub.s f30, f24, f17, f7, dyn # perform operation
fmsub.s f30, f24, f17, f7, rdn # perform operation
fmsub.s f30, f24, f17, f7, rmm # perform operation
fmsub.s f30, f24, f17, f7, rne # perform operation
fmsub.s f30, f24, f17, f7, rtz # perform operation
fmsub.s f30, f24, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f24, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x48c005ab # load x3 with value 0x48c005ab
sw x3, 0(x2) # store 0x48c005ab in memory
flw f12, 0(x2) # load 0x48c005ab from memory into f12
fmsub.s f18, f24, f15, f12, dyn # perform operation
fmsub.s f18, f24, f15, f12, rdn # perform operation
fmsub.s f18, f24, f15, f12, rmm # perform operation
fmsub.s f18, f24, f15, f12, rne # perform operation
fmsub.s f18, f24, f15, f12, rtz # perform operation
fmsub.s f18, f24, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x2ed8faf5 # load x3 with value 0x2ed8faf5
sw x3, 0(x2) # store 0x2ed8faf5 in memory
flw f10, 0(x2) # load 0x2ed8faf5 from memory into f10
fmsub.s f9, f16, f26, f10, dyn # perform operation
fmsub.s f9, f16, f26, f10, rdn # perform operation
fmsub.s f9, f16, f26, f10, rmm # perform operation
fmsub.s f9, f16, f26, f10, rne # perform operation
fmsub.s f9, f16, f26, f10, rtz # perform operation
fmsub.s f9, f16, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x761c7760 # load x3 with value 0x761c7760
sw x3, 0(x2) # store 0x761c7760 in memory
flw f6, 0(x2) # load 0x761c7760 from memory into f6
fmsub.s f27, f11, f3, f6, dyn # perform operation
fmsub.s f27, f11, f3, f6, rdn # perform operation
fmsub.s f27, f11, f3, f6, rmm # perform operation
fmsub.s f27, f11, f3, f6, rne # perform operation
fmsub.s f27, f11, f3, f6, rtz # perform operation
fmsub.s f27, f11, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xda2e77f5 # load x3 with value 0xda2e77f5
sw x3, 0(x2) # store 0xda2e77f5 in memory
flw f30, 0(x2) # load 0xda2e77f5 from memory into f30
fmsub.s f22, f8, f7, f30, dyn # perform operation
fmsub.s f22, f8, f7, f30, rdn # perform operation
fmsub.s f22, f8, f7, f30, rmm # perform operation
fmsub.s f22, f8, f7, f30, rne # perform operation
fmsub.s f22, f8, f7, f30, rtz # perform operation
fmsub.s f22, f8, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x19f73278 # load x3 with value 0x19f73278
sw x3, 0(x2) # store 0x19f73278 in memory
flw f5, 0(x2) # load 0x19f73278 from memory into f5
fmsub.s f24, f31, f25, f5, dyn # perform operation
fmsub.s f24, f31, f25, f5, rdn # perform operation
fmsub.s f24, f31, f25, f5, rmm # perform operation
fmsub.s f24, f31, f25, f5, rne # perform operation
fmsub.s f24, f31, f25, f5, rtz # perform operation
fmsub.s f24, f31, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x11da0a7e # load x3 with value 0x11da0a7e
sw x3, 0(x2) # store 0x11da0a7e in memory
flw f1, 0(x2) # load 0x11da0a7e from memory into f1
fmsub.s f21, f25, f23, f1, dyn # perform operation
fmsub.s f21, f25, f23, f1, rdn # perform operation
fmsub.s f21, f25, f23, f1, rmm # perform operation
fmsub.s f21, f25, f23, f1, rne # perform operation
fmsub.s f21, f25, f23, f1, rtz # perform operation
fmsub.s f21, f25, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x6067c931 # load x3 with value 0x6067c931
sw x3, 0(x2) # store 0x6067c931 in memory
flw f18, 0(x2) # load 0x6067c931 from memory into f18
fmsub.s f21, f14, f28, f18, dyn # perform operation
fmsub.s f21, f14, f28, f18, rdn # perform operation
fmsub.s f21, f14, f28, f18, rmm # perform operation
fmsub.s f21, f14, f28, f18, rne # perform operation
fmsub.s f21, f14, f28, f18, rtz # perform operation
fmsub.s f21, f14, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xe69ae77a # load x3 with value 0xe69ae77a
sw x3, 0(x2) # store 0xe69ae77a in memory
flw f29, 0(x2) # load 0xe69ae77a from memory into f29
fmsub.s f10, f18, f9, f29, dyn # perform operation
fmsub.s f10, f18, f9, f29, rdn # perform operation
fmsub.s f10, f18, f9, f29, rmm # perform operation
fmsub.s f10, f18, f9, f29, rne # perform operation
fmsub.s f10, f18, f9, f29, rtz # perform operation
fmsub.s f10, f18, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xb5caa031 # load x3 with value 0xb5caa031
sw x3, 0(x2) # store 0xb5caa031 in memory
flw f9, 0(x2) # load 0xb5caa031 from memory into f9
fmsub.s f24, f11, f5, f9, dyn # perform operation
fmsub.s f24, f11, f5, f9, rdn # perform operation
fmsub.s f24, f11, f5, f9, rmm # perform operation
fmsub.s f24, f11, f5, f9, rne # perform operation
fmsub.s f24, f11, f5, f9, rtz # perform operation
fmsub.s f24, f11, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x47ee3b84 # load x3 with value 0x47ee3b84
sw x3, 0(x2) # store 0x47ee3b84 in memory
flw f8, 0(x2) # load 0x47ee3b84 from memory into f8
fmsub.s f27, f23, f11, f8, dyn # perform operation
fmsub.s f27, f23, f11, f8, rdn # perform operation
fmsub.s f27, f23, f11, f8, rmm # perform operation
fmsub.s f27, f23, f11, f8, rne # perform operation
fmsub.s f27, f23, f11, f8, rtz # perform operation
fmsub.s f27, f23, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x6c009dd1 # load x3 with value 0x6c009dd1
sw x3, 0(x2) # store 0x6c009dd1 in memory
flw f23, 0(x2) # load 0x6c009dd1 from memory into f23
fmsub.s f3, f28, f31, f23, dyn # perform operation
fmsub.s f3, f28, f31, f23, rdn # perform operation
fmsub.s f3, f28, f31, f23, rmm # perform operation
fmsub.s f3, f28, f31, f23, rne # perform operation
fmsub.s f3, f28, f31, f23, rtz # perform operation
fmsub.s f3, f28, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xd81b0ac3 # load x3 with value 0xd81b0ac3
sw x3, 0(x2) # store 0xd81b0ac3 in memory
flw f9, 0(x2) # load 0xd81b0ac3 from memory into f9
fmsub.s f24, f17, f2, f9, dyn # perform operation
fmsub.s f24, f17, f2, f9, rdn # perform operation
fmsub.s f24, f17, f2, f9, rmm # perform operation
fmsub.s f24, f17, f2, f9, rne # perform operation
fmsub.s f24, f17, f2, f9, rtz # perform operation
fmsub.s f24, f17, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xa6f2b6fc # load x3 with value 0xa6f2b6fc
sw x3, 0(x2) # store 0xa6f2b6fc in memory
flw f17, 0(x2) # load 0xa6f2b6fc from memory into f17
fmsub.s f23, f8, f25, f17, dyn # perform operation
fmsub.s f23, f8, f25, f17, rdn # perform operation
fmsub.s f23, f8, f25, f17, rmm # perform operation
fmsub.s f23, f8, f25, f17, rne # perform operation
fmsub.s f23, f8, f25, f17, rtz # perform operation
fmsub.s f23, f8, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x54f155e6 # load x3 with value 0x54f155e6
sw x3, 0(x2) # store 0x54f155e6 in memory
flw f12, 0(x2) # load 0x54f155e6 from memory into f12
fmsub.s f22, f6, f27, f12, dyn # perform operation
fmsub.s f22, f6, f27, f12, rdn # perform operation
fmsub.s f22, f6, f27, f12, rmm # perform operation
fmsub.s f22, f6, f27, f12, rne # perform operation
fmsub.s f22, f6, f27, f12, rtz # perform operation
fmsub.s f22, f6, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x75726a2e # load x3 with value 0x75726a2e
sw x3, 0(x2) # store 0x75726a2e in memory
flw f1, 0(x2) # load 0x75726a2e from memory into f1
fmsub.s f25, f2, f21, f1, dyn # perform operation
fmsub.s f25, f2, f21, f1, rdn # perform operation
fmsub.s f25, f2, f21, f1, rmm # perform operation
fmsub.s f25, f2, f21, f1, rne # perform operation
fmsub.s f25, f2, f21, f1, rtz # perform operation
fmsub.s f25, f2, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x69aa09f2 # load x3 with value 0x69aa09f2
sw x3, 0(x2) # store 0x69aa09f2 in memory
flw f7, 0(x2) # load 0x69aa09f2 from memory into f7
fmsub.s f22, f29, f18, f7, dyn # perform operation
fmsub.s f22, f29, f18, f7, rdn # perform operation
fmsub.s f22, f29, f18, f7, rmm # perform operation
fmsub.s f22, f29, f18, f7, rne # perform operation
fmsub.s f22, f29, f18, f7, rtz # perform operation
fmsub.s f22, f29, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f29, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x96257112 # load x3 with value 0x96257112
sw x3, 0(x2) # store 0x96257112 in memory
flw f21, 0(x2) # load 0x96257112 from memory into f21
fmsub.s f19, f24, f20, f21, dyn # perform operation
fmsub.s f19, f24, f20, f21, rdn # perform operation
fmsub.s f19, f24, f20, f21, rmm # perform operation
fmsub.s f19, f24, f20, f21, rne # perform operation
fmsub.s f19, f24, f20, f21, rtz # perform operation
fmsub.s f19, f24, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x306e229a # load x3 with value 0x306e229a
sw x3, 0(x2) # store 0x306e229a in memory
flw f31, 0(x2) # load 0x306e229a from memory into f31
fmsub.s f13, f28, f3, f31, dyn # perform operation
fmsub.s f13, f28, f3, f31, rdn # perform operation
fmsub.s f13, f28, f3, f31, rmm # perform operation
fmsub.s f13, f28, f3, f31, rne # perform operation
fmsub.s f13, f28, f3, f31, rtz # perform operation
fmsub.s f13, f28, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x357ec8a6 # load x3 with value 0x357ec8a6
sw x3, 0(x2) # store 0x357ec8a6 in memory
flw f5, 0(x2) # load 0x357ec8a6 from memory into f5
fmsub.s f29, f28, f12, f5, dyn # perform operation
fmsub.s f29, f28, f12, f5, rdn # perform operation
fmsub.s f29, f28, f12, f5, rmm # perform operation
fmsub.s f29, f28, f12, f5, rne # perform operation
fmsub.s f29, f28, f12, f5, rtz # perform operation
fmsub.s f29, f28, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xb9a4173f # load x3 with value 0xb9a4173f
sw x3, 0(x2) # store 0xb9a4173f in memory
flw f24, 0(x2) # load 0xb9a4173f from memory into f24
fmsub.s f16, f2, f17, f24, dyn # perform operation
fmsub.s f16, f2, f17, f24, rdn # perform operation
fmsub.s f16, f2, f17, f24, rmm # perform operation
fmsub.s f16, f2, f17, f24, rne # perform operation
fmsub.s f16, f2, f17, f24, rtz # perform operation
fmsub.s f16, f2, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xd6a8d015 # load x3 with value 0xd6a8d015
sw x3, 0(x2) # store 0xd6a8d015 in memory
flw f10, 0(x2) # load 0xd6a8d015 from memory into f10
fmsub.s f27, f20, f6, f10, dyn # perform operation
fmsub.s f27, f20, f6, f10, rdn # perform operation
fmsub.s f27, f20, f6, f10, rmm # perform operation
fmsub.s f27, f20, f6, f10, rne # perform operation
fmsub.s f27, f20, f6, f10, rtz # perform operation
fmsub.s f27, f20, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xcbf57b38 # load x3 with value 0xcbf57b38
sw x3, 0(x2) # store 0xcbf57b38 in memory
flw f5, 0(x2) # load 0xcbf57b38 from memory into f5
fmsub.s f11, f14, f24, f5, dyn # perform operation
fmsub.s f11, f14, f24, f5, rdn # perform operation
fmsub.s f11, f14, f24, f5, rmm # perform operation
fmsub.s f11, f14, f24, f5, rne # perform operation
fmsub.s f11, f14, f24, f5, rtz # perform operation
fmsub.s f11, f14, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x84c15a10 # load x3 with value 0x84c15a10
sw x3, 0(x2) # store 0x84c15a10 in memory
flw f27, 0(x2) # load 0x84c15a10 from memory into f27
fmsub.s f6, f20, f22, f27, dyn # perform operation
fmsub.s f6, f20, f22, f27, rdn # perform operation
fmsub.s f6, f20, f22, f27, rmm # perform operation
fmsub.s f6, f20, f22, f27, rne # perform operation
fmsub.s f6, f20, f22, f27, rtz # perform operation
fmsub.s f6, f20, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xd3c92d4b # load x3 with value 0xd3c92d4b
sw x3, 0(x2) # store 0xd3c92d4b in memory
flw f31, 0(x2) # load 0xd3c92d4b from memory into f31
fmsub.s f7, f19, f18, f31, dyn # perform operation
fmsub.s f7, f19, f18, f31, rdn # perform operation
fmsub.s f7, f19, f18, f31, rmm # perform operation
fmsub.s f7, f19, f18, f31, rne # perform operation
fmsub.s f7, f19, f18, f31, rtz # perform operation
fmsub.s f7, f19, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xfbcf5747 # load x3 with value 0xfbcf5747
sw x3, 0(x2) # store 0xfbcf5747 in memory
flw f28, 0(x2) # load 0xfbcf5747 from memory into f28
fmsub.s f10, f8, f17, f28, dyn # perform operation
fmsub.s f10, f8, f17, f28, rdn # perform operation
fmsub.s f10, f8, f17, f28, rmm # perform operation
fmsub.s f10, f8, f17, f28, rne # perform operation
fmsub.s f10, f8, f17, f28, rtz # perform operation
fmsub.s f10, f8, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xe3c0d622 # load x3 with value 0xe3c0d622
sw x3, 0(x2) # store 0xe3c0d622 in memory
flw f7, 0(x2) # load 0xe3c0d622 from memory into f7
fmsub.s f11, f17, f30, f7, dyn # perform operation
fmsub.s f11, f17, f30, f7, rdn # perform operation
fmsub.s f11, f17, f30, f7, rmm # perform operation
fmsub.s f11, f17, f30, f7, rne # perform operation
fmsub.s f11, f17, f30, f7, rtz # perform operation
fmsub.s f11, f17, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xa83beb1e # load x3 with value 0xa83beb1e
sw x3, 0(x2) # store 0xa83beb1e in memory
flw f11, 0(x2) # load 0xa83beb1e from memory into f11
fmsub.s f16, f27, f7, f11, dyn # perform operation
fmsub.s f16, f27, f7, f11, rdn # perform operation
fmsub.s f16, f27, f7, f11, rmm # perform operation
fmsub.s f16, f27, f7, f11, rne # perform operation
fmsub.s f16, f27, f7, f11, rtz # perform operation
fmsub.s f16, f27, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x74d2a0dd # load x3 with value 0x74d2a0dd
sw x3, 0(x2) # store 0x74d2a0dd in memory
flw f16, 0(x2) # load 0x74d2a0dd from memory into f16
fmsub.s f30, f10, f15, f16, dyn # perform operation
fmsub.s f30, f10, f15, f16, rdn # perform operation
fmsub.s f30, f10, f15, f16, rmm # perform operation
fmsub.s f30, f10, f15, f16, rne # perform operation
fmsub.s f30, f10, f15, f16, rtz # perform operation
fmsub.s f30, f10, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x8ce4d41c # load x3 with value 0x8ce4d41c
sw x3, 0(x2) # store 0x8ce4d41c in memory
flw f16, 0(x2) # load 0x8ce4d41c from memory into f16
fmsub.s f29, f11, f6, f16, dyn # perform operation
fmsub.s f29, f11, f6, f16, rdn # perform operation
fmsub.s f29, f11, f6, f16, rmm # perform operation
fmsub.s f29, f11, f6, f16, rne # perform operation
fmsub.s f29, f11, f6, f16, rtz # perform operation
fmsub.s f29, f11, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f11, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x7ab58f97 # load x3 with value 0x7ab58f97
sw x3, 0(x2) # store 0x7ab58f97 in memory
flw f29, 0(x2) # load 0x7ab58f97 from memory into f29
fmsub.s f13, f24, f5, f29, dyn # perform operation
fmsub.s f13, f24, f5, f29, rdn # perform operation
fmsub.s f13, f24, f5, f29, rmm # perform operation
fmsub.s f13, f24, f5, f29, rne # perform operation
fmsub.s f13, f24, f5, f29, rtz # perform operation
fmsub.s f13, f24, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x4697f9e2 # load x3 with value 0x4697f9e2
sw x3, 0(x2) # store 0x4697f9e2 in memory
flw f22, 0(x2) # load 0x4697f9e2 from memory into f22
fmsub.s f7, f8, f23, f22, dyn # perform operation
fmsub.s f7, f8, f23, f22, rdn # perform operation
fmsub.s f7, f8, f23, f22, rmm # perform operation
fmsub.s f7, f8, f23, f22, rne # perform operation
fmsub.s f7, f8, f23, f22, rtz # perform operation
fmsub.s f7, f8, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x0c824604 # load x3 with value 0x0c824604
sw x3, 0(x2) # store 0x0c824604 in memory
flw f22, 0(x2) # load 0x0c824604 from memory into f22
fmsub.s f17, f7, f5, f22, dyn # perform operation
fmsub.s f17, f7, f5, f22, rdn # perform operation
fmsub.s f17, f7, f5, f22, rmm # perform operation
fmsub.s f17, f7, f5, f22, rne # perform operation
fmsub.s f17, f7, f5, f22, rtz # perform operation
fmsub.s f17, f7, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0xb8c3c3fd # load x3 with value 0xb8c3c3fd
sw x3, 0(x2) # store 0xb8c3c3fd in memory
flw f9, 0(x2) # load 0xb8c3c3fd from memory into f9
fmsub.s f20, f30, f26, f9, dyn # perform operation
fmsub.s f20, f30, f26, f9, rdn # perform operation
fmsub.s f20, f30, f26, f9, rmm # perform operation
fmsub.s f20, f30, f26, f9, rne # perform operation
fmsub.s f20, f30, f26, f9, rtz # perform operation
fmsub.s f20, f30, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xf9c69ad5 # load x3 with value 0xf9c69ad5
sw x3, 0(x2) # store 0xf9c69ad5 in memory
flw f23, 0(x2) # load 0xf9c69ad5 from memory into f23
fmsub.s f24, f20, f13, f23, dyn # perform operation
fmsub.s f24, f20, f13, f23, rdn # perform operation
fmsub.s f24, f20, f13, f23, rmm # perform operation
fmsub.s f24, f20, f13, f23, rne # perform operation
fmsub.s f24, f20, f13, f23, rtz # perform operation
fmsub.s f24, f20, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xfa7a5307 # load x3 with value 0xfa7a5307
sw x3, 0(x2) # store 0xfa7a5307 in memory
flw f15, 0(x2) # load 0xfa7a5307 from memory into f15
fmsub.s f17, f3, f27, f15, dyn # perform operation
fmsub.s f17, f3, f27, f15, rdn # perform operation
fmsub.s f17, f3, f27, f15, rmm # perform operation
fmsub.s f17, f3, f27, f15, rne # perform operation
fmsub.s f17, f3, f27, f15, rtz # perform operation
fmsub.s f17, f3, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0xd036c4c4 # load x3 with value 0xd036c4c4
sw x3, 0(x2) # store 0xd036c4c4 in memory
flw f10, 0(x2) # load 0xd036c4c4 from memory into f10
fmsub.s f26, f11, f24, f10, dyn # perform operation
fmsub.s f26, f11, f24, f10, rdn # perform operation
fmsub.s f26, f11, f24, f10, rmm # perform operation
fmsub.s f26, f11, f24, f10, rne # perform operation
fmsub.s f26, f11, f24, f10, rtz # perform operation
fmsub.s f26, f11, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x7392ef1d # load x3 with value 0x7392ef1d
sw x3, 0(x2) # store 0x7392ef1d in memory
flw f12, 0(x2) # load 0x7392ef1d from memory into f12
fmsub.s f8, f18, f22, f12, dyn # perform operation
fmsub.s f8, f18, f22, f12, rdn # perform operation
fmsub.s f8, f18, f22, f12, rmm # perform operation
fmsub.s f8, f18, f22, f12, rne # perform operation
fmsub.s f8, f18, f22, f12, rtz # perform operation
fmsub.s f8, f18, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f18, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xfcf8e055 # load x3 with value 0xfcf8e055
sw x3, 0(x2) # store 0xfcf8e055 in memory
flw f27, 0(x2) # load 0xfcf8e055 from memory into f27
fmsub.s f19, f9, f22, f27, dyn # perform operation
fmsub.s f19, f9, f22, f27, rdn # perform operation
fmsub.s f19, f9, f22, f27, rmm # perform operation
fmsub.s f19, f9, f22, f27, rne # perform operation
fmsub.s f19, f9, f22, f27, rtz # perform operation
fmsub.s f19, f9, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xc24df423 # load x3 with value 0xc24df423
sw x3, 0(x2) # store 0xc24df423 in memory
flw f24, 0(x2) # load 0xc24df423 from memory into f24
fmsub.s f31, f23, f9, f24, dyn # perform operation
fmsub.s f31, f23, f9, f24, rdn # perform operation
fmsub.s f31, f23, f9, f24, rmm # perform operation
fmsub.s f31, f23, f9, f24, rne # perform operation
fmsub.s f31, f23, f9, f24, rtz # perform operation
fmsub.s f31, f23, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x96a99506 # load x3 with value 0x96a99506
sw x3, 0(x2) # store 0x96a99506 in memory
flw f25, 0(x2) # load 0x96a99506 from memory into f25
fmsub.s f29, f30, f23, f25, dyn # perform operation
fmsub.s f29, f30, f23, f25, rdn # perform operation
fmsub.s f29, f30, f23, f25, rmm # perform operation
fmsub.s f29, f30, f23, f25, rne # perform operation
fmsub.s f29, f30, f23, f25, rtz # perform operation
fmsub.s f29, f30, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x89d59643 # load x3 with value 0x89d59643
sw x3, 0(x2) # store 0x89d59643 in memory
flw f22, 0(x2) # load 0x89d59643 from memory into f22
fmsub.s f24, f16, f15, f22, dyn # perform operation
fmsub.s f24, f16, f15, f22, rdn # perform operation
fmsub.s f24, f16, f15, f22, rmm # perform operation
fmsub.s f24, f16, f15, f22, rne # perform operation
fmsub.s f24, f16, f15, f22, rtz # perform operation
fmsub.s f24, f16, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x0798c946 # load x3 with value 0x0798c946
sw x3, 0(x2) # store 0x0798c946 in memory
flw f13, 0(x2) # load 0x0798c946 from memory into f13
fmsub.s f12, f10, f1, f13, dyn # perform operation
fmsub.s f12, f10, f1, f13, rdn # perform operation
fmsub.s f12, f10, f1, f13, rmm # perform operation
fmsub.s f12, f10, f1, f13, rne # perform operation
fmsub.s f12, f10, f1, f13, rtz # perform operation
fmsub.s f12, f10, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xafba4930 # load x3 with value 0xafba4930
sw x3, 0(x2) # store 0xafba4930 in memory
flw f9, 0(x2) # load 0xafba4930 from memory into f9
fmsub.s f3, f18, f6, f9, dyn # perform operation
fmsub.s f3, f18, f6, f9, rdn # perform operation
fmsub.s f3, f18, f6, f9, rmm # perform operation
fmsub.s f3, f18, f6, f9, rne # perform operation
fmsub.s f3, f18, f6, f9, rtz # perform operation
fmsub.s f3, f18, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xd8f2f8ce # load x3 with value 0xd8f2f8ce
sw x3, 0(x2) # store 0xd8f2f8ce in memory
flw f5, 0(x2) # load 0xd8f2f8ce from memory into f5
fmsub.s f16, f11, f23, f5, dyn # perform operation
fmsub.s f16, f11, f23, f5, rdn # perform operation
fmsub.s f16, f11, f23, f5, rmm # perform operation
fmsub.s f16, f11, f23, f5, rne # perform operation
fmsub.s f16, f11, f23, f5, rtz # perform operation
fmsub.s f16, f11, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x7ee85e04 # load x3 with value 0x7ee85e04
sw x3, 0(x2) # store 0x7ee85e04 in memory
flw f8, 0(x2) # load 0x7ee85e04 from memory into f8
fmsub.s f2, f21, f15, f8, dyn # perform operation
fmsub.s f2, f21, f15, f8, rdn # perform operation
fmsub.s f2, f21, f15, f8, rmm # perform operation
fmsub.s f2, f21, f15, f8, rne # perform operation
fmsub.s f2, f21, f15, f8, rtz # perform operation
fmsub.s f2, f21, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x6c6859e5 # load x3 with value 0x6c6859e5
sw x3, 0(x2) # store 0x6c6859e5 in memory
flw f10, 0(x2) # load 0x6c6859e5 from memory into f10
fmsub.s f16, f8, f7, f10, dyn # perform operation
fmsub.s f16, f8, f7, f10, rdn # perform operation
fmsub.s f16, f8, f7, f10, rmm # perform operation
fmsub.s f16, f8, f7, f10, rne # perform operation
fmsub.s f16, f8, f7, f10, rtz # perform operation
fmsub.s f16, f8, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x6ee5fa98 # load x3 with value 0x6ee5fa98
sw x3, 0(x2) # store 0x6ee5fa98 in memory
flw f15, 0(x2) # load 0x6ee5fa98 from memory into f15
fmsub.s f10, f1, f13, f15, dyn # perform operation
fmsub.s f10, f1, f13, f15, rdn # perform operation
fmsub.s f10, f1, f13, f15, rmm # perform operation
fmsub.s f10, f1, f13, f15, rne # perform operation
fmsub.s f10, f1, f13, f15, rtz # perform operation
fmsub.s f10, f1, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x2a071ffb # load x3 with value 0x2a071ffb
sw x3, 0(x2) # store 0x2a071ffb in memory
flw f13, 0(x2) # load 0x2a071ffb from memory into f13
fmsub.s f16, f20, f31, f13, dyn # perform operation
fmsub.s f16, f20, f31, f13, rdn # perform operation
fmsub.s f16, f20, f31, f13, rmm # perform operation
fmsub.s f16, f20, f31, f13, rne # perform operation
fmsub.s f16, f20, f31, f13, rtz # perform operation
fmsub.s f16, f20, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f20, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f20, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f20, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f20, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f20, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0xf250c8f3 # load x3 with value 0xf250c8f3
sw x3, 0(x2) # store 0xf250c8f3 in memory
flw f31, 0(x2) # load 0xf250c8f3 from memory into f31
fmsub.s f29, f7, f16, f31, dyn # perform operation
fmsub.s f29, f7, f16, f31, rdn # perform operation
fmsub.s f29, f7, f16, f31, rmm # perform operation
fmsub.s f29, f7, f16, f31, rne # perform operation
fmsub.s f29, f7, f16, f31, rtz # perform operation
fmsub.s f29, f7, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f7, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f7, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f7, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f7, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f7, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x08176ada # load x3 with value 0x08176ada
sw x3, 0(x2) # store 0x08176ada in memory
flw f16, 0(x2) # load 0x08176ada from memory into f16
fmsub.s f18, f30, f17, f16, dyn # perform operation
fmsub.s f18, f30, f17, f16, rdn # perform operation
fmsub.s f18, f30, f17, f16, rmm # perform operation
fmsub.s f18, f30, f17, f16, rne # perform operation
fmsub.s f18, f30, f17, f16, rtz # perform operation
fmsub.s f18, f30, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x61ae835e # load x3 with value 0x61ae835e
sw x3, 0(x2) # store 0x61ae835e in memory
flw f6, 0(x2) # load 0x61ae835e from memory into f6
fmsub.s f14, f3, f26, f6, dyn # perform operation
fmsub.s f14, f3, f26, f6, rdn # perform operation
fmsub.s f14, f3, f26, f6, rmm # perform operation
fmsub.s f14, f3, f26, f6, rne # perform operation
fmsub.s f14, f3, f26, f6, rtz # perform operation
fmsub.s f14, f3, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x4aa206c9 # load x3 with value 0x4aa206c9
sw x3, 0(x2) # store 0x4aa206c9 in memory
flw f3, 0(x2) # load 0x4aa206c9 from memory into f3
fmsub.s f17, f24, f9, f3, dyn # perform operation
fmsub.s f17, f24, f9, f3, rdn # perform operation
fmsub.s f17, f24, f9, f3, rmm # perform operation
fmsub.s f17, f24, f9, f3, rne # perform operation
fmsub.s f17, f24, f9, f3, rtz # perform operation
fmsub.s f17, f24, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f24, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xf8ace9bb # load x3 with value 0xf8ace9bb
sw x3, 0(x2) # store 0xf8ace9bb in memory
flw f31, 0(x2) # load 0xf8ace9bb from memory into f31
fmsub.s f23, f29, f26, f31, dyn # perform operation
fmsub.s f23, f29, f26, f31, rdn # perform operation
fmsub.s f23, f29, f26, f31, rmm # perform operation
fmsub.s f23, f29, f26, f31, rne # perform operation
fmsub.s f23, f29, f26, f31, rtz # perform operation
fmsub.s f23, f29, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x496f0e6d # load x3 with value 0x496f0e6d
sw x3, 0(x2) # store 0x496f0e6d in memory
flw f1, 0(x2) # load 0x496f0e6d from memory into f1
fmsub.s f19, f8, f23, f1, dyn # perform operation
fmsub.s f19, f8, f23, f1, rdn # perform operation
fmsub.s f19, f8, f23, f1, rmm # perform operation
fmsub.s f19, f8, f23, f1, rne # perform operation
fmsub.s f19, f8, f23, f1, rtz # perform operation
fmsub.s f19, f8, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f8, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f8, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f8, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f8, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f8, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x4c34ec2c # load x3 with value 0x4c34ec2c
sw x3, 0(x2) # store 0x4c34ec2c in memory
flw f10, 0(x2) # load 0x4c34ec2c from memory into f10
fmsub.s f6, f28, f8, f10, dyn # perform operation
fmsub.s f6, f28, f8, f10, rdn # perform operation
fmsub.s f6, f28, f8, f10, rmm # perform operation
fmsub.s f6, f28, f8, f10, rne # perform operation
fmsub.s f6, f28, f8, f10, rtz # perform operation
fmsub.s f6, f28, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x977a89a0 # load x3 with value 0x977a89a0
sw x3, 0(x2) # store 0x977a89a0 in memory
flw f2, 0(x2) # load 0x977a89a0 from memory into f2
fmsub.s f23, f5, f10, f2, dyn # perform operation
fmsub.s f23, f5, f10, f2, rdn # perform operation
fmsub.s f23, f5, f10, f2, rmm # perform operation
fmsub.s f23, f5, f10, f2, rne # perform operation
fmsub.s f23, f5, f10, f2, rtz # perform operation
fmsub.s f23, f5, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xddb2cea0 # load x3 with value 0xddb2cea0
sw x3, 0(x2) # store 0xddb2cea0 in memory
flw f24, 0(x2) # load 0xddb2cea0 from memory into f24
fmsub.s f14, f10, f25, f24, dyn # perform operation
fmsub.s f14, f10, f25, f24, rdn # perform operation
fmsub.s f14, f10, f25, f24, rmm # perform operation
fmsub.s f14, f10, f25, f24, rne # perform operation
fmsub.s f14, f10, f25, f24, rtz # perform operation
fmsub.s f14, f10, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f10, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x2f18ad6a # load x3 with value 0x2f18ad6a
sw x3, 0(x2) # store 0x2f18ad6a in memory
flw f20, 0(x2) # load 0x2f18ad6a from memory into f20
fmsub.s f24, f11, f25, f20, dyn # perform operation
fmsub.s f24, f11, f25, f20, rdn # perform operation
fmsub.s f24, f11, f25, f20, rmm # perform operation
fmsub.s f24, f11, f25, f20, rne # perform operation
fmsub.s f24, f11, f25, f20, rtz # perform operation
fmsub.s f24, f11, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x1732196a # load x3 with value 0x1732196a
sw x3, 0(x2) # store 0x1732196a in memory
flw f12, 0(x2) # load 0x1732196a from memory into f12
fmsub.s f11, f17, f14, f12, dyn # perform operation
fmsub.s f11, f17, f14, f12, rdn # perform operation
fmsub.s f11, f17, f14, f12, rmm # perform operation
fmsub.s f11, f17, f14, f12, rne # perform operation
fmsub.s f11, f17, f14, f12, rtz # perform operation
fmsub.s f11, f17, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x01715967 # load x3 with value 0x01715967
sw x3, 0(x2) # store 0x01715967 in memory
flw f19, 0(x2) # load 0x01715967 from memory into f19
fmsub.s f14, f26, f24, f19, dyn # perform operation
fmsub.s f14, f26, f24, f19, rdn # perform operation
fmsub.s f14, f26, f24, f19, rmm # perform operation
fmsub.s f14, f26, f24, f19, rne # perform operation
fmsub.s f14, f26, f24, f19, rtz # perform operation
fmsub.s f14, f26, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xceffc9ad # load x3 with value 0xceffc9ad
sw x3, 0(x2) # store 0xceffc9ad in memory
flw f18, 0(x2) # load 0xceffc9ad from memory into f18
fmsub.s f9, f29, f24, f18, dyn # perform operation
fmsub.s f9, f29, f24, f18, rdn # perform operation
fmsub.s f9, f29, f24, f18, rmm # perform operation
fmsub.s f9, f29, f24, f18, rne # perform operation
fmsub.s f9, f29, f24, f18, rtz # perform operation
fmsub.s f9, f29, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f29, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f29, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f29, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f29, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f29, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x3342bf02 # load x3 with value 0x3342bf02
sw x3, 0(x2) # store 0x3342bf02 in memory
flw f23, 0(x2) # load 0x3342bf02 from memory into f23
fmsub.s f22, f5, f1, f23, dyn # perform operation
fmsub.s f22, f5, f1, f23, rdn # perform operation
fmsub.s f22, f5, f1, f23, rmm # perform operation
fmsub.s f22, f5, f1, f23, rne # perform operation
fmsub.s f22, f5, f1, f23, rtz # perform operation
fmsub.s f22, f5, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x90e9aa47 # load x3 with value 0x90e9aa47
sw x3, 0(x2) # store 0x90e9aa47 in memory
flw f17, 0(x2) # load 0x90e9aa47 from memory into f17
fmsub.s f9, f22, f13, f17, dyn # perform operation
fmsub.s f9, f22, f13, f17, rdn # perform operation
fmsub.s f9, f22, f13, f17, rmm # perform operation
fmsub.s f9, f22, f13, f17, rne # perform operation
fmsub.s f9, f22, f13, f17, rtz # perform operation
fmsub.s f9, f22, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x899655ee # load x3 with value 0x899655ee
sw x3, 0(x2) # store 0x899655ee in memory
flw f9, 0(x2) # load 0x899655ee from memory into f9
fmsub.s f19, f18, f6, f9, dyn # perform operation
fmsub.s f19, f18, f6, f9, rdn # perform operation
fmsub.s f19, f18, f6, f9, rmm # perform operation
fmsub.s f19, f18, f6, f9, rne # perform operation
fmsub.s f19, f18, f6, f9, rtz # perform operation
fmsub.s f19, f18, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x1a50a3c8 # load x3 with value 0x1a50a3c8
sw x3, 0(x2) # store 0x1a50a3c8 in memory
flw f21, 0(x2) # load 0x1a50a3c8 from memory into f21
fmsub.s f22, f31, f16, f21, dyn # perform operation
fmsub.s f22, f31, f16, f21, rdn # perform operation
fmsub.s f22, f31, f16, f21, rmm # perform operation
fmsub.s f22, f31, f16, f21, rne # perform operation
fmsub.s f22, f31, f16, f21, rtz # perform operation
fmsub.s f22, f31, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xeea91898 # load x3 with value 0xeea91898
sw x3, 0(x2) # store 0xeea91898 in memory
flw f5, 0(x2) # load 0xeea91898 from memory into f5
fmsub.s f30, f12, f14, f5, dyn # perform operation
fmsub.s f30, f12, f14, f5, rdn # perform operation
fmsub.s f30, f12, f14, f5, rmm # perform operation
fmsub.s f30, f12, f14, f5, rne # perform operation
fmsub.s f30, f12, f14, f5, rtz # perform operation
fmsub.s f30, f12, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f12, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x2a6ce27b # load x3 with value 0x2a6ce27b
sw x3, 0(x2) # store 0x2a6ce27b in memory
flw f2, 0(x2) # load 0x2a6ce27b from memory into f2
fmsub.s f20, f13, f15, f2, dyn # perform operation
fmsub.s f20, f13, f15, f2, rdn # perform operation
fmsub.s f20, f13, f15, f2, rmm # perform operation
fmsub.s f20, f13, f15, f2, rne # perform operation
fmsub.s f20, f13, f15, f2, rtz # perform operation
fmsub.s f20, f13, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xda5bef6c # load x3 with value 0xda5bef6c
sw x3, 0(x2) # store 0xda5bef6c in memory
flw f15, 0(x2) # load 0xda5bef6c from memory into f15
fmsub.s f2, f19, f16, f15, dyn # perform operation
fmsub.s f2, f19, f16, f15, rdn # perform operation
fmsub.s f2, f19, f16, f15, rmm # perform operation
fmsub.s f2, f19, f16, f15, rne # perform operation
fmsub.s f2, f19, f16, f15, rtz # perform operation
fmsub.s f2, f19, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f19, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f19, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f19, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f19, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f19, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x8395c850 # load x3 with value 0x8395c850
sw x3, 0(x2) # store 0x8395c850 in memory
flw f18, 0(x2) # load 0x8395c850 from memory into f18
fmsub.s f13, f29, f15, f18, dyn # perform operation
fmsub.s f13, f29, f15, f18, rdn # perform operation
fmsub.s f13, f29, f15, f18, rmm # perform operation
fmsub.s f13, f29, f15, f18, rne # perform operation
fmsub.s f13, f29, f15, f18, rtz # perform operation
fmsub.s f13, f29, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x530fdac8 # load x3 with value 0x530fdac8
sw x3, 0(x2) # store 0x530fdac8 in memory
flw f15, 0(x2) # load 0x530fdac8 from memory into f15
fmsub.s f1, f21, f17, f15, dyn # perform operation
fmsub.s f1, f21, f17, f15, rdn # perform operation
fmsub.s f1, f21, f17, f15, rmm # perform operation
fmsub.s f1, f21, f17, f15, rne # perform operation
fmsub.s f1, f21, f17, f15, rtz # perform operation
fmsub.s f1, f21, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xedc55dbb # load x3 with value 0xedc55dbb
sw x3, 0(x2) # store 0xedc55dbb in memory
flw f19, 0(x2) # load 0xedc55dbb from memory into f19
fmsub.s f26, f15, f17, f19, dyn # perform operation
fmsub.s f26, f15, f17, f19, rdn # perform operation
fmsub.s f26, f15, f17, f19, rmm # perform operation
fmsub.s f26, f15, f17, f19, rne # perform operation
fmsub.s f26, f15, f17, f19, rtz # perform operation
fmsub.s f26, f15, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xb9e33f4d # load x3 with value 0xb9e33f4d
sw x3, 0(x2) # store 0xb9e33f4d in memory
flw f20, 0(x2) # load 0xb9e33f4d from memory into f20
fmsub.s f11, f24, f25, f20, dyn # perform operation
fmsub.s f11, f24, f25, f20, rdn # perform operation
fmsub.s f11, f24, f25, f20, rmm # perform operation
fmsub.s f11, f24, f25, f20, rne # perform operation
fmsub.s f11, f24, f25, f20, rtz # perform operation
fmsub.s f11, f24, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f24, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xef7677ca # load x3 with value 0xef7677ca
sw x3, 0(x2) # store 0xef7677ca in memory
flw f1, 0(x2) # load 0xef7677ca from memory into f1
fmsub.s f28, f9, f21, f1, dyn # perform operation
fmsub.s f28, f9, f21, f1, rdn # perform operation
fmsub.s f28, f9, f21, f1, rmm # perform operation
fmsub.s f28, f9, f21, f1, rne # perform operation
fmsub.s f28, f9, f21, f1, rtz # perform operation
fmsub.s f28, f9, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f9, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xb2a3bead # load x3 with value 0xb2a3bead
sw x3, 0(x2) # store 0xb2a3bead in memory
flw f8, 0(x2) # load 0xb2a3bead from memory into f8
fmsub.s f29, f24, f7, f8, dyn # perform operation
fmsub.s f29, f24, f7, f8, rdn # perform operation
fmsub.s f29, f24, f7, f8, rmm # perform operation
fmsub.s f29, f24, f7, f8, rne # perform operation
fmsub.s f29, f24, f7, f8, rtz # perform operation
fmsub.s f29, f24, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x807a3eb6 # load x3 with value 0x807a3eb6
sw x3, 0(x2) # store 0x807a3eb6 in memory
flw f13, 0(x2) # load 0x807a3eb6 from memory into f13
fmsub.s f24, f8, f19, f13, dyn # perform operation
fmsub.s f24, f8, f19, f13, rdn # perform operation
fmsub.s f24, f8, f19, f13, rmm # perform operation
fmsub.s f24, f8, f19, f13, rne # perform operation
fmsub.s f24, f8, f19, f13, rtz # perform operation
fmsub.s f24, f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xe6c5b80a # load x3 with value 0xe6c5b80a
sw x3, 0(x2) # store 0xe6c5b80a in memory
flw f8, 0(x2) # load 0xe6c5b80a from memory into f8
fmsub.s f19, f30, f9, f8, dyn # perform operation
fmsub.s f19, f30, f9, f8, rdn # perform operation
fmsub.s f19, f30, f9, f8, rmm # perform operation
fmsub.s f19, f30, f9, f8, rne # perform operation
fmsub.s f19, f30, f9, f8, rtz # perform operation
fmsub.s f19, f30, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xd03bd4e4 # load x3 with value 0xd03bd4e4
sw x3, 0(x2) # store 0xd03bd4e4 in memory
flw f12, 0(x2) # load 0xd03bd4e4 from memory into f12
fmsub.s f9, f10, f2, f12, dyn # perform operation
fmsub.s f9, f10, f2, f12, rdn # perform operation
fmsub.s f9, f10, f2, f12, rmm # perform operation
fmsub.s f9, f10, f2, f12, rne # perform operation
fmsub.s f9, f10, f2, f12, rtz # perform operation
fmsub.s f9, f10, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xd75f6f0e # load x3 with value 0xd75f6f0e
sw x3, 0(x2) # store 0xd75f6f0e in memory
flw f27, 0(x2) # load 0xd75f6f0e from memory into f27
fmsub.s f10, f5, f22, f27, dyn # perform operation
fmsub.s f10, f5, f22, f27, rdn # perform operation
fmsub.s f10, f5, f22, f27, rmm # perform operation
fmsub.s f10, f5, f22, f27, rne # perform operation
fmsub.s f10, f5, f22, f27, rtz # perform operation
fmsub.s f10, f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x479fe1f0 # load x3 with value 0x479fe1f0
sw x3, 0(x2) # store 0x479fe1f0 in memory
flw f16, 0(x2) # load 0x479fe1f0 from memory into f16
fmsub.s f18, f12, f24, f16, dyn # perform operation
fmsub.s f18, f12, f24, f16, rdn # perform operation
fmsub.s f18, f12, f24, f16, rmm # perform operation
fmsub.s f18, f12, f24, f16, rne # perform operation
fmsub.s f18, f12, f24, f16, rtz # perform operation
fmsub.s f18, f12, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f12, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x0f249df0 # load x3 with value 0x0f249df0
sw x3, 0(x2) # store 0x0f249df0 in memory
flw f15, 0(x2) # load 0x0f249df0 from memory into f15
fmsub.s f22, f2, f20, f15, dyn # perform operation
fmsub.s f22, f2, f20, f15, rdn # perform operation
fmsub.s f22, f2, f20, f15, rmm # perform operation
fmsub.s f22, f2, f20, f15, rne # perform operation
fmsub.s f22, f2, f20, f15, rtz # perform operation
fmsub.s f22, f2, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f2, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x6a7e6436 # load x3 with value 0x6a7e6436
sw x3, 0(x2) # store 0x6a7e6436 in memory
flw f19, 0(x2) # load 0x6a7e6436 from memory into f19
fmsub.s f12, f3, f22, f19, dyn # perform operation
fmsub.s f12, f3, f22, f19, rdn # perform operation
fmsub.s f12, f3, f22, f19, rmm # perform operation
fmsub.s f12, f3, f22, f19, rne # perform operation
fmsub.s f12, f3, f22, f19, rtz # perform operation
fmsub.s f12, f3, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x0d3e5d18 # load x3 with value 0x0d3e5d18
sw x3, 0(x2) # store 0x0d3e5d18 in memory
flw f6, 0(x2) # load 0x0d3e5d18 from memory into f6
fmsub.s f28, f12, f13, f6, dyn # perform operation
fmsub.s f28, f12, f13, f6, rdn # perform operation
fmsub.s f28, f12, f13, f6, rmm # perform operation
fmsub.s f28, f12, f13, f6, rne # perform operation
fmsub.s f28, f12, f13, f6, rtz # perform operation
fmsub.s f28, f12, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f12, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xfaffd67c # load x3 with value 0xfaffd67c
sw x3, 0(x2) # store 0xfaffd67c in memory
flw f5, 0(x2) # load 0xfaffd67c from memory into f5
fmsub.s f29, f9, f3, f5, dyn # perform operation
fmsub.s f29, f9, f3, f5, rdn # perform operation
fmsub.s f29, f9, f3, f5, rmm # perform operation
fmsub.s f29, f9, f3, f5, rne # perform operation
fmsub.s f29, f9, f3, f5, rtz # perform operation
fmsub.s f29, f9, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x1763b0b6 # load x3 with value 0x1763b0b6
sw x3, 0(x2) # store 0x1763b0b6 in memory
flw f13, 0(x2) # load 0x1763b0b6 from memory into f13
fmsub.s f14, f21, f22, f13, dyn # perform operation
fmsub.s f14, f21, f22, f13, rdn # perform operation
fmsub.s f14, f21, f22, f13, rmm # perform operation
fmsub.s f14, f21, f22, f13, rne # perform operation
fmsub.s f14, f21, f22, f13, rtz # perform operation
fmsub.s f14, f21, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x66711401 # load x3 with value 0x66711401
sw x3, 0(x2) # store 0x66711401 in memory
flw f11, 0(x2) # load 0x66711401 from memory into f11
fmsub.s f1, f28, f21, f11, dyn # perform operation
fmsub.s f1, f28, f21, f11, rdn # perform operation
fmsub.s f1, f28, f21, f11, rmm # perform operation
fmsub.s f1, f28, f21, f11, rne # perform operation
fmsub.s f1, f28, f21, f11, rtz # perform operation
fmsub.s f1, f28, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xd98eff56 # load x3 with value 0xd98eff56
sw x3, 0(x2) # store 0xd98eff56 in memory
flw f9, 0(x2) # load 0xd98eff56 from memory into f9
fmsub.s f14, f1, f26, f9, dyn # perform operation
fmsub.s f14, f1, f26, f9, rdn # perform operation
fmsub.s f14, f1, f26, f9, rmm # perform operation
fmsub.s f14, f1, f26, f9, rne # perform operation
fmsub.s f14, f1, f26, f9, rtz # perform operation
fmsub.s f14, f1, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xa5012d32 # load x3 with value 0xa5012d32
sw x3, 0(x2) # store 0xa5012d32 in memory
flw f19, 0(x2) # load 0xa5012d32 from memory into f19
fmsub.s f28, f30, f26, f19, dyn # perform operation
fmsub.s f28, f30, f26, f19, rdn # perform operation
fmsub.s f28, f30, f26, f19, rmm # perform operation
fmsub.s f28, f30, f26, f19, rne # perform operation
fmsub.s f28, f30, f26, f19, rtz # perform operation
fmsub.s f28, f30, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x45375d48 # load x3 with value 0x45375d48
sw x3, 0(x2) # store 0x45375d48 in memory
flw f2, 0(x2) # load 0x45375d48 from memory into f2
fmsub.s f12, f9, f15, f2, dyn # perform operation
fmsub.s f12, f9, f15, f2, rdn # perform operation
fmsub.s f12, f9, f15, f2, rmm # perform operation
fmsub.s f12, f9, f15, f2, rne # perform operation
fmsub.s f12, f9, f15, f2, rtz # perform operation
fmsub.s f12, f9, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0xbe6fa663 # load x3 with value 0xbe6fa663
sw x3, 0(x2) # store 0xbe6fa663 in memory
flw f21, 0(x2) # load 0xbe6fa663 from memory into f21
fmsub.s f5, f3, f30, f21, dyn # perform operation
fmsub.s f5, f3, f30, f21, rdn # perform operation
fmsub.s f5, f3, f30, f21, rmm # perform operation
fmsub.s f5, f3, f30, f21, rne # perform operation
fmsub.s f5, f3, f30, f21, rtz # perform operation
fmsub.s f5, f3, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xb73af3b2 # load x3 with value 0xb73af3b2
sw x3, 0(x2) # store 0xb73af3b2 in memory
flw f7, 0(x2) # load 0xb73af3b2 from memory into f7
fmsub.s f30, f9, f3, f7, dyn # perform operation
fmsub.s f30, f9, f3, f7, rdn # perform operation
fmsub.s f30, f9, f3, f7, rmm # perform operation
fmsub.s f30, f9, f3, f7, rne # perform operation
fmsub.s f30, f9, f3, f7, rtz # perform operation
fmsub.s f30, f9, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f9, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xc6f18fdb # load x3 with value 0xc6f18fdb
sw x3, 0(x2) # store 0xc6f18fdb in memory
flw f17, 0(x2) # load 0xc6f18fdb from memory into f17
fmsub.s f2, f27, f9, f17, dyn # perform operation
fmsub.s f2, f27, f9, f17, rdn # perform operation
fmsub.s f2, f27, f9, f17, rmm # perform operation
fmsub.s f2, f27, f9, f17, rne # perform operation
fmsub.s f2, f27, f9, f17, rtz # perform operation
fmsub.s f2, f27, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f27, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x0806016c # load x3 with value 0x0806016c
sw x3, 0(x2) # store 0x0806016c in memory
flw f30, 0(x2) # load 0x0806016c from memory into f30
fmsub.s f25, f18, f8, f30, dyn # perform operation
fmsub.s f25, f18, f8, f30, rdn # perform operation
fmsub.s f25, f18, f8, f30, rmm # perform operation
fmsub.s f25, f18, f8, f30, rne # perform operation
fmsub.s f25, f18, f8, f30, rtz # perform operation
fmsub.s f25, f18, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x2dfc5122 # load x3 with value 0x2dfc5122
sw x3, 0(x2) # store 0x2dfc5122 in memory
flw f7, 0(x2) # load 0x2dfc5122 from memory into f7
fmsub.s f13, f10, f18, f7, dyn # perform operation
fmsub.s f13, f10, f18, f7, rdn # perform operation
fmsub.s f13, f10, f18, f7, rmm # perform operation
fmsub.s f13, f10, f18, f7, rne # perform operation
fmsub.s f13, f10, f18, f7, rtz # perform operation
fmsub.s f13, f10, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f10, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f10, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f10, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f10, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f10, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x223bb211 # load x3 with value 0x223bb211
sw x3, 0(x2) # store 0x223bb211 in memory
flw f28, 0(x2) # load 0x223bb211 from memory into f28
fmsub.s f17, f16, f18, f28, dyn # perform operation
fmsub.s f17, f16, f18, f28, rdn # perform operation
fmsub.s f17, f16, f18, f28, rmm # perform operation
fmsub.s f17, f16, f18, f28, rne # perform operation
fmsub.s f17, f16, f18, f28, rtz # perform operation
fmsub.s f17, f16, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x2bc4e606 # load x3 with value 0x2bc4e606
sw x3, 0(x2) # store 0x2bc4e606 in memory
flw f24, 0(x2) # load 0x2bc4e606 from memory into f24
fmsub.s f28, f20, f14, f24, dyn # perform operation
fmsub.s f28, f20, f14, f24, rdn # perform operation
fmsub.s f28, f20, f14, f24, rmm # perform operation
fmsub.s f28, f20, f14, f24, rne # perform operation
fmsub.s f28, f20, f14, f24, rtz # perform operation
fmsub.s f28, f20, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xecaefb06 # load x3 with value 0xecaefb06
sw x3, 0(x2) # store 0xecaefb06 in memory
flw f6, 0(x2) # load 0xecaefb06 from memory into f6
fmsub.s f24, f29, f31, f6, dyn # perform operation
fmsub.s f24, f29, f31, f6, rdn # perform operation
fmsub.s f24, f29, f31, f6, rmm # perform operation
fmsub.s f24, f29, f31, f6, rne # perform operation
fmsub.s f24, f29, f31, f6, rtz # perform operation
fmsub.s f24, f29, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xc04cd354 # load x3 with value 0xc04cd354
sw x3, 0(x2) # store 0xc04cd354 in memory
flw f14, 0(x2) # load 0xc04cd354 from memory into f14
fmsub.s f29, f19, f9, f14, dyn # perform operation
fmsub.s f29, f19, f9, f14, rdn # perform operation
fmsub.s f29, f19, f9, f14, rmm # perform operation
fmsub.s f29, f19, f9, f14, rne # perform operation
fmsub.s f29, f19, f9, f14, rtz # perform operation
fmsub.s f29, f19, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x6db493c0 # load x3 with value 0x6db493c0
sw x3, 0(x2) # store 0x6db493c0 in memory
flw f30, 0(x2) # load 0x6db493c0 from memory into f30
fmsub.s f11, f24, f19, f30, dyn # perform operation
fmsub.s f11, f24, f19, f30, rdn # perform operation
fmsub.s f11, f24, f19, f30, rmm # perform operation
fmsub.s f11, f24, f19, f30, rne # perform operation
fmsub.s f11, f24, f19, f30, rtz # perform operation
fmsub.s f11, f24, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f24, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f24, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f24, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f24, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f24, f19, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xba6b373c # load x3 with value 0xba6b373c
sw x3, 0(x2) # store 0xba6b373c in memory
flw f17, 0(x2) # load 0xba6b373c from memory into f17
fmsub.s f19, f27, f26, f17, dyn # perform operation
fmsub.s f19, f27, f26, f17, rdn # perform operation
fmsub.s f19, f27, f26, f17, rmm # perform operation
fmsub.s f19, f27, f26, f17, rne # perform operation
fmsub.s f19, f27, f26, f17, rtz # perform operation
fmsub.s f19, f27, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f27, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xd99a333b # load x3 with value 0xd99a333b
sw x3, 0(x2) # store 0xd99a333b in memory
flw f25, 0(x2) # load 0xd99a333b from memory into f25
fmsub.s f15, f17, f11, f25, dyn # perform operation
fmsub.s f15, f17, f11, f25, rdn # perform operation
fmsub.s f15, f17, f11, f25, rmm # perform operation
fmsub.s f15, f17, f11, f25, rne # perform operation
fmsub.s f15, f17, f11, f25, rtz # perform operation
fmsub.s f15, f17, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0xa19b47e7 # load x3 with value 0xa19b47e7
sw x3, 0(x2) # store 0xa19b47e7 in memory
flw f2, 0(x2) # load 0xa19b47e7 from memory into f2
fmsub.s f8, f11, f19, f2, dyn # perform operation
fmsub.s f8, f11, f19, f2, rdn # perform operation
fmsub.s f8, f11, f19, f2, rmm # perform operation
fmsub.s f8, f11, f19, f2, rne # perform operation
fmsub.s f8, f11, f19, f2, rtz # perform operation
fmsub.s f8, f11, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xaa0ecf56 # load x3 with value 0xaa0ecf56
sw x3, 0(x2) # store 0xaa0ecf56 in memory
flw f29, 0(x2) # load 0xaa0ecf56 from memory into f29
fmsub.s f13, f21, f17, f29, dyn # perform operation
fmsub.s f13, f21, f17, f29, rdn # perform operation
fmsub.s f13, f21, f17, f29, rmm # perform operation
fmsub.s f13, f21, f17, f29, rne # perform operation
fmsub.s f13, f21, f17, f29, rtz # perform operation
fmsub.s f13, f21, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f21, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xccff21c5 # load x3 with value 0xccff21c5
sw x3, 0(x2) # store 0xccff21c5 in memory
flw f23, 0(x2) # load 0xccff21c5 from memory into f23
fmsub.s f20, f7, f3, f23, dyn # perform operation
fmsub.s f20, f7, f3, f23, rdn # perform operation
fmsub.s f20, f7, f3, f23, rmm # perform operation
fmsub.s f20, f7, f3, f23, rne # perform operation
fmsub.s f20, f7, f3, f23, rtz # perform operation
fmsub.s f20, f7, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x9704b9ac # load x3 with value 0x9704b9ac
sw x3, 0(x2) # store 0x9704b9ac in memory
flw f13, 0(x2) # load 0x9704b9ac from memory into f13
fmsub.s f7, f25, f20, f13, dyn # perform operation
fmsub.s f7, f25, f20, f13, rdn # perform operation
fmsub.s f7, f25, f20, f13, rmm # perform operation
fmsub.s f7, f25, f20, f13, rne # perform operation
fmsub.s f7, f25, f20, f13, rtz # perform operation
fmsub.s f7, f25, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x42cfdefb # load x3 with value 0x42cfdefb
sw x3, 0(x2) # store 0x42cfdefb in memory
flw f6, 0(x2) # load 0x42cfdefb from memory into f6
fmsub.s f11, f14, f22, f6, dyn # perform operation
fmsub.s f11, f14, f22, f6, rdn # perform operation
fmsub.s f11, f14, f22, f6, rmm # perform operation
fmsub.s f11, f14, f22, f6, rne # perform operation
fmsub.s f11, f14, f22, f6, rtz # perform operation
fmsub.s f11, f14, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xaa16f0ca # load x3 with value 0xaa16f0ca
sw x3, 0(x2) # store 0xaa16f0ca in memory
flw f27, 0(x2) # load 0xaa16f0ca from memory into f27
fmsub.s f12, f16, f19, f27, dyn # perform operation
fmsub.s f12, f16, f19, f27, rdn # perform operation
fmsub.s f12, f16, f19, f27, rmm # perform operation
fmsub.s f12, f16, f19, f27, rne # perform operation
fmsub.s f12, f16, f19, f27, rtz # perform operation
fmsub.s f12, f16, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f16, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xb75bed5c # load x3 with value 0xb75bed5c
sw x3, 0(x2) # store 0xb75bed5c in memory
flw f25, 0(x2) # load 0xb75bed5c from memory into f25
fmsub.s f17, f9, f6, f25, dyn # perform operation
fmsub.s f17, f9, f6, f25, rdn # perform operation
fmsub.s f17, f9, f6, f25, rmm # perform operation
fmsub.s f17, f9, f6, f25, rne # perform operation
fmsub.s f17, f9, f6, f25, rtz # perform operation
fmsub.s f17, f9, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xbf502687 # load x3 with value 0xbf502687
sw x3, 0(x2) # store 0xbf502687 in memory
flw f3, 0(x2) # load 0xbf502687 from memory into f3
fmsub.s f15, f27, f29, f3, dyn # perform operation
fmsub.s f15, f27, f29, f3, rdn # perform operation
fmsub.s f15, f27, f29, f3, rmm # perform operation
fmsub.s f15, f27, f29, f3, rne # perform operation
fmsub.s f15, f27, f29, f3, rtz # perform operation
fmsub.s f15, f27, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7238ecc3 # load x3 with value 0x7238ecc3
sw x3, 0(x2) # store 0x7238ecc3 in memory
flw f12, 0(x2) # load 0x7238ecc3 from memory into f12
fmsub.s f6, f30, f31, f12, dyn # perform operation
fmsub.s f6, f30, f31, f12, rdn # perform operation
fmsub.s f6, f30, f31, f12, rmm # perform operation
fmsub.s f6, f30, f31, f12, rne # perform operation
fmsub.s f6, f30, f31, f12, rtz # perform operation
fmsub.s f6, f30, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xa340f9a9 # load x3 with value 0xa340f9a9
sw x3, 0(x2) # store 0xa340f9a9 in memory
flw f30, 0(x2) # load 0xa340f9a9 from memory into f30
fmsub.s f12, f19, f28, f30, dyn # perform operation
fmsub.s f12, f19, f28, f30, rdn # perform operation
fmsub.s f12, f19, f28, f30, rmm # perform operation
fmsub.s f12, f19, f28, f30, rne # perform operation
fmsub.s f12, f19, f28, f30, rtz # perform operation
fmsub.s f12, f19, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x718bcf55 # load x3 with value 0x718bcf55
sw x3, 0(x2) # store 0x718bcf55 in memory
flw f21, 0(x2) # load 0x718bcf55 from memory into f21
fmsub.s f17, f9, f6, f21, dyn # perform operation
fmsub.s f17, f9, f6, f21, rdn # perform operation
fmsub.s f17, f9, f6, f21, rmm # perform operation
fmsub.s f17, f9, f6, f21, rne # perform operation
fmsub.s f17, f9, f6, f21, rtz # perform operation
fmsub.s f17, f9, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x5386a8b6 # load x3 with value 0x5386a8b6
sw x3, 0(x2) # store 0x5386a8b6 in memory
flw f6, 0(x2) # load 0x5386a8b6 from memory into f6
fmsub.s f9, f13, f26, f6, dyn # perform operation
fmsub.s f9, f13, f26, f6, rdn # perform operation
fmsub.s f9, f13, f26, f6, rmm # perform operation
fmsub.s f9, f13, f26, f6, rne # perform operation
fmsub.s f9, f13, f26, f6, rtz # perform operation
fmsub.s f9, f13, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f13, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x9dcda854 # load x3 with value 0x9dcda854
sw x3, 0(x2) # store 0x9dcda854 in memory
flw f23, 0(x2) # load 0x9dcda854 from memory into f23
fmsub.s f17, f21, f9, f23, dyn # perform operation
fmsub.s f17, f21, f9, f23, rdn # perform operation
fmsub.s f17, f21, f9, f23, rmm # perform operation
fmsub.s f17, f21, f9, f23, rne # perform operation
fmsub.s f17, f21, f9, f23, rtz # perform operation
fmsub.s f17, f21, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f21, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xf50fd0cb # load x3 with value 0xf50fd0cb
sw x3, 0(x2) # store 0xf50fd0cb in memory
flw f29, 0(x2) # load 0xf50fd0cb from memory into f29
fmsub.s f20, f27, f14, f29, dyn # perform operation
fmsub.s f20, f27, f14, f29, rdn # perform operation
fmsub.s f20, f27, f14, f29, rmm # perform operation
fmsub.s f20, f27, f14, f29, rne # perform operation
fmsub.s f20, f27, f14, f29, rtz # perform operation
fmsub.s f20, f27, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f27, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x14aee070 # load x3 with value 0x14aee070
sw x3, 0(x2) # store 0x14aee070 in memory
flw f31, 0(x2) # load 0x14aee070 from memory into f31
fmsub.s f9, f15, f26, f31, dyn # perform operation
fmsub.s f9, f15, f26, f31, rdn # perform operation
fmsub.s f9, f15, f26, f31, rmm # perform operation
fmsub.s f9, f15, f26, f31, rne # perform operation
fmsub.s f9, f15, f26, f31, rtz # perform operation
fmsub.s f9, f15, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x8fbbb265 # load x3 with value 0x8fbbb265
sw x3, 0(x2) # store 0x8fbbb265 in memory
flw f8, 0(x2) # load 0x8fbbb265 from memory into f8
fmsub.s f10, f18, f3, f8, dyn # perform operation
fmsub.s f10, f18, f3, f8, rdn # perform operation
fmsub.s f10, f18, f3, f8, rmm # perform operation
fmsub.s f10, f18, f3, f8, rne # perform operation
fmsub.s f10, f18, f3, f8, rtz # perform operation
fmsub.s f10, f18, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xc19b59ee # load x3 with value 0xc19b59ee
sw x3, 0(x2) # store 0xc19b59ee in memory
flw f7, 0(x2) # load 0xc19b59ee from memory into f7
fmsub.s f19, f2, f1, f7, dyn # perform operation
fmsub.s f19, f2, f1, f7, rdn # perform operation
fmsub.s f19, f2, f1, f7, rmm # perform operation
fmsub.s f19, f2, f1, f7, rne # perform operation
fmsub.s f19, f2, f1, f7, rtz # perform operation
fmsub.s f19, f2, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f2, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x5d003923 # load x3 with value 0x5d003923
sw x3, 0(x2) # store 0x5d003923 in memory
flw f18, 0(x2) # load 0x5d003923 from memory into f18
fmsub.s f8, f28, f2, f18, dyn # perform operation
fmsub.s f8, f28, f2, f18, rdn # perform operation
fmsub.s f8, f28, f2, f18, rmm # perform operation
fmsub.s f8, f28, f2, f18, rne # perform operation
fmsub.s f8, f28, f2, f18, rtz # perform operation
fmsub.s f8, f28, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xe2b03757 # load x3 with value 0xe2b03757
sw x3, 0(x2) # store 0xe2b03757 in memory
flw f26, 0(x2) # load 0xe2b03757 from memory into f26
fmsub.s f3, f14, f18, f26, dyn # perform operation
fmsub.s f3, f14, f18, f26, rdn # perform operation
fmsub.s f3, f14, f18, f26, rmm # perform operation
fmsub.s f3, f14, f18, f26, rne # perform operation
fmsub.s f3, f14, f18, f26, rtz # perform operation
fmsub.s f3, f14, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xfedff51a # load x3 with value 0xfedff51a
sw x3, 0(x2) # store 0xfedff51a in memory
flw f1, 0(x2) # load 0xfedff51a from memory into f1
fmsub.s f23, f18, f3, f1, dyn # perform operation
fmsub.s f23, f18, f3, f1, rdn # perform operation
fmsub.s f23, f18, f3, f1, rmm # perform operation
fmsub.s f23, f18, f3, f1, rne # perform operation
fmsub.s f23, f18, f3, f1, rtz # perform operation
fmsub.s f23, f18, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x11fdd104 # load x3 with value 0x11fdd104
sw x3, 0(x2) # store 0x11fdd104 in memory
flw f11, 0(x2) # load 0x11fdd104 from memory into f11
fmsub.s f31, f3, f25, f11, dyn # perform operation
fmsub.s f31, f3, f25, f11, rdn # perform operation
fmsub.s f31, f3, f25, f11, rmm # perform operation
fmsub.s f31, f3, f25, f11, rne # perform operation
fmsub.s f31, f3, f25, f11, rtz # perform operation
fmsub.s f31, f3, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xe0795258 # load x3 with value 0xe0795258
sw x3, 0(x2) # store 0xe0795258 in memory
flw f13, 0(x2) # load 0xe0795258 from memory into f13
fmsub.s f9, f29, f24, f13, dyn # perform operation
fmsub.s f9, f29, f24, f13, rdn # perform operation
fmsub.s f9, f29, f24, f13, rmm # perform operation
fmsub.s f9, f29, f24, f13, rne # perform operation
fmsub.s f9, f29, f24, f13, rtz # perform operation
fmsub.s f9, f29, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f29, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f29, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f29, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f29, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f29, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xc5932f19 # load x3 with value 0xc5932f19
sw x3, 0(x2) # store 0xc5932f19 in memory
flw f7, 0(x2) # load 0xc5932f19 from memory into f7
fmsub.s f2, f12, f26, f7, dyn # perform operation
fmsub.s f2, f12, f26, f7, rdn # perform operation
fmsub.s f2, f12, f26, f7, rmm # perform operation
fmsub.s f2, f12, f26, f7, rne # perform operation
fmsub.s f2, f12, f26, f7, rtz # perform operation
fmsub.s f2, f12, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xcb25bcc9 # load x3 with value 0xcb25bcc9
sw x3, 0(x2) # store 0xcb25bcc9 in memory
flw f2, 0(x2) # load 0xcb25bcc9 from memory into f2
fmsub.s f19, f16, f20, f2, dyn # perform operation
fmsub.s f19, f16, f20, f2, rdn # perform operation
fmsub.s f19, f16, f20, f2, rmm # perform operation
fmsub.s f19, f16, f20, f2, rne # perform operation
fmsub.s f19, f16, f20, f2, rtz # perform operation
fmsub.s f19, f16, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x94a66ffd # load x3 with value 0x94a66ffd
sw x3, 0(x2) # store 0x94a66ffd in memory
flw f1, 0(x2) # load 0x94a66ffd from memory into f1
fmsub.s f22, f17, f21, f1, dyn # perform operation
fmsub.s f22, f17, f21, f1, rdn # perform operation
fmsub.s f22, f17, f21, f1, rmm # perform operation
fmsub.s f22, f17, f21, f1, rne # perform operation
fmsub.s f22, f17, f21, f1, rtz # perform operation
fmsub.s f22, f17, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f17, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xe4003cb7 # load x3 with value 0xe4003cb7
sw x3, 0(x2) # store 0xe4003cb7 in memory
flw f25, 0(x2) # load 0xe4003cb7 from memory into f25
fmsub.s f17, f3, f1, f25, dyn # perform operation
fmsub.s f17, f3, f1, f25, rdn # perform operation
fmsub.s f17, f3, f1, f25, rmm # perform operation
fmsub.s f17, f3, f1, f25, rne # perform operation
fmsub.s f17, f3, f1, f25, rtz # perform operation
fmsub.s f17, f3, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0xf0b9f007 # load x3 with value 0xf0b9f007
sw x3, 0(x2) # store 0xf0b9f007 in memory
flw f2, 0(x2) # load 0xf0b9f007 from memory into f2
fmsub.s f7, f5, f21, f2, dyn # perform operation
fmsub.s f7, f5, f21, f2, rdn # perform operation
fmsub.s f7, f5, f21, f2, rmm # perform operation
fmsub.s f7, f5, f21, f2, rne # perform operation
fmsub.s f7, f5, f21, f2, rtz # perform operation
fmsub.s f7, f5, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x250326c1 # load x3 with value 0x250326c1
sw x3, 0(x2) # store 0x250326c1 in memory
flw f22, 0(x2) # load 0x250326c1 from memory into f22
fmsub.s f15, f6, f13, f22, dyn # perform operation
fmsub.s f15, f6, f13, f22, rdn # perform operation
fmsub.s f15, f6, f13, f22, rmm # perform operation
fmsub.s f15, f6, f13, f22, rne # perform operation
fmsub.s f15, f6, f13, f22, rtz # perform operation
fmsub.s f15, f6, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x1156c8db # load x3 with value 0x1156c8db
sw x3, 0(x2) # store 0x1156c8db in memory
flw f1, 0(x2) # load 0x1156c8db from memory into f1
fmsub.s f30, f19, f27, f1, dyn # perform operation
fmsub.s f30, f19, f27, f1, rdn # perform operation
fmsub.s f30, f19, f27, f1, rmm # perform operation
fmsub.s f30, f19, f27, f1, rne # perform operation
fmsub.s f30, f19, f27, f1, rtz # perform operation
fmsub.s f30, f19, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x2bdec3ba # load x3 with value 0x2bdec3ba
sw x3, 0(x2) # store 0x2bdec3ba in memory
flw f7, 0(x2) # load 0x2bdec3ba from memory into f7
fmsub.s f2, f29, f10, f7, dyn # perform operation
fmsub.s f2, f29, f10, f7, rdn # perform operation
fmsub.s f2, f29, f10, f7, rmm # perform operation
fmsub.s f2, f29, f10, f7, rne # perform operation
fmsub.s f2, f29, f10, f7, rtz # perform operation
fmsub.s f2, f29, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xa84f9892 # load x3 with value 0xa84f9892
sw x3, 0(x2) # store 0xa84f9892 in memory
flw f7, 0(x2) # load 0xa84f9892 from memory into f7
fmsub.s f29, f1, f25, f7, dyn # perform operation
fmsub.s f29, f1, f25, f7, rdn # perform operation
fmsub.s f29, f1, f25, f7, rmm # perform operation
fmsub.s f29, f1, f25, f7, rne # perform operation
fmsub.s f29, f1, f25, f7, rtz # perform operation
fmsub.s f29, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xc143510d # load x3 with value 0xc143510d
sw x3, 0(x2) # store 0xc143510d in memory
flw f8, 0(x2) # load 0xc143510d from memory into f8
fmsub.s f19, f3, f2, f8, dyn # perform operation
fmsub.s f19, f3, f2, f8, rdn # perform operation
fmsub.s f19, f3, f2, f8, rmm # perform operation
fmsub.s f19, f3, f2, f8, rne # perform operation
fmsub.s f19, f3, f2, f8, rtz # perform operation
fmsub.s f19, f3, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x41f117fd # load x3 with value 0x41f117fd
sw x3, 0(x2) # store 0x41f117fd in memory
flw f21, 0(x2) # load 0x41f117fd from memory into f21
fmsub.s f1, f3, f14, f21, dyn # perform operation
fmsub.s f1, f3, f14, f21, rdn # perform operation
fmsub.s f1, f3, f14, f21, rmm # perform operation
fmsub.s f1, f3, f14, f21, rne # perform operation
fmsub.s f1, f3, f14, f21, rtz # perform operation
fmsub.s f1, f3, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f3, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xa4efe685 # load x3 with value 0xa4efe685
sw x3, 0(x2) # store 0xa4efe685 in memory
flw f25, 0(x2) # load 0xa4efe685 from memory into f25
fmsub.s f19, f21, f27, f25, dyn # perform operation
fmsub.s f19, f21, f27, f25, rdn # perform operation
fmsub.s f19, f21, f27, f25, rmm # perform operation
fmsub.s f19, f21, f27, f25, rne # perform operation
fmsub.s f19, f21, f27, f25, rtz # perform operation
fmsub.s f19, f21, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xc2606df6 # load x3 with value 0xc2606df6
sw x3, 0(x2) # store 0xc2606df6 in memory
flw f28, 0(x2) # load 0xc2606df6 from memory into f28
fmsub.s f26, f16, f22, f28, dyn # perform operation
fmsub.s f26, f16, f22, f28, rdn # perform operation
fmsub.s f26, f16, f22, f28, rmm # perform operation
fmsub.s f26, f16, f22, f28, rne # perform operation
fmsub.s f26, f16, f22, f28, rtz # perform operation
fmsub.s f26, f16, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f16, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f16, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f16, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f16, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f16, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xf74a013f # load x3 with value 0xf74a013f
sw x3, 0(x2) # store 0xf74a013f in memory
flw f12, 0(x2) # load 0xf74a013f from memory into f12
fmsub.s f13, f7, f3, f12, dyn # perform operation
fmsub.s f13, f7, f3, f12, rdn # perform operation
fmsub.s f13, f7, f3, f12, rmm # perform operation
fmsub.s f13, f7, f3, f12, rne # perform operation
fmsub.s f13, f7, f3, f12, rtz # perform operation
fmsub.s f13, f7, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f7, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xbf878cb6 # load x3 with value 0xbf878cb6
sw x3, 0(x2) # store 0xbf878cb6 in memory
flw f13, 0(x2) # load 0xbf878cb6 from memory into f13
fmsub.s f20, f6, f19, f13, dyn # perform operation
fmsub.s f20, f6, f19, f13, rdn # perform operation
fmsub.s f20, f6, f19, f13, rmm # perform operation
fmsub.s f20, f6, f19, f13, rne # perform operation
fmsub.s f20, f6, f19, f13, rtz # perform operation
fmsub.s f20, f6, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x2ac1cd86 # load x3 with value 0x2ac1cd86
sw x3, 0(x2) # store 0x2ac1cd86 in memory
flw f10, 0(x2) # load 0x2ac1cd86 from memory into f10
fmsub.s f28, f24, f29, f10, dyn # perform operation
fmsub.s f28, f24, f29, f10, rdn # perform operation
fmsub.s f28, f24, f29, f10, rmm # perform operation
fmsub.s f28, f24, f29, f10, rne # perform operation
fmsub.s f28, f24, f29, f10, rtz # perform operation
fmsub.s f28, f24, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x9ea11712 # load x3 with value 0x9ea11712
sw x3, 0(x2) # store 0x9ea11712 in memory
flw f11, 0(x2) # load 0x9ea11712 from memory into f11
fmsub.s f12, f1, f28, f11, dyn # perform operation
fmsub.s f12, f1, f28, f11, rdn # perform operation
fmsub.s f12, f1, f28, f11, rmm # perform operation
fmsub.s f12, f1, f28, f11, rne # perform operation
fmsub.s f12, f1, f28, f11, rtz # perform operation
fmsub.s f12, f1, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x39d26c2f # load x3 with value 0x39d26c2f
sw x3, 0(x2) # store 0x39d26c2f in memory
flw f22, 0(x2) # load 0x39d26c2f from memory into f22
fmsub.s f10, f25, f16, f22, dyn # perform operation
fmsub.s f10, f25, f16, f22, rdn # perform operation
fmsub.s f10, f25, f16, f22, rmm # perform operation
fmsub.s f10, f25, f16, f22, rne # perform operation
fmsub.s f10, f25, f16, f22, rtz # perform operation
fmsub.s f10, f25, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xf0d4f9a3 # load x3 with value 0xf0d4f9a3
sw x3, 0(x2) # store 0xf0d4f9a3 in memory
flw f16, 0(x2) # load 0xf0d4f9a3 from memory into f16
fmsub.s f19, f12, f21, f16, dyn # perform operation
fmsub.s f19, f12, f21, f16, rdn # perform operation
fmsub.s f19, f12, f21, f16, rmm # perform operation
fmsub.s f19, f12, f21, f16, rne # perform operation
fmsub.s f19, f12, f21, f16, rtz # perform operation
fmsub.s f19, f12, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x453e8ac7 # load x3 with value 0x453e8ac7
sw x3, 0(x2) # store 0x453e8ac7 in memory
flw f6, 0(x2) # load 0x453e8ac7 from memory into f6
fmsub.s f15, f28, f26, f6, dyn # perform operation
fmsub.s f15, f28, f26, f6, rdn # perform operation
fmsub.s f15, f28, f26, f6, rmm # perform operation
fmsub.s f15, f28, f26, f6, rne # perform operation
fmsub.s f15, f28, f26, f6, rtz # perform operation
fmsub.s f15, f28, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xd9697be1 # load x3 with value 0xd9697be1
sw x3, 0(x2) # store 0xd9697be1 in memory
flw f6, 0(x2) # load 0xd9697be1 from memory into f6
fmsub.s f29, f10, f21, f6, dyn # perform operation
fmsub.s f29, f10, f21, f6, rdn # perform operation
fmsub.s f29, f10, f21, f6, rmm # perform operation
fmsub.s f29, f10, f21, f6, rne # perform operation
fmsub.s f29, f10, f21, f6, rtz # perform operation
fmsub.s f29, f10, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x57cee549 # load x3 with value 0x57cee549
sw x3, 0(x2) # store 0x57cee549 in memory
flw f9, 0(x2) # load 0x57cee549 from memory into f9
fmsub.s f19, f17, f2, f9, dyn # perform operation
fmsub.s f19, f17, f2, f9, rdn # perform operation
fmsub.s f19, f17, f2, f9, rmm # perform operation
fmsub.s f19, f17, f2, f9, rne # perform operation
fmsub.s f19, f17, f2, f9, rtz # perform operation
fmsub.s f19, f17, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xb98f5882 # load x3 with value 0xb98f5882
sw x3, 0(x2) # store 0xb98f5882 in memory
flw f27, 0(x2) # load 0xb98f5882 from memory into f27
fmsub.s f23, f9, f11, f27, dyn # perform operation
fmsub.s f23, f9, f11, f27, rdn # perform operation
fmsub.s f23, f9, f11, f27, rmm # perform operation
fmsub.s f23, f9, f11, f27, rne # perform operation
fmsub.s f23, f9, f11, f27, rtz # perform operation
fmsub.s f23, f9, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x46ab876f # load x3 with value 0x46ab876f
sw x3, 0(x2) # store 0x46ab876f in memory
flw f6, 0(x2) # load 0x46ab876f from memory into f6
fmsub.s f12, f15, f5, f6, dyn # perform operation
fmsub.s f12, f15, f5, f6, rdn # perform operation
fmsub.s f12, f15, f5, f6, rmm # perform operation
fmsub.s f12, f15, f5, f6, rne # perform operation
fmsub.s f12, f15, f5, f6, rtz # perform operation
fmsub.s f12, f15, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xc81edbac # load x3 with value 0xc81edbac
sw x3, 0(x2) # store 0xc81edbac in memory
flw f6, 0(x2) # load 0xc81edbac from memory into f6
fmsub.s f13, f17, f16, f6, dyn # perform operation
fmsub.s f13, f17, f16, f6, rdn # perform operation
fmsub.s f13, f17, f16, f6, rmm # perform operation
fmsub.s f13, f17, f16, f6, rne # perform operation
fmsub.s f13, f17, f16, f6, rtz # perform operation
fmsub.s f13, f17, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xb962567f # load x3 with value 0xb962567f
sw x3, 0(x2) # store 0xb962567f in memory
flw f3, 0(x2) # load 0xb962567f from memory into f3
fmsub.s f16, f8, f19, f3, dyn # perform operation
fmsub.s f16, f8, f19, f3, rdn # perform operation
fmsub.s f16, f8, f19, f3, rmm # perform operation
fmsub.s f16, f8, f19, f3, rne # perform operation
fmsub.s f16, f8, f19, f3, rtz # perform operation
fmsub.s f16, f8, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xa2b2ae67 # load x3 with value 0xa2b2ae67
sw x3, 0(x2) # store 0xa2b2ae67 in memory
flw f9, 0(x2) # load 0xa2b2ae67 from memory into f9
fmsub.s f28, f24, f29, f9, dyn # perform operation
fmsub.s f28, f24, f29, f9, rdn # perform operation
fmsub.s f28, f24, f29, f9, rmm # perform operation
fmsub.s f28, f24, f29, f9, rne # perform operation
fmsub.s f28, f24, f29, f9, rtz # perform operation
fmsub.s f28, f24, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0xb604632d # load x3 with value 0xb604632d
sw x3, 0(x2) # store 0xb604632d in memory
flw f31, 0(x2) # load 0xb604632d from memory into f31
fmsub.s f5, f20, f3, f31, dyn # perform operation
fmsub.s f5, f20, f3, f31, rdn # perform operation
fmsub.s f5, f20, f3, f31, rmm # perform operation
fmsub.s f5, f20, f3, f31, rne # perform operation
fmsub.s f5, f20, f3, f31, rtz # perform operation
fmsub.s f5, f20, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xb89cbbaa # load x3 with value 0xb89cbbaa
sw x3, 0(x2) # store 0xb89cbbaa in memory
flw f15, 0(x2) # load 0xb89cbbaa from memory into f15
fmsub.s f11, f23, f20, f15, dyn # perform operation
fmsub.s f11, f23, f20, f15, rdn # perform operation
fmsub.s f11, f23, f20, f15, rmm # perform operation
fmsub.s f11, f23, f20, f15, rne # perform operation
fmsub.s f11, f23, f20, f15, rtz # perform operation
fmsub.s f11, f23, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x6727783f # load x3 with value 0x6727783f
sw x3, 0(x2) # store 0x6727783f in memory
flw f6, 0(x2) # load 0x6727783f from memory into f6
fmsub.s f2, f17, f27, f6, dyn # perform operation
fmsub.s f2, f17, f27, f6, rdn # perform operation
fmsub.s f2, f17, f27, f6, rmm # perform operation
fmsub.s f2, f17, f27, f6, rne # perform operation
fmsub.s f2, f17, f27, f6, rtz # perform operation
fmsub.s f2, f17, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xa8ccfc50 # load x3 with value 0xa8ccfc50
sw x3, 0(x2) # store 0xa8ccfc50 in memory
flw f10, 0(x2) # load 0xa8ccfc50 from memory into f10
fmsub.s f18, f9, f22, f10, dyn # perform operation
fmsub.s f18, f9, f22, f10, rdn # perform operation
fmsub.s f18, f9, f22, f10, rmm # perform operation
fmsub.s f18, f9, f22, f10, rne # perform operation
fmsub.s f18, f9, f22, f10, rtz # perform operation
fmsub.s f18, f9, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xefaf5f6c # load x3 with value 0xefaf5f6c
sw x3, 0(x2) # store 0xefaf5f6c in memory
flw f9, 0(x2) # load 0xefaf5f6c from memory into f9
fmsub.s f17, f11, f18, f9, dyn # perform operation
fmsub.s f17, f11, f18, f9, rdn # perform operation
fmsub.s f17, f11, f18, f9, rmm # perform operation
fmsub.s f17, f11, f18, f9, rne # perform operation
fmsub.s f17, f11, f18, f9, rtz # perform operation
fmsub.s f17, f11, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f11, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x3f204307 # load x3 with value 0x3f204307
sw x3, 0(x2) # store 0x3f204307 in memory
flw f23, 0(x2) # load 0x3f204307 from memory into f23
fmsub.s f14, f16, f10, f23, dyn # perform operation
fmsub.s f14, f16, f10, f23, rdn # perform operation
fmsub.s f14, f16, f10, f23, rmm # perform operation
fmsub.s f14, f16, f10, f23, rne # perform operation
fmsub.s f14, f16, f10, f23, rtz # perform operation
fmsub.s f14, f16, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x100de2f8 # load x3 with value 0x100de2f8
sw x3, 0(x2) # store 0x100de2f8 in memory
flw f2, 0(x2) # load 0x100de2f8 from memory into f2
fmsub.s f3, f9, f16, f2, dyn # perform operation
fmsub.s f3, f9, f16, f2, rdn # perform operation
fmsub.s f3, f9, f16, f2, rmm # perform operation
fmsub.s f3, f9, f16, f2, rne # perform operation
fmsub.s f3, f9, f16, f2, rtz # perform operation
fmsub.s f3, f9, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xe68c35ec # load x3 with value 0xe68c35ec
sw x3, 0(x2) # store 0xe68c35ec in memory
flw f2, 0(x2) # load 0xe68c35ec from memory into f2
fmsub.s f19, f23, f11, f2, dyn # perform operation
fmsub.s f19, f23, f11, f2, rdn # perform operation
fmsub.s f19, f23, f11, f2, rmm # perform operation
fmsub.s f19, f23, f11, f2, rne # perform operation
fmsub.s f19, f23, f11, f2, rtz # perform operation
fmsub.s f19, f23, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x951e4b43 # load x3 with value 0x951e4b43
sw x3, 0(x2) # store 0x951e4b43 in memory
flw f12, 0(x2) # load 0x951e4b43 from memory into f12
fmsub.s f16, f25, f22, f12, dyn # perform operation
fmsub.s f16, f25, f22, f12, rdn # perform operation
fmsub.s f16, f25, f22, f12, rmm # perform operation
fmsub.s f16, f25, f22, f12, rne # perform operation
fmsub.s f16, f25, f22, f12, rtz # perform operation
fmsub.s f16, f25, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xfb9ea241 # load x3 with value 0xfb9ea241
sw x3, 0(x2) # store 0xfb9ea241 in memory
flw f5, 0(x2) # load 0xfb9ea241 from memory into f5
fmsub.s f11, f15, f14, f5, dyn # perform operation
fmsub.s f11, f15, f14, f5, rdn # perform operation
fmsub.s f11, f15, f14, f5, rmm # perform operation
fmsub.s f11, f15, f14, f5, rne # perform operation
fmsub.s f11, f15, f14, f5, rtz # perform operation
fmsub.s f11, f15, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x61005198 # load x3 with value 0x61005198
sw x3, 0(x2) # store 0x61005198 in memory
flw f5, 0(x2) # load 0x61005198 from memory into f5
fmsub.s f15, f1, f8, f5, dyn # perform operation
fmsub.s f15, f1, f8, f5, rdn # perform operation
fmsub.s f15, f1, f8, f5, rmm # perform operation
fmsub.s f15, f1, f8, f5, rne # perform operation
fmsub.s f15, f1, f8, f5, rtz # perform operation
fmsub.s f15, f1, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x02f4ef1b # load x3 with value 0x02f4ef1b
sw x3, 0(x2) # store 0x02f4ef1b in memory
flw f6, 0(x2) # load 0x02f4ef1b from memory into f6
fmsub.s f15, f7, f16, f6, dyn # perform operation
fmsub.s f15, f7, f16, f6, rdn # perform operation
fmsub.s f15, f7, f16, f6, rmm # perform operation
fmsub.s f15, f7, f16, f6, rne # perform operation
fmsub.s f15, f7, f16, f6, rtz # perform operation
fmsub.s f15, f7, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f7, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xf923129b # load x3 with value 0xf923129b
sw x3, 0(x2) # store 0xf923129b in memory
flw f9, 0(x2) # load 0xf923129b from memory into f9
fmsub.s f31, f26, f21, f9, dyn # perform operation
fmsub.s f31, f26, f21, f9, rdn # perform operation
fmsub.s f31, f26, f21, f9, rmm # perform operation
fmsub.s f31, f26, f21, f9, rne # perform operation
fmsub.s f31, f26, f21, f9, rtz # perform operation
fmsub.s f31, f26, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x741aeb8d # load x3 with value 0x741aeb8d
sw x3, 0(x2) # store 0x741aeb8d in memory
flw f8, 0(x2) # load 0x741aeb8d from memory into f8
fmsub.s f2, f14, f17, f8, dyn # perform operation
fmsub.s f2, f14, f17, f8, rdn # perform operation
fmsub.s f2, f14, f17, f8, rmm # perform operation
fmsub.s f2, f14, f17, f8, rne # perform operation
fmsub.s f2, f14, f17, f8, rtz # perform operation
fmsub.s f2, f14, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xee0b11c1 # load x3 with value 0xee0b11c1
sw x3, 0(x2) # store 0xee0b11c1 in memory
flw f20, 0(x2) # load 0xee0b11c1 from memory into f20
fmsub.s f11, f27, f6, f20, dyn # perform operation
fmsub.s f11, f27, f6, f20, rdn # perform operation
fmsub.s f11, f27, f6, f20, rmm # perform operation
fmsub.s f11, f27, f6, f20, rne # perform operation
fmsub.s f11, f27, f6, f20, rtz # perform operation
fmsub.s f11, f27, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x629b1f77 # load x3 with value 0x629b1f77
sw x3, 0(x2) # store 0x629b1f77 in memory
flw f31, 0(x2) # load 0x629b1f77 from memory into f31
fmsub.s f25, f6, f11, f31, dyn # perform operation
fmsub.s f25, f6, f11, f31, rdn # perform operation
fmsub.s f25, f6, f11, f31, rmm # perform operation
fmsub.s f25, f6, f11, f31, rne # perform operation
fmsub.s f25, f6, f11, f31, rtz # perform operation
fmsub.s f25, f6, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x42e136b8 # load x3 with value 0x42e136b8
sw x3, 0(x2) # store 0x42e136b8 in memory
flw f12, 0(x2) # load 0x42e136b8 from memory into f12
fmsub.s f27, f10, f19, f12, dyn # perform operation
fmsub.s f27, f10, f19, f12, rdn # perform operation
fmsub.s f27, f10, f19, f12, rmm # perform operation
fmsub.s f27, f10, f19, f12, rne # perform operation
fmsub.s f27, f10, f19, f12, rtz # perform operation
fmsub.s f27, f10, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x301d86c0 # load x3 with value 0x301d86c0
sw x3, 0(x2) # store 0x301d86c0 in memory
flw f21, 0(x2) # load 0x301d86c0 from memory into f21
fmsub.s f23, f13, f1, f21, dyn # perform operation
fmsub.s f23, f13, f1, f21, rdn # perform operation
fmsub.s f23, f13, f1, f21, rmm # perform operation
fmsub.s f23, f13, f1, f21, rne # perform operation
fmsub.s f23, f13, f1, f21, rtz # perform operation
fmsub.s f23, f13, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x4f78e9ee # load x3 with value 0x4f78e9ee
sw x3, 0(x2) # store 0x4f78e9ee in memory
flw f5, 0(x2) # load 0x4f78e9ee from memory into f5
fmsub.s f8, f30, f17, f5, dyn # perform operation
fmsub.s f8, f30, f17, f5, rdn # perform operation
fmsub.s f8, f30, f17, f5, rmm # perform operation
fmsub.s f8, f30, f17, f5, rne # perform operation
fmsub.s f8, f30, f17, f5, rtz # perform operation
fmsub.s f8, f30, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x130b5785 # load x3 with value 0x130b5785
sw x3, 0(x2) # store 0x130b5785 in memory
flw f15, 0(x2) # load 0x130b5785 from memory into f15
fmsub.s f25, f18, f27, f15, dyn # perform operation
fmsub.s f25, f18, f27, f15, rdn # perform operation
fmsub.s f25, f18, f27, f15, rmm # perform operation
fmsub.s f25, f18, f27, f15, rne # perform operation
fmsub.s f25, f18, f27, f15, rtz # perform operation
fmsub.s f25, f18, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x303e2435 # load x3 with value 0x303e2435
sw x3, 0(x2) # store 0x303e2435 in memory
flw f25, 0(x2) # load 0x303e2435 from memory into f25
fmsub.s f31, f10, f28, f25, dyn # perform operation
fmsub.s f31, f10, f28, f25, rdn # perform operation
fmsub.s f31, f10, f28, f25, rmm # perform operation
fmsub.s f31, f10, f28, f25, rne # perform operation
fmsub.s f31, f10, f28, f25, rtz # perform operation
fmsub.s f31, f10, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x0b93b1da # load x3 with value 0x0b93b1da
sw x3, 0(x2) # store 0x0b93b1da in memory
flw f24, 0(x2) # load 0x0b93b1da from memory into f24
fmsub.s f5, f15, f1, f24, dyn # perform operation
fmsub.s f5, f15, f1, f24, rdn # perform operation
fmsub.s f5, f15, f1, f24, rmm # perform operation
fmsub.s f5, f15, f1, f24, rne # perform operation
fmsub.s f5, f15, f1, f24, rtz # perform operation
fmsub.s f5, f15, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x0c7f808e # load x3 with value 0x0c7f808e
sw x3, 0(x2) # store 0x0c7f808e in memory
flw f12, 0(x2) # load 0x0c7f808e from memory into f12
fmsub.s f10, f19, f16, f12, dyn # perform operation
fmsub.s f10, f19, f16, f12, rdn # perform operation
fmsub.s f10, f19, f16, f12, rmm # perform operation
fmsub.s f10, f19, f16, f12, rne # perform operation
fmsub.s f10, f19, f16, f12, rtz # perform operation
fmsub.s f10, f19, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f19, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xb900ed5a # load x3 with value 0xb900ed5a
sw x3, 0(x2) # store 0xb900ed5a in memory
flw f24, 0(x2) # load 0xb900ed5a from memory into f24
fmsub.s f20, f5, f25, f24, dyn # perform operation
fmsub.s f20, f5, f25, f24, rdn # perform operation
fmsub.s f20, f5, f25, f24, rmm # perform operation
fmsub.s f20, f5, f25, f24, rne # perform operation
fmsub.s f20, f5, f25, f24, rtz # perform operation
fmsub.s f20, f5, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f5, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f5, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f5, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f5, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f5, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x99738100 # load x3 with value 0x99738100
sw x3, 0(x2) # store 0x99738100 in memory
flw f13, 0(x2) # load 0x99738100 from memory into f13
fmsub.s f15, f12, f28, f13, dyn # perform operation
fmsub.s f15, f12, f28, f13, rdn # perform operation
fmsub.s f15, f12, f28, f13, rmm # perform operation
fmsub.s f15, f12, f28, f13, rne # perform operation
fmsub.s f15, f12, f28, f13, rtz # perform operation
fmsub.s f15, f12, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f12, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x9d5bd44a # load x3 with value 0x9d5bd44a
sw x3, 0(x2) # store 0x9d5bd44a in memory
flw f1, 0(x2) # load 0x9d5bd44a from memory into f1
fmsub.s f15, f5, f19, f1, dyn # perform operation
fmsub.s f15, f5, f19, f1, rdn # perform operation
fmsub.s f15, f5, f19, f1, rmm # perform operation
fmsub.s f15, f5, f19, f1, rne # perform operation
fmsub.s f15, f5, f19, f1, rtz # perform operation
fmsub.s f15, f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0xfeb20aa5 # load x3 with value 0xfeb20aa5
sw x3, 0(x2) # store 0xfeb20aa5 in memory
flw f18, 0(x2) # load 0xfeb20aa5 from memory into f18
fmsub.s f22, f30, f20, f18, dyn # perform operation
fmsub.s f22, f30, f20, f18, rdn # perform operation
fmsub.s f22, f30, f20, f18, rmm # perform operation
fmsub.s f22, f30, f20, f18, rne # perform operation
fmsub.s f22, f30, f20, f18, rtz # perform operation
fmsub.s f22, f30, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xcb271a67 # load x3 with value 0xcb271a67
sw x3, 0(x2) # store 0xcb271a67 in memory
flw f18, 0(x2) # load 0xcb271a67 from memory into f18
fmsub.s f21, f14, f19, f18, dyn # perform operation
fmsub.s f21, f14, f19, f18, rdn # perform operation
fmsub.s f21, f14, f19, f18, rmm # perform operation
fmsub.s f21, f14, f19, f18, rne # perform operation
fmsub.s f21, f14, f19, f18, rtz # perform operation
fmsub.s f21, f14, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x083b8161 # load x3 with value 0x083b8161
sw x3, 0(x2) # store 0x083b8161 in memory
flw f2, 0(x2) # load 0x083b8161 from memory into f2
fmsub.s f15, f25, f11, f2, dyn # perform operation
fmsub.s f15, f25, f11, f2, rdn # perform operation
fmsub.s f15, f25, f11, f2, rmm # perform operation
fmsub.s f15, f25, f11, f2, rne # perform operation
fmsub.s f15, f25, f11, f2, rtz # perform operation
fmsub.s f15, f25, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x0a0b4c94 # load x3 with value 0x0a0b4c94
sw x3, 0(x2) # store 0x0a0b4c94 in memory
flw f2, 0(x2) # load 0x0a0b4c94 from memory into f2
fmsub.s f27, f26, f5, f2, dyn # perform operation
fmsub.s f27, f26, f5, f2, rdn # perform operation
fmsub.s f27, f26, f5, f2, rmm # perform operation
fmsub.s f27, f26, f5, f2, rne # perform operation
fmsub.s f27, f26, f5, f2, rtz # perform operation
fmsub.s f27, f26, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xa227baf8 # load x3 with value 0xa227baf8
sw x3, 0(x2) # store 0xa227baf8 in memory
flw f17, 0(x2) # load 0xa227baf8 from memory into f17
fmsub.s f12, f15, f23, f17, dyn # perform operation
fmsub.s f12, f15, f23, f17, rdn # perform operation
fmsub.s f12, f15, f23, f17, rmm # perform operation
fmsub.s f12, f15, f23, f17, rne # perform operation
fmsub.s f12, f15, f23, f17, rtz # perform operation
fmsub.s f12, f15, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x8800ca63 # load x3 with value 0x8800ca63
sw x3, 0(x2) # store 0x8800ca63 in memory
flw f10, 0(x2) # load 0x8800ca63 from memory into f10
fmsub.s f6, f30, f15, f10, dyn # perform operation
fmsub.s f6, f30, f15, f10, rdn # perform operation
fmsub.s f6, f30, f15, f10, rmm # perform operation
fmsub.s f6, f30, f15, f10, rne # perform operation
fmsub.s f6, f30, f15, f10, rtz # perform operation
fmsub.s f6, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x824efbdb # load x3 with value 0x824efbdb
sw x3, 0(x2) # store 0x824efbdb in memory
flw f13, 0(x2) # load 0x824efbdb from memory into f13
fmsub.s f5, f3, f15, f13, dyn # perform operation
fmsub.s f5, f3, f15, f13, rdn # perform operation
fmsub.s f5, f3, f15, f13, rmm # perform operation
fmsub.s f5, f3, f15, f13, rne # perform operation
fmsub.s f5, f3, f15, f13, rtz # perform operation
fmsub.s f5, f3, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x126a0933 # load x3 with value 0x126a0933
sw x3, 0(x2) # store 0x126a0933 in memory
flw f31, 0(x2) # load 0x126a0933 from memory into f31
fmsub.s f14, f15, f20, f31, dyn # perform operation
fmsub.s f14, f15, f20, f31, rdn # perform operation
fmsub.s f14, f15, f20, f31, rmm # perform operation
fmsub.s f14, f15, f20, f31, rne # perform operation
fmsub.s f14, f15, f20, f31, rtz # perform operation
fmsub.s f14, f15, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x63572f61 # load x3 with value 0x63572f61
sw x3, 0(x2) # store 0x63572f61 in memory
flw f18, 0(x2) # load 0x63572f61 from memory into f18
fmsub.s f22, f3, f5, f18, dyn # perform operation
fmsub.s f22, f3, f5, f18, rdn # perform operation
fmsub.s f22, f3, f5, f18, rmm # perform operation
fmsub.s f22, f3, f5, f18, rne # perform operation
fmsub.s f22, f3, f5, f18, rtz # perform operation
fmsub.s f22, f3, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x85750bd9 # load x3 with value 0x85750bd9
sw x3, 0(x2) # store 0x85750bd9 in memory
flw f10, 0(x2) # load 0x85750bd9 from memory into f10
fmsub.s f29, f30, f15, f10, dyn # perform operation
fmsub.s f29, f30, f15, f10, rdn # perform operation
fmsub.s f29, f30, f15, f10, rmm # perform operation
fmsub.s f29, f30, f15, f10, rne # perform operation
fmsub.s f29, f30, f15, f10, rtz # perform operation
fmsub.s f29, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xf52eec99 # load x3 with value 0xf52eec99
sw x3, 0(x2) # store 0xf52eec99 in memory
flw f19, 0(x2) # load 0xf52eec99 from memory into f19
fmsub.s f7, f28, f5, f19, dyn # perform operation
fmsub.s f7, f28, f5, f19, rdn # perform operation
fmsub.s f7, f28, f5, f19, rmm # perform operation
fmsub.s f7, f28, f5, f19, rne # perform operation
fmsub.s f7, f28, f5, f19, rtz # perform operation
fmsub.s f7, f28, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f28, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x7fbb1377 # load x3 with value 0x7fbb1377
sw x3, 0(x2) # store 0x7fbb1377 in memory
flw f26, 0(x2) # load 0x7fbb1377 from memory into f26
fmsub.s f28, f29, f8, f26, dyn # perform operation
fmsub.s f28, f29, f8, f26, rdn # perform operation
fmsub.s f28, f29, f8, f26, rmm # perform operation
fmsub.s f28, f29, f8, f26, rne # perform operation
fmsub.s f28, f29, f8, f26, rtz # perform operation
fmsub.s f28, f29, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xaf720939 # load x3 with value 0xaf720939
sw x3, 0(x2) # store 0xaf720939 in memory
flw f15, 0(x2) # load 0xaf720939 from memory into f15
fmsub.s f6, f1, f18, f15, dyn # perform operation
fmsub.s f6, f1, f18, f15, rdn # perform operation
fmsub.s f6, f1, f18, f15, rmm # perform operation
fmsub.s f6, f1, f18, f15, rne # perform operation
fmsub.s f6, f1, f18, f15, rtz # perform operation
fmsub.s f6, f1, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x3ce7876d # load x3 with value 0x3ce7876d
sw x3, 0(x2) # store 0x3ce7876d in memory
flw f17, 0(x2) # load 0x3ce7876d from memory into f17
fmsub.s f1, f27, f3, f17, dyn # perform operation
fmsub.s f1, f27, f3, f17, rdn # perform operation
fmsub.s f1, f27, f3, f17, rmm # perform operation
fmsub.s f1, f27, f3, f17, rne # perform operation
fmsub.s f1, f27, f3, f17, rtz # perform operation
fmsub.s f1, f27, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f27, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xbd474e95 # load x3 with value 0xbd474e95
sw x3, 0(x2) # store 0xbd474e95 in memory
flw f31, 0(x2) # load 0xbd474e95 from memory into f31
fmsub.s f18, f20, f14, f31, dyn # perform operation
fmsub.s f18, f20, f14, f31, rdn # perform operation
fmsub.s f18, f20, f14, f31, rmm # perform operation
fmsub.s f18, f20, f14, f31, rne # perform operation
fmsub.s f18, f20, f14, f31, rtz # perform operation
fmsub.s f18, f20, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f20, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x430eb4fb # load x3 with value 0x430eb4fb
sw x3, 0(x2) # store 0x430eb4fb in memory
flw f10, 0(x2) # load 0x430eb4fb from memory into f10
fmsub.s f18, f21, f16, f10, dyn # perform operation
fmsub.s f18, f21, f16, f10, rdn # perform operation
fmsub.s f18, f21, f16, f10, rmm # perform operation
fmsub.s f18, f21, f16, f10, rne # perform operation
fmsub.s f18, f21, f16, f10, rtz # perform operation
fmsub.s f18, f21, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xfdc86755 # load x3 with value 0xfdc86755
sw x3, 0(x2) # store 0xfdc86755 in memory
flw f13, 0(x2) # load 0xfdc86755 from memory into f13
fmsub.s f29, f27, f30, f13, dyn # perform operation
fmsub.s f29, f27, f30, f13, rdn # perform operation
fmsub.s f29, f27, f30, f13, rmm # perform operation
fmsub.s f29, f27, f30, f13, rne # perform operation
fmsub.s f29, f27, f30, f13, rtz # perform operation
fmsub.s f29, f27, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f27, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x13cdac9c # load x3 with value 0x13cdac9c
sw x3, 0(x2) # store 0x13cdac9c in memory
flw f6, 0(x2) # load 0x13cdac9c from memory into f6
fmsub.s f13, f12, f2, f6, dyn # perform operation
fmsub.s f13, f12, f2, f6, rdn # perform operation
fmsub.s f13, f12, f2, f6, rmm # perform operation
fmsub.s f13, f12, f2, f6, rne # perform operation
fmsub.s f13, f12, f2, f6, rtz # perform operation
fmsub.s f13, f12, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x680c8b84 # load x3 with value 0x680c8b84
sw x3, 0(x2) # store 0x680c8b84 in memory
flw f21, 0(x2) # load 0x680c8b84 from memory into f21
fmsub.s f25, f7, f11, f21, dyn # perform operation
fmsub.s f25, f7, f11, f21, rdn # perform operation
fmsub.s f25, f7, f11, f21, rmm # perform operation
fmsub.s f25, f7, f11, f21, rne # perform operation
fmsub.s f25, f7, f11, f21, rtz # perform operation
fmsub.s f25, f7, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f7, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xb1e9a9a9 # load x3 with value 0xb1e9a9a9
sw x3, 0(x2) # store 0xb1e9a9a9 in memory
flw f8, 0(x2) # load 0xb1e9a9a9 from memory into f8
fmsub.s f31, f25, f2, f8, dyn # perform operation
fmsub.s f31, f25, f2, f8, rdn # perform operation
fmsub.s f31, f25, f2, f8, rmm # perform operation
fmsub.s f31, f25, f2, f8, rne # perform operation
fmsub.s f31, f25, f2, f8, rtz # perform operation
fmsub.s f31, f25, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x355a3287 # load x3 with value 0x355a3287
sw x3, 0(x2) # store 0x355a3287 in memory
flw f17, 0(x2) # load 0x355a3287 from memory into f17
fmsub.s f11, f29, f13, f17, dyn # perform operation
fmsub.s f11, f29, f13, f17, rdn # perform operation
fmsub.s f11, f29, f13, f17, rmm # perform operation
fmsub.s f11, f29, f13, f17, rne # perform operation
fmsub.s f11, f29, f13, f17, rtz # perform operation
fmsub.s f11, f29, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xb92a89bd # load x3 with value 0xb92a89bd
sw x3, 0(x2) # store 0xb92a89bd in memory
flw f29, 0(x2) # load 0xb92a89bd from memory into f29
fmsub.s f30, f21, f25, f29, dyn # perform operation
fmsub.s f30, f21, f25, f29, rdn # perform operation
fmsub.s f30, f21, f25, f29, rmm # perform operation
fmsub.s f30, f21, f25, f29, rne # perform operation
fmsub.s f30, f21, f25, f29, rtz # perform operation
fmsub.s f30, f21, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x43ec11f4 # load x3 with value 0x43ec11f4
sw x3, 0(x2) # store 0x43ec11f4 in memory
flw f21, 0(x2) # load 0x43ec11f4 from memory into f21
fmsub.s f10, f17, f26, f21, dyn # perform operation
fmsub.s f10, f17, f26, f21, rdn # perform operation
fmsub.s f10, f17, f26, f21, rmm # perform operation
fmsub.s f10, f17, f26, f21, rne # perform operation
fmsub.s f10, f17, f26, f21, rtz # perform operation
fmsub.s f10, f17, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x84bf6175 # load x3 with value 0x84bf6175
sw x3, 0(x2) # store 0x84bf6175 in memory
flw f13, 0(x2) # load 0x84bf6175 from memory into f13
fmsub.s f14, f21, f30, f13, dyn # perform operation
fmsub.s f14, f21, f30, f13, rdn # perform operation
fmsub.s f14, f21, f30, f13, rmm # perform operation
fmsub.s f14, f21, f30, f13, rne # perform operation
fmsub.s f14, f21, f30, f13, rtz # perform operation
fmsub.s f14, f21, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x4654fa53 # load x3 with value 0x4654fa53
sw x3, 0(x2) # store 0x4654fa53 in memory
flw f22, 0(x2) # load 0x4654fa53 from memory into f22
fmsub.s f12, f14, f18, f22, dyn # perform operation
fmsub.s f12, f14, f18, f22, rdn # perform operation
fmsub.s f12, f14, f18, f22, rmm # perform operation
fmsub.s f12, f14, f18, f22, rne # perform operation
fmsub.s f12, f14, f18, f22, rtz # perform operation
fmsub.s f12, f14, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xe5a4a61a # load x3 with value 0xe5a4a61a
sw x3, 0(x2) # store 0xe5a4a61a in memory
flw f6, 0(x2) # load 0xe5a4a61a from memory into f6
fmsub.s f21, f30, f15, f6, dyn # perform operation
fmsub.s f21, f30, f15, f6, rdn # perform operation
fmsub.s f21, f30, f15, f6, rmm # perform operation
fmsub.s f21, f30, f15, f6, rne # perform operation
fmsub.s f21, f30, f15, f6, rtz # perform operation
fmsub.s f21, f30, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x0c2cd066 # load x3 with value 0x0c2cd066
sw x3, 0(x2) # store 0x0c2cd066 in memory
flw f14, 0(x2) # load 0x0c2cd066 from memory into f14
fmsub.s f30, f16, f7, f14, dyn # perform operation
fmsub.s f30, f16, f7, f14, rdn # perform operation
fmsub.s f30, f16, f7, f14, rmm # perform operation
fmsub.s f30, f16, f7, f14, rne # perform operation
fmsub.s f30, f16, f7, f14, rtz # perform operation
fmsub.s f30, f16, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x5a605624 # load x3 with value 0x5a605624
sw x3, 0(x2) # store 0x5a605624 in memory
flw f14, 0(x2) # load 0x5a605624 from memory into f14
fmsub.s f22, f20, f3, f14, dyn # perform operation
fmsub.s f22, f20, f3, f14, rdn # perform operation
fmsub.s f22, f20, f3, f14, rmm # perform operation
fmsub.s f22, f20, f3, f14, rne # perform operation
fmsub.s f22, f20, f3, f14, rtz # perform operation
fmsub.s f22, f20, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xef449577 # load x3 with value 0xef449577
sw x3, 0(x2) # store 0xef449577 in memory
flw f26, 0(x2) # load 0xef449577 from memory into f26
fmsub.s f12, f25, f10, f26, dyn # perform operation
fmsub.s f12, f25, f10, f26, rdn # perform operation
fmsub.s f12, f25, f10, f26, rmm # perform operation
fmsub.s f12, f25, f10, f26, rne # perform operation
fmsub.s f12, f25, f10, f26, rtz # perform operation
fmsub.s f12, f25, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f25, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x706d8543 # load x3 with value 0x706d8543
sw x3, 0(x2) # store 0x706d8543 in memory
flw f26, 0(x2) # load 0x706d8543 from memory into f26
fmsub.s f18, f6, f2, f26, dyn # perform operation
fmsub.s f18, f6, f2, f26, rdn # perform operation
fmsub.s f18, f6, f2, f26, rmm # perform operation
fmsub.s f18, f6, f2, f26, rne # perform operation
fmsub.s f18, f6, f2, f26, rtz # perform operation
fmsub.s f18, f6, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x88305dd0 # load x3 with value 0x88305dd0
sw x3, 0(x2) # store 0x88305dd0 in memory
flw f22, 0(x2) # load 0x88305dd0 from memory into f22
fmsub.s f31, f6, f24, f22, dyn # perform operation
fmsub.s f31, f6, f24, f22, rdn # perform operation
fmsub.s f31, f6, f24, f22, rmm # perform operation
fmsub.s f31, f6, f24, f22, rne # perform operation
fmsub.s f31, f6, f24, f22, rtz # perform operation
fmsub.s f31, f6, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f6, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f6, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f6, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f6, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f6, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x742f77ef # load x3 with value 0x742f77ef
sw x3, 0(x2) # store 0x742f77ef in memory
flw f8, 0(x2) # load 0x742f77ef from memory into f8
fmsub.s f19, f13, f27, f8, dyn # perform operation
fmsub.s f19, f13, f27, f8, rdn # perform operation
fmsub.s f19, f13, f27, f8, rmm # perform operation
fmsub.s f19, f13, f27, f8, rne # perform operation
fmsub.s f19, f13, f27, f8, rtz # perform operation
fmsub.s f19, f13, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x167aa9be # load x3 with value 0x167aa9be
sw x3, 0(x2) # store 0x167aa9be in memory
flw f13, 0(x2) # load 0x167aa9be from memory into f13
fmsub.s f17, f31, f6, f13, dyn # perform operation
fmsub.s f17, f31, f6, f13, rdn # perform operation
fmsub.s f17, f31, f6, f13, rmm # perform operation
fmsub.s f17, f31, f6, f13, rne # perform operation
fmsub.s f17, f31, f6, f13, rtz # perform operation
fmsub.s f17, f31, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f31, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f31, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f31, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f31, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f31, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x365657b0 # load x3 with value 0x365657b0
sw x3, 0(x2) # store 0x365657b0 in memory
flw f6, 0(x2) # load 0x365657b0 from memory into f6
fmsub.s f17, f8, f27, f6, dyn # perform operation
fmsub.s f17, f8, f27, f6, rdn # perform operation
fmsub.s f17, f8, f27, f6, rmm # perform operation
fmsub.s f17, f8, f27, f6, rne # perform operation
fmsub.s f17, f8, f27, f6, rtz # perform operation
fmsub.s f17, f8, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x7fbe76a0 # load x3 with value 0x7fbe76a0
sw x3, 0(x2) # store 0x7fbe76a0 in memory
flw f20, 0(x2) # load 0x7fbe76a0 from memory into f20
fmsub.s f17, f2, f25, f20, dyn # perform operation
fmsub.s f17, f2, f25, f20, rdn # perform operation
fmsub.s f17, f2, f25, f20, rmm # perform operation
fmsub.s f17, f2, f25, f20, rne # perform operation
fmsub.s f17, f2, f25, f20, rtz # perform operation
fmsub.s f17, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0xa9d3b7c1 # load x3 with value 0xa9d3b7c1
sw x3, 0(x2) # store 0xa9d3b7c1 in memory
flw f19, 0(x2) # load 0xa9d3b7c1 from memory into f19
fmsub.s f20, f9, f25, f19, dyn # perform operation
fmsub.s f20, f9, f25, f19, rdn # perform operation
fmsub.s f20, f9, f25, f19, rmm # perform operation
fmsub.s f20, f9, f25, f19, rne # perform operation
fmsub.s f20, f9, f25, f19, rtz # perform operation
fmsub.s f20, f9, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xf616310b # load x3 with value 0xf616310b
sw x3, 0(x2) # store 0xf616310b in memory
flw f22, 0(x2) # load 0xf616310b from memory into f22
fmsub.s f28, f29, f26, f22, dyn # perform operation
fmsub.s f28, f29, f26, f22, rdn # perform operation
fmsub.s f28, f29, f26, f22, rmm # perform operation
fmsub.s f28, f29, f26, f22, rne # perform operation
fmsub.s f28, f29, f26, f22, rtz # perform operation
fmsub.s f28, f29, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x37de8445 # load x3 with value 0x37de8445
sw x3, 0(x2) # store 0x37de8445 in memory
flw f23, 0(x2) # load 0x37de8445 from memory into f23
fmsub.s f3, f9, f30, f23, dyn # perform operation
fmsub.s f3, f9, f30, f23, rdn # perform operation
fmsub.s f3, f9, f30, f23, rmm # perform operation
fmsub.s f3, f9, f30, f23, rne # perform operation
fmsub.s f3, f9, f30, f23, rtz # perform operation
fmsub.s f3, f9, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x98231b9d # load x3 with value 0x98231b9d
sw x3, 0(x2) # store 0x98231b9d in memory
flw f23, 0(x2) # load 0x98231b9d from memory into f23
fmsub.s f18, f9, f31, f23, dyn # perform operation
fmsub.s f18, f9, f31, f23, rdn # perform operation
fmsub.s f18, f9, f31, f23, rmm # perform operation
fmsub.s f18, f9, f31, f23, rne # perform operation
fmsub.s f18, f9, f31, f23, rtz # perform operation
fmsub.s f18, f9, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xd0441f67 # load x3 with value 0xd0441f67
sw x3, 0(x2) # store 0xd0441f67 in memory
flw f22, 0(x2) # load 0xd0441f67 from memory into f22
fmsub.s f21, f24, f12, f22, dyn # perform operation
fmsub.s f21, f24, f12, f22, rdn # perform operation
fmsub.s f21, f24, f12, f22, rmm # perform operation
fmsub.s f21, f24, f12, f22, rne # perform operation
fmsub.s f21, f24, f12, f22, rtz # perform operation
fmsub.s f21, f24, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x4fae61d0 # load x3 with value 0x4fae61d0
sw x3, 0(x2) # store 0x4fae61d0 in memory
flw f17, 0(x2) # load 0x4fae61d0 from memory into f17
fmsub.s f20, f25, f28, f17, dyn # perform operation
fmsub.s f20, f25, f28, f17, rdn # perform operation
fmsub.s f20, f25, f28, f17, rmm # perform operation
fmsub.s f20, f25, f28, f17, rne # perform operation
fmsub.s f20, f25, f28, f17, rtz # perform operation
fmsub.s f20, f25, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f25, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xe26de3a3 # load x3 with value 0xe26de3a3
sw x3, 0(x2) # store 0xe26de3a3 in memory
flw f28, 0(x2) # load 0xe26de3a3 from memory into f28
fmsub.s f30, f18, f21, f28, dyn # perform operation
fmsub.s f30, f18, f21, f28, rdn # perform operation
fmsub.s f30, f18, f21, f28, rmm # perform operation
fmsub.s f30, f18, f21, f28, rne # perform operation
fmsub.s f30, f18, f21, f28, rtz # perform operation
fmsub.s f30, f18, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xa8b6ec25 # load x3 with value 0xa8b6ec25
sw x3, 0(x2) # store 0xa8b6ec25 in memory
flw f15, 0(x2) # load 0xa8b6ec25 from memory into f15
fmsub.s f9, f17, f7, f15, dyn # perform operation
fmsub.s f9, f17, f7, f15, rdn # perform operation
fmsub.s f9, f17, f7, f15, rmm # perform operation
fmsub.s f9, f17, f7, f15, rne # perform operation
fmsub.s f9, f17, f7, f15, rtz # perform operation
fmsub.s f9, f17, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f17, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x2d81271a # load x3 with value 0x2d81271a
sw x3, 0(x2) # store 0x2d81271a in memory
flw f22, 0(x2) # load 0x2d81271a from memory into f22
fmsub.s f27, f15, f9, f22, dyn # perform operation
fmsub.s f27, f15, f9, f22, rdn # perform operation
fmsub.s f27, f15, f9, f22, rmm # perform operation
fmsub.s f27, f15, f9, f22, rne # perform operation
fmsub.s f27, f15, f9, f22, rtz # perform operation
fmsub.s f27, f15, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xf84d6337 # load x3 with value 0xf84d6337
sw x3, 0(x2) # store 0xf84d6337 in memory
flw f16, 0(x2) # load 0xf84d6337 from memory into f16
fmsub.s f19, f15, f10, f16, dyn # perform operation
fmsub.s f19, f15, f10, f16, rdn # perform operation
fmsub.s f19, f15, f10, f16, rmm # perform operation
fmsub.s f19, f15, f10, f16, rne # perform operation
fmsub.s f19, f15, f10, f16, rtz # perform operation
fmsub.s f19, f15, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x56448a10 # load x3 with value 0x56448a10
sw x3, 0(x2) # store 0x56448a10 in memory
flw f27, 0(x2) # load 0x56448a10 from memory into f27
fmsub.s f11, f21, f6, f27, dyn # perform operation
fmsub.s f11, f21, f6, f27, rdn # perform operation
fmsub.s f11, f21, f6, f27, rmm # perform operation
fmsub.s f11, f21, f6, f27, rne # perform operation
fmsub.s f11, f21, f6, f27, rtz # perform operation
fmsub.s f11, f21, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xe10a06dc # load x3 with value 0xe10a06dc
sw x3, 0(x2) # store 0xe10a06dc in memory
flw f31, 0(x2) # load 0xe10a06dc from memory into f31
fmsub.s f10, f8, f1, f31, dyn # perform operation
fmsub.s f10, f8, f1, f31, rdn # perform operation
fmsub.s f10, f8, f1, f31, rmm # perform operation
fmsub.s f10, f8, f1, f31, rne # perform operation
fmsub.s f10, f8, f1, f31, rtz # perform operation
fmsub.s f10, f8, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xefb68e84 # load x3 with value 0xefb68e84
sw x3, 0(x2) # store 0xefb68e84 in memory
flw f12, 0(x2) # load 0xefb68e84 from memory into f12
fmsub.s f28, f8, f31, f12, dyn # perform operation
fmsub.s f28, f8, f31, f12, rdn # perform operation
fmsub.s f28, f8, f31, f12, rmm # perform operation
fmsub.s f28, f8, f31, f12, rne # perform operation
fmsub.s f28, f8, f31, f12, rtz # perform operation
fmsub.s f28, f8, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0xaaa5cba2 # load x3 with value 0xaaa5cba2
sw x3, 0(x2) # store 0xaaa5cba2 in memory
flw f2, 0(x2) # load 0xaaa5cba2 from memory into f2
fmsub.s f6, f3, f26, f2, dyn # perform operation
fmsub.s f6, f3, f26, f2, rdn # perform operation
fmsub.s f6, f3, f26, f2, rmm # perform operation
fmsub.s f6, f3, f26, f2, rne # perform operation
fmsub.s f6, f3, f26, f2, rtz # perform operation
fmsub.s f6, f3, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xf004b5a5 # load x3 with value 0xf004b5a5
sw x3, 0(x2) # store 0xf004b5a5 in memory
flw f14, 0(x2) # load 0xf004b5a5 from memory into f14
fmsub.s f26, f29, f17, f14, dyn # perform operation
fmsub.s f26, f29, f17, f14, rdn # perform operation
fmsub.s f26, f29, f17, f14, rmm # perform operation
fmsub.s f26, f29, f17, f14, rne # perform operation
fmsub.s f26, f29, f17, f14, rtz # perform operation
fmsub.s f26, f29, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x1d9f7250 # load x3 with value 0x1d9f7250
sw x3, 0(x2) # store 0x1d9f7250 in memory
flw f24, 0(x2) # load 0x1d9f7250 from memory into f24
fmsub.s f26, f15, f22, f24, dyn # perform operation
fmsub.s f26, f15, f22, f24, rdn # perform operation
fmsub.s f26, f15, f22, f24, rmm # perform operation
fmsub.s f26, f15, f22, f24, rne # perform operation
fmsub.s f26, f15, f22, f24, rtz # perform operation
fmsub.s f26, f15, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7803ca6d # load x3 with value 0x7803ca6d
sw x3, 0(x2) # store 0x7803ca6d in memory
flw f21, 0(x2) # load 0x7803ca6d from memory into f21
fmsub.s f26, f3, f27, f21, dyn # perform operation
fmsub.s f26, f3, f27, f21, rdn # perform operation
fmsub.s f26, f3, f27, f21, rmm # perform operation
fmsub.s f26, f3, f27, f21, rne # perform operation
fmsub.s f26, f3, f27, f21, rtz # perform operation
fmsub.s f26, f3, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xeaa656d2 # load x3 with value 0xeaa656d2
sw x3, 0(x2) # store 0xeaa656d2 in memory
flw f28, 0(x2) # load 0xeaa656d2 from memory into f28
fmsub.s f7, f26, f14, f28, dyn # perform operation
fmsub.s f7, f26, f14, f28, rdn # perform operation
fmsub.s f7, f26, f14, f28, rmm # perform operation
fmsub.s f7, f26, f14, f28, rne # perform operation
fmsub.s f7, f26, f14, f28, rtz # perform operation
fmsub.s f7, f26, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xe5289c97 # load x3 with value 0xe5289c97
sw x3, 0(x2) # store 0xe5289c97 in memory
flw f7, 0(x2) # load 0xe5289c97 from memory into f7
fmsub.s f18, f30, f11, f7, dyn # perform operation
fmsub.s f18, f30, f11, f7, rdn # perform operation
fmsub.s f18, f30, f11, f7, rmm # perform operation
fmsub.s f18, f30, f11, f7, rne # perform operation
fmsub.s f18, f30, f11, f7, rtz # perform operation
fmsub.s f18, f30, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x15c4e1d6 # load x3 with value 0x15c4e1d6
sw x3, 0(x2) # store 0x15c4e1d6 in memory
flw f2, 0(x2) # load 0x15c4e1d6 from memory into f2
fmsub.s f23, f31, f19, f2, dyn # perform operation
fmsub.s f23, f31, f19, f2, rdn # perform operation
fmsub.s f23, f31, f19, f2, rmm # perform operation
fmsub.s f23, f31, f19, f2, rne # perform operation
fmsub.s f23, f31, f19, f2, rtz # perform operation
fmsub.s f23, f31, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x52d04fb5 # load x3 with value 0x52d04fb5
sw x3, 0(x2) # store 0x52d04fb5 in memory
flw f2, 0(x2) # load 0x52d04fb5 from memory into f2
fmsub.s f9, f8, f15, f2, dyn # perform operation
fmsub.s f9, f8, f15, f2, rdn # perform operation
fmsub.s f9, f8, f15, f2, rmm # perform operation
fmsub.s f9, f8, f15, f2, rne # perform operation
fmsub.s f9, f8, f15, f2, rtz # perform operation
fmsub.s f9, f8, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f8, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xb378b4c5 # load x3 with value 0xb378b4c5
sw x3, 0(x2) # store 0xb378b4c5 in memory
flw f27, 0(x2) # load 0xb378b4c5 from memory into f27
fmsub.s f31, f10, f29, f27, dyn # perform operation
fmsub.s f31, f10, f29, f27, rdn # perform operation
fmsub.s f31, f10, f29, f27, rmm # perform operation
fmsub.s f31, f10, f29, f27, rne # perform operation
fmsub.s f31, f10, f29, f27, rtz # perform operation
fmsub.s f31, f10, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0xbd78bd7c # load x3 with value 0xbd78bd7c
sw x3, 0(x2) # store 0xbd78bd7c in memory
flw f18, 0(x2) # load 0xbd78bd7c from memory into f18
fmsub.s f22, f13, f28, f18, dyn # perform operation
fmsub.s f22, f13, f28, f18, rdn # perform operation
fmsub.s f22, f13, f28, f18, rmm # perform operation
fmsub.s f22, f13, f28, f18, rne # perform operation
fmsub.s f22, f13, f28, f18, rtz # perform operation
fmsub.s f22, f13, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f13, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x4585a420 # load x3 with value 0x4585a420
sw x3, 0(x2) # store 0x4585a420 in memory
flw f18, 0(x2) # load 0x4585a420 from memory into f18
fmsub.s f12, f10, f31, f18, dyn # perform operation
fmsub.s f12, f10, f31, f18, rdn # perform operation
fmsub.s f12, f10, f31, f18, rmm # perform operation
fmsub.s f12, f10, f31, f18, rne # perform operation
fmsub.s f12, f10, f31, f18, rtz # perform operation
fmsub.s f12, f10, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xe722f666 # load x3 with value 0xe722f666
sw x3, 0(x2) # store 0xe722f666 in memory
flw f11, 0(x2) # load 0xe722f666 from memory into f11
fmsub.s f25, f10, f8, f11, dyn # perform operation
fmsub.s f25, f10, f8, f11, rdn # perform operation
fmsub.s f25, f10, f8, f11, rmm # perform operation
fmsub.s f25, f10, f8, f11, rne # perform operation
fmsub.s f25, f10, f8, f11, rtz # perform operation
fmsub.s f25, f10, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x64fb1275 # load x3 with value 0x64fb1275
sw x3, 0(x2) # store 0x64fb1275 in memory
flw f22, 0(x2) # load 0x64fb1275 from memory into f22
fmsub.s f30, f29, f2, f22, dyn # perform operation
fmsub.s f30, f29, f2, f22, rdn # perform operation
fmsub.s f30, f29, f2, f22, rmm # perform operation
fmsub.s f30, f29, f2, f22, rne # perform operation
fmsub.s f30, f29, f2, f22, rtz # perform operation
fmsub.s f30, f29, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x5387dc4f # load x3 with value 0x5387dc4f
sw x3, 0(x2) # store 0x5387dc4f in memory
flw f23, 0(x2) # load 0x5387dc4f from memory into f23
fmsub.s f22, f17, f14, f23, dyn # perform operation
fmsub.s f22, f17, f14, f23, rdn # perform operation
fmsub.s f22, f17, f14, f23, rmm # perform operation
fmsub.s f22, f17, f14, f23, rne # perform operation
fmsub.s f22, f17, f14, f23, rtz # perform operation
fmsub.s f22, f17, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f17, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xaafaba09 # load x3 with value 0xaafaba09
sw x3, 0(x2) # store 0xaafaba09 in memory
flw f27, 0(x2) # load 0xaafaba09 from memory into f27
fmsub.s f9, f12, f25, f27, dyn # perform operation
fmsub.s f9, f12, f25, f27, rdn # perform operation
fmsub.s f9, f12, f25, f27, rmm # perform operation
fmsub.s f9, f12, f25, f27, rne # perform operation
fmsub.s f9, f12, f25, f27, rtz # perform operation
fmsub.s f9, f12, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x0f9deec1 # load x3 with value 0x0f9deec1
sw x3, 0(x2) # store 0x0f9deec1 in memory
flw f5, 0(x2) # load 0x0f9deec1 from memory into f5
fmsub.s f23, f3, f30, f5, dyn # perform operation
fmsub.s f23, f3, f30, f5, rdn # perform operation
fmsub.s f23, f3, f30, f5, rmm # perform operation
fmsub.s f23, f3, f30, f5, rne # perform operation
fmsub.s f23, f3, f30, f5, rtz # perform operation
fmsub.s f23, f3, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xfd0d1f96 # load x3 with value 0xfd0d1f96
sw x3, 0(x2) # store 0xfd0d1f96 in memory
flw f6, 0(x2) # load 0xfd0d1f96 from memory into f6
fmsub.s f17, f14, f1, f6, dyn # perform operation
fmsub.s f17, f14, f1, f6, rdn # perform operation
fmsub.s f17, f14, f1, f6, rmm # perform operation
fmsub.s f17, f14, f1, f6, rne # perform operation
fmsub.s f17, f14, f1, f6, rtz # perform operation
fmsub.s f17, f14, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x2dd3921d # load x3 with value 0x2dd3921d
sw x3, 0(x2) # store 0x2dd3921d in memory
flw f31, 0(x2) # load 0x2dd3921d from memory into f31
fmsub.s f24, f23, f15, f31, dyn # perform operation
fmsub.s f24, f23, f15, f31, rdn # perform operation
fmsub.s f24, f23, f15, f31, rmm # perform operation
fmsub.s f24, f23, f15, f31, rne # perform operation
fmsub.s f24, f23, f15, f31, rtz # perform operation
fmsub.s f24, f23, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x7486542b # load x3 with value 0x7486542b
sw x3, 0(x2) # store 0x7486542b in memory
flw f6, 0(x2) # load 0x7486542b from memory into f6
fmsub.s f31, f21, f19, f6, dyn # perform operation
fmsub.s f31, f21, f19, f6, rdn # perform operation
fmsub.s f31, f21, f19, f6, rmm # perform operation
fmsub.s f31, f21, f19, f6, rne # perform operation
fmsub.s f31, f21, f19, f6, rtz # perform operation
fmsub.s f31, f21, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x91bc7d58 # load x3 with value 0x91bc7d58
sw x3, 0(x2) # store 0x91bc7d58 in memory
flw f9, 0(x2) # load 0x91bc7d58 from memory into f9
fmsub.s f27, f16, f7, f9, dyn # perform operation
fmsub.s f27, f16, f7, f9, rdn # perform operation
fmsub.s f27, f16, f7, f9, rmm # perform operation
fmsub.s f27, f16, f7, f9, rne # perform operation
fmsub.s f27, f16, f7, f9, rtz # perform operation
fmsub.s f27, f16, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x699cf0d2 # load x3 with value 0x699cf0d2
sw x3, 0(x2) # store 0x699cf0d2 in memory
flw f2, 0(x2) # load 0x699cf0d2 from memory into f2
fmsub.s f11, f13, f18, f2, dyn # perform operation
fmsub.s f11, f13, f18, f2, rdn # perform operation
fmsub.s f11, f13, f18, f2, rmm # perform operation
fmsub.s f11, f13, f18, f2, rne # perform operation
fmsub.s f11, f13, f18, f2, rtz # perform operation
fmsub.s f11, f13, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x55755162 # load x3 with value 0x55755162
sw x3, 0(x2) # store 0x55755162 in memory
flw f31, 0(x2) # load 0x55755162 from memory into f31
fmsub.s f7, f11, f27, f31, dyn # perform operation
fmsub.s f7, f11, f27, f31, rdn # perform operation
fmsub.s f7, f11, f27, f31, rmm # perform operation
fmsub.s f7, f11, f27, f31, rne # perform operation
fmsub.s f7, f11, f27, f31, rtz # perform operation
fmsub.s f7, f11, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xbc8e35bb # load x3 with value 0xbc8e35bb
sw x3, 0(x2) # store 0xbc8e35bb in memory
flw f20, 0(x2) # load 0xbc8e35bb from memory into f20
fmsub.s f5, f1, f7, f20, dyn # perform operation
fmsub.s f5, f1, f7, f20, rdn # perform operation
fmsub.s f5, f1, f7, f20, rmm # perform operation
fmsub.s f5, f1, f7, f20, rne # perform operation
fmsub.s f5, f1, f7, f20, rtz # perform operation
fmsub.s f5, f1, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x4380cfac # load x3 with value 0x4380cfac
sw x3, 0(x2) # store 0x4380cfac in memory
flw f19, 0(x2) # load 0x4380cfac from memory into f19
fmsub.s f17, f21, f31, f19, dyn # perform operation
fmsub.s f17, f21, f31, f19, rdn # perform operation
fmsub.s f17, f21, f31, f19, rmm # perform operation
fmsub.s f17, f21, f31, f19, rne # perform operation
fmsub.s f17, f21, f31, f19, rtz # perform operation
fmsub.s f17, f21, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f21, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xd893d4e8 # load x3 with value 0xd893d4e8
sw x3, 0(x2) # store 0xd893d4e8 in memory
flw f21, 0(x2) # load 0xd893d4e8 from memory into f21
fmsub.s f27, f23, f11, f21, dyn # perform operation
fmsub.s f27, f23, f11, f21, rdn # perform operation
fmsub.s f27, f23, f11, f21, rmm # perform operation
fmsub.s f27, f23, f11, f21, rne # perform operation
fmsub.s f27, f23, f11, f21, rtz # perform operation
fmsub.s f27, f23, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xc74c8ea3 # load x3 with value 0xc74c8ea3
sw x3, 0(x2) # store 0xc74c8ea3 in memory
flw f5, 0(x2) # load 0xc74c8ea3 from memory into f5
fmsub.s f2, f22, f30, f5, dyn # perform operation
fmsub.s f2, f22, f30, f5, rdn # perform operation
fmsub.s f2, f22, f30, f5, rmm # perform operation
fmsub.s f2, f22, f30, f5, rne # perform operation
fmsub.s f2, f22, f30, f5, rtz # perform operation
fmsub.s f2, f22, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f22, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x02066761 # load x3 with value 0x02066761
sw x3, 0(x2) # store 0x02066761 in memory
flw f8, 0(x2) # load 0x02066761 from memory into f8
fmsub.s f28, f30, f14, f8, dyn # perform operation
fmsub.s f28, f30, f14, f8, rdn # perform operation
fmsub.s f28, f30, f14, f8, rmm # perform operation
fmsub.s f28, f30, f14, f8, rne # perform operation
fmsub.s f28, f30, f14, f8, rtz # perform operation
fmsub.s f28, f30, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x5c08d836 # load x3 with value 0x5c08d836
sw x3, 0(x2) # store 0x5c08d836 in memory
flw f18, 0(x2) # load 0x5c08d836 from memory into f18
fmsub.s f22, f26, f2, f18, dyn # perform operation
fmsub.s f22, f26, f2, f18, rdn # perform operation
fmsub.s f22, f26, f2, f18, rmm # perform operation
fmsub.s f22, f26, f2, f18, rne # perform operation
fmsub.s f22, f26, f2, f18, rtz # perform operation
fmsub.s f22, f26, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x41e8626a # load x3 with value 0x41e8626a
sw x3, 0(x2) # store 0x41e8626a in memory
flw f10, 0(x2) # load 0x41e8626a from memory into f10
fmsub.s f15, f13, f29, f10, dyn # perform operation
fmsub.s f15, f13, f29, f10, rdn # perform operation
fmsub.s f15, f13, f29, f10, rmm # perform operation
fmsub.s f15, f13, f29, f10, rne # perform operation
fmsub.s f15, f13, f29, f10, rtz # perform operation
fmsub.s f15, f13, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f13, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xc25bad1b # load x3 with value 0xc25bad1b
sw x3, 0(x2) # store 0xc25bad1b in memory
flw f20, 0(x2) # load 0xc25bad1b from memory into f20
fmsub.s f18, f26, f17, f20, dyn # perform operation
fmsub.s f18, f26, f17, f20, rdn # perform operation
fmsub.s f18, f26, f17, f20, rmm # perform operation
fmsub.s f18, f26, f17, f20, rne # perform operation
fmsub.s f18, f26, f17, f20, rtz # perform operation
fmsub.s f18, f26, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xc70996c0 # load x3 with value 0xc70996c0
sw x3, 0(x2) # store 0xc70996c0 in memory
flw f12, 0(x2) # load 0xc70996c0 from memory into f12
fmsub.s f14, f24, f22, f12, dyn # perform operation
fmsub.s f14, f24, f22, f12, rdn # perform operation
fmsub.s f14, f24, f22, f12, rmm # perform operation
fmsub.s f14, f24, f22, f12, rne # perform operation
fmsub.s f14, f24, f22, f12, rtz # perform operation
fmsub.s f14, f24, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x740acf21 # load x3 with value 0x740acf21
sw x3, 0(x2) # store 0x740acf21 in memory
flw f12, 0(x2) # load 0x740acf21 from memory into f12
fmsub.s f18, f16, f3, f12, dyn # perform operation
fmsub.s f18, f16, f3, f12, rdn # perform operation
fmsub.s f18, f16, f3, f12, rmm # perform operation
fmsub.s f18, f16, f3, f12, rne # perform operation
fmsub.s f18, f16, f3, f12, rtz # perform operation
fmsub.s f18, f16, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xda6c8d45 # load x3 with value 0xda6c8d45
sw x3, 0(x2) # store 0xda6c8d45 in memory
flw f12, 0(x2) # load 0xda6c8d45 from memory into f12
fmsub.s f8, f1, f7, f12, dyn # perform operation
fmsub.s f8, f1, f7, f12, rdn # perform operation
fmsub.s f8, f1, f7, f12, rmm # perform operation
fmsub.s f8, f1, f7, f12, rne # perform operation
fmsub.s f8, f1, f7, f12, rtz # perform operation
fmsub.s f8, f1, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xf754f5a9 # load x3 with value 0xf754f5a9
sw x3, 0(x2) # store 0xf754f5a9 in memory
flw f1, 0(x2) # load 0xf754f5a9 from memory into f1
fmsub.s f30, f25, f24, f1, dyn # perform operation
fmsub.s f30, f25, f24, f1, rdn # perform operation
fmsub.s f30, f25, f24, f1, rmm # perform operation
fmsub.s f30, f25, f24, f1, rne # perform operation
fmsub.s f30, f25, f24, f1, rtz # perform operation
fmsub.s f30, f25, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xffed0fda # load x3 with value 0xffed0fda
sw x3, 0(x2) # store 0xffed0fda in memory
flw f23, 0(x2) # load 0xffed0fda from memory into f23
fmsub.s f16, f3, f28, f23, dyn # perform operation
fmsub.s f16, f3, f28, f23, rdn # perform operation
fmsub.s f16, f3, f28, f23, rmm # perform operation
fmsub.s f16, f3, f28, f23, rne # perform operation
fmsub.s f16, f3, f28, f23, rtz # perform operation
fmsub.s f16, f3, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x7c979b45 # load x3 with value 0x7c979b45
sw x3, 0(x2) # store 0x7c979b45 in memory
flw f30, 0(x2) # load 0x7c979b45 from memory into f30
fmsub.s f10, f29, f13, f30, dyn # perform operation
fmsub.s f10, f29, f13, f30, rdn # perform operation
fmsub.s f10, f29, f13, f30, rmm # perform operation
fmsub.s f10, f29, f13, f30, rne # perform operation
fmsub.s f10, f29, f13, f30, rtz # perform operation
fmsub.s f10, f29, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f29, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x6854d933 # load x3 with value 0x6854d933
sw x3, 0(x2) # store 0x6854d933 in memory
flw f21, 0(x2) # load 0x6854d933 from memory into f21
fmsub.s f3, f7, f27, f21, dyn # perform operation
fmsub.s f3, f7, f27, f21, rdn # perform operation
fmsub.s f3, f7, f27, f21, rmm # perform operation
fmsub.s f3, f7, f27, f21, rne # perform operation
fmsub.s f3, f7, f27, f21, rtz # perform operation
fmsub.s f3, f7, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x92c9c663 # load x3 with value 0x92c9c663
sw x3, 0(x2) # store 0x92c9c663 in memory
flw f10, 0(x2) # load 0x92c9c663 from memory into f10
fmsub.s f17, f6, f7, f10, dyn # perform operation
fmsub.s f17, f6, f7, f10, rdn # perform operation
fmsub.s f17, f6, f7, f10, rmm # perform operation
fmsub.s f17, f6, f7, f10, rne # perform operation
fmsub.s f17, f6, f7, f10, rtz # perform operation
fmsub.s f17, f6, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x091dbba5 # load x3 with value 0x091dbba5
sw x3, 0(x2) # store 0x091dbba5 in memory
flw f18, 0(x2) # load 0x091dbba5 from memory into f18
fmsub.s f28, f22, f15, f18, dyn # perform operation
fmsub.s f28, f22, f15, f18, rdn # perform operation
fmsub.s f28, f22, f15, f18, rmm # perform operation
fmsub.s f28, f22, f15, f18, rne # perform operation
fmsub.s f28, f22, f15, f18, rtz # perform operation
fmsub.s f28, f22, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x33d367ed # load x3 with value 0x33d367ed
sw x3, 0(x2) # store 0x33d367ed in memory
flw f8, 0(x2) # load 0x33d367ed from memory into f8
fmsub.s f3, f26, f16, f8, dyn # perform operation
fmsub.s f3, f26, f16, f8, rdn # perform operation
fmsub.s f3, f26, f16, f8, rmm # perform operation
fmsub.s f3, f26, f16, f8, rne # perform operation
fmsub.s f3, f26, f16, f8, rtz # perform operation
fmsub.s f3, f26, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f26, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f26, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f26, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f26, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f26, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x276c4452 # load x3 with value 0x276c4452
sw x3, 0(x2) # store 0x276c4452 in memory
flw f6, 0(x2) # load 0x276c4452 from memory into f6
fmsub.s f3, f18, f28, f6, dyn # perform operation
fmsub.s f3, f18, f28, f6, rdn # perform operation
fmsub.s f3, f18, f28, f6, rmm # perform operation
fmsub.s f3, f18, f28, f6, rne # perform operation
fmsub.s f3, f18, f28, f6, rtz # perform operation
fmsub.s f3, f18, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xa389f200 # load x3 with value 0xa389f200
sw x3, 0(x2) # store 0xa389f200 in memory
flw f17, 0(x2) # load 0xa389f200 from memory into f17
fmsub.s f18, f9, f21, f17, dyn # perform operation
fmsub.s f18, f9, f21, f17, rdn # perform operation
fmsub.s f18, f9, f21, f17, rmm # perform operation
fmsub.s f18, f9, f21, f17, rne # perform operation
fmsub.s f18, f9, f21, f17, rtz # perform operation
fmsub.s f18, f9, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x8f8c0e51 # load x3 with value 0x8f8c0e51
sw x3, 0(x2) # store 0x8f8c0e51 in memory
flw f27, 0(x2) # load 0x8f8c0e51 from memory into f27
fmsub.s f21, f22, f13, f27, dyn # perform operation
fmsub.s f21, f22, f13, f27, rdn # perform operation
fmsub.s f21, f22, f13, f27, rmm # perform operation
fmsub.s f21, f22, f13, f27, rne # perform operation
fmsub.s f21, f22, f13, f27, rtz # perform operation
fmsub.s f21, f22, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x6e34a237 # load x3 with value 0x6e34a237
sw x3, 0(x2) # store 0x6e34a237 in memory
flw f14, 0(x2) # load 0x6e34a237 from memory into f14
fmsub.s f24, f26, f22, f14, dyn # perform operation
fmsub.s f24, f26, f22, f14, rdn # perform operation
fmsub.s f24, f26, f22, f14, rmm # perform operation
fmsub.s f24, f26, f22, f14, rne # perform operation
fmsub.s f24, f26, f22, f14, rtz # perform operation
fmsub.s f24, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x2a0e49af # load x3 with value 0x2a0e49af
sw x3, 0(x2) # store 0x2a0e49af in memory
flw f10, 0(x2) # load 0x2a0e49af from memory into f10
fmsub.s f14, f5, f31, f10, dyn # perform operation
fmsub.s f14, f5, f31, f10, rdn # perform operation
fmsub.s f14, f5, f31, f10, rmm # perform operation
fmsub.s f14, f5, f31, f10, rne # perform operation
fmsub.s f14, f5, f31, f10, rtz # perform operation
fmsub.s f14, f5, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x37f9b1b3 # load x3 with value 0x37f9b1b3
sw x3, 0(x2) # store 0x37f9b1b3 in memory
flw f24, 0(x2) # load 0x37f9b1b3 from memory into f24
fmsub.s f20, f18, f30, f24, dyn # perform operation
fmsub.s f20, f18, f30, f24, rdn # perform operation
fmsub.s f20, f18, f30, f24, rmm # perform operation
fmsub.s f20, f18, f30, f24, rne # perform operation
fmsub.s f20, f18, f30, f24, rtz # perform operation
fmsub.s f20, f18, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f18, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0xd4e30396 # load x3 with value 0xd4e30396
sw x3, 0(x2) # store 0xd4e30396 in memory
flw f22, 0(x2) # load 0xd4e30396 from memory into f22
fmsub.s f11, f17, f1, f22, dyn # perform operation
fmsub.s f11, f17, f1, f22, rdn # perform operation
fmsub.s f11, f17, f1, f22, rmm # perform operation
fmsub.s f11, f17, f1, f22, rne # perform operation
fmsub.s f11, f17, f1, f22, rtz # perform operation
fmsub.s f11, f17, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xf20f5764 # load x3 with value 0xf20f5764
sw x3, 0(x2) # store 0xf20f5764 in memory
flw f30, 0(x2) # load 0xf20f5764 from memory into f30
fmsub.s f12, f3, f10, f30, dyn # perform operation
fmsub.s f12, f3, f10, f30, rdn # perform operation
fmsub.s f12, f3, f10, f30, rmm # perform operation
fmsub.s f12, f3, f10, f30, rne # perform operation
fmsub.s f12, f3, f10, f30, rtz # perform operation
fmsub.s f12, f3, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x3ba51836 # load x3 with value 0x3ba51836
sw x3, 0(x2) # store 0x3ba51836 in memory
flw f19, 0(x2) # load 0x3ba51836 from memory into f19
fmsub.s f5, f29, f24, f19, dyn # perform operation
fmsub.s f5, f29, f24, f19, rdn # perform operation
fmsub.s f5, f29, f24, f19, rmm # perform operation
fmsub.s f5, f29, f24, f19, rne # perform operation
fmsub.s f5, f29, f24, f19, rtz # perform operation
fmsub.s f5, f29, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xd0b1800e # load x3 with value 0xd0b1800e
sw x3, 0(x2) # store 0xd0b1800e in memory
flw f21, 0(x2) # load 0xd0b1800e from memory into f21
fmsub.s f5, f10, f22, f21, dyn # perform operation
fmsub.s f5, f10, f22, f21, rdn # perform operation
fmsub.s f5, f10, f22, f21, rmm # perform operation
fmsub.s f5, f10, f22, f21, rne # perform operation
fmsub.s f5, f10, f22, f21, rtz # perform operation
fmsub.s f5, f10, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xdef15246 # load x3 with value 0xdef15246
sw x3, 0(x2) # store 0xdef15246 in memory
flw f10, 0(x2) # load 0xdef15246 from memory into f10
fmsub.s f26, f16, f17, f10, dyn # perform operation
fmsub.s f26, f16, f17, f10, rdn # perform operation
fmsub.s f26, f16, f17, f10, rmm # perform operation
fmsub.s f26, f16, f17, f10, rne # perform operation
fmsub.s f26, f16, f17, f10, rtz # perform operation
fmsub.s f26, f16, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f16, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x738f152d # load x3 with value 0x738f152d
sw x3, 0(x2) # store 0x738f152d in memory
flw f23, 0(x2) # load 0x738f152d from memory into f23
fmsub.s f1, f7, f19, f23, dyn # perform operation
fmsub.s f1, f7, f19, f23, rdn # perform operation
fmsub.s f1, f7, f19, f23, rmm # perform operation
fmsub.s f1, f7, f19, f23, rne # perform operation
fmsub.s f1, f7, f19, f23, rtz # perform operation
fmsub.s f1, f7, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xf020fbb8 # load x3 with value 0xf020fbb8
sw x3, 0(x2) # store 0xf020fbb8 in memory
flw f29, 0(x2) # load 0xf020fbb8 from memory into f29
fmsub.s f21, f18, f9, f29, dyn # perform operation
fmsub.s f21, f18, f9, f29, rdn # perform operation
fmsub.s f21, f18, f9, f29, rmm # perform operation
fmsub.s f21, f18, f9, f29, rne # perform operation
fmsub.s f21, f18, f9, f29, rtz # perform operation
fmsub.s f21, f18, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xbcbc4605 # load x3 with value 0xbcbc4605
sw x3, 0(x2) # store 0xbcbc4605 in memory
flw f10, 0(x2) # load 0xbcbc4605 from memory into f10
fmsub.s f1, f29, f17, f10, dyn # perform operation
fmsub.s f1, f29, f17, f10, rdn # perform operation
fmsub.s f1, f29, f17, f10, rmm # perform operation
fmsub.s f1, f29, f17, f10, rne # perform operation
fmsub.s f1, f29, f17, f10, rtz # perform operation
fmsub.s f1, f29, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f29, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x8d263709 # load x3 with value 0x8d263709
sw x3, 0(x2) # store 0x8d263709 in memory
flw f2, 0(x2) # load 0x8d263709 from memory into f2
fmsub.s f1, f5, f12, f2, dyn # perform operation
fmsub.s f1, f5, f12, f2, rdn # perform operation
fmsub.s f1, f5, f12, f2, rmm # perform operation
fmsub.s f1, f5, f12, f2, rne # perform operation
fmsub.s f1, f5, f12, f2, rtz # perform operation
fmsub.s f1, f5, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x726bfa43 # load x3 with value 0x726bfa43
sw x3, 0(x2) # store 0x726bfa43 in memory
flw f11, 0(x2) # load 0x726bfa43 from memory into f11
fmsub.s f1, f17, f28, f11, dyn # perform operation
fmsub.s f1, f17, f28, f11, rdn # perform operation
fmsub.s f1, f17, f28, f11, rmm # perform operation
fmsub.s f1, f17, f28, f11, rne # perform operation
fmsub.s f1, f17, f28, f11, rtz # perform operation
fmsub.s f1, f17, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x95337548 # load x3 with value 0x95337548
sw x3, 0(x2) # store 0x95337548 in memory
flw f15, 0(x2) # load 0x95337548 from memory into f15
fmsub.s f10, f9, f22, f15, dyn # perform operation
fmsub.s f10, f9, f22, f15, rdn # perform operation
fmsub.s f10, f9, f22, f15, rmm # perform operation
fmsub.s f10, f9, f22, f15, rne # perform operation
fmsub.s f10, f9, f22, f15, rtz # perform operation
fmsub.s f10, f9, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x071bfb54 # load x3 with value 0x071bfb54
sw x3, 0(x2) # store 0x071bfb54 in memory
flw f24, 0(x2) # load 0x071bfb54 from memory into f24
fmsub.s f13, f22, f14, f24, dyn # perform operation
fmsub.s f13, f22, f14, f24, rdn # perform operation
fmsub.s f13, f22, f14, f24, rmm # perform operation
fmsub.s f13, f22, f14, f24, rne # perform operation
fmsub.s f13, f22, f14, f24, rtz # perform operation
fmsub.s f13, f22, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f22, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x1e45c35e # load x3 with value 0x1e45c35e
sw x3, 0(x2) # store 0x1e45c35e in memory
flw f9, 0(x2) # load 0x1e45c35e from memory into f9
fmsub.s f31, f3, f23, f9, dyn # perform operation
fmsub.s f31, f3, f23, f9, rdn # perform operation
fmsub.s f31, f3, f23, f9, rmm # perform operation
fmsub.s f31, f3, f23, f9, rne # perform operation
fmsub.s f31, f3, f23, f9, rtz # perform operation
fmsub.s f31, f3, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x79c52c24 # load x3 with value 0x79c52c24
sw x3, 0(x2) # store 0x79c52c24 in memory
flw f30, 0(x2) # load 0x79c52c24 from memory into f30
fmsub.s f13, f15, f12, f30, dyn # perform operation
fmsub.s f13, f15, f12, f30, rdn # perform operation
fmsub.s f13, f15, f12, f30, rmm # perform operation
fmsub.s f13, f15, f12, f30, rne # perform operation
fmsub.s f13, f15, f12, f30, rtz # perform operation
fmsub.s f13, f15, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x32280fec # load x3 with value 0x32280fec
sw x3, 0(x2) # store 0x32280fec in memory
flw f31, 0(x2) # load 0x32280fec from memory into f31
fmsub.s f22, f1, f29, f31, dyn # perform operation
fmsub.s f22, f1, f29, f31, rdn # perform operation
fmsub.s f22, f1, f29, f31, rmm # perform operation
fmsub.s f22, f1, f29, f31, rne # perform operation
fmsub.s f22, f1, f29, f31, rtz # perform operation
fmsub.s f22, f1, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f1, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x987a0cf6 # load x3 with value 0x987a0cf6
sw x3, 0(x2) # store 0x987a0cf6 in memory
flw f17, 0(x2) # load 0x987a0cf6 from memory into f17
fmsub.s f12, f10, f22, f17, dyn # perform operation
fmsub.s f12, f10, f22, f17, rdn # perform operation
fmsub.s f12, f10, f22, f17, rmm # perform operation
fmsub.s f12, f10, f22, f17, rne # perform operation
fmsub.s f12, f10, f22, f17, rtz # perform operation
fmsub.s f12, f10, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x74f8b7e9 # load x3 with value 0x74f8b7e9
sw x3, 0(x2) # store 0x74f8b7e9 in memory
flw f9, 0(x2) # load 0x74f8b7e9 from memory into f9
fmsub.s f6, f16, f2, f9, dyn # perform operation
fmsub.s f6, f16, f2, f9, rdn # perform operation
fmsub.s f6, f16, f2, f9, rmm # perform operation
fmsub.s f6, f16, f2, f9, rne # perform operation
fmsub.s f6, f16, f2, f9, rtz # perform operation
fmsub.s f6, f16, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xa684b00c # load x3 with value 0xa684b00c
sw x3, 0(x2) # store 0xa684b00c in memory
flw f18, 0(x2) # load 0xa684b00c from memory into f18
fmsub.s f16, f15, f1, f18, dyn # perform operation
fmsub.s f16, f15, f1, f18, rdn # perform operation
fmsub.s f16, f15, f1, f18, rmm # perform operation
fmsub.s f16, f15, f1, f18, rne # perform operation
fmsub.s f16, f15, f1, f18, rtz # perform operation
fmsub.s f16, f15, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x58fbc671 # load x3 with value 0x58fbc671
sw x3, 0(x2) # store 0x58fbc671 in memory
flw f13, 0(x2) # load 0x58fbc671 from memory into f13
fmsub.s f28, f2, f1, f13, dyn # perform operation
fmsub.s f28, f2, f1, f13, rdn # perform operation
fmsub.s f28, f2, f1, f13, rmm # perform operation
fmsub.s f28, f2, f1, f13, rne # perform operation
fmsub.s f28, f2, f1, f13, rtz # perform operation
fmsub.s f28, f2, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x8e4ad5d2 # load x3 with value 0x8e4ad5d2
sw x3, 0(x2) # store 0x8e4ad5d2 in memory
flw f11, 0(x2) # load 0x8e4ad5d2 from memory into f11
fmsub.s f25, f17, f20, f11, dyn # perform operation
fmsub.s f25, f17, f20, f11, rdn # perform operation
fmsub.s f25, f17, f20, f11, rmm # perform operation
fmsub.s f25, f17, f20, f11, rne # perform operation
fmsub.s f25, f17, f20, f11, rtz # perform operation
fmsub.s f25, f17, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xd8dd01f4 # load x3 with value 0xd8dd01f4
sw x3, 0(x2) # store 0xd8dd01f4 in memory
flw f21, 0(x2) # load 0xd8dd01f4 from memory into f21
fmsub.s f5, f15, f22, f21, dyn # perform operation
fmsub.s f5, f15, f22, f21, rdn # perform operation
fmsub.s f5, f15, f22, f21, rmm # perform operation
fmsub.s f5, f15, f22, f21, rne # perform operation
fmsub.s f5, f15, f22, f21, rtz # perform operation
fmsub.s f5, f15, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x38db07b7 # load x3 with value 0x38db07b7
sw x3, 0(x2) # store 0x38db07b7 in memory
flw f11, 0(x2) # load 0x38db07b7 from memory into f11
fmsub.s f7, f20, f6, f11, dyn # perform operation
fmsub.s f7, f20, f6, f11, rdn # perform operation
fmsub.s f7, f20, f6, f11, rmm # perform operation
fmsub.s f7, f20, f6, f11, rne # perform operation
fmsub.s f7, f20, f6, f11, rtz # perform operation
fmsub.s f7, f20, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x16689aac # load x3 with value 0x16689aac
sw x3, 0(x2) # store 0x16689aac in memory
flw f3, 0(x2) # load 0x16689aac from memory into f3
fmsub.s f30, f23, f26, f3, dyn # perform operation
fmsub.s f30, f23, f26, f3, rdn # perform operation
fmsub.s f30, f23, f26, f3, rmm # perform operation
fmsub.s f30, f23, f26, f3, rne # perform operation
fmsub.s f30, f23, f26, f3, rtz # perform operation
fmsub.s f30, f23, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f23, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x09a71f7e # load x3 with value 0x09a71f7e
sw x3, 0(x2) # store 0x09a71f7e in memory
flw f12, 0(x2) # load 0x09a71f7e from memory into f12
fmsub.s f24, f6, f1, f12, dyn # perform operation
fmsub.s f24, f6, f1, f12, rdn # perform operation
fmsub.s f24, f6, f1, f12, rmm # perform operation
fmsub.s f24, f6, f1, f12, rne # perform operation
fmsub.s f24, f6, f1, f12, rtz # perform operation
fmsub.s f24, f6, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xd11074e1 # load x3 with value 0xd11074e1
sw x3, 0(x2) # store 0xd11074e1 in memory
flw f19, 0(x2) # load 0xd11074e1 from memory into f19
fmsub.s f11, f22, f3, f19, dyn # perform operation
fmsub.s f11, f22, f3, f19, rdn # perform operation
fmsub.s f11, f22, f3, f19, rmm # perform operation
fmsub.s f11, f22, f3, f19, rne # perform operation
fmsub.s f11, f22, f3, f19, rtz # perform operation
fmsub.s f11, f22, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x6c83e351 # load x3 with value 0x6c83e351
sw x3, 0(x2) # store 0x6c83e351 in memory
flw f16, 0(x2) # load 0x6c83e351 from memory into f16
fmsub.s f26, f2, f29, f16, dyn # perform operation
fmsub.s f26, f2, f29, f16, rdn # perform operation
fmsub.s f26, f2, f29, f16, rmm # perform operation
fmsub.s f26, f2, f29, f16, rne # perform operation
fmsub.s f26, f2, f29, f16, rtz # perform operation
fmsub.s f26, f2, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xd112c598 # load x3 with value 0xd112c598
sw x3, 0(x2) # store 0xd112c598 in memory
flw f12, 0(x2) # load 0xd112c598 from memory into f12
fmsub.s f30, f21, f26, f12, dyn # perform operation
fmsub.s f30, f21, f26, f12, rdn # perform operation
fmsub.s f30, f21, f26, f12, rmm # perform operation
fmsub.s f30, f21, f26, f12, rne # perform operation
fmsub.s f30, f21, f26, f12, rtz # perform operation
fmsub.s f30, f21, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xb46630b3 # load x3 with value 0xb46630b3
sw x3, 0(x2) # store 0xb46630b3 in memory
flw f10, 0(x2) # load 0xb46630b3 from memory into f10
fmsub.s f11, f12, f9, f10, dyn # perform operation
fmsub.s f11, f12, f9, f10, rdn # perform operation
fmsub.s f11, f12, f9, f10, rmm # perform operation
fmsub.s f11, f12, f9, f10, rne # perform operation
fmsub.s f11, f12, f9, f10, rtz # perform operation
fmsub.s f11, f12, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x4f2748af # load x3 with value 0x4f2748af
sw x3, 0(x2) # store 0x4f2748af in memory
flw f8, 0(x2) # load 0x4f2748af from memory into f8
fmsub.s f31, f13, f27, f8, dyn # perform operation
fmsub.s f31, f13, f27, f8, rdn # perform operation
fmsub.s f31, f13, f27, f8, rmm # perform operation
fmsub.s f31, f13, f27, f8, rne # perform operation
fmsub.s f31, f13, f27, f8, rtz # perform operation
fmsub.s f31, f13, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f13, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xcd85d9a6 # load x3 with value 0xcd85d9a6
sw x3, 0(x2) # store 0xcd85d9a6 in memory
flw f17, 0(x2) # load 0xcd85d9a6 from memory into f17
fmsub.s f1, f7, f31, f17, dyn # perform operation
fmsub.s f1, f7, f31, f17, rdn # perform operation
fmsub.s f1, f7, f31, f17, rmm # perform operation
fmsub.s f1, f7, f31, f17, rne # perform operation
fmsub.s f1, f7, f31, f17, rtz # perform operation
fmsub.s f1, f7, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x1d925745 # load x3 with value 0x1d925745
sw x3, 0(x2) # store 0x1d925745 in memory
flw f20, 0(x2) # load 0x1d925745 from memory into f20
fmsub.s f19, f25, f22, f20, dyn # perform operation
fmsub.s f19, f25, f22, f20, rdn # perform operation
fmsub.s f19, f25, f22, f20, rmm # perform operation
fmsub.s f19, f25, f22, f20, rne # perform operation
fmsub.s f19, f25, f22, f20, rtz # perform operation
fmsub.s f19, f25, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x84cf0154 # load x3 with value 0x84cf0154
sw x3, 0(x2) # store 0x84cf0154 in memory
flw f3, 0(x2) # load 0x84cf0154 from memory into f3
fmsub.s f29, f12, f31, f3, dyn # perform operation
fmsub.s f29, f12, f31, f3, rdn # perform operation
fmsub.s f29, f12, f31, f3, rmm # perform operation
fmsub.s f29, f12, f31, f3, rne # perform operation
fmsub.s f29, f12, f31, f3, rtz # perform operation
fmsub.s f29, f12, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f12, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xc46278d7 # load x3 with value 0xc46278d7
sw x3, 0(x2) # store 0xc46278d7 in memory
flw f18, 0(x2) # load 0xc46278d7 from memory into f18
fmsub.s f10, f20, f17, f18, dyn # perform operation
fmsub.s f10, f20, f17, f18, rdn # perform operation
fmsub.s f10, f20, f17, f18, rmm # perform operation
fmsub.s f10, f20, f17, f18, rne # perform operation
fmsub.s f10, f20, f17, f18, rtz # perform operation
fmsub.s f10, f20, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x54f394b6 # load x3 with value 0x54f394b6
sw x3, 0(x2) # store 0x54f394b6 in memory
flw f14, 0(x2) # load 0x54f394b6 from memory into f14
fmsub.s f6, f30, f26, f14, dyn # perform operation
fmsub.s f6, f30, f26, f14, rdn # perform operation
fmsub.s f6, f30, f26, f14, rmm # perform operation
fmsub.s f6, f30, f26, f14, rne # perform operation
fmsub.s f6, f30, f26, f14, rtz # perform operation
fmsub.s f6, f30, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x9c864e62 # load x3 with value 0x9c864e62
sw x3, 0(x2) # store 0x9c864e62 in memory
flw f18, 0(x2) # load 0x9c864e62 from memory into f18
fmsub.s f10, f11, f25, f18, dyn # perform operation
fmsub.s f10, f11, f25, f18, rdn # perform operation
fmsub.s f10, f11, f25, f18, rmm # perform operation
fmsub.s f10, f11, f25, f18, rne # perform operation
fmsub.s f10, f11, f25, f18, rtz # perform operation
fmsub.s f10, f11, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xd4abf197 # load x3 with value 0xd4abf197
sw x3, 0(x2) # store 0xd4abf197 in memory
flw f21, 0(x2) # load 0xd4abf197 from memory into f21
fmsub.s f8, f6, f18, f21, dyn # perform operation
fmsub.s f8, f6, f18, f21, rdn # perform operation
fmsub.s f8, f6, f18, f21, rmm # perform operation
fmsub.s f8, f6, f18, f21, rne # perform operation
fmsub.s f8, f6, f18, f21, rtz # perform operation
fmsub.s f8, f6, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f6, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x697a44b3 # load x3 with value 0x697a44b3
sw x3, 0(x2) # store 0x697a44b3 in memory
flw f22, 0(x2) # load 0x697a44b3 from memory into f22
fmsub.s f1, f14, f26, f22, dyn # perform operation
fmsub.s f1, f14, f26, f22, rdn # perform operation
fmsub.s f1, f14, f26, f22, rmm # perform operation
fmsub.s f1, f14, f26, f22, rne # perform operation
fmsub.s f1, f14, f26, f22, rtz # perform operation
fmsub.s f1, f14, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f14, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f14, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f14, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f14, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f14, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0xeff127f9 # load x3 with value 0xeff127f9
sw x3, 0(x2) # store 0xeff127f9 in memory
flw f7, 0(x2) # load 0xeff127f9 from memory into f7
fmsub.s f9, f31, f15, f7, dyn # perform operation
fmsub.s f9, f31, f15, f7, rdn # perform operation
fmsub.s f9, f31, f15, f7, rmm # perform operation
fmsub.s f9, f31, f15, f7, rne # perform operation
fmsub.s f9, f31, f15, f7, rtz # perform operation
fmsub.s f9, f31, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x88c12834 # load x3 with value 0x88c12834
sw x3, 0(x2) # store 0x88c12834 in memory
flw f21, 0(x2) # load 0x88c12834 from memory into f21
fmsub.s f16, f18, f20, f21, dyn # perform operation
fmsub.s f16, f18, f20, f21, rdn # perform operation
fmsub.s f16, f18, f20, f21, rmm # perform operation
fmsub.s f16, f18, f20, f21, rne # perform operation
fmsub.s f16, f18, f20, f21, rtz # perform operation
fmsub.s f16, f18, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xdcbd912d # load x3 with value 0xdcbd912d
sw x3, 0(x2) # store 0xdcbd912d in memory
flw f29, 0(x2) # load 0xdcbd912d from memory into f29
fmsub.s f21, f25, f16, f29, dyn # perform operation
fmsub.s f21, f25, f16, f29, rdn # perform operation
fmsub.s f21, f25, f16, f29, rmm # perform operation
fmsub.s f21, f25, f16, f29, rne # perform operation
fmsub.s f21, f25, f16, f29, rtz # perform operation
fmsub.s f21, f25, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x740b2f0e # load x3 with value 0x740b2f0e
sw x3, 0(x2) # store 0x740b2f0e in memory
flw f13, 0(x2) # load 0x740b2f0e from memory into f13
fmsub.s f21, f27, f24, f13, dyn # perform operation
fmsub.s f21, f27, f24, f13, rdn # perform operation
fmsub.s f21, f27, f24, f13, rmm # perform operation
fmsub.s f21, f27, f24, f13, rne # perform operation
fmsub.s f21, f27, f24, f13, rtz # perform operation
fmsub.s f21, f27, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f27, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0xb543c994 # load x3 with value 0xb543c994
sw x3, 0(x2) # store 0xb543c994 in memory
flw f24, 0(x2) # load 0xb543c994 from memory into f24
fmsub.s f7, f22, f18, f24, dyn # perform operation
fmsub.s f7, f22, f18, f24, rdn # perform operation
fmsub.s f7, f22, f18, f24, rmm # perform operation
fmsub.s f7, f22, f18, f24, rne # perform operation
fmsub.s f7, f22, f18, f24, rtz # perform operation
fmsub.s f7, f22, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x65377141 # load x3 with value 0x65377141
sw x3, 0(x2) # store 0x65377141 in memory
flw f20, 0(x2) # load 0x65377141 from memory into f20
fmsub.s f22, f10, f21, f20, dyn # perform operation
fmsub.s f22, f10, f21, f20, rdn # perform operation
fmsub.s f22, f10, f21, f20, rmm # perform operation
fmsub.s f22, f10, f21, f20, rne # perform operation
fmsub.s f22, f10, f21, f20, rtz # perform operation
fmsub.s f22, f10, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x95ddb719 # load x3 with value 0x95ddb719
sw x3, 0(x2) # store 0x95ddb719 in memory
flw f21, 0(x2) # load 0x95ddb719 from memory into f21
fmsub.s f15, f27, f1, f21, dyn # perform operation
fmsub.s f15, f27, f1, f21, rdn # perform operation
fmsub.s f15, f27, f1, f21, rmm # perform operation
fmsub.s f15, f27, f1, f21, rne # perform operation
fmsub.s f15, f27, f1, f21, rtz # perform operation
fmsub.s f15, f27, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x8c31d275 # load x3 with value 0x8c31d275
sw x3, 0(x2) # store 0x8c31d275 in memory
flw f5, 0(x2) # load 0x8c31d275 from memory into f5
fmsub.s f22, f16, f24, f5, dyn # perform operation
fmsub.s f22, f16, f24, f5, rdn # perform operation
fmsub.s f22, f16, f24, f5, rmm # perform operation
fmsub.s f22, f16, f24, f5, rne # perform operation
fmsub.s f22, f16, f24, f5, rtz # perform operation
fmsub.s f22, f16, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x3a57bf43 # load x3 with value 0x3a57bf43
sw x3, 0(x2) # store 0x3a57bf43 in memory
flw f21, 0(x2) # load 0x3a57bf43 from memory into f21
fmsub.s f18, f31, f10, f21, dyn # perform operation
fmsub.s f18, f31, f10, f21, rdn # perform operation
fmsub.s f18, f31, f10, f21, rmm # perform operation
fmsub.s f18, f31, f10, f21, rne # perform operation
fmsub.s f18, f31, f10, f21, rtz # perform operation
fmsub.s f18, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xd6d88a66 # load x3 with value 0xd6d88a66
sw x3, 0(x2) # store 0xd6d88a66 in memory
flw f7, 0(x2) # load 0xd6d88a66 from memory into f7
fmsub.s f26, f20, f31, f7, dyn # perform operation
fmsub.s f26, f20, f31, f7, rdn # perform operation
fmsub.s f26, f20, f31, f7, rmm # perform operation
fmsub.s f26, f20, f31, f7, rne # perform operation
fmsub.s f26, f20, f31, f7, rtz # perform operation
fmsub.s f26, f20, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x46912e53 # load x3 with value 0x46912e53
sw x3, 0(x2) # store 0x46912e53 in memory
flw f31, 0(x2) # load 0x46912e53 from memory into f31
fmsub.s f7, f20, f16, f31, dyn # perform operation
fmsub.s f7, f20, f16, f31, rdn # perform operation
fmsub.s f7, f20, f16, f31, rmm # perform operation
fmsub.s f7, f20, f16, f31, rne # perform operation
fmsub.s f7, f20, f16, f31, rtz # perform operation
fmsub.s f7, f20, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x8483e87b # load x3 with value 0x8483e87b
sw x3, 0(x2) # store 0x8483e87b in memory
flw f3, 0(x2) # load 0x8483e87b from memory into f3
fmsub.s f11, f13, f19, f3, dyn # perform operation
fmsub.s f11, f13, f19, f3, rdn # perform operation
fmsub.s f11, f13, f19, f3, rmm # perform operation
fmsub.s f11, f13, f19, f3, rne # perform operation
fmsub.s f11, f13, f19, f3, rtz # perform operation
fmsub.s f11, f13, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xafc08a04 # load x3 with value 0xafc08a04
sw x3, 0(x2) # store 0xafc08a04 in memory
flw f22, 0(x2) # load 0xafc08a04 from memory into f22
fmsub.s f12, f19, f31, f22, dyn # perform operation
fmsub.s f12, f19, f31, f22, rdn # perform operation
fmsub.s f12, f19, f31, f22, rmm # perform operation
fmsub.s f12, f19, f31, f22, rne # perform operation
fmsub.s f12, f19, f31, f22, rtz # perform operation
fmsub.s f12, f19, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x244db0c1 # load x3 with value 0x244db0c1
sw x3, 0(x2) # store 0x244db0c1 in memory
flw f8, 0(x2) # load 0x244db0c1 from memory into f8
fmsub.s f10, f11, f28, f8, dyn # perform operation
fmsub.s f10, f11, f28, f8, rdn # perform operation
fmsub.s f10, f11, f28, f8, rmm # perform operation
fmsub.s f10, f11, f28, f8, rne # perform operation
fmsub.s f10, f11, f28, f8, rtz # perform operation
fmsub.s f10, f11, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x78651137 # load x3 with value 0x78651137
sw x3, 0(x2) # store 0x78651137 in memory
flw f8, 0(x2) # load 0x78651137 from memory into f8
fmsub.s f23, f21, f30, f8, dyn # perform operation
fmsub.s f23, f21, f30, f8, rdn # perform operation
fmsub.s f23, f21, f30, f8, rmm # perform operation
fmsub.s f23, f21, f30, f8, rne # perform operation
fmsub.s f23, f21, f30, f8, rtz # perform operation
fmsub.s f23, f21, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xf5be5e83 # load x3 with value 0xf5be5e83
sw x3, 0(x2) # store 0xf5be5e83 in memory
flw f19, 0(x2) # load 0xf5be5e83 from memory into f19
fmsub.s f13, f20, f18, f19, dyn # perform operation
fmsub.s f13, f20, f18, f19, rdn # perform operation
fmsub.s f13, f20, f18, f19, rmm # perform operation
fmsub.s f13, f20, f18, f19, rne # perform operation
fmsub.s f13, f20, f18, f19, rtz # perform operation
fmsub.s f13, f20, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xf60860d2 # load x3 with value 0xf60860d2
sw x3, 0(x2) # store 0xf60860d2 in memory
flw f24, 0(x2) # load 0xf60860d2 from memory into f24
fmsub.s f12, f5, f8, f24, dyn # perform operation
fmsub.s f12, f5, f8, f24, rdn # perform operation
fmsub.s f12, f5, f8, f24, rmm # perform operation
fmsub.s f12, f5, f8, f24, rne # perform operation
fmsub.s f12, f5, f8, f24, rtz # perform operation
fmsub.s f12, f5, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x9184bb35 # load x3 with value 0x9184bb35
sw x3, 0(x2) # store 0x9184bb35 in memory
flw f31, 0(x2) # load 0x9184bb35 from memory into f31
fmsub.s f11, f20, f2, f31, dyn # perform operation
fmsub.s f11, f20, f2, f31, rdn # perform operation
fmsub.s f11, f20, f2, f31, rmm # perform operation
fmsub.s f11, f20, f2, f31, rne # perform operation
fmsub.s f11, f20, f2, f31, rtz # perform operation
fmsub.s f11, f20, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f20, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xf3af54a6 # load x3 with value 0xf3af54a6
sw x3, 0(x2) # store 0xf3af54a6 in memory
flw f24, 0(x2) # load 0xf3af54a6 from memory into f24
fmsub.s f3, f31, f6, f24, dyn # perform operation
fmsub.s f3, f31, f6, f24, rdn # perform operation
fmsub.s f3, f31, f6, f24, rmm # perform operation
fmsub.s f3, f31, f6, f24, rne # perform operation
fmsub.s f3, f31, f6, f24, rtz # perform operation
fmsub.s f3, f31, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x034020f8 # load x3 with value 0x034020f8
sw x3, 0(x2) # store 0x034020f8 in memory
flw f31, 0(x2) # load 0x034020f8 from memory into f31
fmsub.s f26, f22, f16, f31, dyn # perform operation
fmsub.s f26, f22, f16, f31, rdn # perform operation
fmsub.s f26, f22, f16, f31, rmm # perform operation
fmsub.s f26, f22, f16, f31, rne # perform operation
fmsub.s f26, f22, f16, f31, rtz # perform operation
fmsub.s f26, f22, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x6f300403 # load x3 with value 0x6f300403
sw x3, 0(x2) # store 0x6f300403 in memory
flw f18, 0(x2) # load 0x6f300403 from memory into f18
fmsub.s f5, f6, f7, f18, dyn # perform operation
fmsub.s f5, f6, f7, f18, rdn # perform operation
fmsub.s f5, f6, f7, f18, rmm # perform operation
fmsub.s f5, f6, f7, f18, rne # perform operation
fmsub.s f5, f6, f7, f18, rtz # perform operation
fmsub.s f5, f6, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xd8266904 # load x3 with value 0xd8266904
sw x3, 0(x2) # store 0xd8266904 in memory
flw f21, 0(x2) # load 0xd8266904 from memory into f21
fmsub.s f27, f8, f23, f21, dyn # perform operation
fmsub.s f27, f8, f23, f21, rdn # perform operation
fmsub.s f27, f8, f23, f21, rmm # perform operation
fmsub.s f27, f8, f23, f21, rne # perform operation
fmsub.s f27, f8, f23, f21, rtz # perform operation
fmsub.s f27, f8, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f8, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xad0bfbd0 # load x3 with value 0xad0bfbd0
sw x3, 0(x2) # store 0xad0bfbd0 in memory
flw f12, 0(x2) # load 0xad0bfbd0 from memory into f12
fmsub.s f28, f29, f23, f12, dyn # perform operation
fmsub.s f28, f29, f23, f12, rdn # perform operation
fmsub.s f28, f29, f23, f12, rmm # perform operation
fmsub.s f28, f29, f23, f12, rne # perform operation
fmsub.s f28, f29, f23, f12, rtz # perform operation
fmsub.s f28, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x7a17f462 # load x3 with value 0x7a17f462
sw x3, 0(x2) # store 0x7a17f462 in memory
flw f6, 0(x2) # load 0x7a17f462 from memory into f6
fmsub.s f5, f8, f19, f6, dyn # perform operation
fmsub.s f5, f8, f19, f6, rdn # perform operation
fmsub.s f5, f8, f19, f6, rmm # perform operation
fmsub.s f5, f8, f19, f6, rne # perform operation
fmsub.s f5, f8, f19, f6, rtz # perform operation
fmsub.s f5, f8, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0xb123a5d0 # load x3 with value 0xb123a5d0
sw x3, 0(x2) # store 0xb123a5d0 in memory
flw f2, 0(x2) # load 0xb123a5d0 from memory into f2
fmsub.s f20, f6, f24, f2, dyn # perform operation
fmsub.s f20, f6, f24, f2, rdn # perform operation
fmsub.s f20, f6, f24, f2, rmm # perform operation
fmsub.s f20, f6, f24, f2, rne # perform operation
fmsub.s f20, f6, f24, f2, rtz # perform operation
fmsub.s f20, f6, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x19a3b7cd # load x3 with value 0x19a3b7cd
sw x3, 0(x2) # store 0x19a3b7cd in memory
flw f8, 0(x2) # load 0x19a3b7cd from memory into f8
fmsub.s f31, f11, f20, f8, dyn # perform operation
fmsub.s f31, f11, f20, f8, rdn # perform operation
fmsub.s f31, f11, f20, f8, rmm # perform operation
fmsub.s f31, f11, f20, f8, rne # perform operation
fmsub.s f31, f11, f20, f8, rtz # perform operation
fmsub.s f31, f11, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xdb62c046 # load x3 with value 0xdb62c046
sw x3, 0(x2) # store 0xdb62c046 in memory
flw f30, 0(x2) # load 0xdb62c046 from memory into f30
fmsub.s f5, f18, f24, f30, dyn # perform operation
fmsub.s f5, f18, f24, f30, rdn # perform operation
fmsub.s f5, f18, f24, f30, rmm # perform operation
fmsub.s f5, f18, f24, f30, rne # perform operation
fmsub.s f5, f18, f24, f30, rtz # perform operation
fmsub.s f5, f18, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x17090417 # load x3 with value 0x17090417
sw x3, 0(x2) # store 0x17090417 in memory
flw f28, 0(x2) # load 0x17090417 from memory into f28
fmsub.s f5, f19, f30, f28, dyn # perform operation
fmsub.s f5, f19, f30, f28, rdn # perform operation
fmsub.s f5, f19, f30, f28, rmm # perform operation
fmsub.s f5, f19, f30, f28, rne # perform operation
fmsub.s f5, f19, f30, f28, rtz # perform operation
fmsub.s f5, f19, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x769a0a8b # load x3 with value 0x769a0a8b
sw x3, 0(x2) # store 0x769a0a8b in memory
flw f19, 0(x2) # load 0x769a0a8b from memory into f19
fmsub.s f25, f28, f9, f19, dyn # perform operation
fmsub.s f25, f28, f9, f19, rdn # perform operation
fmsub.s f25, f28, f9, f19, rmm # perform operation
fmsub.s f25, f28, f9, f19, rne # perform operation
fmsub.s f25, f28, f9, f19, rtz # perform operation
fmsub.s f25, f28, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f28, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f28, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f28, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f28, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f28, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xe9835fe1 # load x3 with value 0xe9835fe1
sw x3, 0(x2) # store 0xe9835fe1 in memory
flw f22, 0(x2) # load 0xe9835fe1 from memory into f22
fmsub.s f10, f26, f3, f22, dyn # perform operation
fmsub.s f10, f26, f3, f22, rdn # perform operation
fmsub.s f10, f26, f3, f22, rmm # perform operation
fmsub.s f10, f26, f3, f22, rne # perform operation
fmsub.s f10, f26, f3, f22, rtz # perform operation
fmsub.s f10, f26, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x97cf5ff5 # load x3 with value 0x97cf5ff5
sw x3, 0(x2) # store 0x97cf5ff5 in memory
flw f6, 0(x2) # load 0x97cf5ff5 from memory into f6
fmsub.s f9, f19, f11, f6, dyn # perform operation
fmsub.s f9, f19, f11, f6, rdn # perform operation
fmsub.s f9, f19, f11, f6, rmm # perform operation
fmsub.s f9, f19, f11, f6, rne # perform operation
fmsub.s f9, f19, f11, f6, rtz # perform operation
fmsub.s f9, f19, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xcb208980 # load x3 with value 0xcb208980
sw x3, 0(x2) # store 0xcb208980 in memory
flw f2, 0(x2) # load 0xcb208980 from memory into f2
fmsub.s f3, f23, f20, f2, dyn # perform operation
fmsub.s f3, f23, f20, f2, rdn # perform operation
fmsub.s f3, f23, f20, f2, rmm # perform operation
fmsub.s f3, f23, f20, f2, rne # perform operation
fmsub.s f3, f23, f20, f2, rtz # perform operation
fmsub.s f3, f23, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x1135e93f # load x3 with value 0x1135e93f
sw x3, 0(x2) # store 0x1135e93f in memory
flw f1, 0(x2) # load 0x1135e93f from memory into f1
fmsub.s f20, f30, f8, f1, dyn # perform operation
fmsub.s f20, f30, f8, f1, rdn # perform operation
fmsub.s f20, f30, f8, f1, rmm # perform operation
fmsub.s f20, f30, f8, f1, rne # perform operation
fmsub.s f20, f30, f8, f1, rtz # perform operation
fmsub.s f20, f30, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x73923f41 # load x3 with value 0x73923f41
sw x3, 0(x2) # store 0x73923f41 in memory
flw f24, 0(x2) # load 0x73923f41 from memory into f24
fmsub.s f9, f22, f26, f24, dyn # perform operation
fmsub.s f9, f22, f26, f24, rdn # perform operation
fmsub.s f9, f22, f26, f24, rmm # perform operation
fmsub.s f9, f22, f26, f24, rne # perform operation
fmsub.s f9, f22, f26, f24, rtz # perform operation
fmsub.s f9, f22, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x4fa54fe6 # load x3 with value 0x4fa54fe6
sw x3, 0(x2) # store 0x4fa54fe6 in memory
flw f8, 0(x2) # load 0x4fa54fe6 from memory into f8
fmsub.s f5, f21, f15, f8, dyn # perform operation
fmsub.s f5, f21, f15, f8, rdn # perform operation
fmsub.s f5, f21, f15, f8, rmm # perform operation
fmsub.s f5, f21, f15, f8, rne # perform operation
fmsub.s f5, f21, f15, f8, rtz # perform operation
fmsub.s f5, f21, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x1c83f060 # load x3 with value 0x1c83f060
sw x3, 0(x2) # store 0x1c83f060 in memory
flw f10, 0(x2) # load 0x1c83f060 from memory into f10
fmsub.s f23, f7, f19, f10, dyn # perform operation
fmsub.s f23, f7, f19, f10, rdn # perform operation
fmsub.s f23, f7, f19, f10, rmm # perform operation
fmsub.s f23, f7, f19, f10, rne # perform operation
fmsub.s f23, f7, f19, f10, rtz # perform operation
fmsub.s f23, f7, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f7, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x52654a80 # load x3 with value 0x52654a80
sw x3, 0(x2) # store 0x52654a80 in memory
flw f18, 0(x2) # load 0x52654a80 from memory into f18
fmsub.s f1, f31, f29, f18, dyn # perform operation
fmsub.s f1, f31, f29, f18, rdn # perform operation
fmsub.s f1, f31, f29, f18, rmm # perform operation
fmsub.s f1, f31, f29, f18, rne # perform operation
fmsub.s f1, f31, f29, f18, rtz # perform operation
fmsub.s f1, f31, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f31, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xe9e8535d # load x3 with value 0xe9e8535d
sw x3, 0(x2) # store 0xe9e8535d in memory
flw f26, 0(x2) # load 0xe9e8535d from memory into f26
fmsub.s f14, f25, f16, f26, dyn # perform operation
fmsub.s f14, f25, f16, f26, rdn # perform operation
fmsub.s f14, f25, f16, f26, rmm # perform operation
fmsub.s f14, f25, f16, f26, rne # perform operation
fmsub.s f14, f25, f16, f26, rtz # perform operation
fmsub.s f14, f25, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xac5445c5 # load x3 with value 0xac5445c5
sw x3, 0(x2) # store 0xac5445c5 in memory
flw f29, 0(x2) # load 0xac5445c5 from memory into f29
fmsub.s f17, f1, f15, f29, dyn # perform operation
fmsub.s f17, f1, f15, f29, rdn # perform operation
fmsub.s f17, f1, f15, f29, rmm # perform operation
fmsub.s f17, f1, f15, f29, rne # perform operation
fmsub.s f17, f1, f15, f29, rtz # perform operation
fmsub.s f17, f1, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x71a07909 # load x3 with value 0x71a07909
sw x3, 0(x2) # store 0x71a07909 in memory
flw f27, 0(x2) # load 0x71a07909 from memory into f27
fmsub.s f30, f13, f25, f27, dyn # perform operation
fmsub.s f30, f13, f25, f27, rdn # perform operation
fmsub.s f30, f13, f25, f27, rmm # perform operation
fmsub.s f30, f13, f25, f27, rne # perform operation
fmsub.s f30, f13, f25, f27, rtz # perform operation
fmsub.s f30, f13, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xbd7d136d # load x3 with value 0xbd7d136d
sw x3, 0(x2) # store 0xbd7d136d in memory
flw f7, 0(x2) # load 0xbd7d136d from memory into f7
fmsub.s f25, f3, f17, f7, dyn # perform operation
fmsub.s f25, f3, f17, f7, rdn # perform operation
fmsub.s f25, f3, f17, f7, rmm # perform operation
fmsub.s f25, f3, f17, f7, rne # perform operation
fmsub.s f25, f3, f17, f7, rtz # perform operation
fmsub.s f25, f3, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xc6912821 # load x3 with value 0xc6912821
sw x3, 0(x2) # store 0xc6912821 in memory
flw f25, 0(x2) # load 0xc6912821 from memory into f25
fmsub.s f31, f13, f2, f25, dyn # perform operation
fmsub.s f31, f13, f2, f25, rdn # perform operation
fmsub.s f31, f13, f2, f25, rmm # perform operation
fmsub.s f31, f13, f2, f25, rne # perform operation
fmsub.s f31, f13, f2, f25, rtz # perform operation
fmsub.s f31, f13, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f13, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xdbf619c4 # load x3 with value 0xdbf619c4
sw x3, 0(x2) # store 0xdbf619c4 in memory
flw f2, 0(x2) # load 0xdbf619c4 from memory into f2
fmsub.s f21, f15, f11, f2, dyn # perform operation
fmsub.s f21, f15, f11, f2, rdn # perform operation
fmsub.s f21, f15, f11, f2, rmm # perform operation
fmsub.s f21, f15, f11, f2, rne # perform operation
fmsub.s f21, f15, f11, f2, rtz # perform operation
fmsub.s f21, f15, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x07a04007 # load x3 with value 0x07a04007
sw x3, 0(x2) # store 0x07a04007 in memory
flw f14, 0(x2) # load 0x07a04007 from memory into f14
fmsub.s f13, f20, f27, f14, dyn # perform operation
fmsub.s f13, f20, f27, f14, rdn # perform operation
fmsub.s f13, f20, f27, f14, rmm # perform operation
fmsub.s f13, f20, f27, f14, rne # perform operation
fmsub.s f13, f20, f27, f14, rtz # perform operation
fmsub.s f13, f20, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xb0889fd8 # load x3 with value 0xb0889fd8
sw x3, 0(x2) # store 0xb0889fd8 in memory
flw f27, 0(x2) # load 0xb0889fd8 from memory into f27
fmsub.s f25, f14, f22, f27, dyn # perform operation
fmsub.s f25, f14, f22, f27, rdn # perform operation
fmsub.s f25, f14, f22, f27, rmm # perform operation
fmsub.s f25, f14, f22, f27, rne # perform operation
fmsub.s f25, f14, f22, f27, rtz # perform operation
fmsub.s f25, f14, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f14, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f14, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f14, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f14, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f14, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x4707e0f5 # load x3 with value 0x4707e0f5
sw x3, 0(x2) # store 0x4707e0f5 in memory
flw f15, 0(x2) # load 0x4707e0f5 from memory into f15
fmsub.s f2, f10, f11, f15, dyn # perform operation
fmsub.s f2, f10, f11, f15, rdn # perform operation
fmsub.s f2, f10, f11, f15, rmm # perform operation
fmsub.s f2, f10, f11, f15, rne # perform operation
fmsub.s f2, f10, f11, f15, rtz # perform operation
fmsub.s f2, f10, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f10, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x539f1526 # load x3 with value 0x539f1526
sw x3, 0(x2) # store 0x539f1526 in memory
flw f22, 0(x2) # load 0x539f1526 from memory into f22
fmsub.s f30, f7, f27, f22, dyn # perform operation
fmsub.s f30, f7, f27, f22, rdn # perform operation
fmsub.s f30, f7, f27, f22, rmm # perform operation
fmsub.s f30, f7, f27, f22, rne # perform operation
fmsub.s f30, f7, f27, f22, rtz # perform operation
fmsub.s f30, f7, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x4a97b93f # load x3 with value 0x4a97b93f
sw x3, 0(x2) # store 0x4a97b93f in memory
flw f17, 0(x2) # load 0x4a97b93f from memory into f17
fmsub.s f31, f15, f21, f17, dyn # perform operation
fmsub.s f31, f15, f21, f17, rdn # perform operation
fmsub.s f31, f15, f21, f17, rmm # perform operation
fmsub.s f31, f15, f21, f17, rne # perform operation
fmsub.s f31, f15, f21, f17, rtz # perform operation
fmsub.s f31, f15, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xdce689a7 # load x3 with value 0xdce689a7
sw x3, 0(x2) # store 0xdce689a7 in memory
flw f12, 0(x2) # load 0xdce689a7 from memory into f12
fmsub.s f10, f9, f3, f12, dyn # perform operation
fmsub.s f10, f9, f3, f12, rdn # perform operation
fmsub.s f10, f9, f3, f12, rmm # perform operation
fmsub.s f10, f9, f3, f12, rne # perform operation
fmsub.s f10, f9, f3, f12, rtz # perform operation
fmsub.s f10, f9, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x528a1578 # load x3 with value 0x528a1578
sw x3, 0(x2) # store 0x528a1578 in memory
flw f28, 0(x2) # load 0x528a1578 from memory into f28
fmsub.s f9, f12, f15, f28, dyn # perform operation
fmsub.s f9, f12, f15, f28, rdn # perform operation
fmsub.s f9, f12, f15, f28, rmm # perform operation
fmsub.s f9, f12, f15, f28, rne # perform operation
fmsub.s f9, f12, f15, f28, rtz # perform operation
fmsub.s f9, f12, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xe1c17c5b # load x3 with value 0xe1c17c5b
sw x3, 0(x2) # store 0xe1c17c5b in memory
flw f8, 0(x2) # load 0xe1c17c5b from memory into f8
fmsub.s f23, f13, f20, f8, dyn # perform operation
fmsub.s f23, f13, f20, f8, rdn # perform operation
fmsub.s f23, f13, f20, f8, rmm # perform operation
fmsub.s f23, f13, f20, f8, rne # perform operation
fmsub.s f23, f13, f20, f8, rtz # perform operation
fmsub.s f23, f13, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xef8540ba # load x3 with value 0xef8540ba
sw x3, 0(x2) # store 0xef8540ba in memory
flw f3, 0(x2) # load 0xef8540ba from memory into f3
fmsub.s f28, f18, f17, f3, dyn # perform operation
fmsub.s f28, f18, f17, f3, rdn # perform operation
fmsub.s f28, f18, f17, f3, rmm # perform operation
fmsub.s f28, f18, f17, f3, rne # perform operation
fmsub.s f28, f18, f17, f3, rtz # perform operation
fmsub.s f28, f18, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xbdf2812b # load x3 with value 0xbdf2812b
sw x3, 0(x2) # store 0xbdf2812b in memory
flw f20, 0(x2) # load 0xbdf2812b from memory into f20
fmsub.s f8, f9, f27, f20, dyn # perform operation
fmsub.s f8, f9, f27, f20, rdn # perform operation
fmsub.s f8, f9, f27, f20, rmm # perform operation
fmsub.s f8, f9, f27, f20, rne # perform operation
fmsub.s f8, f9, f27, f20, rtz # perform operation
fmsub.s f8, f9, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f9, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x62799936 # load x3 with value 0x62799936
sw x3, 0(x2) # store 0x62799936 in memory
flw f24, 0(x2) # load 0x62799936 from memory into f24
fmsub.s f3, f2, f10, f24, dyn # perform operation
fmsub.s f3, f2, f10, f24, rdn # perform operation
fmsub.s f3, f2, f10, f24, rmm # perform operation
fmsub.s f3, f2, f10, f24, rne # perform operation
fmsub.s f3, f2, f10, f24, rtz # perform operation
fmsub.s f3, f2, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f2, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xc55523c4 # load x3 with value 0xc55523c4
sw x3, 0(x2) # store 0xc55523c4 in memory
flw f5, 0(x2) # load 0xc55523c4 from memory into f5
fmsub.s f12, f14, f18, f5, dyn # perform operation
fmsub.s f12, f14, f18, f5, rdn # perform operation
fmsub.s f12, f14, f18, f5, rmm # perform operation
fmsub.s f12, f14, f18, f5, rne # perform operation
fmsub.s f12, f14, f18, f5, rtz # perform operation
fmsub.s f12, f14, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xf9f1fe68 # load x3 with value 0xf9f1fe68
sw x3, 0(x2) # store 0xf9f1fe68 in memory
flw f24, 0(x2) # load 0xf9f1fe68 from memory into f24
fmsub.s f21, f15, f30, f24, dyn # perform operation
fmsub.s f21, f15, f30, f24, rdn # perform operation
fmsub.s f21, f15, f30, f24, rmm # perform operation
fmsub.s f21, f15, f30, f24, rne # perform operation
fmsub.s f21, f15, f30, f24, rtz # perform operation
fmsub.s f21, f15, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x20e3ed36 # load x3 with value 0x20e3ed36
sw x3, 0(x2) # store 0x20e3ed36 in memory
flw f29, 0(x2) # load 0x20e3ed36 from memory into f29
fmsub.s f10, f28, f21, f29, dyn # perform operation
fmsub.s f10, f28, f21, f29, rdn # perform operation
fmsub.s f10, f28, f21, f29, rmm # perform operation
fmsub.s f10, f28, f21, f29, rne # perform operation
fmsub.s f10, f28, f21, f29, rtz # perform operation
fmsub.s f10, f28, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xd7e03067 # load x3 with value 0xd7e03067
sw x3, 0(x2) # store 0xd7e03067 in memory
flw f24, 0(x2) # load 0xd7e03067 from memory into f24
fmsub.s f3, f1, f9, f24, dyn # perform operation
fmsub.s f3, f1, f9, f24, rdn # perform operation
fmsub.s f3, f1, f9, f24, rmm # perform operation
fmsub.s f3, f1, f9, f24, rne # perform operation
fmsub.s f3, f1, f9, f24, rtz # perform operation
fmsub.s f3, f1, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f1, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xca7d97b1 # load x3 with value 0xca7d97b1
sw x3, 0(x2) # store 0xca7d97b1 in memory
flw f5, 0(x2) # load 0xca7d97b1 from memory into f5
fmsub.s f7, f9, f22, f5, dyn # perform operation
fmsub.s f7, f9, f22, f5, rdn # perform operation
fmsub.s f7, f9, f22, f5, rmm # perform operation
fmsub.s f7, f9, f22, f5, rne # perform operation
fmsub.s f7, f9, f22, f5, rtz # perform operation
fmsub.s f7, f9, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x1ce9fd9c # load x3 with value 0x1ce9fd9c
sw x3, 0(x2) # store 0x1ce9fd9c in memory
flw f8, 0(x2) # load 0x1ce9fd9c from memory into f8
fmsub.s f25, f9, f14, f8, dyn # perform operation
fmsub.s f25, f9, f14, f8, rdn # perform operation
fmsub.s f25, f9, f14, f8, rmm # perform operation
fmsub.s f25, f9, f14, f8, rne # perform operation
fmsub.s f25, f9, f14, f8, rtz # perform operation
fmsub.s f25, f9, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xdfe977ae # load x3 with value 0xdfe977ae
sw x3, 0(x2) # store 0xdfe977ae in memory
flw f3, 0(x2) # load 0xdfe977ae from memory into f3
fmsub.s f29, f20, f12, f3, dyn # perform operation
fmsub.s f29, f20, f12, f3, rdn # perform operation
fmsub.s f29, f20, f12, f3, rmm # perform operation
fmsub.s f29, f20, f12, f3, rne # perform operation
fmsub.s f29, f20, f12, f3, rtz # perform operation
fmsub.s f29, f20, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f20, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xf0c20782 # load x3 with value 0xf0c20782
sw x3, 0(x2) # store 0xf0c20782 in memory
flw f6, 0(x2) # load 0xf0c20782 from memory into f6
fmsub.s f8, f13, f2, f6, dyn # perform operation
fmsub.s f8, f13, f2, f6, rdn # perform operation
fmsub.s f8, f13, f2, f6, rmm # perform operation
fmsub.s f8, f13, f2, f6, rne # perform operation
fmsub.s f8, f13, f2, f6, rtz # perform operation
fmsub.s f8, f13, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x2b9c077a # load x3 with value 0x2b9c077a
sw x3, 0(x2) # store 0x2b9c077a in memory
flw f26, 0(x2) # load 0x2b9c077a from memory into f26
fmsub.s f7, f30, f23, f26, dyn # perform operation
fmsub.s f7, f30, f23, f26, rdn # perform operation
fmsub.s f7, f30, f23, f26, rmm # perform operation
fmsub.s f7, f30, f23, f26, rne # perform operation
fmsub.s f7, f30, f23, f26, rtz # perform operation
fmsub.s f7, f30, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xabe0d6a6 # load x3 with value 0xabe0d6a6
sw x3, 0(x2) # store 0xabe0d6a6 in memory
flw f5, 0(x2) # load 0xabe0d6a6 from memory into f5
fmsub.s f6, f8, f17, f5, dyn # perform operation
fmsub.s f6, f8, f17, f5, rdn # perform operation
fmsub.s f6, f8, f17, f5, rmm # perform operation
fmsub.s f6, f8, f17, f5, rne # perform operation
fmsub.s f6, f8, f17, f5, rtz # perform operation
fmsub.s f6, f8, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xbaa4b500 # load x3 with value 0xbaa4b500
sw x3, 0(x2) # store 0xbaa4b500 in memory
flw f6, 0(x2) # load 0xbaa4b500 from memory into f6
fmsub.s f5, f19, f30, f6, dyn # perform operation
fmsub.s f5, f19, f30, f6, rdn # perform operation
fmsub.s f5, f19, f30, f6, rmm # perform operation
fmsub.s f5, f19, f30, f6, rne # perform operation
fmsub.s f5, f19, f30, f6, rtz # perform operation
fmsub.s f5, f19, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x11d4601e # load x3 with value 0x11d4601e
sw x3, 0(x2) # store 0x11d4601e in memory
flw f1, 0(x2) # load 0x11d4601e from memory into f1
fmsub.s f9, f12, f23, f1, dyn # perform operation
fmsub.s f9, f12, f23, f1, rdn # perform operation
fmsub.s f9, f12, f23, f1, rmm # perform operation
fmsub.s f9, f12, f23, f1, rne # perform operation
fmsub.s f9, f12, f23, f1, rtz # perform operation
fmsub.s f9, f12, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x4e9c2b36 # load x3 with value 0x4e9c2b36
sw x3, 0(x2) # store 0x4e9c2b36 in memory
flw f12, 0(x2) # load 0x4e9c2b36 from memory into f12
fmsub.s f20, f17, f22, f12, dyn # perform operation
fmsub.s f20, f17, f22, f12, rdn # perform operation
fmsub.s f20, f17, f22, f12, rmm # perform operation
fmsub.s f20, f17, f22, f12, rne # perform operation
fmsub.s f20, f17, f22, f12, rtz # perform operation
fmsub.s f20, f17, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xd7c5befa # load x3 with value 0xd7c5befa
sw x3, 0(x2) # store 0xd7c5befa in memory
flw f30, 0(x2) # load 0xd7c5befa from memory into f30
fmsub.s f15, f25, f1, f30, dyn # perform operation
fmsub.s f15, f25, f1, f30, rdn # perform operation
fmsub.s f15, f25, f1, f30, rmm # perform operation
fmsub.s f15, f25, f1, f30, rne # perform operation
fmsub.s f15, f25, f1, f30, rtz # perform operation
fmsub.s f15, f25, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0xd10c51b0 # load x3 with value 0xd10c51b0
sw x3, 0(x2) # store 0xd10c51b0 in memory
flw f6, 0(x2) # load 0xd10c51b0 from memory into f6
fmsub.s f8, f5, f16, f6, dyn # perform operation
fmsub.s f8, f5, f16, f6, rdn # perform operation
fmsub.s f8, f5, f16, f6, rmm # perform operation
fmsub.s f8, f5, f16, f6, rne # perform operation
fmsub.s f8, f5, f16, f6, rtz # perform operation
fmsub.s f8, f5, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xfb205818 # load x3 with value 0xfb205818
sw x3, 0(x2) # store 0xfb205818 in memory
flw f23, 0(x2) # load 0xfb205818 from memory into f23
fmsub.s f2, f15, f30, f23, dyn # perform operation
fmsub.s f2, f15, f30, f23, rdn # perform operation
fmsub.s f2, f15, f30, f23, rmm # perform operation
fmsub.s f2, f15, f30, f23, rne # perform operation
fmsub.s f2, f15, f30, f23, rtz # perform operation
fmsub.s f2, f15, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x1e2e942a # load x3 with value 0x1e2e942a
sw x3, 0(x2) # store 0x1e2e942a in memory
flw f2, 0(x2) # load 0x1e2e942a from memory into f2
fmsub.s f11, f20, f1, f2, dyn # perform operation
fmsub.s f11, f20, f1, f2, rdn # perform operation
fmsub.s f11, f20, f1, f2, rmm # perform operation
fmsub.s f11, f20, f1, f2, rne # perform operation
fmsub.s f11, f20, f1, f2, rtz # perform operation
fmsub.s f11, f20, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f20, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x6e4f3720 # load x3 with value 0x6e4f3720
sw x3, 0(x2) # store 0x6e4f3720 in memory
flw f5, 0(x2) # load 0x6e4f3720 from memory into f5
fmsub.s f22, f7, f17, f5, dyn # perform operation
fmsub.s f22, f7, f17, f5, rdn # perform operation
fmsub.s f22, f7, f17, f5, rmm # perform operation
fmsub.s f22, f7, f17, f5, rne # perform operation
fmsub.s f22, f7, f17, f5, rtz # perform operation
fmsub.s f22, f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xa87e7056 # load x3 with value 0xa87e7056
sw x3, 0(x2) # store 0xa87e7056 in memory
flw f8, 0(x2) # load 0xa87e7056 from memory into f8
fmsub.s f25, f31, f29, f8, dyn # perform operation
fmsub.s f25, f31, f29, f8, rdn # perform operation
fmsub.s f25, f31, f29, f8, rmm # perform operation
fmsub.s f25, f31, f29, f8, rne # perform operation
fmsub.s f25, f31, f29, f8, rtz # perform operation
fmsub.s f25, f31, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f31, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x2bed0e1d # load x3 with value 0x2bed0e1d
sw x3, 0(x2) # store 0x2bed0e1d in memory
flw f11, 0(x2) # load 0x2bed0e1d from memory into f11
fmsub.s f22, f8, f21, f11, dyn # perform operation
fmsub.s f22, f8, f21, f11, rdn # perform operation
fmsub.s f22, f8, f21, f11, rmm # perform operation
fmsub.s f22, f8, f21, f11, rne # perform operation
fmsub.s f22, f8, f21, f11, rtz # perform operation
fmsub.s f22, f8, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x9cb770a7 # load x3 with value 0x9cb770a7
sw x3, 0(x2) # store 0x9cb770a7 in memory
flw f12, 0(x2) # load 0x9cb770a7 from memory into f12
fmsub.s f24, f8, f3, f12, dyn # perform operation
fmsub.s f24, f8, f3, f12, rdn # perform operation
fmsub.s f24, f8, f3, f12, rmm # perform operation
fmsub.s f24, f8, f3, f12, rne # perform operation
fmsub.s f24, f8, f3, f12, rtz # perform operation
fmsub.s f24, f8, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x941c3ca5 # load x3 with value 0x941c3ca5
sw x3, 0(x2) # store 0x941c3ca5 in memory
flw f16, 0(x2) # load 0x941c3ca5 from memory into f16
fmsub.s f24, f11, f21, f16, dyn # perform operation
fmsub.s f24, f11, f21, f16, rdn # perform operation
fmsub.s f24, f11, f21, f16, rmm # perform operation
fmsub.s f24, f11, f21, f16, rne # perform operation
fmsub.s f24, f11, f21, f16, rtz # perform operation
fmsub.s f24, f11, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x6a09244c # load x3 with value 0x6a09244c
sw x3, 0(x2) # store 0x6a09244c in memory
flw f3, 0(x2) # load 0x6a09244c from memory into f3
fmsub.s f12, f9, f8, f3, dyn # perform operation
fmsub.s f12, f9, f8, f3, rdn # perform operation
fmsub.s f12, f9, f8, f3, rmm # perform operation
fmsub.s f12, f9, f8, f3, rne # perform operation
fmsub.s f12, f9, f8, f3, rtz # perform operation
fmsub.s f12, f9, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xf43b0672 # load x3 with value 0xf43b0672
sw x3, 0(x2) # store 0xf43b0672 in memory
flw f24, 0(x2) # load 0xf43b0672 from memory into f24
fmsub.s f6, f12, f28, f24, dyn # perform operation
fmsub.s f6, f12, f28, f24, rdn # perform operation
fmsub.s f6, f12, f28, f24, rmm # perform operation
fmsub.s f6, f12, f28, f24, rne # perform operation
fmsub.s f6, f12, f28, f24, rtz # perform operation
fmsub.s f6, f12, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f12, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f12, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f12, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f12, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f12, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x1c4adf5a # load x3 with value 0x1c4adf5a
sw x3, 0(x2) # store 0x1c4adf5a in memory
flw f9, 0(x2) # load 0x1c4adf5a from memory into f9
fmsub.s f21, f26, f17, f9, dyn # perform operation
fmsub.s f21, f26, f17, f9, rdn # perform operation
fmsub.s f21, f26, f17, f9, rmm # perform operation
fmsub.s f21, f26, f17, f9, rne # perform operation
fmsub.s f21, f26, f17, f9, rtz # perform operation
fmsub.s f21, f26, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0xf1ff4bed # load x3 with value 0xf1ff4bed
sw x3, 0(x2) # store 0xf1ff4bed in memory
flw f13, 0(x2) # load 0xf1ff4bed from memory into f13
fmsub.s f3, f17, f23, f13, dyn # perform operation
fmsub.s f3, f17, f23, f13, rdn # perform operation
fmsub.s f3, f17, f23, f13, rmm # perform operation
fmsub.s f3, f17, f23, f13, rne # perform operation
fmsub.s f3, f17, f23, f13, rtz # perform operation
fmsub.s f3, f17, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f17, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f17, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f17, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f17, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f17, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x1a6905d1 # load x3 with value 0x1a6905d1
sw x3, 0(x2) # store 0x1a6905d1 in memory
flw f7, 0(x2) # load 0x1a6905d1 from memory into f7
fmsub.s f17, f3, f6, f7, dyn # perform operation
fmsub.s f17, f3, f6, f7, rdn # perform operation
fmsub.s f17, f3, f6, f7, rmm # perform operation
fmsub.s f17, f3, f6, f7, rne # perform operation
fmsub.s f17, f3, f6, f7, rtz # perform operation
fmsub.s f17, f3, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x25ac4a66 # load x3 with value 0x25ac4a66
sw x3, 0(x2) # store 0x25ac4a66 in memory
flw f26, 0(x2) # load 0x25ac4a66 from memory into f26
fmsub.s f21, f31, f27, f26, dyn # perform operation
fmsub.s f21, f31, f27, f26, rdn # perform operation
fmsub.s f21, f31, f27, f26, rmm # perform operation
fmsub.s f21, f31, f27, f26, rne # perform operation
fmsub.s f21, f31, f27, f26, rtz # perform operation
fmsub.s f21, f31, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xe1b96502 # load x3 with value 0xe1b96502
sw x3, 0(x2) # store 0xe1b96502 in memory
flw f28, 0(x2) # load 0xe1b96502 from memory into f28
fmsub.s f12, f14, f7, f28, dyn # perform operation
fmsub.s f12, f14, f7, f28, rdn # perform operation
fmsub.s f12, f14, f7, f28, rmm # perform operation
fmsub.s f12, f14, f7, f28, rne # perform operation
fmsub.s f12, f14, f7, f28, rtz # perform operation
fmsub.s f12, f14, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xa2b0457a # load x3 with value 0xa2b0457a
sw x3, 0(x2) # store 0xa2b0457a in memory
flw f28, 0(x2) # load 0xa2b0457a from memory into f28
fmsub.s f10, f3, f7, f28, dyn # perform operation
fmsub.s f10, f3, f7, f28, rdn # perform operation
fmsub.s f10, f3, f7, f28, rmm # perform operation
fmsub.s f10, f3, f7, f28, rne # perform operation
fmsub.s f10, f3, f7, f28, rtz # perform operation
fmsub.s f10, f3, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f3, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f3, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f3, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f3, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f3, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x7f98b040 # load x3 with value 0x7f98b040
sw x3, 0(x2) # store 0x7f98b040 in memory
flw f15, 0(x2) # load 0x7f98b040 from memory into f15
fmsub.s f9, f7, f11, f15, dyn # perform operation
fmsub.s f9, f7, f11, f15, rdn # perform operation
fmsub.s f9, f7, f11, f15, rmm # perform operation
fmsub.s f9, f7, f11, f15, rne # perform operation
fmsub.s f9, f7, f11, f15, rtz # perform operation
fmsub.s f9, f7, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x9e1282de # load x3 with value 0x9e1282de
sw x3, 0(x2) # store 0x9e1282de in memory
flw f20, 0(x2) # load 0x9e1282de from memory into f20
fmsub.s f12, f28, f31, f20, dyn # perform operation
fmsub.s f12, f28, f31, f20, rdn # perform operation
fmsub.s f12, f28, f31, f20, rmm # perform operation
fmsub.s f12, f28, f31, f20, rne # perform operation
fmsub.s f12, f28, f31, f20, rtz # perform operation
fmsub.s f12, f28, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x584fb903 # load x3 with value 0x584fb903
sw x3, 0(x2) # store 0x584fb903 in memory
flw f11, 0(x2) # load 0x584fb903 from memory into f11
fmsub.s f14, f7, f28, f11, dyn # perform operation
fmsub.s f14, f7, f28, f11, rdn # perform operation
fmsub.s f14, f7, f28, f11, rmm # perform operation
fmsub.s f14, f7, f28, f11, rne # perform operation
fmsub.s f14, f7, f28, f11, rtz # perform operation
fmsub.s f14, f7, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x0a52e1d8 # load x3 with value 0x0a52e1d8
sw x3, 0(x2) # store 0x0a52e1d8 in memory
flw f20, 0(x2) # load 0x0a52e1d8 from memory into f20
fmsub.s f5, f19, f28, f20, dyn # perform operation
fmsub.s f5, f19, f28, f20, rdn # perform operation
fmsub.s f5, f19, f28, f20, rmm # perform operation
fmsub.s f5, f19, f28, f20, rne # perform operation
fmsub.s f5, f19, f28, f20, rtz # perform operation
fmsub.s f5, f19, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x95a8663d # load x3 with value 0x95a8663d
sw x3, 0(x2) # store 0x95a8663d in memory
flw f8, 0(x2) # load 0x95a8663d from memory into f8
fmsub.s f31, f17, f6, f8, dyn # perform operation
fmsub.s f31, f17, f6, f8, rdn # perform operation
fmsub.s f31, f17, f6, f8, rmm # perform operation
fmsub.s f31, f17, f6, f8, rne # perform operation
fmsub.s f31, f17, f6, f8, rtz # perform operation
fmsub.s f31, f17, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x12553340 # load x3 with value 0x12553340
sw x3, 0(x2) # store 0x12553340 in memory
flw f12, 0(x2) # load 0x12553340 from memory into f12
fmsub.s f21, f22, f29, f12, dyn # perform operation
fmsub.s f21, f22, f29, f12, rdn # perform operation
fmsub.s f21, f22, f29, f12, rmm # perform operation
fmsub.s f21, f22, f29, f12, rne # perform operation
fmsub.s f21, f22, f29, f12, rtz # perform operation
fmsub.s f21, f22, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x15d1cf1d # load x3 with value 0x15d1cf1d
sw x3, 0(x2) # store 0x15d1cf1d in memory
flw f31, 0(x2) # load 0x15d1cf1d from memory into f31
fmsub.s f21, f19, f2, f31, dyn # perform operation
fmsub.s f21, f19, f2, f31, rdn # perform operation
fmsub.s f21, f19, f2, f31, rmm # perform operation
fmsub.s f21, f19, f2, f31, rne # perform operation
fmsub.s f21, f19, f2, f31, rtz # perform operation
fmsub.s f21, f19, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xa3ae5195 # load x3 with value 0xa3ae5195
sw x3, 0(x2) # store 0xa3ae5195 in memory
flw f24, 0(x2) # load 0xa3ae5195 from memory into f24
fmsub.s f13, f11, f23, f24, dyn # perform operation
fmsub.s f13, f11, f23, f24, rdn # perform operation
fmsub.s f13, f11, f23, f24, rmm # perform operation
fmsub.s f13, f11, f23, f24, rne # perform operation
fmsub.s f13, f11, f23, f24, rtz # perform operation
fmsub.s f13, f11, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f11, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xd81d120a # load x3 with value 0xd81d120a
sw x3, 0(x2) # store 0xd81d120a in memory
flw f9, 0(x2) # load 0xd81d120a from memory into f9
fmsub.s f21, f18, f29, f9, dyn # perform operation
fmsub.s f21, f18, f29, f9, rdn # perform operation
fmsub.s f21, f18, f29, f9, rmm # perform operation
fmsub.s f21, f18, f29, f9, rne # perform operation
fmsub.s f21, f18, f29, f9, rtz # perform operation
fmsub.s f21, f18, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x0860fa09 # load x3 with value 0x0860fa09
sw x3, 0(x2) # store 0x0860fa09 in memory
flw f8, 0(x2) # load 0x0860fa09 from memory into f8
fmsub.s f21, f24, f10, f8, dyn # perform operation
fmsub.s f21, f24, f10, f8, rdn # perform operation
fmsub.s f21, f24, f10, f8, rmm # perform operation
fmsub.s f21, f24, f10, f8, rne # perform operation
fmsub.s f21, f24, f10, f8, rtz # perform operation
fmsub.s f21, f24, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x5506d82a # load x3 with value 0x5506d82a
sw x3, 0(x2) # store 0x5506d82a in memory
flw f3, 0(x2) # load 0x5506d82a from memory into f3
fmsub.s f28, f16, f23, f3, dyn # perform operation
fmsub.s f28, f16, f23, f3, rdn # perform operation
fmsub.s f28, f16, f23, f3, rmm # perform operation
fmsub.s f28, f16, f23, f3, rne # perform operation
fmsub.s f28, f16, f23, f3, rtz # perform operation
fmsub.s f28, f16, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x1a677dcd # load x3 with value 0x1a677dcd
sw x3, 0(x2) # store 0x1a677dcd in memory
flw f21, 0(x2) # load 0x1a677dcd from memory into f21
fmsub.s f10, f27, f8, f21, dyn # perform operation
fmsub.s f10, f27, f8, f21, rdn # perform operation
fmsub.s f10, f27, f8, f21, rmm # perform operation
fmsub.s f10, f27, f8, f21, rne # perform operation
fmsub.s f10, f27, f8, f21, rtz # perform operation
fmsub.s f10, f27, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x84cae049 # load x3 with value 0x84cae049
sw x3, 0(x2) # store 0x84cae049 in memory
flw f7, 0(x2) # load 0x84cae049 from memory into f7
fmsub.s f5, f19, f21, f7, dyn # perform operation
fmsub.s f5, f19, f21, f7, rdn # perform operation
fmsub.s f5, f19, f21, f7, rmm # perform operation
fmsub.s f5, f19, f21, f7, rne # perform operation
fmsub.s f5, f19, f21, f7, rtz # perform operation
fmsub.s f5, f19, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xc812054e # load x3 with value 0xc812054e
sw x3, 0(x2) # store 0xc812054e in memory
flw f18, 0(x2) # load 0xc812054e from memory into f18
fmsub.s f2, f24, f5, f18, dyn # perform operation
fmsub.s f2, f24, f5, f18, rdn # perform operation
fmsub.s f2, f24, f5, f18, rmm # perform operation
fmsub.s f2, f24, f5, f18, rne # perform operation
fmsub.s f2, f24, f5, f18, rtz # perform operation
fmsub.s f2, f24, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x1f948f3a # load x3 with value 0x1f948f3a
sw x3, 0(x2) # store 0x1f948f3a in memory
flw f8, 0(x2) # load 0x1f948f3a from memory into f8
fmsub.s f13, f6, f11, f8, dyn # perform operation
fmsub.s f13, f6, f11, f8, rdn # perform operation
fmsub.s f13, f6, f11, f8, rmm # perform operation
fmsub.s f13, f6, f11, f8, rne # perform operation
fmsub.s f13, f6, f11, f8, rtz # perform operation
fmsub.s f13, f6, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x3c0b282c # load x3 with value 0x3c0b282c
sw x3, 0(x2) # store 0x3c0b282c in memory
flw f28, 0(x2) # load 0x3c0b282c from memory into f28
fmsub.s f7, f1, f2, f28, dyn # perform operation
fmsub.s f7, f1, f2, f28, rdn # perform operation
fmsub.s f7, f1, f2, f28, rmm # perform operation
fmsub.s f7, f1, f2, f28, rne # perform operation
fmsub.s f7, f1, f2, f28, rtz # perform operation
fmsub.s f7, f1, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x43db5909 # load x3 with value 0x43db5909
sw x3, 0(x2) # store 0x43db5909 in memory
flw f6, 0(x2) # load 0x43db5909 from memory into f6
fmsub.s f31, f12, f28, f6, dyn # perform operation
fmsub.s f31, f12, f28, f6, rdn # perform operation
fmsub.s f31, f12, f28, f6, rmm # perform operation
fmsub.s f31, f12, f28, f6, rne # perform operation
fmsub.s f31, f12, f28, f6, rtz # perform operation
fmsub.s f31, f12, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x0ce76d32 # load x3 with value 0x0ce76d32
sw x3, 0(x2) # store 0x0ce76d32 in memory
flw f10, 0(x2) # load 0x0ce76d32 from memory into f10
fmsub.s f31, f17, f19, f10, dyn # perform operation
fmsub.s f31, f17, f19, f10, rdn # perform operation
fmsub.s f31, f17, f19, f10, rmm # perform operation
fmsub.s f31, f17, f19, f10, rne # perform operation
fmsub.s f31, f17, f19, f10, rtz # perform operation
fmsub.s f31, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xb2eb605e # load x3 with value 0xb2eb605e
sw x3, 0(x2) # store 0xb2eb605e in memory
flw f23, 0(x2) # load 0xb2eb605e from memory into f23
fmsub.s f6, f15, f8, f23, dyn # perform operation
fmsub.s f6, f15, f8, f23, rdn # perform operation
fmsub.s f6, f15, f8, f23, rmm # perform operation
fmsub.s f6, f15, f8, f23, rne # perform operation
fmsub.s f6, f15, f8, f23, rtz # perform operation
fmsub.s f6, f15, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x8d4a1510 # load x3 with value 0x8d4a1510
sw x3, 0(x2) # store 0x8d4a1510 in memory
flw f29, 0(x2) # load 0x8d4a1510 from memory into f29
fmsub.s f27, f22, f16, f29, dyn # perform operation
fmsub.s f27, f22, f16, f29, rdn # perform operation
fmsub.s f27, f22, f16, f29, rmm # perform operation
fmsub.s f27, f22, f16, f29, rne # perform operation
fmsub.s f27, f22, f16, f29, rtz # perform operation
fmsub.s f27, f22, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x88606845 # load x3 with value 0x88606845
sw x3, 0(x2) # store 0x88606845 in memory
flw f15, 0(x2) # load 0x88606845 from memory into f15
fmsub.s f1, f9, f8, f15, dyn # perform operation
fmsub.s f1, f9, f8, f15, rdn # perform operation
fmsub.s f1, f9, f8, f15, rmm # perform operation
fmsub.s f1, f9, f8, f15, rne # perform operation
fmsub.s f1, f9, f8, f15, rtz # perform operation
fmsub.s f1, f9, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f9, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x6a84c178 # load x3 with value 0x6a84c178
sw x3, 0(x2) # store 0x6a84c178 in memory
flw f20, 0(x2) # load 0x6a84c178 from memory into f20
fmsub.s f14, f2, f30, f20, dyn # perform operation
fmsub.s f14, f2, f30, f20, rdn # perform operation
fmsub.s f14, f2, f30, f20, rmm # perform operation
fmsub.s f14, f2, f30, f20, rne # perform operation
fmsub.s f14, f2, f30, f20, rtz # perform operation
fmsub.s f14, f2, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xda57af0c # load x3 with value 0xda57af0c
sw x3, 0(x2) # store 0xda57af0c in memory
flw f5, 0(x2) # load 0xda57af0c from memory into f5
fmsub.s f23, f8, f22, f5, dyn # perform operation
fmsub.s f23, f8, f22, f5, rdn # perform operation
fmsub.s f23, f8, f22, f5, rmm # perform operation
fmsub.s f23, f8, f22, f5, rne # perform operation
fmsub.s f23, f8, f22, f5, rtz # perform operation
fmsub.s f23, f8, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xaed35732 # load x3 with value 0xaed35732
sw x3, 0(x2) # store 0xaed35732 in memory
flw f11, 0(x2) # load 0xaed35732 from memory into f11
fmsub.s f7, f22, f12, f11, dyn # perform operation
fmsub.s f7, f22, f12, f11, rdn # perform operation
fmsub.s f7, f22, f12, f11, rmm # perform operation
fmsub.s f7, f22, f12, f11, rne # perform operation
fmsub.s f7, f22, f12, f11, rtz # perform operation
fmsub.s f7, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x2be12191 # load x3 with value 0x2be12191
sw x3, 0(x2) # store 0x2be12191 in memory
flw f28, 0(x2) # load 0x2be12191 from memory into f28
fmsub.s f16, f6, f21, f28, dyn # perform operation
fmsub.s f16, f6, f21, f28, rdn # perform operation
fmsub.s f16, f6, f21, f28, rmm # perform operation
fmsub.s f16, f6, f21, f28, rne # perform operation
fmsub.s f16, f6, f21, f28, rtz # perform operation
fmsub.s f16, f6, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x888fe665 # load x3 with value 0x888fe665
sw x3, 0(x2) # store 0x888fe665 in memory
flw f7, 0(x2) # load 0x888fe665 from memory into f7
fmsub.s f28, f29, f24, f7, dyn # perform operation
fmsub.s f28, f29, f24, f7, rdn # perform operation
fmsub.s f28, f29, f24, f7, rmm # perform operation
fmsub.s f28, f29, f24, f7, rne # perform operation
fmsub.s f28, f29, f24, f7, rtz # perform operation
fmsub.s f28, f29, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xf6def26a # load x3 with value 0xf6def26a
sw x3, 0(x2) # store 0xf6def26a in memory
flw f23, 0(x2) # load 0xf6def26a from memory into f23
fmsub.s f12, f2, f21, f23, dyn # perform operation
fmsub.s f12, f2, f21, f23, rdn # perform operation
fmsub.s f12, f2, f21, f23, rmm # perform operation
fmsub.s f12, f2, f21, f23, rne # perform operation
fmsub.s f12, f2, f21, f23, rtz # perform operation
fmsub.s f12, f2, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x8d1cffd3 # load x3 with value 0x8d1cffd3
sw x3, 0(x2) # store 0x8d1cffd3 in memory
flw f11, 0(x2) # load 0x8d1cffd3 from memory into f11
fmsub.s f2, f24, f20, f11, dyn # perform operation
fmsub.s f2, f24, f20, f11, rdn # perform operation
fmsub.s f2, f24, f20, f11, rmm # perform operation
fmsub.s f2, f24, f20, f11, rne # perform operation
fmsub.s f2, f24, f20, f11, rtz # perform operation
fmsub.s f2, f24, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xe0652396 # load x3 with value 0xe0652396
sw x3, 0(x2) # store 0xe0652396 in memory
flw f1, 0(x2) # load 0xe0652396 from memory into f1
fmsub.s f9, f30, f17, f1, dyn # perform operation
fmsub.s f9, f30, f17, f1, rdn # perform operation
fmsub.s f9, f30, f17, f1, rmm # perform operation
fmsub.s f9, f30, f17, f1, rne # perform operation
fmsub.s f9, f30, f17, f1, rtz # perform operation
fmsub.s f9, f30, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f30, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x0adf2663 # load x3 with value 0x0adf2663
sw x3, 0(x2) # store 0x0adf2663 in memory
flw f7, 0(x2) # load 0x0adf2663 from memory into f7
fmsub.s f13, f18, f5, f7, dyn # perform operation
fmsub.s f13, f18, f5, f7, rdn # perform operation
fmsub.s f13, f18, f5, f7, rmm # perform operation
fmsub.s f13, f18, f5, f7, rne # perform operation
fmsub.s f13, f18, f5, f7, rtz # perform operation
fmsub.s f13, f18, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f18, f5, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x7161fbf3 # load x3 with value 0x7161fbf3
sw x3, 0(x2) # store 0x7161fbf3 in memory
flw f23, 0(x2) # load 0x7161fbf3 from memory into f23
fmsub.s f9, f24, f16, f23, dyn # perform operation
fmsub.s f9, f24, f16, f23, rdn # perform operation
fmsub.s f9, f24, f16, f23, rmm # perform operation
fmsub.s f9, f24, f16, f23, rne # perform operation
fmsub.s f9, f24, f16, f23, rtz # perform operation
fmsub.s f9, f24, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f24, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x0acc615e # load x3 with value 0x0acc615e
sw x3, 0(x2) # store 0x0acc615e in memory
flw f14, 0(x2) # load 0x0acc615e from memory into f14
fmsub.s f8, f3, f7, f14, dyn # perform operation
fmsub.s f8, f3, f7, f14, rdn # perform operation
fmsub.s f8, f3, f7, f14, rmm # perform operation
fmsub.s f8, f3, f7, f14, rne # perform operation
fmsub.s f8, f3, f7, f14, rtz # perform operation
fmsub.s f8, f3, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x6427ff9a # load x3 with value 0x6427ff9a
sw x3, 0(x2) # store 0x6427ff9a in memory
flw f22, 0(x2) # load 0x6427ff9a from memory into f22
fmsub.s f21, f24, f8, f22, dyn # perform operation
fmsub.s f21, f24, f8, f22, rdn # perform operation
fmsub.s f21, f24, f8, f22, rmm # perform operation
fmsub.s f21, f24, f8, f22, rne # perform operation
fmsub.s f21, f24, f8, f22, rtz # perform operation
fmsub.s f21, f24, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xfc99152f # load x3 with value 0xfc99152f
sw x3, 0(x2) # store 0xfc99152f in memory
flw f25, 0(x2) # load 0xfc99152f from memory into f25
fmsub.s f7, f3, f16, f25, dyn # perform operation
fmsub.s f7, f3, f16, f25, rdn # perform operation
fmsub.s f7, f3, f16, f25, rmm # perform operation
fmsub.s f7, f3, f16, f25, rne # perform operation
fmsub.s f7, f3, f16, f25, rtz # perform operation
fmsub.s f7, f3, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x72474d98 # load x3 with value 0x72474d98
sw x3, 0(x2) # store 0x72474d98 in memory
flw f17, 0(x2) # load 0x72474d98 from memory into f17
fmsub.s f10, f21, f13, f17, dyn # perform operation
fmsub.s f10, f21, f13, f17, rdn # perform operation
fmsub.s f10, f21, f13, f17, rmm # perform operation
fmsub.s f10, f21, f13, f17, rne # perform operation
fmsub.s f10, f21, f13, f17, rtz # perform operation
fmsub.s f10, f21, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x438050fd # load x3 with value 0x438050fd
sw x3, 0(x2) # store 0x438050fd in memory
flw f30, 0(x2) # load 0x438050fd from memory into f30
fmsub.s f3, f7, f12, f30, dyn # perform operation
fmsub.s f3, f7, f12, f30, rdn # perform operation
fmsub.s f3, f7, f12, f30, rmm # perform operation
fmsub.s f3, f7, f12, f30, rne # perform operation
fmsub.s f3, f7, f12, f30, rtz # perform operation
fmsub.s f3, f7, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xbea0373d # load x3 with value 0xbea0373d
sw x3, 0(x2) # store 0xbea0373d in memory
flw f15, 0(x2) # load 0xbea0373d from memory into f15
fmsub.s f5, f31, f1, f15, dyn # perform operation
fmsub.s f5, f31, f1, f15, rdn # perform operation
fmsub.s f5, f31, f1, f15, rmm # perform operation
fmsub.s f5, f31, f1, f15, rne # perform operation
fmsub.s f5, f31, f1, f15, rtz # perform operation
fmsub.s f5, f31, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x6e3e3290 # load x3 with value 0x6e3e3290
sw x3, 0(x2) # store 0x6e3e3290 in memory
flw f3, 0(x2) # load 0x6e3e3290 from memory into f3
fmsub.s f24, f23, f10, f3, dyn # perform operation
fmsub.s f24, f23, f10, f3, rdn # perform operation
fmsub.s f24, f23, f10, f3, rmm # perform operation
fmsub.s f24, f23, f10, f3, rne # perform operation
fmsub.s f24, f23, f10, f3, rtz # perform operation
fmsub.s f24, f23, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xf04664d5 # load x3 with value 0xf04664d5
sw x3, 0(x2) # store 0xf04664d5 in memory
flw f8, 0(x2) # load 0xf04664d5 from memory into f8
fmsub.s f6, f7, f1, f8, dyn # perform operation
fmsub.s f6, f7, f1, f8, rdn # perform operation
fmsub.s f6, f7, f1, f8, rmm # perform operation
fmsub.s f6, f7, f1, f8, rne # perform operation
fmsub.s f6, f7, f1, f8, rtz # perform operation
fmsub.s f6, f7, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x3436d9bf # load x3 with value 0x3436d9bf
sw x3, 0(x2) # store 0x3436d9bf in memory
flw f3, 0(x2) # load 0x3436d9bf from memory into f3
fmsub.s f8, f7, f31, f3, dyn # perform operation
fmsub.s f8, f7, f31, f3, rdn # perform operation
fmsub.s f8, f7, f31, f3, rmm # perform operation
fmsub.s f8, f7, f31, f3, rne # perform operation
fmsub.s f8, f7, f31, f3, rtz # perform operation
fmsub.s f8, f7, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x2b76d5f7 # load x3 with value 0x2b76d5f7
sw x3, 0(x2) # store 0x2b76d5f7 in memory
flw f9, 0(x2) # load 0x2b76d5f7 from memory into f9
fmsub.s f2, f27, f6, f9, dyn # perform operation
fmsub.s f2, f27, f6, f9, rdn # perform operation
fmsub.s f2, f27, f6, f9, rmm # perform operation
fmsub.s f2, f27, f6, f9, rne # perform operation
fmsub.s f2, f27, f6, f9, rtz # perform operation
fmsub.s f2, f27, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f27, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f27, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f27, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f27, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f27, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x1946cd49 # load x3 with value 0x1946cd49
sw x3, 0(x2) # store 0x1946cd49 in memory
flw f18, 0(x2) # load 0x1946cd49 from memory into f18
fmsub.s f25, f28, f22, f18, dyn # perform operation
fmsub.s f25, f28, f22, f18, rdn # perform operation
fmsub.s f25, f28, f22, f18, rmm # perform operation
fmsub.s f25, f28, f22, f18, rne # perform operation
fmsub.s f25, f28, f22, f18, rtz # perform operation
fmsub.s f25, f28, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f28, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x46a95857 # load x3 with value 0x46a95857
sw x3, 0(x2) # store 0x46a95857 in memory
flw f5, 0(x2) # load 0x46a95857 from memory into f5
fmsub.s f13, f6, f1, f5, dyn # perform operation
fmsub.s f13, f6, f1, f5, rdn # perform operation
fmsub.s f13, f6, f1, f5, rmm # perform operation
fmsub.s f13, f6, f1, f5, rne # perform operation
fmsub.s f13, f6, f1, f5, rtz # perform operation
fmsub.s f13, f6, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f1, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x5b655f0b # load x3 with value 0x5b655f0b
sw x3, 0(x2) # store 0x5b655f0b in memory
flw f26, 0(x2) # load 0x5b655f0b from memory into f26
fmsub.s f5, f24, f21, f26, dyn # perform operation
fmsub.s f5, f24, f21, f26, rdn # perform operation
fmsub.s f5, f24, f21, f26, rmm # perform operation
fmsub.s f5, f24, f21, f26, rne # perform operation
fmsub.s f5, f24, f21, f26, rtz # perform operation
fmsub.s f5, f24, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f24, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f24, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f24, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f24, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f24, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0xb0164410 # load x3 with value 0xb0164410
sw x3, 0(x2) # store 0xb0164410 in memory
flw f18, 0(x2) # load 0xb0164410 from memory into f18
fmsub.s f23, f29, f25, f18, dyn # perform operation
fmsub.s f23, f29, f25, f18, rdn # perform operation
fmsub.s f23, f29, f25, f18, rmm # perform operation
fmsub.s f23, f29, f25, f18, rne # perform operation
fmsub.s f23, f29, f25, f18, rtz # perform operation
fmsub.s f23, f29, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x7ada0045 # load x3 with value 0x7ada0045
sw x3, 0(x2) # store 0x7ada0045 in memory
flw f23, 0(x2) # load 0x7ada0045 from memory into f23
fmsub.s f28, f22, f27, f23, dyn # perform operation
fmsub.s f28, f22, f27, f23, rdn # perform operation
fmsub.s f28, f22, f27, f23, rmm # perform operation
fmsub.s f28, f22, f27, f23, rne # perform operation
fmsub.s f28, f22, f27, f23, rtz # perform operation
fmsub.s f28, f22, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xc71c0802 # load x3 with value 0xc71c0802
sw x3, 0(x2) # store 0xc71c0802 in memory
flw f12, 0(x2) # load 0xc71c0802 from memory into f12
fmsub.s f11, f16, f2, f12, dyn # perform operation
fmsub.s f11, f16, f2, f12, rdn # perform operation
fmsub.s f11, f16, f2, f12, rmm # perform operation
fmsub.s f11, f16, f2, f12, rne # perform operation
fmsub.s f11, f16, f2, f12, rtz # perform operation
fmsub.s f11, f16, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x23b00dd0 # load x3 with value 0x23b00dd0
sw x3, 0(x2) # store 0x23b00dd0 in memory
flw f28, 0(x2) # load 0x23b00dd0 from memory into f28
fmsub.s f31, f26, f7, f28, dyn # perform operation
fmsub.s f31, f26, f7, f28, rdn # perform operation
fmsub.s f31, f26, f7, f28, rmm # perform operation
fmsub.s f31, f26, f7, f28, rne # perform operation
fmsub.s f31, f26, f7, f28, rtz # perform operation
fmsub.s f31, f26, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xd449164b # load x3 with value 0xd449164b
sw x3, 0(x2) # store 0xd449164b in memory
flw f28, 0(x2) # load 0xd449164b from memory into f28
fmsub.s f9, f27, f24, f28, dyn # perform operation
fmsub.s f9, f27, f24, f28, rdn # perform operation
fmsub.s f9, f27, f24, f28, rmm # perform operation
fmsub.s f9, f27, f24, f28, rne # perform operation
fmsub.s f9, f27, f24, f28, rtz # perform operation
fmsub.s f9, f27, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xf1224788 # load x3 with value 0xf1224788
sw x3, 0(x2) # store 0xf1224788 in memory
flw f14, 0(x2) # load 0xf1224788 from memory into f14
fmsub.s f13, f3, f17, f14, dyn # perform operation
fmsub.s f13, f3, f17, f14, rdn # perform operation
fmsub.s f13, f3, f17, f14, rmm # perform operation
fmsub.s f13, f3, f17, f14, rne # perform operation
fmsub.s f13, f3, f17, f14, rtz # perform operation
fmsub.s f13, f3, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x2a1108a0 # load x3 with value 0x2a1108a0
sw x3, 0(x2) # store 0x2a1108a0 in memory
flw f3, 0(x2) # load 0x2a1108a0 from memory into f3
fmsub.s f18, f27, f30, f3, dyn # perform operation
fmsub.s f18, f27, f30, f3, rdn # perform operation
fmsub.s f18, f27, f30, f3, rmm # perform operation
fmsub.s f18, f27, f30, f3, rne # perform operation
fmsub.s f18, f27, f30, f3, rtz # perform operation
fmsub.s f18, f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x2d77007d # load x3 with value 0x2d77007d
sw x3, 0(x2) # store 0x2d77007d in memory
flw f13, 0(x2) # load 0x2d77007d from memory into f13
fmsub.s f15, f8, f14, f13, dyn # perform operation
fmsub.s f15, f8, f14, f13, rdn # perform operation
fmsub.s f15, f8, f14, f13, rmm # perform operation
fmsub.s f15, f8, f14, f13, rne # perform operation
fmsub.s f15, f8, f14, f13, rtz # perform operation
fmsub.s f15, f8, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xf57b50f5 # load x3 with value 0xf57b50f5
sw x3, 0(x2) # store 0xf57b50f5 in memory
flw f15, 0(x2) # load 0xf57b50f5 from memory into f15
fmsub.s f12, f8, f29, f15, dyn # perform operation
fmsub.s f12, f8, f29, f15, rdn # perform operation
fmsub.s f12, f8, f29, f15, rmm # perform operation
fmsub.s f12, f8, f29, f15, rne # perform operation
fmsub.s f12, f8, f29, f15, rtz # perform operation
fmsub.s f12, f8, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x94e88caa # load x3 with value 0x94e88caa
sw x3, 0(x2) # store 0x94e88caa in memory
flw f16, 0(x2) # load 0x94e88caa from memory into f16
fmsub.s f17, f14, f13, f16, dyn # perform operation
fmsub.s f17, f14, f13, f16, rdn # perform operation
fmsub.s f17, f14, f13, f16, rmm # perform operation
fmsub.s f17, f14, f13, f16, rne # perform operation
fmsub.s f17, f14, f13, f16, rtz # perform operation
fmsub.s f17, f14, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xfefa65c1 # load x3 with value 0xfefa65c1
sw x3, 0(x2) # store 0xfefa65c1 in memory
flw f27, 0(x2) # load 0xfefa65c1 from memory into f27
fmsub.s f30, f12, f31, f27, dyn # perform operation
fmsub.s f30, f12, f31, f27, rdn # perform operation
fmsub.s f30, f12, f31, f27, rmm # perform operation
fmsub.s f30, f12, f31, f27, rne # perform operation
fmsub.s f30, f12, f31, f27, rtz # perform operation
fmsub.s f30, f12, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f12, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0xc1fea84a # load x3 with value 0xc1fea84a
sw x3, 0(x2) # store 0xc1fea84a in memory
flw f31, 0(x2) # load 0xc1fea84a from memory into f31
fmsub.s f13, f18, f8, f31, dyn # perform operation
fmsub.s f13, f18, f8, f31, rdn # perform operation
fmsub.s f13, f18, f8, f31, rmm # perform operation
fmsub.s f13, f18, f8, f31, rne # perform operation
fmsub.s f13, f18, f8, f31, rtz # perform operation
fmsub.s f13, f18, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f18, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x0c0e3d3f # load x3 with value 0x0c0e3d3f
sw x3, 0(x2) # store 0x0c0e3d3f in memory
flw f25, 0(x2) # load 0x0c0e3d3f from memory into f25
fmsub.s f30, f31, f10, f25, dyn # perform operation
fmsub.s f30, f31, f10, f25, rdn # perform operation
fmsub.s f30, f31, f10, f25, rmm # perform operation
fmsub.s f30, f31, f10, f25, rne # perform operation
fmsub.s f30, f31, f10, f25, rtz # perform operation
fmsub.s f30, f31, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f31, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x0af4dab0 # load x3 with value 0x0af4dab0
sw x3, 0(x2) # store 0x0af4dab0 in memory
flw f23, 0(x2) # load 0x0af4dab0 from memory into f23
fmsub.s f17, f5, f14, f23, dyn # perform operation
fmsub.s f17, f5, f14, f23, rdn # perform operation
fmsub.s f17, f5, f14, f23, rmm # perform operation
fmsub.s f17, f5, f14, f23, rne # perform operation
fmsub.s f17, f5, f14, f23, rtz # perform operation
fmsub.s f17, f5, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xf4d7e5a7 # load x3 with value 0xf4d7e5a7
sw x3, 0(x2) # store 0xf4d7e5a7 in memory
flw f20, 0(x2) # load 0xf4d7e5a7 from memory into f20
fmsub.s f12, f24, f18, f20, dyn # perform operation
fmsub.s f12, f24, f18, f20, rdn # perform operation
fmsub.s f12, f24, f18, f20, rmm # perform operation
fmsub.s f12, f24, f18, f20, rne # perform operation
fmsub.s f12, f24, f18, f20, rtz # perform operation
fmsub.s f12, f24, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f24, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x887b5dcc # load x3 with value 0x887b5dcc
sw x3, 0(x2) # store 0x887b5dcc in memory
flw f30, 0(x2) # load 0x887b5dcc from memory into f30
fmsub.s f17, f25, f5, f30, dyn # perform operation
fmsub.s f17, f25, f5, f30, rdn # perform operation
fmsub.s f17, f25, f5, f30, rmm # perform operation
fmsub.s f17, f25, f5, f30, rne # perform operation
fmsub.s f17, f25, f5, f30, rtz # perform operation
fmsub.s f17, f25, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xa58f88e2 # load x3 with value 0xa58f88e2
sw x3, 0(x2) # store 0xa58f88e2 in memory
flw f3, 0(x2) # load 0xa58f88e2 from memory into f3
fmsub.s f20, f26, f28, f3, dyn # perform operation
fmsub.s f20, f26, f28, f3, rdn # perform operation
fmsub.s f20, f26, f28, f3, rmm # perform operation
fmsub.s f20, f26, f28, f3, rne # perform operation
fmsub.s f20, f26, f28, f3, rtz # perform operation
fmsub.s f20, f26, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x8bcf2380 # load x3 with value 0x8bcf2380
sw x3, 0(x2) # store 0x8bcf2380 in memory
flw f24, 0(x2) # load 0x8bcf2380 from memory into f24
fmsub.s f2, f25, f31, f24, dyn # perform operation
fmsub.s f2, f25, f31, f24, rdn # perform operation
fmsub.s f2, f25, f31, f24, rmm # perform operation
fmsub.s f2, f25, f31, f24, rne # perform operation
fmsub.s f2, f25, f31, f24, rtz # perform operation
fmsub.s f2, f25, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f25, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x6567ecb5 # load x3 with value 0x6567ecb5
sw x3, 0(x2) # store 0x6567ecb5 in memory
flw f19, 0(x2) # load 0x6567ecb5 from memory into f19
fmsub.s f20, f15, f3, f19, dyn # perform operation
fmsub.s f20, f15, f3, f19, rdn # perform operation
fmsub.s f20, f15, f3, f19, rmm # perform operation
fmsub.s f20, f15, f3, f19, rne # perform operation
fmsub.s f20, f15, f3, f19, rtz # perform operation
fmsub.s f20, f15, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x4fa454aa # load x3 with value 0x4fa454aa
sw x3, 0(x2) # store 0x4fa454aa in memory
flw f26, 0(x2) # load 0x4fa454aa from memory into f26
fmsub.s f10, f5, f13, f26, dyn # perform operation
fmsub.s f10, f5, f13, f26, rdn # perform operation
fmsub.s f10, f5, f13, f26, rmm # perform operation
fmsub.s f10, f5, f13, f26, rne # perform operation
fmsub.s f10, f5, f13, f26, rtz # perform operation
fmsub.s f10, f5, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x728743e9 # load x3 with value 0x728743e9
sw x3, 0(x2) # store 0x728743e9 in memory
flw f3, 0(x2) # load 0x728743e9 from memory into f3
fmsub.s f21, f19, f18, f3, dyn # perform operation
fmsub.s f21, f19, f18, f3, rdn # perform operation
fmsub.s f21, f19, f18, f3, rmm # perform operation
fmsub.s f21, f19, f18, f3, rne # perform operation
fmsub.s f21, f19, f18, f3, rtz # perform operation
fmsub.s f21, f19, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x4426dae1 # load x3 with value 0x4426dae1
sw x3, 0(x2) # store 0x4426dae1 in memory
flw f3, 0(x2) # load 0x4426dae1 from memory into f3
fmsub.s f21, f22, f9, f3, dyn # perform operation
fmsub.s f21, f22, f9, f3, rdn # perform operation
fmsub.s f21, f22, f9, f3, rmm # perform operation
fmsub.s f21, f22, f9, f3, rne # perform operation
fmsub.s f21, f22, f9, f3, rtz # perform operation
fmsub.s f21, f22, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x6e095921 # load x3 with value 0x6e095921
sw x3, 0(x2) # store 0x6e095921 in memory
flw f26, 0(x2) # load 0x6e095921 from memory into f26
fmsub.s f23, f6, f14, f26, dyn # perform operation
fmsub.s f23, f6, f14, f26, rdn # perform operation
fmsub.s f23, f6, f14, f26, rmm # perform operation
fmsub.s f23, f6, f14, f26, rne # perform operation
fmsub.s f23, f6, f14, f26, rtz # perform operation
fmsub.s f23, f6, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xe5c474bc # load x3 with value 0xe5c474bc
sw x3, 0(x2) # store 0xe5c474bc in memory
flw f25, 0(x2) # load 0xe5c474bc from memory into f25
fmsub.s f15, f8, f28, f25, dyn # perform operation
fmsub.s f15, f8, f28, f25, rdn # perform operation
fmsub.s f15, f8, f28, f25, rmm # perform operation
fmsub.s f15, f8, f28, f25, rne # perform operation
fmsub.s f15, f8, f28, f25, rtz # perform operation
fmsub.s f15, f8, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x46554c28 # load x3 with value 0x46554c28
sw x3, 0(x2) # store 0x46554c28 in memory
flw f22, 0(x2) # load 0x46554c28 from memory into f22
fmsub.s f23, f21, f29, f22, dyn # perform operation
fmsub.s f23, f21, f29, f22, rdn # perform operation
fmsub.s f23, f21, f29, f22, rmm # perform operation
fmsub.s f23, f21, f29, f22, rne # perform operation
fmsub.s f23, f21, f29, f22, rtz # perform operation
fmsub.s f23, f21, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x09e92430 # load x3 with value 0x09e92430
sw x3, 0(x2) # store 0x09e92430 in memory
flw f10, 0(x2) # load 0x09e92430 from memory into f10
fmsub.s f17, f5, f1, f10, dyn # perform operation
fmsub.s f17, f5, f1, f10, rdn # perform operation
fmsub.s f17, f5, f1, f10, rmm # perform operation
fmsub.s f17, f5, f1, f10, rne # perform operation
fmsub.s f17, f5, f1, f10, rtz # perform operation
fmsub.s f17, f5, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x18177fd9 # load x3 with value 0x18177fd9
sw x3, 0(x2) # store 0x18177fd9 in memory
flw f25, 0(x2) # load 0x18177fd9 from memory into f25
fmsub.s f24, f19, f11, f25, dyn # perform operation
fmsub.s f24, f19, f11, f25, rdn # perform operation
fmsub.s f24, f19, f11, f25, rmm # perform operation
fmsub.s f24, f19, f11, f25, rne # perform operation
fmsub.s f24, f19, f11, f25, rtz # perform operation
fmsub.s f24, f19, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x7d7f216d # load x3 with value 0x7d7f216d
sw x3, 0(x2) # store 0x7d7f216d in memory
flw f9, 0(x2) # load 0x7d7f216d from memory into f9
fmsub.s f11, f21, f16, f9, dyn # perform operation
fmsub.s f11, f21, f16, f9, rdn # perform operation
fmsub.s f11, f21, f16, f9, rmm # perform operation
fmsub.s f11, f21, f16, f9, rne # perform operation
fmsub.s f11, f21, f16, f9, rtz # perform operation
fmsub.s f11, f21, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x55752227 # load x3 with value 0x55752227
sw x3, 0(x2) # store 0x55752227 in memory
flw f22, 0(x2) # load 0x55752227 from memory into f22
fmsub.s f5, f15, f25, f22, dyn # perform operation
fmsub.s f5, f15, f25, f22, rdn # perform operation
fmsub.s f5, f15, f25, f22, rmm # perform operation
fmsub.s f5, f15, f25, f22, rne # perform operation
fmsub.s f5, f15, f25, f22, rtz # perform operation
fmsub.s f5, f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x114a8b70 # load x3 with value 0x114a8b70
sw x3, 0(x2) # store 0x114a8b70 in memory
flw f7, 0(x2) # load 0x114a8b70 from memory into f7
fmsub.s f1, f24, f25, f7, dyn # perform operation
fmsub.s f1, f24, f25, f7, rdn # perform operation
fmsub.s f1, f24, f25, f7, rmm # perform operation
fmsub.s f1, f24, f25, f7, rne # perform operation
fmsub.s f1, f24, f25, f7, rtz # perform operation
fmsub.s f1, f24, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x7d0ce9ef # load x3 with value 0x7d0ce9ef
sw x3, 0(x2) # store 0x7d0ce9ef in memory
flw f2, 0(x2) # load 0x7d0ce9ef from memory into f2
fmsub.s f19, f11, f8, f2, dyn # perform operation
fmsub.s f19, f11, f8, f2, rdn # perform operation
fmsub.s f19, f11, f8, f2, rmm # perform operation
fmsub.s f19, f11, f8, f2, rne # perform operation
fmsub.s f19, f11, f8, f2, rtz # perform operation
fmsub.s f19, f11, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f11, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x1bd31058 # load x3 with value 0x1bd31058
sw x3, 0(x2) # store 0x1bd31058 in memory
flw f2, 0(x2) # load 0x1bd31058 from memory into f2
fmsub.s f22, f28, f7, f2, dyn # perform operation
fmsub.s f22, f28, f7, f2, rdn # perform operation
fmsub.s f22, f28, f7, f2, rmm # perform operation
fmsub.s f22, f28, f7, f2, rne # perform operation
fmsub.s f22, f28, f7, f2, rtz # perform operation
fmsub.s f22, f28, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f28, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xf72b03bb # load x3 with value 0xf72b03bb
sw x3, 0(x2) # store 0xf72b03bb in memory
flw f9, 0(x2) # load 0xf72b03bb from memory into f9
fmsub.s f25, f13, f19, f9, dyn # perform operation
fmsub.s f25, f13, f19, f9, rdn # perform operation
fmsub.s f25, f13, f19, f9, rmm # perform operation
fmsub.s f25, f13, f19, f9, rne # perform operation
fmsub.s f25, f13, f19, f9, rtz # perform operation
fmsub.s f25, f13, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xda610a3f # load x3 with value 0xda610a3f
sw x3, 0(x2) # store 0xda610a3f in memory
flw f5, 0(x2) # load 0xda610a3f from memory into f5
fmsub.s f19, f16, f23, f5, dyn # perform operation
fmsub.s f19, f16, f23, f5, rdn # perform operation
fmsub.s f19, f16, f23, f5, rmm # perform operation
fmsub.s f19, f16, f23, f5, rne # perform operation
fmsub.s f19, f16, f23, f5, rtz # perform operation
fmsub.s f19, f16, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x9d3885f6 # load x3 with value 0x9d3885f6
sw x3, 0(x2) # store 0x9d3885f6 in memory
flw f20, 0(x2) # load 0x9d3885f6 from memory into f20
fmsub.s f23, f9, f14, f20, dyn # perform operation
fmsub.s f23, f9, f14, f20, rdn # perform operation
fmsub.s f23, f9, f14, f20, rmm # perform operation
fmsub.s f23, f9, f14, f20, rne # perform operation
fmsub.s f23, f9, f14, f20, rtz # perform operation
fmsub.s f23, f9, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xd7cb67ac # load x3 with value 0xd7cb67ac
sw x3, 0(x2) # store 0xd7cb67ac in memory
flw f17, 0(x2) # load 0xd7cb67ac from memory into f17
fmsub.s f23, f3, f25, f17, dyn # perform operation
fmsub.s f23, f3, f25, f17, rdn # perform operation
fmsub.s f23, f3, f25, f17, rmm # perform operation
fmsub.s f23, f3, f25, f17, rne # perform operation
fmsub.s f23, f3, f25, f17, rtz # perform operation
fmsub.s f23, f3, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xbbdc4759 # load x3 with value 0xbbdc4759
sw x3, 0(x2) # store 0xbbdc4759 in memory
flw f15, 0(x2) # load 0xbbdc4759 from memory into f15
fmsub.s f23, f13, f1, f15, dyn # perform operation
fmsub.s f23, f13, f1, f15, rdn # perform operation
fmsub.s f23, f13, f1, f15, rmm # perform operation
fmsub.s f23, f13, f1, f15, rne # perform operation
fmsub.s f23, f13, f1, f15, rtz # perform operation
fmsub.s f23, f13, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x33a360b1 # load x3 with value 0x33a360b1
sw x3, 0(x2) # store 0x33a360b1 in memory
flw f21, 0(x2) # load 0x33a360b1 from memory into f21
fmsub.s f19, f12, f8, f21, dyn # perform operation
fmsub.s f19, f12, f8, f21, rdn # perform operation
fmsub.s f19, f12, f8, f21, rmm # perform operation
fmsub.s f19, f12, f8, f21, rne # perform operation
fmsub.s f19, f12, f8, f21, rtz # perform operation
fmsub.s f19, f12, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xd01f9c27 # load x3 with value 0xd01f9c27
sw x3, 0(x2) # store 0xd01f9c27 in memory
flw f29, 0(x2) # load 0xd01f9c27 from memory into f29
fmsub.s f31, f26, f1, f29, dyn # perform operation
fmsub.s f31, f26, f1, f29, rdn # perform operation
fmsub.s f31, f26, f1, f29, rmm # perform operation
fmsub.s f31, f26, f1, f29, rne # perform operation
fmsub.s f31, f26, f1, f29, rtz # perform operation
fmsub.s f31, f26, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x45cf41e9 # load x3 with value 0x45cf41e9
sw x3, 0(x2) # store 0x45cf41e9 in memory
flw f22, 0(x2) # load 0x45cf41e9 from memory into f22
fmsub.s f14, f3, f20, f22, dyn # perform operation
fmsub.s f14, f3, f20, f22, rdn # perform operation
fmsub.s f14, f3, f20, f22, rmm # perform operation
fmsub.s f14, f3, f20, f22, rne # perform operation
fmsub.s f14, f3, f20, f22, rtz # perform operation
fmsub.s f14, f3, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x5b984dfb # load x3 with value 0x5b984dfb
sw x3, 0(x2) # store 0x5b984dfb in memory
flw f19, 0(x2) # load 0x5b984dfb from memory into f19
fmsub.s f8, f27, f2, f19, dyn # perform operation
fmsub.s f8, f27, f2, f19, rdn # perform operation
fmsub.s f8, f27, f2, f19, rmm # perform operation
fmsub.s f8, f27, f2, f19, rne # perform operation
fmsub.s f8, f27, f2, f19, rtz # perform operation
fmsub.s f8, f27, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0xf9505f16 # load x3 with value 0xf9505f16
sw x3, 0(x2) # store 0xf9505f16 in memory
flw f21, 0(x2) # load 0xf9505f16 from memory into f21
fmsub.s f29, f9, f1, f21, dyn # perform operation
fmsub.s f29, f9, f1, f21, rdn # perform operation
fmsub.s f29, f9, f1, f21, rmm # perform operation
fmsub.s f29, f9, f1, f21, rne # perform operation
fmsub.s f29, f9, f1, f21, rtz # perform operation
fmsub.s f29, f9, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x1fea92ae # load x3 with value 0x1fea92ae
sw x3, 0(x2) # store 0x1fea92ae in memory
flw f24, 0(x2) # load 0x1fea92ae from memory into f24
fmsub.s f7, f27, f12, f24, dyn # perform operation
fmsub.s f7, f27, f12, f24, rdn # perform operation
fmsub.s f7, f27, f12, f24, rmm # perform operation
fmsub.s f7, f27, f12, f24, rne # perform operation
fmsub.s f7, f27, f12, f24, rtz # perform operation
fmsub.s f7, f27, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x9bfef1b3 # load x3 with value 0x9bfef1b3
sw x3, 0(x2) # store 0x9bfef1b3 in memory
flw f17, 0(x2) # load 0x9bfef1b3 from memory into f17
fmsub.s f24, f18, f7, f17, dyn # perform operation
fmsub.s f24, f18, f7, f17, rdn # perform operation
fmsub.s f24, f18, f7, f17, rmm # perform operation
fmsub.s f24, f18, f7, f17, rne # perform operation
fmsub.s f24, f18, f7, f17, rtz # perform operation
fmsub.s f24, f18, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x26c137bb # load x3 with value 0x26c137bb
sw x3, 0(x2) # store 0x26c137bb in memory
flw f23, 0(x2) # load 0x26c137bb from memory into f23
fmsub.s f25, f11, f6, f23, dyn # perform operation
fmsub.s f25, f11, f6, f23, rdn # perform operation
fmsub.s f25, f11, f6, f23, rmm # perform operation
fmsub.s f25, f11, f6, f23, rne # perform operation
fmsub.s f25, f11, f6, f23, rtz # perform operation
fmsub.s f25, f11, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x776ad869 # load x3 with value 0x776ad869
sw x3, 0(x2) # store 0x776ad869 in memory
flw f21, 0(x2) # load 0x776ad869 from memory into f21
fmsub.s f7, f15, f17, f21, dyn # perform operation
fmsub.s f7, f15, f17, f21, rdn # perform operation
fmsub.s f7, f15, f17, f21, rmm # perform operation
fmsub.s f7, f15, f17, f21, rne # perform operation
fmsub.s f7, f15, f17, f21, rtz # perform operation
fmsub.s f7, f15, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f15, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x027d34c7 # load x3 with value 0x027d34c7
sw x3, 0(x2) # store 0x027d34c7 in memory
flw f15, 0(x2) # load 0x027d34c7 from memory into f15
fmsub.s f31, f2, f11, f15, dyn # perform operation
fmsub.s f31, f2, f11, f15, rdn # perform operation
fmsub.s f31, f2, f11, f15, rmm # perform operation
fmsub.s f31, f2, f11, f15, rne # perform operation
fmsub.s f31, f2, f11, f15, rtz # perform operation
fmsub.s f31, f2, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xba8d2e63 # load x3 with value 0xba8d2e63
sw x3, 0(x2) # store 0xba8d2e63 in memory
flw f20, 0(x2) # load 0xba8d2e63 from memory into f20
fmsub.s f1, f15, f19, f20, dyn # perform operation
fmsub.s f1, f15, f19, f20, rdn # perform operation
fmsub.s f1, f15, f19, f20, rmm # perform operation
fmsub.s f1, f15, f19, f20, rne # perform operation
fmsub.s f1, f15, f19, f20, rtz # perform operation
fmsub.s f1, f15, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xab8ae21f # load x3 with value 0xab8ae21f
sw x3, 0(x2) # store 0xab8ae21f in memory
flw f24, 0(x2) # load 0xab8ae21f from memory into f24
fmsub.s f29, f13, f5, f24, dyn # perform operation
fmsub.s f29, f13, f5, f24, rdn # perform operation
fmsub.s f29, f13, f5, f24, rmm # perform operation
fmsub.s f29, f13, f5, f24, rne # perform operation
fmsub.s f29, f13, f5, f24, rtz # perform operation
fmsub.s f29, f13, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x71f0efc1 # load x3 with value 0x71f0efc1
sw x3, 0(x2) # store 0x71f0efc1 in memory
flw f9, 0(x2) # load 0x71f0efc1 from memory into f9
fmsub.s f18, f27, f20, f9, dyn # perform operation
fmsub.s f18, f27, f20, f9, rdn # perform operation
fmsub.s f18, f27, f20, f9, rmm # perform operation
fmsub.s f18, f27, f20, f9, rne # perform operation
fmsub.s f18, f27, f20, f9, rtz # perform operation
fmsub.s f18, f27, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xa7eb3ef2 # load x3 with value 0xa7eb3ef2
sw x3, 0(x2) # store 0xa7eb3ef2 in memory
flw f14, 0(x2) # load 0xa7eb3ef2 from memory into f14
fmsub.s f29, f19, f5, f14, dyn # perform operation
fmsub.s f29, f19, f5, f14, rdn # perform operation
fmsub.s f29, f19, f5, f14, rmm # perform operation
fmsub.s f29, f19, f5, f14, rne # perform operation
fmsub.s f29, f19, f5, f14, rtz # perform operation
fmsub.s f29, f19, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x502a6185 # load x3 with value 0x502a6185
sw x3, 0(x2) # store 0x502a6185 in memory
flw f25, 0(x2) # load 0x502a6185 from memory into f25
fmsub.s f27, f13, f15, f25, dyn # perform operation
fmsub.s f27, f13, f15, f25, rdn # perform operation
fmsub.s f27, f13, f15, f25, rmm # perform operation
fmsub.s f27, f13, f15, f25, rne # perform operation
fmsub.s f27, f13, f15, f25, rtz # perform operation
fmsub.s f27, f13, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x0038a1b9 # load x3 with value 0x0038a1b9
sw x3, 0(x2) # store 0x0038a1b9 in memory
flw f5, 0(x2) # load 0x0038a1b9 from memory into f5
fmsub.s f18, f23, f12, f5, dyn # perform operation
fmsub.s f18, f23, f12, f5, rdn # perform operation
fmsub.s f18, f23, f12, f5, rmm # perform operation
fmsub.s f18, f23, f12, f5, rne # perform operation
fmsub.s f18, f23, f12, f5, rtz # perform operation
fmsub.s f18, f23, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x5cc7fbd6 # load x3 with value 0x5cc7fbd6
sw x3, 0(x2) # store 0x5cc7fbd6 in memory
flw f6, 0(x2) # load 0x5cc7fbd6 from memory into f6
fmsub.s f13, f23, f5, f6, dyn # perform operation
fmsub.s f13, f23, f5, f6, rdn # perform operation
fmsub.s f13, f23, f5, f6, rmm # perform operation
fmsub.s f13, f23, f5, f6, rne # perform operation
fmsub.s f13, f23, f5, f6, rtz # perform operation
fmsub.s f13, f23, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x2e8107ad # load x3 with value 0x2e8107ad
sw x3, 0(x2) # store 0x2e8107ad in memory
flw f10, 0(x2) # load 0x2e8107ad from memory into f10
fmsub.s f31, f3, f11, f10, dyn # perform operation
fmsub.s f31, f3, f11, f10, rdn # perform operation
fmsub.s f31, f3, f11, f10, rmm # perform operation
fmsub.s f31, f3, f11, f10, rne # perform operation
fmsub.s f31, f3, f11, f10, rtz # perform operation
fmsub.s f31, f3, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x0059a912 # load x3 with value 0x0059a912
sw x3, 0(x2) # store 0x0059a912 in memory
flw f1, 0(x2) # load 0x0059a912 from memory into f1
fmsub.s f25, f29, f15, f1, dyn # perform operation
fmsub.s f25, f29, f15, f1, rdn # perform operation
fmsub.s f25, f29, f15, f1, rmm # perform operation
fmsub.s f25, f29, f15, f1, rne # perform operation
fmsub.s f25, f29, f15, f1, rtz # perform operation
fmsub.s f25, f29, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x828b327a # load x3 with value 0x828b327a
sw x3, 0(x2) # store 0x828b327a in memory
flw f31, 0(x2) # load 0x828b327a from memory into f31
fmsub.s f20, f21, f22, f31, dyn # perform operation
fmsub.s f20, f21, f22, f31, rdn # perform operation
fmsub.s f20, f21, f22, f31, rmm # perform operation
fmsub.s f20, f21, f22, f31, rne # perform operation
fmsub.s f20, f21, f22, f31, rtz # perform operation
fmsub.s f20, f21, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f21, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x423d8f13 # load x3 with value 0x423d8f13
sw x3, 0(x2) # store 0x423d8f13 in memory
flw f24, 0(x2) # load 0x423d8f13 from memory into f24
fmsub.s f7, f25, f11, f24, dyn # perform operation
fmsub.s f7, f25, f11, f24, rdn # perform operation
fmsub.s f7, f25, f11, f24, rmm # perform operation
fmsub.s f7, f25, f11, f24, rne # perform operation
fmsub.s f7, f25, f11, f24, rtz # perform operation
fmsub.s f7, f25, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xb4bc041b # load x3 with value 0xb4bc041b
sw x3, 0(x2) # store 0xb4bc041b in memory
flw f11, 0(x2) # load 0xb4bc041b from memory into f11
fmsub.s f20, f31, f5, f11, dyn # perform operation
fmsub.s f20, f31, f5, f11, rdn # perform operation
fmsub.s f20, f31, f5, f11, rmm # perform operation
fmsub.s f20, f31, f5, f11, rne # perform operation
fmsub.s f20, f31, f5, f11, rtz # perform operation
fmsub.s f20, f31, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x9c595f5a # load x3 with value 0x9c595f5a
sw x3, 0(x2) # store 0x9c595f5a in memory
flw f14, 0(x2) # load 0x9c595f5a from memory into f14
fmsub.s f15, f9, f3, f14, dyn # perform operation
fmsub.s f15, f9, f3, f14, rdn # perform operation
fmsub.s f15, f9, f3, f14, rmm # perform operation
fmsub.s f15, f9, f3, f14, rne # perform operation
fmsub.s f15, f9, f3, f14, rtz # perform operation
fmsub.s f15, f9, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x00e36b06 # load x3 with value 0x00e36b06
sw x3, 0(x2) # store 0x00e36b06 in memory
flw f1, 0(x2) # load 0x00e36b06 from memory into f1
fmsub.s f21, f23, f12, f1, dyn # perform operation
fmsub.s f21, f23, f12, f1, rdn # perform operation
fmsub.s f21, f23, f12, f1, rmm # perform operation
fmsub.s f21, f23, f12, f1, rne # perform operation
fmsub.s f21, f23, f12, f1, rtz # perform operation
fmsub.s f21, f23, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f23, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f23, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f23, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f23, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f23, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xfed8eadc # load x3 with value 0xfed8eadc
sw x3, 0(x2) # store 0xfed8eadc in memory
flw f25, 0(x2) # load 0xfed8eadc from memory into f25
fmsub.s f22, f17, f11, f25, dyn # perform operation
fmsub.s f22, f17, f11, f25, rdn # perform operation
fmsub.s f22, f17, f11, f25, rmm # perform operation
fmsub.s f22, f17, f11, f25, rne # perform operation
fmsub.s f22, f17, f11, f25, rtz # perform operation
fmsub.s f22, f17, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f17, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xa9077ef5 # load x3 with value 0xa9077ef5
sw x3, 0(x2) # store 0xa9077ef5 in memory
flw f18, 0(x2) # load 0xa9077ef5 from memory into f18
fmsub.s f16, f24, f1, f18, dyn # perform operation
fmsub.s f16, f24, f1, f18, rdn # perform operation
fmsub.s f16, f24, f1, f18, rmm # perform operation
fmsub.s f16, f24, f1, f18, rne # perform operation
fmsub.s f16, f24, f1, f18, rtz # perform operation
fmsub.s f16, f24, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xfd0d960a # load x3 with value 0xfd0d960a
sw x3, 0(x2) # store 0xfd0d960a in memory
flw f2, 0(x2) # load 0xfd0d960a from memory into f2
fmsub.s f7, f10, f22, f2, dyn # perform operation
fmsub.s f7, f10, f22, f2, rdn # perform operation
fmsub.s f7, f10, f22, f2, rmm # perform operation
fmsub.s f7, f10, f22, f2, rne # perform operation
fmsub.s f7, f10, f22, f2, rtz # perform operation
fmsub.s f7, f10, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x8a14604c # load x3 with value 0x8a14604c
sw x3, 0(x2) # store 0x8a14604c in memory
flw f23, 0(x2) # load 0x8a14604c from memory into f23
fmsub.s f20, f29, f2, f23, dyn # perform operation
fmsub.s f20, f29, f2, f23, rdn # perform operation
fmsub.s f20, f29, f2, f23, rmm # perform operation
fmsub.s f20, f29, f2, f23, rne # perform operation
fmsub.s f20, f29, f2, f23, rtz # perform operation
fmsub.s f20, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xaf2ef518 # load x3 with value 0xaf2ef518
sw x3, 0(x2) # store 0xaf2ef518 in memory
flw f15, 0(x2) # load 0xaf2ef518 from memory into f15
fmsub.s f3, f21, f16, f15, dyn # perform operation
fmsub.s f3, f21, f16, f15, rdn # perform operation
fmsub.s f3, f21, f16, f15, rmm # perform operation
fmsub.s f3, f21, f16, f15, rne # perform operation
fmsub.s f3, f21, f16, f15, rtz # perform operation
fmsub.s f3, f21, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xe9c3d9fc # load x3 with value 0xe9c3d9fc
sw x3, 0(x2) # store 0xe9c3d9fc in memory
flw f29, 0(x2) # load 0xe9c3d9fc from memory into f29
fmsub.s f22, f31, f16, f29, dyn # perform operation
fmsub.s f22, f31, f16, f29, rdn # perform operation
fmsub.s f22, f31, f16, f29, rmm # perform operation
fmsub.s f22, f31, f16, f29, rne # perform operation
fmsub.s f22, f31, f16, f29, rtz # perform operation
fmsub.s f22, f31, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xff24272d # load x3 with value 0xff24272d
sw x3, 0(x2) # store 0xff24272d in memory
flw f11, 0(x2) # load 0xff24272d from memory into f11
fmsub.s f8, f10, f1, f11, dyn # perform operation
fmsub.s f8, f10, f1, f11, rdn # perform operation
fmsub.s f8, f10, f1, f11, rmm # perform operation
fmsub.s f8, f10, f1, f11, rne # perform operation
fmsub.s f8, f10, f1, f11, rtz # perform operation
fmsub.s f8, f10, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xa92771aa # load x3 with value 0xa92771aa
sw x3, 0(x2) # store 0xa92771aa in memory
flw f16, 0(x2) # load 0xa92771aa from memory into f16
fmsub.s f24, f23, f29, f16, dyn # perform operation
fmsub.s f24, f23, f29, f16, rdn # perform operation
fmsub.s f24, f23, f29, f16, rmm # perform operation
fmsub.s f24, f23, f29, f16, rne # perform operation
fmsub.s f24, f23, f29, f16, rtz # perform operation
fmsub.s f24, f23, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xc212ba5a # load x3 with value 0xc212ba5a
sw x3, 0(x2) # store 0xc212ba5a in memory
flw f12, 0(x2) # load 0xc212ba5a from memory into f12
fmsub.s f29, f16, f21, f12, dyn # perform operation
fmsub.s f29, f16, f21, f12, rdn # perform operation
fmsub.s f29, f16, f21, f12, rmm # perform operation
fmsub.s f29, f16, f21, f12, rne # perform operation
fmsub.s f29, f16, f21, f12, rtz # perform operation
fmsub.s f29, f16, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x6853d8e3 # load x3 with value 0x6853d8e3
sw x3, 0(x2) # store 0x6853d8e3 in memory
flw f17, 0(x2) # load 0x6853d8e3 from memory into f17
fmsub.s f26, f27, f12, f17, dyn # perform operation
fmsub.s f26, f27, f12, f17, rdn # perform operation
fmsub.s f26, f27, f12, f17, rmm # perform operation
fmsub.s f26, f27, f12, f17, rne # perform operation
fmsub.s f26, f27, f12, f17, rtz # perform operation
fmsub.s f26, f27, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xa8a38d95 # load x3 with value 0xa8a38d95
sw x3, 0(x2) # store 0xa8a38d95 in memory
flw f18, 0(x2) # load 0xa8a38d95 from memory into f18
fmsub.s f30, f27, f7, f18, dyn # perform operation
fmsub.s f30, f27, f7, f18, rdn # perform operation
fmsub.s f30, f27, f7, f18, rmm # perform operation
fmsub.s f30, f27, f7, f18, rne # perform operation
fmsub.s f30, f27, f7, f18, rtz # perform operation
fmsub.s f30, f27, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x2121b8bd # load x3 with value 0x2121b8bd
sw x3, 0(x2) # store 0x2121b8bd in memory
flw f28, 0(x2) # load 0x2121b8bd from memory into f28
fmsub.s f23, f8, f10, f28, dyn # perform operation
fmsub.s f23, f8, f10, f28, rdn # perform operation
fmsub.s f23, f8, f10, f28, rmm # perform operation
fmsub.s f23, f8, f10, f28, rne # perform operation
fmsub.s f23, f8, f10, f28, rtz # perform operation
fmsub.s f23, f8, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x578168b0 # load x3 with value 0x578168b0
sw x3, 0(x2) # store 0x578168b0 in memory
flw f8, 0(x2) # load 0x578168b0 from memory into f8
fmsub.s f26, f14, f15, f8, dyn # perform operation
fmsub.s f26, f14, f15, f8, rdn # perform operation
fmsub.s f26, f14, f15, f8, rmm # perform operation
fmsub.s f26, f14, f15, f8, rne # perform operation
fmsub.s f26, f14, f15, f8, rtz # perform operation
fmsub.s f26, f14, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x9ced2f9f # load x3 with value 0x9ced2f9f
sw x3, 0(x2) # store 0x9ced2f9f in memory
flw f6, 0(x2) # load 0x9ced2f9f from memory into f6
fmsub.s f10, f23, f22, f6, dyn # perform operation
fmsub.s f10, f23, f22, f6, rdn # perform operation
fmsub.s f10, f23, f22, f6, rmm # perform operation
fmsub.s f10, f23, f22, f6, rne # perform operation
fmsub.s f10, f23, f22, f6, rtz # perform operation
fmsub.s f10, f23, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x3cf2e167 # load x3 with value 0x3cf2e167
sw x3, 0(x2) # store 0x3cf2e167 in memory
flw f13, 0(x2) # load 0x3cf2e167 from memory into f13
fmsub.s f20, f10, f27, f13, dyn # perform operation
fmsub.s f20, f10, f27, f13, rdn # perform operation
fmsub.s f20, f10, f27, f13, rmm # perform operation
fmsub.s f20, f10, f27, f13, rne # perform operation
fmsub.s f20, f10, f27, f13, rtz # perform operation
fmsub.s f20, f10, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f10, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x99e63676 # load x3 with value 0x99e63676
sw x3, 0(x2) # store 0x99e63676 in memory
flw f14, 0(x2) # load 0x99e63676 from memory into f14
fmsub.s f13, f19, f31, f14, dyn # perform operation
fmsub.s f13, f19, f31, f14, rdn # perform operation
fmsub.s f13, f19, f31, f14, rmm # perform operation
fmsub.s f13, f19, f31, f14, rne # perform operation
fmsub.s f13, f19, f31, f14, rtz # perform operation
fmsub.s f13, f19, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xfcd1012e # load x3 with value 0xfcd1012e
sw x3, 0(x2) # store 0xfcd1012e in memory
flw f15, 0(x2) # load 0xfcd1012e from memory into f15
fmsub.s f27, f25, f10, f15, dyn # perform operation
fmsub.s f27, f25, f10, f15, rdn # perform operation
fmsub.s f27, f25, f10, f15, rmm # perform operation
fmsub.s f27, f25, f10, f15, rne # perform operation
fmsub.s f27, f25, f10, f15, rtz # perform operation
fmsub.s f27, f25, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f25, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f25, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f25, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f25, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f25, f10, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x6ec72ae0 # load x3 with value 0x6ec72ae0
sw x3, 0(x2) # store 0x6ec72ae0 in memory
flw f22, 0(x2) # load 0x6ec72ae0 from memory into f22
fmsub.s f12, f13, f20, f22, dyn # perform operation
fmsub.s f12, f13, f20, f22, rdn # perform operation
fmsub.s f12, f13, f20, f22, rmm # perform operation
fmsub.s f12, f13, f20, f22, rne # perform operation
fmsub.s f12, f13, f20, f22, rtz # perform operation
fmsub.s f12, f13, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xd194a200 # load x3 with value 0xd194a200
sw x3, 0(x2) # store 0xd194a200 in memory
flw f25, 0(x2) # load 0xd194a200 from memory into f25
fmsub.s f10, f23, f30, f25, dyn # perform operation
fmsub.s f10, f23, f30, f25, rdn # perform operation
fmsub.s f10, f23, f30, f25, rmm # perform operation
fmsub.s f10, f23, f30, f25, rne # perform operation
fmsub.s f10, f23, f30, f25, rtz # perform operation
fmsub.s f10, f23, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x6fc6066f # load x3 with value 0x6fc6066f
sw x3, 0(x2) # store 0x6fc6066f in memory
flw f9, 0(x2) # load 0x6fc6066f from memory into f9
fmsub.s f17, f19, f21, f9, dyn # perform operation
fmsub.s f17, f19, f21, f9, rdn # perform operation
fmsub.s f17, f19, f21, f9, rmm # perform operation
fmsub.s f17, f19, f21, f9, rne # perform operation
fmsub.s f17, f19, f21, f9, rtz # perform operation
fmsub.s f17, f19, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xb51f7211 # load x3 with value 0xb51f7211
sw x3, 0(x2) # store 0xb51f7211 in memory
flw f14, 0(x2) # load 0xb51f7211 from memory into f14
fmsub.s f6, f23, f7, f14, dyn # perform operation
fmsub.s f6, f23, f7, f14, rdn # perform operation
fmsub.s f6, f23, f7, f14, rmm # perform operation
fmsub.s f6, f23, f7, f14, rne # perform operation
fmsub.s f6, f23, f7, f14, rtz # perform operation
fmsub.s f6, f23, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x8e4d1a86 # load x3 with value 0x8e4d1a86
sw x3, 0(x2) # store 0x8e4d1a86 in memory
flw f2, 0(x2) # load 0x8e4d1a86 from memory into f2
fmsub.s f9, f15, f7, f2, dyn # perform operation
fmsub.s f9, f15, f7, f2, rdn # perform operation
fmsub.s f9, f15, f7, f2, rmm # perform operation
fmsub.s f9, f15, f7, f2, rne # perform operation
fmsub.s f9, f15, f7, f2, rtz # perform operation
fmsub.s f9, f15, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x6de418ff # load x3 with value 0x6de418ff
sw x3, 0(x2) # store 0x6de418ff in memory
flw f8, 0(x2) # load 0x6de418ff from memory into f8
fmsub.s f7, f13, f24, f8, dyn # perform operation
fmsub.s f7, f13, f24, f8, rdn # perform operation
fmsub.s f7, f13, f24, f8, rmm # perform operation
fmsub.s f7, f13, f24, f8, rne # perform operation
fmsub.s f7, f13, f24, f8, rtz # perform operation
fmsub.s f7, f13, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xce6483e9 # load x3 with value 0xce6483e9
sw x3, 0(x2) # store 0xce6483e9 in memory
flw f23, 0(x2) # load 0xce6483e9 from memory into f23
fmsub.s f2, f12, f19, f23, dyn # perform operation
fmsub.s f2, f12, f19, f23, rdn # perform operation
fmsub.s f2, f12, f19, f23, rmm # perform operation
fmsub.s f2, f12, f19, f23, rne # perform operation
fmsub.s f2, f12, f19, f23, rtz # perform operation
fmsub.s f2, f12, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x3c8078fe # load x3 with value 0x3c8078fe
sw x3, 0(x2) # store 0x3c8078fe in memory
flw f24, 0(x2) # load 0x3c8078fe from memory into f24
fmsub.s f26, f30, f18, f24, dyn # perform operation
fmsub.s f26, f30, f18, f24, rdn # perform operation
fmsub.s f26, f30, f18, f24, rmm # perform operation
fmsub.s f26, f30, f18, f24, rne # perform operation
fmsub.s f26, f30, f18, f24, rtz # perform operation
fmsub.s f26, f30, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x5d78fe7d # load x3 with value 0x5d78fe7d
sw x3, 0(x2) # store 0x5d78fe7d in memory
flw f6, 0(x2) # load 0x5d78fe7d from memory into f6
fmsub.s f29, f10, f11, f6, dyn # perform operation
fmsub.s f29, f10, f11, f6, rdn # perform operation
fmsub.s f29, f10, f11, f6, rmm # perform operation
fmsub.s f29, f10, f11, f6, rne # perform operation
fmsub.s f29, f10, f11, f6, rtz # perform operation
fmsub.s f29, f10, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x3deda6f7 # load x3 with value 0x3deda6f7
sw x3, 0(x2) # store 0x3deda6f7 in memory
flw f23, 0(x2) # load 0x3deda6f7 from memory into f23
fmsub.s f9, f25, f16, f23, dyn # perform operation
fmsub.s f9, f25, f16, f23, rdn # perform operation
fmsub.s f9, f25, f16, f23, rmm # perform operation
fmsub.s f9, f25, f16, f23, rne # perform operation
fmsub.s f9, f25, f16, f23, rtz # perform operation
fmsub.s f9, f25, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f25, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xb619027a # load x3 with value 0xb619027a
sw x3, 0(x2) # store 0xb619027a in memory
flw f8, 0(x2) # load 0xb619027a from memory into f8
fmsub.s f3, f1, f23, f8, dyn # perform operation
fmsub.s f3, f1, f23, f8, rdn # perform operation
fmsub.s f3, f1, f23, f8, rmm # perform operation
fmsub.s f3, f1, f23, f8, rne # perform operation
fmsub.s f3, f1, f23, f8, rtz # perform operation
fmsub.s f3, f1, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f1, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xff862fd5 # load x3 with value 0xff862fd5
sw x3, 0(x2) # store 0xff862fd5 in memory
flw f14, 0(x2) # load 0xff862fd5 from memory into f14
fmsub.s f2, f21, f27, f14, dyn # perform operation
fmsub.s f2, f21, f27, f14, rdn # perform operation
fmsub.s f2, f21, f27, f14, rmm # perform operation
fmsub.s f2, f21, f27, f14, rne # perform operation
fmsub.s f2, f21, f27, f14, rtz # perform operation
fmsub.s f2, f21, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xb0423a76 # load x3 with value 0xb0423a76
sw x3, 0(x2) # store 0xb0423a76 in memory
flw f19, 0(x2) # load 0xb0423a76 from memory into f19
fmsub.s f24, f30, f5, f19, dyn # perform operation
fmsub.s f24, f30, f5, f19, rdn # perform operation
fmsub.s f24, f30, f5, f19, rmm # perform operation
fmsub.s f24, f30, f5, f19, rne # perform operation
fmsub.s f24, f30, f5, f19, rtz # perform operation
fmsub.s f24, f30, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x190fac78 # load x3 with value 0x190fac78
sw x3, 0(x2) # store 0x190fac78 in memory
flw f20, 0(x2) # load 0x190fac78 from memory into f20
fmsub.s f8, f25, f11, f20, dyn # perform operation
fmsub.s f8, f25, f11, f20, rdn # perform operation
fmsub.s f8, f25, f11, f20, rmm # perform operation
fmsub.s f8, f25, f11, f20, rne # perform operation
fmsub.s f8, f25, f11, f20, rtz # perform operation
fmsub.s f8, f25, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x538fdb9e # load x3 with value 0x538fdb9e
sw x3, 0(x2) # store 0x538fdb9e in memory
flw f24, 0(x2) # load 0x538fdb9e from memory into f24
fmsub.s f27, f19, f31, f24, dyn # perform operation
fmsub.s f27, f19, f31, f24, rdn # perform operation
fmsub.s f27, f19, f31, f24, rmm # perform operation
fmsub.s f27, f19, f31, f24, rne # perform operation
fmsub.s f27, f19, f31, f24, rtz # perform operation
fmsub.s f27, f19, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f19, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x9cada4a8 # load x3 with value 0x9cada4a8
sw x3, 0(x2) # store 0x9cada4a8 in memory
flw f10, 0(x2) # load 0x9cada4a8 from memory into f10
fmsub.s f16, f20, f6, f10, dyn # perform operation
fmsub.s f16, f20, f6, f10, rdn # perform operation
fmsub.s f16, f20, f6, f10, rmm # perform operation
fmsub.s f16, f20, f6, f10, rne # perform operation
fmsub.s f16, f20, f6, f10, rtz # perform operation
fmsub.s f16, f20, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f20, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f20, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x70f6487d # load x3 with value 0x70f6487d
sw x3, 0(x2) # store 0x70f6487d in memory
flw f15, 0(x2) # load 0x70f6487d from memory into f15
fmsub.s f5, f1, f25, f15, dyn # perform operation
fmsub.s f5, f1, f25, f15, rdn # perform operation
fmsub.s f5, f1, f25, f15, rmm # perform operation
fmsub.s f5, f1, f25, f15, rne # perform operation
fmsub.s f5, f1, f25, f15, rtz # perform operation
fmsub.s f5, f1, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x51f5d99e # load x3 with value 0x51f5d99e
sw x3, 0(x2) # store 0x51f5d99e in memory
flw f2, 0(x2) # load 0x51f5d99e from memory into f2
fmsub.s f31, f12, f26, f2, dyn # perform operation
fmsub.s f31, f12, f26, f2, rdn # perform operation
fmsub.s f31, f12, f26, f2, rmm # perform operation
fmsub.s f31, f12, f26, f2, rne # perform operation
fmsub.s f31, f12, f26, f2, rtz # perform operation
fmsub.s f31, f12, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x98f542b5 # load x3 with value 0x98f542b5
sw x3, 0(x2) # store 0x98f542b5 in memory
flw f18, 0(x2) # load 0x98f542b5 from memory into f18
fmsub.s f28, f16, f30, f18, dyn # perform operation
fmsub.s f28, f16, f30, f18, rdn # perform operation
fmsub.s f28, f16, f30, f18, rmm # perform operation
fmsub.s f28, f16, f30, f18, rne # perform operation
fmsub.s f28, f16, f30, f18, rtz # perform operation
fmsub.s f28, f16, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xebff1433 # load x3 with value 0xebff1433
sw x3, 0(x2) # store 0xebff1433 in memory
flw f12, 0(x2) # load 0xebff1433 from memory into f12
fmsub.s f5, f6, f13, f12, dyn # perform operation
fmsub.s f5, f6, f13, f12, rdn # perform operation
fmsub.s f5, f6, f13, f12, rmm # perform operation
fmsub.s f5, f6, f13, f12, rne # perform operation
fmsub.s f5, f6, f13, f12, rtz # perform operation
fmsub.s f5, f6, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x672694e6 # load x3 with value 0x672694e6
sw x3, 0(x2) # store 0x672694e6 in memory
flw f8, 0(x2) # load 0x672694e6 from memory into f8
fmsub.s f10, f16, f19, f8, dyn # perform operation
fmsub.s f10, f16, f19, f8, rdn # perform operation
fmsub.s f10, f16, f19, f8, rmm # perform operation
fmsub.s f10, f16, f19, f8, rne # perform operation
fmsub.s f10, f16, f19, f8, rtz # perform operation
fmsub.s f10, f16, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x4bafe757 # load x3 with value 0x4bafe757
sw x3, 0(x2) # store 0x4bafe757 in memory
flw f21, 0(x2) # load 0x4bafe757 from memory into f21
fmsub.s f14, f17, f6, f21, dyn # perform operation
fmsub.s f14, f17, f6, f21, rdn # perform operation
fmsub.s f14, f17, f6, f21, rmm # perform operation
fmsub.s f14, f17, f6, f21, rne # perform operation
fmsub.s f14, f17, f6, f21, rtz # perform operation
fmsub.s f14, f17, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f17, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xffe053bc # load x3 with value 0xffe053bc
sw x3, 0(x2) # store 0xffe053bc in memory
flw f8, 0(x2) # load 0xffe053bc from memory into f8
fmsub.s f14, f16, f11, f8, dyn # perform operation
fmsub.s f14, f16, f11, f8, rdn # perform operation
fmsub.s f14, f16, f11, f8, rmm # perform operation
fmsub.s f14, f16, f11, f8, rne # perform operation
fmsub.s f14, f16, f11, f8, rtz # perform operation
fmsub.s f14, f16, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xed0ebd22 # load x3 with value 0xed0ebd22
sw x3, 0(x2) # store 0xed0ebd22 in memory
flw f1, 0(x2) # load 0xed0ebd22 from memory into f1
fmsub.s f3, f13, f15, f1, dyn # perform operation
fmsub.s f3, f13, f15, f1, rdn # perform operation
fmsub.s f3, f13, f15, f1, rmm # perform operation
fmsub.s f3, f13, f15, f1, rne # perform operation
fmsub.s f3, f13, f15, f1, rtz # perform operation
fmsub.s f3, f13, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f13, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xbfc2f27d # load x3 with value 0xbfc2f27d
sw x3, 0(x2) # store 0xbfc2f27d in memory
flw f30, 0(x2) # load 0xbfc2f27d from memory into f30
fmsub.s f24, f19, f27, f30, dyn # perform operation
fmsub.s f24, f19, f27, f30, rdn # perform operation
fmsub.s f24, f19, f27, f30, rmm # perform operation
fmsub.s f24, f19, f27, f30, rne # perform operation
fmsub.s f24, f19, f27, f30, rtz # perform operation
fmsub.s f24, f19, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x7374d50d # load x3 with value 0x7374d50d
sw x3, 0(x2) # store 0x7374d50d in memory
flw f26, 0(x2) # load 0x7374d50d from memory into f26
fmsub.s f23, f29, f16, f26, dyn # perform operation
fmsub.s f23, f29, f16, f26, rdn # perform operation
fmsub.s f23, f29, f16, f26, rmm # perform operation
fmsub.s f23, f29, f16, f26, rne # perform operation
fmsub.s f23, f29, f16, f26, rtz # perform operation
fmsub.s f23, f29, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x3d2a5572 # load x3 with value 0x3d2a5572
sw x3, 0(x2) # store 0x3d2a5572 in memory
flw f18, 0(x2) # load 0x3d2a5572 from memory into f18
fmsub.s f7, f14, f19, f18, dyn # perform operation
fmsub.s f7, f14, f19, f18, rdn # perform operation
fmsub.s f7, f14, f19, f18, rmm # perform operation
fmsub.s f7, f14, f19, f18, rne # perform operation
fmsub.s f7, f14, f19, f18, rtz # perform operation
fmsub.s f7, f14, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f14, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x7ba02a5f # load x3 with value 0x7ba02a5f
sw x3, 0(x2) # store 0x7ba02a5f in memory
flw f16, 0(x2) # load 0x7ba02a5f from memory into f16
fmsub.s f25, f21, f22, f16, dyn # perform operation
fmsub.s f25, f21, f22, f16, rdn # perform operation
fmsub.s f25, f21, f22, f16, rmm # perform operation
fmsub.s f25, f21, f22, f16, rne # perform operation
fmsub.s f25, f21, f22, f16, rtz # perform operation
fmsub.s f25, f21, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xbf64fec1 # load x3 with value 0xbf64fec1
sw x3, 0(x2) # store 0xbf64fec1 in memory
flw f19, 0(x2) # load 0xbf64fec1 from memory into f19
fmsub.s f29, f1, f8, f19, dyn # perform operation
fmsub.s f29, f1, f8, f19, rdn # perform operation
fmsub.s f29, f1, f8, f19, rmm # perform operation
fmsub.s f29, f1, f8, f19, rne # perform operation
fmsub.s f29, f1, f8, f19, rtz # perform operation
fmsub.s f29, f1, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x337bdbf6 # load x3 with value 0x337bdbf6
sw x3, 0(x2) # store 0x337bdbf6 in memory
flw f23, 0(x2) # load 0x337bdbf6 from memory into f23
fmsub.s f7, f6, f1, f23, dyn # perform operation
fmsub.s f7, f6, f1, f23, rdn # perform operation
fmsub.s f7, f6, f1, f23, rmm # perform operation
fmsub.s f7, f6, f1, f23, rne # perform operation
fmsub.s f7, f6, f1, f23, rtz # perform operation
fmsub.s f7, f6, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x9224735f # load x3 with value 0x9224735f
sw x3, 0(x2) # store 0x9224735f in memory
flw f29, 0(x2) # load 0x9224735f from memory into f29
fmsub.s f26, f2, f8, f29, dyn # perform operation
fmsub.s f26, f2, f8, f29, rdn # perform operation
fmsub.s f26, f2, f8, f29, rmm # perform operation
fmsub.s f26, f2, f8, f29, rne # perform operation
fmsub.s f26, f2, f8, f29, rtz # perform operation
fmsub.s f26, f2, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xd56d7a31 # load x3 with value 0xd56d7a31
sw x3, 0(x2) # store 0xd56d7a31 in memory
flw f2, 0(x2) # load 0xd56d7a31 from memory into f2
fmsub.s f13, f26, f29, f2, dyn # perform operation
fmsub.s f13, f26, f29, f2, rdn # perform operation
fmsub.s f13, f26, f29, f2, rmm # perform operation
fmsub.s f13, f26, f29, f2, rne # perform operation
fmsub.s f13, f26, f29, f2, rtz # perform operation
fmsub.s f13, f26, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f26, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x3ea64a67 # load x3 with value 0x3ea64a67
sw x3, 0(x2) # store 0x3ea64a67 in memory
flw f1, 0(x2) # load 0x3ea64a67 from memory into f1
fmsub.s f7, f30, f23, f1, dyn # perform operation
fmsub.s f7, f30, f23, f1, rdn # perform operation
fmsub.s f7, f30, f23, f1, rmm # perform operation
fmsub.s f7, f30, f23, f1, rne # perform operation
fmsub.s f7, f30, f23, f1, rtz # perform operation
fmsub.s f7, f30, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xb13c996c # load x3 with value 0xb13c996c
sw x3, 0(x2) # store 0xb13c996c in memory
flw f22, 0(x2) # load 0xb13c996c from memory into f22
fmsub.s f19, f1, f27, f22, dyn # perform operation
fmsub.s f19, f1, f27, f22, rdn # perform operation
fmsub.s f19, f1, f27, f22, rmm # perform operation
fmsub.s f19, f1, f27, f22, rne # perform operation
fmsub.s f19, f1, f27, f22, rtz # perform operation
fmsub.s f19, f1, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x6cc5cfd7 # load x3 with value 0x6cc5cfd7
sw x3, 0(x2) # store 0x6cc5cfd7 in memory
flw f7, 0(x2) # load 0x6cc5cfd7 from memory into f7
fmsub.s f28, f1, f16, f7, dyn # perform operation
fmsub.s f28, f1, f16, f7, rdn # perform operation
fmsub.s f28, f1, f16, f7, rmm # perform operation
fmsub.s f28, f1, f16, f7, rne # perform operation
fmsub.s f28, f1, f16, f7, rtz # perform operation
fmsub.s f28, f1, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xf90ae922 # load x3 with value 0xf90ae922
sw x3, 0(x2) # store 0xf90ae922 in memory
flw f9, 0(x2) # load 0xf90ae922 from memory into f9
fmsub.s f31, f17, f30, f9, dyn # perform operation
fmsub.s f31, f17, f30, f9, rdn # perform operation
fmsub.s f31, f17, f30, f9, rmm # perform operation
fmsub.s f31, f17, f30, f9, rne # perform operation
fmsub.s f31, f17, f30, f9, rtz # perform operation
fmsub.s f31, f17, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x75c96bc8 # load x3 with value 0x75c96bc8
sw x3, 0(x2) # store 0x75c96bc8 in memory
flw f30, 0(x2) # load 0x75c96bc8 from memory into f30
fmsub.s f1, f26, f15, f30, dyn # perform operation
fmsub.s f1, f26, f15, f30, rdn # perform operation
fmsub.s f1, f26, f15, f30, rmm # perform operation
fmsub.s f1, f26, f15, f30, rne # perform operation
fmsub.s f1, f26, f15, f30, rtz # perform operation
fmsub.s f1, f26, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x63497e24 # load x3 with value 0x63497e24
sw x3, 0(x2) # store 0x63497e24 in memory
flw f7, 0(x2) # load 0x63497e24 from memory into f7
fmsub.s f2, f15, f13, f7, dyn # perform operation
fmsub.s f2, f15, f13, f7, rdn # perform operation
fmsub.s f2, f15, f13, f7, rmm # perform operation
fmsub.s f2, f15, f13, f7, rne # perform operation
fmsub.s f2, f15, f13, f7, rtz # perform operation
fmsub.s f2, f15, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x51b01f6d # load x3 with value 0x51b01f6d
sw x3, 0(x2) # store 0x51b01f6d in memory
flw f28, 0(x2) # load 0x51b01f6d from memory into f28
fmsub.s f21, f20, f17, f28, dyn # perform operation
fmsub.s f21, f20, f17, f28, rdn # perform operation
fmsub.s f21, f20, f17, f28, rmm # perform operation
fmsub.s f21, f20, f17, f28, rne # perform operation
fmsub.s f21, f20, f17, f28, rtz # perform operation
fmsub.s f21, f20, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x4d910456 # load x3 with value 0x4d910456
sw x3, 0(x2) # store 0x4d910456 in memory
flw f9, 0(x2) # load 0x4d910456 from memory into f9
fmsub.s f22, f21, f5, f9, dyn # perform operation
fmsub.s f22, f21, f5, f9, rdn # perform operation
fmsub.s f22, f21, f5, f9, rmm # perform operation
fmsub.s f22, f21, f5, f9, rne # perform operation
fmsub.s f22, f21, f5, f9, rtz # perform operation
fmsub.s f22, f21, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f21, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xa88e397b # load x3 with value 0xa88e397b
sw x3, 0(x2) # store 0xa88e397b in memory
flw f21, 0(x2) # load 0xa88e397b from memory into f21
fmsub.s f26, f18, f6, f21, dyn # perform operation
fmsub.s f26, f18, f6, f21, rdn # perform operation
fmsub.s f26, f18, f6, f21, rmm # perform operation
fmsub.s f26, f18, f6, f21, rne # perform operation
fmsub.s f26, f18, f6, f21, rtz # perform operation
fmsub.s f26, f18, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x1c8cdaae # load x3 with value 0x1c8cdaae
sw x3, 0(x2) # store 0x1c8cdaae in memory
flw f25, 0(x2) # load 0x1c8cdaae from memory into f25
fmsub.s f23, f18, f31, f25, dyn # perform operation
fmsub.s f23, f18, f31, f25, rdn # perform operation
fmsub.s f23, f18, f31, f25, rmm # perform operation
fmsub.s f23, f18, f31, f25, rne # perform operation
fmsub.s f23, f18, f31, f25, rtz # perform operation
fmsub.s f23, f18, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x5ab02e7b # load x3 with value 0x5ab02e7b
sw x3, 0(x2) # store 0x5ab02e7b in memory
flw f8, 0(x2) # load 0x5ab02e7b from memory into f8
fmsub.s f1, f30, f3, f8, dyn # perform operation
fmsub.s f1, f30, f3, f8, rdn # perform operation
fmsub.s f1, f30, f3, f8, rmm # perform operation
fmsub.s f1, f30, f3, f8, rne # perform operation
fmsub.s f1, f30, f3, f8, rtz # perform operation
fmsub.s f1, f30, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x866d8830 # load x3 with value 0x866d8830
sw x3, 0(x2) # store 0x866d8830 in memory
flw f2, 0(x2) # load 0x866d8830 from memory into f2
fmsub.s f29, f19, f13, f2, dyn # perform operation
fmsub.s f29, f19, f13, f2, rdn # perform operation
fmsub.s f29, f19, f13, f2, rmm # perform operation
fmsub.s f29, f19, f13, f2, rne # perform operation
fmsub.s f29, f19, f13, f2, rtz # perform operation
fmsub.s f29, f19, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xa84b5aa2 # load x3 with value 0xa84b5aa2
sw x3, 0(x2) # store 0xa84b5aa2 in memory
flw f8, 0(x2) # load 0xa84b5aa2 from memory into f8
fmsub.s f14, f25, f26, f8, dyn # perform operation
fmsub.s f14, f25, f26, f8, rdn # perform operation
fmsub.s f14, f25, f26, f8, rmm # perform operation
fmsub.s f14, f25, f26, f8, rne # perform operation
fmsub.s f14, f25, f26, f8, rtz # perform operation
fmsub.s f14, f25, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x46753252 # load x3 with value 0x46753252
sw x3, 0(x2) # store 0x46753252 in memory
flw f27, 0(x2) # load 0x46753252 from memory into f27
fmsub.s f18, f1, f13, f27, dyn # perform operation
fmsub.s f18, f1, f13, f27, rdn # perform operation
fmsub.s f18, f1, f13, f27, rmm # perform operation
fmsub.s f18, f1, f13, f27, rne # perform operation
fmsub.s f18, f1, f13, f27, rtz # perform operation
fmsub.s f18, f1, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f1, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x4f797a12 # load x3 with value 0x4f797a12
sw x3, 0(x2) # store 0x4f797a12 in memory
flw f16, 0(x2) # load 0x4f797a12 from memory into f16
fmsub.s f26, f3, f24, f16, dyn # perform operation
fmsub.s f26, f3, f24, f16, rdn # perform operation
fmsub.s f26, f3, f24, f16, rmm # perform operation
fmsub.s f26, f3, f24, f16, rne # perform operation
fmsub.s f26, f3, f24, f16, rtz # perform operation
fmsub.s f26, f3, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x280cbbcf # load x3 with value 0x280cbbcf
sw x3, 0(x2) # store 0x280cbbcf in memory
flw f5, 0(x2) # load 0x280cbbcf from memory into f5
fmsub.s f8, f3, f16, f5, dyn # perform operation
fmsub.s f8, f3, f16, f5, rdn # perform operation
fmsub.s f8, f3, f16, f5, rmm # perform operation
fmsub.s f8, f3, f16, f5, rne # perform operation
fmsub.s f8, f3, f16, f5, rtz # perform operation
fmsub.s f8, f3, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x5e23becd # load x3 with value 0x5e23becd
sw x3, 0(x2) # store 0x5e23becd in memory
flw f12, 0(x2) # load 0x5e23becd from memory into f12
fmsub.s f15, f28, f2, f12, dyn # perform operation
fmsub.s f15, f28, f2, f12, rdn # perform operation
fmsub.s f15, f28, f2, f12, rmm # perform operation
fmsub.s f15, f28, f2, f12, rne # perform operation
fmsub.s f15, f28, f2, f12, rtz # perform operation
fmsub.s f15, f28, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x464fe958 # load x3 with value 0x464fe958
sw x3, 0(x2) # store 0x464fe958 in memory
flw f30, 0(x2) # load 0x464fe958 from memory into f30
fmsub.s f18, f26, f22, f30, dyn # perform operation
fmsub.s f18, f26, f22, f30, rdn # perform operation
fmsub.s f18, f26, f22, f30, rmm # perform operation
fmsub.s f18, f26, f22, f30, rne # perform operation
fmsub.s f18, f26, f22, f30, rtz # perform operation
fmsub.s f18, f26, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xce38e96e # load x3 with value 0xce38e96e
sw x3, 0(x2) # store 0xce38e96e in memory
flw f19, 0(x2) # load 0xce38e96e from memory into f19
fmsub.s f25, f13, f16, f19, dyn # perform operation
fmsub.s f25, f13, f16, f19, rdn # perform operation
fmsub.s f25, f13, f16, f19, rmm # perform operation
fmsub.s f25, f13, f16, f19, rne # perform operation
fmsub.s f25, f13, f16, f19, rtz # perform operation
fmsub.s f25, f13, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xa8e677ab # load x3 with value 0xa8e677ab
sw x3, 0(x2) # store 0xa8e677ab in memory
flw f3, 0(x2) # load 0xa8e677ab from memory into f3
fmsub.s f27, f7, f26, f3, dyn # perform operation
fmsub.s f27, f7, f26, f3, rdn # perform operation
fmsub.s f27, f7, f26, f3, rmm # perform operation
fmsub.s f27, f7, f26, f3, rne # perform operation
fmsub.s f27, f7, f26, f3, rtz # perform operation
fmsub.s f27, f7, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x8cbf109c # load x3 with value 0x8cbf109c
sw x3, 0(x2) # store 0x8cbf109c in memory
flw f16, 0(x2) # load 0x8cbf109c from memory into f16
fmsub.s f2, f31, f25, f16, dyn # perform operation
fmsub.s f2, f31, f25, f16, rdn # perform operation
fmsub.s f2, f31, f25, f16, rmm # perform operation
fmsub.s f2, f31, f25, f16, rne # perform operation
fmsub.s f2, f31, f25, f16, rtz # perform operation
fmsub.s f2, f31, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x199a184b # load x3 with value 0x199a184b
sw x3, 0(x2) # store 0x199a184b in memory
flw f1, 0(x2) # load 0x199a184b from memory into f1
fmsub.s f9, f7, f18, f1, dyn # perform operation
fmsub.s f9, f7, f18, f1, rdn # perform operation
fmsub.s f9, f7, f18, f1, rmm # perform operation
fmsub.s f9, f7, f18, f1, rne # perform operation
fmsub.s f9, f7, f18, f1, rtz # perform operation
fmsub.s f9, f7, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7b0633f4 # load x3 with value 0x7b0633f4
sw x3, 0(x2) # store 0x7b0633f4 in memory
flw f9, 0(x2) # load 0x7b0633f4 from memory into f9
fmsub.s f1, f29, f31, f9, dyn # perform operation
fmsub.s f1, f29, f31, f9, rdn # perform operation
fmsub.s f1, f29, f31, f9, rmm # perform operation
fmsub.s f1, f29, f31, f9, rne # perform operation
fmsub.s f1, f29, f31, f9, rtz # perform operation
fmsub.s f1, f29, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f29, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x645278e5 # load x3 with value 0x645278e5
sw x3, 0(x2) # store 0x645278e5 in memory
flw f18, 0(x2) # load 0x645278e5 from memory into f18
fmsub.s f25, f31, f26, f18, dyn # perform operation
fmsub.s f25, f31, f26, f18, rdn # perform operation
fmsub.s f25, f31, f26, f18, rmm # perform operation
fmsub.s f25, f31, f26, f18, rne # perform operation
fmsub.s f25, f31, f26, f18, rtz # perform operation
fmsub.s f25, f31, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f31, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x17c23614 # load x3 with value 0x17c23614
sw x3, 0(x2) # store 0x17c23614 in memory
flw f20, 0(x2) # load 0x17c23614 from memory into f20
fmsub.s f29, f12, f11, f20, dyn # perform operation
fmsub.s f29, f12, f11, f20, rdn # perform operation
fmsub.s f29, f12, f11, f20, rmm # perform operation
fmsub.s f29, f12, f11, f20, rne # perform operation
fmsub.s f29, f12, f11, f20, rtz # perform operation
fmsub.s f29, f12, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f12, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x9d6940a6 # load x3 with value 0x9d6940a6
sw x3, 0(x2) # store 0x9d6940a6 in memory
flw f28, 0(x2) # load 0x9d6940a6 from memory into f28
fmsub.s f5, f1, f15, f28, dyn # perform operation
fmsub.s f5, f1, f15, f28, rdn # perform operation
fmsub.s f5, f1, f15, f28, rmm # perform operation
fmsub.s f5, f1, f15, f28, rne # perform operation
fmsub.s f5, f1, f15, f28, rtz # perform operation
fmsub.s f5, f1, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x1979e4ab # load x3 with value 0x1979e4ab
sw x3, 0(x2) # store 0x1979e4ab in memory
flw f11, 0(x2) # load 0x1979e4ab from memory into f11
fmsub.s f27, f28, f26, f11, dyn # perform operation
fmsub.s f27, f28, f26, f11, rdn # perform operation
fmsub.s f27, f28, f26, f11, rmm # perform operation
fmsub.s f27, f28, f26, f11, rne # perform operation
fmsub.s f27, f28, f26, f11, rtz # perform operation
fmsub.s f27, f28, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x5b3b8372 # load x3 with value 0x5b3b8372
sw x3, 0(x2) # store 0x5b3b8372 in memory
flw f14, 0(x2) # load 0x5b3b8372 from memory into f14
fmsub.s f15, f8, f17, f14, dyn # perform operation
fmsub.s f15, f8, f17, f14, rdn # perform operation
fmsub.s f15, f8, f17, f14, rmm # perform operation
fmsub.s f15, f8, f17, f14, rne # perform operation
fmsub.s f15, f8, f17, f14, rtz # perform operation
fmsub.s f15, f8, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x54f713f1 # load x3 with value 0x54f713f1
sw x3, 0(x2) # store 0x54f713f1 in memory
flw f23, 0(x2) # load 0x54f713f1 from memory into f23
fmsub.s f1, f29, f16, f23, dyn # perform operation
fmsub.s f1, f29, f16, f23, rdn # perform operation
fmsub.s f1, f29, f16, f23, rmm # perform operation
fmsub.s f1, f29, f16, f23, rne # perform operation
fmsub.s f1, f29, f16, f23, rtz # perform operation
fmsub.s f1, f29, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f29, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xd4d28919 # load x3 with value 0xd4d28919
sw x3, 0(x2) # store 0xd4d28919 in memory
flw f22, 0(x2) # load 0xd4d28919 from memory into f22
fmsub.s f3, f7, f1, f22, dyn # perform operation
fmsub.s f3, f7, f1, f22, rdn # perform operation
fmsub.s f3, f7, f1, f22, rmm # perform operation
fmsub.s f3, f7, f1, f22, rne # perform operation
fmsub.s f3, f7, f1, f22, rtz # perform operation
fmsub.s f3, f7, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x70d4e50d # load x3 with value 0x70d4e50d
sw x3, 0(x2) # store 0x70d4e50d in memory
flw f20, 0(x2) # load 0x70d4e50d from memory into f20
fmsub.s f1, f7, f11, f20, dyn # perform operation
fmsub.s f1, f7, f11, f20, rdn # perform operation
fmsub.s f1, f7, f11, f20, rmm # perform operation
fmsub.s f1, f7, f11, f20, rne # perform operation
fmsub.s f1, f7, f11, f20, rtz # perform operation
fmsub.s f1, f7, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xc25e12f2 # load x3 with value 0xc25e12f2
sw x3, 0(x2) # store 0xc25e12f2 in memory
flw f21, 0(x2) # load 0xc25e12f2 from memory into f21
fmsub.s f24, f15, f31, f21, dyn # perform operation
fmsub.s f24, f15, f31, f21, rdn # perform operation
fmsub.s f24, f15, f31, f21, rmm # perform operation
fmsub.s f24, f15, f31, f21, rne # perform operation
fmsub.s f24, f15, f31, f21, rtz # perform operation
fmsub.s f24, f15, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x6fed863e # load x3 with value 0x6fed863e
sw x3, 0(x2) # store 0x6fed863e in memory
flw f16, 0(x2) # load 0x6fed863e from memory into f16
fmsub.s f26, f30, f9, f16, dyn # perform operation
fmsub.s f26, f30, f9, f16, rdn # perform operation
fmsub.s f26, f30, f9, f16, rmm # perform operation
fmsub.s f26, f30, f9, f16, rne # perform operation
fmsub.s f26, f30, f9, f16, rtz # perform operation
fmsub.s f26, f30, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x337bbd2b # load x3 with value 0x337bbd2b
sw x3, 0(x2) # store 0x337bbd2b in memory
flw f22, 0(x2) # load 0x337bbd2b from memory into f22
fmsub.s f23, f12, f8, f22, dyn # perform operation
fmsub.s f23, f12, f8, f22, rdn # perform operation
fmsub.s f23, f12, f8, f22, rmm # perform operation
fmsub.s f23, f12, f8, f22, rne # perform operation
fmsub.s f23, f12, f8, f22, rtz # perform operation
fmsub.s f23, f12, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xae4c4d75 # load x3 with value 0xae4c4d75
sw x3, 0(x2) # store 0xae4c4d75 in memory
flw f15, 0(x2) # load 0xae4c4d75 from memory into f15
fmsub.s f23, f10, f27, f15, dyn # perform operation
fmsub.s f23, f10, f27, f15, rdn # perform operation
fmsub.s f23, f10, f27, f15, rmm # perform operation
fmsub.s f23, f10, f27, f15, rne # perform operation
fmsub.s f23, f10, f27, f15, rtz # perform operation
fmsub.s f23, f10, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x291ee82e # load x3 with value 0x291ee82e
sw x3, 0(x2) # store 0x291ee82e in memory
flw f28, 0(x2) # load 0x291ee82e from memory into f28
fmsub.s f27, f15, f23, f28, dyn # perform operation
fmsub.s f27, f15, f23, f28, rdn # perform operation
fmsub.s f27, f15, f23, f28, rmm # perform operation
fmsub.s f27, f15, f23, f28, rne # perform operation
fmsub.s f27, f15, f23, f28, rtz # perform operation
fmsub.s f27, f15, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x90f1cf89 # load x3 with value 0x90f1cf89
sw x3, 0(x2) # store 0x90f1cf89 in memory
flw f21, 0(x2) # load 0x90f1cf89 from memory into f21
fmsub.s f11, f27, f9, f21, dyn # perform operation
fmsub.s f11, f27, f9, f21, rdn # perform operation
fmsub.s f11, f27, f9, f21, rmm # perform operation
fmsub.s f11, f27, f9, f21, rne # perform operation
fmsub.s f11, f27, f9, f21, rtz # perform operation
fmsub.s f11, f27, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0xc3e7cf3b # load x3 with value 0xc3e7cf3b
sw x3, 0(x2) # store 0xc3e7cf3b in memory
flw f23, 0(x2) # load 0xc3e7cf3b from memory into f23
fmsub.s f29, f14, f5, f23, dyn # perform operation
fmsub.s f29, f14, f5, f23, rdn # perform operation
fmsub.s f29, f14, f5, f23, rmm # perform operation
fmsub.s f29, f14, f5, f23, rne # perform operation
fmsub.s f29, f14, f5, f23, rtz # perform operation
fmsub.s f29, f14, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f14, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x32389f79 # load x3 with value 0x32389f79
sw x3, 0(x2) # store 0x32389f79 in memory
flw f22, 0(x2) # load 0x32389f79 from memory into f22
fmsub.s f9, f2, f23, f22, dyn # perform operation
fmsub.s f9, f2, f23, f22, rdn # perform operation
fmsub.s f9, f2, f23, f22, rmm # perform operation
fmsub.s f9, f2, f23, f22, rne # perform operation
fmsub.s f9, f2, f23, f22, rtz # perform operation
fmsub.s f9, f2, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f2, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x529932af # load x3 with value 0x529932af
sw x3, 0(x2) # store 0x529932af in memory
flw f12, 0(x2) # load 0x529932af from memory into f12
fmsub.s f1, f11, f26, f12, dyn # perform operation
fmsub.s f1, f11, f26, f12, rdn # perform operation
fmsub.s f1, f11, f26, f12, rmm # perform operation
fmsub.s f1, f11, f26, f12, rne # perform operation
fmsub.s f1, f11, f26, f12, rtz # perform operation
fmsub.s f1, f11, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x08c43adc # load x3 with value 0x08c43adc
sw x3, 0(x2) # store 0x08c43adc in memory
flw f15, 0(x2) # load 0x08c43adc from memory into f15
fmsub.s f28, f22, f11, f15, dyn # perform operation
fmsub.s f28, f22, f11, f15, rdn # perform operation
fmsub.s f28, f22, f11, f15, rmm # perform operation
fmsub.s f28, f22, f11, f15, rne # perform operation
fmsub.s f28, f22, f11, f15, rtz # perform operation
fmsub.s f28, f22, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x19e6a26d # load x3 with value 0x19e6a26d
sw x3, 0(x2) # store 0x19e6a26d in memory
flw f1, 0(x2) # load 0x19e6a26d from memory into f1
fmsub.s f6, f15, f25, f1, dyn # perform operation
fmsub.s f6, f15, f25, f1, rdn # perform operation
fmsub.s f6, f15, f25, f1, rmm # perform operation
fmsub.s f6, f15, f25, f1, rne # perform operation
fmsub.s f6, f15, f25, f1, rtz # perform operation
fmsub.s f6, f15, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x44a273f7 # load x3 with value 0x44a273f7
sw x3, 0(x2) # store 0x44a273f7 in memory
flw f24, 0(x2) # load 0x44a273f7 from memory into f24
fmsub.s f9, f25, f22, f24, dyn # perform operation
fmsub.s f9, f25, f22, f24, rdn # perform operation
fmsub.s f9, f25, f22, f24, rmm # perform operation
fmsub.s f9, f25, f22, f24, rne # perform operation
fmsub.s f9, f25, f22, f24, rtz # perform operation
fmsub.s f9, f25, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f25, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f25, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f25, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f25, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f25, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xfb2180fa # load x3 with value 0xfb2180fa
sw x3, 0(x2) # store 0xfb2180fa in memory
flw f28, 0(x2) # load 0xfb2180fa from memory into f28
fmsub.s f29, f22, f13, f28, dyn # perform operation
fmsub.s f29, f22, f13, f28, rdn # perform operation
fmsub.s f29, f22, f13, f28, rmm # perform operation
fmsub.s f29, f22, f13, f28, rne # perform operation
fmsub.s f29, f22, f13, f28, rtz # perform operation
fmsub.s f29, f22, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f22, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f22, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f22, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f22, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f22, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x0ed89190 # load x3 with value 0x0ed89190
sw x3, 0(x2) # store 0x0ed89190 in memory
flw f22, 0(x2) # load 0x0ed89190 from memory into f22
fmsub.s f24, f21, f6, f22, dyn # perform operation
fmsub.s f24, f21, f6, f22, rdn # perform operation
fmsub.s f24, f21, f6, f22, rmm # perform operation
fmsub.s f24, f21, f6, f22, rne # perform operation
fmsub.s f24, f21, f6, f22, rtz # perform operation
fmsub.s f24, f21, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x9b468130 # load x3 with value 0x9b468130
sw x3, 0(x2) # store 0x9b468130 in memory
flw f23, 0(x2) # load 0x9b468130 from memory into f23
fmsub.s f11, f31, f14, f23, dyn # perform operation
fmsub.s f11, f31, f14, f23, rdn # perform operation
fmsub.s f11, f31, f14, f23, rmm # perform operation
fmsub.s f11, f31, f14, f23, rne # perform operation
fmsub.s f11, f31, f14, f23, rtz # perform operation
fmsub.s f11, f31, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x7a1b76e9 # load x3 with value 0x7a1b76e9
sw x3, 0(x2) # store 0x7a1b76e9 in memory
flw f17, 0(x2) # load 0x7a1b76e9 from memory into f17
fmsub.s f28, f31, f19, f17, dyn # perform operation
fmsub.s f28, f31, f19, f17, rdn # perform operation
fmsub.s f28, f31, f19, f17, rmm # perform operation
fmsub.s f28, f31, f19, f17, rne # perform operation
fmsub.s f28, f31, f19, f17, rtz # perform operation
fmsub.s f28, f31, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f31, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x43468ede # load x3 with value 0x43468ede
sw x3, 0(x2) # store 0x43468ede in memory
flw f6, 0(x2) # load 0x43468ede from memory into f6
fmsub.s f16, f13, f12, f6, dyn # perform operation
fmsub.s f16, f13, f12, f6, rdn # perform operation
fmsub.s f16, f13, f12, f6, rmm # perform operation
fmsub.s f16, f13, f12, f6, rne # perform operation
fmsub.s f16, f13, f12, f6, rtz # perform operation
fmsub.s f16, f13, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x107f04e2 # load x3 with value 0x107f04e2
sw x3, 0(x2) # store 0x107f04e2 in memory
flw f16, 0(x2) # load 0x107f04e2 from memory into f16
fmsub.s f27, f1, f3, f16, dyn # perform operation
fmsub.s f27, f1, f3, f16, rdn # perform operation
fmsub.s f27, f1, f3, f16, rmm # perform operation
fmsub.s f27, f1, f3, f16, rne # perform operation
fmsub.s f27, f1, f3, f16, rtz # perform operation
fmsub.s f27, f1, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x3a707cb5 # load x3 with value 0x3a707cb5
sw x3, 0(x2) # store 0x3a707cb5 in memory
flw f10, 0(x2) # load 0x3a707cb5 from memory into f10
fmsub.s f13, f23, f26, f10, dyn # perform operation
fmsub.s f13, f23, f26, f10, rdn # perform operation
fmsub.s f13, f23, f26, f10, rmm # perform operation
fmsub.s f13, f23, f26, f10, rne # perform operation
fmsub.s f13, f23, f26, f10, rtz # perform operation
fmsub.s f13, f23, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x405b33a9 # load x3 with value 0x405b33a9
sw x3, 0(x2) # store 0x405b33a9 in memory
flw f14, 0(x2) # load 0x405b33a9 from memory into f14
fmsub.s f1, f13, f26, f14, dyn # perform operation
fmsub.s f1, f13, f26, f14, rdn # perform operation
fmsub.s f1, f13, f26, f14, rmm # perform operation
fmsub.s f1, f13, f26, f14, rne # perform operation
fmsub.s f1, f13, f26, f14, rtz # perform operation
fmsub.s f1, f13, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f13, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xf127d404 # load x3 with value 0xf127d404
sw x3, 0(x2) # store 0xf127d404 in memory
flw f2, 0(x2) # load 0xf127d404 from memory into f2
fmsub.s f24, f1, f25, f2, dyn # perform operation
fmsub.s f24, f1, f25, f2, rdn # perform operation
fmsub.s f24, f1, f25, f2, rmm # perform operation
fmsub.s f24, f1, f25, f2, rne # perform operation
fmsub.s f24, f1, f25, f2, rtz # perform operation
fmsub.s f24, f1, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xcfd3a57e # load x3 with value 0xcfd3a57e
sw x3, 0(x2) # store 0xcfd3a57e in memory
flw f13, 0(x2) # load 0xcfd3a57e from memory into f13
fmsub.s f10, f29, f6, f13, dyn # perform operation
fmsub.s f10, f29, f6, f13, rdn # perform operation
fmsub.s f10, f29, f6, f13, rmm # perform operation
fmsub.s f10, f29, f6, f13, rne # perform operation
fmsub.s f10, f29, f6, f13, rtz # perform operation
fmsub.s f10, f29, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f29, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x8571ff53 # load x3 with value 0x8571ff53
sw x3, 0(x2) # store 0x8571ff53 in memory
flw f14, 0(x2) # load 0x8571ff53 from memory into f14
fmsub.s f3, f22, f28, f14, dyn # perform operation
fmsub.s f3, f22, f28, f14, rdn # perform operation
fmsub.s f3, f22, f28, f14, rmm # perform operation
fmsub.s f3, f22, f28, f14, rne # perform operation
fmsub.s f3, f22, f28, f14, rtz # perform operation
fmsub.s f3, f22, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f22, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f22, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f22, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f22, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f22, f28, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x4a7b6144 # load x3 with value 0x4a7b6144
sw x3, 0(x2) # store 0x4a7b6144 in memory
flw f31, 0(x2) # load 0x4a7b6144 from memory into f31
fmsub.s f6, f12, f23, f31, dyn # perform operation
fmsub.s f6, f12, f23, f31, rdn # perform operation
fmsub.s f6, f12, f23, f31, rmm # perform operation
fmsub.s f6, f12, f23, f31, rne # perform operation
fmsub.s f6, f12, f23, f31, rtz # perform operation
fmsub.s f6, f12, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f12, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f12, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f12, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f12, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f12, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x2c28592b # load x3 with value 0x2c28592b
sw x3, 0(x2) # store 0x2c28592b in memory
flw f21, 0(x2) # load 0x2c28592b from memory into f21
fmsub.s f18, f6, f15, f21, dyn # perform operation
fmsub.s f18, f6, f15, f21, rdn # perform operation
fmsub.s f18, f6, f15, f21, rmm # perform operation
fmsub.s f18, f6, f15, f21, rne # perform operation
fmsub.s f18, f6, f15, f21, rtz # perform operation
fmsub.s f18, f6, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x8f6e7c64 # load x3 with value 0x8f6e7c64
sw x3, 0(x2) # store 0x8f6e7c64 in memory
flw f13, 0(x2) # load 0x8f6e7c64 from memory into f13
fmsub.s f3, f6, f18, f13, dyn # perform operation
fmsub.s f3, f6, f18, f13, rdn # perform operation
fmsub.s f3, f6, f18, f13, rmm # perform operation
fmsub.s f3, f6, f18, f13, rne # perform operation
fmsub.s f3, f6, f18, f13, rtz # perform operation
fmsub.s f3, f6, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xa1302d86 # load x3 with value 0xa1302d86
sw x3, 0(x2) # store 0xa1302d86 in memory
flw f23, 0(x2) # load 0xa1302d86 from memory into f23
fmsub.s f19, f10, f13, f23, dyn # perform operation
fmsub.s f19, f10, f13, f23, rdn # perform operation
fmsub.s f19, f10, f13, f23, rmm # perform operation
fmsub.s f19, f10, f13, f23, rne # perform operation
fmsub.s f19, f10, f13, f23, rtz # perform operation
fmsub.s f19, f10, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xf0e3ff66 # load x3 with value 0xf0e3ff66
sw x3, 0(x2) # store 0xf0e3ff66 in memory
flw f9, 0(x2) # load 0xf0e3ff66 from memory into f9
fmsub.s f28, f18, f16, f9, dyn # perform operation
fmsub.s f28, f18, f16, f9, rdn # perform operation
fmsub.s f28, f18, f16, f9, rmm # perform operation
fmsub.s f28, f18, f16, f9, rne # perform operation
fmsub.s f28, f18, f16, f9, rtz # perform operation
fmsub.s f28, f18, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x2b332a27 # load x3 with value 0x2b332a27
sw x3, 0(x2) # store 0x2b332a27 in memory
flw f23, 0(x2) # load 0x2b332a27 from memory into f23
fmsub.s f24, f21, f9, f23, dyn # perform operation
fmsub.s f24, f21, f9, f23, rdn # perform operation
fmsub.s f24, f21, f9, f23, rmm # perform operation
fmsub.s f24, f21, f9, f23, rne # perform operation
fmsub.s f24, f21, f9, f23, rtz # perform operation
fmsub.s f24, f21, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x14e797b1 # load x3 with value 0x14e797b1
sw x3, 0(x2) # store 0x14e797b1 in memory
flw f11, 0(x2) # load 0x14e797b1 from memory into f11
fmsub.s f19, f28, f22, f11, dyn # perform operation
fmsub.s f19, f28, f22, f11, rdn # perform operation
fmsub.s f19, f28, f22, f11, rmm # perform operation
fmsub.s f19, f28, f22, f11, rne # perform operation
fmsub.s f19, f28, f22, f11, rtz # perform operation
fmsub.s f19, f28, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xde57a329 # load x3 with value 0xde57a329
sw x3, 0(x2) # store 0xde57a329 in memory
flw f2, 0(x2) # load 0xde57a329 from memory into f2
fmsub.s f23, f10, f5, f2, dyn # perform operation
fmsub.s f23, f10, f5, f2, rdn # perform operation
fmsub.s f23, f10, f5, f2, rmm # perform operation
fmsub.s f23, f10, f5, f2, rne # perform operation
fmsub.s f23, f10, f5, f2, rtz # perform operation
fmsub.s f23, f10, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x423f8b81 # load x3 with value 0x423f8b81
sw x3, 0(x2) # store 0x423f8b81 in memory
flw f21, 0(x2) # load 0x423f8b81 from memory into f21
fmsub.s f16, f27, f15, f21, dyn # perform operation
fmsub.s f16, f27, f15, f21, rdn # perform operation
fmsub.s f16, f27, f15, f21, rmm # perform operation
fmsub.s f16, f27, f15, f21, rne # perform operation
fmsub.s f16, f27, f15, f21, rtz # perform operation
fmsub.s f16, f27, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x96cf4773 # load x3 with value 0x96cf4773
sw x3, 0(x2) # store 0x96cf4773 in memory
flw f6, 0(x2) # load 0x96cf4773 from memory into f6
fmsub.s f15, f23, f31, f6, dyn # perform operation
fmsub.s f15, f23, f31, f6, rdn # perform operation
fmsub.s f15, f23, f31, f6, rmm # perform operation
fmsub.s f15, f23, f31, f6, rne # perform operation
fmsub.s f15, f23, f31, f6, rtz # perform operation
fmsub.s f15, f23, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x68f5ecea # load x3 with value 0x68f5ecea
sw x3, 0(x2) # store 0x68f5ecea in memory
flw f23, 0(x2) # load 0x68f5ecea from memory into f23
fmsub.s f28, f19, f8, f23, dyn # perform operation
fmsub.s f28, f19, f8, f23, rdn # perform operation
fmsub.s f28, f19, f8, f23, rmm # perform operation
fmsub.s f28, f19, f8, f23, rne # perform operation
fmsub.s f28, f19, f8, f23, rtz # perform operation
fmsub.s f28, f19, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x897f22d3 # load x3 with value 0x897f22d3
sw x3, 0(x2) # store 0x897f22d3 in memory
flw f29, 0(x2) # load 0x897f22d3 from memory into f29
fmsub.s f28, f30, f12, f29, dyn # perform operation
fmsub.s f28, f30, f12, f29, rdn # perform operation
fmsub.s f28, f30, f12, f29, rmm # perform operation
fmsub.s f28, f30, f12, f29, rne # perform operation
fmsub.s f28, f30, f12, f29, rtz # perform operation
fmsub.s f28, f30, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x2a3c9f02 # load x3 with value 0x2a3c9f02
sw x3, 0(x2) # store 0x2a3c9f02 in memory
flw f24, 0(x2) # load 0x2a3c9f02 from memory into f24
fmsub.s f13, f16, f3, f24, dyn # perform operation
fmsub.s f13, f16, f3, f24, rdn # perform operation
fmsub.s f13, f16, f3, f24, rmm # perform operation
fmsub.s f13, f16, f3, f24, rne # perform operation
fmsub.s f13, f16, f3, f24, rtz # perform operation
fmsub.s f13, f16, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x4eb61e39 # load x3 with value 0x4eb61e39
sw x3, 0(x2) # store 0x4eb61e39 in memory
flw f16, 0(x2) # load 0x4eb61e39 from memory into f16
fmsub.s f7, f25, f10, f16, dyn # perform operation
fmsub.s f7, f25, f10, f16, rdn # perform operation
fmsub.s f7, f25, f10, f16, rmm # perform operation
fmsub.s f7, f25, f10, f16, rne # perform operation
fmsub.s f7, f25, f10, f16, rtz # perform operation
fmsub.s f7, f25, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xd47dd95b # load x3 with value 0xd47dd95b
sw x3, 0(x2) # store 0xd47dd95b in memory
flw f22, 0(x2) # load 0xd47dd95b from memory into f22
fmsub.s f30, f1, f11, f22, dyn # perform operation
fmsub.s f30, f1, f11, f22, rdn # perform operation
fmsub.s f30, f1, f11, f22, rmm # perform operation
fmsub.s f30, f1, f11, f22, rne # perform operation
fmsub.s f30, f1, f11, f22, rtz # perform operation
fmsub.s f30, f1, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0xa874e411 # load x3 with value 0xa874e411
sw x3, 0(x2) # store 0xa874e411 in memory
flw f5, 0(x2) # load 0xa874e411 from memory into f5
fmsub.s f3, f23, f16, f5, dyn # perform operation
fmsub.s f3, f23, f16, f5, rdn # perform operation
fmsub.s f3, f23, f16, f5, rmm # perform operation
fmsub.s f3, f23, f16, f5, rne # perform operation
fmsub.s f3, f23, f16, f5, rtz # perform operation
fmsub.s f3, f23, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x78874851 # load x3 with value 0x78874851
sw x3, 0(x2) # store 0x78874851 in memory
flw f6, 0(x2) # load 0x78874851 from memory into f6
fmsub.s f5, f21, f20, f6, dyn # perform operation
fmsub.s f5, f21, f20, f6, rdn # perform operation
fmsub.s f5, f21, f20, f6, rmm # perform operation
fmsub.s f5, f21, f20, f6, rne # perform operation
fmsub.s f5, f21, f20, f6, rtz # perform operation
fmsub.s f5, f21, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x5de84b32 # load x3 with value 0x5de84b32
sw x3, 0(x2) # store 0x5de84b32 in memory
flw f26, 0(x2) # load 0x5de84b32 from memory into f26
fmsub.s f14, f20, f2, f26, dyn # perform operation
fmsub.s f14, f20, f2, f26, rdn # perform operation
fmsub.s f14, f20, f2, f26, rmm # perform operation
fmsub.s f14, f20, f2, f26, rne # perform operation
fmsub.s f14, f20, f2, f26, rtz # perform operation
fmsub.s f14, f20, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x6cf39ecf # load x3 with value 0x6cf39ecf
sw x3, 0(x2) # store 0x6cf39ecf in memory
flw f18, 0(x2) # load 0x6cf39ecf from memory into f18
fmsub.s f28, f31, f10, f18, dyn # perform operation
fmsub.s f28, f31, f10, f18, rdn # perform operation
fmsub.s f28, f31, f10, f18, rmm # perform operation
fmsub.s f28, f31, f10, f18, rne # perform operation
fmsub.s f28, f31, f10, f18, rtz # perform operation
fmsub.s f28, f31, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f31, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f31, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f31, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f31, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f31, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x75d8ff53 # load x3 with value 0x75d8ff53
sw x3, 0(x2) # store 0x75d8ff53 in memory
flw f3, 0(x2) # load 0x75d8ff53 from memory into f3
fmsub.s f1, f23, f9, f3, dyn # perform operation
fmsub.s f1, f23, f9, f3, rdn # perform operation
fmsub.s f1, f23, f9, f3, rmm # perform operation
fmsub.s f1, f23, f9, f3, rne # perform operation
fmsub.s f1, f23, f9, f3, rtz # perform operation
fmsub.s f1, f23, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xbf5e4450 # load x3 with value 0xbf5e4450
sw x3, 0(x2) # store 0xbf5e4450 in memory
flw f20, 0(x2) # load 0xbf5e4450 from memory into f20
fmsub.s f30, f2, f23, f20, dyn # perform operation
fmsub.s f30, f2, f23, f20, rdn # perform operation
fmsub.s f30, f2, f23, f20, rmm # perform operation
fmsub.s f30, f2, f23, f20, rne # perform operation
fmsub.s f30, f2, f23, f20, rtz # perform operation
fmsub.s f30, f2, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x54904b2e # load x3 with value 0x54904b2e
sw x3, 0(x2) # store 0x54904b2e in memory
flw f29, 0(x2) # load 0x54904b2e from memory into f29
fmsub.s f21, f11, f5, f29, dyn # perform operation
fmsub.s f21, f11, f5, f29, rdn # perform operation
fmsub.s f21, f11, f5, f29, rmm # perform operation
fmsub.s f21, f11, f5, f29, rne # perform operation
fmsub.s f21, f11, f5, f29, rtz # perform operation
fmsub.s f21, f11, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f11, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x30574e4d # load x3 with value 0x30574e4d
sw x3, 0(x2) # store 0x30574e4d in memory
flw f9, 0(x2) # load 0x30574e4d from memory into f9
fmsub.s f10, f21, f1, f9, dyn # perform operation
fmsub.s f10, f21, f1, f9, rdn # perform operation
fmsub.s f10, f21, f1, f9, rmm # perform operation
fmsub.s f10, f21, f1, f9, rne # perform operation
fmsub.s f10, f21, f1, f9, rtz # perform operation
fmsub.s f10, f21, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0xf090806d # load x3 with value 0xf090806d
sw x3, 0(x2) # store 0xf090806d in memory
flw f25, 0(x2) # load 0xf090806d from memory into f25
fmsub.s f1, f19, f31, f25, dyn # perform operation
fmsub.s f1, f19, f31, f25, rdn # perform operation
fmsub.s f1, f19, f31, f25, rmm # perform operation
fmsub.s f1, f19, f31, f25, rne # perform operation
fmsub.s f1, f19, f31, f25, rtz # perform operation
fmsub.s f1, f19, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x6e110a9b # load x3 with value 0x6e110a9b
sw x3, 0(x2) # store 0x6e110a9b in memory
flw f12, 0(x2) # load 0x6e110a9b from memory into f12
fmsub.s f1, f14, f25, f12, dyn # perform operation
fmsub.s f1, f14, f25, f12, rdn # perform operation
fmsub.s f1, f14, f25, f12, rmm # perform operation
fmsub.s f1, f14, f25, f12, rne # perform operation
fmsub.s f1, f14, f25, f12, rtz # perform operation
fmsub.s f1, f14, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f14, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xa1ddf0a4 # load x3 with value 0xa1ddf0a4
sw x3, 0(x2) # store 0xa1ddf0a4 in memory
flw f23, 0(x2) # load 0xa1ddf0a4 from memory into f23
fmsub.s f30, f11, f17, f23, dyn # perform operation
fmsub.s f30, f11, f17, f23, rdn # perform operation
fmsub.s f30, f11, f17, f23, rmm # perform operation
fmsub.s f30, f11, f17, f23, rne # perform operation
fmsub.s f30, f11, f17, f23, rtz # perform operation
fmsub.s f30, f11, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f11, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x63f74bcf # load x3 with value 0x63f74bcf
sw x3, 0(x2) # store 0x63f74bcf in memory
flw f12, 0(x2) # load 0x63f74bcf from memory into f12
fmsub.s f13, f25, f14, f12, dyn # perform operation
fmsub.s f13, f25, f14, f12, rdn # perform operation
fmsub.s f13, f25, f14, f12, rmm # perform operation
fmsub.s f13, f25, f14, f12, rne # perform operation
fmsub.s f13, f25, f14, f12, rtz # perform operation
fmsub.s f13, f25, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f25, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f25, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f25, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f25, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f25, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x952b7908 # load x3 with value 0x952b7908
sw x3, 0(x2) # store 0x952b7908 in memory
flw f6, 0(x2) # load 0x952b7908 from memory into f6
fmsub.s f17, f19, f31, f6, dyn # perform operation
fmsub.s f17, f19, f31, f6, rdn # perform operation
fmsub.s f17, f19, f31, f6, rmm # perform operation
fmsub.s f17, f19, f31, f6, rne # perform operation
fmsub.s f17, f19, f31, f6, rtz # perform operation
fmsub.s f17, f19, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x4bb203c4 # load x3 with value 0x4bb203c4
sw x3, 0(x2) # store 0x4bb203c4 in memory
flw f25, 0(x2) # load 0x4bb203c4 from memory into f25
fmsub.s f14, f5, f24, f25, dyn # perform operation
fmsub.s f14, f5, f24, f25, rdn # perform operation
fmsub.s f14, f5, f24, f25, rmm # perform operation
fmsub.s f14, f5, f24, f25, rne # perform operation
fmsub.s f14, f5, f24, f25, rtz # perform operation
fmsub.s f14, f5, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xb898bf57 # load x3 with value 0xb898bf57
sw x3, 0(x2) # store 0xb898bf57 in memory
flw f15, 0(x2) # load 0xb898bf57 from memory into f15
fmsub.s f8, f27, f24, f15, dyn # perform operation
fmsub.s f8, f27, f24, f15, rdn # perform operation
fmsub.s f8, f27, f24, f15, rmm # perform operation
fmsub.s f8, f27, f24, f15, rne # perform operation
fmsub.s f8, f27, f24, f15, rtz # perform operation
fmsub.s f8, f27, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x86985218 # load x3 with value 0x86985218
sw x3, 0(x2) # store 0x86985218 in memory
flw f2, 0(x2) # load 0x86985218 from memory into f2
fmsub.s f6, f3, f14, f2, dyn # perform operation
fmsub.s f6, f3, f14, f2, rdn # perform operation
fmsub.s f6, f3, f14, f2, rmm # perform operation
fmsub.s f6, f3, f14, f2, rne # perform operation
fmsub.s f6, f3, f14, f2, rtz # perform operation
fmsub.s f6, f3, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x46cfff71 # load x3 with value 0x46cfff71
sw x3, 0(x2) # store 0x46cfff71 in memory
flw f22, 0(x2) # load 0x46cfff71 from memory into f22
fmsub.s f18, f1, f12, f22, dyn # perform operation
fmsub.s f18, f1, f12, f22, rdn # perform operation
fmsub.s f18, f1, f12, f22, rmm # perform operation
fmsub.s f18, f1, f12, f22, rne # perform operation
fmsub.s f18, f1, f12, f22, rtz # perform operation
fmsub.s f18, f1, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f1, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xeec8ed6f # load x3 with value 0xeec8ed6f
sw x3, 0(x2) # store 0xeec8ed6f in memory
flw f31, 0(x2) # load 0xeec8ed6f from memory into f31
fmsub.s f14, f1, f12, f31, dyn # perform operation
fmsub.s f14, f1, f12, f31, rdn # perform operation
fmsub.s f14, f1, f12, f31, rmm # perform operation
fmsub.s f14, f1, f12, f31, rne # perform operation
fmsub.s f14, f1, f12, f31, rtz # perform operation
fmsub.s f14, f1, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xbc0b4867 # load x3 with value 0xbc0b4867
sw x3, 0(x2) # store 0xbc0b4867 in memory
flw f13, 0(x2) # load 0xbc0b4867 from memory into f13
fmsub.s f23, f27, f24, f13, dyn # perform operation
fmsub.s f23, f27, f24, f13, rdn # perform operation
fmsub.s f23, f27, f24, f13, rmm # perform operation
fmsub.s f23, f27, f24, f13, rne # perform operation
fmsub.s f23, f27, f24, f13, rtz # perform operation
fmsub.s f23, f27, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xe9c57e5b # load x3 with value 0xe9c57e5b
sw x3, 0(x2) # store 0xe9c57e5b in memory
flw f20, 0(x2) # load 0xe9c57e5b from memory into f20
fmsub.s f11, f9, f6, f20, dyn # perform operation
fmsub.s f11, f9, f6, f20, rdn # perform operation
fmsub.s f11, f9, f6, f20, rmm # perform operation
fmsub.s f11, f9, f6, f20, rne # perform operation
fmsub.s f11, f9, f6, f20, rtz # perform operation
fmsub.s f11, f9, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x3c77e00c # load x3 with value 0x3c77e00c
sw x3, 0(x2) # store 0x3c77e00c in memory
flw f23, 0(x2) # load 0x3c77e00c from memory into f23
fmsub.s f2, f1, f9, f23, dyn # perform operation
fmsub.s f2, f1, f9, f23, rdn # perform operation
fmsub.s f2, f1, f9, f23, rmm # perform operation
fmsub.s f2, f1, f9, f23, rne # perform operation
fmsub.s f2, f1, f9, f23, rtz # perform operation
fmsub.s f2, f1, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f1, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xdef6b667 # load x3 with value 0xdef6b667
sw x3, 0(x2) # store 0xdef6b667 in memory
flw f22, 0(x2) # load 0xdef6b667 from memory into f22
fmsub.s f2, f14, f27, f22, dyn # perform operation
fmsub.s f2, f14, f27, f22, rdn # perform operation
fmsub.s f2, f14, f27, f22, rmm # perform operation
fmsub.s f2, f14, f27, f22, rne # perform operation
fmsub.s f2, f14, f27, f22, rtz # perform operation
fmsub.s f2, f14, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xf4523d72 # load x3 with value 0xf4523d72
sw x3, 0(x2) # store 0xf4523d72 in memory
flw f17, 0(x2) # load 0xf4523d72 from memory into f17
fmsub.s f20, f6, f19, f17, dyn # perform operation
fmsub.s f20, f6, f19, f17, rdn # perform operation
fmsub.s f20, f6, f19, f17, rmm # perform operation
fmsub.s f20, f6, f19, f17, rne # perform operation
fmsub.s f20, f6, f19, f17, rtz # perform operation
fmsub.s f20, f6, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x75789dbb # load x3 with value 0x75789dbb
sw x3, 0(x2) # store 0x75789dbb in memory
flw f11, 0(x2) # load 0x75789dbb from memory into f11
fmsub.s f23, f10, f13, f11, dyn # perform operation
fmsub.s f23, f10, f13, f11, rdn # perform operation
fmsub.s f23, f10, f13, f11, rmm # perform operation
fmsub.s f23, f10, f13, f11, rne # perform operation
fmsub.s f23, f10, f13, f11, rtz # perform operation
fmsub.s f23, f10, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x7632020f # load x3 with value 0x7632020f
sw x3, 0(x2) # store 0x7632020f in memory
flw f1, 0(x2) # load 0x7632020f from memory into f1
fmsub.s f9, f16, f23, f1, dyn # perform operation
fmsub.s f9, f16, f23, f1, rdn # perform operation
fmsub.s f9, f16, f23, f1, rmm # perform operation
fmsub.s f9, f16, f23, f1, rne # perform operation
fmsub.s f9, f16, f23, f1, rtz # perform operation
fmsub.s f9, f16, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x8db30cfa # load x3 with value 0x8db30cfa
sw x3, 0(x2) # store 0x8db30cfa in memory
flw f2, 0(x2) # load 0x8db30cfa from memory into f2
fmsub.s f23, f19, f20, f2, dyn # perform operation
fmsub.s f23, f19, f20, f2, rdn # perform operation
fmsub.s f23, f19, f20, f2, rmm # perform operation
fmsub.s f23, f19, f20, f2, rne # perform operation
fmsub.s f23, f19, f20, f2, rtz # perform operation
fmsub.s f23, f19, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xb9f304ce # load x3 with value 0xb9f304ce
sw x3, 0(x2) # store 0xb9f304ce in memory
flw f31, 0(x2) # load 0xb9f304ce from memory into f31
fmsub.s f19, f23, f26, f31, dyn # perform operation
fmsub.s f19, f23, f26, f31, rdn # perform operation
fmsub.s f19, f23, f26, f31, rmm # perform operation
fmsub.s f19, f23, f26, f31, rne # perform operation
fmsub.s f19, f23, f26, f31, rtz # perform operation
fmsub.s f19, f23, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x1840b447 # load x3 with value 0x1840b447
sw x3, 0(x2) # store 0x1840b447 in memory
flw f1, 0(x2) # load 0x1840b447 from memory into f1
fmsub.s f18, f14, f19, f1, dyn # perform operation
fmsub.s f18, f14, f19, f1, rdn # perform operation
fmsub.s f18, f14, f19, f1, rmm # perform operation
fmsub.s f18, f14, f19, f1, rne # perform operation
fmsub.s f18, f14, f19, f1, rtz # perform operation
fmsub.s f18, f14, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xcf9afb17 # load x3 with value 0xcf9afb17
sw x3, 0(x2) # store 0xcf9afb17 in memory
flw f17, 0(x2) # load 0xcf9afb17 from memory into f17
fmsub.s f25, f11, f27, f17, dyn # perform operation
fmsub.s f25, f11, f27, f17, rdn # perform operation
fmsub.s f25, f11, f27, f17, rmm # perform operation
fmsub.s f25, f11, f27, f17, rne # perform operation
fmsub.s f25, f11, f27, f17, rtz # perform operation
fmsub.s f25, f11, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xbed821c0 # load x3 with value 0xbed821c0
sw x3, 0(x2) # store 0xbed821c0 in memory
flw f30, 0(x2) # load 0xbed821c0 from memory into f30
fmsub.s f20, f13, f9, f30, dyn # perform operation
fmsub.s f20, f13, f9, f30, rdn # perform operation
fmsub.s f20, f13, f9, f30, rmm # perform operation
fmsub.s f20, f13, f9, f30, rne # perform operation
fmsub.s f20, f13, f9, f30, rtz # perform operation
fmsub.s f20, f13, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xbe524a92 # load x3 with value 0xbe524a92
sw x3, 0(x2) # store 0xbe524a92 in memory
flw f9, 0(x2) # load 0xbe524a92 from memory into f9
fmsub.s f13, f26, f12, f9, dyn # perform operation
fmsub.s f13, f26, f12, f9, rdn # perform operation
fmsub.s f13, f26, f12, f9, rmm # perform operation
fmsub.s f13, f26, f12, f9, rne # perform operation
fmsub.s f13, f26, f12, f9, rtz # perform operation
fmsub.s f13, f26, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f26, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f26, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f26, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f26, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f26, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x2eb754ce # load x3 with value 0x2eb754ce
sw x3, 0(x2) # store 0x2eb754ce in memory
flw f12, 0(x2) # load 0x2eb754ce from memory into f12
fmsub.s f14, f16, f26, f12, dyn # perform operation
fmsub.s f14, f16, f26, f12, rdn # perform operation
fmsub.s f14, f16, f26, f12, rmm # perform operation
fmsub.s f14, f16, f26, f12, rne # perform operation
fmsub.s f14, f16, f26, f12, rtz # perform operation
fmsub.s f14, f16, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x4f81c0d6 # load x3 with value 0x4f81c0d6
sw x3, 0(x2) # store 0x4f81c0d6 in memory
flw f16, 0(x2) # load 0x4f81c0d6 from memory into f16
fmsub.s f21, f14, f28, f16, dyn # perform operation
fmsub.s f21, f14, f28, f16, rdn # perform operation
fmsub.s f21, f14, f28, f16, rmm # perform operation
fmsub.s f21, f14, f28, f16, rne # perform operation
fmsub.s f21, f14, f28, f16, rtz # perform operation
fmsub.s f21, f14, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x31d42bd1 # load x3 with value 0x31d42bd1
sw x3, 0(x2) # store 0x31d42bd1 in memory
flw f29, 0(x2) # load 0x31d42bd1 from memory into f29
fmsub.s f31, f14, f21, f29, dyn # perform operation
fmsub.s f31, f14, f21, f29, rdn # perform operation
fmsub.s f31, f14, f21, f29, rmm # perform operation
fmsub.s f31, f14, f21, f29, rne # perform operation
fmsub.s f31, f14, f21, f29, rtz # perform operation
fmsub.s f31, f14, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xd82593af # load x3 with value 0xd82593af
sw x3, 0(x2) # store 0xd82593af in memory
flw f29, 0(x2) # load 0xd82593af from memory into f29
fmsub.s f25, f16, f7, f29, dyn # perform operation
fmsub.s f25, f16, f7, f29, rdn # perform operation
fmsub.s f25, f16, f7, f29, rmm # perform operation
fmsub.s f25, f16, f7, f29, rne # perform operation
fmsub.s f25, f16, f7, f29, rtz # perform operation
fmsub.s f25, f16, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x5ea719bf # load x3 with value 0x5ea719bf
sw x3, 0(x2) # store 0x5ea719bf in memory
flw f5, 0(x2) # load 0x5ea719bf from memory into f5
fmsub.s f22, f8, f28, f5, dyn # perform operation
fmsub.s f22, f8, f28, f5, rdn # perform operation
fmsub.s f22, f8, f28, f5, rmm # perform operation
fmsub.s f22, f8, f28, f5, rne # perform operation
fmsub.s f22, f8, f28, f5, rtz # perform operation
fmsub.s f22, f8, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0xf26d9a9c # load x3 with value 0xf26d9a9c
sw x3, 0(x2) # store 0xf26d9a9c in memory
flw f16, 0(x2) # load 0xf26d9a9c from memory into f16
fmsub.s f7, f9, f26, f16, dyn # perform operation
fmsub.s f7, f9, f26, f16, rdn # perform operation
fmsub.s f7, f9, f26, f16, rmm # perform operation
fmsub.s f7, f9, f26, f16, rne # perform operation
fmsub.s f7, f9, f26, f16, rtz # perform operation
fmsub.s f7, f9, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x70623c75 # load x3 with value 0x70623c75
sw x3, 0(x2) # store 0x70623c75 in memory
flw f20, 0(x2) # load 0x70623c75 from memory into f20
fmsub.s f16, f19, f25, f20, dyn # perform operation
fmsub.s f16, f19, f25, f20, rdn # perform operation
fmsub.s f16, f19, f25, f20, rmm # perform operation
fmsub.s f16, f19, f25, f20, rne # perform operation
fmsub.s f16, f19, f25, f20, rtz # perform operation
fmsub.s f16, f19, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f19, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f19, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f19, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f19, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f19, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x6498e0bb # load x3 with value 0x6498e0bb
sw x3, 0(x2) # store 0x6498e0bb in memory
flw f11, 0(x2) # load 0x6498e0bb from memory into f11
fmsub.s f22, f8, f25, f11, dyn # perform operation
fmsub.s f22, f8, f25, f11, rdn # perform operation
fmsub.s f22, f8, f25, f11, rmm # perform operation
fmsub.s f22, f8, f25, f11, rne # perform operation
fmsub.s f22, f8, f25, f11, rtz # perform operation
fmsub.s f22, f8, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xf287d1e4 # load x3 with value 0xf287d1e4
sw x3, 0(x2) # store 0xf287d1e4 in memory
flw f12, 0(x2) # load 0xf287d1e4 from memory into f12
fmsub.s f29, f10, f5, f12, dyn # perform operation
fmsub.s f29, f10, f5, f12, rdn # perform operation
fmsub.s f29, f10, f5, f12, rmm # perform operation
fmsub.s f29, f10, f5, f12, rne # perform operation
fmsub.s f29, f10, f5, f12, rtz # perform operation
fmsub.s f29, f10, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x7afbeee2 # load x3 with value 0x7afbeee2
sw x3, 0(x2) # store 0x7afbeee2 in memory
flw f5, 0(x2) # load 0x7afbeee2 from memory into f5
fmsub.s f2, f9, f29, f5, dyn # perform operation
fmsub.s f2, f9, f29, f5, rdn # perform operation
fmsub.s f2, f9, f29, f5, rmm # perform operation
fmsub.s f2, f9, f29, f5, rne # perform operation
fmsub.s f2, f9, f29, f5, rtz # perform operation
fmsub.s f2, f9, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xf26c2c95 # load x3 with value 0xf26c2c95
sw x3, 0(x2) # store 0xf26c2c95 in memory
flw f22, 0(x2) # load 0xf26c2c95 from memory into f22
fmsub.s f10, f20, f17, f22, dyn # perform operation
fmsub.s f10, f20, f17, f22, rdn # perform operation
fmsub.s f10, f20, f17, f22, rmm # perform operation
fmsub.s f10, f20, f17, f22, rne # perform operation
fmsub.s f10, f20, f17, f22, rtz # perform operation
fmsub.s f10, f20, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xcc408931 # load x3 with value 0xcc408931
sw x3, 0(x2) # store 0xcc408931 in memory
flw f16, 0(x2) # load 0xcc408931 from memory into f16
fmsub.s f18, f2, f13, f16, dyn # perform operation
fmsub.s f18, f2, f13, f16, rdn # perform operation
fmsub.s f18, f2, f13, f16, rmm # perform operation
fmsub.s f18, f2, f13, f16, rne # perform operation
fmsub.s f18, f2, f13, f16, rtz # perform operation
fmsub.s f18, f2, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f2, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f2, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f2, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f2, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f2, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0xa1bd8a71 # load x3 with value 0xa1bd8a71
sw x3, 0(x2) # store 0xa1bd8a71 in memory
flw f18, 0(x2) # load 0xa1bd8a71 from memory into f18
fmsub.s f21, f15, f29, f18, dyn # perform operation
fmsub.s f21, f15, f29, f18, rdn # perform operation
fmsub.s f21, f15, f29, f18, rmm # perform operation
fmsub.s f21, f15, f29, f18, rne # perform operation
fmsub.s f21, f15, f29, f18, rtz # perform operation
fmsub.s f21, f15, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xeed55589 # load x3 with value 0xeed55589
sw x3, 0(x2) # store 0xeed55589 in memory
flw f14, 0(x2) # load 0xeed55589 from memory into f14
fmsub.s f10, f9, f22, f14, dyn # perform operation
fmsub.s f10, f9, f22, f14, rdn # perform operation
fmsub.s f10, f9, f22, f14, rmm # perform operation
fmsub.s f10, f9, f22, f14, rne # perform operation
fmsub.s f10, f9, f22, f14, rtz # perform operation
fmsub.s f10, f9, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xb188a5cf # load x3 with value 0xb188a5cf
sw x3, 0(x2) # store 0xb188a5cf in memory
flw f25, 0(x2) # load 0xb188a5cf from memory into f25
fmsub.s f19, f26, f14, f25, dyn # perform operation
fmsub.s f19, f26, f14, f25, rdn # perform operation
fmsub.s f19, f26, f14, f25, rmm # perform operation
fmsub.s f19, f26, f14, f25, rne # perform operation
fmsub.s f19, f26, f14, f25, rtz # perform operation
fmsub.s f19, f26, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xc2db4282 # load x3 with value 0xc2db4282
sw x3, 0(x2) # store 0xc2db4282 in memory
flw f9, 0(x2) # load 0xc2db4282 from memory into f9
fmsub.s f16, f23, f14, f9, dyn # perform operation
fmsub.s f16, f23, f14, f9, rdn # perform operation
fmsub.s f16, f23, f14, f9, rmm # perform operation
fmsub.s f16, f23, f14, f9, rne # perform operation
fmsub.s f16, f23, f14, f9, rtz # perform operation
fmsub.s f16, f23, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x93faea82 # load x3 with value 0x93faea82
sw x3, 0(x2) # store 0x93faea82 in memory
flw f13, 0(x2) # load 0x93faea82 from memory into f13
fmsub.s f31, f14, f8, f13, dyn # perform operation
fmsub.s f31, f14, f8, f13, rdn # perform operation
fmsub.s f31, f14, f8, f13, rmm # perform operation
fmsub.s f31, f14, f8, f13, rne # perform operation
fmsub.s f31, f14, f8, f13, rtz # perform operation
fmsub.s f31, f14, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xdcb86fb8 # load x3 with value 0xdcb86fb8
sw x3, 0(x2) # store 0xdcb86fb8 in memory
flw f8, 0(x2) # load 0xdcb86fb8 from memory into f8
fmsub.s f16, f18, f22, f8, dyn # perform operation
fmsub.s f16, f18, f22, f8, rdn # perform operation
fmsub.s f16, f18, f22, f8, rmm # perform operation
fmsub.s f16, f18, f22, f8, rne # perform operation
fmsub.s f16, f18, f22, f8, rtz # perform operation
fmsub.s f16, f18, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xca1807e0 # load x3 with value 0xca1807e0
sw x3, 0(x2) # store 0xca1807e0 in memory
flw f22, 0(x2) # load 0xca1807e0 from memory into f22
fmsub.s f10, f11, f21, f22, dyn # perform operation
fmsub.s f10, f11, f21, f22, rdn # perform operation
fmsub.s f10, f11, f21, f22, rmm # perform operation
fmsub.s f10, f11, f21, f22, rne # perform operation
fmsub.s f10, f11, f21, f22, rtz # perform operation
fmsub.s f10, f11, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x0715f5c8 # load x3 with value 0x0715f5c8
sw x3, 0(x2) # store 0x0715f5c8 in memory
flw f8, 0(x2) # load 0x0715f5c8 from memory into f8
fmsub.s f3, f10, f14, f8, dyn # perform operation
fmsub.s f3, f10, f14, f8, rdn # perform operation
fmsub.s f3, f10, f14, f8, rmm # perform operation
fmsub.s f3, f10, f14, f8, rne # perform operation
fmsub.s f3, f10, f14, f8, rtz # perform operation
fmsub.s f3, f10, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xe7d7f783 # load x3 with value 0xe7d7f783
sw x3, 0(x2) # store 0xe7d7f783 in memory
flw f5, 0(x2) # load 0xe7d7f783 from memory into f5
fmsub.s f13, f26, f7, f5, dyn # perform operation
fmsub.s f13, f26, f7, f5, rdn # perform operation
fmsub.s f13, f26, f7, f5, rmm # perform operation
fmsub.s f13, f26, f7, f5, rne # perform operation
fmsub.s f13, f26, f7, f5, rtz # perform operation
fmsub.s f13, f26, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f26, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f26, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f26, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f26, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f26, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x7b17733f # load x3 with value 0x7b17733f
sw x3, 0(x2) # store 0x7b17733f in memory
flw f31, 0(x2) # load 0x7b17733f from memory into f31
fmsub.s f11, f22, f18, f31, dyn # perform operation
fmsub.s f11, f22, f18, f31, rdn # perform operation
fmsub.s f11, f22, f18, f31, rmm # perform operation
fmsub.s f11, f22, f18, f31, rne # perform operation
fmsub.s f11, f22, f18, f31, rtz # perform operation
fmsub.s f11, f22, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xff2171a3 # load x3 with value 0xff2171a3
sw x3, 0(x2) # store 0xff2171a3 in memory
flw f22, 0(x2) # load 0xff2171a3 from memory into f22
fmsub.s f15, f2, f6, f22, dyn # perform operation
fmsub.s f15, f2, f6, f22, rdn # perform operation
fmsub.s f15, f2, f6, f22, rmm # perform operation
fmsub.s f15, f2, f6, f22, rne # perform operation
fmsub.s f15, f2, f6, f22, rtz # perform operation
fmsub.s f15, f2, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x75bb6085 # load x3 with value 0x75bb6085
sw x3, 0(x2) # store 0x75bb6085 in memory
flw f30, 0(x2) # load 0x75bb6085 from memory into f30
fmsub.s f16, f27, f13, f30, dyn # perform operation
fmsub.s f16, f27, f13, f30, rdn # perform operation
fmsub.s f16, f27, f13, f30, rmm # perform operation
fmsub.s f16, f27, f13, f30, rne # perform operation
fmsub.s f16, f27, f13, f30, rtz # perform operation
fmsub.s f16, f27, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xf5037c5a # load x3 with value 0xf5037c5a
sw x3, 0(x2) # store 0xf5037c5a in memory
flw f13, 0(x2) # load 0xf5037c5a from memory into f13
fmsub.s f20, f7, f25, f13, dyn # perform operation
fmsub.s f20, f7, f25, f13, rdn # perform operation
fmsub.s f20, f7, f25, f13, rmm # perform operation
fmsub.s f20, f7, f25, f13, rne # perform operation
fmsub.s f20, f7, f25, f13, rtz # perform operation
fmsub.s f20, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x75ed4f84 # load x3 with value 0x75ed4f84
sw x3, 0(x2) # store 0x75ed4f84 in memory
flw f26, 0(x2) # load 0x75ed4f84 from memory into f26
fmsub.s f29, f30, f27, f26, dyn # perform operation
fmsub.s f29, f30, f27, f26, rdn # perform operation
fmsub.s f29, f30, f27, f26, rmm # perform operation
fmsub.s f29, f30, f27, f26, rne # perform operation
fmsub.s f29, f30, f27, f26, rtz # perform operation
fmsub.s f29, f30, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xa098058f # load x3 with value 0xa098058f
sw x3, 0(x2) # store 0xa098058f in memory
flw f3, 0(x2) # load 0xa098058f from memory into f3
fmsub.s f17, f29, f24, f3, dyn # perform operation
fmsub.s f17, f29, f24, f3, rdn # perform operation
fmsub.s f17, f29, f24, f3, rmm # perform operation
fmsub.s f17, f29, f24, f3, rne # perform operation
fmsub.s f17, f29, f24, f3, rtz # perform operation
fmsub.s f17, f29, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f29, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xb2ad9a92 # load x3 with value 0xb2ad9a92
sw x3, 0(x2) # store 0xb2ad9a92 in memory
flw f16, 0(x2) # load 0xb2ad9a92 from memory into f16
fmsub.s f3, f17, f23, f16, dyn # perform operation
fmsub.s f3, f17, f23, f16, rdn # perform operation
fmsub.s f3, f17, f23, f16, rmm # perform operation
fmsub.s f3, f17, f23, f16, rne # perform operation
fmsub.s f3, f17, f23, f16, rtz # perform operation
fmsub.s f3, f17, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f17, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f17, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f17, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f17, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f17, f23, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xe5e53c0f # load x3 with value 0xe5e53c0f
sw x3, 0(x2) # store 0xe5e53c0f in memory
flw f24, 0(x2) # load 0xe5e53c0f from memory into f24
fmsub.s f1, f7, f5, f24, dyn # perform operation
fmsub.s f1, f7, f5, f24, rdn # perform operation
fmsub.s f1, f7, f5, f24, rmm # perform operation
fmsub.s f1, f7, f5, f24, rne # perform operation
fmsub.s f1, f7, f5, f24, rtz # perform operation
fmsub.s f1, f7, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xdd2807db # load x3 with value 0xdd2807db
sw x3, 0(x2) # store 0xdd2807db in memory
flw f23, 0(x2) # load 0xdd2807db from memory into f23
fmsub.s f24, f14, f13, f23, dyn # perform operation
fmsub.s f24, f14, f13, f23, rdn # perform operation
fmsub.s f24, f14, f13, f23, rmm # perform operation
fmsub.s f24, f14, f13, f23, rne # perform operation
fmsub.s f24, f14, f13, f23, rtz # perform operation
fmsub.s f24, f14, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f14, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x73eac781 # load x3 with value 0x73eac781
sw x3, 0(x2) # store 0x73eac781 in memory
flw f12, 0(x2) # load 0x73eac781 from memory into f12
fmsub.s f31, f9, f15, f12, dyn # perform operation
fmsub.s f31, f9, f15, f12, rdn # perform operation
fmsub.s f31, f9, f15, f12, rmm # perform operation
fmsub.s f31, f9, f15, f12, rne # perform operation
fmsub.s f31, f9, f15, f12, rtz # perform operation
fmsub.s f31, f9, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xaf2a966f # load x3 with value 0xaf2a966f
sw x3, 0(x2) # store 0xaf2a966f in memory
flw f17, 0(x2) # load 0xaf2a966f from memory into f17
fmsub.s f30, f1, f6, f17, dyn # perform operation
fmsub.s f30, f1, f6, f17, rdn # perform operation
fmsub.s f30, f1, f6, f17, rmm # perform operation
fmsub.s f30, f1, f6, f17, rne # perform operation
fmsub.s f30, f1, f6, f17, rtz # perform operation
fmsub.s f30, f1, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x1f44f8e0 # load x3 with value 0x1f44f8e0
sw x3, 0(x2) # store 0x1f44f8e0 in memory
flw f17, 0(x2) # load 0x1f44f8e0 from memory into f17
fmsub.s f15, f27, f26, f17, dyn # perform operation
fmsub.s f15, f27, f26, f17, rdn # perform operation
fmsub.s f15, f27, f26, f17, rmm # perform operation
fmsub.s f15, f27, f26, f17, rne # perform operation
fmsub.s f15, f27, f26, f17, rtz # perform operation
fmsub.s f15, f27, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x17171b42 # load x3 with value 0x17171b42
sw x3, 0(x2) # store 0x17171b42 in memory
flw f28, 0(x2) # load 0x17171b42 from memory into f28
fmsub.s f6, f21, f1, f28, dyn # perform operation
fmsub.s f6, f21, f1, f28, rdn # perform operation
fmsub.s f6, f21, f1, f28, rmm # perform operation
fmsub.s f6, f21, f1, f28, rne # perform operation
fmsub.s f6, f21, f1, f28, rtz # perform operation
fmsub.s f6, f21, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f21, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xd1324b4d # load x3 with value 0xd1324b4d
sw x3, 0(x2) # store 0xd1324b4d in memory
flw f6, 0(x2) # load 0xd1324b4d from memory into f6
fmsub.s f30, f27, f20, f6, dyn # perform operation
fmsub.s f30, f27, f20, f6, rdn # perform operation
fmsub.s f30, f27, f20, f6, rmm # perform operation
fmsub.s f30, f27, f20, f6, rne # perform operation
fmsub.s f30, f27, f20, f6, rtz # perform operation
fmsub.s f30, f27, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x59790346 # load x3 with value 0x59790346
sw x3, 0(x2) # store 0x59790346 in memory
flw f2, 0(x2) # load 0x59790346 from memory into f2
fmsub.s f19, f10, f21, f2, dyn # perform operation
fmsub.s f19, f10, f21, f2, rdn # perform operation
fmsub.s f19, f10, f21, f2, rmm # perform operation
fmsub.s f19, f10, f21, f2, rne # perform operation
fmsub.s f19, f10, f21, f2, rtz # perform operation
fmsub.s f19, f10, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xcd9cdc56 # load x3 with value 0xcd9cdc56
sw x3, 0(x2) # store 0xcd9cdc56 in memory
flw f1, 0(x2) # load 0xcd9cdc56 from memory into f1
fmsub.s f23, f5, f24, f1, dyn # perform operation
fmsub.s f23, f5, f24, f1, rdn # perform operation
fmsub.s f23, f5, f24, f1, rmm # perform operation
fmsub.s f23, f5, f24, f1, rne # perform operation
fmsub.s f23, f5, f24, f1, rtz # perform operation
fmsub.s f23, f5, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x6cb4e9e6 # load x3 with value 0x6cb4e9e6
sw x3, 0(x2) # store 0x6cb4e9e6 in memory
flw f24, 0(x2) # load 0x6cb4e9e6 from memory into f24
fmsub.s f6, f29, f7, f24, dyn # perform operation
fmsub.s f6, f29, f7, f24, rdn # perform operation
fmsub.s f6, f29, f7, f24, rmm # perform operation
fmsub.s f6, f29, f7, f24, rne # perform operation
fmsub.s f6, f29, f7, f24, rtz # perform operation
fmsub.s f6, f29, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f29, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xeacb8f5e # load x3 with value 0xeacb8f5e
sw x3, 0(x2) # store 0xeacb8f5e in memory
flw f14, 0(x2) # load 0xeacb8f5e from memory into f14
fmsub.s f16, f7, f5, f14, dyn # perform operation
fmsub.s f16, f7, f5, f14, rdn # perform operation
fmsub.s f16, f7, f5, f14, rmm # perform operation
fmsub.s f16, f7, f5, f14, rne # perform operation
fmsub.s f16, f7, f5, f14, rtz # perform operation
fmsub.s f16, f7, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xf8415457 # load x3 with value 0xf8415457
sw x3, 0(x2) # store 0xf8415457 in memory
flw f22, 0(x2) # load 0xf8415457 from memory into f22
fmsub.s f18, f24, f26, f22, dyn # perform operation
fmsub.s f18, f24, f26, f22, rdn # perform operation
fmsub.s f18, f24, f26, f22, rmm # perform operation
fmsub.s f18, f24, f26, f22, rne # perform operation
fmsub.s f18, f24, f26, f22, rtz # perform operation
fmsub.s f18, f24, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x9bd1774b # load x3 with value 0x9bd1774b
sw x3, 0(x2) # store 0x9bd1774b in memory
flw f19, 0(x2) # load 0x9bd1774b from memory into f19
fmsub.s f18, f28, f29, f19, dyn # perform operation
fmsub.s f18, f28, f29, f19, rdn # perform operation
fmsub.s f18, f28, f29, f19, rmm # perform operation
fmsub.s f18, f28, f29, f19, rne # perform operation
fmsub.s f18, f28, f29, f19, rtz # perform operation
fmsub.s f18, f28, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xb2c421ac # load x3 with value 0xb2c421ac
sw x3, 0(x2) # store 0xb2c421ac in memory
flw f13, 0(x2) # load 0xb2c421ac from memory into f13
fmsub.s f27, f29, f7, f13, dyn # perform operation
fmsub.s f27, f29, f7, f13, rdn # perform operation
fmsub.s f27, f29, f7, f13, rmm # perform operation
fmsub.s f27, f29, f7, f13, rne # perform operation
fmsub.s f27, f29, f7, f13, rtz # perform operation
fmsub.s f27, f29, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f29, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f29, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f29, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f29, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f29, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x852220eb # load x3 with value 0x852220eb
sw x3, 0(x2) # store 0x852220eb in memory
flw f15, 0(x2) # load 0x852220eb from memory into f15
fmsub.s f13, f1, f16, f15, dyn # perform operation
fmsub.s f13, f1, f16, f15, rdn # perform operation
fmsub.s f13, f1, f16, f15, rmm # perform operation
fmsub.s f13, f1, f16, f15, rne # perform operation
fmsub.s f13, f1, f16, f15, rtz # perform operation
fmsub.s f13, f1, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x6b94b8fc # load x3 with value 0x6b94b8fc
sw x3, 0(x2) # store 0x6b94b8fc in memory
flw f14, 0(x2) # load 0x6b94b8fc from memory into f14
fmsub.s f5, f12, f10, f14, dyn # perform operation
fmsub.s f5, f12, f10, f14, rdn # perform operation
fmsub.s f5, f12, f10, f14, rmm # perform operation
fmsub.s f5, f12, f10, f14, rne # perform operation
fmsub.s f5, f12, f10, f14, rtz # perform operation
fmsub.s f5, f12, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f12, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x75e4dd4c # load x3 with value 0x75e4dd4c
sw x3, 0(x2) # store 0x75e4dd4c in memory
flw f25, 0(x2) # load 0x75e4dd4c from memory into f25
fmsub.s f5, f29, f16, f25, dyn # perform operation
fmsub.s f5, f29, f16, f25, rdn # perform operation
fmsub.s f5, f29, f16, f25, rmm # perform operation
fmsub.s f5, f29, f16, f25, rne # perform operation
fmsub.s f5, f29, f16, f25, rtz # perform operation
fmsub.s f5, f29, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xe3926ba0 # load x3 with value 0xe3926ba0
sw x3, 0(x2) # store 0xe3926ba0 in memory
flw f12, 0(x2) # load 0xe3926ba0 from memory into f12
fmsub.s f17, f26, f5, f12, dyn # perform operation
fmsub.s f17, f26, f5, f12, rdn # perform operation
fmsub.s f17, f26, f5, f12, rmm # perform operation
fmsub.s f17, f26, f5, f12, rne # perform operation
fmsub.s f17, f26, f5, f12, rtz # perform operation
fmsub.s f17, f26, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x45fe3977 # load x3 with value 0x45fe3977
sw x3, 0(x2) # store 0x45fe3977 in memory
flw f2, 0(x2) # load 0x45fe3977 from memory into f2
fmsub.s f6, f8, f11, f2, dyn # perform operation
fmsub.s f6, f8, f11, f2, rdn # perform operation
fmsub.s f6, f8, f11, f2, rmm # perform operation
fmsub.s f6, f8, f11, f2, rne # perform operation
fmsub.s f6, f8, f11, f2, rtz # perform operation
fmsub.s f6, f8, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xbdd54a3f # load x3 with value 0xbdd54a3f
sw x3, 0(x2) # store 0xbdd54a3f in memory
flw f31, 0(x2) # load 0xbdd54a3f from memory into f31
fmsub.s f21, f17, f1, f31, dyn # perform operation
fmsub.s f21, f17, f1, f31, rdn # perform operation
fmsub.s f21, f17, f1, f31, rmm # perform operation
fmsub.s f21, f17, f1, f31, rne # perform operation
fmsub.s f21, f17, f1, f31, rtz # perform operation
fmsub.s f21, f17, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f17, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xd3fa1a82 # load x3 with value 0xd3fa1a82
sw x3, 0(x2) # store 0xd3fa1a82 in memory
flw f6, 0(x2) # load 0xd3fa1a82 from memory into f6
fmsub.s f23, f10, f19, f6, dyn # perform operation
fmsub.s f23, f10, f19, f6, rdn # perform operation
fmsub.s f23, f10, f19, f6, rmm # perform operation
fmsub.s f23, f10, f19, f6, rne # perform operation
fmsub.s f23, f10, f19, f6, rtz # perform operation
fmsub.s f23, f10, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xee83b0c7 # load x3 with value 0xee83b0c7
sw x3, 0(x2) # store 0xee83b0c7 in memory
flw f14, 0(x2) # load 0xee83b0c7 from memory into f14
fmsub.s f27, f2, f31, f14, dyn # perform operation
fmsub.s f27, f2, f31, f14, rdn # perform operation
fmsub.s f27, f2, f31, f14, rmm # perform operation
fmsub.s f27, f2, f31, f14, rne # perform operation
fmsub.s f27, f2, f31, f14, rtz # perform operation
fmsub.s f27, f2, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f2, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x167c13db # load x3 with value 0x167c13db
sw x3, 0(x2) # store 0x167c13db in memory
flw f30, 0(x2) # load 0x167c13db from memory into f30
fmsub.s f3, f14, f31, f30, dyn # perform operation
fmsub.s f3, f14, f31, f30, rdn # perform operation
fmsub.s f3, f14, f31, f30, rmm # perform operation
fmsub.s f3, f14, f31, f30, rne # perform operation
fmsub.s f3, f14, f31, f30, rtz # perform operation
fmsub.s f3, f14, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x45761e29 # load x3 with value 0x45761e29
sw x3, 0(x2) # store 0x45761e29 in memory
flw f27, 0(x2) # load 0x45761e29 from memory into f27
fmsub.s f6, f29, f24, f27, dyn # perform operation
fmsub.s f6, f29, f24, f27, rdn # perform operation
fmsub.s f6, f29, f24, f27, rmm # perform operation
fmsub.s f6, f29, f24, f27, rne # perform operation
fmsub.s f6, f29, f24, f27, rtz # perform operation
fmsub.s f6, f29, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f29, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xddb9a032 # load x3 with value 0xddb9a032
sw x3, 0(x2) # store 0xddb9a032 in memory
flw f11, 0(x2) # load 0xddb9a032 from memory into f11
fmsub.s f9, f19, f18, f11, dyn # perform operation
fmsub.s f9, f19, f18, f11, rdn # perform operation
fmsub.s f9, f19, f18, f11, rmm # perform operation
fmsub.s f9, f19, f18, f11, rne # perform operation
fmsub.s f9, f19, f18, f11, rtz # perform operation
fmsub.s f9, f19, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x788b13cd # load x3 with value 0x788b13cd
sw x3, 0(x2) # store 0x788b13cd in memory
flw f15, 0(x2) # load 0x788b13cd from memory into f15
fmsub.s f18, f26, f31, f15, dyn # perform operation
fmsub.s f18, f26, f31, f15, rdn # perform operation
fmsub.s f18, f26, f31, f15, rmm # perform operation
fmsub.s f18, f26, f31, f15, rne # perform operation
fmsub.s f18, f26, f31, f15, rtz # perform operation
fmsub.s f18, f26, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xcbe3278e # load x3 with value 0xcbe3278e
sw x3, 0(x2) # store 0xcbe3278e in memory
flw f25, 0(x2) # load 0xcbe3278e from memory into f25
fmsub.s f7, f10, f30, f25, dyn # perform operation
fmsub.s f7, f10, f30, f25, rdn # perform operation
fmsub.s f7, f10, f30, f25, rmm # perform operation
fmsub.s f7, f10, f30, f25, rne # perform operation
fmsub.s f7, f10, f30, f25, rtz # perform operation
fmsub.s f7, f10, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x986e0c55 # load x3 with value 0x986e0c55
sw x3, 0(x2) # store 0x986e0c55 in memory
flw f2, 0(x2) # load 0x986e0c55 from memory into f2
fmsub.s f24, f11, f16, f2, dyn # perform operation
fmsub.s f24, f11, f16, f2, rdn # perform operation
fmsub.s f24, f11, f16, f2, rmm # perform operation
fmsub.s f24, f11, f16, f2, rne # perform operation
fmsub.s f24, f11, f16, f2, rtz # perform operation
fmsub.s f24, f11, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x50720398 # load x3 with value 0x50720398
sw x3, 0(x2) # store 0x50720398 in memory
flw f17, 0(x2) # load 0x50720398 from memory into f17
fmsub.s f11, f30, f14, f17, dyn # perform operation
fmsub.s f11, f30, f14, f17, rdn # perform operation
fmsub.s f11, f30, f14, f17, rmm # perform operation
fmsub.s f11, f30, f14, f17, rne # perform operation
fmsub.s f11, f30, f14, f17, rtz # perform operation
fmsub.s f11, f30, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x4d06b3d6 # load x3 with value 0x4d06b3d6
sw x3, 0(x2) # store 0x4d06b3d6 in memory
flw f12, 0(x2) # load 0x4d06b3d6 from memory into f12
fmsub.s f16, f7, f9, f12, dyn # perform operation
fmsub.s f16, f7, f9, f12, rdn # perform operation
fmsub.s f16, f7, f9, f12, rmm # perform operation
fmsub.s f16, f7, f9, f12, rne # perform operation
fmsub.s f16, f7, f9, f12, rtz # perform operation
fmsub.s f16, f7, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x8466ce9a # load x3 with value 0x8466ce9a
sw x3, 0(x2) # store 0x8466ce9a in memory
flw f9, 0(x2) # load 0x8466ce9a from memory into f9
fmsub.s f18, f27, f22, f9, dyn # perform operation
fmsub.s f18, f27, f22, f9, rdn # perform operation
fmsub.s f18, f27, f22, f9, rmm # perform operation
fmsub.s f18, f27, f22, f9, rne # perform operation
fmsub.s f18, f27, f22, f9, rtz # perform operation
fmsub.s f18, f27, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xbd76c9a5 # load x3 with value 0xbd76c9a5
sw x3, 0(x2) # store 0xbd76c9a5 in memory
flw f6, 0(x2) # load 0xbd76c9a5 from memory into f6
fmsub.s f11, f19, f23, f6, dyn # perform operation
fmsub.s f11, f19, f23, f6, rdn # perform operation
fmsub.s f11, f19, f23, f6, rmm # perform operation
fmsub.s f11, f19, f23, f6, rne # perform operation
fmsub.s f11, f19, f23, f6, rtz # perform operation
fmsub.s f11, f19, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x3a699956 # load x3 with value 0x3a699956
sw x3, 0(x2) # store 0x3a699956 in memory
flw f12, 0(x2) # load 0x3a699956 from memory into f12
fmsub.s f26, f29, f28, f12, dyn # perform operation
fmsub.s f26, f29, f28, f12, rdn # perform operation
fmsub.s f26, f29, f28, f12, rmm # perform operation
fmsub.s f26, f29, f28, f12, rne # perform operation
fmsub.s f26, f29, f28, f12, rtz # perform operation
fmsub.s f26, f29, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x533da528 # load x3 with value 0x533da528
sw x3, 0(x2) # store 0x533da528 in memory
flw f5, 0(x2) # load 0x533da528 from memory into f5
fmsub.s f22, f23, f7, f5, dyn # perform operation
fmsub.s f22, f23, f7, f5, rdn # perform operation
fmsub.s f22, f23, f7, f5, rmm # perform operation
fmsub.s f22, f23, f7, f5, rne # perform operation
fmsub.s f22, f23, f7, f5, rtz # perform operation
fmsub.s f22, f23, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x6732b59b # load x3 with value 0x6732b59b
sw x3, 0(x2) # store 0x6732b59b in memory
flw f18, 0(x2) # load 0x6732b59b from memory into f18
fmsub.s f24, f25, f2, f18, dyn # perform operation
fmsub.s f24, f25, f2, f18, rdn # perform operation
fmsub.s f24, f25, f2, f18, rmm # perform operation
fmsub.s f24, f25, f2, f18, rne # perform operation
fmsub.s f24, f25, f2, f18, rtz # perform operation
fmsub.s f24, f25, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xa5b8cf8d # load x3 with value 0xa5b8cf8d
sw x3, 0(x2) # store 0xa5b8cf8d in memory
flw f26, 0(x2) # load 0xa5b8cf8d from memory into f26
fmsub.s f22, f27, f30, f26, dyn # perform operation
fmsub.s f22, f27, f30, f26, rdn # perform operation
fmsub.s f22, f27, f30, f26, rmm # perform operation
fmsub.s f22, f27, f30, f26, rne # perform operation
fmsub.s f22, f27, f30, f26, rtz # perform operation
fmsub.s f22, f27, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f27, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x54dec444 # load x3 with value 0x54dec444
sw x3, 0(x2) # store 0x54dec444 in memory
flw f20, 0(x2) # load 0x54dec444 from memory into f20
fmsub.s f30, f5, f6, f20, dyn # perform operation
fmsub.s f30, f5, f6, f20, rdn # perform operation
fmsub.s f30, f5, f6, f20, rmm # perform operation
fmsub.s f30, f5, f6, f20, rne # perform operation
fmsub.s f30, f5, f6, f20, rtz # perform operation
fmsub.s f30, f5, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xdd9166b2 # load x3 with value 0xdd9166b2
sw x3, 0(x2) # store 0xdd9166b2 in memory
flw f25, 0(x2) # load 0xdd9166b2 from memory into f25
fmsub.s f27, f15, f28, f25, dyn # perform operation
fmsub.s f27, f15, f28, f25, rdn # perform operation
fmsub.s f27, f15, f28, f25, rmm # perform operation
fmsub.s f27, f15, f28, f25, rne # perform operation
fmsub.s f27, f15, f28, f25, rtz # perform operation
fmsub.s f27, f15, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x7ce53a00 # load x3 with value 0x7ce53a00
sw x3, 0(x2) # store 0x7ce53a00 in memory
flw f30, 0(x2) # load 0x7ce53a00 from memory into f30
fmsub.s f23, f10, f8, f30, dyn # perform operation
fmsub.s f23, f10, f8, f30, rdn # perform operation
fmsub.s f23, f10, f8, f30, rmm # perform operation
fmsub.s f23, f10, f8, f30, rne # perform operation
fmsub.s f23, f10, f8, f30, rtz # perform operation
fmsub.s f23, f10, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x87aa607b # load x3 with value 0x87aa607b
sw x3, 0(x2) # store 0x87aa607b in memory
flw f10, 0(x2) # load 0x87aa607b from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmsub.s f8, f26, f10, f13, dyn # perform operation
fmsub.s f8, f26, f10, f13, rdn # perform operation
fmsub.s f8, f26, f10, f13, rmm # perform operation
fmsub.s f8, f26, f10, f13, rne # perform operation
fmsub.s f8, f26, f10, f13, rtz # perform operation
fmsub.s f8, f26, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f26, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xba7bb8f6 # load x3 with value 0xba7bb8f6
sw x3, 0(x2) # store 0xba7bb8f6 in memory
flw f20, 0(x2) # load 0xba7bb8f6 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmsub.s f18, f13, f20, f21, dyn # perform operation
fmsub.s f18, f13, f20, f21, rdn # perform operation
fmsub.s f18, f13, f20, f21, rmm # perform operation
fmsub.s f18, f13, f20, f21, rne # perform operation
fmsub.s f18, f13, f20, f21, rtz # perform operation
fmsub.s f18, f13, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xac831ee3 # load x3 with value 0xac831ee3
sw x3, 0(x2) # store 0xac831ee3 in memory
flw f24, 0(x2) # load 0xac831ee3 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fmsub.s f8, f27, f24, f10, dyn # perform operation
fmsub.s f8, f27, f24, f10, rdn # perform operation
fmsub.s f8, f27, f24, f10, rmm # perform operation
fmsub.s f8, f27, f24, f10, rne # perform operation
fmsub.s f8, f27, f24, f10, rtz # perform operation
fmsub.s f8, f27, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x31ad7317 # load x3 with value 0x31ad7317
sw x3, 0(x2) # store 0x31ad7317 in memory
flw f1, 0(x2) # load 0x31ad7317 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmsub.s f3, f23, f1, f11, dyn # perform operation
fmsub.s f3, f23, f1, f11, rdn # perform operation
fmsub.s f3, f23, f1, f11, rmm # perform operation
fmsub.s f3, f23, f1, f11, rne # perform operation
fmsub.s f3, f23, f1, f11, rtz # perform operation
fmsub.s f3, f23, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x1fe3b3da # load x3 with value 0x1fe3b3da
sw x3, 0(x2) # store 0x1fe3b3da in memory
flw f3, 0(x2) # load 0x1fe3b3da from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmsub.s f11, f8, f3, f17, dyn # perform operation
fmsub.s f11, f8, f3, f17, rdn # perform operation
fmsub.s f11, f8, f3, f17, rmm # perform operation
fmsub.s f11, f8, f3, f17, rne # perform operation
fmsub.s f11, f8, f3, f17, rtz # perform operation
fmsub.s f11, f8, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xf75b8571 # load x3 with value 0xf75b8571
sw x3, 0(x2) # store 0xf75b8571 in memory
flw f12, 0(x2) # load 0xf75b8571 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmsub.s f14, f9, f12, f17, dyn # perform operation
fmsub.s f14, f9, f12, f17, rdn # perform operation
fmsub.s f14, f9, f12, f17, rmm # perform operation
fmsub.s f14, f9, f12, f17, rne # perform operation
fmsub.s f14, f9, f12, f17, rtz # perform operation
fmsub.s f14, f9, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x2f41729c # load x3 with value 0x2f41729c
sw x3, 0(x2) # store 0x2f41729c in memory
flw f11, 0(x2) # load 0x2f41729c from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f31, f2, f11, f14, dyn # perform operation
fmsub.s f31, f2, f11, f14, rdn # perform operation
fmsub.s f31, f2, f11, f14, rmm # perform operation
fmsub.s f31, f2, f11, f14, rne # perform operation
fmsub.s f31, f2, f11, f14, rtz # perform operation
fmsub.s f31, f2, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x7de25596 # load x3 with value 0x7de25596
sw x3, 0(x2) # store 0x7de25596 in memory
flw f3, 0(x2) # load 0x7de25596 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f13, f20, f3, f7, dyn # perform operation
fmsub.s f13, f20, f3, f7, rdn # perform operation
fmsub.s f13, f20, f3, f7, rmm # perform operation
fmsub.s f13, f20, f3, f7, rne # perform operation
fmsub.s f13, f20, f3, f7, rtz # perform operation
fmsub.s f13, f20, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xdd4979cd # load x3 with value 0xdd4979cd
sw x3, 0(x2) # store 0xdd4979cd in memory
flw f20, 0(x2) # load 0xdd4979cd from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
fmsub.s f21, f31, f20, f9, dyn # perform operation
fmsub.s f21, f31, f20, f9, rdn # perform operation
fmsub.s f21, f31, f20, f9, rmm # perform operation
fmsub.s f21, f31, f20, f9, rne # perform operation
fmsub.s f21, f31, f20, f9, rtz # perform operation
fmsub.s f21, f31, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x49355143 # load x3 with value 0x49355143
sw x3, 0(x2) # store 0x49355143 in memory
flw f16, 0(x2) # load 0x49355143 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f2, f1, f16, f23, dyn # perform operation
fmsub.s f2, f1, f16, f23, rdn # perform operation
fmsub.s f2, f1, f16, f23, rmm # perform operation
fmsub.s f2, f1, f16, f23, rne # perform operation
fmsub.s f2, f1, f16, f23, rtz # perform operation
fmsub.s f2, f1, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f1, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x1add9593 # load x3 with value 0x1add9593
sw x3, 0(x2) # store 0x1add9593 in memory
flw f11, 0(x2) # load 0x1add9593 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f24, f16, f11, f20, dyn # perform operation
fmsub.s f24, f16, f11, f20, rdn # perform operation
fmsub.s f24, f16, f11, f20, rmm # perform operation
fmsub.s f24, f16, f11, f20, rne # perform operation
fmsub.s f24, f16, f11, f20, rtz # perform operation
fmsub.s f24, f16, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x24bfca61 # load x3 with value 0x24bfca61
sw x3, 0(x2) # store 0x24bfca61 in memory
flw f26, 0(x2) # load 0x24bfca61 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmsub.s f24, f16, f26, f8, dyn # perform operation
fmsub.s f24, f16, f26, f8, rdn # perform operation
fmsub.s f24, f16, f26, f8, rmm # perform operation
fmsub.s f24, f16, f26, f8, rne # perform operation
fmsub.s f24, f16, f26, f8, rtz # perform operation
fmsub.s f24, f16, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f26, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x964b0aad # load x3 with value 0x964b0aad
sw x3, 0(x2) # store 0x964b0aad in memory
flw f12, 0(x2) # load 0x964b0aad from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmsub.s f2, f17, f12, f15, dyn # perform operation
fmsub.s f2, f17, f12, f15, rdn # perform operation
fmsub.s f2, f17, f12, f15, rmm # perform operation
fmsub.s f2, f17, f12, f15, rne # perform operation
fmsub.s f2, f17, f12, f15, rtz # perform operation
fmsub.s f2, f17, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x0c492457 # load x3 with value 0x0c492457
sw x3, 0(x2) # store 0x0c492457 in memory
flw f27, 0(x2) # load 0x0c492457 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f25, f19, f27, f8, dyn # perform operation
fmsub.s f25, f19, f27, f8, rdn # perform operation
fmsub.s f25, f19, f27, f8, rmm # perform operation
fmsub.s f25, f19, f27, f8, rne # perform operation
fmsub.s f25, f19, f27, f8, rtz # perform operation
fmsub.s f25, f19, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x95ccae0b # load x3 with value 0x95ccae0b
sw x3, 0(x2) # store 0x95ccae0b in memory
flw f26, 0(x2) # load 0x95ccae0b from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmsub.s f25, f10, f26, f18, dyn # perform operation
fmsub.s f25, f10, f26, f18, rdn # perform operation
fmsub.s f25, f10, f26, f18, rmm # perform operation
fmsub.s f25, f10, f26, f18, rne # perform operation
fmsub.s f25, f10, f26, f18, rtz # perform operation
fmsub.s f25, f10, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xf5e7a414 # load x3 with value 0xf5e7a414
sw x3, 0(x2) # store 0xf5e7a414 in memory
flw f31, 0(x2) # load 0xf5e7a414 from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmsub.s f21, f8, f31, f9, dyn # perform operation
fmsub.s f21, f8, f31, f9, rdn # perform operation
fmsub.s f21, f8, f31, f9, rmm # perform operation
fmsub.s f21, f8, f31, f9, rne # perform operation
fmsub.s f21, f8, f31, f9, rtz # perform operation
fmsub.s f21, f8, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x32779b0e # load x3 with value 0x32779b0e
sw x3, 0(x2) # store 0x32779b0e in memory
flw f7, 0(x2) # load 0x32779b0e from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f17, f8, f7, f26, dyn # perform operation
fmsub.s f17, f8, f7, f26, rdn # perform operation
fmsub.s f17, f8, f7, f26, rmm # perform operation
fmsub.s f17, f8, f7, f26, rne # perform operation
fmsub.s f17, f8, f7, f26, rtz # perform operation
fmsub.s f17, f8, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x7a5a6979 # load x3 with value 0x7a5a6979
sw x3, 0(x2) # store 0x7a5a6979 in memory
flw f29, 0(x2) # load 0x7a5a6979 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmsub.s f21, f8, f29, f23, dyn # perform operation
fmsub.s f21, f8, f29, f23, rdn # perform operation
fmsub.s f21, f8, f29, f23, rmm # perform operation
fmsub.s f21, f8, f29, f23, rne # perform operation
fmsub.s f21, f8, f29, f23, rtz # perform operation
fmsub.s f21, f8, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x5d7a1dae # load x3 with value 0x5d7a1dae
sw x3, 0(x2) # store 0x5d7a1dae in memory
flw f17, 0(x2) # load 0x5d7a1dae from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmsub.s f1, f3, f17, f8, dyn # perform operation
fmsub.s f1, f3, f17, f8, rdn # perform operation
fmsub.s f1, f3, f17, f8, rmm # perform operation
fmsub.s f1, f3, f17, f8, rne # perform operation
fmsub.s f1, f3, f17, f8, rtz # perform operation
fmsub.s f1, f3, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f3, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xe2f9b2a1 # load x3 with value 0xe2f9b2a1
sw x3, 0(x2) # store 0xe2f9b2a1 in memory
flw f19, 0(x2) # load 0xe2f9b2a1 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fmsub.s f28, f11, f19, f22, dyn # perform operation
fmsub.s f28, f11, f19, f22, rdn # perform operation
fmsub.s f28, f11, f19, f22, rmm # perform operation
fmsub.s f28, f11, f19, f22, rne # perform operation
fmsub.s f28, f11, f19, f22, rtz # perform operation
fmsub.s f28, f11, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x3310c3b7 # load x3 with value 0x3310c3b7
sw x3, 0(x2) # store 0x3310c3b7 in memory
flw f31, 0(x2) # load 0x3310c3b7 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmsub.s f5, f3, f31, f30, dyn # perform operation
fmsub.s f5, f3, f31, f30, rdn # perform operation
fmsub.s f5, f3, f31, f30, rmm # perform operation
fmsub.s f5, f3, f31, f30, rne # perform operation
fmsub.s f5, f3, f31, f30, rtz # perform operation
fmsub.s f5, f3, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x25f52be5 # load x3 with value 0x25f52be5
sw x3, 0(x2) # store 0x25f52be5 in memory
flw f12, 0(x2) # load 0x25f52be5 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmsub.s f20, f17, f12, f23, dyn # perform operation
fmsub.s f20, f17, f12, f23, rdn # perform operation
fmsub.s f20, f17, f12, f23, rmm # perform operation
fmsub.s f20, f17, f12, f23, rne # perform operation
fmsub.s f20, f17, f12, f23, rtz # perform operation
fmsub.s f20, f17, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xfdcb2e08 # load x3 with value 0xfdcb2e08
sw x3, 0(x2) # store 0xfdcb2e08 in memory
flw f13, 0(x2) # load 0xfdcb2e08 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fmsub.s f7, f3, f13, f24, dyn # perform operation
fmsub.s f7, f3, f13, f24, rdn # perform operation
fmsub.s f7, f3, f13, f24, rmm # perform operation
fmsub.s f7, f3, f13, f24, rne # perform operation
fmsub.s f7, f3, f13, f24, rtz # perform operation
fmsub.s f7, f3, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x138ff7f9 # load x3 with value 0x138ff7f9
sw x3, 0(x2) # store 0x138ff7f9 in memory
flw f28, 0(x2) # load 0x138ff7f9 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmsub.s f1, f22, f28, f10, dyn # perform operation
fmsub.s f1, f22, f28, f10, rdn # perform operation
fmsub.s f1, f22, f28, f10, rmm # perform operation
fmsub.s f1, f22, f28, f10, rne # perform operation
fmsub.s f1, f22, f28, f10, rtz # perform operation
fmsub.s f1, f22, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x97511d8a # load x3 with value 0x97511d8a
sw x3, 0(x2) # store 0x97511d8a in memory
flw f19, 0(x2) # load 0x97511d8a from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmsub.s f10, f29, f19, f20, dyn # perform operation
fmsub.s f10, f29, f19, f20, rdn # perform operation
fmsub.s f10, f29, f19, f20, rmm # perform operation
fmsub.s f10, f29, f19, f20, rne # perform operation
fmsub.s f10, f29, f19, f20, rtz # perform operation
fmsub.s f10, f29, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f29, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xa3f98333 # load x3 with value 0xa3f98333
sw x3, 0(x2) # store 0xa3f98333 in memory
flw f14, 0(x2) # load 0xa3f98333 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmsub.s f17, f7, f14, f3, dyn # perform operation
fmsub.s f17, f7, f14, f3, rdn # perform operation
fmsub.s f17, f7, f14, f3, rmm # perform operation
fmsub.s f17, f7, f14, f3, rne # perform operation
fmsub.s f17, f7, f14, f3, rtz # perform operation
fmsub.s f17, f7, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x81172236 # load x3 with value 0x81172236
sw x3, 0(x2) # store 0x81172236 in memory
flw f26, 0(x2) # load 0x81172236 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmsub.s f25, f29, f26, f7, dyn # perform operation
fmsub.s f25, f29, f26, f7, rdn # perform operation
fmsub.s f25, f29, f26, f7, rmm # perform operation
fmsub.s f25, f29, f26, f7, rne # perform operation
fmsub.s f25, f29, f26, f7, rtz # perform operation
fmsub.s f25, f29, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x1085d335 # load x3 with value 0x1085d335
sw x3, 0(x2) # store 0x1085d335 in memory
flw f30, 0(x2) # load 0x1085d335 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f10, f14, f30, f31, dyn # perform operation
fmsub.s f10, f14, f30, f31, rdn # perform operation
fmsub.s f10, f14, f30, f31, rmm # perform operation
fmsub.s f10, f14, f30, f31, rne # perform operation
fmsub.s f10, f14, f30, f31, rtz # perform operation
fmsub.s f10, f14, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xd8f7752d # load x3 with value 0xd8f7752d
sw x3, 0(x2) # store 0xd8f7752d in memory
flw f21, 0(x2) # load 0xd8f7752d from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmsub.s f30, f13, f21, f11, dyn # perform operation
fmsub.s f30, f13, f21, f11, rdn # perform operation
fmsub.s f30, f13, f21, f11, rmm # perform operation
fmsub.s f30, f13, f21, f11, rne # perform operation
fmsub.s f30, f13, f21, f11, rtz # perform operation
fmsub.s f30, f13, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x64d530cc # load x3 with value 0x64d530cc
sw x3, 0(x2) # store 0x64d530cc in memory
flw f25, 0(x2) # load 0x64d530cc from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmsub.s f12, f23, f25, f1, dyn # perform operation
fmsub.s f12, f23, f25, f1, rdn # perform operation
fmsub.s f12, f23, f25, f1, rmm # perform operation
fmsub.s f12, f23, f25, f1, rne # perform operation
fmsub.s f12, f23, f25, f1, rtz # perform operation
fmsub.s f12, f23, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x94d21f6f # load x3 with value 0x94d21f6f
sw x3, 0(x2) # store 0x94d21f6f in memory
flw f8, 0(x2) # load 0x94d21f6f from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f11, f5, f8, f14, dyn # perform operation
fmsub.s f11, f5, f8, f14, rdn # perform operation
fmsub.s f11, f5, f8, f14, rmm # perform operation
fmsub.s f11, f5, f8, f14, rne # perform operation
fmsub.s f11, f5, f8, f14, rtz # perform operation
fmsub.s f11, f5, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f5, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x1e9fee50 # load x3 with value 0x1e9fee50
sw x3, 0(x2) # store 0x1e9fee50 in memory
flw f16, 0(x2) # load 0x1e9fee50 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fmsub.s f27, f5, f16, f29, dyn # perform operation
fmsub.s f27, f5, f16, f29, rdn # perform operation
fmsub.s f27, f5, f16, f29, rmm # perform operation
fmsub.s f27, f5, f16, f29, rne # perform operation
fmsub.s f27, f5, f16, f29, rtz # perform operation
fmsub.s f27, f5, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0xc106a10a # load x3 with value 0xc106a10a
sw x3, 0(x2) # store 0xc106a10a in memory
flw f7, 0(x2) # load 0xc106a10a from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmsub.s f1, f16, f7, f10, dyn # perform operation
fmsub.s f1, f16, f7, f10, rdn # perform operation
fmsub.s f1, f16, f7, f10, rmm # perform operation
fmsub.s f1, f16, f7, f10, rne # perform operation
fmsub.s f1, f16, f7, f10, rtz # perform operation
fmsub.s f1, f16, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f16, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xfbde1452 # load x3 with value 0xfbde1452
sw x3, 0(x2) # store 0xfbde1452 in memory
flw f3, 0(x2) # load 0xfbde1452 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmsub.s f6, f14, f3, f12, dyn # perform operation
fmsub.s f6, f14, f3, f12, rdn # perform operation
fmsub.s f6, f14, f3, f12, rmm # perform operation
fmsub.s f6, f14, f3, f12, rne # perform operation
fmsub.s f6, f14, f3, f12, rtz # perform operation
fmsub.s f6, f14, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f14, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xe4897a6e # load x3 with value 0xe4897a6e
sw x3, 0(x2) # store 0xe4897a6e in memory
flw f18, 0(x2) # load 0xe4897a6e from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f1, f5, f18, f24, dyn # perform operation
fmsub.s f1, f5, f18, f24, rdn # perform operation
fmsub.s f1, f5, f18, f24, rmm # perform operation
fmsub.s f1, f5, f18, f24, rne # perform operation
fmsub.s f1, f5, f18, f24, rtz # perform operation
fmsub.s f1, f5, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x7a7c5931 # load x3 with value 0x7a7c5931
sw x3, 0(x2) # store 0x7a7c5931 in memory
flw f19, 0(x2) # load 0x7a7c5931 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmsub.s f28, f7, f19, f10, dyn # perform operation
fmsub.s f28, f7, f19, f10, rdn # perform operation
fmsub.s f28, f7, f19, f10, rmm # perform operation
fmsub.s f28, f7, f19, f10, rne # perform operation
fmsub.s f28, f7, f19, f10, rtz # perform operation
fmsub.s f28, f7, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xd5595c1b # load x3 with value 0xd5595c1b
sw x3, 0(x2) # store 0xd5595c1b in memory
flw f10, 0(x2) # load 0xd5595c1b from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f2, f25, f10, f3, dyn # perform operation
fmsub.s f2, f25, f10, f3, rdn # perform operation
fmsub.s f2, f25, f10, f3, rmm # perform operation
fmsub.s f2, f25, f10, f3, rne # perform operation
fmsub.s f2, f25, f10, f3, rtz # perform operation
fmsub.s f2, f25, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f25, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x3c81e94a # load x3 with value 0x3c81e94a
sw x3, 0(x2) # store 0x3c81e94a in memory
flw f14, 0(x2) # load 0x3c81e94a from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmsub.s f2, f16, f14, f28, dyn # perform operation
fmsub.s f2, f16, f14, f28, rdn # perform operation
fmsub.s f2, f16, f14, f28, rmm # perform operation
fmsub.s f2, f16, f14, f28, rne # perform operation
fmsub.s f2, f16, f14, f28, rtz # perform operation
fmsub.s f2, f16, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f16, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x16cf4229 # load x3 with value 0x16cf4229
sw x3, 0(x2) # store 0x16cf4229 in memory
flw f19, 0(x2) # load 0x16cf4229 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f9, f18, f19, f14, dyn # perform operation
fmsub.s f9, f18, f19, f14, rdn # perform operation
fmsub.s f9, f18, f19, f14, rmm # perform operation
fmsub.s f9, f18, f19, f14, rne # perform operation
fmsub.s f9, f18, f19, f14, rtz # perform operation
fmsub.s f9, f18, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x18270c94 # load x3 with value 0x18270c94
sw x3, 0(x2) # store 0x18270c94 in memory
flw f31, 0(x2) # load 0x18270c94 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmsub.s f8, f12, f31, f10, dyn # perform operation
fmsub.s f8, f12, f31, f10, rdn # perform operation
fmsub.s f8, f12, f31, f10, rmm # perform operation
fmsub.s f8, f12, f31, f10, rne # perform operation
fmsub.s f8, f12, f31, f10, rtz # perform operation
fmsub.s f8, f12, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x70820c5d # load x3 with value 0x70820c5d
sw x3, 0(x2) # store 0x70820c5d in memory
flw f1, 0(x2) # load 0x70820c5d from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmsub.s f24, f20, f1, f10, dyn # perform operation
fmsub.s f24, f20, f1, f10, rdn # perform operation
fmsub.s f24, f20, f1, f10, rmm # perform operation
fmsub.s f24, f20, f1, f10, rne # perform operation
fmsub.s f24, f20, f1, f10, rtz # perform operation
fmsub.s f24, f20, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x9ec7fe82 # load x3 with value 0x9ec7fe82
sw x3, 0(x2) # store 0x9ec7fe82 in memory
flw f11, 0(x2) # load 0x9ec7fe82 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmsub.s f23, f14, f11, f25, dyn # perform operation
fmsub.s f23, f14, f11, f25, rdn # perform operation
fmsub.s f23, f14, f11, f25, rmm # perform operation
fmsub.s f23, f14, f11, f25, rne # perform operation
fmsub.s f23, f14, f11, f25, rtz # perform operation
fmsub.s f23, f14, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f14, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f14, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f14, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f14, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f14, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x6a658a8d # load x3 with value 0x6a658a8d
sw x3, 0(x2) # store 0x6a658a8d in memory
flw f13, 0(x2) # load 0x6a658a8d from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fmsub.s f1, f24, f13, f23, dyn # perform operation
fmsub.s f1, f24, f13, f23, rdn # perform operation
fmsub.s f1, f24, f13, f23, rmm # perform operation
fmsub.s f1, f24, f13, f23, rne # perform operation
fmsub.s f1, f24, f13, f23, rtz # perform operation
fmsub.s f1, f24, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x4a5ec107 # load x3 with value 0x4a5ec107
sw x3, 0(x2) # store 0x4a5ec107 in memory
flw f11, 0(x2) # load 0x4a5ec107 from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmsub.s f23, f31, f11, f1, dyn # perform operation
fmsub.s f23, f31, f11, f1, rdn # perform operation
fmsub.s f23, f31, f11, f1, rmm # perform operation
fmsub.s f23, f31, f11, f1, rne # perform operation
fmsub.s f23, f31, f11, f1, rtz # perform operation
fmsub.s f23, f31, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x3978d44a # load x3 with value 0x3978d44a
sw x3, 0(x2) # store 0x3978d44a in memory
flw f25, 0(x2) # load 0x3978d44a from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fmsub.s f7, f9, f25, f17, dyn # perform operation
fmsub.s f7, f9, f25, f17, rdn # perform operation
fmsub.s f7, f9, f25, f17, rmm # perform operation
fmsub.s f7, f9, f25, f17, rne # perform operation
fmsub.s f7, f9, f25, f17, rtz # perform operation
fmsub.s f7, f9, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x305549d6 # load x3 with value 0x305549d6
sw x3, 0(x2) # store 0x305549d6 in memory
flw f11, 0(x2) # load 0x305549d6 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f15, f27, f11, f28, dyn # perform operation
fmsub.s f15, f27, f11, f28, rdn # perform operation
fmsub.s f15, f27, f11, f28, rmm # perform operation
fmsub.s f15, f27, f11, f28, rne # perform operation
fmsub.s f15, f27, f11, f28, rtz # perform operation
fmsub.s f15, f27, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x9f8e0bda # load x3 with value 0x9f8e0bda
sw x3, 0(x2) # store 0x9f8e0bda in memory
flw f26, 0(x2) # load 0x9f8e0bda from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmsub.s f20, f9, f26, f18, dyn # perform operation
fmsub.s f20, f9, f26, f18, rdn # perform operation
fmsub.s f20, f9, f26, f18, rmm # perform operation
fmsub.s f20, f9, f26, f18, rne # perform operation
fmsub.s f20, f9, f26, f18, rtz # perform operation
fmsub.s f20, f9, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x1e9bdce3 # load x3 with value 0x1e9bdce3
sw x3, 0(x2) # store 0x1e9bdce3 in memory
flw f18, 0(x2) # load 0x1e9bdce3 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmsub.s f23, f1, f18, f14, dyn # perform operation
fmsub.s f23, f1, f18, f14, rdn # perform operation
fmsub.s f23, f1, f18, f14, rmm # perform operation
fmsub.s f23, f1, f18, f14, rne # perform operation
fmsub.s f23, f1, f18, f14, rtz # perform operation
fmsub.s f23, f1, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f1, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x1a74e868 # load x3 with value 0x1a74e868
sw x3, 0(x2) # store 0x1a74e868 in memory
flw f18, 0(x2) # load 0x1a74e868 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fmsub.s f2, f21, f18, f28, dyn # perform operation
fmsub.s f2, f21, f18, f28, rdn # perform operation
fmsub.s f2, f21, f18, f28, rmm # perform operation
fmsub.s f2, f21, f18, f28, rne # perform operation
fmsub.s f2, f21, f18, f28, rtz # perform operation
fmsub.s f2, f21, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xdbbc4e8c # load x3 with value 0xdbbc4e8c
sw x3, 0(x2) # store 0xdbbc4e8c in memory
flw f8, 0(x2) # load 0xdbbc4e8c from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmsub.s f31, f9, f8, f14, dyn # perform operation
fmsub.s f31, f9, f8, f14, rdn # perform operation
fmsub.s f31, f9, f8, f14, rmm # perform operation
fmsub.s f31, f9, f8, f14, rne # perform operation
fmsub.s f31, f9, f8, f14, rtz # perform operation
fmsub.s f31, f9, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0xe343b7d7 # load x3 with value 0xe343b7d7
sw x3, 0(x2) # store 0xe343b7d7 in memory
flw f25, 0(x2) # load 0xe343b7d7 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmsub.s f11, f1, f25, f10, dyn # perform operation
fmsub.s f11, f1, f25, f10, rdn # perform operation
fmsub.s f11, f1, f25, f10, rmm # perform operation
fmsub.s f11, f1, f25, f10, rne # perform operation
fmsub.s f11, f1, f25, f10, rtz # perform operation
fmsub.s f11, f1, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xf43275c5 # load x3 with value 0xf43275c5
sw x3, 0(x2) # store 0xf43275c5 in memory
flw f8, 0(x2) # load 0xf43275c5 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmsub.s f22, f27, f8, f14, dyn # perform operation
fmsub.s f22, f27, f8, f14, rdn # perform operation
fmsub.s f22, f27, f8, f14, rmm # perform operation
fmsub.s f22, f27, f8, f14, rne # perform operation
fmsub.s f22, f27, f8, f14, rtz # perform operation
fmsub.s f22, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f27, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x0cafb1b0 # load x3 with value 0x0cafb1b0
sw x3, 0(x2) # store 0x0cafb1b0 in memory
flw f24, 0(x2) # load 0x0cafb1b0 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fmsub.s f17, f25, f24, f31, dyn # perform operation
fmsub.s f17, f25, f24, f31, rdn # perform operation
fmsub.s f17, f25, f24, f31, rmm # perform operation
fmsub.s f17, f25, f24, f31, rne # perform operation
fmsub.s f17, f25, f24, f31, rtz # perform operation
fmsub.s f17, f25, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x8570452d # load x3 with value 0x8570452d
sw x3, 0(x2) # store 0x8570452d in memory
flw f19, 0(x2) # load 0x8570452d from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fmsub.s f18, f27, f19, f21, dyn # perform operation
fmsub.s f18, f27, f19, f21, rdn # perform operation
fmsub.s f18, f27, f19, f21, rmm # perform operation
fmsub.s f18, f27, f19, f21, rne # perform operation
fmsub.s f18, f27, f19, f21, rtz # perform operation
fmsub.s f18, f27, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xa8b045c1 # load x3 with value 0xa8b045c1
sw x3, 0(x2) # store 0xa8b045c1 in memory
flw f30, 0(x2) # load 0xa8b045c1 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f21, f24, f30, f28, dyn # perform operation
fmsub.s f21, f24, f30, f28, rdn # perform operation
fmsub.s f21, f24, f30, f28, rmm # perform operation
fmsub.s f21, f24, f30, f28, rne # perform operation
fmsub.s f21, f24, f30, f28, rtz # perform operation
fmsub.s f21, f24, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xccb3b26f # load x3 with value 0xccb3b26f
sw x3, 0(x2) # store 0xccb3b26f in memory
flw f31, 0(x2) # load 0xccb3b26f from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmsub.s f16, f14, f31, f3, dyn # perform operation
fmsub.s f16, f14, f31, f3, rdn # perform operation
fmsub.s f16, f14, f31, f3, rmm # perform operation
fmsub.s f16, f14, f31, f3, rne # perform operation
fmsub.s f16, f14, f31, f3, rtz # perform operation
fmsub.s f16, f14, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0xf8d0df6c # load x3 with value 0xf8d0df6c
sw x3, 0(x2) # store 0xf8d0df6c in memory
flw f18, 0(x2) # load 0xf8d0df6c from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fmsub.s f11, f29, f18, f22, dyn # perform operation
fmsub.s f11, f29, f18, f22, rdn # perform operation
fmsub.s f11, f29, f18, f22, rmm # perform operation
fmsub.s f11, f29, f18, f22, rne # perform operation
fmsub.s f11, f29, f18, f22, rtz # perform operation
fmsub.s f11, f29, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xfa637171 # load x3 with value 0xfa637171
sw x3, 0(x2) # store 0xfa637171 in memory
flw f24, 0(x2) # load 0xfa637171 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmsub.s f29, f13, f24, f10, dyn # perform operation
fmsub.s f29, f13, f24, f10, rdn # perform operation
fmsub.s f29, f13, f24, f10, rmm # perform operation
fmsub.s f29, f13, f24, f10, rne # perform operation
fmsub.s f29, f13, f24, f10, rtz # perform operation
fmsub.s f29, f13, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xe3f90a44 # load x3 with value 0xe3f90a44
sw x3, 0(x2) # store 0xe3f90a44 in memory
flw f17, 0(x2) # load 0xe3f90a44 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmsub.s f31, f3, f17, f8, dyn # perform operation
fmsub.s f31, f3, f17, f8, rdn # perform operation
fmsub.s f31, f3, f17, f8, rmm # perform operation
fmsub.s f31, f3, f17, f8, rne # perform operation
fmsub.s f31, f3, f17, f8, rtz # perform operation
fmsub.s f31, f3, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x8d8e8f4c # load x3 with value 0x8d8e8f4c
sw x3, 0(x2) # store 0x8d8e8f4c in memory
flw f18, 0(x2) # load 0x8d8e8f4c from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f28, f11, f18, f26, dyn # perform operation
fmsub.s f28, f11, f18, f26, rdn # perform operation
fmsub.s f28, f11, f18, f26, rmm # perform operation
fmsub.s f28, f11, f18, f26, rne # perform operation
fmsub.s f28, f11, f18, f26, rtz # perform operation
fmsub.s f28, f11, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x94366920 # load x3 with value 0x94366920
sw x3, 0(x2) # store 0x94366920 in memory
flw f1, 0(x2) # load 0x94366920 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f30, f16, f1, f28, dyn # perform operation
fmsub.s f30, f16, f1, f28, rdn # perform operation
fmsub.s f30, f16, f1, f28, rmm # perform operation
fmsub.s f30, f16, f1, f28, rne # perform operation
fmsub.s f30, f16, f1, f28, rtz # perform operation
fmsub.s f30, f16, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x010fd055 # load x3 with value 0x010fd055
sw x3, 0(x2) # store 0x010fd055 in memory
flw f24, 0(x2) # load 0x010fd055 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmsub.s f23, f13, f24, f22, dyn # perform operation
fmsub.s f23, f13, f24, f22, rdn # perform operation
fmsub.s f23, f13, f24, f22, rmm # perform operation
fmsub.s f23, f13, f24, f22, rne # perform operation
fmsub.s f23, f13, f24, f22, rtz # perform operation
fmsub.s f23, f13, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xc3129c3f # load x3 with value 0xc3129c3f
sw x3, 0(x2) # store 0xc3129c3f in memory
flw f28, 0(x2) # load 0xc3129c3f from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmsub.s f26, f20, f28, f12, dyn # perform operation
fmsub.s f26, f20, f28, f12, rdn # perform operation
fmsub.s f26, f20, f28, f12, rmm # perform operation
fmsub.s f26, f20, f28, f12, rne # perform operation
fmsub.s f26, f20, f28, f12, rtz # perform operation
fmsub.s f26, f20, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f28, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x242245bc # load x3 with value 0x242245bc
sw x3, 0(x2) # store 0x242245bc in memory
flw f22, 0(x2) # load 0x242245bc from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmsub.s f13, f15, f22, f27, dyn # perform operation
fmsub.s f13, f15, f22, f27, rdn # perform operation
fmsub.s f13, f15, f22, f27, rmm # perform operation
fmsub.s f13, f15, f22, f27, rne # perform operation
fmsub.s f13, f15, f22, f27, rtz # perform operation
fmsub.s f13, f15, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x9693ef99 # load x3 with value 0x9693ef99
sw x3, 0(x2) # store 0x9693ef99 in memory
flw f3, 0(x2) # load 0x9693ef99 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f26, f13, f3, f24, dyn # perform operation
fmsub.s f26, f13, f3, f24, rdn # perform operation
fmsub.s f26, f13, f3, f24, rmm # perform operation
fmsub.s f26, f13, f3, f24, rne # perform operation
fmsub.s f26, f13, f3, f24, rtz # perform operation
fmsub.s f26, f13, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xf0594f56 # load x3 with value 0xf0594f56
sw x3, 0(x2) # store 0xf0594f56 in memory
flw f13, 0(x2) # load 0xf0594f56 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmsub.s f3, f19, f13, f30, dyn # perform operation
fmsub.s f3, f19, f13, f30, rdn # perform operation
fmsub.s f3, f19, f13, f30, rmm # perform operation
fmsub.s f3, f19, f13, f30, rne # perform operation
fmsub.s f3, f19, f13, f30, rtz # perform operation
fmsub.s f3, f19, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f19, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xafe974d9 # load x3 with value 0xafe974d9
sw x3, 0(x2) # store 0xafe974d9 in memory
flw f17, 0(x2) # load 0xafe974d9 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmsub.s f21, f20, f17, f7, dyn # perform operation
fmsub.s f21, f20, f17, f7, rdn # perform operation
fmsub.s f21, f20, f17, f7, rmm # perform operation
fmsub.s f21, f20, f17, f7, rne # perform operation
fmsub.s f21, f20, f17, f7, rtz # perform operation
fmsub.s f21, f20, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x5b832856 # load x3 with value 0x5b832856
sw x3, 0(x2) # store 0x5b832856 in memory
flw f3, 0(x2) # load 0x5b832856 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmsub.s f5, f26, f3, f19, dyn # perform operation
fmsub.s f5, f26, f3, f19, rdn # perform operation
fmsub.s f5, f26, f3, f19, rmm # perform operation
fmsub.s f5, f26, f3, f19, rne # perform operation
fmsub.s f5, f26, f3, f19, rtz # perform operation
fmsub.s f5, f26, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0xbbf1b513 # load x3 with value 0xbbf1b513
sw x3, 0(x2) # store 0xbbf1b513 in memory
flw f17, 0(x2) # load 0xbbf1b513 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f1, f26, f17, f6, dyn # perform operation
fmsub.s f1, f26, f17, f6, rdn # perform operation
fmsub.s f1, f26, f17, f6, rmm # perform operation
fmsub.s f1, f26, f17, f6, rne # perform operation
fmsub.s f1, f26, f17, f6, rtz # perform operation
fmsub.s f1, f26, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f17, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x68f61f84 # load x3 with value 0x68f61f84
sw x3, 0(x2) # store 0x68f61f84 in memory
flw f3, 0(x2) # load 0x68f61f84 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fmsub.s f8, f7, f3, f31, dyn # perform operation
fmsub.s f8, f7, f3, f31, rdn # perform operation
fmsub.s f8, f7, f3, f31, rmm # perform operation
fmsub.s f8, f7, f3, f31, rne # perform operation
fmsub.s f8, f7, f3, f31, rtz # perform operation
fmsub.s f8, f7, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x676427f1 # load x3 with value 0x676427f1
sw x3, 0(x2) # store 0x676427f1 in memory
flw f12, 0(x2) # load 0x676427f1 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmsub.s f5, f6, f12, f13, dyn # perform operation
fmsub.s f5, f6, f12, f13, rdn # perform operation
fmsub.s f5, f6, f12, f13, rmm # perform operation
fmsub.s f5, f6, f12, f13, rne # perform operation
fmsub.s f5, f6, f12, f13, rtz # perform operation
fmsub.s f5, f6, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xbc539bc6 # load x3 with value 0xbc539bc6
sw x3, 0(x2) # store 0xbc539bc6 in memory
flw f10, 0(x2) # load 0xbc539bc6 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmsub.s f12, f22, f10, f13, dyn # perform operation
fmsub.s f12, f22, f10, f13, rdn # perform operation
fmsub.s f12, f22, f10, f13, rmm # perform operation
fmsub.s f12, f22, f10, f13, rne # perform operation
fmsub.s f12, f22, f10, f13, rtz # perform operation
fmsub.s f12, f22, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f22, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f22, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f22, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f22, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f22, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0xe2fb04de # load x3 with value 0xe2fb04de
sw x3, 0(x2) # store 0xe2fb04de in memory
flw f16, 0(x2) # load 0xe2fb04de from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmsub.s f7, f5, f16, f8, dyn # perform operation
fmsub.s f7, f5, f16, f8, rdn # perform operation
fmsub.s f7, f5, f16, f8, rmm # perform operation
fmsub.s f7, f5, f16, f8, rne # perform operation
fmsub.s f7, f5, f16, f8, rtz # perform operation
fmsub.s f7, f5, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xc2636a1e # load x3 with value 0xc2636a1e
sw x3, 0(x2) # store 0xc2636a1e in memory
flw f24, 0(x2) # load 0xc2636a1e from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f19, f25, f24, f28, dyn # perform operation
fmsub.s f19, f25, f24, f28, rdn # perform operation
fmsub.s f19, f25, f24, f28, rmm # perform operation
fmsub.s f19, f25, f24, f28, rne # perform operation
fmsub.s f19, f25, f24, f28, rtz # perform operation
fmsub.s f19, f25, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xea1e7be9 # load x3 with value 0xea1e7be9
sw x3, 0(x2) # store 0xea1e7be9 in memory
flw f2, 0(x2) # load 0xea1e7be9 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmsub.s f19, f25, f2, f15, dyn # perform operation
fmsub.s f19, f25, f2, f15, rdn # perform operation
fmsub.s f19, f25, f2, f15, rmm # perform operation
fmsub.s f19, f25, f2, f15, rne # perform operation
fmsub.s f19, f25, f2, f15, rtz # perform operation
fmsub.s f19, f25, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x8fce89ca # load x3 with value 0x8fce89ca
sw x3, 0(x2) # store 0x8fce89ca in memory
flw f26, 0(x2) # load 0x8fce89ca from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fmsub.s f6, f13, f26, f22, dyn # perform operation
fmsub.s f6, f13, f26, f22, rdn # perform operation
fmsub.s f6, f13, f26, f22, rmm # perform operation
fmsub.s f6, f13, f26, f22, rne # perform operation
fmsub.s f6, f13, f26, f22, rtz # perform operation
fmsub.s f6, f13, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xb3f93b29 # load x3 with value 0xb3f93b29
sw x3, 0(x2) # store 0xb3f93b29 in memory
flw f20, 0(x2) # load 0xb3f93b29 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmsub.s f13, f28, f20, f27, dyn # perform operation
fmsub.s f13, f28, f20, f27, rdn # perform operation
fmsub.s f13, f28, f20, f27, rmm # perform operation
fmsub.s f13, f28, f20, f27, rne # perform operation
fmsub.s f13, f28, f20, f27, rtz # perform operation
fmsub.s f13, f28, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x3900a7ce # load x3 with value 0x3900a7ce
sw x3, 0(x2) # store 0x3900a7ce in memory
flw f14, 0(x2) # load 0x3900a7ce from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f23, f26, f14, f29, dyn # perform operation
fmsub.s f23, f26, f14, f29, rdn # perform operation
fmsub.s f23, f26, f14, f29, rmm # perform operation
fmsub.s f23, f26, f14, f29, rne # perform operation
fmsub.s f23, f26, f14, f29, rtz # perform operation
fmsub.s f23, f26, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f26, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f26, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f26, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f26, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f26, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x20be272e # load x3 with value 0x20be272e
sw x3, 0(x2) # store 0x20be272e in memory
flw f15, 0(x2) # load 0x20be272e from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fmsub.s f17, f3, f15, f30, dyn # perform operation
fmsub.s f17, f3, f15, f30, rdn # perform operation
fmsub.s f17, f3, f15, f30, rmm # perform operation
fmsub.s f17, f3, f15, f30, rne # perform operation
fmsub.s f17, f3, f15, f30, rtz # perform operation
fmsub.s f17, f3, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0xcd6ebb68 # load x3 with value 0xcd6ebb68
sw x3, 0(x2) # store 0xcd6ebb68 in memory
flw f14, 0(x2) # load 0xcd6ebb68 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmsub.s f9, f21, f14, f20, dyn # perform operation
fmsub.s f9, f21, f14, f20, rdn # perform operation
fmsub.s f9, f21, f14, f20, rmm # perform operation
fmsub.s f9, f21, f14, f20, rne # perform operation
fmsub.s f9, f21, f14, f20, rtz # perform operation
fmsub.s f9, f21, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x37e91182 # load x3 with value 0x37e91182
sw x3, 0(x2) # store 0x37e91182 in memory
flw f5, 0(x2) # load 0x37e91182 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmsub.s f28, f3, f5, f18, dyn # perform operation
fmsub.s f28, f3, f5, f18, rdn # perform operation
fmsub.s f28, f3, f5, f18, rmm # perform operation
fmsub.s f28, f3, f5, f18, rne # perform operation
fmsub.s f28, f3, f5, f18, rtz # perform operation
fmsub.s f28, f3, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f3, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xfe6f9278 # load x3 with value 0xfe6f9278
sw x3, 0(x2) # store 0xfe6f9278 in memory
flw f9, 0(x2) # load 0xfe6f9278 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f13, f24, f9, f23, dyn # perform operation
fmsub.s f13, f24, f9, f23, rdn # perform operation
fmsub.s f13, f24, f9, f23, rmm # perform operation
fmsub.s f13, f24, f9, f23, rne # perform operation
fmsub.s f13, f24, f9, f23, rtz # perform operation
fmsub.s f13, f24, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f9, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0xd456da0b # load x3 with value 0xd456da0b
sw x3, 0(x2) # store 0xd456da0b in memory
flw f27, 0(x2) # load 0xd456da0b from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmsub.s f24, f10, f27, f3, dyn # perform operation
fmsub.s f24, f10, f27, f3, rdn # perform operation
fmsub.s f24, f10, f27, f3, rmm # perform operation
fmsub.s f24, f10, f27, f3, rne # perform operation
fmsub.s f24, f10, f27, f3, rtz # perform operation
fmsub.s f24, f10, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f10, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x70b18062 # load x3 with value 0x70b18062
sw x3, 0(x2) # store 0x70b18062 in memory
flw f21, 0(x2) # load 0x70b18062 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmsub.s f12, f20, f21, f27, dyn # perform operation
fmsub.s f12, f20, f21, f27, rdn # perform operation
fmsub.s f12, f20, f21, f27, rmm # perform operation
fmsub.s f12, f20, f21, f27, rne # perform operation
fmsub.s f12, f20, f21, f27, rtz # perform operation
fmsub.s f12, f20, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x8ce09576 # load x3 with value 0x8ce09576
sw x3, 0(x2) # store 0x8ce09576 in memory
flw f2, 0(x2) # load 0x8ce09576 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmsub.s f23, f12, f2, f14, dyn # perform operation
fmsub.s f23, f12, f2, f14, rdn # perform operation
fmsub.s f23, f12, f2, f14, rmm # perform operation
fmsub.s f23, f12, f2, f14, rne # perform operation
fmsub.s f23, f12, f2, f14, rtz # perform operation
fmsub.s f23, f12, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xa49b3660 # load x3 with value 0xa49b3660
sw x3, 0(x2) # store 0xa49b3660 in memory
flw f30, 0(x2) # load 0xa49b3660 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmsub.s f31, f11, f30, f15, dyn # perform operation
fmsub.s f31, f11, f30, f15, rdn # perform operation
fmsub.s f31, f11, f30, f15, rmm # perform operation
fmsub.s f31, f11, f30, f15, rne # perform operation
fmsub.s f31, f11, f30, f15, rtz # perform operation
fmsub.s f31, f11, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x2893b423 # load x3 with value 0x2893b423
sw x3, 0(x2) # store 0x2893b423 in memory
flw f3, 0(x2) # load 0x2893b423 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fmsub.s f11, f12, f3, f10, dyn # perform operation
fmsub.s f11, f12, f3, f10, rdn # perform operation
fmsub.s f11, f12, f3, f10, rmm # perform operation
fmsub.s f11, f12, f3, f10, rne # perform operation
fmsub.s f11, f12, f3, f10, rtz # perform operation
fmsub.s f11, f12, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x174d64fe # load x3 with value 0x174d64fe
sw x3, 0(x2) # store 0x174d64fe in memory
flw f7, 0(x2) # load 0x174d64fe from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmsub.s f23, f9, f7, f27, dyn # perform operation
fmsub.s f23, f9, f7, f27, rdn # perform operation
fmsub.s f23, f9, f7, f27, rmm # perform operation
fmsub.s f23, f9, f7, f27, rne # perform operation
fmsub.s f23, f9, f7, f27, rtz # perform operation
fmsub.s f23, f9, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x1c09230d # load x3 with value 0x1c09230d
sw x3, 0(x2) # store 0x1c09230d in memory
flw f13, 0(x2) # load 0x1c09230d from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmsub.s f30, f26, f13, f2, dyn # perform operation
fmsub.s f30, f26, f13, f2, rdn # perform operation
fmsub.s f30, f26, f13, f2, rmm # perform operation
fmsub.s f30, f26, f13, f2, rne # perform operation
fmsub.s f30, f26, f13, f2, rtz # perform operation
fmsub.s f30, f26, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x35d7cec7 # load x3 with value 0x35d7cec7
sw x3, 0(x2) # store 0x35d7cec7 in memory
flw f5, 0(x2) # load 0x35d7cec7 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmsub.s f2, f10, f5, f23, dyn # perform operation
fmsub.s f2, f10, f5, f23, rdn # perform operation
fmsub.s f2, f10, f5, f23, rmm # perform operation
fmsub.s f2, f10, f5, f23, rne # perform operation
fmsub.s f2, f10, f5, f23, rtz # perform operation
fmsub.s f2, f10, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f10, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xcb1eb917 # load x3 with value 0xcb1eb917
sw x3, 0(x2) # store 0xcb1eb917 in memory
flw f10, 0(x2) # load 0xcb1eb917 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmsub.s f21, f22, f10, f20, dyn # perform operation
fmsub.s f21, f22, f10, f20, rdn # perform operation
fmsub.s f21, f22, f10, f20, rmm # perform operation
fmsub.s f21, f22, f10, f20, rne # perform operation
fmsub.s f21, f22, f10, f20, rtz # perform operation
fmsub.s f21, f22, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xf664327d # load x3 with value 0xf664327d
sw x3, 0(x2) # store 0xf664327d in memory
flw f10, 0(x2) # load 0xf664327d from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmsub.s f12, f22, f10, f8, dyn # perform operation
fmsub.s f12, f22, f10, f8, rdn # perform operation
fmsub.s f12, f22, f10, f8, rmm # perform operation
fmsub.s f12, f22, f10, f8, rne # perform operation
fmsub.s f12, f22, f10, f8, rtz # perform operation
fmsub.s f12, f22, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f22, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f22, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f22, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f22, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f22, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x484e09ad # load x3 with value 0x484e09ad
sw x3, 0(x2) # store 0x484e09ad in memory
flw f7, 0(x2) # load 0x484e09ad from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmsub.s f12, f31, f7, f18, dyn # perform operation
fmsub.s f12, f31, f7, f18, rdn # perform operation
fmsub.s f12, f31, f7, f18, rmm # perform operation
fmsub.s f12, f31, f7, f18, rne # perform operation
fmsub.s f12, f31, f7, f18, rtz # perform operation
fmsub.s f12, f31, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f31, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xbe7bed96 # load x3 with value 0xbe7bed96
sw x3, 0(x2) # store 0xbe7bed96 in memory
flw f27, 0(x2) # load 0xbe7bed96 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f2, f28, f27, f23, dyn # perform operation
fmsub.s f2, f28, f27, f23, rdn # perform operation
fmsub.s f2, f28, f27, f23, rmm # perform operation
fmsub.s f2, f28, f27, f23, rne # perform operation
fmsub.s f2, f28, f27, f23, rtz # perform operation
fmsub.s f2, f28, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x5a800ac3 # load x3 with value 0x5a800ac3
sw x3, 0(x2) # store 0x5a800ac3 in memory
flw f19, 0(x2) # load 0x5a800ac3 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmsub.s f31, f9, f19, f24, dyn # perform operation
fmsub.s f31, f9, f19, f24, rdn # perform operation
fmsub.s f31, f9, f19, f24, rmm # perform operation
fmsub.s f31, f9, f19, f24, rne # perform operation
fmsub.s f31, f9, f19, f24, rtz # perform operation
fmsub.s f31, f9, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x81d09a57 # load x3 with value 0x81d09a57
sw x3, 0(x2) # store 0x81d09a57 in memory
flw f7, 0(x2) # load 0x81d09a57 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmsub.s f6, f19, f7, f21, dyn # perform operation
fmsub.s f6, f19, f7, f21, rdn # perform operation
fmsub.s f6, f19, f7, f21, rmm # perform operation
fmsub.s f6, f19, f7, f21, rne # perform operation
fmsub.s f6, f19, f7, f21, rtz # perform operation
fmsub.s f6, f19, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xcae71115 # load x3 with value 0xcae71115
sw x3, 0(x2) # store 0xcae71115 in memory
flw f31, 0(x2) # load 0xcae71115 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmsub.s f14, f28, f31, f5, dyn # perform operation
fmsub.s f14, f28, f31, f5, rdn # perform operation
fmsub.s f14, f28, f31, f5, rmm # perform operation
fmsub.s f14, f28, f31, f5, rne # perform operation
fmsub.s f14, f28, f31, f5, rtz # perform operation
fmsub.s f14, f28, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x276dabae # load x3 with value 0x276dabae
sw x3, 0(x2) # store 0x276dabae in memory
flw f13, 0(x2) # load 0x276dabae from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmsub.s f3, f19, f13, f28, dyn # perform operation
fmsub.s f3, f19, f13, f28, rdn # perform operation
fmsub.s f3, f19, f13, f28, rmm # perform operation
fmsub.s f3, f19, f13, f28, rne # perform operation
fmsub.s f3, f19, f13, f28, rtz # perform operation
fmsub.s f3, f19, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f19, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x64e42c65 # load x3 with value 0x64e42c65
sw x3, 0(x2) # store 0x64e42c65 in memory
flw f26, 0(x2) # load 0x64e42c65 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmsub.s f1, f6, f26, f18, dyn # perform operation
fmsub.s f1, f6, f26, f18, rdn # perform operation
fmsub.s f1, f6, f26, f18, rmm # perform operation
fmsub.s f1, f6, f26, f18, rne # perform operation
fmsub.s f1, f6, f26, f18, rtz # perform operation
fmsub.s f1, f6, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xafd315a4 # load x3 with value 0xafd315a4
sw x3, 0(x2) # store 0xafd315a4 in memory
flw f31, 0(x2) # load 0xafd315a4 from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f21, f28, f31, f29, dyn # perform operation
fmsub.s f21, f28, f31, f29, rdn # perform operation
fmsub.s f21, f28, f31, f29, rmm # perform operation
fmsub.s f21, f28, f31, f29, rne # perform operation
fmsub.s f21, f28, f31, f29, rtz # perform operation
fmsub.s f21, f28, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f28, f31, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x6387c419 # load x3 with value 0x6387c419
sw x3, 0(x2) # store 0x6387c419 in memory
flw f15, 0(x2) # load 0x6387c419 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmsub.s f18, f19, f15, f16, dyn # perform operation
fmsub.s f18, f19, f15, f16, rdn # perform operation
fmsub.s f18, f19, f15, f16, rmm # perform operation
fmsub.s f18, f19, f15, f16, rne # perform operation
fmsub.s f18, f19, f15, f16, rtz # perform operation
fmsub.s f18, f19, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x0235bbad # load x3 with value 0x0235bbad
sw x3, 0(x2) # store 0x0235bbad in memory
flw f29, 0(x2) # load 0x0235bbad from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmsub.s f23, f8, f29, f14, dyn # perform operation
fmsub.s f23, f8, f29, f14, rdn # perform operation
fmsub.s f23, f8, f29, f14, rmm # perform operation
fmsub.s f23, f8, f29, f14, rne # perform operation
fmsub.s f23, f8, f29, f14, rtz # perform operation
fmsub.s f23, f8, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x7f2338bf # load x3 with value 0x7f2338bf
sw x3, 0(x2) # store 0x7f2338bf in memory
flw f16, 0(x2) # load 0x7f2338bf from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fmsub.s f17, f25, f16, f19, dyn # perform operation
fmsub.s f17, f25, f16, f19, rdn # perform operation
fmsub.s f17, f25, f16, f19, rmm # perform operation
fmsub.s f17, f25, f16, f19, rne # perform operation
fmsub.s f17, f25, f16, f19, rtz # perform operation
fmsub.s f17, f25, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x08140410 # load x3 with value 0x08140410
sw x3, 0(x2) # store 0x08140410 in memory
flw f6, 0(x2) # load 0x08140410 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmsub.s f23, f21, f6, f14, dyn # perform operation
fmsub.s f23, f21, f6, f14, rdn # perform operation
fmsub.s f23, f21, f6, f14, rmm # perform operation
fmsub.s f23, f21, f6, f14, rne # perform operation
fmsub.s f23, f21, f6, f14, rtz # perform operation
fmsub.s f23, f21, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x771a6c89 # load x3 with value 0x771a6c89
sw x3, 0(x2) # store 0x771a6c89 in memory
flw f3, 0(x2) # load 0x771a6c89 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f11, f19, f3, f23, dyn # perform operation
fmsub.s f11, f19, f3, f23, rdn # perform operation
fmsub.s f11, f19, f3, f23, rmm # perform operation
fmsub.s f11, f19, f3, f23, rne # perform operation
fmsub.s f11, f19, f3, f23, rtz # perform operation
fmsub.s f11, f19, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xd5ed1d4c # load x3 with value 0xd5ed1d4c
sw x3, 0(x2) # store 0xd5ed1d4c in memory
flw f26, 0(x2) # load 0xd5ed1d4c from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f11, f8, f26, f2, dyn # perform operation
fmsub.s f11, f8, f26, f2, rdn # perform operation
fmsub.s f11, f8, f26, f2, rmm # perform operation
fmsub.s f11, f8, f26, f2, rne # perform operation
fmsub.s f11, f8, f26, f2, rtz # perform operation
fmsub.s f11, f8, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xe82ff454 # load x3 with value 0xe82ff454
sw x3, 0(x2) # store 0xe82ff454 in memory
flw f15, 0(x2) # load 0xe82ff454 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fmsub.s f30, f29, f15, f20, dyn # perform operation
fmsub.s f30, f29, f15, f20, rdn # perform operation
fmsub.s f30, f29, f15, f20, rmm # perform operation
fmsub.s f30, f29, f15, f20, rne # perform operation
fmsub.s f30, f29, f15, f20, rtz # perform operation
fmsub.s f30, f29, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x9928be5f # load x3 with value 0x9928be5f
sw x3, 0(x2) # store 0x9928be5f in memory
flw f26, 0(x2) # load 0x9928be5f from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmsub.s f30, f21, f26, f19, dyn # perform operation
fmsub.s f30, f21, f26, f19, rdn # perform operation
fmsub.s f30, f21, f26, f19, rmm # perform operation
fmsub.s f30, f21, f26, f19, rne # perform operation
fmsub.s f30, f21, f26, f19, rtz # perform operation
fmsub.s f30, f21, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x66facf3c # load x3 with value 0x66facf3c
sw x3, 0(x2) # store 0x66facf3c in memory
flw f25, 0(x2) # load 0x66facf3c from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmsub.s f26, f12, f25, f21, dyn # perform operation
fmsub.s f26, f12, f25, f21, rdn # perform operation
fmsub.s f26, f12, f25, f21, rmm # perform operation
fmsub.s f26, f12, f25, f21, rne # perform operation
fmsub.s f26, f12, f25, f21, rtz # perform operation
fmsub.s f26, f12, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x5b9941a7 # load x3 with value 0x5b9941a7
sw x3, 0(x2) # store 0x5b9941a7 in memory
flw f28, 0(x2) # load 0x5b9941a7 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fmsub.s f23, f21, f28, f2, dyn # perform operation
fmsub.s f23, f21, f28, f2, rdn # perform operation
fmsub.s f23, f21, f28, f2, rmm # perform operation
fmsub.s f23, f21, f28, f2, rne # perform operation
fmsub.s f23, f21, f28, f2, rtz # perform operation
fmsub.s f23, f21, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x65ca8b99 # load x3 with value 0x65ca8b99
sw x3, 0(x2) # store 0x65ca8b99 in memory
flw f31, 0(x2) # load 0x65ca8b99 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmsub.s f6, f9, f31, f21, dyn # perform operation
fmsub.s f6, f9, f31, f21, rdn # perform operation
fmsub.s f6, f9, f31, f21, rmm # perform operation
fmsub.s f6, f9, f31, f21, rne # perform operation
fmsub.s f6, f9, f31, f21, rtz # perform operation
fmsub.s f6, f9, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x0ba1ede5 # load x3 with value 0x0ba1ede5
sw x3, 0(x2) # store 0x0ba1ede5 in memory
flw f21, 0(x2) # load 0x0ba1ede5 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmsub.s f20, f29, f21, f28, dyn # perform operation
fmsub.s f20, f29, f21, f28, rdn # perform operation
fmsub.s f20, f29, f21, f28, rmm # perform operation
fmsub.s f20, f29, f21, f28, rne # perform operation
fmsub.s f20, f29, f21, f28, rtz # perform operation
fmsub.s f20, f29, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xb5bfac0b # load x3 with value 0xb5bfac0b
sw x3, 0(x2) # store 0xb5bfac0b in memory
flw f9, 0(x2) # load 0xb5bfac0b from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmsub.s f26, f23, f9, f7, dyn # perform operation
fmsub.s f26, f23, f9, f7, rdn # perform operation
fmsub.s f26, f23, f9, f7, rmm # perform operation
fmsub.s f26, f23, f9, f7, rne # perform operation
fmsub.s f26, f23, f9, f7, rtz # perform operation
fmsub.s f26, f23, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f9, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x167ee70b # load x3 with value 0x167ee70b
sw x3, 0(x2) # store 0x167ee70b in memory
flw f7, 0(x2) # load 0x167ee70b from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmsub.s f14, f26, f7, f9, dyn # perform operation
fmsub.s f14, f26, f7, f9, rdn # perform operation
fmsub.s f14, f26, f7, f9, rmm # perform operation
fmsub.s f14, f26, f7, f9, rne # perform operation
fmsub.s f14, f26, f7, f9, rtz # perform operation
fmsub.s f14, f26, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x4e1c5827 # load x3 with value 0x4e1c5827
sw x3, 0(x2) # store 0x4e1c5827 in memory
flw f26, 0(x2) # load 0x4e1c5827 from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f20, f16, f26, f9, dyn # perform operation
fmsub.s f20, f16, f26, f9, rdn # perform operation
fmsub.s f20, f16, f26, f9, rmm # perform operation
fmsub.s f20, f16, f26, f9, rne # perform operation
fmsub.s f20, f16, f26, f9, rtz # perform operation
fmsub.s f20, f16, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f16, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x768cecee # load x3 with value 0x768cecee
sw x3, 0(x2) # store 0x768cecee in memory
flw f26, 0(x2) # load 0x768cecee from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmsub.s f18, f16, f26, f13, dyn # perform operation
fmsub.s f18, f16, f26, f13, rdn # perform operation
fmsub.s f18, f16, f26, f13, rmm # perform operation
fmsub.s f18, f16, f26, f13, rne # perform operation
fmsub.s f18, f16, f26, f13, rtz # perform operation
fmsub.s f18, f16, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x584eb200 # load x3 with value 0x584eb200
sw x3, 0(x2) # store 0x584eb200 in memory
flw f31, 0(x2) # load 0x584eb200 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmsub.s f10, f25, f31, f16, dyn # perform operation
fmsub.s f10, f25, f31, f16, rdn # perform operation
fmsub.s f10, f25, f31, f16, rmm # perform operation
fmsub.s f10, f25, f31, f16, rne # perform operation
fmsub.s f10, f25, f31, f16, rtz # perform operation
fmsub.s f10, f25, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x8d47992d # load x3 with value 0x8d47992d
sw x3, 0(x2) # store 0x8d47992d in memory
flw f17, 0(x2) # load 0x8d47992d from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmsub.s f20, f8, f17, f21, dyn # perform operation
fmsub.s f20, f8, f17, f21, rdn # perform operation
fmsub.s f20, f8, f17, f21, rmm # perform operation
fmsub.s f20, f8, f17, f21, rne # perform operation
fmsub.s f20, f8, f17, f21, rtz # perform operation
fmsub.s f20, f8, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f8, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x7f75d115 # load x3 with value 0x7f75d115
sw x3, 0(x2) # store 0x7f75d115 in memory
flw f18, 0(x2) # load 0x7f75d115 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmsub.s f7, f10, f18, f21, dyn # perform operation
fmsub.s f7, f10, f18, f21, rdn # perform operation
fmsub.s f7, f10, f18, f21, rmm # perform operation
fmsub.s f7, f10, f18, f21, rne # perform operation
fmsub.s f7, f10, f18, f21, rtz # perform operation
fmsub.s f7, f10, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x790e5680 # load x3 with value 0x790e5680
sw x3, 0(x2) # store 0x790e5680 in memory
flw f9, 0(x2) # load 0x790e5680 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmsub.s f11, f29, f9, f18, dyn # perform operation
fmsub.s f11, f29, f9, f18, rdn # perform operation
fmsub.s f11, f29, f9, f18, rmm # perform operation
fmsub.s f11, f29, f9, f18, rne # perform operation
fmsub.s f11, f29, f9, f18, rtz # perform operation
fmsub.s f11, f29, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x03cbd597 # load x3 with value 0x03cbd597
sw x3, 0(x2) # store 0x03cbd597 in memory
flw f21, 0(x2) # load 0x03cbd597 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f24, f23, f21, f3, dyn # perform operation
fmsub.s f24, f23, f21, f3, rdn # perform operation
fmsub.s f24, f23, f21, f3, rmm # perform operation
fmsub.s f24, f23, f21, f3, rne # perform operation
fmsub.s f24, f23, f21, f3, rtz # perform operation
fmsub.s f24, f23, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xa608555e # load x3 with value 0xa608555e
sw x3, 0(x2) # store 0xa608555e in memory
flw f24, 0(x2) # load 0xa608555e from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fmsub.s f12, f18, f24, f9, dyn # perform operation
fmsub.s f12, f18, f24, f9, rdn # perform operation
fmsub.s f12, f18, f24, f9, rmm # perform operation
fmsub.s f12, f18, f24, f9, rne # perform operation
fmsub.s f12, f18, f24, f9, rtz # perform operation
fmsub.s f12, f18, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f18, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x5159ed74 # load x3 with value 0x5159ed74
sw x3, 0(x2) # store 0x5159ed74 in memory
flw f29, 0(x2) # load 0x5159ed74 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f8, f3, f29, f20, dyn # perform operation
fmsub.s f8, f3, f29, f20, rdn # perform operation
fmsub.s f8, f3, f29, f20, rmm # perform operation
fmsub.s f8, f3, f29, f20, rne # perform operation
fmsub.s f8, f3, f29, f20, rtz # perform operation
fmsub.s f8, f3, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xbca72f62 # load x3 with value 0xbca72f62
sw x3, 0(x2) # store 0xbca72f62 in memory
flw f18, 0(x2) # load 0xbca72f62 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmsub.s f21, f15, f18, f7, dyn # perform operation
fmsub.s f21, f15, f18, f7, rdn # perform operation
fmsub.s f21, f15, f18, f7, rmm # perform operation
fmsub.s f21, f15, f18, f7, rne # perform operation
fmsub.s f21, f15, f18, f7, rtz # perform operation
fmsub.s f21, f15, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xd70319fa # load x3 with value 0xd70319fa
sw x3, 0(x2) # store 0xd70319fa in memory
flw f25, 0(x2) # load 0xd70319fa from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fmsub.s f30, f26, f25, f12, dyn # perform operation
fmsub.s f30, f26, f25, f12, rdn # perform operation
fmsub.s f30, f26, f25, f12, rmm # perform operation
fmsub.s f30, f26, f25, f12, rne # perform operation
fmsub.s f30, f26, f25, f12, rtz # perform operation
fmsub.s f30, f26, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xd9f0c3fe # load x3 with value 0xd9f0c3fe
sw x3, 0(x2) # store 0xd9f0c3fe in memory
flw f8, 0(x2) # load 0xd9f0c3fe from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f10, f5, f8, f29, dyn # perform operation
fmsub.s f10, f5, f8, f29, rdn # perform operation
fmsub.s f10, f5, f8, f29, rmm # perform operation
fmsub.s f10, f5, f8, f29, rne # perform operation
fmsub.s f10, f5, f8, f29, rtz # perform operation
fmsub.s f10, f5, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f8, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x73cc320f # load x3 with value 0x73cc320f
sw x3, 0(x2) # store 0x73cc320f in memory
flw f9, 0(x2) # load 0x73cc320f from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmsub.s f1, f2, f9, f14, dyn # perform operation
fmsub.s f1, f2, f9, f14, rdn # perform operation
fmsub.s f1, f2, f9, f14, rmm # perform operation
fmsub.s f1, f2, f9, f14, rne # perform operation
fmsub.s f1, f2, f9, f14, rtz # perform operation
fmsub.s f1, f2, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x807147c2 # load x3 with value 0x807147c2
sw x3, 0(x2) # store 0x807147c2 in memory
flw f30, 0(x2) # load 0x807147c2 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmsub.s f10, f15, f30, f5, dyn # perform operation
fmsub.s f10, f15, f30, f5, rdn # perform operation
fmsub.s f10, f15, f30, f5, rmm # perform operation
fmsub.s f10, f15, f30, f5, rne # perform operation
fmsub.s f10, f15, f30, f5, rtz # perform operation
fmsub.s f10, f15, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f15, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xe6edaecb # load x3 with value 0xe6edaecb
sw x3, 0(x2) # store 0xe6edaecb in memory
flw f27, 0(x2) # load 0xe6edaecb from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f14, f1, f27, f26, dyn # perform operation
fmsub.s f14, f1, f27, f26, rdn # perform operation
fmsub.s f14, f1, f27, f26, rmm # perform operation
fmsub.s f14, f1, f27, f26, rne # perform operation
fmsub.s f14, f1, f27, f26, rtz # perform operation
fmsub.s f14, f1, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xe1c98fd3 # load x3 with value 0xe1c98fd3
sw x3, 0(x2) # store 0xe1c98fd3 in memory
flw f23, 0(x2) # load 0xe1c98fd3 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fmsub.s f19, f3, f23, f31, dyn # perform operation
fmsub.s f19, f3, f23, f31, rdn # perform operation
fmsub.s f19, f3, f23, f31, rmm # perform operation
fmsub.s f19, f3, f23, f31, rne # perform operation
fmsub.s f19, f3, f23, f31, rtz # perform operation
fmsub.s f19, f3, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x8742ac6f # load x3 with value 0x8742ac6f
sw x3, 0(x2) # store 0x8742ac6f in memory
flw f6, 0(x2) # load 0x8742ac6f from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmsub.s f21, f27, f6, f26, dyn # perform operation
fmsub.s f21, f27, f6, f26, rdn # perform operation
fmsub.s f21, f27, f6, f26, rmm # perform operation
fmsub.s f21, f27, f6, f26, rne # perform operation
fmsub.s f21, f27, f6, f26, rtz # perform operation
fmsub.s f21, f27, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f27, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f27, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f27, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f27, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f27, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x8995d948 # load x3 with value 0x8995d948
sw x3, 0(x2) # store 0x8995d948 in memory
flw f31, 0(x2) # load 0x8995d948 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmsub.s f8, f11, f31, f13, dyn # perform operation
fmsub.s f8, f11, f31, f13, rdn # perform operation
fmsub.s f8, f11, f31, f13, rmm # perform operation
fmsub.s f8, f11, f31, f13, rne # perform operation
fmsub.s f8, f11, f31, f13, rtz # perform operation
fmsub.s f8, f11, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xe4bb58c1 # load x3 with value 0xe4bb58c1
sw x3, 0(x2) # store 0xe4bb58c1 in memory
flw f11, 0(x2) # load 0xe4bb58c1 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmsub.s f16, f18, f11, f12, dyn # perform operation
fmsub.s f16, f18, f11, f12, rdn # perform operation
fmsub.s f16, f18, f11, f12, rmm # perform operation
fmsub.s f16, f18, f11, f12, rne # perform operation
fmsub.s f16, f18, f11, f12, rtz # perform operation
fmsub.s f16, f18, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x9dc15627 # load x3 with value 0x9dc15627
sw x3, 0(x2) # store 0x9dc15627 in memory
flw f21, 0(x2) # load 0x9dc15627 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmsub.s f2, f20, f21, f5, dyn # perform operation
fmsub.s f2, f20, f21, f5, rdn # perform operation
fmsub.s f2, f20, f21, f5, rmm # perform operation
fmsub.s f2, f20, f21, f5, rne # perform operation
fmsub.s f2, f20, f21, f5, rtz # perform operation
fmsub.s f2, f20, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f20, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x97b3b97b # load x3 with value 0x97b3b97b
sw x3, 0(x2) # store 0x97b3b97b in memory
flw f19, 0(x2) # load 0x97b3b97b from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmsub.s f2, f8, f19, f16, dyn # perform operation
fmsub.s f2, f8, f19, f16, rdn # perform operation
fmsub.s f2, f8, f19, f16, rmm # perform operation
fmsub.s f2, f8, f19, f16, rne # perform operation
fmsub.s f2, f8, f19, f16, rtz # perform operation
fmsub.s f2, f8, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xc9f8ddd3 # load x3 with value 0xc9f8ddd3
sw x3, 0(x2) # store 0xc9f8ddd3 in memory
flw f15, 0(x2) # load 0xc9f8ddd3 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmsub.s f21, f19, f15, f8, dyn # perform operation
fmsub.s f21, f19, f15, f8, rdn # perform operation
fmsub.s f21, f19, f15, f8, rmm # perform operation
fmsub.s f21, f19, f15, f8, rne # perform operation
fmsub.s f21, f19, f15, f8, rtz # perform operation
fmsub.s f21, f19, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xdda5101b # load x3 with value 0xdda5101b
sw x3, 0(x2) # store 0xdda5101b in memory
flw f13, 0(x2) # load 0xdda5101b from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmsub.s f23, f18, f13, f6, dyn # perform operation
fmsub.s f23, f18, f13, f6, rdn # perform operation
fmsub.s f23, f18, f13, f6, rmm # perform operation
fmsub.s f23, f18, f13, f6, rne # perform operation
fmsub.s f23, f18, f13, f6, rtz # perform operation
fmsub.s f23, f18, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x81b1d19b # load x3 with value 0x81b1d19b
sw x3, 0(x2) # store 0x81b1d19b in memory
flw f13, 0(x2) # load 0x81b1d19b from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
fmsub.s f5, f6, f13, f28, dyn # perform operation
fmsub.s f5, f6, f13, f28, rdn # perform operation
fmsub.s f5, f6, f13, f28, rmm # perform operation
fmsub.s f5, f6, f13, f28, rne # perform operation
fmsub.s f5, f6, f13, f28, rtz # perform operation
fmsub.s f5, f6, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xce0c7535 # load x3 with value 0xce0c7535
sw x3, 0(x2) # store 0xce0c7535 in memory
flw f15, 0(x2) # load 0xce0c7535 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fmsub.s f8, f3, f15, f26, dyn # perform operation
fmsub.s f8, f3, f15, f26, rdn # perform operation
fmsub.s f8, f3, f15, f26, rmm # perform operation
fmsub.s f8, f3, f15, f26, rne # perform operation
fmsub.s f8, f3, f15, f26, rtz # perform operation
fmsub.s f8, f3, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x14942c25 # load x3 with value 0x14942c25
sw x3, 0(x2) # store 0x14942c25 in memory
flw f7, 0(x2) # load 0x14942c25 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmsub.s f13, f8, f7, f23, dyn # perform operation
fmsub.s f13, f8, f7, f23, rdn # perform operation
fmsub.s f13, f8, f7, f23, rmm # perform operation
fmsub.s f13, f8, f7, f23, rne # perform operation
fmsub.s f13, f8, f7, f23, rtz # perform operation
fmsub.s f13, f8, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xcdab6861 # load x3 with value 0xcdab6861
sw x3, 0(x2) # store 0xcdab6861 in memory
flw f7, 0(x2) # load 0xcdab6861 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmsub.s f2, f12, f7, f19, dyn # perform operation
fmsub.s f2, f12, f7, f19, rdn # perform operation
fmsub.s f2, f12, f7, f19, rmm # perform operation
fmsub.s f2, f12, f7, f19, rne # perform operation
fmsub.s f2, f12, f7, f19, rtz # perform operation
fmsub.s f2, f12, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x5226cb20 # load x3 with value 0x5226cb20
sw x3, 0(x2) # store 0x5226cb20 in memory
flw f18, 0(x2) # load 0x5226cb20 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmsub.s f29, f27, f18, f15, dyn # perform operation
fmsub.s f29, f27, f18, f15, rdn # perform operation
fmsub.s f29, f27, f18, f15, rmm # perform operation
fmsub.s f29, f27, f18, f15, rne # perform operation
fmsub.s f29, f27, f18, f15, rtz # perform operation
fmsub.s f29, f27, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f27, f18, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x3de27bba # load x3 with value 0x3de27bba
sw x3, 0(x2) # store 0x3de27bba in memory
flw f27, 0(x2) # load 0x3de27bba from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f21, f16, f27, f1, dyn # perform operation
fmsub.s f21, f16, f27, f1, rdn # perform operation
fmsub.s f21, f16, f27, f1, rmm # perform operation
fmsub.s f21, f16, f27, f1, rne # perform operation
fmsub.s f21, f16, f27, f1, rtz # perform operation
fmsub.s f21, f16, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f27, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x9ac93f8e # load x3 with value 0x9ac93f8e
sw x3, 0(x2) # store 0x9ac93f8e in memory
flw f14, 0(x2) # load 0x9ac93f8e from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmsub.s f13, f8, f14, f24, dyn # perform operation
fmsub.s f13, f8, f14, f24, rdn # perform operation
fmsub.s f13, f8, f14, f24, rmm # perform operation
fmsub.s f13, f8, f14, f24, rne # perform operation
fmsub.s f13, f8, f14, f24, rtz # perform operation
fmsub.s f13, f8, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x0de3487a # load x3 with value 0x0de3487a
sw x3, 0(x2) # store 0x0de3487a in memory
flw f21, 0(x2) # load 0x0de3487a from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f15, f2, f21, f31, dyn # perform operation
fmsub.s f15, f2, f21, f31, rdn # perform operation
fmsub.s f15, f2, f21, f31, rmm # perform operation
fmsub.s f15, f2, f21, f31, rne # perform operation
fmsub.s f15, f2, f21, f31, rtz # perform operation
fmsub.s f15, f2, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xd63826c2 # load x3 with value 0xd63826c2
sw x3, 0(x2) # store 0xd63826c2 in memory
flw f22, 0(x2) # load 0xd63826c2 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmsub.s f13, f16, f22, f20, dyn # perform operation
fmsub.s f13, f16, f22, f20, rdn # perform operation
fmsub.s f13, f16, f22, f20, rmm # perform operation
fmsub.s f13, f16, f22, f20, rne # perform operation
fmsub.s f13, f16, f22, f20, rtz # perform operation
fmsub.s f13, f16, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x0dc9d679 # load x3 with value 0x0dc9d679
sw x3, 0(x2) # store 0x0dc9d679 in memory
flw f12, 0(x2) # load 0x0dc9d679 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmsub.s f3, f30, f12, f6, dyn # perform operation
fmsub.s f3, f30, f12, f6, rdn # perform operation
fmsub.s f3, f30, f12, f6, rmm # perform operation
fmsub.s f3, f30, f12, f6, rne # perform operation
fmsub.s f3, f30, f12, f6, rtz # perform operation
fmsub.s f3, f30, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f30, f12, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0xc966bc93 # load x3 with value 0xc966bc93
sw x3, 0(x2) # store 0xc966bc93 in memory
flw f22, 0(x2) # load 0xc966bc93 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmsub.s f9, f31, f22, f18, dyn # perform operation
fmsub.s f9, f31, f22, f18, rdn # perform operation
fmsub.s f9, f31, f22, f18, rmm # perform operation
fmsub.s f9, f31, f22, f18, rne # perform operation
fmsub.s f9, f31, f22, f18, rtz # perform operation
fmsub.s f9, f31, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xe4935bbe # load x3 with value 0xe4935bbe
sw x3, 0(x2) # store 0xe4935bbe in memory
flw f16, 0(x2) # load 0xe4935bbe from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmsub.s f10, f26, f16, f13, dyn # perform operation
fmsub.s f10, f26, f16, f13, rdn # perform operation
fmsub.s f10, f26, f16, f13, rmm # perform operation
fmsub.s f10, f26, f16, f13, rne # perform operation
fmsub.s f10, f26, f16, f13, rtz # perform operation
fmsub.s f10, f26, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x76d20d16 # load x3 with value 0x76d20d16
sw x3, 0(x2) # store 0x76d20d16 in memory
flw f13, 0(x2) # load 0x76d20d16 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmsub.s f1, f22, f13, f12, dyn # perform operation
fmsub.s f1, f22, f13, f12, rdn # perform operation
fmsub.s f1, f22, f13, f12, rmm # perform operation
fmsub.s f1, f22, f13, f12, rne # perform operation
fmsub.s f1, f22, f13, f12, rtz # perform operation
fmsub.s f1, f22, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x501190cc # load x3 with value 0x501190cc
sw x3, 0(x2) # store 0x501190cc in memory
flw f1, 0(x2) # load 0x501190cc from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f8, f17, f1, f9, dyn # perform operation
fmsub.s f8, f17, f1, f9, rdn # perform operation
fmsub.s f8, f17, f1, f9, rmm # perform operation
fmsub.s f8, f17, f1, f9, rne # perform operation
fmsub.s f8, f17, f1, f9, rtz # perform operation
fmsub.s f8, f17, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f17, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xd5e7186a # load x3 with value 0xd5e7186a
sw x3, 0(x2) # store 0xd5e7186a in memory
flw f1, 0(x2) # load 0xd5e7186a from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmsub.s f16, f26, f1, f28, dyn # perform operation
fmsub.s f16, f26, f1, f28, rdn # perform operation
fmsub.s f16, f26, f1, f28, rmm # perform operation
fmsub.s f16, f26, f1, f28, rne # perform operation
fmsub.s f16, f26, f1, f28, rtz # perform operation
fmsub.s f16, f26, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x2e4604eb # load x3 with value 0x2e4604eb
sw x3, 0(x2) # store 0x2e4604eb in memory
flw f6, 0(x2) # load 0x2e4604eb from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f31, f2, f6, f26, dyn # perform operation
fmsub.s f31, f2, f6, f26, rdn # perform operation
fmsub.s f31, f2, f6, f26, rmm # perform operation
fmsub.s f31, f2, f6, f26, rne # perform operation
fmsub.s f31, f2, f6, f26, rtz # perform operation
fmsub.s f31, f2, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xd14c8186 # load x3 with value 0xd14c8186
sw x3, 0(x2) # store 0xd14c8186 in memory
flw f3, 0(x2) # load 0xd14c8186 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmsub.s f6, f7, f3, f18, dyn # perform operation
fmsub.s f6, f7, f3, f18, rdn # perform operation
fmsub.s f6, f7, f3, f18, rmm # perform operation
fmsub.s f6, f7, f3, f18, rne # perform operation
fmsub.s f6, f7, f3, f18, rtz # perform operation
fmsub.s f6, f7, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x216743e9 # load x3 with value 0x216743e9
sw x3, 0(x2) # store 0x216743e9 in memory
flw f28, 0(x2) # load 0x216743e9 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f27, f22, f28, f25, dyn # perform operation
fmsub.s f27, f22, f28, f25, rdn # perform operation
fmsub.s f27, f22, f28, f25, rmm # perform operation
fmsub.s f27, f22, f28, f25, rne # perform operation
fmsub.s f27, f22, f28, f25, rtz # perform operation
fmsub.s f27, f22, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xdf963a9f # load x3 with value 0xdf963a9f
sw x3, 0(x2) # store 0xdf963a9f in memory
flw f14, 0(x2) # load 0xdf963a9f from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmsub.s f6, f23, f14, f7, dyn # perform operation
fmsub.s f6, f23, f14, f7, rdn # perform operation
fmsub.s f6, f23, f14, f7, rmm # perform operation
fmsub.s f6, f23, f14, f7, rne # perform operation
fmsub.s f6, f23, f14, f7, rtz # perform operation
fmsub.s f6, f23, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0xde540a65 # load x3 with value 0xde540a65
sw x3, 0(x2) # store 0xde540a65 in memory
flw f28, 0(x2) # load 0xde540a65 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f2, f13, f28, f10, dyn # perform operation
fmsub.s f2, f13, f28, f10, rdn # perform operation
fmsub.s f2, f13, f28, f10, rmm # perform operation
fmsub.s f2, f13, f28, f10, rne # perform operation
fmsub.s f2, f13, f28, f10, rtz # perform operation
fmsub.s f2, f13, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f13, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x00b1073f # load x3 with value 0x00b1073f
sw x3, 0(x2) # store 0x00b1073f in memory
flw f21, 0(x2) # load 0x00b1073f from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmsub.s f8, f11, f21, f12, dyn # perform operation
fmsub.s f8, f11, f21, f12, rdn # perform operation
fmsub.s f8, f11, f21, f12, rmm # perform operation
fmsub.s f8, f11, f21, f12, rne # perform operation
fmsub.s f8, f11, f21, f12, rtz # perform operation
fmsub.s f8, f11, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f21, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xa80e994f # load x3 with value 0xa80e994f
sw x3, 0(x2) # store 0xa80e994f in memory
flw f16, 0(x2) # load 0xa80e994f from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmsub.s f1, f26, f16, f17, dyn # perform operation
fmsub.s f1, f26, f16, f17, rdn # perform operation
fmsub.s f1, f26, f16, f17, rmm # perform operation
fmsub.s f1, f26, f16, f17, rne # perform operation
fmsub.s f1, f26, f16, f17, rtz # perform operation
fmsub.s f1, f26, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x06045a9f # load x3 with value 0x06045a9f
sw x3, 0(x2) # store 0x06045a9f in memory
flw f23, 0(x2) # load 0x06045a9f from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f21, f5, f23, f19, dyn # perform operation
fmsub.s f21, f5, f23, f19, rdn # perform operation
fmsub.s f21, f5, f23, f19, rmm # perform operation
fmsub.s f21, f5, f23, f19, rne # perform operation
fmsub.s f21, f5, f23, f19, rtz # perform operation
fmsub.s f21, f5, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f5, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f5, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f5, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f5, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f5, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x80589f78 # load x3 with value 0x80589f78
sw x3, 0(x2) # store 0x80589f78 in memory
flw f1, 0(x2) # load 0x80589f78 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmsub.s f25, f7, f1, f2, dyn # perform operation
fmsub.s f25, f7, f1, f2, rdn # perform operation
fmsub.s f25, f7, f1, f2, rmm # perform operation
fmsub.s f25, f7, f1, f2, rne # perform operation
fmsub.s f25, f7, f1, f2, rtz # perform operation
fmsub.s f25, f7, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f7, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x47fc2b8d # load x3 with value 0x47fc2b8d
sw x3, 0(x2) # store 0x47fc2b8d in memory
flw f23, 0(x2) # load 0x47fc2b8d from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmsub.s f24, f22, f23, f31, dyn # perform operation
fmsub.s f24, f22, f23, f31, rdn # perform operation
fmsub.s f24, f22, f23, f31, rmm # perform operation
fmsub.s f24, f22, f23, f31, rne # perform operation
fmsub.s f24, f22, f23, f31, rtz # perform operation
fmsub.s f24, f22, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x7da694dc # load x3 with value 0x7da694dc
sw x3, 0(x2) # store 0x7da694dc in memory
flw f29, 0(x2) # load 0x7da694dc from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fmsub.s f7, f12, f29, f26, dyn # perform operation
fmsub.s f7, f12, f29, f26, rdn # perform operation
fmsub.s f7, f12, f29, f26, rmm # perform operation
fmsub.s f7, f12, f29, f26, rne # perform operation
fmsub.s f7, f12, f29, f26, rtz # perform operation
fmsub.s f7, f12, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xe5f82317 # load x3 with value 0xe5f82317
sw x3, 0(x2) # store 0xe5f82317 in memory
flw f12, 0(x2) # load 0xe5f82317 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmsub.s f2, f5, f12, f14, dyn # perform operation
fmsub.s f2, f5, f12, f14, rdn # perform operation
fmsub.s f2, f5, f12, f14, rmm # perform operation
fmsub.s f2, f5, f12, f14, rne # perform operation
fmsub.s f2, f5, f12, f14, rtz # perform operation
fmsub.s f2, f5, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f5, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xea32d0b8 # load x3 with value 0xea32d0b8
sw x3, 0(x2) # store 0xea32d0b8 in memory
flw f13, 0(x2) # load 0xea32d0b8 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmsub.s f6, f5, f13, f2, dyn # perform operation
fmsub.s f6, f5, f13, f2, rdn # perform operation
fmsub.s f6, f5, f13, f2, rmm # perform operation
fmsub.s f6, f5, f13, f2, rne # perform operation
fmsub.s f6, f5, f13, f2, rtz # perform operation
fmsub.s f6, f5, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x2faf800d # load x3 with value 0x2faf800d
sw x3, 0(x2) # store 0x2faf800d in memory
flw f17, 0(x2) # load 0x2faf800d from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmsub.s f16, f8, f17, f3, dyn # perform operation
fmsub.s f16, f8, f17, f3, rdn # perform operation
fmsub.s f16, f8, f17, f3, rmm # perform operation
fmsub.s f16, f8, f17, f3, rne # perform operation
fmsub.s f16, f8, f17, f3, rtz # perform operation
fmsub.s f16, f8, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x3b6a1297 # load x3 with value 0x3b6a1297
sw x3, 0(x2) # store 0x3b6a1297 in memory
flw f26, 0(x2) # load 0x3b6a1297 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f21, f19, f26, f23, dyn # perform operation
fmsub.s f21, f19, f26, f23, rdn # perform operation
fmsub.s f21, f19, f26, f23, rmm # perform operation
fmsub.s f21, f19, f26, f23, rne # perform operation
fmsub.s f21, f19, f26, f23, rtz # perform operation
fmsub.s f21, f19, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xea947e35 # load x3 with value 0xea947e35
sw x3, 0(x2) # store 0xea947e35 in memory
flw f16, 0(x2) # load 0xea947e35 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmsub.s f11, f17, f16, f15, dyn # perform operation
fmsub.s f11, f17, f16, f15, rdn # perform operation
fmsub.s f11, f17, f16, f15, rmm # perform operation
fmsub.s f11, f17, f16, f15, rne # perform operation
fmsub.s f11, f17, f16, f15, rtz # perform operation
fmsub.s f11, f17, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x91575495 # load x3 with value 0x91575495
sw x3, 0(x2) # store 0x91575495 in memory
flw f8, 0(x2) # load 0x91575495 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f27, f17, f8, f20, dyn # perform operation
fmsub.s f27, f17, f8, f20, rdn # perform operation
fmsub.s f27, f17, f8, f20, rmm # perform operation
fmsub.s f27, f17, f8, f20, rne # perform operation
fmsub.s f27, f17, f8, f20, rtz # perform operation
fmsub.s f27, f17, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xf454bbb5 # load x3 with value 0xf454bbb5
sw x3, 0(x2) # store 0xf454bbb5 in memory
flw f16, 0(x2) # load 0xf454bbb5 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fmsub.s f3, f15, f16, f11, dyn # perform operation
fmsub.s f3, f15, f16, f11, rdn # perform operation
fmsub.s f3, f15, f16, f11, rmm # perform operation
fmsub.s f3, f15, f16, f11, rne # perform operation
fmsub.s f3, f15, f16, f11, rtz # perform operation
fmsub.s f3, f15, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x3bf3e8c6 # load x3 with value 0x3bf3e8c6
sw x3, 0(x2) # store 0x3bf3e8c6 in memory
flw f17, 0(x2) # load 0x3bf3e8c6 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmsub.s f19, f14, f17, f8, dyn # perform operation
fmsub.s f19, f14, f17, f8, rdn # perform operation
fmsub.s f19, f14, f17, f8, rmm # perform operation
fmsub.s f19, f14, f17, f8, rne # perform operation
fmsub.s f19, f14, f17, f8, rtz # perform operation
fmsub.s f19, f14, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f14, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x77a557c1 # load x3 with value 0x77a557c1
sw x3, 0(x2) # store 0x77a557c1 in memory
flw f11, 0(x2) # load 0x77a557c1 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmsub.s f26, f30, f11, f27, dyn # perform operation
fmsub.s f26, f30, f11, f27, rdn # perform operation
fmsub.s f26, f30, f11, f27, rmm # perform operation
fmsub.s f26, f30, f11, f27, rne # perform operation
fmsub.s f26, f30, f11, f27, rtz # perform operation
fmsub.s f26, f30, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x8aef5a98 # load x3 with value 0x8aef5a98
sw x3, 0(x2) # store 0x8aef5a98 in memory
flw f22, 0(x2) # load 0x8aef5a98 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmsub.s f28, f10, f22, f27, dyn # perform operation
fmsub.s f28, f10, f22, f27, rdn # perform operation
fmsub.s f28, f10, f22, f27, rmm # perform operation
fmsub.s f28, f10, f22, f27, rne # perform operation
fmsub.s f28, f10, f22, f27, rtz # perform operation
fmsub.s f28, f10, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xa1f72391 # load x3 with value 0xa1f72391
sw x3, 0(x2) # store 0xa1f72391 in memory
flw f2, 0(x2) # load 0xa1f72391 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmsub.s f29, f25, f2, f28, dyn # perform operation
fmsub.s f29, f25, f2, f28, rdn # perform operation
fmsub.s f29, f25, f2, f28, rmm # perform operation
fmsub.s f29, f25, f2, f28, rne # perform operation
fmsub.s f29, f25, f2, f28, rtz # perform operation
fmsub.s f29, f25, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f25, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x82a8f623 # load x3 with value 0x82a8f623
sw x3, 0(x2) # store 0x82a8f623 in memory
flw f7, 0(x2) # load 0x82a8f623 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmsub.s f10, f21, f7, f27, dyn # perform operation
fmsub.s f10, f21, f7, f27, rdn # perform operation
fmsub.s f10, f21, f7, f27, rmm # perform operation
fmsub.s f10, f21, f7, f27, rne # perform operation
fmsub.s f10, f21, f7, f27, rtz # perform operation
fmsub.s f10, f21, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0xc050348f # load x3 with value 0xc050348f
sw x3, 0(x2) # store 0xc050348f in memory
flw f30, 0(x2) # load 0xc050348f from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fmsub.s f2, f29, f30, f26, dyn # perform operation
fmsub.s f2, f29, f30, f26, rdn # perform operation
fmsub.s f2, f29, f30, f26, rmm # perform operation
fmsub.s f2, f29, f30, f26, rne # perform operation
fmsub.s f2, f29, f30, f26, rtz # perform operation
fmsub.s f2, f29, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x3967c44a # load x3 with value 0x3967c44a
sw x3, 0(x2) # store 0x3967c44a in memory
flw f6, 0(x2) # load 0x3967c44a from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fmsub.s f16, f23, f6, f14, dyn # perform operation
fmsub.s f16, f23, f6, f14, rdn # perform operation
fmsub.s f16, f23, f6, f14, rmm # perform operation
fmsub.s f16, f23, f6, f14, rne # perform operation
fmsub.s f16, f23, f6, f14, rtz # perform operation
fmsub.s f16, f23, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x4921f9c8 # load x3 with value 0x4921f9c8
sw x3, 0(x2) # store 0x4921f9c8 in memory
flw f22, 0(x2) # load 0x4921f9c8 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fmsub.s f1, f23, f22, f19, dyn # perform operation
fmsub.s f1, f23, f22, f19, rdn # perform operation
fmsub.s f1, f23, f22, f19, rmm # perform operation
fmsub.s f1, f23, f22, f19, rne # perform operation
fmsub.s f1, f23, f22, f19, rtz # perform operation
fmsub.s f1, f23, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x932778e2 # load x3 with value 0x932778e2
sw x3, 0(x2) # store 0x932778e2 in memory
flw f28, 0(x2) # load 0x932778e2 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fmsub.s f8, f10, f28, f16, dyn # perform operation
fmsub.s f8, f10, f28, f16, rdn # perform operation
fmsub.s f8, f10, f28, f16, rmm # perform operation
fmsub.s f8, f10, f28, f16, rne # perform operation
fmsub.s f8, f10, f28, f16, rtz # perform operation
fmsub.s f8, f10, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x56ac8e74 # load x3 with value 0x56ac8e74
sw x3, 0(x2) # store 0x56ac8e74 in memory
flw f6, 0(x2) # load 0x56ac8e74 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmsub.s f5, f3, f6, f24, dyn # perform operation
fmsub.s f5, f3, f6, f24, rdn # perform operation
fmsub.s f5, f3, f6, f24, rmm # perform operation
fmsub.s f5, f3, f6, f24, rne # perform operation
fmsub.s f5, f3, f6, f24, rtz # perform operation
fmsub.s f5, f3, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x63e10033 # load x3 with value 0x63e10033
sw x3, 0(x2) # store 0x63e10033 in memory
flw f26, 0(x2) # load 0x63e10033 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fmsub.s f2, f12, f26, f29, dyn # perform operation
fmsub.s f2, f12, f26, f29, rdn # perform operation
fmsub.s f2, f12, f26, f29, rmm # perform operation
fmsub.s f2, f12, f26, f29, rne # perform operation
fmsub.s f2, f12, f26, f29, rtz # perform operation
fmsub.s f2, f12, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x07964c45 # load x3 with value 0x07964c45
sw x3, 0(x2) # store 0x07964c45 in memory
flw f15, 0(x2) # load 0x07964c45 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmsub.s f24, f16, f15, f10, dyn # perform operation
fmsub.s f24, f16, f15, f10, rdn # perform operation
fmsub.s f24, f16, f15, f10, rmm # perform operation
fmsub.s f24, f16, f15, f10, rne # perform operation
fmsub.s f24, f16, f15, f10, rtz # perform operation
fmsub.s f24, f16, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x518afb44 # load x3 with value 0x518afb44
sw x3, 0(x2) # store 0x518afb44 in memory
flw f7, 0(x2) # load 0x518afb44 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmsub.s f13, f21, f7, f9, dyn # perform operation
fmsub.s f13, f21, f7, f9, rdn # perform operation
fmsub.s f13, f21, f7, f9, rmm # perform operation
fmsub.s f13, f21, f7, f9, rne # perform operation
fmsub.s f13, f21, f7, f9, rtz # perform operation
fmsub.s f13, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f21, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x44d161a1 # load x3 with value 0x44d161a1
sw x3, 0(x2) # store 0x44d161a1 in memory
flw f5, 0(x2) # load 0x44d161a1 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmsub.s f10, f14, f5, f31, dyn # perform operation
fmsub.s f10, f14, f5, f31, rdn # perform operation
fmsub.s f10, f14, f5, f31, rmm # perform operation
fmsub.s f10, f14, f5, f31, rne # perform operation
fmsub.s f10, f14, f5, f31, rtz # perform operation
fmsub.s f10, f14, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xe2449ed9 # load x3 with value 0xe2449ed9
sw x3, 0(x2) # store 0xe2449ed9 in memory
flw f2, 0(x2) # load 0xe2449ed9 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmsub.s f13, f3, f2, f21, dyn # perform operation
fmsub.s f13, f3, f2, f21, rdn # perform operation
fmsub.s f13, f3, f2, f21, rmm # perform operation
fmsub.s f13, f3, f2, f21, rne # perform operation
fmsub.s f13, f3, f2, f21, rtz # perform operation
fmsub.s f13, f3, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x95a942d7 # load x3 with value 0x95a942d7
sw x3, 0(x2) # store 0x95a942d7 in memory
flw f13, 0(x2) # load 0x95a942d7 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmsub.s f28, f18, f13, f30, dyn # perform operation
fmsub.s f28, f18, f13, f30, rdn # perform operation
fmsub.s f28, f18, f13, f30, rmm # perform operation
fmsub.s f28, f18, f13, f30, rne # perform operation
fmsub.s f28, f18, f13, f30, rtz # perform operation
fmsub.s f28, f18, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x8af0e53b # load x3 with value 0x8af0e53b
sw x3, 0(x2) # store 0x8af0e53b in memory
flw f15, 0(x2) # load 0x8af0e53b from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmsub.s f28, f10, f15, f22, dyn # perform operation
fmsub.s f28, f10, f15, f22, rdn # perform operation
fmsub.s f28, f10, f15, f22, rmm # perform operation
fmsub.s f28, f10, f15, f22, rne # perform operation
fmsub.s f28, f10, f15, f22, rtz # perform operation
fmsub.s f28, f10, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x5faf29ba # load x3 with value 0x5faf29ba
sw x3, 0(x2) # store 0x5faf29ba in memory
flw f17, 0(x2) # load 0x5faf29ba from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmsub.s f9, f18, f17, f29, dyn # perform operation
fmsub.s f9, f18, f17, f29, rdn # perform operation
fmsub.s f9, f18, f17, f29, rmm # perform operation
fmsub.s f9, f18, f17, f29, rne # perform operation
fmsub.s f9, f18, f17, f29, rtz # perform operation
fmsub.s f9, f18, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x365d0e4f # load x3 with value 0x365d0e4f
sw x3, 0(x2) # store 0x365d0e4f in memory
flw f31, 0(x2) # load 0x365d0e4f from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmsub.s f5, f14, f31, f13, dyn # perform operation
fmsub.s f5, f14, f31, f13, rdn # perform operation
fmsub.s f5, f14, f31, f13, rmm # perform operation
fmsub.s f5, f14, f31, f13, rne # perform operation
fmsub.s f5, f14, f31, f13, rtz # perform operation
fmsub.s f5, f14, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x0dd97332 # load x3 with value 0x0dd97332
sw x3, 0(x2) # store 0x0dd97332 in memory
flw f26, 0(x2) # load 0x0dd97332 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmsub.s f14, f18, f26, f16, dyn # perform operation
fmsub.s f14, f18, f26, f16, rdn # perform operation
fmsub.s f14, f18, f26, f16, rmm # perform operation
fmsub.s f14, f18, f26, f16, rne # perform operation
fmsub.s f14, f18, f26, f16, rtz # perform operation
fmsub.s f14, f18, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x9c8e80c5 # load x3 with value 0x9c8e80c5
sw x3, 0(x2) # store 0x9c8e80c5 in memory
flw f19, 0(x2) # load 0x9c8e80c5 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
fmsub.s f25, f7, f19, f1, dyn # perform operation
fmsub.s f25, f7, f19, f1, rdn # perform operation
fmsub.s f25, f7, f19, f1, rmm # perform operation
fmsub.s f25, f7, f19, f1, rne # perform operation
fmsub.s f25, f7, f19, f1, rtz # perform operation
fmsub.s f25, f7, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f7, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x70ac1f57 # load x3 with value 0x70ac1f57
sw x3, 0(x2) # store 0x70ac1f57 in memory
flw f5, 0(x2) # load 0x70ac1f57 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f30, f16, f5, f26, dyn # perform operation
fmsub.s f30, f16, f5, f26, rdn # perform operation
fmsub.s f30, f16, f5, f26, rmm # perform operation
fmsub.s f30, f16, f5, f26, rne # perform operation
fmsub.s f30, f16, f5, f26, rtz # perform operation
fmsub.s f30, f16, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x8c1d0906 # load x3 with value 0x8c1d0906
sw x3, 0(x2) # store 0x8c1d0906 in memory
flw f31, 0(x2) # load 0x8c1d0906 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmsub.s f22, f25, f31, f2, dyn # perform operation
fmsub.s f22, f25, f31, f2, rdn # perform operation
fmsub.s f22, f25, f31, f2, rmm # perform operation
fmsub.s f22, f25, f31, f2, rne # perform operation
fmsub.s f22, f25, f31, f2, rtz # perform operation
fmsub.s f22, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x5aa21b21 # load x3 with value 0x5aa21b21
sw x3, 0(x2) # store 0x5aa21b21 in memory
flw f31, 0(x2) # load 0x5aa21b21 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmsub.s f29, f14, f31, f20, dyn # perform operation
fmsub.s f29, f14, f31, f20, rdn # perform operation
fmsub.s f29, f14, f31, f20, rmm # perform operation
fmsub.s f29, f14, f31, f20, rne # perform operation
fmsub.s f29, f14, f31, f20, rtz # perform operation
fmsub.s f29, f14, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f14, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x0f20b7bc # load x3 with value 0x0f20b7bc
sw x3, 0(x2) # store 0x0f20b7bc in memory
flw f17, 0(x2) # load 0x0f20b7bc from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fmsub.s f16, f26, f17, f1, dyn # perform operation
fmsub.s f16, f26, f17, f1, rdn # perform operation
fmsub.s f16, f26, f17, f1, rmm # perform operation
fmsub.s f16, f26, f17, f1, rne # perform operation
fmsub.s f16, f26, f17, f1, rtz # perform operation
fmsub.s f16, f26, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0xf4c77abf # load x3 with value 0xf4c77abf
sw x3, 0(x2) # store 0xf4c77abf in memory
flw f20, 0(x2) # load 0xf4c77abf from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmsub.s f16, f12, f20, f26, dyn # perform operation
fmsub.s f16, f12, f20, f26, rdn # perform operation
fmsub.s f16, f12, f20, f26, rmm # perform operation
fmsub.s f16, f12, f20, f26, rne # perform operation
fmsub.s f16, f12, f20, f26, rtz # perform operation
fmsub.s f16, f12, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x19278f80 # load x3 with value 0x19278f80
sw x3, 0(x2) # store 0x19278f80 in memory
flw f18, 0(x2) # load 0x19278f80 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmsub.s f19, f2, f18, f6, dyn # perform operation
fmsub.s f19, f2, f18, f6, rdn # perform operation
fmsub.s f19, f2, f18, f6, rmm # perform operation
fmsub.s f19, f2, f18, f6, rne # perform operation
fmsub.s f19, f2, f18, f6, rtz # perform operation
fmsub.s f19, f2, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f2, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f2, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f2, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f2, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f2, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xa09c8a95 # load x3 with value 0xa09c8a95
sw x3, 0(x2) # store 0xa09c8a95 in memory
flw f31, 0(x2) # load 0xa09c8a95 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f6, f7, f31, f28, dyn # perform operation
fmsub.s f6, f7, f31, f28, rdn # perform operation
fmsub.s f6, f7, f31, f28, rmm # perform operation
fmsub.s f6, f7, f31, f28, rne # perform operation
fmsub.s f6, f7, f31, f28, rtz # perform operation
fmsub.s f6, f7, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x5b7d80cd # load x3 with value 0x5b7d80cd
sw x3, 0(x2) # store 0x5b7d80cd in memory
flw f1, 0(x2) # load 0x5b7d80cd from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmsub.s f27, f2, f1, f17, dyn # perform operation
fmsub.s f27, f2, f1, f17, rdn # perform operation
fmsub.s f27, f2, f1, f17, rmm # perform operation
fmsub.s f27, f2, f1, f17, rne # perform operation
fmsub.s f27, f2, f1, f17, rtz # perform operation
fmsub.s f27, f2, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f2, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x75e8e6f0 # load x3 with value 0x75e8e6f0
sw x3, 0(x2) # store 0x75e8e6f0 in memory
flw f30, 0(x2) # load 0x75e8e6f0 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmsub.s f21, f7, f30, f10, dyn # perform operation
fmsub.s f21, f7, f30, f10, rdn # perform operation
fmsub.s f21, f7, f30, f10, rmm # perform operation
fmsub.s f21, f7, f30, f10, rne # perform operation
fmsub.s f21, f7, f30, f10, rtz # perform operation
fmsub.s f21, f7, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xfa65a5a9 # load x3 with value 0xfa65a5a9
sw x3, 0(x2) # store 0xfa65a5a9 in memory
flw f7, 0(x2) # load 0xfa65a5a9 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmsub.s f20, f15, f7, f8, dyn # perform operation
fmsub.s f20, f15, f7, f8, rdn # perform operation
fmsub.s f20, f15, f7, f8, rmm # perform operation
fmsub.s f20, f15, f7, f8, rne # perform operation
fmsub.s f20, f15, f7, f8, rtz # perform operation
fmsub.s f20, f15, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xc3d6ead4 # load x3 with value 0xc3d6ead4
sw x3, 0(x2) # store 0xc3d6ead4 in memory
flw f3, 0(x2) # load 0xc3d6ead4 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f27, f25, f3, f24, dyn # perform operation
fmsub.s f27, f25, f3, f24, rdn # perform operation
fmsub.s f27, f25, f3, f24, rmm # perform operation
fmsub.s f27, f25, f3, f24, rne # perform operation
fmsub.s f27, f25, f3, f24, rtz # perform operation
fmsub.s f27, f25, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f25, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x19b3949d # load x3 with value 0x19b3949d
sw x3, 0(x2) # store 0x19b3949d in memory
flw f8, 0(x2) # load 0x19b3949d from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f16, f13, f8, f11, dyn # perform operation
fmsub.s f16, f13, f8, f11, rdn # perform operation
fmsub.s f16, f13, f8, f11, rmm # perform operation
fmsub.s f16, f13, f8, f11, rne # perform operation
fmsub.s f16, f13, f8, f11, rtz # perform operation
fmsub.s f16, f13, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x1fa76ad7 # load x3 with value 0x1fa76ad7
sw x3, 0(x2) # store 0x1fa76ad7 in memory
flw f22, 0(x2) # load 0x1fa76ad7 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f8, f16, f22, f6, dyn # perform operation
fmsub.s f8, f16, f22, f6, rdn # perform operation
fmsub.s f8, f16, f22, f6, rmm # perform operation
fmsub.s f8, f16, f22, f6, rne # perform operation
fmsub.s f8, f16, f22, f6, rtz # perform operation
fmsub.s f8, f16, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x7f5a9956 # load x3 with value 0x7f5a9956
sw x3, 0(x2) # store 0x7f5a9956 in memory
flw f8, 0(x2) # load 0x7f5a9956 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fmsub.s f15, f7, f8, f23, dyn # perform operation
fmsub.s f15, f7, f8, f23, rdn # perform operation
fmsub.s f15, f7, f8, f23, rmm # perform operation
fmsub.s f15, f7, f8, f23, rne # perform operation
fmsub.s f15, f7, f8, f23, rtz # perform operation
fmsub.s f15, f7, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f7, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xbfe61a7e # load x3 with value 0xbfe61a7e
sw x3, 0(x2) # store 0xbfe61a7e in memory
flw f11, 0(x2) # load 0xbfe61a7e from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f20, f30, f11, f22, dyn # perform operation
fmsub.s f20, f30, f11, f22, rdn # perform operation
fmsub.s f20, f30, f11, f22, rmm # perform operation
fmsub.s f20, f30, f11, f22, rne # perform operation
fmsub.s f20, f30, f11, f22, rtz # perform operation
fmsub.s f20, f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xce3c636a # load x3 with value 0xce3c636a
sw x3, 0(x2) # store 0xce3c636a in memory
flw f9, 0(x2) # load 0xce3c636a from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmsub.s f16, f15, f9, f31, dyn # perform operation
fmsub.s f16, f15, f9, f31, rdn # perform operation
fmsub.s f16, f15, f9, f31, rmm # perform operation
fmsub.s f16, f15, f9, f31, rne # perform operation
fmsub.s f16, f15, f9, f31, rtz # perform operation
fmsub.s f16, f15, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xdf5d48cb # load x3 with value 0xdf5d48cb
sw x3, 0(x2) # store 0xdf5d48cb in memory
flw f29, 0(x2) # load 0xdf5d48cb from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmsub.s f14, f28, f29, f26, dyn # perform operation
fmsub.s f14, f28, f29, f26, rdn # perform operation
fmsub.s f14, f28, f29, f26, rmm # perform operation
fmsub.s f14, f28, f29, f26, rne # perform operation
fmsub.s f14, f28, f29, f26, rtz # perform operation
fmsub.s f14, f28, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x4448a7d2 # load x3 with value 0x4448a7d2
sw x3, 0(x2) # store 0x4448a7d2 in memory
flw f12, 0(x2) # load 0x4448a7d2 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmsub.s f8, f27, f12, f21, dyn # perform operation
fmsub.s f8, f27, f12, f21, rdn # perform operation
fmsub.s f8, f27, f12, f21, rmm # perform operation
fmsub.s f8, f27, f12, f21, rne # perform operation
fmsub.s f8, f27, f12, f21, rtz # perform operation
fmsub.s f8, f27, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xa6157250 # load x3 with value 0xa6157250
sw x3, 0(x2) # store 0xa6157250 in memory
flw f9, 0(x2) # load 0xa6157250 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f7, f6, f9, f14, dyn # perform operation
fmsub.s f7, f6, f9, f14, rdn # perform operation
fmsub.s f7, f6, f9, f14, rmm # perform operation
fmsub.s f7, f6, f9, f14, rne # perform operation
fmsub.s f7, f6, f9, f14, rtz # perform operation
fmsub.s f7, f6, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x43f279d2 # load x3 with value 0x43f279d2
sw x3, 0(x2) # store 0x43f279d2 in memory
flw f23, 0(x2) # load 0x43f279d2 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f9, f22, f23, f25, dyn # perform operation
fmsub.s f9, f22, f23, f25, rdn # perform operation
fmsub.s f9, f22, f23, f25, rmm # perform operation
fmsub.s f9, f22, f23, f25, rne # perform operation
fmsub.s f9, f22, f23, f25, rtz # perform operation
fmsub.s f9, f22, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xeb1304ff # load x3 with value 0xeb1304ff
sw x3, 0(x2) # store 0xeb1304ff in memory
flw f16, 0(x2) # load 0xeb1304ff from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fmsub.s f10, f19, f16, f6, dyn # perform operation
fmsub.s f10, f19, f16, f6, rdn # perform operation
fmsub.s f10, f19, f16, f6, rmm # perform operation
fmsub.s f10, f19, f16, f6, rne # perform operation
fmsub.s f10, f19, f16, f6, rtz # perform operation
fmsub.s f10, f19, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f19, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xcee42c13 # load x3 with value 0xcee42c13
sw x3, 0(x2) # store 0xcee42c13 in memory
flw f19, 0(x2) # load 0xcee42c13 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f14, f7, f19, f26, dyn # perform operation
fmsub.s f14, f7, f19, f26, rdn # perform operation
fmsub.s f14, f7, f19, f26, rmm # perform operation
fmsub.s f14, f7, f19, f26, rne # perform operation
fmsub.s f14, f7, f19, f26, rtz # perform operation
fmsub.s f14, f7, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xc3b3ac6b # load x3 with value 0xc3b3ac6b
sw x3, 0(x2) # store 0xc3b3ac6b in memory
flw f1, 0(x2) # load 0xc3b3ac6b from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f18, f31, f1, f28, dyn # perform operation
fmsub.s f18, f31, f1, f28, rdn # perform operation
fmsub.s f18, f31, f1, f28, rmm # perform operation
fmsub.s f18, f31, f1, f28, rne # perform operation
fmsub.s f18, f31, f1, f28, rtz # perform operation
fmsub.s f18, f31, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xb91d9c37 # load x3 with value 0xb91d9c37
sw x3, 0(x2) # store 0xb91d9c37 in memory
flw f2, 0(x2) # load 0xb91d9c37 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmsub.s f17, f15, f2, f12, dyn # perform operation
fmsub.s f17, f15, f2, f12, rdn # perform operation
fmsub.s f17, f15, f2, f12, rmm # perform operation
fmsub.s f17, f15, f2, f12, rne # perform operation
fmsub.s f17, f15, f2, f12, rtz # perform operation
fmsub.s f17, f15, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x5c452a88 # load x3 with value 0x5c452a88
sw x3, 0(x2) # store 0x5c452a88 in memory
flw f3, 0(x2) # load 0x5c452a88 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f31, f16, f3, f2, dyn # perform operation
fmsub.s f31, f16, f3, f2, rdn # perform operation
fmsub.s f31, f16, f3, f2, rmm # perform operation
fmsub.s f31, f16, f3, f2, rne # perform operation
fmsub.s f31, f16, f3, f2, rtz # perform operation
fmsub.s f31, f16, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f16, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x5fd55f42 # load x3 with value 0x5fd55f42
sw x3, 0(x2) # store 0x5fd55f42 in memory
flw f15, 0(x2) # load 0x5fd55f42 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f8, f30, f15, f25, dyn # perform operation
fmsub.s f8, f30, f15, f25, rdn # perform operation
fmsub.s f8, f30, f15, f25, rmm # perform operation
fmsub.s f8, f30, f15, f25, rne # perform operation
fmsub.s f8, f30, f15, f25, rtz # perform operation
fmsub.s f8, f30, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x52a2ffc1 # load x3 with value 0x52a2ffc1
sw x3, 0(x2) # store 0x52a2ffc1 in memory
flw f26, 0(x2) # load 0x52a2ffc1 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmsub.s f24, f3, f26, f15, dyn # perform operation
fmsub.s f24, f3, f26, f15, rdn # perform operation
fmsub.s f24, f3, f26, f15, rmm # perform operation
fmsub.s f24, f3, f26, f15, rne # perform operation
fmsub.s f24, f3, f26, f15, rtz # perform operation
fmsub.s f24, f3, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f3, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x42d42962 # load x3 with value 0x42d42962
sw x3, 0(x2) # store 0x42d42962 in memory
flw f16, 0(x2) # load 0x42d42962 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
fmsub.s f24, f27, f16, f28, dyn # perform operation
fmsub.s f24, f27, f16, f28, rdn # perform operation
fmsub.s f24, f27, f16, f28, rmm # perform operation
fmsub.s f24, f27, f16, f28, rne # perform operation
fmsub.s f24, f27, f16, f28, rtz # perform operation
fmsub.s f24, f27, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x88e07817 # load x3 with value 0x88e07817
sw x3, 0(x2) # store 0x88e07817 in memory
flw f14, 0(x2) # load 0x88e07817 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f6, f30, f14, f29, dyn # perform operation
fmsub.s f6, f30, f14, f29, rdn # perform operation
fmsub.s f6, f30, f14, f29, rmm # perform operation
fmsub.s f6, f30, f14, f29, rne # perform operation
fmsub.s f6, f30, f14, f29, rtz # perform operation
fmsub.s f6, f30, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x9df66a63 # load x3 with value 0x9df66a63
sw x3, 0(x2) # store 0x9df66a63 in memory
flw f8, 0(x2) # load 0x9df66a63 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmsub.s f10, f16, f8, f1, dyn # perform operation
fmsub.s f10, f16, f8, f1, rdn # perform operation
fmsub.s f10, f16, f8, f1, rmm # perform operation
fmsub.s f10, f16, f8, f1, rne # perform operation
fmsub.s f10, f16, f8, f1, rtz # perform operation
fmsub.s f10, f16, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xae020b8e # load x3 with value 0xae020b8e
sw x3, 0(x2) # store 0xae020b8e in memory
flw f31, 0(x2) # load 0xae020b8e from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmsub.s f7, f3, f31, f30, dyn # perform operation
fmsub.s f7, f3, f31, f30, rdn # perform operation
fmsub.s f7, f3, f31, f30, rmm # perform operation
fmsub.s f7, f3, f31, f30, rne # perform operation
fmsub.s f7, f3, f31, f30, rtz # perform operation
fmsub.s f7, f3, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x10b0a1fa # load x3 with value 0x10b0a1fa
sw x3, 0(x2) # store 0x10b0a1fa in memory
flw f11, 0(x2) # load 0x10b0a1fa from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmsub.s f9, f28, f11, f7, dyn # perform operation
fmsub.s f9, f28, f11, f7, rdn # perform operation
fmsub.s f9, f28, f11, f7, rmm # perform operation
fmsub.s f9, f28, f11, f7, rne # perform operation
fmsub.s f9, f28, f11, f7, rtz # perform operation
fmsub.s f9, f28, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xfbd65dab # load x3 with value 0xfbd65dab
sw x3, 0(x2) # store 0xfbd65dab in memory
flw f16, 0(x2) # load 0xfbd65dab from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmsub.s f18, f15, f16, f7, dyn # perform operation
fmsub.s f18, f15, f16, f7, rdn # perform operation
fmsub.s f18, f15, f16, f7, rmm # perform operation
fmsub.s f18, f15, f16, f7, rne # perform operation
fmsub.s f18, f15, f16, f7, rtz # perform operation
fmsub.s f18, f15, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f15, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f15, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f15, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f15, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f15, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x1728a113 # load x3 with value 0x1728a113
sw x3, 0(x2) # store 0x1728a113 in memory
flw f30, 0(x2) # load 0x1728a113 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmsub.s f17, f12, f30, f11, dyn # perform operation
fmsub.s f17, f12, f30, f11, rdn # perform operation
fmsub.s f17, f12, f30, f11, rmm # perform operation
fmsub.s f17, f12, f30, f11, rne # perform operation
fmsub.s f17, f12, f30, f11, rtz # perform operation
fmsub.s f17, f12, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f12, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xf28f2a94 # load x3 with value 0xf28f2a94
sw x3, 0(x2) # store 0xf28f2a94 in memory
flw f26, 0(x2) # load 0xf28f2a94 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmsub.s f21, f18, f26, f29, dyn # perform operation
fmsub.s f21, f18, f26, f29, rdn # perform operation
fmsub.s f21, f18, f26, f29, rmm # perform operation
fmsub.s f21, f18, f26, f29, rne # perform operation
fmsub.s f21, f18, f26, f29, rtz # perform operation
fmsub.s f21, f18, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xfbf8877b # load x3 with value 0xfbf8877b
sw x3, 0(x2) # store 0xfbf8877b in memory
flw f1, 0(x2) # load 0xfbf8877b from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmsub.s f14, f15, f1, f31, dyn # perform operation
fmsub.s f14, f15, f1, f31, rdn # perform operation
fmsub.s f14, f15, f1, f31, rmm # perform operation
fmsub.s f14, f15, f1, f31, rne # perform operation
fmsub.s f14, f15, f1, f31, rtz # perform operation
fmsub.s f14, f15, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x448b8ba4 # load x3 with value 0x448b8ba4
sw x3, 0(x2) # store 0x448b8ba4 in memory
flw f20, 0(x2) # load 0x448b8ba4 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f5, f21, f20, f9, dyn # perform operation
fmsub.s f5, f21, f20, f9, rdn # perform operation
fmsub.s f5, f21, f20, f9, rmm # perform operation
fmsub.s f5, f21, f20, f9, rne # perform operation
fmsub.s f5, f21, f20, f9, rtz # perform operation
fmsub.s f5, f21, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x9c3e6b11 # load x3 with value 0x9c3e6b11
sw x3, 0(x2) # store 0x9c3e6b11 in memory
flw f3, 0(x2) # load 0x9c3e6b11 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f5, f14, f3, f30, dyn # perform operation
fmsub.s f5, f14, f3, f30, rdn # perform operation
fmsub.s f5, f14, f3, f30, rmm # perform operation
fmsub.s f5, f14, f3, f30, rne # perform operation
fmsub.s f5, f14, f3, f30, rtz # perform operation
fmsub.s f5, f14, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xec2b2c7c # load x3 with value 0xec2b2c7c
sw x3, 0(x2) # store 0xec2b2c7c in memory
flw f20, 0(x2) # load 0xec2b2c7c from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmsub.s f23, f17, f20, f9, dyn # perform operation
fmsub.s f23, f17, f20, f9, rdn # perform operation
fmsub.s f23, f17, f20, f9, rmm # perform operation
fmsub.s f23, f17, f20, f9, rne # perform operation
fmsub.s f23, f17, f20, f9, rtz # perform operation
fmsub.s f23, f17, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xd1795d17 # load x3 with value 0xd1795d17
sw x3, 0(x2) # store 0xd1795d17 in memory
flw f6, 0(x2) # load 0xd1795d17 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fmsub.s f15, f8, f6, f29, dyn # perform operation
fmsub.s f15, f8, f6, f29, rdn # perform operation
fmsub.s f15, f8, f6, f29, rmm # perform operation
fmsub.s f15, f8, f6, f29, rne # perform operation
fmsub.s f15, f8, f6, f29, rtz # perform operation
fmsub.s f15, f8, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x5c02e9d8 # load x3 with value 0x5c02e9d8
sw x3, 0(x2) # store 0x5c02e9d8 in memory
flw f16, 0(x2) # load 0x5c02e9d8 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmsub.s f17, f6, f16, f3, dyn # perform operation
fmsub.s f17, f6, f16, f3, rdn # perform operation
fmsub.s f17, f6, f16, f3, rmm # perform operation
fmsub.s f17, f6, f16, f3, rne # perform operation
fmsub.s f17, f6, f16, f3, rtz # perform operation
fmsub.s f17, f6, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x09fa91fd # load x3 with value 0x09fa91fd
sw x3, 0(x2) # store 0x09fa91fd in memory
flw f9, 0(x2) # load 0x09fa91fd from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f26, f6, f9, f24, dyn # perform operation
fmsub.s f26, f6, f9, f24, rdn # perform operation
fmsub.s f26, f6, f9, f24, rmm # perform operation
fmsub.s f26, f6, f9, f24, rne # perform operation
fmsub.s f26, f6, f9, f24, rtz # perform operation
fmsub.s f26, f6, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x1b131371 # load x3 with value 0x1b131371
sw x3, 0(x2) # store 0x1b131371 in memory
flw f1, 0(x2) # load 0x1b131371 from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fmsub.s f21, f24, f1, f27, dyn # perform operation
fmsub.s f21, f24, f1, f27, rdn # perform operation
fmsub.s f21, f24, f1, f27, rmm # perform operation
fmsub.s f21, f24, f1, f27, rne # perform operation
fmsub.s f21, f24, f1, f27, rtz # perform operation
fmsub.s f21, f24, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x7bc824a8 # load x3 with value 0x7bc824a8
sw x3, 0(x2) # store 0x7bc824a8 in memory
flw f16, 0(x2) # load 0x7bc824a8 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f31, f22, f16, f26, dyn # perform operation
fmsub.s f31, f22, f16, f26, rdn # perform operation
fmsub.s f31, f22, f16, f26, rmm # perform operation
fmsub.s f31, f22, f16, f26, rne # perform operation
fmsub.s f31, f22, f16, f26, rtz # perform operation
fmsub.s f31, f22, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x711097d4 # load x3 with value 0x711097d4
sw x3, 0(x2) # store 0x711097d4 in memory
flw f17, 0(x2) # load 0x711097d4 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmsub.s f23, f18, f17, f30, dyn # perform operation
fmsub.s f23, f18, f17, f30, rdn # perform operation
fmsub.s f23, f18, f17, f30, rmm # perform operation
fmsub.s f23, f18, f17, f30, rne # perform operation
fmsub.s f23, f18, f17, f30, rtz # perform operation
fmsub.s f23, f18, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x9fdfe8a1 # load x3 with value 0x9fdfe8a1
sw x3, 0(x2) # store 0x9fdfe8a1 in memory
flw f11, 0(x2) # load 0x9fdfe8a1 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f19, f13, f11, f14, dyn # perform operation
fmsub.s f19, f13, f11, f14, rdn # perform operation
fmsub.s f19, f13, f11, f14, rmm # perform operation
fmsub.s f19, f13, f11, f14, rne # perform operation
fmsub.s f19, f13, f11, f14, rtz # perform operation
fmsub.s f19, f13, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xe4d16de2 # load x3 with value 0xe4d16de2
sw x3, 0(x2) # store 0xe4d16de2 in memory
flw f25, 0(x2) # load 0xe4d16de2 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f6, f10, f25, f29, dyn # perform operation
fmsub.s f6, f10, f25, f29, rdn # perform operation
fmsub.s f6, f10, f25, f29, rmm # perform operation
fmsub.s f6, f10, f25, f29, rne # perform operation
fmsub.s f6, f10, f25, f29, rtz # perform operation
fmsub.s f6, f10, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x1adbb6bf # load x3 with value 0x1adbb6bf
sw x3, 0(x2) # store 0x1adbb6bf in memory
flw f16, 0(x2) # load 0x1adbb6bf from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fmsub.s f23, f5, f16, f24, dyn # perform operation
fmsub.s f23, f5, f16, f24, rdn # perform operation
fmsub.s f23, f5, f16, f24, rmm # perform operation
fmsub.s f23, f5, f16, f24, rne # perform operation
fmsub.s f23, f5, f16, f24, rtz # perform operation
fmsub.s f23, f5, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0xe9629353 # load x3 with value 0xe9629353
sw x3, 0(x2) # store 0xe9629353 in memory
flw f3, 0(x2) # load 0xe9629353 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f16, f13, f3, f19, dyn # perform operation
fmsub.s f16, f13, f3, f19, rdn # perform operation
fmsub.s f16, f13, f3, f19, rmm # perform operation
fmsub.s f16, f13, f3, f19, rne # perform operation
fmsub.s f16, f13, f3, f19, rtz # perform operation
fmsub.s f16, f13, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xf55854ba # load x3 with value 0xf55854ba
sw x3, 0(x2) # store 0xf55854ba in memory
flw f25, 0(x2) # load 0xf55854ba from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmsub.s f11, f1, f25, f5, dyn # perform operation
fmsub.s f11, f1, f25, f5, rdn # perform operation
fmsub.s f11, f1, f25, f5, rmm # perform operation
fmsub.s f11, f1, f25, f5, rne # perform operation
fmsub.s f11, f1, f25, f5, rtz # perform operation
fmsub.s f11, f1, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xa21cd8c7 # load x3 with value 0xa21cd8c7
sw x3, 0(x2) # store 0xa21cd8c7 in memory
flw f15, 0(x2) # load 0xa21cd8c7 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fmsub.s f21, f20, f15, f19, dyn # perform operation
fmsub.s f21, f20, f15, f19, rdn # perform operation
fmsub.s f21, f20, f15, f19, rmm # perform operation
fmsub.s f21, f20, f15, f19, rne # perform operation
fmsub.s f21, f20, f15, f19, rtz # perform operation
fmsub.s f21, f20, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xf4f60b66 # load x3 with value 0xf4f60b66
sw x3, 0(x2) # store 0xf4f60b66 in memory
flw f27, 0(x2) # load 0xf4f60b66 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmsub.s f28, f19, f27, f29, dyn # perform operation
fmsub.s f28, f19, f27, f29, rdn # perform operation
fmsub.s f28, f19, f27, f29, rmm # perform operation
fmsub.s f28, f19, f27, f29, rne # perform operation
fmsub.s f28, f19, f27, f29, rtz # perform operation
fmsub.s f28, f19, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xb8bec4b2 # load x3 with value 0xb8bec4b2
sw x3, 0(x2) # store 0xb8bec4b2 in memory
flw f20, 0(x2) # load 0xb8bec4b2 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmsub.s f13, f24, f20, f26, dyn # perform operation
fmsub.s f13, f24, f20, f26, rdn # perform operation
fmsub.s f13, f24, f20, f26, rmm # perform operation
fmsub.s f13, f24, f20, f26, rne # perform operation
fmsub.s f13, f24, f20, f26, rtz # perform operation
fmsub.s f13, f24, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x84877c1b # load x3 with value 0x84877c1b
sw x3, 0(x2) # store 0x84877c1b in memory
flw f20, 0(x2) # load 0x84877c1b from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f11, f2, f20, f9, dyn # perform operation
fmsub.s f11, f2, f20, f9, rdn # perform operation
fmsub.s f11, f2, f20, f9, rmm # perform operation
fmsub.s f11, f2, f20, f9, rne # perform operation
fmsub.s f11, f2, f20, f9, rtz # perform operation
fmsub.s f11, f2, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x2b98ef9c # load x3 with value 0x2b98ef9c
sw x3, 0(x2) # store 0x2b98ef9c in memory
flw f10, 0(x2) # load 0x2b98ef9c from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f9, f15, f10, f24, dyn # perform operation
fmsub.s f9, f15, f10, f24, rdn # perform operation
fmsub.s f9, f15, f10, f24, rmm # perform operation
fmsub.s f9, f15, f10, f24, rne # perform operation
fmsub.s f9, f15, f10, f24, rtz # perform operation
fmsub.s f9, f15, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x8a41e746 # load x3 with value 0x8a41e746
sw x3, 0(x2) # store 0x8a41e746 in memory
flw f16, 0(x2) # load 0x8a41e746 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmsub.s f27, f24, f16, f2, dyn # perform operation
fmsub.s f27, f24, f16, f2, rdn # perform operation
fmsub.s f27, f24, f16, f2, rmm # perform operation
fmsub.s f27, f24, f16, f2, rne # perform operation
fmsub.s f27, f24, f16, f2, rtz # perform operation
fmsub.s f27, f24, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x5825a415 # load x3 with value 0x5825a415
sw x3, 0(x2) # store 0x5825a415 in memory
flw f25, 0(x2) # load 0x5825a415 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fmsub.s f30, f22, f25, f28, dyn # perform operation
fmsub.s f30, f22, f25, f28, rdn # perform operation
fmsub.s f30, f22, f25, f28, rmm # perform operation
fmsub.s f30, f22, f25, f28, rne # perform operation
fmsub.s f30, f22, f25, f28, rtz # perform operation
fmsub.s f30, f22, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f22, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f22, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f22, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f22, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f22, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x3c9667eb # load x3 with value 0x3c9667eb
sw x3, 0(x2) # store 0x3c9667eb in memory
flw f23, 0(x2) # load 0x3c9667eb from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fmsub.s f10, f9, f23, f27, dyn # perform operation
fmsub.s f10, f9, f23, f27, rdn # perform operation
fmsub.s f10, f9, f23, f27, rmm # perform operation
fmsub.s f10, f9, f23, f27, rne # perform operation
fmsub.s f10, f9, f23, f27, rtz # perform operation
fmsub.s f10, f9, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x39718cfa # load x3 with value 0x39718cfa
sw x3, 0(x2) # store 0x39718cfa in memory
flw f12, 0(x2) # load 0x39718cfa from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fmsub.s f28, f26, f12, f31, dyn # perform operation
fmsub.s f28, f26, f12, f31, rdn # perform operation
fmsub.s f28, f26, f12, f31, rmm # perform operation
fmsub.s f28, f26, f12, f31, rne # perform operation
fmsub.s f28, f26, f12, f31, rtz # perform operation
fmsub.s f28, f26, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xbd782c3e # load x3 with value 0xbd782c3e
sw x3, 0(x2) # store 0xbd782c3e in memory
flw f8, 0(x2) # load 0xbd782c3e from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fmsub.s f22, f29, f8, f15, dyn # perform operation
fmsub.s f22, f29, f8, f15, rdn # perform operation
fmsub.s f22, f29, f8, f15, rmm # perform operation
fmsub.s f22, f29, f8, f15, rne # perform operation
fmsub.s f22, f29, f8, f15, rtz # perform operation
fmsub.s f22, f29, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f29, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xecef6273 # load x3 with value 0xecef6273
sw x3, 0(x2) # store 0xecef6273 in memory
flw f15, 0(x2) # load 0xecef6273 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmsub.s f7, f26, f15, f13, dyn # perform operation
fmsub.s f7, f26, f15, f13, rdn # perform operation
fmsub.s f7, f26, f15, f13, rmm # perform operation
fmsub.s f7, f26, f15, f13, rne # perform operation
fmsub.s f7, f26, f15, f13, rtz # perform operation
fmsub.s f7, f26, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f15, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xa73d5bf7 # load x3 with value 0xa73d5bf7
sw x3, 0(x2) # store 0xa73d5bf7 in memory
flw f9, 0(x2) # load 0xa73d5bf7 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmsub.s f8, f24, f9, f27, dyn # perform operation
fmsub.s f8, f24, f9, f27, rdn # perform operation
fmsub.s f8, f24, f9, f27, rmm # perform operation
fmsub.s f8, f24, f9, f27, rne # perform operation
fmsub.s f8, f24, f9, f27, rtz # perform operation
fmsub.s f8, f24, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x01dd4fc6 # load x3 with value 0x01dd4fc6
sw x3, 0(x2) # store 0x01dd4fc6 in memory
flw f19, 0(x2) # load 0x01dd4fc6 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmsub.s f28, f26, f19, f31, dyn # perform operation
fmsub.s f28, f26, f19, f31, rdn # perform operation
fmsub.s f28, f26, f19, f31, rmm # perform operation
fmsub.s f28, f26, f19, f31, rne # perform operation
fmsub.s f28, f26, f19, f31, rtz # perform operation
fmsub.s f28, f26, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x03916e54 # load x3 with value 0x03916e54
sw x3, 0(x2) # store 0x03916e54 in memory
flw f17, 0(x2) # load 0x03916e54 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f13, f22, f17, f23, dyn # perform operation
fmsub.s f13, f22, f17, f23, rdn # perform operation
fmsub.s f13, f22, f17, f23, rmm # perform operation
fmsub.s f13, f22, f17, f23, rne # perform operation
fmsub.s f13, f22, f17, f23, rtz # perform operation
fmsub.s f13, f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f22, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xf7d2ff5d # load x3 with value 0xf7d2ff5d
sw x3, 0(x2) # store 0xf7d2ff5d in memory
flw f29, 0(x2) # load 0xf7d2ff5d from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmsub.s f14, f26, f29, f15, dyn # perform operation
fmsub.s f14, f26, f29, f15, rdn # perform operation
fmsub.s f14, f26, f29, f15, rmm # perform operation
fmsub.s f14, f26, f29, f15, rne # perform operation
fmsub.s f14, f26, f29, f15, rtz # perform operation
fmsub.s f14, f26, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x2177819a # load x3 with value 0x2177819a
sw x3, 0(x2) # store 0x2177819a in memory
flw f2, 0(x2) # load 0x2177819a from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmsub.s f13, f23, f2, f27, dyn # perform operation
fmsub.s f13, f23, f2, f27, rdn # perform operation
fmsub.s f13, f23, f2, f27, rmm # perform operation
fmsub.s f13, f23, f2, f27, rne # perform operation
fmsub.s f13, f23, f2, f27, rtz # perform operation
fmsub.s f13, f23, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xbd8a0e8b # load x3 with value 0xbd8a0e8b
sw x3, 0(x2) # store 0xbd8a0e8b in memory
flw f6, 0(x2) # load 0xbd8a0e8b from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmsub.s f3, f21, f6, f10, dyn # perform operation
fmsub.s f3, f21, f6, f10, rdn # perform operation
fmsub.s f3, f21, f6, f10, rmm # perform operation
fmsub.s f3, f21, f6, f10, rne # perform operation
fmsub.s f3, f21, f6, f10, rtz # perform operation
fmsub.s f3, f21, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x2aa6ca87 # load x3 with value 0x2aa6ca87
sw x3, 0(x2) # store 0x2aa6ca87 in memory
flw f20, 0(x2) # load 0x2aa6ca87 from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmsub.s f19, f10, f20, f31, dyn # perform operation
fmsub.s f19, f10, f20, f31, rdn # perform operation
fmsub.s f19, f10, f20, f31, rmm # perform operation
fmsub.s f19, f10, f20, f31, rne # perform operation
fmsub.s f19, f10, f20, f31, rtz # perform operation
fmsub.s f19, f10, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xf54939eb # load x3 with value 0xf54939eb
sw x3, 0(x2) # store 0xf54939eb in memory
flw f30, 0(x2) # load 0xf54939eb from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmsub.s f15, f2, f30, f8, dyn # perform operation
fmsub.s f15, f2, f30, f8, rdn # perform operation
fmsub.s f15, f2, f30, f8, rmm # perform operation
fmsub.s f15, f2, f30, f8, rne # perform operation
fmsub.s f15, f2, f30, f8, rtz # perform operation
fmsub.s f15, f2, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xbfc26b66 # load x3 with value 0xbfc26b66
sw x3, 0(x2) # store 0xbfc26b66 in memory
flw f25, 0(x2) # load 0xbfc26b66 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmsub.s f6, f9, f25, f11, dyn # perform operation
fmsub.s f6, f9, f25, f11, rdn # perform operation
fmsub.s f6, f9, f25, f11, rmm # perform operation
fmsub.s f6, f9, f25, f11, rne # perform operation
fmsub.s f6, f9, f25, f11, rtz # perform operation
fmsub.s f6, f9, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xfc1da9e5 # load x3 with value 0xfc1da9e5
sw x3, 0(x2) # store 0xfc1da9e5 in memory
flw f16, 0(x2) # load 0xfc1da9e5 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmsub.s f18, f6, f16, f24, dyn # perform operation
fmsub.s f18, f6, f16, f24, rdn # perform operation
fmsub.s f18, f6, f16, f24, rmm # perform operation
fmsub.s f18, f6, f16, f24, rne # perform operation
fmsub.s f18, f6, f16, f24, rtz # perform operation
fmsub.s f18, f6, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x56c42218 # load x3 with value 0x56c42218
sw x3, 0(x2) # store 0x56c42218 in memory
flw f3, 0(x2) # load 0x56c42218 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmsub.s f25, f12, f3, f2, dyn # perform operation
fmsub.s f25, f12, f3, f2, rdn # perform operation
fmsub.s f25, f12, f3, f2, rmm # perform operation
fmsub.s f25, f12, f3, f2, rne # perform operation
fmsub.s f25, f12, f3, f2, rtz # perform operation
fmsub.s f25, f12, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x31e63f64 # load x3 with value 0x31e63f64
sw x3, 0(x2) # store 0x31e63f64 in memory
flw f17, 0(x2) # load 0x31e63f64 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmsub.s f12, f25, f17, f1, dyn # perform operation
fmsub.s f12, f25, f17, f1, rdn # perform operation
fmsub.s f12, f25, f17, f1, rmm # perform operation
fmsub.s f12, f25, f17, f1, rne # perform operation
fmsub.s f12, f25, f17, f1, rtz # perform operation
fmsub.s f12, f25, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f25, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x89330c45 # load x3 with value 0x89330c45
sw x3, 0(x2) # store 0x89330c45 in memory
flw f1, 0(x2) # load 0x89330c45 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmsub.s f22, f6, f1, f21, dyn # perform operation
fmsub.s f22, f6, f1, f21, rdn # perform operation
fmsub.s f22, f6, f1, f21, rmm # perform operation
fmsub.s f22, f6, f1, f21, rne # perform operation
fmsub.s f22, f6, f1, f21, rtz # perform operation
fmsub.s f22, f6, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xd4b61a7c # load x3 with value 0xd4b61a7c
sw x3, 0(x2) # store 0xd4b61a7c in memory
flw f2, 0(x2) # load 0xd4b61a7c from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f24, f3, f2, f5, dyn # perform operation
fmsub.s f24, f3, f2, f5, rdn # perform operation
fmsub.s f24, f3, f2, f5, rmm # perform operation
fmsub.s f24, f3, f2, f5, rne # perform operation
fmsub.s f24, f3, f2, f5, rtz # perform operation
fmsub.s f24, f3, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f3, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x9fe8b92b # load x3 with value 0x9fe8b92b
sw x3, 0(x2) # store 0x9fe8b92b in memory
flw f30, 0(x2) # load 0x9fe8b92b from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fmsub.s f3, f26, f30, f20, dyn # perform operation
fmsub.s f3, f26, f30, f20, rdn # perform operation
fmsub.s f3, f26, f30, f20, rmm # perform operation
fmsub.s f3, f26, f30, f20, rne # perform operation
fmsub.s f3, f26, f30, f20, rtz # perform operation
fmsub.s f3, f26, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f26, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f26, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f26, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f26, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f26, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xb3bb4ff8 # load x3 with value 0xb3bb4ff8
sw x3, 0(x2) # store 0xb3bb4ff8 in memory
flw f8, 0(x2) # load 0xb3bb4ff8 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmsub.s f20, f11, f8, f14, dyn # perform operation
fmsub.s f20, f11, f8, f14, rdn # perform operation
fmsub.s f20, f11, f8, f14, rmm # perform operation
fmsub.s f20, f11, f8, f14, rne # perform operation
fmsub.s f20, f11, f8, f14, rtz # perform operation
fmsub.s f20, f11, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f11, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x650b059b # load x3 with value 0x650b059b
sw x3, 0(x2) # store 0x650b059b in memory
flw f20, 0(x2) # load 0x650b059b from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f5, f16, f20, f25, dyn # perform operation
fmsub.s f5, f16, f20, f25, rdn # perform operation
fmsub.s f5, f16, f20, f25, rmm # perform operation
fmsub.s f5, f16, f20, f25, rne # perform operation
fmsub.s f5, f16, f20, f25, rtz # perform operation
fmsub.s f5, f16, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x63cb750d # load x3 with value 0x63cb750d
sw x3, 0(x2) # store 0x63cb750d in memory
flw f12, 0(x2) # load 0x63cb750d from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmsub.s f29, f9, f12, f8, dyn # perform operation
fmsub.s f29, f9, f12, f8, rdn # perform operation
fmsub.s f29, f9, f12, f8, rmm # perform operation
fmsub.s f29, f9, f12, f8, rne # perform operation
fmsub.s f29, f9, f12, f8, rtz # perform operation
fmsub.s f29, f9, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x133a6ee6 # load x3 with value 0x133a6ee6
sw x3, 0(x2) # store 0x133a6ee6 in memory
flw f20, 0(x2) # load 0x133a6ee6 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmsub.s f1, f15, f20, f31, dyn # perform operation
fmsub.s f1, f15, f20, f31, rdn # perform operation
fmsub.s f1, f15, f20, f31, rmm # perform operation
fmsub.s f1, f15, f20, f31, rne # perform operation
fmsub.s f1, f15, f20, f31, rtz # perform operation
fmsub.s f1, f15, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x09af6a7c # load x3 with value 0x09af6a7c
sw x3, 0(x2) # store 0x09af6a7c in memory
flw f16, 0(x2) # load 0x09af6a7c from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f1, f5, f16, f19, dyn # perform operation
fmsub.s f1, f5, f16, f19, rdn # perform operation
fmsub.s f1, f5, f16, f19, rmm # perform operation
fmsub.s f1, f5, f16, f19, rne # perform operation
fmsub.s f1, f5, f16, f19, rtz # perform operation
fmsub.s f1, f5, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xb99f063d # load x3 with value 0xb99f063d
sw x3, 0(x2) # store 0xb99f063d in memory
flw f30, 0(x2) # load 0xb99f063d from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f13, f19, f30, f22, dyn # perform operation
fmsub.s f13, f19, f30, f22, rdn # perform operation
fmsub.s f13, f19, f30, f22, rmm # perform operation
fmsub.s f13, f19, f30, f22, rne # perform operation
fmsub.s f13, f19, f30, f22, rtz # perform operation
fmsub.s f13, f19, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f30, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x14e1d11a # load x3 with value 0x14e1d11a
sw x3, 0(x2) # store 0x14e1d11a in memory
flw f25, 0(x2) # load 0x14e1d11a from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmsub.s f24, f12, f25, f30, dyn # perform operation
fmsub.s f24, f12, f25, f30, rdn # perform operation
fmsub.s f24, f12, f25, f30, rmm # perform operation
fmsub.s f24, f12, f25, f30, rne # perform operation
fmsub.s f24, f12, f25, f30, rtz # perform operation
fmsub.s f24, f12, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f12, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xfa800b3c # load x3 with value 0xfa800b3c
sw x3, 0(x2) # store 0xfa800b3c in memory
flw f9, 0(x2) # load 0xfa800b3c from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fmsub.s f3, f25, f9, f15, dyn # perform operation
fmsub.s f3, f25, f9, f15, rdn # perform operation
fmsub.s f3, f25, f9, f15, rmm # perform operation
fmsub.s f3, f25, f9, f15, rne # perform operation
fmsub.s f3, f25, f9, f15, rtz # perform operation
fmsub.s f3, f25, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f25, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x8b5d54df # load x3 with value 0x8b5d54df
sw x3, 0(x2) # store 0x8b5d54df in memory
flw f7, 0(x2) # load 0x8b5d54df from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f1, f11, f7, f30, dyn # perform operation
fmsub.s f1, f11, f7, f30, rdn # perform operation
fmsub.s f1, f11, f7, f30, rmm # perform operation
fmsub.s f1, f11, f7, f30, rne # perform operation
fmsub.s f1, f11, f7, f30, rtz # perform operation
fmsub.s f1, f11, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x8a032e5a # load x3 with value 0x8a032e5a
sw x3, 0(x2) # store 0x8a032e5a in memory
flw f5, 0(x2) # load 0x8a032e5a from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmsub.s f22, f3, f5, f7, dyn # perform operation
fmsub.s f22, f3, f5, f7, rdn # perform operation
fmsub.s f22, f3, f5, f7, rmm # perform operation
fmsub.s f22, f3, f5, f7, rne # perform operation
fmsub.s f22, f3, f5, f7, rtz # perform operation
fmsub.s f22, f3, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xba146a4a # load x3 with value 0xba146a4a
sw x3, 0(x2) # store 0xba146a4a in memory
flw f19, 0(x2) # load 0xba146a4a from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f3, f31, f19, f23, dyn # perform operation
fmsub.s f3, f31, f19, f23, rdn # perform operation
fmsub.s f3, f31, f19, f23, rmm # perform operation
fmsub.s f3, f31, f19, f23, rne # perform operation
fmsub.s f3, f31, f19, f23, rtz # perform operation
fmsub.s f3, f31, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f19, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x67acd58f # load x3 with value 0x67acd58f
sw x3, 0(x2) # store 0x67acd58f in memory
flw f3, 0(x2) # load 0x67acd58f from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f27, f30, f3, f5, dyn # perform operation
fmsub.s f27, f30, f3, f5, rdn # perform operation
fmsub.s f27, f30, f3, f5, rmm # perform operation
fmsub.s f27, f30, f3, f5, rne # perform operation
fmsub.s f27, f30, f3, f5, rtz # perform operation
fmsub.s f27, f30, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x2e607b1f # load x3 with value 0x2e607b1f
sw x3, 0(x2) # store 0x2e607b1f in memory
flw f10, 0(x2) # load 0x2e607b1f from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmsub.s f15, f13, f10, f5, dyn # perform operation
fmsub.s f15, f13, f10, f5, rdn # perform operation
fmsub.s f15, f13, f10, f5, rmm # perform operation
fmsub.s f15, f13, f10, f5, rne # perform operation
fmsub.s f15, f13, f10, f5, rtz # perform operation
fmsub.s f15, f13, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f13, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f13, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f13, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f13, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f13, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x83956c64 # load x3 with value 0x83956c64
sw x3, 0(x2) # store 0x83956c64 in memory
flw f13, 0(x2) # load 0x83956c64 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmsub.s f10, f27, f13, f12, dyn # perform operation
fmsub.s f10, f27, f13, f12, rdn # perform operation
fmsub.s f10, f27, f13, f12, rmm # perform operation
fmsub.s f10, f27, f13, f12, rne # perform operation
fmsub.s f10, f27, f13, f12, rtz # perform operation
fmsub.s f10, f27, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x721e0f1f # load x3 with value 0x721e0f1f
sw x3, 0(x2) # store 0x721e0f1f in memory
flw f30, 0(x2) # load 0x721e0f1f from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f7, f19, f30, f2, dyn # perform operation
fmsub.s f7, f19, f30, f2, rdn # perform operation
fmsub.s f7, f19, f30, f2, rmm # perform operation
fmsub.s f7, f19, f30, f2, rne # perform operation
fmsub.s f7, f19, f30, f2, rtz # perform operation
fmsub.s f7, f19, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x5d6dd0cd # load x3 with value 0x5d6dd0cd
sw x3, 0(x2) # store 0x5d6dd0cd in memory
flw f30, 0(x2) # load 0x5d6dd0cd from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmsub.s f3, f1, f30, f17, dyn # perform operation
fmsub.s f3, f1, f30, f17, rdn # perform operation
fmsub.s f3, f1, f30, f17, rmm # perform operation
fmsub.s f3, f1, f30, f17, rne # perform operation
fmsub.s f3, f1, f30, f17, rtz # perform operation
fmsub.s f3, f1, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f1, f30, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x5a1b137b # load x3 with value 0x5a1b137b
sw x3, 0(x2) # store 0x5a1b137b in memory
flw f30, 0(x2) # load 0x5a1b137b from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmsub.s f2, f18, f30, f8, dyn # perform operation
fmsub.s f2, f18, f30, f8, rdn # perform operation
fmsub.s f2, f18, f30, f8, rmm # perform operation
fmsub.s f2, f18, f30, f8, rne # perform operation
fmsub.s f2, f18, f30, f8, rtz # perform operation
fmsub.s f2, f18, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xb552df8f # load x3 with value 0xb552df8f
sw x3, 0(x2) # store 0xb552df8f in memory
flw f2, 0(x2) # load 0xb552df8f from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f9, f10, f2, f23, dyn # perform operation
fmsub.s f9, f10, f2, f23, rdn # perform operation
fmsub.s f9, f10, f2, f23, rmm # perform operation
fmsub.s f9, f10, f2, f23, rne # perform operation
fmsub.s f9, f10, f2, f23, rtz # perform operation
fmsub.s f9, f10, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x3e02d00f # load x3 with value 0x3e02d00f
sw x3, 0(x2) # store 0x3e02d00f in memory
flw f13, 0(x2) # load 0x3e02d00f from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmsub.s f30, f31, f13, f19, dyn # perform operation
fmsub.s f30, f31, f13, f19, rdn # perform operation
fmsub.s f30, f31, f13, f19, rmm # perform operation
fmsub.s f30, f31, f13, f19, rne # perform operation
fmsub.s f30, f31, f13, f19, rtz # perform operation
fmsub.s f30, f31, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f31, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x0a92b0ab # load x3 with value 0x0a92b0ab
sw x3, 0(x2) # store 0x0a92b0ab in memory
flw f22, 0(x2) # load 0x0a92b0ab from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmsub.s f10, f6, f22, f28, dyn # perform operation
fmsub.s f10, f6, f22, f28, rdn # perform operation
fmsub.s f10, f6, f22, f28, rmm # perform operation
fmsub.s f10, f6, f22, f28, rne # perform operation
fmsub.s f10, f6, f22, f28, rtz # perform operation
fmsub.s f10, f6, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0xde8f01c6 # load x3 with value 0xde8f01c6
sw x3, 0(x2) # store 0xde8f01c6 in memory
flw f8, 0(x2) # load 0xde8f01c6 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f22, f30, f8, f21, dyn # perform operation
fmsub.s f22, f30, f8, f21, rdn # perform operation
fmsub.s f22, f30, f8, f21, rmm # perform operation
fmsub.s f22, f30, f8, f21, rne # perform operation
fmsub.s f22, f30, f8, f21, rtz # perform operation
fmsub.s f22, f30, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f8, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xba136b49 # load x3 with value 0xba136b49
sw x3, 0(x2) # store 0xba136b49 in memory
flw f24, 0(x2) # load 0xba136b49 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f7, f15, f24, f16, dyn # perform operation
fmsub.s f7, f15, f24, f16, rdn # perform operation
fmsub.s f7, f15, f24, f16, rmm # perform operation
fmsub.s f7, f15, f24, f16, rne # perform operation
fmsub.s f7, f15, f24, f16, rtz # perform operation
fmsub.s f7, f15, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f15, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xf91cad27 # load x3 with value 0xf91cad27
sw x3, 0(x2) # store 0xf91cad27 in memory
flw f21, 0(x2) # load 0xf91cad27 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmsub.s f1, f13, f21, f29, dyn # perform operation
fmsub.s f1, f13, f21, f29, rdn # perform operation
fmsub.s f1, f13, f21, f29, rmm # perform operation
fmsub.s f1, f13, f21, f29, rne # perform operation
fmsub.s f1, f13, f21, f29, rtz # perform operation
fmsub.s f1, f13, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f13, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f13, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f13, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f13, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f13, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x6a17e47c # load x3 with value 0x6a17e47c
sw x3, 0(x2) # store 0x6a17e47c in memory
flw f6, 0(x2) # load 0x6a17e47c from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmsub.s f30, f20, f6, f19, dyn # perform operation
fmsub.s f30, f20, f6, f19, rdn # perform operation
fmsub.s f30, f20, f6, f19, rmm # perform operation
fmsub.s f30, f20, f6, f19, rne # perform operation
fmsub.s f30, f20, f6, f19, rtz # perform operation
fmsub.s f30, f20, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f20, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x01f80164 # load x3 with value 0x01f80164
sw x3, 0(x2) # store 0x01f80164 in memory
flw f3, 0(x2) # load 0x01f80164 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f10, f26, f3, f6, dyn # perform operation
fmsub.s f10, f26, f3, f6, rdn # perform operation
fmsub.s f10, f26, f3, f6, rmm # perform operation
fmsub.s f10, f26, f3, f6, rne # perform operation
fmsub.s f10, f26, f3, f6, rtz # perform operation
fmsub.s f10, f26, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x9511b8fa # load x3 with value 0x9511b8fa
sw x3, 0(x2) # store 0x9511b8fa in memory
flw f15, 0(x2) # load 0x9511b8fa from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmsub.s f12, f8, f15, f27, dyn # perform operation
fmsub.s f12, f8, f15, f27, rdn # perform operation
fmsub.s f12, f8, f15, f27, rmm # perform operation
fmsub.s f12, f8, f15, f27, rne # perform operation
fmsub.s f12, f8, f15, f27, rtz # perform operation
fmsub.s f12, f8, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f15, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x946f7b99 # load x3 with value 0x946f7b99
sw x3, 0(x2) # store 0x946f7b99 in memory
flw f7, 0(x2) # load 0x946f7b99 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f26, f21, f7, f5, dyn # perform operation
fmsub.s f26, f21, f7, f5, rdn # perform operation
fmsub.s f26, f21, f7, f5, rmm # perform operation
fmsub.s f26, f21, f7, f5, rne # perform operation
fmsub.s f26, f21, f7, f5, rtz # perform operation
fmsub.s f26, f21, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f7, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xa1421dc5 # load x3 with value 0xa1421dc5
sw x3, 0(x2) # store 0xa1421dc5 in memory
flw f13, 0(x2) # load 0xa1421dc5 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fmsub.s f3, f21, f13, f20, dyn # perform operation
fmsub.s f3, f21, f13, f20, rdn # perform operation
fmsub.s f3, f21, f13, f20, rmm # perform operation
fmsub.s f3, f21, f13, f20, rne # perform operation
fmsub.s f3, f21, f13, f20, rtz # perform operation
fmsub.s f3, f21, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x28532dae # load x3 with value 0x28532dae
sw x3, 0(x2) # store 0x28532dae in memory
flw f29, 0(x2) # load 0x28532dae from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f17, f28, f29, f27, dyn # perform operation
fmsub.s f17, f28, f29, f27, rdn # perform operation
fmsub.s f17, f28, f29, f27, rmm # perform operation
fmsub.s f17, f28, f29, f27, rne # perform operation
fmsub.s f17, f28, f29, f27, rtz # perform operation
fmsub.s f17, f28, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x76015319 # load x3 with value 0x76015319
sw x3, 0(x2) # store 0x76015319 in memory
flw f27, 0(x2) # load 0x76015319 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmsub.s f12, f9, f27, f20, dyn # perform operation
fmsub.s f12, f9, f27, f20, rdn # perform operation
fmsub.s f12, f9, f27, f20, rmm # perform operation
fmsub.s f12, f9, f27, f20, rne # perform operation
fmsub.s f12, f9, f27, f20, rtz # perform operation
fmsub.s f12, f9, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x3923fcee # load x3 with value 0x3923fcee
sw x3, 0(x2) # store 0x3923fcee in memory
flw f11, 0(x2) # load 0x3923fcee from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmsub.s f18, f2, f11, f6, dyn # perform operation
fmsub.s f18, f2, f11, f6, rdn # perform operation
fmsub.s f18, f2, f11, f6, rmm # perform operation
fmsub.s f18, f2, f11, f6, rne # perform operation
fmsub.s f18, f2, f11, f6, rtz # perform operation
fmsub.s f18, f2, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f2, f11, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x9d2ffdfc # load x3 with value 0x9d2ffdfc
sw x3, 0(x2) # store 0x9d2ffdfc in memory
flw f30, 0(x2) # load 0x9d2ffdfc from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmsub.s f14, f12, f30, f1, dyn # perform operation
fmsub.s f14, f12, f30, f1, rdn # perform operation
fmsub.s f14, f12, f30, f1, rmm # perform operation
fmsub.s f14, f12, f30, f1, rne # perform operation
fmsub.s f14, f12, f30, f1, rtz # perform operation
fmsub.s f14, f12, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x310abfcf # load x3 with value 0x310abfcf
sw x3, 0(x2) # store 0x310abfcf in memory
flw f15, 0(x2) # load 0x310abfcf from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fmsub.s f20, f31, f15, f17, dyn # perform operation
fmsub.s f20, f31, f15, f17, rdn # perform operation
fmsub.s f20, f31, f15, f17, rmm # perform operation
fmsub.s f20, f31, f15, f17, rne # perform operation
fmsub.s f20, f31, f15, f17, rtz # perform operation
fmsub.s f20, f31, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f15, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xf6bab947 # load x3 with value 0xf6bab947
sw x3, 0(x2) # store 0xf6bab947 in memory
flw f14, 0(x2) # load 0xf6bab947 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmsub.s f16, f15, f14, f13, dyn # perform operation
fmsub.s f16, f15, f14, f13, rdn # perform operation
fmsub.s f16, f15, f14, f13, rmm # perform operation
fmsub.s f16, f15, f14, f13, rne # perform operation
fmsub.s f16, f15, f14, f13, rtz # perform operation
fmsub.s f16, f15, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x2415fcef # load x3 with value 0x2415fcef
sw x3, 0(x2) # store 0x2415fcef in memory
flw f15, 0(x2) # load 0x2415fcef from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmsub.s f26, f27, f15, f8, dyn # perform operation
fmsub.s f26, f27, f15, f8, rdn # perform operation
fmsub.s f26, f27, f15, f8, rmm # perform operation
fmsub.s f26, f27, f15, f8, rne # perform operation
fmsub.s f26, f27, f15, f8, rtz # perform operation
fmsub.s f26, f27, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0xc757038e # load x3 with value 0xc757038e
sw x3, 0(x2) # store 0xc757038e in memory
flw f30, 0(x2) # load 0xc757038e from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fmsub.s f10, f18, f30, f20, dyn # perform operation
fmsub.s f10, f18, f30, f20, rdn # perform operation
fmsub.s f10, f18, f30, f20, rmm # perform operation
fmsub.s f10, f18, f30, f20, rne # perform operation
fmsub.s f10, f18, f30, f20, rtz # perform operation
fmsub.s f10, f18, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xe694ede6 # load x3 with value 0xe694ede6
sw x3, 0(x2) # store 0xe694ede6 in memory
flw f25, 0(x2) # load 0xe694ede6 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmsub.s f22, f20, f25, f18, dyn # perform operation
fmsub.s f22, f20, f25, f18, rdn # perform operation
fmsub.s f22, f20, f25, f18, rmm # perform operation
fmsub.s f22, f20, f25, f18, rne # perform operation
fmsub.s f22, f20, f25, f18, rtz # perform operation
fmsub.s f22, f20, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x05f3db6b # load x3 with value 0x05f3db6b
sw x3, 0(x2) # store 0x05f3db6b in memory
flw f24, 0(x2) # load 0x05f3db6b from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmsub.s f18, f16, f24, f29, dyn # perform operation
fmsub.s f18, f16, f24, f29, rdn # perform operation
fmsub.s f18, f16, f24, f29, rmm # perform operation
fmsub.s f18, f16, f24, f29, rne # perform operation
fmsub.s f18, f16, f24, f29, rtz # perform operation
fmsub.s f18, f16, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xb3a80982 # load x3 with value 0xb3a80982
sw x3, 0(x2) # store 0xb3a80982 in memory
flw f13, 0(x2) # load 0xb3a80982 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmsub.s f16, f29, f13, f25, dyn # perform operation
fmsub.s f16, f29, f13, f25, rdn # perform operation
fmsub.s f16, f29, f13, f25, rmm # perform operation
fmsub.s f16, f29, f13, f25, rne # perform operation
fmsub.s f16, f29, f13, f25, rtz # perform operation
fmsub.s f16, f29, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xcafc57ba # load x3 with value 0xcafc57ba
sw x3, 0(x2) # store 0xcafc57ba in memory
flw f29, 0(x2) # load 0xcafc57ba from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f20, f27, f29, f28, dyn # perform operation
fmsub.s f20, f27, f29, f28, rdn # perform operation
fmsub.s f20, f27, f29, f28, rmm # perform operation
fmsub.s f20, f27, f29, f28, rne # perform operation
fmsub.s f20, f27, f29, f28, rtz # perform operation
fmsub.s f20, f27, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f27, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x2d684792 # load x3 with value 0x2d684792
sw x3, 0(x2) # store 0x2d684792 in memory
flw f22, 0(x2) # load 0x2d684792 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f17, f13, f22, f1, dyn # perform operation
fmsub.s f17, f13, f22, f1, rdn # perform operation
fmsub.s f17, f13, f22, f1, rmm # perform operation
fmsub.s f17, f13, f22, f1, rne # perform operation
fmsub.s f17, f13, f22, f1, rtz # perform operation
fmsub.s f17, f13, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x61bcc683 # load x3 with value 0x61bcc683
sw x3, 0(x2) # store 0x61bcc683 in memory
flw f8, 0(x2) # load 0x61bcc683 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmsub.s f21, f12, f8, f9, dyn # perform operation
fmsub.s f21, f12, f8, f9, rdn # perform operation
fmsub.s f21, f12, f8, f9, rmm # perform operation
fmsub.s f21, f12, f8, f9, rne # perform operation
fmsub.s f21, f12, f8, f9, rtz # perform operation
fmsub.s f21, f12, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xe72f4fcd # load x3 with value 0xe72f4fcd
sw x3, 0(x2) # store 0xe72f4fcd in memory
flw f24, 0(x2) # load 0xe72f4fcd from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fmsub.s f21, f30, f24, f13, dyn # perform operation
fmsub.s f21, f30, f24, f13, rdn # perform operation
fmsub.s f21, f30, f24, f13, rmm # perform operation
fmsub.s f21, f30, f24, f13, rne # perform operation
fmsub.s f21, f30, f24, f13, rtz # perform operation
fmsub.s f21, f30, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x287f69a2 # load x3 with value 0x287f69a2
sw x3, 0(x2) # store 0x287f69a2 in memory
flw f19, 0(x2) # load 0x287f69a2 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fmsub.s f27, f12, f19, f15, dyn # perform operation
fmsub.s f27, f12, f19, f15, rdn # perform operation
fmsub.s f27, f12, f19, f15, rmm # perform operation
fmsub.s f27, f12, f19, f15, rne # perform operation
fmsub.s f27, f12, f19, f15, rtz # perform operation
fmsub.s f27, f12, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f12, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f12, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f12, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f12, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f12, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xadd0d3bd # load x3 with value 0xadd0d3bd
sw x3, 0(x2) # store 0xadd0d3bd in memory
flw f9, 0(x2) # load 0xadd0d3bd from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f13, f1, f9, f16, dyn # perform operation
fmsub.s f13, f1, f9, f16, rdn # perform operation
fmsub.s f13, f1, f9, f16, rmm # perform operation
fmsub.s f13, f1, f9, f16, rne # perform operation
fmsub.s f13, f1, f9, f16, rtz # perform operation
fmsub.s f13, f1, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x5ee76d5a # load x3 with value 0x5ee76d5a
sw x3, 0(x2) # store 0x5ee76d5a in memory
flw f1, 0(x2) # load 0x5ee76d5a from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f10, f24, f1, f22, dyn # perform operation
fmsub.s f10, f24, f1, f22, rdn # perform operation
fmsub.s f10, f24, f1, f22, rmm # perform operation
fmsub.s f10, f24, f1, f22, rne # perform operation
fmsub.s f10, f24, f1, f22, rtz # perform operation
fmsub.s f10, f24, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xbed79732 # load x3 with value 0xbed79732
sw x3, 0(x2) # store 0xbed79732 in memory
flw f13, 0(x2) # load 0xbed79732 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmsub.s f24, f12, f13, f2, dyn # perform operation
fmsub.s f24, f12, f13, f2, rdn # perform operation
fmsub.s f24, f12, f13, f2, rmm # perform operation
fmsub.s f24, f12, f13, f2, rne # perform operation
fmsub.s f24, f12, f13, f2, rtz # perform operation
fmsub.s f24, f12, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f12, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x4d30f636 # load x3 with value 0x4d30f636
sw x3, 0(x2) # store 0x4d30f636 in memory
flw f27, 0(x2) # load 0x4d30f636 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmsub.s f8, f24, f27, f1, dyn # perform operation
fmsub.s f8, f24, f27, f1, rdn # perform operation
fmsub.s f8, f24, f27, f1, rmm # perform operation
fmsub.s f8, f24, f27, f1, rne # perform operation
fmsub.s f8, f24, f27, f1, rtz # perform operation
fmsub.s f8, f24, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f27, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xfe6b8810 # load x3 with value 0xfe6b8810
sw x3, 0(x2) # store 0xfe6b8810 in memory
flw f28, 0(x2) # load 0xfe6b8810 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmsub.s f17, f1, f28, f29, dyn # perform operation
fmsub.s f17, f1, f28, f29, rdn # perform operation
fmsub.s f17, f1, f28, f29, rmm # perform operation
fmsub.s f17, f1, f28, f29, rne # perform operation
fmsub.s f17, f1, f28, f29, rtz # perform operation
fmsub.s f17, f1, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x83b1fed1 # load x3 with value 0x83b1fed1
sw x3, 0(x2) # store 0x83b1fed1 in memory
flw f13, 0(x2) # load 0x83b1fed1 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f31, f28, f13, f21, dyn # perform operation
fmsub.s f31, f28, f13, f21, rdn # perform operation
fmsub.s f31, f28, f13, f21, rmm # perform operation
fmsub.s f31, f28, f13, f21, rne # perform operation
fmsub.s f31, f28, f13, f21, rtz # perform operation
fmsub.s f31, f28, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f28, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xd456a8d8 # load x3 with value 0xd456a8d8
sw x3, 0(x2) # store 0xd456a8d8 in memory
flw f2, 0(x2) # load 0xd456a8d8 from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f5, f7, f2, f14, dyn # perform operation
fmsub.s f5, f7, f2, f14, rdn # perform operation
fmsub.s f5, f7, f2, f14, rmm # perform operation
fmsub.s f5, f7, f2, f14, rne # perform operation
fmsub.s f5, f7, f2, f14, rtz # perform operation
fmsub.s f5, f7, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f7, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f7, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f7, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f7, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f7, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x2f49fc20 # load x3 with value 0x2f49fc20
sw x3, 0(x2) # store 0x2f49fc20 in memory
flw f22, 0(x2) # load 0x2f49fc20 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmsub.s f30, f11, f22, f17, dyn # perform operation
fmsub.s f30, f11, f22, f17, rdn # perform operation
fmsub.s f30, f11, f22, f17, rmm # perform operation
fmsub.s f30, f11, f22, f17, rne # perform operation
fmsub.s f30, f11, f22, f17, rtz # perform operation
fmsub.s f30, f11, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f11, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f11, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f11, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f11, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f11, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xb9990f84 # load x3 with value 0xb9990f84
sw x3, 0(x2) # store 0xb9990f84 in memory
flw f16, 0(x2) # load 0xb9990f84 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmsub.s f12, f5, f16, f1, dyn # perform operation
fmsub.s f12, f5, f16, f1, rdn # perform operation
fmsub.s f12, f5, f16, f1, rmm # perform operation
fmsub.s f12, f5, f16, f1, rne # perform operation
fmsub.s f12, f5, f16, f1, rtz # perform operation
fmsub.s f12, f5, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xb05337b9 # load x3 with value 0xb05337b9
sw x3, 0(x2) # store 0xb05337b9 in memory
flw f5, 0(x2) # load 0xb05337b9 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmsub.s f29, f9, f5, f11, dyn # perform operation
fmsub.s f29, f9, f5, f11, rdn # perform operation
fmsub.s f29, f9, f5, f11, rmm # perform operation
fmsub.s f29, f9, f5, f11, rne # perform operation
fmsub.s f29, f9, f5, f11, rtz # perform operation
fmsub.s f29, f9, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x9883b90f # load x3 with value 0x9883b90f
sw x3, 0(x2) # store 0x9883b90f in memory
flw f10, 0(x2) # load 0x9883b90f from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f26, f13, f10, f8, dyn # perform operation
fmsub.s f26, f13, f10, f8, rdn # perform operation
fmsub.s f26, f13, f10, f8, rmm # perform operation
fmsub.s f26, f13, f10, f8, rne # perform operation
fmsub.s f26, f13, f10, f8, rtz # perform operation
fmsub.s f26, f13, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x94524ace # load x3 with value 0x94524ace
sw x3, 0(x2) # store 0x94524ace in memory
flw f5, 0(x2) # load 0x94524ace from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmsub.s f3, f19, f5, f18, dyn # perform operation
fmsub.s f3, f19, f5, f18, rdn # perform operation
fmsub.s f3, f19, f5, f18, rmm # perform operation
fmsub.s f3, f19, f5, f18, rne # perform operation
fmsub.s f3, f19, f5, f18, rtz # perform operation
fmsub.s f3, f19, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f19, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x68e16364 # load x3 with value 0x68e16364
sw x3, 0(x2) # store 0x68e16364 in memory
flw f3, 0(x2) # load 0x68e16364 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f15, f24, f3, f19, dyn # perform operation
fmsub.s f15, f24, f3, f19, rdn # perform operation
fmsub.s f15, f24, f3, f19, rmm # perform operation
fmsub.s f15, f24, f3, f19, rne # perform operation
fmsub.s f15, f24, f3, f19, rtz # perform operation
fmsub.s f15, f24, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x681a408c # load x3 with value 0x681a408c
sw x3, 0(x2) # store 0x681a408c in memory
flw f25, 0(x2) # load 0x681a408c from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fmsub.s f18, f29, f25, f3, dyn # perform operation
fmsub.s f18, f29, f25, f3, rdn # perform operation
fmsub.s f18, f29, f25, f3, rmm # perform operation
fmsub.s f18, f29, f25, f3, rne # perform operation
fmsub.s f18, f29, f25, f3, rtz # perform operation
fmsub.s f18, f29, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f29, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x8be41c25 # load x3 with value 0x8be41c25
sw x3, 0(x2) # store 0x8be41c25 in memory
flw f11, 0(x2) # load 0x8be41c25 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmsub.s f27, f15, f11, f29, dyn # perform operation
fmsub.s f27, f15, f11, f29, rdn # perform operation
fmsub.s f27, f15, f11, f29, rmm # perform operation
fmsub.s f27, f15, f11, f29, rne # perform operation
fmsub.s f27, f15, f11, f29, rtz # perform operation
fmsub.s f27, f15, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x5b005990 # load x3 with value 0x5b005990
sw x3, 0(x2) # store 0x5b005990 in memory
flw f23, 0(x2) # load 0x5b005990 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmsub.s f20, f18, f23, f2, dyn # perform operation
fmsub.s f20, f18, f23, f2, rdn # perform operation
fmsub.s f20, f18, f23, f2, rmm # perform operation
fmsub.s f20, f18, f23, f2, rne # perform operation
fmsub.s f20, f18, f23, f2, rtz # perform operation
fmsub.s f20, f18, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f18, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x604fa5dd # load x3 with value 0x604fa5dd
sw x3, 0(x2) # store 0x604fa5dd in memory
flw f26, 0(x2) # load 0x604fa5dd from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmsub.s f11, f17, f26, f29, dyn # perform operation
fmsub.s f11, f17, f26, f29, rdn # perform operation
fmsub.s f11, f17, f26, f29, rmm # perform operation
fmsub.s f11, f17, f26, f29, rne # perform operation
fmsub.s f11, f17, f26, f29, rtz # perform operation
fmsub.s f11, f17, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x22367a98 # load x3 with value 0x22367a98
sw x3, 0(x2) # store 0x22367a98 in memory
flw f31, 0(x2) # load 0x22367a98 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmsub.s f30, f16, f31, f8, dyn # perform operation
fmsub.s f30, f16, f31, f8, rdn # perform operation
fmsub.s f30, f16, f31, f8, rmm # perform operation
fmsub.s f30, f16, f31, f8, rne # perform operation
fmsub.s f30, f16, f31, f8, rtz # perform operation
fmsub.s f30, f16, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x32f533ce # load x3 with value 0x32f533ce
sw x3, 0(x2) # store 0x32f533ce in memory
flw f9, 0(x2) # load 0x32f533ce from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f21, f31, f9, f29, dyn # perform operation
fmsub.s f21, f31, f9, f29, rdn # perform operation
fmsub.s f21, f31, f9, f29, rmm # perform operation
fmsub.s f21, f31, f9, f29, rne # perform operation
fmsub.s f21, f31, f9, f29, rtz # perform operation
fmsub.s f21, f31, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x05853c63 # load x3 with value 0x05853c63
sw x3, 0(x2) # store 0x05853c63 in memory
flw f19, 0(x2) # load 0x05853c63 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
fmsub.s f5, f31, f19, f6, dyn # perform operation
fmsub.s f5, f31, f19, f6, rdn # perform operation
fmsub.s f5, f31, f19, f6, rmm # perform operation
fmsub.s f5, f31, f19, f6, rne # perform operation
fmsub.s f5, f31, f19, f6, rtz # perform operation
fmsub.s f5, f31, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x90cd2795 # load x3 with value 0x90cd2795
sw x3, 0(x2) # store 0x90cd2795 in memory
flw f14, 0(x2) # load 0x90cd2795 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f11, f30, f14, f26, dyn # perform operation
fmsub.s f11, f30, f14, f26, rdn # perform operation
fmsub.s f11, f30, f14, f26, rmm # perform operation
fmsub.s f11, f30, f14, f26, rne # perform operation
fmsub.s f11, f30, f14, f26, rtz # perform operation
fmsub.s f11, f30, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f14, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xf05c167e # load x3 with value 0xf05c167e
sw x3, 0(x2) # store 0xf05c167e in memory
flw f16, 0(x2) # load 0xf05c167e from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmsub.s f8, f28, f16, f20, dyn # perform operation
fmsub.s f8, f28, f16, f20, rdn # perform operation
fmsub.s f8, f28, f16, f20, rmm # perform operation
fmsub.s f8, f28, f16, f20, rne # perform operation
fmsub.s f8, f28, f16, f20, rtz # perform operation
fmsub.s f8, f28, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xade31db8 # load x3 with value 0xade31db8
sw x3, 0(x2) # store 0xade31db8 in memory
flw f26, 0(x2) # load 0xade31db8 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fmsub.s f5, f25, f26, f14, dyn # perform operation
fmsub.s f5, f25, f26, f14, rdn # perform operation
fmsub.s f5, f25, f26, f14, rmm # perform operation
fmsub.s f5, f25, f26, f14, rne # perform operation
fmsub.s f5, f25, f26, f14, rtz # perform operation
fmsub.s f5, f25, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xfe228bd6 # load x3 with value 0xfe228bd6
sw x3, 0(x2) # store 0xfe228bd6 in memory
flw f26, 0(x2) # load 0xfe228bd6 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmsub.s f28, f12, f26, f27, dyn # perform operation
fmsub.s f28, f12, f26, f27, rdn # perform operation
fmsub.s f28, f12, f26, f27, rmm # perform operation
fmsub.s f28, f12, f26, f27, rne # perform operation
fmsub.s f28, f12, f26, f27, rtz # perform operation
fmsub.s f28, f12, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f12, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xc6c53eaa # load x3 with value 0xc6c53eaa
sw x3, 0(x2) # store 0xc6c53eaa in memory
flw f28, 0(x2) # load 0xc6c53eaa from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmsub.s f31, f10, f28, f27, dyn # perform operation
fmsub.s f31, f10, f28, f27, rdn # perform operation
fmsub.s f31, f10, f28, f27, rmm # perform operation
fmsub.s f31, f10, f28, f27, rne # perform operation
fmsub.s f31, f10, f28, f27, rtz # perform operation
fmsub.s f31, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x0cbe6ffe # load x3 with value 0x0cbe6ffe
sw x3, 0(x2) # store 0x0cbe6ffe in memory
flw f17, 0(x2) # load 0x0cbe6ffe from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmsub.s f27, f30, f17, f11, dyn # perform operation
fmsub.s f27, f30, f17, f11, rdn # perform operation
fmsub.s f27, f30, f17, f11, rmm # perform operation
fmsub.s f27, f30, f17, f11, rne # perform operation
fmsub.s f27, f30, f17, f11, rtz # perform operation
fmsub.s f27, f30, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xb6b245fe # load x3 with value 0xb6b245fe
sw x3, 0(x2) # store 0xb6b245fe in memory
flw f30, 0(x2) # load 0xb6b245fe from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmsub.s f28, f20, f30, f23, dyn # perform operation
fmsub.s f28, f20, f30, f23, rdn # perform operation
fmsub.s f28, f20, f30, f23, rmm # perform operation
fmsub.s f28, f20, f30, f23, rne # perform operation
fmsub.s f28, f20, f30, f23, rtz # perform operation
fmsub.s f28, f20, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x27aa7adc # load x3 with value 0x27aa7adc
sw x3, 0(x2) # store 0x27aa7adc in memory
flw f21, 0(x2) # load 0x27aa7adc from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmsub.s f18, f24, f21, f3, dyn # perform operation
fmsub.s f18, f24, f21, f3, rdn # perform operation
fmsub.s f18, f24, f21, f3, rmm # perform operation
fmsub.s f18, f24, f21, f3, rne # perform operation
fmsub.s f18, f24, f21, f3, rtz # perform operation
fmsub.s f18, f24, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xe5faaa31 # load x3 with value 0xe5faaa31
sw x3, 0(x2) # store 0xe5faaa31 in memory
flw f21, 0(x2) # load 0xe5faaa31 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f2, f31, f21, f16, dyn # perform operation
fmsub.s f2, f31, f21, f16, rdn # perform operation
fmsub.s f2, f31, f21, f16, rmm # perform operation
fmsub.s f2, f31, f21, f16, rne # perform operation
fmsub.s f2, f31, f21, f16, rtz # perform operation
fmsub.s f2, f31, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f21, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x035d0562 # load x3 with value 0x035d0562
sw x3, 0(x2) # store 0x035d0562 in memory
flw f6, 0(x2) # load 0x035d0562 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmsub.s f28, f29, f6, f2, dyn # perform operation
fmsub.s f28, f29, f6, f2, rdn # perform operation
fmsub.s f28, f29, f6, f2, rmm # perform operation
fmsub.s f28, f29, f6, f2, rne # perform operation
fmsub.s f28, f29, f6, f2, rtz # perform operation
fmsub.s f28, f29, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x0a0e350a # load x3 with value 0x0a0e350a
sw x3, 0(x2) # store 0x0a0e350a in memory
flw f14, 0(x2) # load 0x0a0e350a from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fmsub.s f6, f20, f14, f16, dyn # perform operation
fmsub.s f6, f20, f14, f16, rdn # perform operation
fmsub.s f6, f20, f14, f16, rmm # perform operation
fmsub.s f6, f20, f14, f16, rne # perform operation
fmsub.s f6, f20, f14, f16, rtz # perform operation
fmsub.s f6, f20, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x076a96af # load x3 with value 0x076a96af
sw x3, 0(x2) # store 0x076a96af in memory
flw f14, 0(x2) # load 0x076a96af from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmsub.s f22, f19, f14, f1, dyn # perform operation
fmsub.s f22, f19, f14, f1, rdn # perform operation
fmsub.s f22, f19, f14, f1, rmm # perform operation
fmsub.s f22, f19, f14, f1, rne # perform operation
fmsub.s f22, f19, f14, f1, rtz # perform operation
fmsub.s f22, f19, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f19, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x4c6761cc # load x3 with value 0x4c6761cc
sw x3, 0(x2) # store 0x4c6761cc in memory
flw f26, 0(x2) # load 0x4c6761cc from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f11, f22, f26, f6, dyn # perform operation
fmsub.s f11, f22, f26, f6, rdn # perform operation
fmsub.s f11, f22, f26, f6, rmm # perform operation
fmsub.s f11, f22, f26, f6, rne # perform operation
fmsub.s f11, f22, f26, f6, rtz # perform operation
fmsub.s f11, f22, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x407f3439 # load x3 with value 0x407f3439
sw x3, 0(x2) # store 0x407f3439 in memory
flw f14, 0(x2) # load 0x407f3439 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f24, f7, f14, f3, dyn # perform operation
fmsub.s f24, f7, f14, f3, rdn # perform operation
fmsub.s f24, f7, f14, f3, rmm # perform operation
fmsub.s f24, f7, f14, f3, rne # perform operation
fmsub.s f24, f7, f14, f3, rtz # perform operation
fmsub.s f24, f7, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f7, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x4beff209 # load x3 with value 0x4beff209
sw x3, 0(x2) # store 0x4beff209 in memory
flw f5, 0(x2) # load 0x4beff209 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmsub.s f8, f23, f5, f16, dyn # perform operation
fmsub.s f8, f23, f5, f16, rdn # perform operation
fmsub.s f8, f23, f5, f16, rmm # perform operation
fmsub.s f8, f23, f5, f16, rne # perform operation
fmsub.s f8, f23, f5, f16, rtz # perform operation
fmsub.s f8, f23, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xe2d4c71c # load x3 with value 0xe2d4c71c
sw x3, 0(x2) # store 0xe2d4c71c in memory
flw f15, 0(x2) # load 0xe2d4c71c from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmsub.s f20, f16, f15, f17, dyn # perform operation
fmsub.s f20, f16, f15, f17, rdn # perform operation
fmsub.s f20, f16, f15, f17, rmm # perform operation
fmsub.s f20, f16, f15, f17, rne # perform operation
fmsub.s f20, f16, f15, f17, rtz # perform operation
fmsub.s f20, f16, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f16, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f16, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f16, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f16, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f16, f15, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x801a89e4 # load x3 with value 0x801a89e4
sw x3, 0(x2) # store 0x801a89e4 in memory
flw f1, 0(x2) # load 0x801a89e4 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f14, f24, f1, f6, dyn # perform operation
fmsub.s f14, f24, f1, f6, rdn # perform operation
fmsub.s f14, f24, f1, f6, rmm # perform operation
fmsub.s f14, f24, f1, f6, rne # perform operation
fmsub.s f14, f24, f1, f6, rtz # perform operation
fmsub.s f14, f24, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xa1facd6c # load x3 with value 0xa1facd6c
sw x3, 0(x2) # store 0xa1facd6c in memory
flw f25, 0(x2) # load 0xa1facd6c from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmsub.s f8, f20, f25, f13, dyn # perform operation
fmsub.s f8, f20, f25, f13, rdn # perform operation
fmsub.s f8, f20, f25, f13, rmm # perform operation
fmsub.s f8, f20, f25, f13, rne # perform operation
fmsub.s f8, f20, f25, f13, rtz # perform operation
fmsub.s f8, f20, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f20, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x7795e8ca # load x3 with value 0x7795e8ca
sw x3, 0(x2) # store 0x7795e8ca in memory
flw f11, 0(x2) # load 0x7795e8ca from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmsub.s f29, f19, f11, f30, dyn # perform operation
fmsub.s f29, f19, f11, f30, rdn # perform operation
fmsub.s f29, f19, f11, f30, rmm # perform operation
fmsub.s f29, f19, f11, f30, rne # perform operation
fmsub.s f29, f19, f11, f30, rtz # perform operation
fmsub.s f29, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x869fe2a9 # load x3 with value 0x869fe2a9
sw x3, 0(x2) # store 0x869fe2a9 in memory
flw f26, 0(x2) # load 0x869fe2a9 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmsub.s f1, f28, f26, f12, dyn # perform operation
fmsub.s f1, f28, f26, f12, rdn # perform operation
fmsub.s f1, f28, f26, f12, rmm # perform operation
fmsub.s f1, f28, f26, f12, rne # perform operation
fmsub.s f1, f28, f26, f12, rtz # perform operation
fmsub.s f1, f28, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x04198489 # load x3 with value 0x04198489
sw x3, 0(x2) # store 0x04198489 in memory
flw f29, 0(x2) # load 0x04198489 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmsub.s f24, f18, f29, f14, dyn # perform operation
fmsub.s f24, f18, f29, f14, rdn # perform operation
fmsub.s f24, f18, f29, f14, rmm # perform operation
fmsub.s f24, f18, f29, f14, rne # perform operation
fmsub.s f24, f18, f29, f14, rtz # perform operation
fmsub.s f24, f18, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x5cf11e47 # load x3 with value 0x5cf11e47
sw x3, 0(x2) # store 0x5cf11e47 in memory
flw f9, 0(x2) # load 0x5cf11e47 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f23, f22, f9, f25, dyn # perform operation
fmsub.s f23, f22, f9, f25, rdn # perform operation
fmsub.s f23, f22, f9, f25, rmm # perform operation
fmsub.s f23, f22, f9, f25, rne # perform operation
fmsub.s f23, f22, f9, f25, rtz # perform operation
fmsub.s f23, f22, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x593a6267 # load x3 with value 0x593a6267
sw x3, 0(x2) # store 0x593a6267 in memory
flw f3, 0(x2) # load 0x593a6267 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f11, f10, f3, f5, dyn # perform operation
fmsub.s f11, f10, f3, f5, rdn # perform operation
fmsub.s f11, f10, f3, f5, rmm # perform operation
fmsub.s f11, f10, f3, f5, rne # perform operation
fmsub.s f11, f10, f3, f5, rtz # perform operation
fmsub.s f11, f10, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f10, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x62634e7e # load x3 with value 0x62634e7e
sw x3, 0(x2) # store 0x62634e7e in memory
flw f14, 0(x2) # load 0x62634e7e from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmsub.s f9, f22, f14, f18, dyn # perform operation
fmsub.s f9, f22, f14, f18, rdn # perform operation
fmsub.s f9, f22, f14, f18, rmm # perform operation
fmsub.s f9, f22, f14, f18, rne # perform operation
fmsub.s f9, f22, f14, f18, rtz # perform operation
fmsub.s f9, f22, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xdea2fa00 # load x3 with value 0xdea2fa00
sw x3, 0(x2) # store 0xdea2fa00 in memory
flw f21, 0(x2) # load 0xdea2fa00 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fmsub.s f19, f10, f21, f5, dyn # perform operation
fmsub.s f19, f10, f21, f5, rdn # perform operation
fmsub.s f19, f10, f21, f5, rmm # perform operation
fmsub.s f19, f10, f21, f5, rne # perform operation
fmsub.s f19, f10, f21, f5, rtz # perform operation
fmsub.s f19, f10, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x557c7181 # load x3 with value 0x557c7181
sw x3, 0(x2) # store 0x557c7181 in memory
flw f17, 0(x2) # load 0x557c7181 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmsub.s f6, f12, f17, f30, dyn # perform operation
fmsub.s f6, f12, f17, f30, rdn # perform operation
fmsub.s f6, f12, f17, f30, rmm # perform operation
fmsub.s f6, f12, f17, f30, rne # perform operation
fmsub.s f6, f12, f17, f30, rtz # perform operation
fmsub.s f6, f12, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f12, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x5f510783 # load x3 with value 0x5f510783
sw x3, 0(x2) # store 0x5f510783 in memory
flw f16, 0(x2) # load 0x5f510783 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmsub.s f29, f2, f16, f28, dyn # perform operation
fmsub.s f29, f2, f16, f28, rdn # perform operation
fmsub.s f29, f2, f16, f28, rmm # perform operation
fmsub.s f29, f2, f16, f28, rne # perform operation
fmsub.s f29, f2, f16, f28, rtz # perform operation
fmsub.s f29, f2, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xda026d17 # load x3 with value 0xda026d17
sw x3, 0(x2) # store 0xda026d17 in memory
flw f17, 0(x2) # load 0xda026d17 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fmsub.s f14, f6, f17, f22, dyn # perform operation
fmsub.s f14, f6, f17, f22, rdn # perform operation
fmsub.s f14, f6, f17, f22, rmm # perform operation
fmsub.s f14, f6, f17, f22, rne # perform operation
fmsub.s f14, f6, f17, f22, rtz # perform operation
fmsub.s f14, f6, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f6, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x0f20fcbe # load x3 with value 0x0f20fcbe
sw x3, 0(x2) # store 0x0f20fcbe in memory
flw f24, 0(x2) # load 0x0f20fcbe from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fmsub.s f10, f31, f24, f13, dyn # perform operation
fmsub.s f10, f31, f24, f13, rdn # perform operation
fmsub.s f10, f31, f24, f13, rmm # perform operation
fmsub.s f10, f31, f24, f13, rne # perform operation
fmsub.s f10, f31, f24, f13, rtz # perform operation
fmsub.s f10, f31, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f31, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x5bf13706 # load x3 with value 0x5bf13706
sw x3, 0(x2) # store 0x5bf13706 in memory
flw f1, 0(x2) # load 0x5bf13706 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fmsub.s f20, f29, f1, f24, dyn # perform operation
fmsub.s f20, f29, f1, f24, rdn # perform operation
fmsub.s f20, f29, f1, f24, rmm # perform operation
fmsub.s f20, f29, f1, f24, rne # perform operation
fmsub.s f20, f29, f1, f24, rtz # perform operation
fmsub.s f20, f29, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f1, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xcb17d678 # load x3 with value 0xcb17d678
sw x3, 0(x2) # store 0xcb17d678 in memory
flw f2, 0(x2) # load 0xcb17d678 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmsub.s f18, f23, f2, f30, dyn # perform operation
fmsub.s f18, f23, f2, f30, rdn # perform operation
fmsub.s f18, f23, f2, f30, rmm # perform operation
fmsub.s f18, f23, f2, f30, rne # perform operation
fmsub.s f18, f23, f2, f30, rtz # perform operation
fmsub.s f18, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x2eca31d9 # load x3 with value 0x2eca31d9
sw x3, 0(x2) # store 0x2eca31d9 in memory
flw f12, 0(x2) # load 0x2eca31d9 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmsub.s f14, f15, f12, f25, dyn # perform operation
fmsub.s f14, f15, f12, f25, rdn # perform operation
fmsub.s f14, f15, f12, f25, rmm # perform operation
fmsub.s f14, f15, f12, f25, rne # perform operation
fmsub.s f14, f15, f12, f25, rtz # perform operation
fmsub.s f14, f15, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x71db80d3 # load x3 with value 0x71db80d3
sw x3, 0(x2) # store 0x71db80d3 in memory
flw f8, 0(x2) # load 0x71db80d3 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmsub.s f13, f31, f8, f27, dyn # perform operation
fmsub.s f13, f31, f8, f27, rdn # perform operation
fmsub.s f13, f31, f8, f27, rmm # perform operation
fmsub.s f13, f31, f8, f27, rne # perform operation
fmsub.s f13, f31, f8, f27, rtz # perform operation
fmsub.s f13, f31, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x74616fc8 # load x3 with value 0x74616fc8
sw x3, 0(x2) # store 0x74616fc8 in memory
flw f20, 0(x2) # load 0x74616fc8 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmsub.s f30, f8, f20, f24, dyn # perform operation
fmsub.s f30, f8, f20, f24, rdn # perform operation
fmsub.s f30, f8, f20, f24, rmm # perform operation
fmsub.s f30, f8, f20, f24, rne # perform operation
fmsub.s f30, f8, f20, f24, rtz # perform operation
fmsub.s f30, f8, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xa155d004 # load x3 with value 0xa155d004
sw x3, 0(x2) # store 0xa155d004 in memory
flw f28, 0(x2) # load 0xa155d004 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f21, f26, f28, f27, dyn # perform operation
fmsub.s f21, f26, f28, f27, rdn # perform operation
fmsub.s f21, f26, f28, f27, rmm # perform operation
fmsub.s f21, f26, f28, f27, rne # perform operation
fmsub.s f21, f26, f28, f27, rtz # perform operation
fmsub.s f21, f26, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xdb49cfb2 # load x3 with value 0xdb49cfb2
sw x3, 0(x2) # store 0xdb49cfb2 in memory
flw f19, 0(x2) # load 0xdb49cfb2 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f23, f18, f19, f1, dyn # perform operation
fmsub.s f23, f18, f19, f1, rdn # perform operation
fmsub.s f23, f18, f19, f1, rmm # perform operation
fmsub.s f23, f18, f19, f1, rne # perform operation
fmsub.s f23, f18, f19, f1, rtz # perform operation
fmsub.s f23, f18, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x23d1fe9d # load x3 with value 0x23d1fe9d
sw x3, 0(x2) # store 0x23d1fe9d in memory
flw f15, 0(x2) # load 0x23d1fe9d from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmsub.s f5, f18, f15, f22, dyn # perform operation
fmsub.s f5, f18, f15, f22, rdn # perform operation
fmsub.s f5, f18, f15, f22, rmm # perform operation
fmsub.s f5, f18, f15, f22, rne # perform operation
fmsub.s f5, f18, f15, f22, rtz # perform operation
fmsub.s f5, f18, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xb3af81c8 # load x3 with value 0xb3af81c8
sw x3, 0(x2) # store 0xb3af81c8 in memory
flw f17, 0(x2) # load 0xb3af81c8 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fmsub.s f22, f7, f17, f13, dyn # perform operation
fmsub.s f22, f7, f17, f13, rdn # perform operation
fmsub.s f22, f7, f17, f13, rmm # perform operation
fmsub.s f22, f7, f17, f13, rne # perform operation
fmsub.s f22, f7, f17, f13, rtz # perform operation
fmsub.s f22, f7, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x2fca8f30 # load x3 with value 0x2fca8f30
sw x3, 0(x2) # store 0x2fca8f30 in memory
flw f9, 0(x2) # load 0x2fca8f30 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fmsub.s f6, f30, f9, f27, dyn # perform operation
fmsub.s f6, f30, f9, f27, rdn # perform operation
fmsub.s f6, f30, f9, f27, rmm # perform operation
fmsub.s f6, f30, f9, f27, rne # perform operation
fmsub.s f6, f30, f9, f27, rtz # perform operation
fmsub.s f6, f30, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xd043dd0d # load x3 with value 0xd043dd0d
sw x3, 0(x2) # store 0xd043dd0d in memory
flw f21, 0(x2) # load 0xd043dd0d from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmsub.s f10, f5, f21, f28, dyn # perform operation
fmsub.s f10, f5, f21, f28, rdn # perform operation
fmsub.s f10, f5, f21, f28, rmm # perform operation
fmsub.s f10, f5, f21, f28, rne # perform operation
fmsub.s f10, f5, f21, f28, rtz # perform operation
fmsub.s f10, f5, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xfe306e45 # load x3 with value 0xfe306e45
sw x3, 0(x2) # store 0xfe306e45 in memory
flw f25, 0(x2) # load 0xfe306e45 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmsub.s f8, f13, f25, f14, dyn # perform operation
fmsub.s f8, f13, f25, f14, rdn # perform operation
fmsub.s f8, f13, f25, f14, rmm # perform operation
fmsub.s f8, f13, f25, f14, rne # perform operation
fmsub.s f8, f13, f25, f14, rtz # perform operation
fmsub.s f8, f13, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f25, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xb98a42bd # load x3 with value 0xb98a42bd
sw x3, 0(x2) # store 0xb98a42bd in memory
flw f12, 0(x2) # load 0xb98a42bd from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fmsub.s f28, f16, f12, f8, dyn # perform operation
fmsub.s f28, f16, f12, f8, rdn # perform operation
fmsub.s f28, f16, f12, f8, rmm # perform operation
fmsub.s f28, f16, f12, f8, rne # perform operation
fmsub.s f28, f16, f12, f8, rtz # perform operation
fmsub.s f28, f16, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x825bdba0 # load x3 with value 0x825bdba0
sw x3, 0(x2) # store 0x825bdba0 in memory
flw f30, 0(x2) # load 0x825bdba0 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmsub.s f8, f3, f30, f26, dyn # perform operation
fmsub.s f8, f3, f30, f26, rdn # perform operation
fmsub.s f8, f3, f30, f26, rmm # perform operation
fmsub.s f8, f3, f30, f26, rne # perform operation
fmsub.s f8, f3, f30, f26, rtz # perform operation
fmsub.s f8, f3, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x090bfc69 # load x3 with value 0x090bfc69
sw x3, 0(x2) # store 0x090bfc69 in memory
flw f10, 0(x2) # load 0x090bfc69 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f9, f6, f10, f20, dyn # perform operation
fmsub.s f9, f6, f10, f20, rdn # perform operation
fmsub.s f9, f6, f10, f20, rmm # perform operation
fmsub.s f9, f6, f10, f20, rne # perform operation
fmsub.s f9, f6, f10, f20, rtz # perform operation
fmsub.s f9, f6, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xb843366d # load x3 with value 0xb843366d
sw x3, 0(x2) # store 0xb843366d in memory
flw f20, 0(x2) # load 0xb843366d from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmsub.s f12, f15, f20, f10, dyn # perform operation
fmsub.s f12, f15, f20, f10, rdn # perform operation
fmsub.s f12, f15, f20, f10, rmm # perform operation
fmsub.s f12, f15, f20, f10, rne # perform operation
fmsub.s f12, f15, f20, f10, rtz # perform operation
fmsub.s f12, f15, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x320e5b60 # load x3 with value 0x320e5b60
sw x3, 0(x2) # store 0x320e5b60 in memory
flw f8, 0(x2) # load 0x320e5b60 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f18, f3, f8, f25, dyn # perform operation
fmsub.s f18, f3, f8, f25, rdn # perform operation
fmsub.s f18, f3, f8, f25, rmm # perform operation
fmsub.s f18, f3, f8, f25, rne # perform operation
fmsub.s f18, f3, f8, f25, rtz # perform operation
fmsub.s f18, f3, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x60e07328 # load x3 with value 0x60e07328
sw x3, 0(x2) # store 0x60e07328 in memory
flw f9, 0(x2) # load 0x60e07328 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmsub.s f11, f23, f9, f21, dyn # perform operation
fmsub.s f11, f23, f9, f21, rdn # perform operation
fmsub.s f11, f23, f9, f21, rmm # perform operation
fmsub.s f11, f23, f9, f21, rne # perform operation
fmsub.s f11, f23, f9, f21, rtz # perform operation
fmsub.s f11, f23, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x05d7941d # load x3 with value 0x05d7941d
sw x3, 0(x2) # store 0x05d7941d in memory
flw f10, 0(x2) # load 0x05d7941d from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f12, f19, f10, f29, dyn # perform operation
fmsub.s f12, f19, f10, f29, rdn # perform operation
fmsub.s f12, f19, f10, f29, rmm # perform operation
fmsub.s f12, f19, f10, f29, rne # perform operation
fmsub.s f12, f19, f10, f29, rtz # perform operation
fmsub.s f12, f19, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x80baa804 # load x3 with value 0x80baa804
sw x3, 0(x2) # store 0x80baa804 in memory
flw f8, 0(x2) # load 0x80baa804 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmsub.s f22, f15, f8, f18, dyn # perform operation
fmsub.s f22, f15, f8, f18, rdn # perform operation
fmsub.s f22, f15, f8, f18, rmm # perform operation
fmsub.s f22, f15, f8, f18, rne # perform operation
fmsub.s f22, f15, f8, f18, rtz # perform operation
fmsub.s f22, f15, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x142a6237 # load x3 with value 0x142a6237
sw x3, 0(x2) # store 0x142a6237 in memory
flw f16, 0(x2) # load 0x142a6237 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fmsub.s f21, f13, f16, f24, dyn # perform operation
fmsub.s f21, f13, f16, f24, rdn # perform operation
fmsub.s f21, f13, f16, f24, rmm # perform operation
fmsub.s f21, f13, f16, f24, rne # perform operation
fmsub.s f21, f13, f16, f24, rtz # perform operation
fmsub.s f21, f13, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x1744bf1c # load x3 with value 0x1744bf1c
sw x3, 0(x2) # store 0x1744bf1c in memory
flw f9, 0(x2) # load 0x1744bf1c from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmsub.s f19, f11, f9, f17, dyn # perform operation
fmsub.s f19, f11, f9, f17, rdn # perform operation
fmsub.s f19, f11, f9, f17, rmm # perform operation
fmsub.s f19, f11, f9, f17, rne # perform operation
fmsub.s f19, f11, f9, f17, rtz # perform operation
fmsub.s f19, f11, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f11, f9, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xf749f688 # load x3 with value 0xf749f688
sw x3, 0(x2) # store 0xf749f688 in memory
flw f8, 0(x2) # load 0xf749f688 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmsub.s f9, f21, f8, f17, dyn # perform operation
fmsub.s f9, f21, f8, f17, rdn # perform operation
fmsub.s f9, f21, f8, f17, rmm # perform operation
fmsub.s f9, f21, f8, f17, rne # perform operation
fmsub.s f9, f21, f8, f17, rtz # perform operation
fmsub.s f9, f21, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xc5fee2e1 # load x3 with value 0xc5fee2e1
sw x3, 0(x2) # store 0xc5fee2e1 in memory
flw f12, 0(x2) # load 0xc5fee2e1 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmsub.s f28, f23, f12, f15, dyn # perform operation
fmsub.s f28, f23, f12, f15, rdn # perform operation
fmsub.s f28, f23, f12, f15, rmm # perform operation
fmsub.s f28, f23, f12, f15, rne # perform operation
fmsub.s f28, f23, f12, f15, rtz # perform operation
fmsub.s f28, f23, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f23, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f23, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f23, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f23, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f23, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xa3e1cacd # load x3 with value 0xa3e1cacd
sw x3, 0(x2) # store 0xa3e1cacd in memory
flw f14, 0(x2) # load 0xa3e1cacd from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f23, f21, f14, f19, dyn # perform operation
fmsub.s f23, f21, f14, f19, rdn # perform operation
fmsub.s f23, f21, f14, f19, rmm # perform operation
fmsub.s f23, f21, f14, f19, rne # perform operation
fmsub.s f23, f21, f14, f19, rtz # perform operation
fmsub.s f23, f21, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xb6fee110 # load x3 with value 0xb6fee110
sw x3, 0(x2) # store 0xb6fee110 in memory
flw f20, 0(x2) # load 0xb6fee110 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fmsub.s f27, f31, f20, f19, dyn # perform operation
fmsub.s f27, f31, f20, f19, rdn # perform operation
fmsub.s f27, f31, f20, f19, rmm # perform operation
fmsub.s f27, f31, f20, f19, rne # perform operation
fmsub.s f27, f31, f20, f19, rtz # perform operation
fmsub.s f27, f31, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x4eb94f9c # load x3 with value 0x4eb94f9c
sw x3, 0(x2) # store 0x4eb94f9c in memory
flw f14, 0(x2) # load 0x4eb94f9c from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
fmsub.s f17, f9, f14, f3, dyn # perform operation
fmsub.s f17, f9, f14, f3, rdn # perform operation
fmsub.s f17, f9, f14, f3, rmm # perform operation
fmsub.s f17, f9, f14, f3, rne # perform operation
fmsub.s f17, f9, f14, f3, rtz # perform operation
fmsub.s f17, f9, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x9c3201c8 # load x3 with value 0x9c3201c8
sw x3, 0(x2) # store 0x9c3201c8 in memory
flw f27, 0(x2) # load 0x9c3201c8 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f3, f23, f27, f26, dyn # perform operation
fmsub.s f3, f23, f27, f26, rdn # perform operation
fmsub.s f3, f23, f27, f26, rmm # perform operation
fmsub.s f3, f23, f27, f26, rne # perform operation
fmsub.s f3, f23, f27, f26, rtz # perform operation
fmsub.s f3, f23, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xfb3008ad # load x3 with value 0xfb3008ad
sw x3, 0(x2) # store 0xfb3008ad in memory
flw f2, 0(x2) # load 0xfb3008ad from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmsub.s f27, f5, f2, f29, dyn # perform operation
fmsub.s f27, f5, f2, f29, rdn # perform operation
fmsub.s f27, f5, f2, f29, rmm # perform operation
fmsub.s f27, f5, f2, f29, rne # perform operation
fmsub.s f27, f5, f2, f29, rtz # perform operation
fmsub.s f27, f5, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x2f0a5b42 # load x3 with value 0x2f0a5b42
sw x3, 0(x2) # store 0x2f0a5b42 in memory
flw f12, 0(x2) # load 0x2f0a5b42 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmsub.s f25, f23, f12, f3, dyn # perform operation
fmsub.s f25, f23, f12, f3, rdn # perform operation
fmsub.s f25, f23, f12, f3, rmm # perform operation
fmsub.s f25, f23, f12, f3, rne # perform operation
fmsub.s f25, f23, f12, f3, rtz # perform operation
fmsub.s f25, f23, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xe8916e77 # load x3 with value 0xe8916e77
sw x3, 0(x2) # store 0xe8916e77 in memory
flw f12, 0(x2) # load 0xe8916e77 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f19, f20, f12, f28, dyn # perform operation
fmsub.s f19, f20, f12, f28, rdn # perform operation
fmsub.s f19, f20, f12, f28, rmm # perform operation
fmsub.s f19, f20, f12, f28, rne # perform operation
fmsub.s f19, f20, f12, f28, rtz # perform operation
fmsub.s f19, f20, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f20, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f20, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f20, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f20, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f20, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x1185753a # load x3 with value 0x1185753a
sw x3, 0(x2) # store 0x1185753a in memory
flw f17, 0(x2) # load 0x1185753a from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f29, f30, f17, f25, dyn # perform operation
fmsub.s f29, f30, f17, f25, rdn # perform operation
fmsub.s f29, f30, f17, f25, rmm # perform operation
fmsub.s f29, f30, f17, f25, rne # perform operation
fmsub.s f29, f30, f17, f25, rtz # perform operation
fmsub.s f29, f30, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x708359b6 # load x3 with value 0x708359b6
sw x3, 0(x2) # store 0x708359b6 in memory
flw f6, 0(x2) # load 0x708359b6 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmsub.s f30, f19, f6, f28, dyn # perform operation
fmsub.s f30, f19, f6, f28, rdn # perform operation
fmsub.s f30, f19, f6, f28, rmm # perform operation
fmsub.s f30, f19, f6, f28, rne # perform operation
fmsub.s f30, f19, f6, f28, rtz # perform operation
fmsub.s f30, f19, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x6fb7963d # load x3 with value 0x6fb7963d
sw x3, 0(x2) # store 0x6fb7963d in memory
flw f18, 0(x2) # load 0x6fb7963d from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmsub.s f11, f27, f18, f30, dyn # perform operation
fmsub.s f11, f27, f18, f30, rdn # perform operation
fmsub.s f11, f27, f18, f30, rmm # perform operation
fmsub.s f11, f27, f18, f30, rne # perform operation
fmsub.s f11, f27, f18, f30, rtz # perform operation
fmsub.s f11, f27, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xc9ccf17c # load x3 with value 0xc9ccf17c
sw x3, 0(x2) # store 0xc9ccf17c in memory
flw f2, 0(x2) # load 0xc9ccf17c from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f22, f9, f2, f23, dyn # perform operation
fmsub.s f22, f9, f2, f23, rdn # perform operation
fmsub.s f22, f9, f2, f23, rmm # perform operation
fmsub.s f22, f9, f2, f23, rne # perform operation
fmsub.s f22, f9, f2, f23, rtz # perform operation
fmsub.s f22, f9, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xce78df5e # load x3 with value 0xce78df5e
sw x3, 0(x2) # store 0xce78df5e in memory
flw f27, 0(x2) # load 0xce78df5e from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f2, f3, f27, f16, dyn # perform operation
fmsub.s f2, f3, f27, f16, rdn # perform operation
fmsub.s f2, f3, f27, f16, rmm # perform operation
fmsub.s f2, f3, f27, f16, rne # perform operation
fmsub.s f2, f3, f27, f16, rtz # perform operation
fmsub.s f2, f3, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xaa81769f # load x3 with value 0xaa81769f
sw x3, 0(x2) # store 0xaa81769f in memory
flw f1, 0(x2) # load 0xaa81769f from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmsub.s f18, f22, f1, f20, dyn # perform operation
fmsub.s f18, f22, f1, f20, rdn # perform operation
fmsub.s f18, f22, f1, f20, rmm # perform operation
fmsub.s f18, f22, f1, f20, rne # perform operation
fmsub.s f18, f22, f1, f20, rtz # perform operation
fmsub.s f18, f22, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f22, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f22, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f22, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f22, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f22, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x0bf6b53f # load x3 with value 0x0bf6b53f
sw x3, 0(x2) # store 0x0bf6b53f in memory
flw f22, 0(x2) # load 0x0bf6b53f from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f19, f21, f22, f31, dyn # perform operation
fmsub.s f19, f21, f22, f31, rdn # perform operation
fmsub.s f19, f21, f22, f31, rmm # perform operation
fmsub.s f19, f21, f22, f31, rne # perform operation
fmsub.s f19, f21, f22, f31, rtz # perform operation
fmsub.s f19, f21, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x66a2ee11 # load x3 with value 0x66a2ee11
sw x3, 0(x2) # store 0x66a2ee11 in memory
flw f7, 0(x2) # load 0x66a2ee11 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmsub.s f5, f31, f7, f8, dyn # perform operation
fmsub.s f5, f31, f7, f8, rdn # perform operation
fmsub.s f5, f31, f7, f8, rmm # perform operation
fmsub.s f5, f31, f7, f8, rne # perform operation
fmsub.s f5, f31, f7, f8, rtz # perform operation
fmsub.s f5, f31, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xebb82499 # load x3 with value 0xebb82499
sw x3, 0(x2) # store 0xebb82499 in memory
flw f16, 0(x2) # load 0xebb82499 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmsub.s f7, f13, f16, f1, dyn # perform operation
fmsub.s f7, f13, f16, f1, rdn # perform operation
fmsub.s f7, f13, f16, f1, rmm # perform operation
fmsub.s f7, f13, f16, f1, rne # perform operation
fmsub.s f7, f13, f16, f1, rtz # perform operation
fmsub.s f7, f13, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0xfa079b31 # load x3 with value 0xfa079b31
sw x3, 0(x2) # store 0xfa079b31 in memory
flw f29, 0(x2) # load 0xfa079b31 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmsub.s f26, f10, f29, f22, dyn # perform operation
fmsub.s f26, f10, f29, f22, rdn # perform operation
fmsub.s f26, f10, f29, f22, rmm # perform operation
fmsub.s f26, f10, f29, f22, rne # perform operation
fmsub.s f26, f10, f29, f22, rtz # perform operation
fmsub.s f26, f10, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xfa5e3f7a # load x3 with value 0xfa5e3f7a
sw x3, 0(x2) # store 0xfa5e3f7a in memory
flw f8, 0(x2) # load 0xfa5e3f7a from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f20, f7, f8, f14, dyn # perform operation
fmsub.s f20, f7, f8, f14, rdn # perform operation
fmsub.s f20, f7, f8, f14, rmm # perform operation
fmsub.s f20, f7, f8, f14, rne # perform operation
fmsub.s f20, f7, f8, f14, rtz # perform operation
fmsub.s f20, f7, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xfdfd7e71 # load x3 with value 0xfdfd7e71
sw x3, 0(x2) # store 0xfdfd7e71 in memory
flw f19, 0(x2) # load 0xfdfd7e71 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f12, f28, f19, f26, dyn # perform operation
fmsub.s f12, f28, f19, f26, rdn # perform operation
fmsub.s f12, f28, f19, f26, rmm # perform operation
fmsub.s f12, f28, f19, f26, rne # perform operation
fmsub.s f12, f28, f19, f26, rtz # perform operation
fmsub.s f12, f28, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x24f071a2 # load x3 with value 0x24f071a2
sw x3, 0(x2) # store 0x24f071a2 in memory
flw f1, 0(x2) # load 0x24f071a2 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmsub.s f21, f26, f1, f11, dyn # perform operation
fmsub.s f21, f26, f1, f11, rdn # perform operation
fmsub.s f21, f26, f1, f11, rmm # perform operation
fmsub.s f21, f26, f1, f11, rne # perform operation
fmsub.s f21, f26, f1, f11, rtz # perform operation
fmsub.s f21, f26, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x5ded6168 # load x3 with value 0x5ded6168
sw x3, 0(x2) # store 0x5ded6168 in memory
flw f13, 0(x2) # load 0x5ded6168 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fmsub.s f8, f14, f13, f9, dyn # perform operation
fmsub.s f8, f14, f13, f9, rdn # perform operation
fmsub.s f8, f14, f13, f9, rmm # perform operation
fmsub.s f8, f14, f13, f9, rne # perform operation
fmsub.s f8, f14, f13, f9, rtz # perform operation
fmsub.s f8, f14, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x82e9325f # load x3 with value 0x82e9325f
sw x3, 0(x2) # store 0x82e9325f in memory
flw f27, 0(x2) # load 0x82e9325f from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fmsub.s f14, f10, f27, f16, dyn # perform operation
fmsub.s f14, f10, f27, f16, rdn # perform operation
fmsub.s f14, f10, f27, f16, rmm # perform operation
fmsub.s f14, f10, f27, f16, rne # perform operation
fmsub.s f14, f10, f27, f16, rtz # perform operation
fmsub.s f14, f10, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f10, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xd961d7ad # load x3 with value 0xd961d7ad
sw x3, 0(x2) # store 0xd961d7ad in memory
flw f19, 0(x2) # load 0xd961d7ad from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmsub.s f8, f12, f19, f26, dyn # perform operation
fmsub.s f8, f12, f19, f26, rdn # perform operation
fmsub.s f8, f12, f19, f26, rmm # perform operation
fmsub.s f8, f12, f19, f26, rne # perform operation
fmsub.s f8, f12, f19, f26, rtz # perform operation
fmsub.s f8, f12, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x29417760 # load x3 with value 0x29417760
sw x3, 0(x2) # store 0x29417760 in memory
flw f26, 0(x2) # load 0x29417760 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f11, f15, f26, f21, dyn # perform operation
fmsub.s f11, f15, f26, f21, rdn # perform operation
fmsub.s f11, f15, f26, f21, rmm # perform operation
fmsub.s f11, f15, f26, f21, rne # perform operation
fmsub.s f11, f15, f26, f21, rtz # perform operation
fmsub.s f11, f15, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x03756b64 # load x3 with value 0x03756b64
sw x3, 0(x2) # store 0x03756b64 in memory
flw f2, 0(x2) # load 0x03756b64 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmsub.s f23, f22, f2, f18, dyn # perform operation
fmsub.s f23, f22, f2, f18, rdn # perform operation
fmsub.s f23, f22, f2, f18, rmm # perform operation
fmsub.s f23, f22, f2, f18, rne # perform operation
fmsub.s f23, f22, f2, f18, rtz # perform operation
fmsub.s f23, f22, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x342cf629 # load x3 with value 0x342cf629
sw x3, 0(x2) # store 0x342cf629 in memory
flw f3, 0(x2) # load 0x342cf629 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmsub.s f18, f6, f3, f26, dyn # perform operation
fmsub.s f18, f6, f3, f26, rdn # perform operation
fmsub.s f18, f6, f3, f26, rmm # perform operation
fmsub.s f18, f6, f3, f26, rne # perform operation
fmsub.s f18, f6, f3, f26, rtz # perform operation
fmsub.s f18, f6, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x55790c58 # load x3 with value 0x55790c58
sw x3, 0(x2) # store 0x55790c58 in memory
flw f1, 0(x2) # load 0x55790c58 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmsub.s f13, f2, f1, f25, dyn # perform operation
fmsub.s f13, f2, f1, f25, rdn # perform operation
fmsub.s f13, f2, f1, f25, rmm # perform operation
fmsub.s f13, f2, f1, f25, rne # perform operation
fmsub.s f13, f2, f1, f25, rtz # perform operation
fmsub.s f13, f2, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xfc61edea # load x3 with value 0xfc61edea
sw x3, 0(x2) # store 0xfc61edea in memory
flw f23, 0(x2) # load 0xfc61edea from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmsub.s f31, f5, f23, f27, dyn # perform operation
fmsub.s f31, f5, f23, f27, rdn # perform operation
fmsub.s f31, f5, f23, f27, rmm # perform operation
fmsub.s f31, f5, f23, f27, rne # perform operation
fmsub.s f31, f5, f23, f27, rtz # perform operation
fmsub.s f31, f5, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xe97ea541 # load x3 with value 0xe97ea541
sw x3, 0(x2) # store 0xe97ea541 in memory
flw f21, 0(x2) # load 0xe97ea541 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f19, f18, f21, f25, dyn # perform operation
fmsub.s f19, f18, f21, f25, rdn # perform operation
fmsub.s f19, f18, f21, f25, rmm # perform operation
fmsub.s f19, f18, f21, f25, rne # perform operation
fmsub.s f19, f18, f21, f25, rtz # perform operation
fmsub.s f19, f18, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x05428f86 # load x3 with value 0x05428f86
sw x3, 0(x2) # store 0x05428f86 in memory
flw f28, 0(x2) # load 0x05428f86 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f31, f27, f28, f2, dyn # perform operation
fmsub.s f31, f27, f28, f2, rdn # perform operation
fmsub.s f31, f27, f28, f2, rmm # perform operation
fmsub.s f31, f27, f28, f2, rne # perform operation
fmsub.s f31, f27, f28, f2, rtz # perform operation
fmsub.s f31, f27, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f27, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x831924b4 # load x3 with value 0x831924b4
sw x3, 0(x2) # store 0x831924b4 in memory
flw f19, 0(x2) # load 0x831924b4 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmsub.s f5, f29, f19, f10, dyn # perform operation
fmsub.s f5, f29, f19, f10, rdn # perform operation
fmsub.s f5, f29, f19, f10, rmm # perform operation
fmsub.s f5, f29, f19, f10, rne # perform operation
fmsub.s f5, f29, f19, f10, rtz # perform operation
fmsub.s f5, f29, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xdb346edf # load x3 with value 0xdb346edf
sw x3, 0(x2) # store 0xdb346edf in memory
flw f27, 0(x2) # load 0xdb346edf from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmsub.s f28, f31, f27, f9, dyn # perform operation
fmsub.s f28, f31, f27, f9, rdn # perform operation
fmsub.s f28, f31, f27, f9, rmm # perform operation
fmsub.s f28, f31, f27, f9, rne # perform operation
fmsub.s f28, f31, f27, f9, rtz # perform operation
fmsub.s f28, f31, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f31, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x275a6dd4 # load x3 with value 0x275a6dd4
sw x3, 0(x2) # store 0x275a6dd4 in memory
flw f9, 0(x2) # load 0x275a6dd4 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmsub.s f13, f26, f9, f8, dyn # perform operation
fmsub.s f13, f26, f9, f8, rdn # perform operation
fmsub.s f13, f26, f9, f8, rmm # perform operation
fmsub.s f13, f26, f9, f8, rne # perform operation
fmsub.s f13, f26, f9, f8, rtz # perform operation
fmsub.s f13, f26, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f26, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x838dba92 # load x3 with value 0x838dba92
sw x3, 0(x2) # store 0x838dba92 in memory
flw f27, 0(x2) # load 0x838dba92 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fmsub.s f1, f8, f27, f13, dyn # perform operation
fmsub.s f1, f8, f27, f13, rdn # perform operation
fmsub.s f1, f8, f27, f13, rmm # perform operation
fmsub.s f1, f8, f27, f13, rne # perform operation
fmsub.s f1, f8, f27, f13, rtz # perform operation
fmsub.s f1, f8, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f8, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x1fccdc41 # load x3 with value 0x1fccdc41
sw x3, 0(x2) # store 0x1fccdc41 in memory
flw f19, 0(x2) # load 0x1fccdc41 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmsub.s f24, f20, f19, f7, dyn # perform operation
fmsub.s f24, f20, f19, f7, rdn # perform operation
fmsub.s f24, f20, f19, f7, rmm # perform operation
fmsub.s f24, f20, f19, f7, rne # perform operation
fmsub.s f24, f20, f19, f7, rtz # perform operation
fmsub.s f24, f20, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xba198019 # load x3 with value 0xba198019
sw x3, 0(x2) # store 0xba198019 in memory
flw f17, 0(x2) # load 0xba198019 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fmsub.s f29, f30, f17, f8, dyn # perform operation
fmsub.s f29, f30, f17, f8, rdn # perform operation
fmsub.s f29, f30, f17, f8, rmm # perform operation
fmsub.s f29, f30, f17, f8, rne # perform operation
fmsub.s f29, f30, f17, f8, rtz # perform operation
fmsub.s f29, f30, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xbc06e7c6 # load x3 with value 0xbc06e7c6
sw x3, 0(x2) # store 0xbc06e7c6 in memory
flw f25, 0(x2) # load 0xbc06e7c6 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f5, f2, f25, f20, dyn # perform operation
fmsub.s f5, f2, f25, f20, rdn # perform operation
fmsub.s f5, f2, f25, f20, rmm # perform operation
fmsub.s f5, f2, f25, f20, rne # perform operation
fmsub.s f5, f2, f25, f20, rtz # perform operation
fmsub.s f5, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f2, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x9ad86171 # load x3 with value 0x9ad86171
sw x3, 0(x2) # store 0x9ad86171 in memory
flw f24, 0(x2) # load 0x9ad86171 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmsub.s f23, f16, f24, f22, dyn # perform operation
fmsub.s f23, f16, f24, f22, rdn # perform operation
fmsub.s f23, f16, f24, f22, rmm # perform operation
fmsub.s f23, f16, f24, f22, rne # perform operation
fmsub.s f23, f16, f24, f22, rtz # perform operation
fmsub.s f23, f16, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f16, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f16, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f16, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f16, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f16, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0xb5c5214a # load x3 with value 0xb5c5214a
sw x3, 0(x2) # store 0xb5c5214a in memory
flw f13, 0(x2) # load 0xb5c5214a from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f8, f10, f13, f14, dyn # perform operation
fmsub.s f8, f10, f13, f14, rdn # perform operation
fmsub.s f8, f10, f13, f14, rmm # perform operation
fmsub.s f8, f10, f13, f14, rne # perform operation
fmsub.s f8, f10, f13, f14, rtz # perform operation
fmsub.s f8, f10, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x32fd7c74 # load x3 with value 0x32fd7c74
sw x3, 0(x2) # store 0x32fd7c74 in memory
flw f28, 0(x2) # load 0x32fd7c74 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fmsub.s f5, f16, f28, f21, dyn # perform operation
fmsub.s f5, f16, f28, f21, rdn # perform operation
fmsub.s f5, f16, f28, f21, rmm # perform operation
fmsub.s f5, f16, f28, f21, rne # perform operation
fmsub.s f5, f16, f28, f21, rtz # perform operation
fmsub.s f5, f16, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x9068f3b3 # load x3 with value 0x9068f3b3
sw x3, 0(x2) # store 0x9068f3b3 in memory
flw f14, 0(x2) # load 0x9068f3b3 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmsub.s f15, f23, f14, f3, dyn # perform operation
fmsub.s f15, f23, f14, f3, rdn # perform operation
fmsub.s f15, f23, f14, f3, rmm # perform operation
fmsub.s f15, f23, f14, f3, rne # perform operation
fmsub.s f15, f23, f14, f3, rtz # perform operation
fmsub.s f15, f23, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x2e4c5a52 # load x3 with value 0x2e4c5a52
sw x3, 0(x2) # store 0x2e4c5a52 in memory
flw f24, 0(x2) # load 0x2e4c5a52 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmsub.s f22, f11, f24, f26, dyn # perform operation
fmsub.s f22, f11, f24, f26, rdn # perform operation
fmsub.s f22, f11, f24, f26, rmm # perform operation
fmsub.s f22, f11, f24, f26, rne # perform operation
fmsub.s f22, f11, f24, f26, rtz # perform operation
fmsub.s f22, f11, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x0bec4b7c # load x3 with value 0x0bec4b7c
sw x3, 0(x2) # store 0x0bec4b7c in memory
flw f12, 0(x2) # load 0x0bec4b7c from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f25, f15, f12, f30, dyn # perform operation
fmsub.s f25, f15, f12, f30, rdn # perform operation
fmsub.s f25, f15, f12, f30, rmm # perform operation
fmsub.s f25, f15, f12, f30, rne # perform operation
fmsub.s f25, f15, f12, f30, rtz # perform operation
fmsub.s f25, f15, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f15, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xb479f140 # load x3 with value 0xb479f140
sw x3, 0(x2) # store 0xb479f140 in memory
flw f17, 0(x2) # load 0xb479f140 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmsub.s f29, f9, f17, f19, dyn # perform operation
fmsub.s f29, f9, f17, f19, rdn # perform operation
fmsub.s f29, f9, f17, f19, rmm # perform operation
fmsub.s f29, f9, f17, f19, rne # perform operation
fmsub.s f29, f9, f17, f19, rtz # perform operation
fmsub.s f29, f9, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x51dcef58 # load x3 with value 0x51dcef58
sw x3, 0(x2) # store 0x51dcef58 in memory
flw f18, 0(x2) # load 0x51dcef58 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f15, f31, f18, f29, dyn # perform operation
fmsub.s f15, f31, f18, f29, rdn # perform operation
fmsub.s f15, f31, f18, f29, rmm # perform operation
fmsub.s f15, f31, f18, f29, rne # perform operation
fmsub.s f15, f31, f18, f29, rtz # perform operation
fmsub.s f15, f31, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f18, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xf5ae7f02 # load x3 with value 0xf5ae7f02
sw x3, 0(x2) # store 0xf5ae7f02 in memory
flw f24, 0(x2) # load 0xf5ae7f02 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f17, f3, f24, f22, dyn # perform operation
fmsub.s f17, f3, f24, f22, rdn # perform operation
fmsub.s f17, f3, f24, f22, rmm # perform operation
fmsub.s f17, f3, f24, f22, rne # perform operation
fmsub.s f17, f3, f24, f22, rtz # perform operation
fmsub.s f17, f3, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xbfc24063 # load x3 with value 0xbfc24063
sw x3, 0(x2) # store 0xbfc24063 in memory
flw f1, 0(x2) # load 0xbfc24063 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmsub.s f6, f30, f1, f3, dyn # perform operation
fmsub.s f6, f30, f1, f3, rdn # perform operation
fmsub.s f6, f30, f1, f3, rmm # perform operation
fmsub.s f6, f30, f1, f3, rne # perform operation
fmsub.s f6, f30, f1, f3, rtz # perform operation
fmsub.s f6, f30, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xc01ffbb0 # load x3 with value 0xc01ffbb0
sw x3, 0(x2) # store 0xc01ffbb0 in memory
flw f19, 0(x2) # load 0xc01ffbb0 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmsub.s f31, f17, f19, f30, dyn # perform operation
fmsub.s f31, f17, f19, f30, rdn # perform operation
fmsub.s f31, f17, f19, f30, rmm # perform operation
fmsub.s f31, f17, f19, f30, rne # perform operation
fmsub.s f31, f17, f19, f30, rtz # perform operation
fmsub.s f31, f17, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f19, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xb2c9930c # load x3 with value 0xb2c9930c
sw x3, 0(x2) # store 0xb2c9930c in memory
flw f8, 0(x2) # load 0xb2c9930c from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmsub.s f27, f28, f8, f31, dyn # perform operation
fmsub.s f27, f28, f8, f31, rdn # perform operation
fmsub.s f27, f28, f8, f31, rmm # perform operation
fmsub.s f27, f28, f8, f31, rne # perform operation
fmsub.s f27, f28, f8, f31, rtz # perform operation
fmsub.s f27, f28, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x80e43ed3 # load x3 with value 0x80e43ed3
sw x3, 0(x2) # store 0x80e43ed3 in memory
flw f15, 0(x2) # load 0x80e43ed3 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f17, f18, f15, f8, dyn # perform operation
fmsub.s f17, f18, f15, f8, rdn # perform operation
fmsub.s f17, f18, f15, f8, rmm # perform operation
fmsub.s f17, f18, f15, f8, rne # perform operation
fmsub.s f17, f18, f15, f8, rtz # perform operation
fmsub.s f17, f18, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f18, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xb127fa50 # load x3 with value 0xb127fa50
sw x3, 0(x2) # store 0xb127fa50 in memory
flw f2, 0(x2) # load 0xb127fa50 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmsub.s f1, f17, f2, f16, dyn # perform operation
fmsub.s f1, f17, f2, f16, rdn # perform operation
fmsub.s f1, f17, f2, f16, rmm # perform operation
fmsub.s f1, f17, f2, f16, rne # perform operation
fmsub.s f1, f17, f2, f16, rtz # perform operation
fmsub.s f1, f17, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xe547d2ba # load x3 with value 0xe547d2ba
sw x3, 0(x2) # store 0xe547d2ba in memory
flw f26, 0(x2) # load 0xe547d2ba from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f19, f7, f26, f27, dyn # perform operation
fmsub.s f19, f7, f26, f27, rdn # perform operation
fmsub.s f19, f7, f26, f27, rmm # perform operation
fmsub.s f19, f7, f26, f27, rne # perform operation
fmsub.s f19, f7, f26, f27, rtz # perform operation
fmsub.s f19, f7, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xc3326ea9 # load x3 with value 0xc3326ea9
sw x3, 0(x2) # store 0xc3326ea9 in memory
flw f17, 0(x2) # load 0xc3326ea9 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f28, f2, f17, f10, dyn # perform operation
fmsub.s f28, f2, f17, f10, rdn # perform operation
fmsub.s f28, f2, f17, f10, rmm # perform operation
fmsub.s f28, f2, f17, f10, rne # perform operation
fmsub.s f28, f2, f17, f10, rtz # perform operation
fmsub.s f28, f2, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xe7f4a63d # load x3 with value 0xe7f4a63d
sw x3, 0(x2) # store 0xe7f4a63d in memory
flw f21, 0(x2) # load 0xe7f4a63d from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f22, f20, f21, f28, dyn # perform operation
fmsub.s f22, f20, f21, f28, rdn # perform operation
fmsub.s f22, f20, f21, f28, rmm # perform operation
fmsub.s f22, f20, f21, f28, rne # perform operation
fmsub.s f22, f20, f21, f28, rtz # perform operation
fmsub.s f22, f20, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0xe9f8800f # load x3 with value 0xe9f8800f
sw x3, 0(x2) # store 0xe9f8800f in memory
flw f19, 0(x2) # load 0xe9f8800f from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmsub.s f9, f10, f19, f30, dyn # perform operation
fmsub.s f9, f10, f19, f30, rdn # perform operation
fmsub.s f9, f10, f19, f30, rmm # perform operation
fmsub.s f9, f10, f19, f30, rne # perform operation
fmsub.s f9, f10, f19, f30, rtz # perform operation
fmsub.s f9, f10, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f19, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x5d768e0d # load x3 with value 0x5d768e0d
sw x3, 0(x2) # store 0x5d768e0d in memory
flw f16, 0(x2) # load 0x5d768e0d from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmsub.s f5, f28, f16, f18, dyn # perform operation
fmsub.s f5, f28, f16, f18, rdn # perform operation
fmsub.s f5, f28, f16, f18, rmm # perform operation
fmsub.s f5, f28, f16, f18, rne # perform operation
fmsub.s f5, f28, f16, f18, rtz # perform operation
fmsub.s f5, f28, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x75f4a415 # load x3 with value 0x75f4a415
sw x3, 0(x2) # store 0x75f4a415 in memory
flw f23, 0(x2) # load 0x75f4a415 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmsub.s f5, f17, f23, f10, dyn # perform operation
fmsub.s f5, f17, f23, f10, rdn # perform operation
fmsub.s f5, f17, f23, f10, rmm # perform operation
fmsub.s f5, f17, f23, f10, rne # perform operation
fmsub.s f5, f17, f23, f10, rtz # perform operation
fmsub.s f5, f17, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x0d37d62b # load x3 with value 0x0d37d62b
sw x3, 0(x2) # store 0x0d37d62b in memory
flw f15, 0(x2) # load 0x0d37d62b from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmsub.s f29, f7, f15, f9, dyn # perform operation
fmsub.s f29, f7, f15, f9, rdn # perform operation
fmsub.s f29, f7, f15, f9, rmm # perform operation
fmsub.s f29, f7, f15, f9, rne # perform operation
fmsub.s f29, f7, f15, f9, rtz # perform operation
fmsub.s f29, f7, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f7, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x668ba2e3 # load x3 with value 0x668ba2e3
sw x3, 0(x2) # store 0x668ba2e3 in memory
flw f14, 0(x2) # load 0x668ba2e3 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmsub.s f6, f8, f14, f10, dyn # perform operation
fmsub.s f6, f8, f14, f10, rdn # perform operation
fmsub.s f6, f8, f14, f10, rmm # perform operation
fmsub.s f6, f8, f14, f10, rne # perform operation
fmsub.s f6, f8, f14, f10, rtz # perform operation
fmsub.s f6, f8, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f14, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xb10c85bf # load x3 with value 0xb10c85bf
sw x3, 0(x2) # store 0xb10c85bf in memory
flw f10, 0(x2) # load 0xb10c85bf from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmsub.s f26, f28, f10, f17, dyn # perform operation
fmsub.s f26, f28, f10, f17, rdn # perform operation
fmsub.s f26, f28, f10, f17, rmm # perform operation
fmsub.s f26, f28, f10, f17, rne # perform operation
fmsub.s f26, f28, f10, f17, rtz # perform operation
fmsub.s f26, f28, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f28, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f28, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f28, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f28, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f28, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x600a347c # load x3 with value 0x600a347c
sw x3, 0(x2) # store 0x600a347c in memory
flw f20, 0(x2) # load 0x600a347c from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmsub.s f3, f5, f20, f25, dyn # perform operation
fmsub.s f3, f5, f20, f25, rdn # perform operation
fmsub.s f3, f5, f20, f25, rmm # perform operation
fmsub.s f3, f5, f20, f25, rne # perform operation
fmsub.s f3, f5, f20, f25, rtz # perform operation
fmsub.s f3, f5, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f5, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0xa8311f0a # load x3 with value 0xa8311f0a
sw x3, 0(x2) # store 0xa8311f0a in memory
flw f29, 0(x2) # load 0xa8311f0a from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fmsub.s f25, f1, f29, f15, dyn # perform operation
fmsub.s f25, f1, f29, f15, rdn # perform operation
fmsub.s f25, f1, f29, f15, rmm # perform operation
fmsub.s f25, f1, f29, f15, rne # perform operation
fmsub.s f25, f1, f29, f15, rtz # perform operation
fmsub.s f25, f1, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x083743a6 # load x3 with value 0x083743a6
sw x3, 0(x2) # store 0x083743a6 in memory
flw f22, 0(x2) # load 0x083743a6 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmsub.s f3, f24, f22, f29, dyn # perform operation
fmsub.s f3, f24, f22, f29, rdn # perform operation
fmsub.s f3, f24, f22, f29, rmm # perform operation
fmsub.s f3, f24, f22, f29, rne # perform operation
fmsub.s f3, f24, f22, f29, rtz # perform operation
fmsub.s f3, f24, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x3d37ce38 # load x3 with value 0x3d37ce38
sw x3, 0(x2) # store 0x3d37ce38 in memory
flw f8, 0(x2) # load 0x3d37ce38 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmsub.s f29, f6, f8, f23, dyn # perform operation
fmsub.s f29, f6, f8, f23, rdn # perform operation
fmsub.s f29, f6, f8, f23, rmm # perform operation
fmsub.s f29, f6, f8, f23, rne # perform operation
fmsub.s f29, f6, f8, f23, rtz # perform operation
fmsub.s f29, f6, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f6, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x829efafc # load x3 with value 0x829efafc
sw x3, 0(x2) # store 0x829efafc in memory
flw f13, 0(x2) # load 0x829efafc from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmsub.s f3, f28, f13, f30, dyn # perform operation
fmsub.s f3, f28, f13, f30, rdn # perform operation
fmsub.s f3, f28, f13, f30, rmm # perform operation
fmsub.s f3, f28, f13, f30, rne # perform operation
fmsub.s f3, f28, f13, f30, rtz # perform operation
fmsub.s f3, f28, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x8fc78578 # load x3 with value 0x8fc78578
sw x3, 0(x2) # store 0x8fc78578 in memory
flw f20, 0(x2) # load 0x8fc78578 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmsub.s f26, f16, f20, f3, dyn # perform operation
fmsub.s f26, f16, f20, f3, rdn # perform operation
fmsub.s f26, f16, f20, f3, rmm # perform operation
fmsub.s f26, f16, f20, f3, rne # perform operation
fmsub.s f26, f16, f20, f3, rtz # perform operation
fmsub.s f26, f16, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f16, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xe33442f4 # load x3 with value 0xe33442f4
sw x3, 0(x2) # store 0xe33442f4 in memory
flw f30, 0(x2) # load 0xe33442f4 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fmsub.s f12, f25, f30, f21, dyn # perform operation
fmsub.s f12, f25, f30, f21, rdn # perform operation
fmsub.s f12, f25, f30, f21, rmm # perform operation
fmsub.s f12, f25, f30, f21, rne # perform operation
fmsub.s f12, f25, f30, f21, rtz # perform operation
fmsub.s f12, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f25, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x5c0e0643 # load x3 with value 0x5c0e0643
sw x3, 0(x2) # store 0x5c0e0643 in memory
flw f15, 0(x2) # load 0x5c0e0643 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmsub.s f26, f7, f15, f1, dyn # perform operation
fmsub.s f26, f7, f15, f1, rdn # perform operation
fmsub.s f26, f7, f15, f1, rmm # perform operation
fmsub.s f26, f7, f15, f1, rne # perform operation
fmsub.s f26, f7, f15, f1, rtz # perform operation
fmsub.s f26, f7, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f7, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f7, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f7, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f7, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f7, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xae09248a # load x3 with value 0xae09248a
sw x3, 0(x2) # store 0xae09248a in memory
flw f12, 0(x2) # load 0xae09248a from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmsub.s f14, f3, f12, f2, dyn # perform operation
fmsub.s f14, f3, f12, f2, rdn # perform operation
fmsub.s f14, f3, f12, f2, rmm # perform operation
fmsub.s f14, f3, f12, f2, rne # perform operation
fmsub.s f14, f3, f12, f2, rtz # perform operation
fmsub.s f14, f3, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x56413509 # load x3 with value 0x56413509
sw x3, 0(x2) # store 0x56413509 in memory
flw f7, 0(x2) # load 0x56413509 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fmsub.s f5, f17, f7, f27, dyn # perform operation
fmsub.s f5, f17, f7, f27, rdn # perform operation
fmsub.s f5, f17, f7, f27, rmm # perform operation
fmsub.s f5, f17, f7, f27, rne # perform operation
fmsub.s f5, f17, f7, f27, rtz # perform operation
fmsub.s f5, f17, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xb4172f34 # load x3 with value 0xb4172f34
sw x3, 0(x2) # store 0xb4172f34 in memory
flw f23, 0(x2) # load 0xb4172f34 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmsub.s f16, f8, f23, f20, dyn # perform operation
fmsub.s f16, f8, f23, f20, rdn # perform operation
fmsub.s f16, f8, f23, f20, rmm # perform operation
fmsub.s f16, f8, f23, f20, rne # perform operation
fmsub.s f16, f8, f23, f20, rtz # perform operation
fmsub.s f16, f8, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x1a07ac7c # load x3 with value 0x1a07ac7c
sw x3, 0(x2) # store 0x1a07ac7c in memory
flw f17, 0(x2) # load 0x1a07ac7c from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fmsub.s f22, f20, f17, f11, dyn # perform operation
fmsub.s f22, f20, f17, f11, rdn # perform operation
fmsub.s f22, f20, f17, f11, rmm # perform operation
fmsub.s f22, f20, f17, f11, rne # perform operation
fmsub.s f22, f20, f17, f11, rtz # perform operation
fmsub.s f22, f20, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x27feac2a # load x3 with value 0x27feac2a
sw x3, 0(x2) # store 0x27feac2a in memory
flw f7, 0(x2) # load 0x27feac2a from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fmsub.s f3, f15, f7, f14, dyn # perform operation
fmsub.s f3, f15, f7, f14, rdn # perform operation
fmsub.s f3, f15, f7, f14, rmm # perform operation
fmsub.s f3, f15, f7, f14, rne # perform operation
fmsub.s f3, f15, f7, f14, rtz # perform operation
fmsub.s f3, f15, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x5a1fed99 # load x3 with value 0x5a1fed99
sw x3, 0(x2) # store 0x5a1fed99 in memory
flw f10, 0(x2) # load 0x5a1fed99 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fmsub.s f22, f26, f10, f31, dyn # perform operation
fmsub.s f22, f26, f10, f31, rdn # perform operation
fmsub.s f22, f26, f10, f31, rmm # perform operation
fmsub.s f22, f26, f10, f31, rne # perform operation
fmsub.s f22, f26, f10, f31, rtz # perform operation
fmsub.s f22, f26, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x1320e307 # load x3 with value 0x1320e307
sw x3, 0(x2) # store 0x1320e307 in memory
flw f17, 0(x2) # load 0x1320e307 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f3, f9, f17, f20, dyn # perform operation
fmsub.s f3, f9, f17, f20, rdn # perform operation
fmsub.s f3, f9, f17, f20, rmm # perform operation
fmsub.s f3, f9, f17, f20, rne # perform operation
fmsub.s f3, f9, f17, f20, rtz # perform operation
fmsub.s f3, f9, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f17, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xf5495212 # load x3 with value 0xf5495212
sw x3, 0(x2) # store 0xf5495212 in memory
flw f7, 0(x2) # load 0xf5495212 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmsub.s f22, f3, f7, f20, dyn # perform operation
fmsub.s f22, f3, f7, f20, rdn # perform operation
fmsub.s f22, f3, f7, f20, rmm # perform operation
fmsub.s f22, f3, f7, f20, rne # perform operation
fmsub.s f22, f3, f7, f20, rtz # perform operation
fmsub.s f22, f3, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x770236d0 # load x3 with value 0x770236d0
sw x3, 0(x2) # store 0x770236d0 in memory
flw f19, 0(x2) # load 0x770236d0 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmsub.s f10, f12, f19, f7, dyn # perform operation
fmsub.s f10, f12, f19, f7, rdn # perform operation
fmsub.s f10, f12, f19, f7, rmm # perform operation
fmsub.s f10, f12, f19, f7, rne # perform operation
fmsub.s f10, f12, f19, f7, rtz # perform operation
fmsub.s f10, f12, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x48d4bf0e # load x3 with value 0x48d4bf0e
sw x3, 0(x2) # store 0x48d4bf0e in memory
flw f23, 0(x2) # load 0x48d4bf0e from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmsub.s f13, f12, f23, f1, dyn # perform operation
fmsub.s f13, f12, f23, f1, rdn # perform operation
fmsub.s f13, f12, f23, f1, rmm # perform operation
fmsub.s f13, f12, f23, f1, rne # perform operation
fmsub.s f13, f12, f23, f1, rtz # perform operation
fmsub.s f13, f12, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xb605c622 # load x3 with value 0xb605c622
sw x3, 0(x2) # store 0xb605c622 in memory
flw f21, 0(x2) # load 0xb605c622 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f5, f14, f21, f25, dyn # perform operation
fmsub.s f5, f14, f21, f25, rdn # perform operation
fmsub.s f5, f14, f21, f25, rmm # perform operation
fmsub.s f5, f14, f21, f25, rne # perform operation
fmsub.s f5, f14, f21, f25, rtz # perform operation
fmsub.s f5, f14, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x2544b4b9 # load x3 with value 0x2544b4b9
sw x3, 0(x2) # store 0x2544b4b9 in memory
flw f1, 0(x2) # load 0x2544b4b9 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f6, f2, f1, f27, dyn # perform operation
fmsub.s f6, f2, f1, f27, rdn # perform operation
fmsub.s f6, f2, f1, f27, rmm # perform operation
fmsub.s f6, f2, f1, f27, rne # perform operation
fmsub.s f6, f2, f1, f27, rtz # perform operation
fmsub.s f6, f2, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f2, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f2, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f2, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f2, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f2, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x3ee55821 # load x3 with value 0x3ee55821
sw x3, 0(x2) # store 0x3ee55821 in memory
flw f2, 0(x2) # load 0x3ee55821 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f15, f19, f2, f26, dyn # perform operation
fmsub.s f15, f19, f2, f26, rdn # perform operation
fmsub.s f15, f19, f2, f26, rmm # perform operation
fmsub.s f15, f19, f2, f26, rne # perform operation
fmsub.s f15, f19, f2, f26, rtz # perform operation
fmsub.s f15, f19, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f19, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x0dd184b7 # load x3 with value 0x0dd184b7
sw x3, 0(x2) # store 0x0dd184b7 in memory
flw f19, 0(x2) # load 0x0dd184b7 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f26, f31, f19, f11, dyn # perform operation
fmsub.s f26, f31, f19, f11, rdn # perform operation
fmsub.s f26, f31, f19, f11, rmm # perform operation
fmsub.s f26, f31, f19, f11, rne # perform operation
fmsub.s f26, f31, f19, f11, rtz # perform operation
fmsub.s f26, f31, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x299d7441 # load x3 with value 0x299d7441
sw x3, 0(x2) # store 0x299d7441 in memory
flw f8, 0(x2) # load 0x299d7441 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmsub.s f2, f6, f8, f23, dyn # perform operation
fmsub.s f2, f6, f8, f23, rdn # perform operation
fmsub.s f2, f6, f8, f23, rmm # perform operation
fmsub.s f2, f6, f8, f23, rne # perform operation
fmsub.s f2, f6, f8, f23, rtz # perform operation
fmsub.s f2, f6, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f6, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0xd3a72710 # load x3 with value 0xd3a72710
sw x3, 0(x2) # store 0xd3a72710 in memory
flw f23, 0(x2) # load 0xd3a72710 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmsub.s f28, f2, f23, f27, dyn # perform operation
fmsub.s f28, f2, f23, f27, rdn # perform operation
fmsub.s f28, f2, f23, f27, rmm # perform operation
fmsub.s f28, f2, f23, f27, rne # perform operation
fmsub.s f28, f2, f23, f27, rtz # perform operation
fmsub.s f28, f2, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xd9ec5e7d # load x3 with value 0xd9ec5e7d
sw x3, 0(x2) # store 0xd9ec5e7d in memory
flw f1, 0(x2) # load 0xd9ec5e7d from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f14, f30, f1, f22, dyn # perform operation
fmsub.s f14, f30, f1, f22, rdn # perform operation
fmsub.s f14, f30, f1, f22, rmm # perform operation
fmsub.s f14, f30, f1, f22, rne # perform operation
fmsub.s f14, f30, f1, f22, rtz # perform operation
fmsub.s f14, f30, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f30, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x06006647 # load x3 with value 0x06006647
sw x3, 0(x2) # store 0x06006647 in memory
flw f24, 0(x2) # load 0x06006647 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmsub.s f15, f20, f24, f14, dyn # perform operation
fmsub.s f15, f20, f24, f14, rdn # perform operation
fmsub.s f15, f20, f24, f14, rmm # perform operation
fmsub.s f15, f20, f24, f14, rne # perform operation
fmsub.s f15, f20, f24, f14, rtz # perform operation
fmsub.s f15, f20, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8d658d83 # load x3 with value 0x8d658d83
sw x3, 0(x2) # store 0x8d658d83 in memory
flw f29, 0(x2) # load 0x8d658d83 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fmsub.s f9, f19, f29, f13, dyn # perform operation
fmsub.s f9, f19, f29, f13, rdn # perform operation
fmsub.s f9, f19, f29, f13, rmm # perform operation
fmsub.s f9, f19, f29, f13, rne # perform operation
fmsub.s f9, f19, f29, f13, rtz # perform operation
fmsub.s f9, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xcd9869e5 # load x3 with value 0xcd9869e5
sw x3, 0(x2) # store 0xcd9869e5 in memory
flw f25, 0(x2) # load 0xcd9869e5 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmsub.s f26, f22, f25, f12, dyn # perform operation
fmsub.s f26, f22, f25, f12, rdn # perform operation
fmsub.s f26, f22, f25, f12, rmm # perform operation
fmsub.s f26, f22, f25, f12, rne # perform operation
fmsub.s f26, f22, f25, f12, rtz # perform operation
fmsub.s f26, f22, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xceb56741 # load x3 with value 0xceb56741
sw x3, 0(x2) # store 0xceb56741 in memory
flw f24, 0(x2) # load 0xceb56741 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmsub.s f30, f23, f24, f7, dyn # perform operation
fmsub.s f30, f23, f24, f7, rdn # perform operation
fmsub.s f30, f23, f24, f7, rmm # perform operation
fmsub.s f30, f23, f24, f7, rne # perform operation
fmsub.s f30, f23, f24, f7, rtz # perform operation
fmsub.s f30, f23, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f23, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x0b714d9a # load x3 with value 0x0b714d9a
sw x3, 0(x2) # store 0x0b714d9a in memory
flw f27, 0(x2) # load 0x0b714d9a from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmsub.s f17, f10, f27, f25, dyn # perform operation
fmsub.s f17, f10, f27, f25, rdn # perform operation
fmsub.s f17, f10, f27, f25, rmm # perform operation
fmsub.s f17, f10, f27, f25, rne # perform operation
fmsub.s f17, f10, f27, f25, rtz # perform operation
fmsub.s f17, f10, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f10, f27, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x724532e9 # load x3 with value 0x724532e9
sw x3, 0(x2) # store 0x724532e9 in memory
flw f28, 0(x2) # load 0x724532e9 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmsub.s f26, f12, f28, f2, dyn # perform operation
fmsub.s f26, f12, f28, f2, rdn # perform operation
fmsub.s f26, f12, f28, f2, rmm # perform operation
fmsub.s f26, f12, f28, f2, rne # perform operation
fmsub.s f26, f12, f28, f2, rtz # perform operation
fmsub.s f26, f12, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xea2a321b # load x3 with value 0xea2a321b
sw x3, 0(x2) # store 0xea2a321b in memory
flw f10, 0(x2) # load 0xea2a321b from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmsub.s f7, f30, f10, f28, dyn # perform operation
fmsub.s f7, f30, f10, f28, rdn # perform operation
fmsub.s f7, f30, f10, f28, rmm # perform operation
fmsub.s f7, f30, f10, f28, rne # perform operation
fmsub.s f7, f30, f10, f28, rtz # perform operation
fmsub.s f7, f30, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xc4c96561 # load x3 with value 0xc4c96561
sw x3, 0(x2) # store 0xc4c96561 in memory
flw f27, 0(x2) # load 0xc4c96561 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f29, f3, f27, f26, dyn # perform operation
fmsub.s f29, f3, f27, f26, rdn # perform operation
fmsub.s f29, f3, f27, f26, rmm # perform operation
fmsub.s f29, f3, f27, f26, rne # perform operation
fmsub.s f29, f3, f27, f26, rtz # perform operation
fmsub.s f29, f3, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f3, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x1f474938 # load x3 with value 0x1f474938
sw x3, 0(x2) # store 0x1f474938 in memory
flw f30, 0(x2) # load 0x1f474938 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmsub.s f13, f9, f30, f29, dyn # perform operation
fmsub.s f13, f9, f30, f29, rdn # perform operation
fmsub.s f13, f9, f30, f29, rmm # perform operation
fmsub.s f13, f9, f30, f29, rne # perform operation
fmsub.s f13, f9, f30, f29, rtz # perform operation
fmsub.s f13, f9, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f9, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xaac2cf69 # load x3 with value 0xaac2cf69
sw x3, 0(x2) # store 0xaac2cf69 in memory
flw f29, 0(x2) # load 0xaac2cf69 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmsub.s f3, f5, f29, f27, dyn # perform operation
fmsub.s f3, f5, f29, f27, rdn # perform operation
fmsub.s f3, f5, f29, f27, rmm # perform operation
fmsub.s f3, f5, f29, f27, rne # perform operation
fmsub.s f3, f5, f29, f27, rtz # perform operation
fmsub.s f3, f5, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f5, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xc74f8255 # load x3 with value 0xc74f8255
sw x3, 0(x2) # store 0xc74f8255 in memory
flw f24, 0(x2) # load 0xc74f8255 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmsub.s f11, f30, f24, f25, dyn # perform operation
fmsub.s f11, f30, f24, f25, rdn # perform operation
fmsub.s f11, f30, f24, f25, rmm # perform operation
fmsub.s f11, f30, f24, f25, rne # perform operation
fmsub.s f11, f30, f24, f25, rtz # perform operation
fmsub.s f11, f30, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x93b0ae27 # load x3 with value 0x93b0ae27
sw x3, 0(x2) # store 0x93b0ae27 in memory
flw f15, 0(x2) # load 0x93b0ae27 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmsub.s f14, f29, f15, f17, dyn # perform operation
fmsub.s f14, f29, f15, f17, rdn # perform operation
fmsub.s f14, f29, f15, f17, rmm # perform operation
fmsub.s f14, f29, f15, f17, rne # perform operation
fmsub.s f14, f29, f15, f17, rtz # perform operation
fmsub.s f14, f29, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f15, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x37d22e24 # load x3 with value 0x37d22e24
sw x3, 0(x2) # store 0x37d22e24 in memory
flw f14, 0(x2) # load 0x37d22e24 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmsub.s f20, f21, f14, f5, dyn # perform operation
fmsub.s f20, f21, f14, f5, rdn # perform operation
fmsub.s f20, f21, f14, f5, rmm # perform operation
fmsub.s f20, f21, f14, f5, rne # perform operation
fmsub.s f20, f21, f14, f5, rtz # perform operation
fmsub.s f20, f21, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f21, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xa3fdf3a9 # load x3 with value 0xa3fdf3a9
sw x3, 0(x2) # store 0xa3fdf3a9 in memory
flw f30, 0(x2) # load 0xa3fdf3a9 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmsub.s f11, f22, f30, f12, dyn # perform operation
fmsub.s f11, f22, f30, f12, rdn # perform operation
fmsub.s f11, f22, f30, f12, rmm # perform operation
fmsub.s f11, f22, f30, f12, rne # perform operation
fmsub.s f11, f22, f30, f12, rtz # perform operation
fmsub.s f11, f22, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x53cb14b1 # load x3 with value 0x53cb14b1
sw x3, 0(x2) # store 0x53cb14b1 in memory
flw f25, 0(x2) # load 0x53cb14b1 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmsub.s f2, f20, f25, f9, dyn # perform operation
fmsub.s f2, f20, f25, f9, rdn # perform operation
fmsub.s f2, f20, f25, f9, rmm # perform operation
fmsub.s f2, f20, f25, f9, rne # perform operation
fmsub.s f2, f20, f25, f9, rtz # perform operation
fmsub.s f2, f20, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f20, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f20, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f20, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f20, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f20, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x62fe554e # load x3 with value 0x62fe554e
sw x3, 0(x2) # store 0x62fe554e in memory
flw f6, 0(x2) # load 0x62fe554e from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f26, f25, f6, f29, dyn # perform operation
fmsub.s f26, f25, f6, f29, rdn # perform operation
fmsub.s f26, f25, f6, f29, rmm # perform operation
fmsub.s f26, f25, f6, f29, rne # perform operation
fmsub.s f26, f25, f6, f29, rtz # perform operation
fmsub.s f26, f25, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xbae52eac # load x3 with value 0xbae52eac
sw x3, 0(x2) # store 0xbae52eac in memory
flw f21, 0(x2) # load 0xbae52eac from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmsub.s f7, f29, f21, f11, dyn # perform operation
fmsub.s f7, f29, f21, f11, rdn # perform operation
fmsub.s f7, f29, f21, f11, rmm # perform operation
fmsub.s f7, f29, f21, f11, rne # perform operation
fmsub.s f7, f29, f21, f11, rtz # perform operation
fmsub.s f7, f29, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x340dacaf # load x3 with value 0x340dacaf
sw x3, 0(x2) # store 0x340dacaf in memory
flw f24, 0(x2) # load 0x340dacaf from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f26, f21, f24, f9, dyn # perform operation
fmsub.s f26, f21, f24, f9, rdn # perform operation
fmsub.s f26, f21, f24, f9, rmm # perform operation
fmsub.s f26, f21, f24, f9, rne # perform operation
fmsub.s f26, f21, f24, f9, rtz # perform operation
fmsub.s f26, f21, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0x9d0c0063 # load x3 with value 0x9d0c0063
sw x3, 0(x2) # store 0x9d0c0063 in memory
flw f22, 0(x2) # load 0x9d0c0063 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmsub.s f31, f5, f22, f13, dyn # perform operation
fmsub.s f31, f5, f22, f13, rdn # perform operation
fmsub.s f31, f5, f22, f13, rmm # perform operation
fmsub.s f31, f5, f22, f13, rne # perform operation
fmsub.s f31, f5, f22, f13, rtz # perform operation
fmsub.s f31, f5, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x9cdeb0d6 # load x3 with value 0x9cdeb0d6
sw x3, 0(x2) # store 0x9cdeb0d6 in memory
flw f13, 0(x2) # load 0x9cdeb0d6 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fmsub.s f25, f9, f13, f18, dyn # perform operation
fmsub.s f25, f9, f13, f18, rdn # perform operation
fmsub.s f25, f9, f13, f18, rmm # perform operation
fmsub.s f25, f9, f13, f18, rne # perform operation
fmsub.s f25, f9, f13, f18, rtz # perform operation
fmsub.s f25, f9, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x433a1313 # load x3 with value 0x433a1313
sw x3, 0(x2) # store 0x433a1313 in memory
flw f11, 0(x2) # load 0x433a1313 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f27, f18, f11, f8, dyn # perform operation
fmsub.s f27, f18, f11, f8, rdn # perform operation
fmsub.s f27, f18, f11, f8, rmm # perform operation
fmsub.s f27, f18, f11, f8, rne # perform operation
fmsub.s f27, f18, f11, f8, rtz # perform operation
fmsub.s f27, f18, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xdfdaa2d2 # load x3 with value 0xdfdaa2d2
sw x3, 0(x2) # store 0xdfdaa2d2 in memory
flw f12, 0(x2) # load 0xdfdaa2d2 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmsub.s f7, f11, f12, f30, dyn # perform operation
fmsub.s f7, f11, f12, f30, rdn # perform operation
fmsub.s f7, f11, f12, f30, rmm # perform operation
fmsub.s f7, f11, f12, f30, rne # perform operation
fmsub.s f7, f11, f12, f30, rtz # perform operation
fmsub.s f7, f11, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x3fc86af6 # load x3 with value 0x3fc86af6
sw x3, 0(x2) # store 0x3fc86af6 in memory
flw f27, 0(x2) # load 0x3fc86af6 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmsub.s f29, f24, f27, f28, dyn # perform operation
fmsub.s f29, f24, f27, f28, rdn # perform operation
fmsub.s f29, f24, f27, f28, rmm # perform operation
fmsub.s f29, f24, f27, f28, rne # perform operation
fmsub.s f29, f24, f27, f28, rtz # perform operation
fmsub.s f29, f24, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x210e62e3 # load x3 with value 0x210e62e3
sw x3, 0(x2) # store 0x210e62e3 in memory
flw f25, 0(x2) # load 0x210e62e3 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmsub.s f2, f28, f25, f20, dyn # perform operation
fmsub.s f2, f28, f25, f20, rdn # perform operation
fmsub.s f2, f28, f25, f20, rmm # perform operation
fmsub.s f2, f28, f25, f20, rne # perform operation
fmsub.s f2, f28, f25, f20, rtz # perform operation
fmsub.s f2, f28, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xc64c6a7c # load x3 with value 0xc64c6a7c
sw x3, 0(x2) # store 0xc64c6a7c in memory
flw f26, 0(x2) # load 0xc64c6a7c from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmsub.s f1, f20, f26, f25, dyn # perform operation
fmsub.s f1, f20, f26, f25, rdn # perform operation
fmsub.s f1, f20, f26, f25, rmm # perform operation
fmsub.s f1, f20, f26, f25, rne # perform operation
fmsub.s f1, f20, f26, f25, rtz # perform operation
fmsub.s f1, f20, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f20, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x1853b8a8 # load x3 with value 0x1853b8a8
sw x3, 0(x2) # store 0x1853b8a8 in memory
flw f2, 0(x2) # load 0x1853b8a8 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmsub.s f12, f14, f2, f3, dyn # perform operation
fmsub.s f12, f14, f2, f3, rdn # perform operation
fmsub.s f12, f14, f2, f3, rmm # perform operation
fmsub.s f12, f14, f2, f3, rne # perform operation
fmsub.s f12, f14, f2, f3, rtz # perform operation
fmsub.s f12, f14, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x4fd82a75 # load x3 with value 0x4fd82a75
sw x3, 0(x2) # store 0x4fd82a75 in memory
flw f3, 0(x2) # load 0x4fd82a75 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmsub.s f26, f11, f3, f13, dyn # perform operation
fmsub.s f26, f11, f3, f13, rdn # perform operation
fmsub.s f26, f11, f3, f13, rmm # perform operation
fmsub.s f26, f11, f3, f13, rne # perform operation
fmsub.s f26, f11, f3, f13, rtz # perform operation
fmsub.s f26, f11, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x5da47ba1 # load x3 with value 0x5da47ba1
sw x3, 0(x2) # store 0x5da47ba1 in memory
flw f24, 0(x2) # load 0x5da47ba1 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmsub.s f3, f28, f24, f11, dyn # perform operation
fmsub.s f3, f28, f24, f11, rdn # perform operation
fmsub.s f3, f28, f24, f11, rmm # perform operation
fmsub.s f3, f28, f24, f11, rne # perform operation
fmsub.s f3, f28, f24, f11, rtz # perform operation
fmsub.s f3, f28, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x02105387 # load x3 with value 0x02105387
sw x3, 0(x2) # store 0x02105387 in memory
flw f20, 0(x2) # load 0x02105387 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmsub.s f15, f31, f20, f25, dyn # perform operation
fmsub.s f15, f31, f20, f25, rdn # perform operation
fmsub.s f15, f31, f20, f25, rmm # perform operation
fmsub.s f15, f31, f20, f25, rne # perform operation
fmsub.s f15, f31, f20, f25, rtz # perform operation
fmsub.s f15, f31, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x781e1f2f # load x3 with value 0x781e1f2f
sw x3, 0(x2) # store 0x781e1f2f in memory
flw f21, 0(x2) # load 0x781e1f2f from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fmsub.s f13, f10, f21, f17, dyn # perform operation
fmsub.s f13, f10, f21, f17, rdn # perform operation
fmsub.s f13, f10, f21, f17, rmm # perform operation
fmsub.s f13, f10, f21, f17, rne # perform operation
fmsub.s f13, f10, f21, f17, rtz # perform operation
fmsub.s f13, f10, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f10, f21, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x81a1b1d4 # load x3 with value 0x81a1b1d4
sw x3, 0(x2) # store 0x81a1b1d4 in memory
flw f26, 0(x2) # load 0x81a1b1d4 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fmsub.s f16, f15, f26, f28, dyn # perform operation
fmsub.s f16, f15, f26, f28, rdn # perform operation
fmsub.s f16, f15, f26, f28, rmm # perform operation
fmsub.s f16, f15, f26, f28, rne # perform operation
fmsub.s f16, f15, f26, f28, rtz # perform operation
fmsub.s f16, f15, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f26, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x24c66189 # load x3 with value 0x24c66189
sw x3, 0(x2) # store 0x24c66189 in memory
flw f29, 0(x2) # load 0x24c66189 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fmsub.s f9, f21, f29, f11, dyn # perform operation
fmsub.s f9, f21, f29, f11, rdn # perform operation
fmsub.s f9, f21, f29, f11, rmm # perform operation
fmsub.s f9, f21, f29, f11, rne # perform operation
fmsub.s f9, f21, f29, f11, rtz # perform operation
fmsub.s f9, f21, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x10e13550 # load x3 with value 0x10e13550
sw x3, 0(x2) # store 0x10e13550 in memory
flw f27, 0(x2) # load 0x10e13550 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fmsub.s f11, f12, f27, f6, dyn # perform operation
fmsub.s f11, f12, f27, f6, rdn # perform operation
fmsub.s f11, f12, f27, f6, rmm # perform operation
fmsub.s f11, f12, f27, f6, rne # perform operation
fmsub.s f11, f12, f27, f6, rtz # perform operation
fmsub.s f11, f12, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xd0e6bd88 # load x3 with value 0xd0e6bd88
sw x3, 0(x2) # store 0xd0e6bd88 in memory
flw f10, 0(x2) # load 0xd0e6bd88 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmsub.s f1, f2, f10, f30, dyn # perform operation
fmsub.s f1, f2, f10, f30, rdn # perform operation
fmsub.s f1, f2, f10, f30, rmm # perform operation
fmsub.s f1, f2, f10, f30, rne # perform operation
fmsub.s f1, f2, f10, f30, rtz # perform operation
fmsub.s f1, f2, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x84e05e7f # load x3 with value 0x84e05e7f
sw x3, 0(x2) # store 0x84e05e7f in memory
flw f17, 0(x2) # load 0x84e05e7f from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f3, f31, f17, f1, dyn # perform operation
fmsub.s f3, f31, f17, f1, rdn # perform operation
fmsub.s f3, f31, f17, f1, rmm # perform operation
fmsub.s f3, f31, f17, f1, rne # perform operation
fmsub.s f3, f31, f17, f1, rtz # perform operation
fmsub.s f3, f31, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xb8b75d21 # load x3 with value 0xb8b75d21
sw x3, 0(x2) # store 0xb8b75d21 in memory
flw f12, 0(x2) # load 0xb8b75d21 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmsub.s f18, f25, f12, f30, dyn # perform operation
fmsub.s f18, f25, f12, f30, rdn # perform operation
fmsub.s f18, f25, f12, f30, rmm # perform operation
fmsub.s f18, f25, f12, f30, rne # perform operation
fmsub.s f18, f25, f12, f30, rtz # perform operation
fmsub.s f18, f25, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x983b95d2 # load x3 with value 0x983b95d2
sw x3, 0(x2) # store 0x983b95d2 in memory
flw f9, 0(x2) # load 0x983b95d2 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmsub.s f12, f21, f9, f3, dyn # perform operation
fmsub.s f12, f21, f9, f3, rdn # perform operation
fmsub.s f12, f21, f9, f3, rmm # perform operation
fmsub.s f12, f21, f9, f3, rne # perform operation
fmsub.s f12, f21, f9, f3, rtz # perform operation
fmsub.s f12, f21, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f21, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x88038edf # load x3 with value 0x88038edf
sw x3, 0(x2) # store 0x88038edf in memory
flw f23, 0(x2) # load 0x88038edf from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmsub.s f22, f31, f23, f17, dyn # perform operation
fmsub.s f22, f31, f23, f17, rdn # perform operation
fmsub.s f22, f31, f23, f17, rmm # perform operation
fmsub.s f22, f31, f23, f17, rne # perform operation
fmsub.s f22, f31, f23, f17, rtz # perform operation
fmsub.s f22, f31, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x5b538168 # load x3 with value 0x5b538168
sw x3, 0(x2) # store 0x5b538168 in memory
flw f10, 0(x2) # load 0x5b538168 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fmsub.s f17, f26, f10, f28, dyn # perform operation
fmsub.s f17, f26, f10, f28, rdn # perform operation
fmsub.s f17, f26, f10, f28, rmm # perform operation
fmsub.s f17, f26, f10, f28, rne # perform operation
fmsub.s f17, f26, f10, f28, rtz # perform operation
fmsub.s f17, f26, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x65ade45a # load x3 with value 0x65ade45a
sw x3, 0(x2) # store 0x65ade45a in memory
flw f18, 0(x2) # load 0x65ade45a from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmsub.s f3, f15, f18, f26, dyn # perform operation
fmsub.s f3, f15, f18, f26, rdn # perform operation
fmsub.s f3, f15, f18, f26, rmm # perform operation
fmsub.s f3, f15, f18, f26, rne # perform operation
fmsub.s f3, f15, f18, f26, rtz # perform operation
fmsub.s f3, f15, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xc04d1a82 # load x3 with value 0xc04d1a82
sw x3, 0(x2) # store 0xc04d1a82 in memory
flw f17, 0(x2) # load 0xc04d1a82 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmsub.s f6, f31, f17, f28, dyn # perform operation
fmsub.s f6, f31, f17, f28, rdn # perform operation
fmsub.s f6, f31, f17, f28, rmm # perform operation
fmsub.s f6, f31, f17, f28, rne # perform operation
fmsub.s f6, f31, f17, f28, rtz # perform operation
fmsub.s f6, f31, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x3d87334c # load x3 with value 0x3d87334c
sw x3, 0(x2) # store 0x3d87334c in memory
flw f14, 0(x2) # load 0x3d87334c from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmsub.s f25, f20, f14, f19, dyn # perform operation
fmsub.s f25, f20, f14, f19, rdn # perform operation
fmsub.s f25, f20, f14, f19, rmm # perform operation
fmsub.s f25, f20, f14, f19, rne # perform operation
fmsub.s f25, f20, f14, f19, rtz # perform operation
fmsub.s f25, f20, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f20, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0xf1893fe6 # load x3 with value 0xf1893fe6
sw x3, 0(x2) # store 0xf1893fe6 in memory
flw f27, 0(x2) # load 0xf1893fe6 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmsub.s f1, f12, f27, f8, dyn # perform operation
fmsub.s f1, f12, f27, f8, rdn # perform operation
fmsub.s f1, f12, f27, f8, rmm # perform operation
fmsub.s f1, f12, f27, f8, rne # perform operation
fmsub.s f1, f12, f27, f8, rtz # perform operation
fmsub.s f1, f12, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x7e17f2ac # load x3 with value 0x7e17f2ac
sw x3, 0(x2) # store 0x7e17f2ac in memory
flw f8, 0(x2) # load 0x7e17f2ac from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmsub.s f2, f13, f8, f12, dyn # perform operation
fmsub.s f2, f13, f8, f12, rdn # perform operation
fmsub.s f2, f13, f8, f12, rmm # perform operation
fmsub.s f2, f13, f8, f12, rne # perform operation
fmsub.s f2, f13, f8, f12, rtz # perform operation
fmsub.s f2, f13, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f13, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x6c3c0cb8 # load x3 with value 0x6c3c0cb8
sw x3, 0(x2) # store 0x6c3c0cb8 in memory
flw f10, 0(x2) # load 0x6c3c0cb8 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmsub.s f11, f30, f10, f25, dyn # perform operation
fmsub.s f11, f30, f10, f25, rdn # perform operation
fmsub.s f11, f30, f10, f25, rmm # perform operation
fmsub.s f11, f30, f10, f25, rne # perform operation
fmsub.s f11, f30, f10, f25, rtz # perform operation
fmsub.s f11, f30, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x7e327826 # load x3 with value 0x7e327826
sw x3, 0(x2) # store 0x7e327826 in memory
flw f15, 0(x2) # load 0x7e327826 from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fmsub.s f5, f27, f15, f16, dyn # perform operation
fmsub.s f5, f27, f15, f16, rdn # perform operation
fmsub.s f5, f27, f15, f16, rmm # perform operation
fmsub.s f5, f27, f15, f16, rne # perform operation
fmsub.s f5, f27, f15, f16, rtz # perform operation
fmsub.s f5, f27, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xb860ff51 # load x3 with value 0xb860ff51
sw x3, 0(x2) # store 0xb860ff51 in memory
flw f10, 0(x2) # load 0xb860ff51 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmsub.s f18, f5, f10, f23, dyn # perform operation
fmsub.s f18, f5, f10, f23, rdn # perform operation
fmsub.s f18, f5, f10, f23, rmm # perform operation
fmsub.s f18, f5, f10, f23, rne # perform operation
fmsub.s f18, f5, f10, f23, rtz # perform operation
fmsub.s f18, f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f5, f10, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x8686329f # load x3 with value 0x8686329f
sw x3, 0(x2) # store 0x8686329f in memory
flw f29, 0(x2) # load 0x8686329f from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmsub.s f12, f17, f29, f2, dyn # perform operation
fmsub.s f12, f17, f29, f2, rdn # perform operation
fmsub.s f12, f17, f29, f2, rmm # perform operation
fmsub.s f12, f17, f29, f2, rne # perform operation
fmsub.s f12, f17, f29, f2, rtz # perform operation
fmsub.s f12, f17, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f17, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f17, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f17, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f17, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f17, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x15e2645c # load x3 with value 0x15e2645c
sw x3, 0(x2) # store 0x15e2645c in memory
flw f23, 0(x2) # load 0x15e2645c from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmsub.s f14, f6, f23, f3, dyn # perform operation
fmsub.s f14, f6, f23, f3, rdn # perform operation
fmsub.s f14, f6, f23, f3, rmm # perform operation
fmsub.s f14, f6, f23, f3, rne # perform operation
fmsub.s f14, f6, f23, f3, rtz # perform operation
fmsub.s f14, f6, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f6, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f6, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f6, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f6, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f6, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xc2c4483b # load x3 with value 0xc2c4483b
sw x3, 0(x2) # store 0xc2c4483b in memory
flw f11, 0(x2) # load 0xc2c4483b from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmsub.s f8, f30, f11, f16, dyn # perform operation
fmsub.s f8, f30, f11, f16, rdn # perform operation
fmsub.s f8, f30, f11, f16, rmm # perform operation
fmsub.s f8, f30, f11, f16, rne # perform operation
fmsub.s f8, f30, f11, f16, rtz # perform operation
fmsub.s f8, f30, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xab51499e # load x3 with value 0xab51499e
sw x3, 0(x2) # store 0xab51499e in memory
flw f22, 0(x2) # load 0xab51499e from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmsub.s f26, f31, f22, f30, dyn # perform operation
fmsub.s f26, f31, f22, f30, rdn # perform operation
fmsub.s f26, f31, f22, f30, rmm # perform operation
fmsub.s f26, f31, f22, f30, rne # perform operation
fmsub.s f26, f31, f22, f30, rtz # perform operation
fmsub.s f26, f31, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x61495859 # load x3 with value 0x61495859
sw x3, 0(x2) # store 0x61495859 in memory
flw f20, 0(x2) # load 0x61495859 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmsub.s f13, f2, f20, f21, dyn # perform operation
fmsub.s f13, f2, f20, f21, rdn # perform operation
fmsub.s f13, f2, f20, f21, rmm # perform operation
fmsub.s f13, f2, f20, f21, rne # perform operation
fmsub.s f13, f2, f20, f21, rtz # perform operation
fmsub.s f13, f2, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7259b9c0 # load x3 with value 0x7259b9c0
sw x3, 0(x2) # store 0x7259b9c0 in memory
flw f10, 0(x2) # load 0x7259b9c0 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fmsub.s f16, f9, f10, f2, dyn # perform operation
fmsub.s f16, f9, f10, f2, rdn # perform operation
fmsub.s f16, f9, f10, f2, rmm # perform operation
fmsub.s f16, f9, f10, f2, rne # perform operation
fmsub.s f16, f9, f10, f2, rtz # perform operation
fmsub.s f16, f9, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xea97be23 # load x3 with value 0xea97be23
sw x3, 0(x2) # store 0xea97be23 in memory
flw f31, 0(x2) # load 0xea97be23 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fmsub.s f30, f20, f31, f16, dyn # perform operation
fmsub.s f30, f20, f31, f16, rdn # perform operation
fmsub.s f30, f20, f31, f16, rmm # perform operation
fmsub.s f30, f20, f31, f16, rne # perform operation
fmsub.s f30, f20, f31, f16, rtz # perform operation
fmsub.s f30, f20, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f20, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x447c5016 # load x3 with value 0x447c5016
sw x3, 0(x2) # store 0x447c5016 in memory
flw f7, 0(x2) # load 0x447c5016 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmsub.s f6, f28, f7, f14, dyn # perform operation
fmsub.s f6, f28, f7, f14, rdn # perform operation
fmsub.s f6, f28, f7, f14, rmm # perform operation
fmsub.s f6, f28, f7, f14, rne # perform operation
fmsub.s f6, f28, f7, f14, rtz # perform operation
fmsub.s f6, f28, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x3104652e # load x3 with value 0x3104652e
sw x3, 0(x2) # store 0x3104652e in memory
flw f6, 0(x2) # load 0x3104652e from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f22, f23, f6, f25, dyn # perform operation
fmsub.s f22, f23, f6, f25, rdn # perform operation
fmsub.s f22, f23, f6, f25, rmm # perform operation
fmsub.s f22, f23, f6, f25, rne # perform operation
fmsub.s f22, f23, f6, f25, rtz # perform operation
fmsub.s f22, f23, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x782cf4f3 # load x3 with value 0x782cf4f3
sw x3, 0(x2) # store 0x782cf4f3 in memory
flw f14, 0(x2) # load 0x782cf4f3 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fmsub.s f15, f10, f14, f13, dyn # perform operation
fmsub.s f15, f10, f14, f13, rdn # perform operation
fmsub.s f15, f10, f14, f13, rmm # perform operation
fmsub.s f15, f10, f14, f13, rne # perform operation
fmsub.s f15, f10, f14, f13, rtz # perform operation
fmsub.s f15, f10, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f10, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x5927641b # load x3 with value 0x5927641b
sw x3, 0(x2) # store 0x5927641b in memory
flw f16, 0(x2) # load 0x5927641b from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fmsub.s f11, f20, f16, f24, dyn # perform operation
fmsub.s f11, f20, f16, f24, rdn # perform operation
fmsub.s f11, f20, f16, f24, rmm # perform operation
fmsub.s f11, f20, f16, f24, rne # perform operation
fmsub.s f11, f20, f16, f24, rtz # perform operation
fmsub.s f11, f20, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f20, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f20, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f20, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f20, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f20, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xdf10f9ad # load x3 with value 0xdf10f9ad
sw x3, 0(x2) # store 0xdf10f9ad in memory
flw f28, 0(x2) # load 0xdf10f9ad from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f7, f21, f28, f31, dyn # perform operation
fmsub.s f7, f21, f28, f31, rdn # perform operation
fmsub.s f7, f21, f28, f31, rmm # perform operation
fmsub.s f7, f21, f28, f31, rne # perform operation
fmsub.s f7, f21, f28, f31, rtz # perform operation
fmsub.s f7, f21, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xf83ddeea # load x3 with value 0xf83ddeea
sw x3, 0(x2) # store 0xf83ddeea in memory
flw f1, 0(x2) # load 0xf83ddeea from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmsub.s f21, f29, f1, f30, dyn # perform operation
fmsub.s f21, f29, f1, f30, rdn # perform operation
fmsub.s f21, f29, f1, f30, rmm # perform operation
fmsub.s f21, f29, f1, f30, rne # perform operation
fmsub.s f21, f29, f1, f30, rtz # perform operation
fmsub.s f21, f29, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f29, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x09fe4222 # load x3 with value 0x09fe4222
sw x3, 0(x2) # store 0x09fe4222 in memory
flw f19, 0(x2) # load 0x09fe4222 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fmsub.s f26, f20, f19, f11, dyn # perform operation
fmsub.s f26, f20, f19, f11, rdn # perform operation
fmsub.s f26, f20, f19, f11, rmm # perform operation
fmsub.s f26, f20, f19, f11, rne # perform operation
fmsub.s f26, f20, f19, f11, rtz # perform operation
fmsub.s f26, f20, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x0aa7a301 # load x3 with value 0x0aa7a301
sw x3, 0(x2) # store 0x0aa7a301 in memory
flw f21, 0(x2) # load 0x0aa7a301 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmsub.s f22, f16, f21, f24, dyn # perform operation
fmsub.s f22, f16, f21, f24, rdn # perform operation
fmsub.s f22, f16, f21, f24, rmm # perform operation
fmsub.s f22, f16, f21, f24, rne # perform operation
fmsub.s f22, f16, f21, f24, rtz # perform operation
fmsub.s f22, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0xf7d119cd # load x3 with value 0xf7d119cd
sw x3, 0(x2) # store 0xf7d119cd in memory
flw f28, 0(x2) # load 0xf7d119cd from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f20, f3, f28, f25, dyn # perform operation
fmsub.s f20, f3, f28, f25, rdn # perform operation
fmsub.s f20, f3, f28, f25, rmm # perform operation
fmsub.s f20, f3, f28, f25, rne # perform operation
fmsub.s f20, f3, f28, f25, rtz # perform operation
fmsub.s f20, f3, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f3, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xf903165f # load x3 with value 0xf903165f
sw x3, 0(x2) # store 0xf903165f in memory
flw f29, 0(x2) # load 0xf903165f from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fmsub.s f14, f26, f29, f22, dyn # perform operation
fmsub.s f14, f26, f29, f22, rdn # perform operation
fmsub.s f14, f26, f29, f22, rmm # perform operation
fmsub.s f14, f26, f29, f22, rne # perform operation
fmsub.s f14, f26, f29, f22, rtz # perform operation
fmsub.s f14, f26, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x17c999e0 # load x3 with value 0x17c999e0
sw x3, 0(x2) # store 0x17c999e0 in memory
flw f8, 0(x2) # load 0x17c999e0 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmsub.s f27, f12, f8, f16, dyn # perform operation
fmsub.s f27, f12, f8, f16, rdn # perform operation
fmsub.s f27, f12, f8, f16, rmm # perform operation
fmsub.s f27, f12, f8, f16, rne # perform operation
fmsub.s f27, f12, f8, f16, rtz # perform operation
fmsub.s f27, f12, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f12, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f12, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f12, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f12, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f12, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xf1abbad2 # load x3 with value 0xf1abbad2
sw x3, 0(x2) # store 0xf1abbad2 in memory
flw f29, 0(x2) # load 0xf1abbad2 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fmsub.s f8, f7, f29, f6, dyn # perform operation
fmsub.s f8, f7, f29, f6, rdn # perform operation
fmsub.s f8, f7, f29, f6, rmm # perform operation
fmsub.s f8, f7, f29, f6, rne # perform operation
fmsub.s f8, f7, f29, f6, rtz # perform operation
fmsub.s f8, f7, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x13d81f04 # load x3 with value 0x13d81f04
sw x3, 0(x2) # store 0x13d81f04 in memory
flw f25, 0(x2) # load 0x13d81f04 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmsub.s f30, f5, f25, f20, dyn # perform operation
fmsub.s f30, f5, f25, f20, rdn # perform operation
fmsub.s f30, f5, f25, f20, rmm # perform operation
fmsub.s f30, f5, f25, f20, rne # perform operation
fmsub.s f30, f5, f25, f20, rtz # perform operation
fmsub.s f30, f5, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x01d43505 # load x3 with value 0x01d43505
sw x3, 0(x2) # store 0x01d43505 in memory
flw f13, 0(x2) # load 0x01d43505 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmsub.s f9, f6, f13, f2, dyn # perform operation
fmsub.s f9, f6, f13, f2, rdn # perform operation
fmsub.s f9, f6, f13, f2, rmm # perform operation
fmsub.s f9, f6, f13, f2, rne # perform operation
fmsub.s f9, f6, f13, f2, rtz # perform operation
fmsub.s f9, f6, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7c2e25a0 # load x3 with value 0x7c2e25a0
sw x3, 0(x2) # store 0x7c2e25a0 in memory
flw f16, 0(x2) # load 0x7c2e25a0 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f25, f29, f16, f6, dyn # perform operation
fmsub.s f25, f29, f16, f6, rdn # perform operation
fmsub.s f25, f29, f16, f6, rmm # perform operation
fmsub.s f25, f29, f16, f6, rne # perform operation
fmsub.s f25, f29, f16, f6, rtz # perform operation
fmsub.s f25, f29, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x2af274b2 # load x3 with value 0x2af274b2
sw x3, 0(x2) # store 0x2af274b2 in memory
flw f29, 0(x2) # load 0x2af274b2 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmsub.s f16, f6, f29, f26, dyn # perform operation
fmsub.s f16, f6, f29, f26, rdn # perform operation
fmsub.s f16, f6, f29, f26, rmm # perform operation
fmsub.s f16, f6, f29, f26, rne # perform operation
fmsub.s f16, f6, f29, f26, rtz # perform operation
fmsub.s f16, f6, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x9db9ce9f # load x3 with value 0x9db9ce9f
sw x3, 0(x2) # store 0x9db9ce9f in memory
flw f14, 0(x2) # load 0x9db9ce9f from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fmsub.s f29, f17, f14, f28, dyn # perform operation
fmsub.s f29, f17, f14, f28, rdn # perform operation
fmsub.s f29, f17, f14, f28, rmm # perform operation
fmsub.s f29, f17, f14, f28, rne # perform operation
fmsub.s f29, f17, f14, f28, rtz # perform operation
fmsub.s f29, f17, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x63baec9c # load x3 with value 0x63baec9c
sw x3, 0(x2) # store 0x63baec9c in memory
flw f24, 0(x2) # load 0x63baec9c from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmsub.s f23, f31, f24, f1, dyn # perform operation
fmsub.s f23, f31, f24, f1, rdn # perform operation
fmsub.s f23, f31, f24, f1, rmm # perform operation
fmsub.s f23, f31, f24, f1, rne # perform operation
fmsub.s f23, f31, f24, f1, rtz # perform operation
fmsub.s f23, f31, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x788c96ab # load x3 with value 0x788c96ab
sw x3, 0(x2) # store 0x788c96ab in memory
flw f23, 0(x2) # load 0x788c96ab from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmsub.s f13, f9, f23, f7, dyn # perform operation
fmsub.s f13, f9, f23, f7, rdn # perform operation
fmsub.s f13, f9, f23, f7, rmm # perform operation
fmsub.s f13, f9, f23, f7, rne # perform operation
fmsub.s f13, f9, f23, f7, rtz # perform operation
fmsub.s f13, f9, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f9, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f9, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f9, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f9, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f9, f23, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x0687d220 # load x3 with value 0x0687d220
sw x3, 0(x2) # store 0x0687d220 in memory
flw f21, 0(x2) # load 0x0687d220 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f28, f31, f21, f20, dyn # perform operation
fmsub.s f28, f31, f21, f20, rdn # perform operation
fmsub.s f28, f31, f21, f20, rmm # perform operation
fmsub.s f28, f31, f21, f20, rne # perform operation
fmsub.s f28, f31, f21, f20, rtz # perform operation
fmsub.s f28, f31, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f31, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x3c2fbefd # load x3 with value 0x3c2fbefd
sw x3, 0(x2) # store 0x3c2fbefd in memory
flw f26, 0(x2) # load 0x3c2fbefd from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmsub.s f9, f3, f26, f10, dyn # perform operation
fmsub.s f9, f3, f26, f10, rdn # perform operation
fmsub.s f9, f3, f26, f10, rmm # perform operation
fmsub.s f9, f3, f26, f10, rne # perform operation
fmsub.s f9, f3, f26, f10, rtz # perform operation
fmsub.s f9, f3, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x8fff0b4f # load x3 with value 0x8fff0b4f
sw x3, 0(x2) # store 0x8fff0b4f in memory
flw f27, 0(x2) # load 0x8fff0b4f from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmsub.s f26, f17, f27, f10, dyn # perform operation
fmsub.s f26, f17, f27, f10, rdn # perform operation
fmsub.s f26, f17, f27, f10, rmm # perform operation
fmsub.s f26, f17, f27, f10, rne # perform operation
fmsub.s f26, f17, f27, f10, rtz # perform operation
fmsub.s f26, f17, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x35ca7f17 # load x3 with value 0x35ca7f17
sw x3, 0(x2) # store 0x35ca7f17 in memory
flw f12, 0(x2) # load 0x35ca7f17 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fmsub.s f6, f17, f12, f15, dyn # perform operation
fmsub.s f6, f17, f12, f15, rdn # perform operation
fmsub.s f6, f17, f12, f15, rmm # perform operation
fmsub.s f6, f17, f12, f15, rne # perform operation
fmsub.s f6, f17, f12, f15, rtz # perform operation
fmsub.s f6, f17, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x846a2e9e # load x3 with value 0x846a2e9e
sw x3, 0(x2) # store 0x846a2e9e in memory
flw f16, 0(x2) # load 0x846a2e9e from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmsub.s f14, f28, f16, f18, dyn # perform operation
fmsub.s f14, f28, f16, f18, rdn # perform operation
fmsub.s f14, f28, f16, f18, rmm # perform operation
fmsub.s f14, f28, f16, f18, rne # perform operation
fmsub.s f14, f28, f16, f18, rtz # perform operation
fmsub.s f14, f28, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x31dc5fc2 # load x3 with value 0x31dc5fc2
sw x3, 0(x2) # store 0x31dc5fc2 in memory
flw f6, 0(x2) # load 0x31dc5fc2 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmsub.s f28, f16, f6, f17, dyn # perform operation
fmsub.s f28, f16, f6, f17, rdn # perform operation
fmsub.s f28, f16, f6, f17, rmm # perform operation
fmsub.s f28, f16, f6, f17, rne # perform operation
fmsub.s f28, f16, f6, f17, rtz # perform operation
fmsub.s f28, f16, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xb995fb7f # load x3 with value 0xb995fb7f
sw x3, 0(x2) # store 0xb995fb7f in memory
flw f22, 0(x2) # load 0xb995fb7f from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmsub.s f13, f19, f22, f18, dyn # perform operation
fmsub.s f13, f19, f22, f18, rdn # perform operation
fmsub.s f13, f19, f22, f18, rmm # perform operation
fmsub.s f13, f19, f22, f18, rne # perform operation
fmsub.s f13, f19, f22, f18, rtz # perform operation
fmsub.s f13, f19, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x9854fbcb # load x3 with value 0x9854fbcb
sw x3, 0(x2) # store 0x9854fbcb in memory
flw f24, 0(x2) # load 0x9854fbcb from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmsub.s f9, f26, f24, f27, dyn # perform operation
fmsub.s f9, f26, f24, f27, rdn # perform operation
fmsub.s f9, f26, f24, f27, rmm # perform operation
fmsub.s f9, f26, f24, f27, rne # perform operation
fmsub.s f9, f26, f24, f27, rtz # perform operation
fmsub.s f9, f26, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f26, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x2874f4f6 # load x3 with value 0x2874f4f6
sw x3, 0(x2) # store 0x2874f4f6 in memory
flw f31, 0(x2) # load 0x2874f4f6 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fmsub.s f25, f9, f31, f10, dyn # perform operation
fmsub.s f25, f9, f31, f10, rdn # perform operation
fmsub.s f25, f9, f31, f10, rmm # perform operation
fmsub.s f25, f9, f31, f10, rne # perform operation
fmsub.s f25, f9, f31, f10, rtz # perform operation
fmsub.s f25, f9, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xabf8a53f # load x3 with value 0xabf8a53f
sw x3, 0(x2) # store 0xabf8a53f in memory
flw f10, 0(x2) # load 0xabf8a53f from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmsub.s f1, f17, f10, f9, dyn # perform operation
fmsub.s f1, f17, f10, f9, rdn # perform operation
fmsub.s f1, f17, f10, f9, rmm # perform operation
fmsub.s f1, f17, f10, f9, rne # perform operation
fmsub.s f1, f17, f10, f9, rtz # perform operation
fmsub.s f1, f17, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x970fa36a # load x3 with value 0x970fa36a
sw x3, 0(x2) # store 0x970fa36a in memory
flw f25, 0(x2) # load 0x970fa36a from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fmsub.s f12, f2, f25, f20, dyn # perform operation
fmsub.s f12, f2, f25, f20, rdn # perform operation
fmsub.s f12, f2, f25, f20, rmm # perform operation
fmsub.s f12, f2, f25, f20, rne # perform operation
fmsub.s f12, f2, f25, f20, rtz # perform operation
fmsub.s f12, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x1ddb0271 # load x3 with value 0x1ddb0271
sw x3, 0(x2) # store 0x1ddb0271 in memory
flw f26, 0(x2) # load 0x1ddb0271 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmsub.s f14, f9, f26, f15, dyn # perform operation
fmsub.s f14, f9, f26, f15, rdn # perform operation
fmsub.s f14, f9, f26, f15, rmm # perform operation
fmsub.s f14, f9, f26, f15, rne # perform operation
fmsub.s f14, f9, f26, f15, rtz # perform operation
fmsub.s f14, f9, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0xb87c99db # load x3 with value 0xb87c99db
sw x3, 0(x2) # store 0xb87c99db in memory
flw f8, 0(x2) # load 0xb87c99db from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fmsub.s f10, f27, f8, f9, dyn # perform operation
fmsub.s f10, f27, f8, f9, rdn # perform operation
fmsub.s f10, f27, f8, f9, rmm # perform operation
fmsub.s f10, f27, f8, f9, rne # perform operation
fmsub.s f10, f27, f8, f9, rtz # perform operation
fmsub.s f10, f27, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x0f0b1167 # load x3 with value 0x0f0b1167
sw x3, 0(x2) # store 0x0f0b1167 in memory
flw f25, 0(x2) # load 0x0f0b1167 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f26, f7, f25, f31, dyn # perform operation
fmsub.s f26, f7, f25, f31, rdn # perform operation
fmsub.s f26, f7, f25, f31, rmm # perform operation
fmsub.s f26, f7, f25, f31, rne # perform operation
fmsub.s f26, f7, f25, f31, rtz # perform operation
fmsub.s f26, f7, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f7, f25, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xd70dda48 # load x3 with value 0xd70dda48
sw x3, 0(x2) # store 0xd70dda48 in memory
flw f20, 0(x2) # load 0xd70dda48 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmsub.s f18, f14, f20, f25, dyn # perform operation
fmsub.s f18, f14, f20, f25, rdn # perform operation
fmsub.s f18, f14, f20, f25, rmm # perform operation
fmsub.s f18, f14, f20, f25, rne # perform operation
fmsub.s f18, f14, f20, f25, rtz # perform operation
fmsub.s f18, f14, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x02dd3026 # load x3 with value 0x02dd3026
sw x3, 0(x2) # store 0x02dd3026 in memory
flw f19, 0(x2) # load 0x02dd3026 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmsub.s f1, f24, f19, f16, dyn # perform operation
fmsub.s f1, f24, f19, f16, rdn # perform operation
fmsub.s f1, f24, f19, f16, rmm # perform operation
fmsub.s f1, f24, f19, f16, rne # perform operation
fmsub.s f1, f24, f19, f16, rtz # perform operation
fmsub.s f1, f24, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xa9128f56 # load x3 with value 0xa9128f56
sw x3, 0(x2) # store 0xa9128f56 in memory
flw f8, 0(x2) # load 0xa9128f56 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmsub.s f15, f12, f8, f2, dyn # perform operation
fmsub.s f15, f12, f8, f2, rdn # perform operation
fmsub.s f15, f12, f8, f2, rmm # perform operation
fmsub.s f15, f12, f8, f2, rne # perform operation
fmsub.s f15, f12, f8, f2, rtz # perform operation
fmsub.s f15, f12, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f12, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x34798ab6 # load x3 with value 0x34798ab6
sw x3, 0(x2) # store 0x34798ab6 in memory
flw f19, 0(x2) # load 0x34798ab6 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f8, f26, f19, f31, dyn # perform operation
fmsub.s f8, f26, f19, f31, rdn # perform operation
fmsub.s f8, f26, f19, f31, rmm # perform operation
fmsub.s f8, f26, f19, f31, rne # perform operation
fmsub.s f8, f26, f19, f31, rtz # perform operation
fmsub.s f8, f26, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f26, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x5e08f3db # load x3 with value 0x5e08f3db
sw x3, 0(x2) # store 0x5e08f3db in memory
flw f30, 0(x2) # load 0x5e08f3db from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fmsub.s f13, f7, f30, f15, dyn # perform operation
fmsub.s f13, f7, f30, f15, rdn # perform operation
fmsub.s f13, f7, f30, f15, rmm # perform operation
fmsub.s f13, f7, f30, f15, rne # perform operation
fmsub.s f13, f7, f30, f15, rtz # perform operation
fmsub.s f13, f7, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f7, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x07d88413 # load x3 with value 0x07d88413
sw x3, 0(x2) # store 0x07d88413 in memory
flw f25, 0(x2) # load 0x07d88413 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f6, f26, f25, f24, dyn # perform operation
fmsub.s f6, f26, f25, f24, rdn # perform operation
fmsub.s f6, f26, f25, f24, rmm # perform operation
fmsub.s f6, f26, f25, f24, rne # perform operation
fmsub.s f6, f26, f25, f24, rtz # perform operation
fmsub.s f6, f26, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xf730d3e3 # load x3 with value 0xf730d3e3
sw x3, 0(x2) # store 0xf730d3e3 in memory
flw f15, 0(x2) # load 0xf730d3e3 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f10, f18, f15, f25, dyn # perform operation
fmsub.s f10, f18, f15, f25, rdn # perform operation
fmsub.s f10, f18, f15, f25, rmm # perform operation
fmsub.s f10, f18, f15, f25, rne # perform operation
fmsub.s f10, f18, f15, f25, rtz # perform operation
fmsub.s f10, f18, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x3a86ef4a # load x3 with value 0x3a86ef4a
sw x3, 0(x2) # store 0x3a86ef4a in memory
flw f8, 0(x2) # load 0x3a86ef4a from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmsub.s f20, f2, f8, f11, dyn # perform operation
fmsub.s f20, f2, f8, f11, rdn # perform operation
fmsub.s f20, f2, f8, f11, rmm # perform operation
fmsub.s f20, f2, f8, f11, rne # perform operation
fmsub.s f20, f2, f8, f11, rtz # perform operation
fmsub.s f20, f2, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x2a054f08 # load x3 with value 0x2a054f08
sw x3, 0(x2) # store 0x2a054f08 in memory
flw f10, 0(x2) # load 0x2a054f08 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f18, f25, f10, f22, dyn # perform operation
fmsub.s f18, f25, f10, f22, rdn # perform operation
fmsub.s f18, f25, f10, f22, rmm # perform operation
fmsub.s f18, f25, f10, f22, rne # perform operation
fmsub.s f18, f25, f10, f22, rtz # perform operation
fmsub.s f18, f25, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x67de0b2b # load x3 with value 0x67de0b2b
sw x3, 0(x2) # store 0x67de0b2b in memory
flw f11, 0(x2) # load 0x67de0b2b from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f1, f24, f11, f31, dyn # perform operation
fmsub.s f1, f24, f11, f31, rdn # perform operation
fmsub.s f1, f24, f11, f31, rmm # perform operation
fmsub.s f1, f24, f11, f31, rne # perform operation
fmsub.s f1, f24, f11, f31, rtz # perform operation
fmsub.s f1, f24, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x764fdbfc # load x3 with value 0x764fdbfc
sw x3, 0(x2) # store 0x764fdbfc in memory
flw f24, 0(x2) # load 0x764fdbfc from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmsub.s f19, f7, f24, f5, dyn # perform operation
fmsub.s f19, f7, f24, f5, rdn # perform operation
fmsub.s f19, f7, f24, f5, rmm # perform operation
fmsub.s f19, f7, f24, f5, rne # perform operation
fmsub.s f19, f7, f24, f5, rtz # perform operation
fmsub.s f19, f7, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xfaf291f2 # load x3 with value 0xfaf291f2
sw x3, 0(x2) # store 0xfaf291f2 in memory
flw f13, 0(x2) # load 0xfaf291f2 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f14, f29, f13, f6, dyn # perform operation
fmsub.s f14, f29, f13, f6, rdn # perform operation
fmsub.s f14, f29, f13, f6, rmm # perform operation
fmsub.s f14, f29, f13, f6, rne # perform operation
fmsub.s f14, f29, f13, f6, rtz # perform operation
fmsub.s f14, f29, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x2b4de407 # load x3 with value 0x2b4de407
sw x3, 0(x2) # store 0x2b4de407 in memory
flw f30, 0(x2) # load 0x2b4de407 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fmsub.s f12, f20, f30, f8, dyn # perform operation
fmsub.s f12, f20, f30, f8, rdn # perform operation
fmsub.s f12, f20, f30, f8, rmm # perform operation
fmsub.s f12, f20, f30, f8, rne # perform operation
fmsub.s f12, f20, f30, f8, rtz # perform operation
fmsub.s f12, f20, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xc3ad05a8 # load x3 with value 0xc3ad05a8
sw x3, 0(x2) # store 0xc3ad05a8 in memory
flw f14, 0(x2) # load 0xc3ad05a8 from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmsub.s f1, f15, f14, f29, dyn # perform operation
fmsub.s f1, f15, f14, f29, rdn # perform operation
fmsub.s f1, f15, f14, f29, rmm # perform operation
fmsub.s f1, f15, f14, f29, rne # perform operation
fmsub.s f1, f15, f14, f29, rtz # perform operation
fmsub.s f1, f15, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xee49f8fe # load x3 with value 0xee49f8fe
sw x3, 0(x2) # store 0xee49f8fe in memory
flw f30, 0(x2) # load 0xee49f8fe from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f12, f9, f30, f8, dyn # perform operation
fmsub.s f12, f9, f30, f8, rdn # perform operation
fmsub.s f12, f9, f30, f8, rmm # perform operation
fmsub.s f12, f9, f30, f8, rne # perform operation
fmsub.s f12, f9, f30, f8, rtz # perform operation
fmsub.s f12, f9, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xbf197ebe # load x3 with value 0xbf197ebe
sw x3, 0(x2) # store 0xbf197ebe in memory
flw f27, 0(x2) # load 0xbf197ebe from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f2, f7, f27, f18, dyn # perform operation
fmsub.s f2, f7, f27, f18, rdn # perform operation
fmsub.s f2, f7, f27, f18, rmm # perform operation
fmsub.s f2, f7, f27, f18, rne # perform operation
fmsub.s f2, f7, f27, f18, rtz # perform operation
fmsub.s f2, f7, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xefeefb09 # load x3 with value 0xefeefb09
sw x3, 0(x2) # store 0xefeefb09 in memory
flw f9, 0(x2) # load 0xefeefb09 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fmsub.s f10, f31, f9, f1, dyn # perform operation
fmsub.s f10, f31, f9, f1, rdn # perform operation
fmsub.s f10, f31, f9, f1, rmm # perform operation
fmsub.s f10, f31, f9, f1, rne # perform operation
fmsub.s f10, f31, f9, f1, rtz # perform operation
fmsub.s f10, f31, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f31, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f31, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f31, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f31, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f31, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xcd4cf932 # load x3 with value 0xcd4cf932
sw x3, 0(x2) # store 0xcd4cf932 in memory
flw f6, 0(x2) # load 0xcd4cf932 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f11, f22, f6, f7, dyn # perform operation
fmsub.s f11, f22, f6, f7, rdn # perform operation
fmsub.s f11, f22, f6, f7, rmm # perform operation
fmsub.s f11, f22, f6, f7, rne # perform operation
fmsub.s f11, f22, f6, f7, rtz # perform operation
fmsub.s f11, f22, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x6c2a4f6b # load x3 with value 0x6c2a4f6b
sw x3, 0(x2) # store 0x6c2a4f6b in memory
flw f28, 0(x2) # load 0x6c2a4f6b from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f30, f21, f28, f6, dyn # perform operation
fmsub.s f30, f21, f28, f6, rdn # perform operation
fmsub.s f30, f21, f28, f6, rmm # perform operation
fmsub.s f30, f21, f28, f6, rne # perform operation
fmsub.s f30, f21, f28, f6, rtz # perform operation
fmsub.s f30, f21, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x215edf16 # load x3 with value 0x215edf16
sw x3, 0(x2) # store 0x215edf16 in memory
flw f26, 0(x2) # load 0x215edf16 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmsub.s f31, f10, f26, f25, dyn # perform operation
fmsub.s f31, f10, f26, f25, rdn # perform operation
fmsub.s f31, f10, f26, f25, rmm # perform operation
fmsub.s f31, f10, f26, f25, rne # perform operation
fmsub.s f31, f10, f26, f25, rtz # perform operation
fmsub.s f31, f10, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x690a3039 # load x3 with value 0x690a3039
sw x3, 0(x2) # store 0x690a3039 in memory
flw f24, 0(x2) # load 0x690a3039 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f10, f3, f24, f26, dyn # perform operation
fmsub.s f10, f3, f24, f26, rdn # perform operation
fmsub.s f10, f3, f24, f26, rmm # perform operation
fmsub.s f10, f3, f24, f26, rne # perform operation
fmsub.s f10, f3, f24, f26, rtz # perform operation
fmsub.s f10, f3, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f3, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x74f4b7fe # load x3 with value 0x74f4b7fe
sw x3, 0(x2) # store 0x74f4b7fe in memory
flw f19, 0(x2) # load 0x74f4b7fe from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmsub.s f9, f21, f19, f16, dyn # perform operation
fmsub.s f9, f21, f19, f16, rdn # perform operation
fmsub.s f9, f21, f19, f16, rmm # perform operation
fmsub.s f9, f21, f19, f16, rne # perform operation
fmsub.s f9, f21, f19, f16, rtz # perform operation
fmsub.s f9, f21, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xabbbf8cc # load x3 with value 0xabbbf8cc
sw x3, 0(x2) # store 0xabbbf8cc in memory
flw f29, 0(x2) # load 0xabbbf8cc from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmsub.s f20, f30, f29, f3, dyn # perform operation
fmsub.s f20, f30, f29, f3, rdn # perform operation
fmsub.s f20, f30, f29, f3, rmm # perform operation
fmsub.s f20, f30, f29, f3, rne # perform operation
fmsub.s f20, f30, f29, f3, rtz # perform operation
fmsub.s f20, f30, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xb1756d22 # load x3 with value 0xb1756d22
sw x3, 0(x2) # store 0xb1756d22 in memory
flw f31, 0(x2) # load 0xb1756d22 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f3, f15, f31, f2, dyn # perform operation
fmsub.s f3, f15, f31, f2, rdn # perform operation
fmsub.s f3, f15, f31, f2, rmm # perform operation
fmsub.s f3, f15, f31, f2, rne # perform operation
fmsub.s f3, f15, f31, f2, rtz # perform operation
fmsub.s f3, f15, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x104eb71e # load x3 with value 0x104eb71e
sw x3, 0(x2) # store 0x104eb71e in memory
flw f17, 0(x2) # load 0x104eb71e from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f11, f1, f17, f23, dyn # perform operation
fmsub.s f11, f1, f17, f23, rdn # perform operation
fmsub.s f11, f1, f17, f23, rmm # perform operation
fmsub.s f11, f1, f17, f23, rne # perform operation
fmsub.s f11, f1, f17, f23, rtz # perform operation
fmsub.s f11, f1, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x181031e1 # load x3 with value 0x181031e1
sw x3, 0(x2) # store 0x181031e1 in memory
flw f21, 0(x2) # load 0x181031e1 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmsub.s f11, f25, f21, f1, dyn # perform operation
fmsub.s f11, f25, f21, f1, rdn # perform operation
fmsub.s f11, f25, f21, f1, rmm # perform operation
fmsub.s f11, f25, f21, f1, rne # perform operation
fmsub.s f11, f25, f21, f1, rtz # perform operation
fmsub.s f11, f25, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x75e48650 # load x3 with value 0x75e48650
sw x3, 0(x2) # store 0x75e48650 in memory
flw f19, 0(x2) # load 0x75e48650 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmsub.s f11, f27, f19, f16, dyn # perform operation
fmsub.s f11, f27, f19, f16, rdn # perform operation
fmsub.s f11, f27, f19, f16, rmm # perform operation
fmsub.s f11, f27, f19, f16, rne # perform operation
fmsub.s f11, f27, f19, f16, rtz # perform operation
fmsub.s f11, f27, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0xae523f9f # load x3 with value 0xae523f9f
sw x3, 0(x2) # store 0xae523f9f in memory
flw f24, 0(x2) # load 0xae523f9f from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmsub.s f11, f27, f24, f23, dyn # perform operation
fmsub.s f11, f27, f24, f23, rdn # perform operation
fmsub.s f11, f27, f24, f23, rmm # perform operation
fmsub.s f11, f27, f24, f23, rne # perform operation
fmsub.s f11, f27, f24, f23, rtz # perform operation
fmsub.s f11, f27, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x73237d65 # load x3 with value 0x73237d65
sw x3, 0(x2) # store 0x73237d65 in memory
flw f14, 0(x2) # load 0x73237d65 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f24, f11, f14, f12, dyn # perform operation
fmsub.s f24, f11, f14, f12, rdn # perform operation
fmsub.s f24, f11, f14, f12, rmm # perform operation
fmsub.s f24, f11, f14, f12, rne # perform operation
fmsub.s f24, f11, f14, f12, rtz # perform operation
fmsub.s f24, f11, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x5454f87d # load x3 with value 0x5454f87d
sw x3, 0(x2) # store 0x5454f87d in memory
flw f6, 0(x2) # load 0x5454f87d from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fmsub.s f23, f27, f6, f10, dyn # perform operation
fmsub.s f23, f27, f6, f10, rdn # perform operation
fmsub.s f23, f27, f6, f10, rmm # perform operation
fmsub.s f23, f27, f6, f10, rne # perform operation
fmsub.s f23, f27, f6, f10, rtz # perform operation
fmsub.s f23, f27, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x066f3832 # load x3 with value 0x066f3832
sw x3, 0(x2) # store 0x066f3832 in memory
flw f16, 0(x2) # load 0x066f3832 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f9, f13, f16, f5, dyn # perform operation
fmsub.s f9, f13, f16, f5, rdn # perform operation
fmsub.s f9, f13, f16, f5, rmm # perform operation
fmsub.s f9, f13, f16, f5, rne # perform operation
fmsub.s f9, f13, f16, f5, rtz # perform operation
fmsub.s f9, f13, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f13, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x33c05fba # load x3 with value 0x33c05fba
sw x3, 0(x2) # store 0x33c05fba in memory
flw f13, 0(x2) # load 0x33c05fba from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmsub.s f30, f25, f13, f27, dyn # perform operation
fmsub.s f30, f25, f13, f27, rdn # perform operation
fmsub.s f30, f25, f13, f27, rmm # perform operation
fmsub.s f30, f25, f13, f27, rne # perform operation
fmsub.s f30, f25, f13, f27, rtz # perform operation
fmsub.s f30, f25, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x8375a6db # load x3 with value 0x8375a6db
sw x3, 0(x2) # store 0x8375a6db in memory
flw f26, 0(x2) # load 0x8375a6db from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f29, f30, f26, f1, dyn # perform operation
fmsub.s f29, f30, f26, f1, rdn # perform operation
fmsub.s f29, f30, f26, f1, rmm # perform operation
fmsub.s f29, f30, f26, f1, rne # perform operation
fmsub.s f29, f30, f26, f1, rtz # perform operation
fmsub.s f29, f30, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xc389dc41 # load x3 with value 0xc389dc41
sw x3, 0(x2) # store 0xc389dc41 in memory
flw f25, 0(x2) # load 0xc389dc41 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmsub.s f27, f14, f25, f30, dyn # perform operation
fmsub.s f27, f14, f25, f30, rdn # perform operation
fmsub.s f27, f14, f25, f30, rmm # perform operation
fmsub.s f27, f14, f25, f30, rne # perform operation
fmsub.s f27, f14, f25, f30, rtz # perform operation
fmsub.s f27, f14, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f14, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xc361c777 # load x3 with value 0xc361c777
sw x3, 0(x2) # store 0xc361c777 in memory
flw f13, 0(x2) # load 0xc361c777 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f28, f11, f13, f1, dyn # perform operation
fmsub.s f28, f11, f13, f1, rdn # perform operation
fmsub.s f28, f11, f13, f1, rmm # perform operation
fmsub.s f28, f11, f13, f1, rne # perform operation
fmsub.s f28, f11, f13, f1, rtz # perform operation
fmsub.s f28, f11, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0xa7704054 # load x3 with value 0xa7704054
sw x3, 0(x2) # store 0xa7704054 in memory
flw f6, 0(x2) # load 0xa7704054 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmsub.s f21, f31, f6, f23, dyn # perform operation
fmsub.s f21, f31, f6, f23, rdn # perform operation
fmsub.s f21, f31, f6, f23, rmm # perform operation
fmsub.s f21, f31, f6, f23, rne # perform operation
fmsub.s f21, f31, f6, f23, rtz # perform operation
fmsub.s f21, f31, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x414f0dd0 # load x3 with value 0x414f0dd0
sw x3, 0(x2) # store 0x414f0dd0 in memory
flw f15, 0(x2) # load 0x414f0dd0 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fmsub.s f17, f14, f15, f1, dyn # perform operation
fmsub.s f17, f14, f15, f1, rdn # perform operation
fmsub.s f17, f14, f15, f1, rmm # perform operation
fmsub.s f17, f14, f15, f1, rne # perform operation
fmsub.s f17, f14, f15, f1, rtz # perform operation
fmsub.s f17, f14, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x5e732fb7 # load x3 with value 0x5e732fb7
sw x3, 0(x2) # store 0x5e732fb7 in memory
flw f27, 0(x2) # load 0x5e732fb7 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fmsub.s f30, f7, f27, f14, dyn # perform operation
fmsub.s f30, f7, f27, f14, rdn # perform operation
fmsub.s f30, f7, f27, f14, rmm # perform operation
fmsub.s f30, f7, f27, f14, rne # perform operation
fmsub.s f30, f7, f27, f14, rtz # perform operation
fmsub.s f30, f7, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xead0d7f3 # load x3 with value 0xead0d7f3
sw x3, 0(x2) # store 0xead0d7f3 in memory
flw f18, 0(x2) # load 0xead0d7f3 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f9, f16, f18, f13, dyn # perform operation
fmsub.s f9, f16, f18, f13, rdn # perform operation
fmsub.s f9, f16, f18, f13, rmm # perform operation
fmsub.s f9, f16, f18, f13, rne # perform operation
fmsub.s f9, f16, f18, f13, rtz # perform operation
fmsub.s f9, f16, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x129a0a6d # load x3 with value 0x129a0a6d
sw x3, 0(x2) # store 0x129a0a6d in memory
flw f30, 0(x2) # load 0x129a0a6d from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmsub.s f11, f17, f30, f31, dyn # perform operation
fmsub.s f11, f17, f30, f31, rdn # perform operation
fmsub.s f11, f17, f30, f31, rmm # perform operation
fmsub.s f11, f17, f30, f31, rne # perform operation
fmsub.s f11, f17, f30, f31, rtz # perform operation
fmsub.s f11, f17, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x26fcb39e # load x3 with value 0x26fcb39e
sw x3, 0(x2) # store 0x26fcb39e in memory
flw f7, 0(x2) # load 0x26fcb39e from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmsub.s f22, f31, f7, f26, dyn # perform operation
fmsub.s f22, f31, f7, f26, rdn # perform operation
fmsub.s f22, f31, f7, f26, rmm # perform operation
fmsub.s f22, f31, f7, f26, rne # perform operation
fmsub.s f22, f31, f7, f26, rtz # perform operation
fmsub.s f22, f31, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x15487fbc # load x3 with value 0x15487fbc
sw x3, 0(x2) # store 0x15487fbc in memory
flw f11, 0(x2) # load 0x15487fbc from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmsub.s f15, f27, f11, f17, dyn # perform operation
fmsub.s f15, f27, f11, f17, rdn # perform operation
fmsub.s f15, f27, f11, f17, rmm # perform operation
fmsub.s f15, f27, f11, f17, rne # perform operation
fmsub.s f15, f27, f11, f17, rtz # perform operation
fmsub.s f15, f27, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x39df3908 # load x3 with value 0x39df3908
sw x3, 0(x2) # store 0x39df3908 in memory
flw f3, 0(x2) # load 0x39df3908 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmsub.s f27, f19, f3, f15, dyn # perform operation
fmsub.s f27, f19, f3, f15, rdn # perform operation
fmsub.s f27, f19, f3, f15, rmm # perform operation
fmsub.s f27, f19, f3, f15, rne # perform operation
fmsub.s f27, f19, f3, f15, rtz # perform operation
fmsub.s f27, f19, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f19, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f19, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f19, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f19, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f19, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x2aa55018 # load x3 with value 0x2aa55018
sw x3, 0(x2) # store 0x2aa55018 in memory
flw f29, 0(x2) # load 0x2aa55018 from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmsub.s f30, f19, f29, f13, dyn # perform operation
fmsub.s f30, f19, f29, f13, rdn # perform operation
fmsub.s f30, f19, f29, f13, rmm # perform operation
fmsub.s f30, f19, f29, f13, rne # perform operation
fmsub.s f30, f19, f29, f13, rtz # perform operation
fmsub.s f30, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x9611d1a0 # load x3 with value 0x9611d1a0
sw x3, 0(x2) # store 0x9611d1a0 in memory
flw f5, 0(x2) # load 0x9611d1a0 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fmsub.s f13, f19, f5, f1, dyn # perform operation
fmsub.s f13, f19, f5, f1, rdn # perform operation
fmsub.s f13, f19, f5, f1, rmm # perform operation
fmsub.s f13, f19, f5, f1, rne # perform operation
fmsub.s f13, f19, f5, f1, rtz # perform operation
fmsub.s f13, f19, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xa30fb770 # load x3 with value 0xa30fb770
sw x3, 0(x2) # store 0xa30fb770 in memory
flw f29, 0(x2) # load 0xa30fb770 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f31, f8, f29, f5, dyn # perform operation
fmsub.s f31, f8, f29, f5, rdn # perform operation
fmsub.s f31, f8, f29, f5, rmm # perform operation
fmsub.s f31, f8, f29, f5, rne # perform operation
fmsub.s f31, f8, f29, f5, rtz # perform operation
fmsub.s f31, f8, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x49d1c40b # load x3 with value 0x49d1c40b
sw x3, 0(x2) # store 0x49d1c40b in memory
flw f25, 0(x2) # load 0x49d1c40b from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f23, f13, f25, f17, dyn # perform operation
fmsub.s f23, f13, f25, f17, rdn # perform operation
fmsub.s f23, f13, f25, f17, rmm # perform operation
fmsub.s f23, f13, f25, f17, rne # perform operation
fmsub.s f23, f13, f25, f17, rtz # perform operation
fmsub.s f23, f13, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xc8d43608 # load x3 with value 0xc8d43608
sw x3, 0(x2) # store 0xc8d43608 in memory
flw f14, 0(x2) # load 0xc8d43608 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f17, f22, f14, f21, dyn # perform operation
fmsub.s f17, f22, f14, f21, rdn # perform operation
fmsub.s f17, f22, f14, f21, rmm # perform operation
fmsub.s f17, f22, f14, f21, rne # perform operation
fmsub.s f17, f22, f14, f21, rtz # perform operation
fmsub.s f17, f22, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x0ec6cdd2 # load x3 with value 0x0ec6cdd2
sw x3, 0(x2) # store 0x0ec6cdd2 in memory
flw f25, 0(x2) # load 0x0ec6cdd2 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f20, f17, f25, f13, dyn # perform operation
fmsub.s f20, f17, f25, f13, rdn # perform operation
fmsub.s f20, f17, f25, f13, rmm # perform operation
fmsub.s f20, f17, f25, f13, rne # perform operation
fmsub.s f20, f17, f25, f13, rtz # perform operation
fmsub.s f20, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x7c992fb0 # load x3 with value 0x7c992fb0
sw x3, 0(x2) # store 0x7c992fb0 in memory
flw f17, 0(x2) # load 0x7c992fb0 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f22, f10, f17, f13, dyn # perform operation
fmsub.s f22, f10, f17, f13, rdn # perform operation
fmsub.s f22, f10, f17, f13, rmm # perform operation
fmsub.s f22, f10, f17, f13, rne # perform operation
fmsub.s f22, f10, f17, f13, rtz # perform operation
fmsub.s f22, f10, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x770840aa # load x3 with value 0x770840aa
sw x3, 0(x2) # store 0x770840aa in memory
flw f22, 0(x2) # load 0x770840aa from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmsub.s f24, f6, f22, f25, dyn # perform operation
fmsub.s f24, f6, f22, f25, rdn # perform operation
fmsub.s f24, f6, f22, f25, rmm # perform operation
fmsub.s f24, f6, f22, f25, rne # perform operation
fmsub.s f24, f6, f22, f25, rtz # perform operation
fmsub.s f24, f6, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x79443755 # load x3 with value 0x79443755
sw x3, 0(x2) # store 0x79443755 in memory
flw f11, 0(x2) # load 0x79443755 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmsub.s f16, f14, f11, f18, dyn # perform operation
fmsub.s f16, f14, f11, f18, rdn # perform operation
fmsub.s f16, f14, f11, f18, rmm # perform operation
fmsub.s f16, f14, f11, f18, rne # perform operation
fmsub.s f16, f14, f11, f18, rtz # perform operation
fmsub.s f16, f14, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xd0ef91b5 # load x3 with value 0xd0ef91b5
sw x3, 0(x2) # store 0xd0ef91b5 in memory
flw f25, 0(x2) # load 0xd0ef91b5 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f6, f9, f25, f22, dyn # perform operation
fmsub.s f6, f9, f25, f22, rdn # perform operation
fmsub.s f6, f9, f25, f22, rmm # perform operation
fmsub.s f6, f9, f25, f22, rne # perform operation
fmsub.s f6, f9, f25, f22, rtz # perform operation
fmsub.s f6, f9, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x7b088e18 # load x3 with value 0x7b088e18
sw x3, 0(x2) # store 0x7b088e18 in memory
flw f31, 0(x2) # load 0x7b088e18 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmsub.s f22, f10, f31, f17, dyn # perform operation
fmsub.s f22, f10, f31, f17, rdn # perform operation
fmsub.s f22, f10, f31, f17, rmm # perform operation
fmsub.s f22, f10, f31, f17, rne # perform operation
fmsub.s f22, f10, f31, f17, rtz # perform operation
fmsub.s f22, f10, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xe2320404 # load x3 with value 0xe2320404
sw x3, 0(x2) # store 0xe2320404 in memory
flw f28, 0(x2) # load 0xe2320404 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f5, f29, f28, f12, dyn # perform operation
fmsub.s f5, f29, f28, f12, rdn # perform operation
fmsub.s f5, f29, f28, f12, rmm # perform operation
fmsub.s f5, f29, f28, f12, rne # perform operation
fmsub.s f5, f29, f28, f12, rtz # perform operation
fmsub.s f5, f29, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f28, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xfc3dcf20 # load x3 with value 0xfc3dcf20
sw x3, 0(x2) # store 0xfc3dcf20 in memory
flw f16, 0(x2) # load 0xfc3dcf20 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmsub.s f5, f21, f16, f27, dyn # perform operation
fmsub.s f5, f21, f16, f27, rdn # perform operation
fmsub.s f5, f21, f16, f27, rmm # perform operation
fmsub.s f5, f21, f16, f27, rne # perform operation
fmsub.s f5, f21, f16, f27, rtz # perform operation
fmsub.s f5, f21, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x0421eca1 # load x3 with value 0x0421eca1
sw x3, 0(x2) # store 0x0421eca1 in memory
flw f11, 0(x2) # load 0x0421eca1 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmsub.s f2, f17, f11, f1, dyn # perform operation
fmsub.s f2, f17, f11, f1, rdn # perform operation
fmsub.s f2, f17, f11, f1, rmm # perform operation
fmsub.s f2, f17, f11, f1, rne # perform operation
fmsub.s f2, f17, f11, f1, rtz # perform operation
fmsub.s f2, f17, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xc2e79e82 # load x3 with value 0xc2e79e82
sw x3, 0(x2) # store 0xc2e79e82 in memory
flw f14, 0(x2) # load 0xc2e79e82 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
fmsub.s f9, f11, f14, f5, dyn # perform operation
fmsub.s f9, f11, f14, f5, rdn # perform operation
fmsub.s f9, f11, f14, f5, rmm # perform operation
fmsub.s f9, f11, f14, f5, rne # perform operation
fmsub.s f9, f11, f14, f5, rtz # perform operation
fmsub.s f9, f11, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x67648b19 # load x3 with value 0x67648b19
sw x3, 0(x2) # store 0x67648b19 in memory
flw f12, 0(x2) # load 0x67648b19 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmsub.s f6, f10, f12, f16, dyn # perform operation
fmsub.s f6, f10, f12, f16, rdn # perform operation
fmsub.s f6, f10, f12, f16, rmm # perform operation
fmsub.s f6, f10, f12, f16, rne # perform operation
fmsub.s f6, f10, f12, f16, rtz # perform operation
fmsub.s f6, f10, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x3aa752d3 # load x3 with value 0x3aa752d3
sw x3, 0(x2) # store 0x3aa752d3 in memory
flw f29, 0(x2) # load 0x3aa752d3 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmsub.s f14, f6, f29, f3, dyn # perform operation
fmsub.s f14, f6, f29, f3, rdn # perform operation
fmsub.s f14, f6, f29, f3, rmm # perform operation
fmsub.s f14, f6, f29, f3, rne # perform operation
fmsub.s f14, f6, f29, f3, rtz # perform operation
fmsub.s f14, f6, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f6, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x2571a113 # load x3 with value 0x2571a113
sw x3, 0(x2) # store 0x2571a113 in memory
flw f17, 0(x2) # load 0x2571a113 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmsub.s f20, f19, f17, f2, dyn # perform operation
fmsub.s f20, f19, f17, f2, rdn # perform operation
fmsub.s f20, f19, f17, f2, rmm # perform operation
fmsub.s f20, f19, f17, f2, rne # perform operation
fmsub.s f20, f19, f17, f2, rtz # perform operation
fmsub.s f20, f19, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f19, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x72e759da # load x3 with value 0x72e759da
sw x3, 0(x2) # store 0x72e759da in memory
flw f28, 0(x2) # load 0x72e759da from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmsub.s f11, f30, f28, f25, dyn # perform operation
fmsub.s f11, f30, f28, f25, rdn # perform operation
fmsub.s f11, f30, f28, f25, rmm # perform operation
fmsub.s f11, f30, f28, f25, rne # perform operation
fmsub.s f11, f30, f28, f25, rtz # perform operation
fmsub.s f11, f30, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x341ba5ea # load x3 with value 0x341ba5ea
sw x3, 0(x2) # store 0x341ba5ea in memory
flw f26, 0(x2) # load 0x341ba5ea from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f28, f19, f26, f16, dyn # perform operation
fmsub.s f28, f19, f26, f16, rdn # perform operation
fmsub.s f28, f19, f26, f16, rmm # perform operation
fmsub.s f28, f19, f26, f16, rne # perform operation
fmsub.s f28, f19, f26, f16, rtz # perform operation
fmsub.s f28, f19, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xeb00a47c # load x3 with value 0xeb00a47c
sw x3, 0(x2) # store 0xeb00a47c in memory
flw f15, 0(x2) # load 0xeb00a47c from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f5, f12, f15, f16, dyn # perform operation
fmsub.s f5, f12, f15, f16, rdn # perform operation
fmsub.s f5, f12, f15, f16, rmm # perform operation
fmsub.s f5, f12, f15, f16, rne # perform operation
fmsub.s f5, f12, f15, f16, rtz # perform operation
fmsub.s f5, f12, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f12, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x59b688b5 # load x3 with value 0x59b688b5
sw x3, 0(x2) # store 0x59b688b5 in memory
flw f27, 0(x2) # load 0x59b688b5 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fmsub.s f24, f2, f27, f29, dyn # perform operation
fmsub.s f24, f2, f27, f29, rdn # perform operation
fmsub.s f24, f2, f27, f29, rmm # perform operation
fmsub.s f24, f2, f27, f29, rne # perform operation
fmsub.s f24, f2, f27, f29, rtz # perform operation
fmsub.s f24, f2, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f2, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x081a933b # load x3 with value 0x081a933b
sw x3, 0(x2) # store 0x081a933b in memory
flw f21, 0(x2) # load 0x081a933b from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f29, f20, f21, f24, dyn # perform operation
fmsub.s f29, f20, f21, f24, rdn # perform operation
fmsub.s f29, f20, f21, f24, rmm # perform operation
fmsub.s f29, f20, f21, f24, rne # perform operation
fmsub.s f29, f20, f21, f24, rtz # perform operation
fmsub.s f29, f20, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f20, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0xb617c5a7 # load x3 with value 0xb617c5a7
sw x3, 0(x2) # store 0xb617c5a7 in memory
flw f14, 0(x2) # load 0xb617c5a7 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmsub.s f8, f2, f14, f27, dyn # perform operation
fmsub.s f8, f2, f14, f27, rdn # perform operation
fmsub.s f8, f2, f14, f27, rmm # perform operation
fmsub.s f8, f2, f14, f27, rne # perform operation
fmsub.s f8, f2, f14, f27, rtz # perform operation
fmsub.s f8, f2, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f2, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f2, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f2, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f2, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f2, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x2e99057c # load x3 with value 0x2e99057c
sw x3, 0(x2) # store 0x2e99057c in memory
flw f24, 0(x2) # load 0x2e99057c from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmsub.s f18, f31, f24, f9, dyn # perform operation
fmsub.s f18, f31, f24, f9, rdn # perform operation
fmsub.s f18, f31, f24, f9, rmm # perform operation
fmsub.s f18, f31, f24, f9, rne # perform operation
fmsub.s f18, f31, f24, f9, rtz # perform operation
fmsub.s f18, f31, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x15c9c81c # load x3 with value 0x15c9c81c
sw x3, 0(x2) # store 0x15c9c81c in memory
flw f3, 0(x2) # load 0x15c9c81c from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f28, f7, f3, f16, dyn # perform operation
fmsub.s f28, f7, f3, f16, rdn # perform operation
fmsub.s f28, f7, f3, f16, rmm # perform operation
fmsub.s f28, f7, f3, f16, rne # perform operation
fmsub.s f28, f7, f3, f16, rtz # perform operation
fmsub.s f28, f7, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x9faa68d2 # load x3 with value 0x9faa68d2
sw x3, 0(x2) # store 0x9faa68d2 in memory
flw f6, 0(x2) # load 0x9faa68d2 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmsub.s f17, f18, f6, f24, dyn # perform operation
fmsub.s f17, f18, f6, f24, rdn # perform operation
fmsub.s f17, f18, f6, f24, rmm # perform operation
fmsub.s f17, f18, f6, f24, rne # perform operation
fmsub.s f17, f18, f6, f24, rtz # perform operation
fmsub.s f17, f18, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f18, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f18, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f18, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f18, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f18, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x8a917109 # load x3 with value 0x8a917109
sw x3, 0(x2) # store 0x8a917109 in memory
flw f30, 0(x2) # load 0x8a917109 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmsub.s f17, f19, f30, f2, dyn # perform operation
fmsub.s f17, f19, f30, f2, rdn # perform operation
fmsub.s f17, f19, f30, f2, rmm # perform operation
fmsub.s f17, f19, f30, f2, rne # perform operation
fmsub.s f17, f19, f30, f2, rtz # perform operation
fmsub.s f17, f19, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x7fc753fe # load x3 with value 0x7fc753fe
sw x3, 0(x2) # store 0x7fc753fe in memory
flw f13, 0(x2) # load 0x7fc753fe from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f6, f10, f13, f5, dyn # perform operation
fmsub.s f6, f10, f13, f5, rdn # perform operation
fmsub.s f6, f10, f13, f5, rmm # perform operation
fmsub.s f6, f10, f13, f5, rne # perform operation
fmsub.s f6, f10, f13, f5, rtz # perform operation
fmsub.s f6, f10, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x203e4896 # load x3 with value 0x203e4896
sw x3, 0(x2) # store 0x203e4896 in memory
flw f28, 0(x2) # load 0x203e4896 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmsub.s f9, f18, f28, f24, dyn # perform operation
fmsub.s f9, f18, f28, f24, rdn # perform operation
fmsub.s f9, f18, f28, f24, rmm # perform operation
fmsub.s f9, f18, f28, f24, rne # perform operation
fmsub.s f9, f18, f28, f24, rtz # perform operation
fmsub.s f9, f18, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x3b5c2ca3 # load x3 with value 0x3b5c2ca3
sw x3, 0(x2) # store 0x3b5c2ca3 in memory
flw f6, 0(x2) # load 0x3b5c2ca3 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f27, f16, f6, f8, dyn # perform operation
fmsub.s f27, f16, f6, f8, rdn # perform operation
fmsub.s f27, f16, f6, f8, rmm # perform operation
fmsub.s f27, f16, f6, f8, rne # perform operation
fmsub.s f27, f16, f6, f8, rtz # perform operation
fmsub.s f27, f16, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x62b1b419 # load x3 with value 0x62b1b419
sw x3, 0(x2) # store 0x62b1b419 in memory
flw f5, 0(x2) # load 0x62b1b419 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f28, f13, f5, f17, dyn # perform operation
fmsub.s f28, f13, f5, f17, rdn # perform operation
fmsub.s f28, f13, f5, f17, rmm # perform operation
fmsub.s f28, f13, f5, f17, rne # perform operation
fmsub.s f28, f13, f5, f17, rtz # perform operation
fmsub.s f28, f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f5, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x3729a248 # load x3 with value 0x3729a248
sw x3, 0(x2) # store 0x3729a248 in memory
flw f3, 0(x2) # load 0x3729a248 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmsub.s f16, f24, f3, f28, dyn # perform operation
fmsub.s f16, f24, f3, f28, rdn # perform operation
fmsub.s f16, f24, f3, f28, rmm # perform operation
fmsub.s f16, f24, f3, f28, rne # perform operation
fmsub.s f16, f24, f3, f28, rtz # perform operation
fmsub.s f16, f24, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x0507b9ad # load x3 with value 0x0507b9ad
sw x3, 0(x2) # store 0x0507b9ad in memory
flw f30, 0(x2) # load 0x0507b9ad from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f22, f8, f30, f13, dyn # perform operation
fmsub.s f22, f8, f30, f13, rdn # perform operation
fmsub.s f22, f8, f30, f13, rmm # perform operation
fmsub.s f22, f8, f30, f13, rne # perform operation
fmsub.s f22, f8, f30, f13, rtz # perform operation
fmsub.s f22, f8, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x5f0b0d78 # load x3 with value 0x5f0b0d78
sw x3, 0(x2) # store 0x5f0b0d78 in memory
flw f15, 0(x2) # load 0x5f0b0d78 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmsub.s f24, f23, f15, f16, dyn # perform operation
fmsub.s f24, f23, f15, f16, rdn # perform operation
fmsub.s f24, f23, f15, f16, rmm # perform operation
fmsub.s f24, f23, f15, f16, rne # perform operation
fmsub.s f24, f23, f15, f16, rtz # perform operation
fmsub.s f24, f23, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xf1ab5a47 # load x3 with value 0xf1ab5a47
sw x3, 0(x2) # store 0xf1ab5a47 in memory
flw f10, 0(x2) # load 0xf1ab5a47 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f31, f22, f10, f24, dyn # perform operation
fmsub.s f31, f22, f10, f24, rdn # perform operation
fmsub.s f31, f22, f10, f24, rmm # perform operation
fmsub.s f31, f22, f10, f24, rne # perform operation
fmsub.s f31, f22, f10, f24, rtz # perform operation
fmsub.s f31, f22, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x74ba7f1a # load x3 with value 0x74ba7f1a
sw x3, 0(x2) # store 0x74ba7f1a in memory
flw f1, 0(x2) # load 0x74ba7f1a from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f9, f20, f1, f30, dyn # perform operation
fmsub.s f9, f20, f1, f30, rdn # perform operation
fmsub.s f9, f20, f1, f30, rmm # perform operation
fmsub.s f9, f20, f1, f30, rne # perform operation
fmsub.s f9, f20, f1, f30, rtz # perform operation
fmsub.s f9, f20, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f20, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xc0393431 # load x3 with value 0xc0393431
sw x3, 0(x2) # store 0xc0393431 in memory
flw f20, 0(x2) # load 0xc0393431 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmsub.s f7, f1, f20, f8, dyn # perform operation
fmsub.s f7, f1, f20, f8, rdn # perform operation
fmsub.s f7, f1, f20, f8, rmm # perform operation
fmsub.s f7, f1, f20, f8, rne # perform operation
fmsub.s f7, f1, f20, f8, rtz # perform operation
fmsub.s f7, f1, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xd96f22fe # load x3 with value 0xd96f22fe
sw x3, 0(x2) # store 0xd96f22fe in memory
flw f10, 0(x2) # load 0xd96f22fe from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmsub.s f21, f30, f10, f12, dyn # perform operation
fmsub.s f21, f30, f10, f12, rdn # perform operation
fmsub.s f21, f30, f10, f12, rmm # perform operation
fmsub.s f21, f30, f10, f12, rne # perform operation
fmsub.s f21, f30, f10, f12, rtz # perform operation
fmsub.s f21, f30, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x1d5a9f05 # load x3 with value 0x1d5a9f05
sw x3, 0(x2) # store 0x1d5a9f05 in memory
flw f3, 0(x2) # load 0x1d5a9f05 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fmsub.s f23, f11, f3, f14, dyn # perform operation
fmsub.s f23, f11, f3, f14, rdn # perform operation
fmsub.s f23, f11, f3, f14, rmm # perform operation
fmsub.s f23, f11, f3, f14, rne # perform operation
fmsub.s f23, f11, f3, f14, rtz # perform operation
fmsub.s f23, f11, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x1d9c540d # load x3 with value 0x1d9c540d
sw x3, 0(x2) # store 0x1d9c540d in memory
flw f9, 0(x2) # load 0x1d9c540d from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fmsub.s f18, f30, f9, f13, dyn # perform operation
fmsub.s f18, f30, f9, f13, rdn # perform operation
fmsub.s f18, f30, f9, f13, rmm # perform operation
fmsub.s f18, f30, f9, f13, rne # perform operation
fmsub.s f18, f30, f9, f13, rtz # perform operation
fmsub.s f18, f30, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xdd18e663 # load x3 with value 0xdd18e663
sw x3, 0(x2) # store 0xdd18e663 in memory
flw f17, 0(x2) # load 0xdd18e663 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmsub.s f15, f25, f17, f5, dyn # perform operation
fmsub.s f15, f25, f17, f5, rdn # perform operation
fmsub.s f15, f25, f17, f5, rmm # perform operation
fmsub.s f15, f25, f17, f5, rne # perform operation
fmsub.s f15, f25, f17, f5, rtz # perform operation
fmsub.s f15, f25, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f17, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xfd4b2b2f # load x3 with value 0xfd4b2b2f
sw x3, 0(x2) # store 0xfd4b2b2f in memory
flw f14, 0(x2) # load 0xfd4b2b2f from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmsub.s f30, f28, f14, f16, dyn # perform operation
fmsub.s f30, f28, f14, f16, rdn # perform operation
fmsub.s f30, f28, f14, f16, rmm # perform operation
fmsub.s f30, f28, f14, f16, rne # perform operation
fmsub.s f30, f28, f14, f16, rtz # perform operation
fmsub.s f30, f28, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f28, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x1018a79d # load x3 with value 0x1018a79d
sw x3, 0(x2) # store 0x1018a79d in memory
flw f15, 0(x2) # load 0x1018a79d from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f29, f18, f15, f23, dyn # perform operation
fmsub.s f29, f18, f15, f23, rdn # perform operation
fmsub.s f29, f18, f15, f23, rmm # perform operation
fmsub.s f29, f18, f15, f23, rne # perform operation
fmsub.s f29, f18, f15, f23, rtz # perform operation
fmsub.s f29, f18, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xea16260d # load x3 with value 0xea16260d
sw x3, 0(x2) # store 0xea16260d in memory
flw f9, 0(x2) # load 0xea16260d from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f1, f28, f9, f31, dyn # perform operation
fmsub.s f1, f28, f9, f31, rdn # perform operation
fmsub.s f1, f28, f9, f31, rmm # perform operation
fmsub.s f1, f28, f9, f31, rne # perform operation
fmsub.s f1, f28, f9, f31, rtz # perform operation
fmsub.s f1, f28, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0xa798b1d6 # load x3 with value 0xa798b1d6
sw x3, 0(x2) # store 0xa798b1d6 in memory
flw f26, 0(x2) # load 0xa798b1d6 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmsub.s f21, f14, f26, f27, dyn # perform operation
fmsub.s f21, f14, f26, f27, rdn # perform operation
fmsub.s f21, f14, f26, f27, rmm # perform operation
fmsub.s f21, f14, f26, f27, rne # perform operation
fmsub.s f21, f14, f26, f27, rtz # perform operation
fmsub.s f21, f14, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0xf9fb1616 # load x3 with value 0xf9fb1616
sw x3, 0(x2) # store 0xf9fb1616 in memory
flw f18, 0(x2) # load 0xf9fb1616 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmsub.s f14, f3, f18, f1, dyn # perform operation
fmsub.s f14, f3, f18, f1, rdn # perform operation
fmsub.s f14, f3, f18, f1, rmm # perform operation
fmsub.s f14, f3, f18, f1, rne # perform operation
fmsub.s f14, f3, f18, f1, rtz # perform operation
fmsub.s f14, f3, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x25d2741d # load x3 with value 0x25d2741d
sw x3, 0(x2) # store 0x25d2741d in memory
flw f1, 0(x2) # load 0x25d2741d from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmsub.s f30, f2, f1, f3, dyn # perform operation
fmsub.s f30, f2, f1, f3, rdn # perform operation
fmsub.s f30, f2, f1, f3, rmm # perform operation
fmsub.s f30, f2, f1, f3, rne # perform operation
fmsub.s f30, f2, f1, f3, rtz # perform operation
fmsub.s f30, f2, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xe3ee4143 # load x3 with value 0xe3ee4143
sw x3, 0(x2) # store 0xe3ee4143 in memory
flw f6, 0(x2) # load 0xe3ee4143 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmsub.s f17, f5, f6, f23, dyn # perform operation
fmsub.s f17, f5, f6, f23, rdn # perform operation
fmsub.s f17, f5, f6, f23, rmm # perform operation
fmsub.s f17, f5, f6, f23, rne # perform operation
fmsub.s f17, f5, f6, f23, rtz # perform operation
fmsub.s f17, f5, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x186eb89c # load x3 with value 0x186eb89c
sw x3, 0(x2) # store 0x186eb89c in memory
flw f8, 0(x2) # load 0x186eb89c from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmsub.s f14, f12, f8, f2, dyn # perform operation
fmsub.s f14, f12, f8, f2, rdn # perform operation
fmsub.s f14, f12, f8, f2, rmm # perform operation
fmsub.s f14, f12, f8, f2, rne # perform operation
fmsub.s f14, f12, f8, f2, rtz # perform operation
fmsub.s f14, f12, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x794ba334 # load x3 with value 0x794ba334
sw x3, 0(x2) # store 0x794ba334 in memory
flw f11, 0(x2) # load 0x794ba334 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmsub.s f10, f2, f11, f23, dyn # perform operation
fmsub.s f10, f2, f11, f23, rdn # perform operation
fmsub.s f10, f2, f11, f23, rmm # perform operation
fmsub.s f10, f2, f11, f23, rne # perform operation
fmsub.s f10, f2, f11, f23, rtz # perform operation
fmsub.s f10, f2, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f2, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x290699c2 # load x3 with value 0x290699c2
sw x3, 0(x2) # store 0x290699c2 in memory
flw f30, 0(x2) # load 0x290699c2 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fmsub.s f5, f20, f30, f7, dyn # perform operation
fmsub.s f5, f20, f30, f7, rdn # perform operation
fmsub.s f5, f20, f30, f7, rmm # perform operation
fmsub.s f5, f20, f30, f7, rne # perform operation
fmsub.s f5, f20, f30, f7, rtz # perform operation
fmsub.s f5, f20, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x74b93a89 # load x3 with value 0x74b93a89
sw x3, 0(x2) # store 0x74b93a89 in memory
flw f15, 0(x2) # load 0x74b93a89 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmsub.s f24, f27, f15, f18, dyn # perform operation
fmsub.s f24, f27, f15, f18, rdn # perform operation
fmsub.s f24, f27, f15, f18, rmm # perform operation
fmsub.s f24, f27, f15, f18, rne # perform operation
fmsub.s f24, f27, f15, f18, rtz # perform operation
fmsub.s f24, f27, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xf43dfe53 # load x3 with value 0xf43dfe53
sw x3, 0(x2) # store 0xf43dfe53 in memory
flw f15, 0(x2) # load 0xf43dfe53 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fmsub.s f19, f25, f15, f31, dyn # perform operation
fmsub.s f19, f25, f15, f31, rdn # perform operation
fmsub.s f19, f25, f15, f31, rmm # perform operation
fmsub.s f19, f25, f15, f31, rne # perform operation
fmsub.s f19, f25, f15, f31, rtz # perform operation
fmsub.s f19, f25, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f15, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x9b0b7d39 # load x3 with value 0x9b0b7d39
sw x3, 0(x2) # store 0x9b0b7d39 in memory
flw f31, 0(x2) # load 0x9b0b7d39 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmsub.s f19, f17, f31, f29, dyn # perform operation
fmsub.s f19, f17, f31, f29, rdn # perform operation
fmsub.s f19, f17, f31, f29, rmm # perform operation
fmsub.s f19, f17, f31, f29, rne # perform operation
fmsub.s f19, f17, f31, f29, rtz # perform operation
fmsub.s f19, f17, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f31, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x6497e932 # load x3 with value 0x6497e932
sw x3, 0(x2) # store 0x6497e932 in memory
flw f28, 0(x2) # load 0x6497e932 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f20, f23, f28, f8, dyn # perform operation
fmsub.s f20, f23, f28, f8, rdn # perform operation
fmsub.s f20, f23, f28, f8, rmm # perform operation
fmsub.s f20, f23, f28, f8, rne # perform operation
fmsub.s f20, f23, f28, f8, rtz # perform operation
fmsub.s f20, f23, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x9c5ca835 # load x3 with value 0x9c5ca835
sw x3, 0(x2) # store 0x9c5ca835 in memory
flw f7, 0(x2) # load 0x9c5ca835 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmsub.s f20, f16, f7, f23, dyn # perform operation
fmsub.s f20, f16, f7, f23, rdn # perform operation
fmsub.s f20, f16, f7, f23, rmm # perform operation
fmsub.s f20, f16, f7, f23, rne # perform operation
fmsub.s f20, f16, f7, f23, rtz # perform operation
fmsub.s f20, f16, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f16, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x86c41e43 # load x3 with value 0x86c41e43
sw x3, 0(x2) # store 0x86c41e43 in memory
flw f15, 0(x2) # load 0x86c41e43 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmsub.s f12, f30, f15, f8, dyn # perform operation
fmsub.s f12, f30, f15, f8, rdn # perform operation
fmsub.s f12, f30, f15, f8, rmm # perform operation
fmsub.s f12, f30, f15, f8, rne # perform operation
fmsub.s f12, f30, f15, f8, rtz # perform operation
fmsub.s f12, f30, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f30, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f30, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f30, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f30, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f30, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x218e0aa5 # load x3 with value 0x218e0aa5
sw x3, 0(x2) # store 0x218e0aa5 in memory
flw f8, 0(x2) # load 0x218e0aa5 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmsub.s f31, f21, f8, f1, dyn # perform operation
fmsub.s f31, f21, f8, f1, rdn # perform operation
fmsub.s f31, f21, f8, f1, rmm # perform operation
fmsub.s f31, f21, f8, f1, rne # perform operation
fmsub.s f31, f21, f8, f1, rtz # perform operation
fmsub.s f31, f21, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xb28e44f7 # load x3 with value 0xb28e44f7
sw x3, 0(x2) # store 0xb28e44f7 in memory
flw f1, 0(x2) # load 0xb28e44f7 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f24, f31, f1, f10, dyn # perform operation
fmsub.s f24, f31, f1, f10, rdn # perform operation
fmsub.s f24, f31, f1, f10, rmm # perform operation
fmsub.s f24, f31, f1, f10, rne # perform operation
fmsub.s f24, f31, f1, f10, rtz # perform operation
fmsub.s f24, f31, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xf86b4a22 # load x3 with value 0xf86b4a22
sw x3, 0(x2) # store 0xf86b4a22 in memory
flw f26, 0(x2) # load 0xf86b4a22 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f9, f19, f26, f3, dyn # perform operation
fmsub.s f9, f19, f26, f3, rdn # perform operation
fmsub.s f9, f19, f26, f3, rmm # perform operation
fmsub.s f9, f19, f26, f3, rne # perform operation
fmsub.s f9, f19, f26, f3, rtz # perform operation
fmsub.s f9, f19, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x7c742c4f # load x3 with value 0x7c742c4f
sw x3, 0(x2) # store 0x7c742c4f in memory
flw f11, 0(x2) # load 0x7c742c4f from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmsub.s f6, f30, f11, f1, dyn # perform operation
fmsub.s f6, f30, f11, f1, rdn # perform operation
fmsub.s f6, f30, f11, f1, rmm # perform operation
fmsub.s f6, f30, f11, f1, rne # perform operation
fmsub.s f6, f30, f11, f1, rtz # perform operation
fmsub.s f6, f30, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xf6994675 # load x3 with value 0xf6994675
sw x3, 0(x2) # store 0xf6994675 in memory
flw f8, 0(x2) # load 0xf6994675 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f7, f18, f8, f21, dyn # perform operation
fmsub.s f7, f18, f8, f21, rdn # perform operation
fmsub.s f7, f18, f8, f21, rmm # perform operation
fmsub.s f7, f18, f8, f21, rne # perform operation
fmsub.s f7, f18, f8, f21, rtz # perform operation
fmsub.s f7, f18, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f18, f8, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x07dc7b2c # load x3 with value 0x07dc7b2c
sw x3, 0(x2) # store 0x07dc7b2c in memory
flw f1, 0(x2) # load 0x07dc7b2c from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmsub.s f12, f15, f1, f29, dyn # perform operation
fmsub.s f12, f15, f1, f29, rdn # perform operation
fmsub.s f12, f15, f1, f29, rmm # perform operation
fmsub.s f12, f15, f1, f29, rne # perform operation
fmsub.s f12, f15, f1, f29, rtz # perform operation
fmsub.s f12, f15, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f1, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x023842e3 # load x3 with value 0x023842e3
sw x3, 0(x2) # store 0x023842e3 in memory
flw f25, 0(x2) # load 0x023842e3 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fmsub.s f7, f13, f25, f31, dyn # perform operation
fmsub.s f7, f13, f25, f31, rdn # perform operation
fmsub.s f7, f13, f25, f31, rmm # perform operation
fmsub.s f7, f13, f25, f31, rne # perform operation
fmsub.s f7, f13, f25, f31, rtz # perform operation
fmsub.s f7, f13, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f25, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xa4a9fc6b # load x3 with value 0xa4a9fc6b
sw x3, 0(x2) # store 0xa4a9fc6b in memory
flw f13, 0(x2) # load 0xa4a9fc6b from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f23, f27, f13, f22, dyn # perform operation
fmsub.s f23, f27, f13, f22, rdn # perform operation
fmsub.s f23, f27, f13, f22, rmm # perform operation
fmsub.s f23, f27, f13, f22, rne # perform operation
fmsub.s f23, f27, f13, f22, rtz # perform operation
fmsub.s f23, f27, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xdbc31249 # load x3 with value 0xdbc31249
sw x3, 0(x2) # store 0xdbc31249 in memory
flw f11, 0(x2) # load 0xdbc31249 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f27, f31, f11, f24, dyn # perform operation
fmsub.s f27, f31, f11, f24, rdn # perform operation
fmsub.s f27, f31, f11, f24, rmm # perform operation
fmsub.s f27, f31, f11, f24, rne # perform operation
fmsub.s f27, f31, f11, f24, rtz # perform operation
fmsub.s f27, f31, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x9ca6fa53 # load x3 with value 0x9ca6fa53
sw x3, 0(x2) # store 0x9ca6fa53 in memory
flw f29, 0(x2) # load 0x9ca6fa53 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f31, f25, f29, f12, dyn # perform operation
fmsub.s f31, f25, f29, f12, rdn # perform operation
fmsub.s f31, f25, f29, f12, rmm # perform operation
fmsub.s f31, f25, f29, f12, rne # perform operation
fmsub.s f31, f25, f29, f12, rtz # perform operation
fmsub.s f31, f25, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x2913eafd # load x3 with value 0x2913eafd
sw x3, 0(x2) # store 0x2913eafd in memory
flw f3, 0(x2) # load 0x2913eafd from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmsub.s f28, f26, f3, f5, dyn # perform operation
fmsub.s f28, f26, f3, f5, rdn # perform operation
fmsub.s f28, f26, f3, f5, rmm # perform operation
fmsub.s f28, f26, f3, f5, rne # perform operation
fmsub.s f28, f26, f3, f5, rtz # perform operation
fmsub.s f28, f26, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xd5fcbe1a # load x3 with value 0xd5fcbe1a
sw x3, 0(x2) # store 0xd5fcbe1a in memory
flw f29, 0(x2) # load 0xd5fcbe1a from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmsub.s f16, f10, f29, f9, dyn # perform operation
fmsub.s f16, f10, f29, f9, rdn # perform operation
fmsub.s f16, f10, f29, f9, rmm # perform operation
fmsub.s f16, f10, f29, f9, rne # perform operation
fmsub.s f16, f10, f29, f9, rtz # perform operation
fmsub.s f16, f10, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f10, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f10, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f10, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f10, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f10, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x8f7317d0 # load x3 with value 0x8f7317d0
sw x3, 0(x2) # store 0x8f7317d0 in memory
flw f30, 0(x2) # load 0x8f7317d0 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fmsub.s f17, f8, f30, f27, dyn # perform operation
fmsub.s f17, f8, f30, f27, rdn # perform operation
fmsub.s f17, f8, f30, f27, rmm # perform operation
fmsub.s f17, f8, f30, f27, rne # perform operation
fmsub.s f17, f8, f30, f27, rtz # perform operation
fmsub.s f17, f8, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x13c75bb4 # load x3 with value 0x13c75bb4
sw x3, 0(x2) # store 0x13c75bb4 in memory
flw f25, 0(x2) # load 0x13c75bb4 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmsub.s f16, f3, f25, f2, dyn # perform operation
fmsub.s f16, f3, f25, f2, rdn # perform operation
fmsub.s f16, f3, f25, f2, rmm # perform operation
fmsub.s f16, f3, f25, f2, rne # perform operation
fmsub.s f16, f3, f25, f2, rtz # perform operation
fmsub.s f16, f3, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xd1242470 # load x3 with value 0xd1242470
sw x3, 0(x2) # store 0xd1242470 in memory
flw f25, 0(x2) # load 0xd1242470 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmsub.s f22, f1, f25, f13, dyn # perform operation
fmsub.s f22, f1, f25, f13, rdn # perform operation
fmsub.s f22, f1, f25, f13, rmm # perform operation
fmsub.s f22, f1, f25, f13, rne # perform operation
fmsub.s f22, f1, f25, f13, rtz # perform operation
fmsub.s f22, f1, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f1, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0xd872159f # load x3 with value 0xd872159f
sw x3, 0(x2) # store 0xd872159f in memory
flw f17, 0(x2) # load 0xd872159f from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f14, f22, f17, f20, dyn # perform operation
fmsub.s f14, f22, f17, f20, rdn # perform operation
fmsub.s f14, f22, f17, f20, rmm # perform operation
fmsub.s f14, f22, f17, f20, rne # perform operation
fmsub.s f14, f22, f17, f20, rtz # perform operation
fmsub.s f14, f22, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f22, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f22, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f22, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f22, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f22, f17, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x58aff366 # load x3 with value 0x58aff366
sw x3, 0(x2) # store 0x58aff366 in memory
flw f19, 0(x2) # load 0x58aff366 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmsub.s f15, f2, f19, f12, dyn # perform operation
fmsub.s f15, f2, f19, f12, rdn # perform operation
fmsub.s f15, f2, f19, f12, rmm # perform operation
fmsub.s f15, f2, f19, f12, rne # perform operation
fmsub.s f15, f2, f19, f12, rtz # perform operation
fmsub.s f15, f2, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x8d3f27fc # load x3 with value 0x8d3f27fc
sw x3, 0(x2) # store 0x8d3f27fc in memory
flw f13, 0(x2) # load 0x8d3f27fc from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmsub.s f3, f22, f13, f31, dyn # perform operation
fmsub.s f3, f22, f13, f31, rdn # perform operation
fmsub.s f3, f22, f13, f31, rmm # perform operation
fmsub.s f3, f22, f13, f31, rne # perform operation
fmsub.s f3, f22, f13, f31, rtz # perform operation
fmsub.s f3, f22, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f22, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f22, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f22, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f22, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f22, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xc8c97c3a # load x3 with value 0xc8c97c3a
sw x3, 0(x2) # store 0xc8c97c3a in memory
flw f17, 0(x2) # load 0xc8c97c3a from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmsub.s f15, f11, f17, f10, dyn # perform operation
fmsub.s f15, f11, f17, f10, rdn # perform operation
fmsub.s f15, f11, f17, f10, rmm # perform operation
fmsub.s f15, f11, f17, f10, rne # perform operation
fmsub.s f15, f11, f17, f10, rtz # perform operation
fmsub.s f15, f11, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f11, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x111d0c0f # load x3 with value 0x111d0c0f
sw x3, 0(x2) # store 0x111d0c0f in memory
flw f13, 0(x2) # load 0x111d0c0f from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f27, f5, f13, f31, dyn # perform operation
fmsub.s f27, f5, f13, f31, rdn # perform operation
fmsub.s f27, f5, f13, f31, rmm # perform operation
fmsub.s f27, f5, f13, f31, rne # perform operation
fmsub.s f27, f5, f13, f31, rtz # perform operation
fmsub.s f27, f5, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xcc114d32 # load x3 with value 0xcc114d32
sw x3, 0(x2) # store 0xcc114d32 in memory
flw f16, 0(x2) # load 0xcc114d32 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmsub.s f31, f5, f16, f26, dyn # perform operation
fmsub.s f31, f5, f16, f26, rdn # perform operation
fmsub.s f31, f5, f16, f26, rmm # perform operation
fmsub.s f31, f5, f16, f26, rne # perform operation
fmsub.s f31, f5, f16, f26, rtz # perform operation
fmsub.s f31, f5, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x93e69e5c # load x3 with value 0x93e69e5c
sw x3, 0(x2) # store 0x93e69e5c in memory
flw f12, 0(x2) # load 0x93e69e5c from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f9, f22, f12, f13, dyn # perform operation
fmsub.s f9, f22, f12, f13, rdn # perform operation
fmsub.s f9, f22, f12, f13, rmm # perform operation
fmsub.s f9, f22, f12, f13, rne # perform operation
fmsub.s f9, f22, f12, f13, rtz # perform operation
fmsub.s f9, f22, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xfa982805 # load x3 with value 0xfa982805
sw x3, 0(x2) # store 0xfa982805 in memory
flw f25, 0(x2) # load 0xfa982805 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fmsub.s f18, f21, f25, f30, dyn # perform operation
fmsub.s f18, f21, f25, f30, rdn # perform operation
fmsub.s f18, f21, f25, f30, rmm # perform operation
fmsub.s f18, f21, f25, f30, rne # perform operation
fmsub.s f18, f21, f25, f30, rtz # perform operation
fmsub.s f18, f21, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x8e8c0c60 # load x3 with value 0x8e8c0c60
sw x3, 0(x2) # store 0x8e8c0c60 in memory
flw f12, 0(x2) # load 0x8e8c0c60 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f18, f13, f12, f21, dyn # perform operation
fmsub.s f18, f13, f12, f21, rdn # perform operation
fmsub.s f18, f13, f12, f21, rmm # perform operation
fmsub.s f18, f13, f12, f21, rne # perform operation
fmsub.s f18, f13, f12, f21, rtz # perform operation
fmsub.s f18, f13, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x681a11bb # load x3 with value 0x681a11bb
sw x3, 0(x2) # store 0x681a11bb in memory
flw f14, 0(x2) # load 0x681a11bb from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmsub.s f1, f5, f14, f16, dyn # perform operation
fmsub.s f1, f5, f14, f16, rdn # perform operation
fmsub.s f1, f5, f14, f16, rmm # perform operation
fmsub.s f1, f5, f14, f16, rne # perform operation
fmsub.s f1, f5, f14, f16, rtz # perform operation
fmsub.s f1, f5, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x34f50838 # load x3 with value 0x34f50838
sw x3, 0(x2) # store 0x34f50838 in memory
flw f5, 0(x2) # load 0x34f50838 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f17, f26, f5, f6, dyn # perform operation
fmsub.s f17, f26, f5, f6, rdn # perform operation
fmsub.s f17, f26, f5, f6, rmm # perform operation
fmsub.s f17, f26, f5, f6, rne # perform operation
fmsub.s f17, f26, f5, f6, rtz # perform operation
fmsub.s f17, f26, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0xb056a590 # load x3 with value 0xb056a590
sw x3, 0(x2) # store 0xb056a590 in memory
flw f6, 0(x2) # load 0xb056a590 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmsub.s f7, f22, f6, f19, dyn # perform operation
fmsub.s f7, f22, f6, f19, rdn # perform operation
fmsub.s f7, f22, f6, f19, rmm # perform operation
fmsub.s f7, f22, f6, f19, rne # perform operation
fmsub.s f7, f22, f6, f19, rtz # perform operation
fmsub.s f7, f22, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xbaf16ca1 # load x3 with value 0xbaf16ca1
sw x3, 0(x2) # store 0xbaf16ca1 in memory
flw f26, 0(x2) # load 0xbaf16ca1 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f16, f28, f26, f6, dyn # perform operation
fmsub.s f16, f28, f26, f6, rdn # perform operation
fmsub.s f16, f28, f26, f6, rmm # perform operation
fmsub.s f16, f28, f26, f6, rne # perform operation
fmsub.s f16, f28, f26, f6, rtz # perform operation
fmsub.s f16, f28, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xc61b45a0 # load x3 with value 0xc61b45a0
sw x3, 0(x2) # store 0xc61b45a0 in memory
flw f10, 0(x2) # load 0xc61b45a0 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmsub.s f13, f21, f10, f28, dyn # perform operation
fmsub.s f13, f21, f10, f28, rdn # perform operation
fmsub.s f13, f21, f10, f28, rmm # perform operation
fmsub.s f13, f21, f10, f28, rne # perform operation
fmsub.s f13, f21, f10, f28, rtz # perform operation
fmsub.s f13, f21, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f21, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f21, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f21, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f21, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f21, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x3cbef9d9 # load x3 with value 0x3cbef9d9
sw x3, 0(x2) # store 0x3cbef9d9 in memory
flw f29, 0(x2) # load 0x3cbef9d9 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f3, f11, f29, f10, dyn # perform operation
fmsub.s f3, f11, f29, f10, rdn # perform operation
fmsub.s f3, f11, f29, f10, rmm # perform operation
fmsub.s f3, f11, f29, f10, rne # perform operation
fmsub.s f3, f11, f29, f10, rtz # perform operation
fmsub.s f3, f11, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xd4efa751 # load x3 with value 0xd4efa751
sw x3, 0(x2) # store 0xd4efa751 in memory
flw f8, 0(x2) # load 0xd4efa751 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmsub.s f22, f1, f8, f7, dyn # perform operation
fmsub.s f22, f1, f8, f7, rdn # perform operation
fmsub.s f22, f1, f8, f7, rmm # perform operation
fmsub.s f22, f1, f8, f7, rne # perform operation
fmsub.s f22, f1, f8, f7, rtz # perform operation
fmsub.s f22, f1, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f1, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x3583ac46 # load x3 with value 0x3583ac46
sw x3, 0(x2) # store 0x3583ac46 in memory
flw f14, 0(x2) # load 0x3583ac46 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fmsub.s f6, f3, f14, f28, dyn # perform operation
fmsub.s f6, f3, f14, f28, rdn # perform operation
fmsub.s f6, f3, f14, f28, rmm # perform operation
fmsub.s f6, f3, f14, f28, rne # perform operation
fmsub.s f6, f3, f14, f28, rtz # perform operation
fmsub.s f6, f3, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x81578cf9 # load x3 with value 0x81578cf9
sw x3, 0(x2) # store 0x81578cf9 in memory
flw f14, 0(x2) # load 0x81578cf9 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f26, f6, f14, f21, dyn # perform operation
fmsub.s f26, f6, f14, f21, rdn # perform operation
fmsub.s f26, f6, f14, f21, rmm # perform operation
fmsub.s f26, f6, f14, f21, rne # perform operation
fmsub.s f26, f6, f14, f21, rtz # perform operation
fmsub.s f26, f6, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x98cca35d # load x3 with value 0x98cca35d
sw x3, 0(x2) # store 0x98cca35d in memory
flw f14, 0(x2) # load 0x98cca35d from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f1, f24, f14, f11, dyn # perform operation
fmsub.s f1, f24, f14, f11, rdn # perform operation
fmsub.s f1, f24, f14, f11, rmm # perform operation
fmsub.s f1, f24, f14, f11, rne # perform operation
fmsub.s f1, f24, f14, f11, rtz # perform operation
fmsub.s f1, f24, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x756c3769 # load x3 with value 0x756c3769
sw x3, 0(x2) # store 0x756c3769 in memory
flw f2, 0(x2) # load 0x756c3769 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmsub.s f26, f23, f2, f29, dyn # perform operation
fmsub.s f26, f23, f2, f29, rdn # perform operation
fmsub.s f26, f23, f2, f29, rmm # perform operation
fmsub.s f26, f23, f2, f29, rne # perform operation
fmsub.s f26, f23, f2, f29, rtz # perform operation
fmsub.s f26, f23, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x22973a47 # load x3 with value 0x22973a47
sw x3, 0(x2) # store 0x22973a47 in memory
flw f15, 0(x2) # load 0x22973a47 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f20, f13, f15, f22, dyn # perform operation
fmsub.s f20, f13, f15, f22, rdn # perform operation
fmsub.s f20, f13, f15, f22, rmm # perform operation
fmsub.s f20, f13, f15, f22, rne # perform operation
fmsub.s f20, f13, f15, f22, rtz # perform operation
fmsub.s f20, f13, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x7fdc95d9 # load x3 with value 0x7fdc95d9
sw x3, 0(x2) # store 0x7fdc95d9 in memory
flw f8, 0(x2) # load 0x7fdc95d9 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fmsub.s f15, f22, f8, f13, dyn # perform operation
fmsub.s f15, f22, f8, f13, rdn # perform operation
fmsub.s f15, f22, f8, f13, rmm # perform operation
fmsub.s f15, f22, f8, f13, rne # perform operation
fmsub.s f15, f22, f8, f13, rtz # perform operation
fmsub.s f15, f22, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f22, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xbe42a69f # load x3 with value 0xbe42a69f
sw x3, 0(x2) # store 0xbe42a69f in memory
flw f31, 0(x2) # load 0xbe42a69f from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
fmsub.s f22, f18, f31, f23, dyn # perform operation
fmsub.s f22, f18, f31, f23, rdn # perform operation
fmsub.s f22, f18, f31, f23, rmm # perform operation
fmsub.s f22, f18, f31, f23, rne # perform operation
fmsub.s f22, f18, f31, f23, rtz # perform operation
fmsub.s f22, f18, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x00528ec7 # load x3 with value 0x00528ec7
sw x3, 0(x2) # store 0x00528ec7 in memory
flw f17, 0(x2) # load 0x00528ec7 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmsub.s f16, f19, f17, f8, dyn # perform operation
fmsub.s f16, f19, f17, f8, rdn # perform operation
fmsub.s f16, f19, f17, f8, rmm # perform operation
fmsub.s f16, f19, f17, f8, rne # perform operation
fmsub.s f16, f19, f17, f8, rtz # perform operation
fmsub.s f16, f19, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f19, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x5ad36446 # load x3 with value 0x5ad36446
sw x3, 0(x2) # store 0x5ad36446 in memory
flw f17, 0(x2) # load 0x5ad36446 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmsub.s f5, f2, f17, f10, dyn # perform operation
fmsub.s f5, f2, f17, f10, rdn # perform operation
fmsub.s f5, f2, f17, f10, rmm # perform operation
fmsub.s f5, f2, f17, f10, rne # perform operation
fmsub.s f5, f2, f17, f10, rtz # perform operation
fmsub.s f5, f2, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f2, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xc5da258b # load x3 with value 0xc5da258b
sw x3, 0(x2) # store 0xc5da258b in memory
flw f22, 0(x2) # load 0xc5da258b from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmsub.s f19, f31, f22, f9, dyn # perform operation
fmsub.s f19, f31, f22, f9, rdn # perform operation
fmsub.s f19, f31, f22, f9, rmm # perform operation
fmsub.s f19, f31, f22, f9, rne # perform operation
fmsub.s f19, f31, f22, f9, rtz # perform operation
fmsub.s f19, f31, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f31, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0xcbe37da5 # load x3 with value 0xcbe37da5
sw x3, 0(x2) # store 0xcbe37da5 in memory
flw f15, 0(x2) # load 0xcbe37da5 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fmsub.s f10, f24, f15, f11, dyn # perform operation
fmsub.s f10, f24, f15, f11, rdn # perform operation
fmsub.s f10, f24, f15, f11, rmm # perform operation
fmsub.s f10, f24, f15, f11, rne # perform operation
fmsub.s f10, f24, f15, f11, rtz # perform operation
fmsub.s f10, f24, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xcf6240ea # load x3 with value 0xcf6240ea
sw x3, 0(x2) # store 0xcf6240ea in memory
flw f2, 0(x2) # load 0xcf6240ea from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f22, f3, f2, f25, dyn # perform operation
fmsub.s f22, f3, f2, f25, rdn # perform operation
fmsub.s f22, f3, f2, f25, rmm # perform operation
fmsub.s f22, f3, f2, f25, rne # perform operation
fmsub.s f22, f3, f2, f25, rtz # perform operation
fmsub.s f22, f3, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xfb4b9c9e # load x3 with value 0xfb4b9c9e
sw x3, 0(x2) # store 0xfb4b9c9e in memory
flw f1, 0(x2) # load 0xfb4b9c9e from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmsub.s f8, f18, f1, f12, dyn # perform operation
fmsub.s f8, f18, f1, f12, rdn # perform operation
fmsub.s f8, f18, f1, f12, rmm # perform operation
fmsub.s f8, f18, f1, f12, rne # perform operation
fmsub.s f8, f18, f1, f12, rtz # perform operation
fmsub.s f8, f18, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f18, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xcf955901 # load x3 with value 0xcf955901
sw x3, 0(x2) # store 0xcf955901 in memory
flw f19, 0(x2) # load 0xcf955901 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmsub.s f21, f14, f19, f25, dyn # perform operation
fmsub.s f21, f14, f19, f25, rdn # perform operation
fmsub.s f21, f14, f19, f25, rmm # perform operation
fmsub.s f21, f14, f19, f25, rne # perform operation
fmsub.s f21, f14, f19, f25, rtz # perform operation
fmsub.s f21, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x25f1bd05 # load x3 with value 0x25f1bd05
sw x3, 0(x2) # store 0x25f1bd05 in memory
flw f5, 0(x2) # load 0x25f1bd05 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmsub.s f17, f25, f5, f13, dyn # perform operation
fmsub.s f17, f25, f5, f13, rdn # perform operation
fmsub.s f17, f25, f5, f13, rmm # perform operation
fmsub.s f17, f25, f5, f13, rne # perform operation
fmsub.s f17, f25, f5, f13, rtz # perform operation
fmsub.s f17, f25, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x99e6c54f # load x3 with value 0x99e6c54f
sw x3, 0(x2) # store 0x99e6c54f in memory
flw f29, 0(x2) # load 0x99e6c54f from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f16, f15, f29, f30, dyn # perform operation
fmsub.s f16, f15, f29, f30, rdn # perform operation
fmsub.s f16, f15, f29, f30, rmm # perform operation
fmsub.s f16, f15, f29, f30, rne # perform operation
fmsub.s f16, f15, f29, f30, rtz # perform operation
fmsub.s f16, f15, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x076f0132 # load x3 with value 0x076f0132
sw x3, 0(x2) # store 0x076f0132 in memory
flw f19, 0(x2) # load 0x076f0132 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmsub.s f1, f22, f19, f21, dyn # perform operation
fmsub.s f1, f22, f19, f21, rdn # perform operation
fmsub.s f1, f22, f19, f21, rmm # perform operation
fmsub.s f1, f22, f19, f21, rne # perform operation
fmsub.s f1, f22, f19, f21, rtz # perform operation
fmsub.s f1, f22, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x1bdef2bd # load x3 with value 0x1bdef2bd
sw x3, 0(x2) # store 0x1bdef2bd in memory
flw f7, 0(x2) # load 0x1bdef2bd from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fmsub.s f13, f28, f7, f27, dyn # perform operation
fmsub.s f13, f28, f7, f27, rdn # perform operation
fmsub.s f13, f28, f7, f27, rmm # perform operation
fmsub.s f13, f28, f7, f27, rne # perform operation
fmsub.s f13, f28, f7, f27, rtz # perform operation
fmsub.s f13, f28, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x5820d00a # load x3 with value 0x5820d00a
sw x3, 0(x2) # store 0x5820d00a in memory
flw f1, 0(x2) # load 0x5820d00a from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fmsub.s f13, f24, f1, f7, dyn # perform operation
fmsub.s f13, f24, f1, f7, rdn # perform operation
fmsub.s f13, f24, f1, f7, rmm # perform operation
fmsub.s f13, f24, f1, f7, rne # perform operation
fmsub.s f13, f24, f1, f7, rtz # perform operation
fmsub.s f13, f24, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x4cfd51c8 # load x3 with value 0x4cfd51c8
sw x3, 0(x2) # store 0x4cfd51c8 in memory
flw f9, 0(x2) # load 0x4cfd51c8 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmsub.s f31, f7, f9, f29, dyn # perform operation
fmsub.s f31, f7, f9, f29, rdn # perform operation
fmsub.s f31, f7, f9, f29, rmm # perform operation
fmsub.s f31, f7, f9, f29, rne # perform operation
fmsub.s f31, f7, f9, f29, rtz # perform operation
fmsub.s f31, f7, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xa000d072 # load x3 with value 0xa000d072
sw x3, 0(x2) # store 0xa000d072 in memory
flw f25, 0(x2) # load 0xa000d072 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f1, f31, f25, f29, dyn # perform operation
fmsub.s f1, f31, f25, f29, rdn # perform operation
fmsub.s f1, f31, f25, f29, rmm # perform operation
fmsub.s f1, f31, f25, f29, rne # perform operation
fmsub.s f1, f31, f25, f29, rtz # perform operation
fmsub.s f1, f31, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f31, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x2ee86bd4 # load x3 with value 0x2ee86bd4
sw x3, 0(x2) # store 0x2ee86bd4 in memory
flw f25, 0(x2) # load 0x2ee86bd4 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmsub.s f20, f29, f25, f30, dyn # perform operation
fmsub.s f20, f29, f25, f30, rdn # perform operation
fmsub.s f20, f29, f25, f30, rmm # perform operation
fmsub.s f20, f29, f25, f30, rne # perform operation
fmsub.s f20, f29, f25, f30, rtz # perform operation
fmsub.s f20, f29, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x72adb625 # load x3 with value 0x72adb625
sw x3, 0(x2) # store 0x72adb625 in memory
flw f6, 0(x2) # load 0x72adb625 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fmsub.s f8, f19, f6, f29, dyn # perform operation
fmsub.s f8, f19, f6, f29, rdn # perform operation
fmsub.s f8, f19, f6, f29, rmm # perform operation
fmsub.s f8, f19, f6, f29, rne # perform operation
fmsub.s f8, f19, f6, f29, rtz # perform operation
fmsub.s f8, f19, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xe8e536c2 # load x3 with value 0xe8e536c2
sw x3, 0(x2) # store 0xe8e536c2 in memory
flw f15, 0(x2) # load 0xe8e536c2 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f20, f29, f15, f6, dyn # perform operation
fmsub.s f20, f29, f15, f6, rdn # perform operation
fmsub.s f20, f29, f15, f6, rmm # perform operation
fmsub.s f20, f29, f15, f6, rne # perform operation
fmsub.s f20, f29, f15, f6, rtz # perform operation
fmsub.s f20, f29, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x01022d5b # load x3 with value 0x01022d5b
sw x3, 0(x2) # store 0x01022d5b in memory
flw f6, 0(x2) # load 0x01022d5b from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f25, f11, f6, f14, dyn # perform operation
fmsub.s f25, f11, f6, f14, rdn # perform operation
fmsub.s f25, f11, f6, f14, rmm # perform operation
fmsub.s f25, f11, f6, f14, rne # perform operation
fmsub.s f25, f11, f6, f14, rtz # perform operation
fmsub.s f25, f11, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x050116d3 # load x3 with value 0x050116d3
sw x3, 0(x2) # store 0x050116d3 in memory
flw f12, 0(x2) # load 0x050116d3 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmsub.s f17, f28, f12, f27, dyn # perform operation
fmsub.s f17, f28, f12, f27, rdn # perform operation
fmsub.s f17, f28, f12, f27, rmm # perform operation
fmsub.s f17, f28, f12, f27, rne # perform operation
fmsub.s f17, f28, f12, f27, rtz # perform operation
fmsub.s f17, f28, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x926505f8 # load x3 with value 0x926505f8
sw x3, 0(x2) # store 0x926505f8 in memory
flw f23, 0(x2) # load 0x926505f8 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmsub.s f3, f11, f23, f12, dyn # perform operation
fmsub.s f3, f11, f23, f12, rdn # perform operation
fmsub.s f3, f11, f23, f12, rmm # perform operation
fmsub.s f3, f11, f23, f12, rne # perform operation
fmsub.s f3, f11, f23, f12, rtz # perform operation
fmsub.s f3, f11, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x0356206e # load x3 with value 0x0356206e
sw x3, 0(x2) # store 0x0356206e in memory
flw f21, 0(x2) # load 0x0356206e from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmsub.s f7, f6, f21, f30, dyn # perform operation
fmsub.s f7, f6, f21, f30, rdn # perform operation
fmsub.s f7, f6, f21, f30, rmm # perform operation
fmsub.s f7, f6, f21, f30, rne # perform operation
fmsub.s f7, f6, f21, f30, rtz # perform operation
fmsub.s f7, f6, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xb4998b50 # load x3 with value 0xb4998b50
sw x3, 0(x2) # store 0xb4998b50 in memory
flw f20, 0(x2) # load 0xb4998b50 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fmsub.s f10, f11, f20, f22, dyn # perform operation
fmsub.s f10, f11, f20, f22, rdn # perform operation
fmsub.s f10, f11, f20, f22, rmm # perform operation
fmsub.s f10, f11, f20, f22, rne # perform operation
fmsub.s f10, f11, f20, f22, rtz # perform operation
fmsub.s f10, f11, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x13f81bc3 # load x3 with value 0x13f81bc3
sw x3, 0(x2) # store 0x13f81bc3 in memory
flw f7, 0(x2) # load 0x13f81bc3 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmsub.s f27, f28, f7, f9, dyn # perform operation
fmsub.s f27, f28, f7, f9, rdn # perform operation
fmsub.s f27, f28, f7, f9, rmm # perform operation
fmsub.s f27, f28, f7, f9, rne # perform operation
fmsub.s f27, f28, f7, f9, rtz # perform operation
fmsub.s f27, f28, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0xb4384ece # load x3 with value 0xb4384ece
sw x3, 0(x2) # store 0xb4384ece in memory
flw f19, 0(x2) # load 0xb4384ece from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmsub.s f27, f9, f19, f28, dyn # perform operation
fmsub.s f27, f9, f19, f28, rdn # perform operation
fmsub.s f27, f9, f19, f28, rmm # perform operation
fmsub.s f27, f9, f19, f28, rne # perform operation
fmsub.s f27, f9, f19, f28, rtz # perform operation
fmsub.s f27, f9, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x7b170865 # load x3 with value 0x7b170865
sw x3, 0(x2) # store 0x7b170865 in memory
flw f14, 0(x2) # load 0x7b170865 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fmsub.s f24, f30, f14, f12, dyn # perform operation
fmsub.s f24, f30, f14, f12, rdn # perform operation
fmsub.s f24, f30, f14, f12, rmm # perform operation
fmsub.s f24, f30, f14, f12, rne # perform operation
fmsub.s f24, f30, f14, f12, rtz # perform operation
fmsub.s f24, f30, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x5bab77ca # load x3 with value 0x5bab77ca
sw x3, 0(x2) # store 0x5bab77ca in memory
flw f15, 0(x2) # load 0x5bab77ca from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmsub.s f19, f28, f15, f21, dyn # perform operation
fmsub.s f19, f28, f15, f21, rdn # perform operation
fmsub.s f19, f28, f15, f21, rmm # perform operation
fmsub.s f19, f28, f15, f21, rne # perform operation
fmsub.s f19, f28, f15, f21, rtz # perform operation
fmsub.s f19, f28, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x6e5c476a # load x3 with value 0x6e5c476a
sw x3, 0(x2) # store 0x6e5c476a in memory
flw f11, 0(x2) # load 0x6e5c476a from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fmsub.s f20, f26, f11, f22, dyn # perform operation
fmsub.s f20, f26, f11, f22, rdn # perform operation
fmsub.s f20, f26, f11, f22, rmm # perform operation
fmsub.s f20, f26, f11, f22, rne # perform operation
fmsub.s f20, f26, f11, f22, rtz # perform operation
fmsub.s f20, f26, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xa91318f8 # load x3 with value 0xa91318f8
sw x3, 0(x2) # store 0xa91318f8 in memory
flw f31, 0(x2) # load 0xa91318f8 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
fmsub.s f21, f2, f31, f23, dyn # perform operation
fmsub.s f21, f2, f31, f23, rdn # perform operation
fmsub.s f21, f2, f31, f23, rmm # perform operation
fmsub.s f21, f2, f31, f23, rne # perform operation
fmsub.s f21, f2, f31, f23, rtz # perform operation
fmsub.s f21, f2, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x271bcd80 # load x3 with value 0x271bcd80
sw x3, 0(x2) # store 0x271bcd80 in memory
flw f19, 0(x2) # load 0x271bcd80 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmsub.s f9, f26, f19, f12, dyn # perform operation
fmsub.s f9, f26, f19, f12, rdn # perform operation
fmsub.s f9, f26, f19, f12, rmm # perform operation
fmsub.s f9, f26, f19, f12, rne # perform operation
fmsub.s f9, f26, f19, f12, rtz # perform operation
fmsub.s f9, f26, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f26, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xb88713af # load x3 with value 0xb88713af
sw x3, 0(x2) # store 0xb88713af in memory
flw f12, 0(x2) # load 0xb88713af from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmsub.s f20, f29, f12, f7, dyn # perform operation
fmsub.s f20, f29, f12, f7, rdn # perform operation
fmsub.s f20, f29, f12, f7, rmm # perform operation
fmsub.s f20, f29, f12, f7, rne # perform operation
fmsub.s f20, f29, f12, f7, rtz # perform operation
fmsub.s f20, f29, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f12, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x4a7f0b43 # load x3 with value 0x4a7f0b43
sw x3, 0(x2) # store 0x4a7f0b43 in memory
flw f25, 0(x2) # load 0x4a7f0b43 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f28, f15, f25, f23, dyn # perform operation
fmsub.s f28, f15, f25, f23, rdn # perform operation
fmsub.s f28, f15, f25, f23, rmm # perform operation
fmsub.s f28, f15, f25, f23, rne # perform operation
fmsub.s f28, f15, f25, f23, rtz # perform operation
fmsub.s f28, f15, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f25, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xcbeebb91 # load x3 with value 0xcbeebb91
sw x3, 0(x2) # store 0xcbeebb91 in memory
flw f19, 0(x2) # load 0xcbeebb91 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fmsub.s f24, f16, f19, f11, dyn # perform operation
fmsub.s f24, f16, f19, f11, rdn # perform operation
fmsub.s f24, f16, f19, f11, rmm # perform operation
fmsub.s f24, f16, f19, f11, rne # perform operation
fmsub.s f24, f16, f19, f11, rtz # perform operation
fmsub.s f24, f16, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x795cab4e # load x3 with value 0x795cab4e
sw x3, 0(x2) # store 0x795cab4e in memory
flw f12, 0(x2) # load 0x795cab4e from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fmsub.s f16, f22, f12, f6, dyn # perform operation
fmsub.s f16, f22, f12, f6, rdn # perform operation
fmsub.s f16, f22, f12, f6, rmm # perform operation
fmsub.s f16, f22, f12, f6, rne # perform operation
fmsub.s f16, f22, f12, f6, rtz # perform operation
fmsub.s f16, f22, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f22, f12, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x2c4c104b # load x3 with value 0x2c4c104b
sw x3, 0(x2) # store 0x2c4c104b in memory
flw f18, 0(x2) # load 0x2c4c104b from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmsub.s f11, f26, f18, f7, dyn # perform operation
fmsub.s f11, f26, f18, f7, rdn # perform operation
fmsub.s f11, f26, f18, f7, rmm # perform operation
fmsub.s f11, f26, f18, f7, rne # perform operation
fmsub.s f11, f26, f18, f7, rtz # perform operation
fmsub.s f11, f26, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f26, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x7af1beed # load x3 with value 0x7af1beed
sw x3, 0(x2) # store 0x7af1beed in memory
flw f5, 0(x2) # load 0x7af1beed from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmsub.s f15, f14, f5, f29, dyn # perform operation
fmsub.s f15, f14, f5, f29, rdn # perform operation
fmsub.s f15, f14, f5, f29, rmm # perform operation
fmsub.s f15, f14, f5, f29, rne # perform operation
fmsub.s f15, f14, f5, f29, rtz # perform operation
fmsub.s f15, f14, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f5, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x2ee6c0f1 # load x3 with value 0x2ee6c0f1
sw x3, 0(x2) # store 0x2ee6c0f1 in memory
flw f27, 0(x2) # load 0x2ee6c0f1 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fmsub.s f10, f11, f27, f30, dyn # perform operation
fmsub.s f10, f11, f27, f30, rdn # perform operation
fmsub.s f10, f11, f27, f30, rmm # perform operation
fmsub.s f10, f11, f27, f30, rne # perform operation
fmsub.s f10, f11, f27, f30, rtz # perform operation
fmsub.s f10, f11, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x94e05f33 # load x3 with value 0x94e05f33
sw x3, 0(x2) # store 0x94e05f33 in memory
flw f2, 0(x2) # load 0x94e05f33 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmsub.s f25, f17, f2, f12, dyn # perform operation
fmsub.s f25, f17, f2, f12, rdn # perform operation
fmsub.s f25, f17, f2, f12, rmm # perform operation
fmsub.s f25, f17, f2, f12, rne # perform operation
fmsub.s f25, f17, f2, f12, rtz # perform operation
fmsub.s f25, f17, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x4265a632 # load x3 with value 0x4265a632
sw x3, 0(x2) # store 0x4265a632 in memory
flw f5, 0(x2) # load 0x4265a632 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmsub.s f20, f18, f5, f8, dyn # perform operation
fmsub.s f20, f18, f5, f8, rdn # perform operation
fmsub.s f20, f18, f5, f8, rmm # perform operation
fmsub.s f20, f18, f5, f8, rne # perform operation
fmsub.s f20, f18, f5, f8, rtz # perform operation
fmsub.s f20, f18, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f18, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x3efe75eb # load x3 with value 0x3efe75eb
sw x3, 0(x2) # store 0x3efe75eb in memory
flw f5, 0(x2) # load 0x3efe75eb from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmsub.s f8, f31, f5, f12, dyn # perform operation
fmsub.s f8, f31, f5, f12, rdn # perform operation
fmsub.s f8, f31, f5, f12, rmm # perform operation
fmsub.s f8, f31, f5, f12, rne # perform operation
fmsub.s f8, f31, f5, f12, rtz # perform operation
fmsub.s f8, f31, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f31, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x73e261ac # load x3 with value 0x73e261ac
sw x3, 0(x2) # store 0x73e261ac in memory
flw f30, 0(x2) # load 0x73e261ac from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f29, f8, f30, f14, dyn # perform operation
fmsub.s f29, f8, f30, f14, rdn # perform operation
fmsub.s f29, f8, f30, f14, rmm # perform operation
fmsub.s f29, f8, f30, f14, rne # perform operation
fmsub.s f29, f8, f30, f14, rtz # perform operation
fmsub.s f29, f8, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x12baf729 # load x3 with value 0x12baf729
sw x3, 0(x2) # store 0x12baf729 in memory
flw f5, 0(x2) # load 0x12baf729 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f14, f2, f5, f7, dyn # perform operation
fmsub.s f14, f2, f5, f7, rdn # perform operation
fmsub.s f14, f2, f5, f7, rmm # perform operation
fmsub.s f14, f2, f5, f7, rne # perform operation
fmsub.s f14, f2, f5, f7, rtz # perform operation
fmsub.s f14, f2, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xd25fe4f4 # load x3 with value 0xd25fe4f4
sw x3, 0(x2) # store 0xd25fe4f4 in memory
flw f12, 0(x2) # load 0xd25fe4f4 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmsub.s f26, f30, f12, f22, dyn # perform operation
fmsub.s f26, f30, f12, f22, rdn # perform operation
fmsub.s f26, f30, f12, f22, rmm # perform operation
fmsub.s f26, f30, f12, f22, rne # perform operation
fmsub.s f26, f30, f12, f22, rtz # perform operation
fmsub.s f26, f30, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xf12f2774 # load x3 with value 0xf12f2774
sw x3, 0(x2) # store 0xf12f2774 in memory
flw f27, 0(x2) # load 0xf12f2774 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f18, f14, f27, f23, dyn # perform operation
fmsub.s f18, f14, f27, f23, rdn # perform operation
fmsub.s f18, f14, f27, f23, rmm # perform operation
fmsub.s f18, f14, f27, f23, rne # perform operation
fmsub.s f18, f14, f27, f23, rtz # perform operation
fmsub.s f18, f14, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x4e2e6eb6 # load x3 with value 0x4e2e6eb6
sw x3, 0(x2) # store 0x4e2e6eb6 in memory
flw f10, 0(x2) # load 0x4e2e6eb6 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f16, f21, f10, f9, dyn # perform operation
fmsub.s f16, f21, f10, f9, rdn # perform operation
fmsub.s f16, f21, f10, f9, rmm # perform operation
fmsub.s f16, f21, f10, f9, rne # perform operation
fmsub.s f16, f21, f10, f9, rtz # perform operation
fmsub.s f16, f21, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xc9d6e626 # load x3 with value 0xc9d6e626
sw x3, 0(x2) # store 0xc9d6e626 in memory
flw f30, 0(x2) # load 0xc9d6e626 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmsub.s f18, f24, f30, f11, dyn # perform operation
fmsub.s f18, f24, f30, f11, rdn # perform operation
fmsub.s f18, f24, f30, f11, rmm # perform operation
fmsub.s f18, f24, f30, f11, rne # perform operation
fmsub.s f18, f24, f30, f11, rtz # perform operation
fmsub.s f18, f24, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x2bf96be4 # load x3 with value 0x2bf96be4
sw x3, 0(x2) # store 0x2bf96be4 in memory
flw f13, 0(x2) # load 0x2bf96be4 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmsub.s f7, f6, f13, f3, dyn # perform operation
fmsub.s f7, f6, f13, f3, rdn # perform operation
fmsub.s f7, f6, f13, f3, rmm # perform operation
fmsub.s f7, f6, f13, f3, rne # perform operation
fmsub.s f7, f6, f13, f3, rtz # perform operation
fmsub.s f7, f6, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x1360ad41 # load x3 with value 0x1360ad41
sw x3, 0(x2) # store 0x1360ad41 in memory
flw f3, 0(x2) # load 0x1360ad41 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f17, f24, f3, f29, dyn # perform operation
fmsub.s f17, f24, f3, f29, rdn # perform operation
fmsub.s f17, f24, f3, f29, rmm # perform operation
fmsub.s f17, f24, f3, f29, rne # perform operation
fmsub.s f17, f24, f3, f29, rtz # perform operation
fmsub.s f17, f24, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f24, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x43205cd6 # load x3 with value 0x43205cd6
sw x3, 0(x2) # store 0x43205cd6 in memory
flw f29, 0(x2) # load 0x43205cd6 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f8, f14, f29, f6, dyn # perform operation
fmsub.s f8, f14, f29, f6, rdn # perform operation
fmsub.s f8, f14, f29, f6, rmm # perform operation
fmsub.s f8, f14, f29, f6, rne # perform operation
fmsub.s f8, f14, f29, f6, rtz # perform operation
fmsub.s f8, f14, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x811f549d # load x3 with value 0x811f549d
sw x3, 0(x2) # store 0x811f549d in memory
flw f29, 0(x2) # load 0x811f549d from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmsub.s f8, f14, f29, f5, dyn # perform operation
fmsub.s f8, f14, f29, f5, rdn # perform operation
fmsub.s f8, f14, f29, f5, rmm # perform operation
fmsub.s f8, f14, f29, f5, rne # perform operation
fmsub.s f8, f14, f29, f5, rtz # perform operation
fmsub.s f8, f14, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x1a3e3a51 # load x3 with value 0x1a3e3a51
sw x3, 0(x2) # store 0x1a3e3a51 in memory
flw f30, 0(x2) # load 0x1a3e3a51 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmsub.s f1, f5, f30, f18, dyn # perform operation
fmsub.s f1, f5, f30, f18, rdn # perform operation
fmsub.s f1, f5, f30, f18, rmm # perform operation
fmsub.s f1, f5, f30, f18, rne # perform operation
fmsub.s f1, f5, f30, f18, rtz # perform operation
fmsub.s f1, f5, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x8c2ad989 # load x3 with value 0x8c2ad989
sw x3, 0(x2) # store 0x8c2ad989 in memory
flw f3, 0(x2) # load 0x8c2ad989 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f31, f8, f3, f22, dyn # perform operation
fmsub.s f31, f8, f3, f22, rdn # perform operation
fmsub.s f31, f8, f3, f22, rmm # perform operation
fmsub.s f31, f8, f3, f22, rne # perform operation
fmsub.s f31, f8, f3, f22, rtz # perform operation
fmsub.s f31, f8, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xa66d2010 # load x3 with value 0xa66d2010
sw x3, 0(x2) # store 0xa66d2010 in memory
flw f16, 0(x2) # load 0xa66d2010 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmsub.s f2, f18, f16, f21, dyn # perform operation
fmsub.s f2, f18, f16, f21, rdn # perform operation
fmsub.s f2, f18, f16, f21, rmm # perform operation
fmsub.s f2, f18, f16, f21, rne # perform operation
fmsub.s f2, f18, f16, f21, rtz # perform operation
fmsub.s f2, f18, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x0dc95014 # load x3 with value 0x0dc95014
sw x3, 0(x2) # store 0x0dc95014 in memory
flw f6, 0(x2) # load 0x0dc95014 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmsub.s f29, f17, f6, f14, dyn # perform operation
fmsub.s f29, f17, f6, f14, rdn # perform operation
fmsub.s f29, f17, f6, f14, rmm # perform operation
fmsub.s f29, f17, f6, f14, rne # perform operation
fmsub.s f29, f17, f6, f14, rtz # perform operation
fmsub.s f29, f17, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xb2adda01 # load x3 with value 0xb2adda01
sw x3, 0(x2) # store 0xb2adda01 in memory
flw f30, 0(x2) # load 0xb2adda01 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmsub.s f7, f22, f30, f11, dyn # perform operation
fmsub.s f7, f22, f30, f11, rdn # perform operation
fmsub.s f7, f22, f30, f11, rmm # perform operation
fmsub.s f7, f22, f30, f11, rne # perform operation
fmsub.s f7, f22, f30, f11, rtz # perform operation
fmsub.s f7, f22, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x36e26bcf # load x3 with value 0x36e26bcf
sw x3, 0(x2) # store 0x36e26bcf in memory
flw f9, 0(x2) # load 0x36e26bcf from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmsub.s f28, f7, f9, f5, dyn # perform operation
fmsub.s f28, f7, f9, f5, rdn # perform operation
fmsub.s f28, f7, f9, f5, rmm # perform operation
fmsub.s f28, f7, f9, f5, rne # perform operation
fmsub.s f28, f7, f9, f5, rtz # perform operation
fmsub.s f28, f7, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xfc44178f # load x3 with value 0xfc44178f
sw x3, 0(x2) # store 0xfc44178f in memory
flw f28, 0(x2) # load 0xfc44178f from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmsub.s f6, f9, f28, f2, dyn # perform operation
fmsub.s f6, f9, f28, f2, rdn # perform operation
fmsub.s f6, f9, f28, f2, rmm # perform operation
fmsub.s f6, f9, f28, f2, rne # perform operation
fmsub.s f6, f9, f28, f2, rtz # perform operation
fmsub.s f6, f9, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xbea87b36 # load x3 with value 0xbea87b36
sw x3, 0(x2) # store 0xbea87b36 in memory
flw f7, 0(x2) # load 0xbea87b36 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmsub.s f16, f13, f7, f14, dyn # perform operation
fmsub.s f16, f13, f7, f14, rdn # perform operation
fmsub.s f16, f13, f7, f14, rmm # perform operation
fmsub.s f16, f13, f7, f14, rne # perform operation
fmsub.s f16, f13, f7, f14, rtz # perform operation
fmsub.s f16, f13, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xe10d0c00 # load x3 with value 0xe10d0c00
sw x3, 0(x2) # store 0xe10d0c00 in memory
flw f28, 0(x2) # load 0xe10d0c00 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmsub.s f27, f7, f28, f29, dyn # perform operation
fmsub.s f27, f7, f28, f29, rdn # perform operation
fmsub.s f27, f7, f28, f29, rmm # perform operation
fmsub.s f27, f7, f28, f29, rne # perform operation
fmsub.s f27, f7, f28, f29, rtz # perform operation
fmsub.s f27, f7, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x7af2b7bd # load x3 with value 0x7af2b7bd
sw x3, 0(x2) # store 0x7af2b7bd in memory
flw f26, 0(x2) # load 0x7af2b7bd from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmsub.s f13, f8, f26, f25, dyn # perform operation
fmsub.s f13, f8, f26, f25, rdn # perform operation
fmsub.s f13, f8, f26, f25, rmm # perform operation
fmsub.s f13, f8, f26, f25, rne # perform operation
fmsub.s f13, f8, f26, f25, rtz # perform operation
fmsub.s f13, f8, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x158b6dfe # load x3 with value 0x158b6dfe
sw x3, 0(x2) # store 0x158b6dfe in memory
flw f17, 0(x2) # load 0x158b6dfe from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmsub.s f11, f22, f17, f30, dyn # perform operation
fmsub.s f11, f22, f17, f30, rdn # perform operation
fmsub.s f11, f22, f17, f30, rmm # perform operation
fmsub.s f11, f22, f17, f30, rne # perform operation
fmsub.s f11, f22, f17, f30, rtz # perform operation
fmsub.s f11, f22, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x9e81c1ab # load x3 with value 0x9e81c1ab
sw x3, 0(x2) # store 0x9e81c1ab in memory
flw f5, 0(x2) # load 0x9e81c1ab from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f29, f18, f5, f25, dyn # perform operation
fmsub.s f29, f18, f5, f25, rdn # perform operation
fmsub.s f29, f18, f5, f25, rmm # perform operation
fmsub.s f29, f18, f5, f25, rne # perform operation
fmsub.s f29, f18, f5, f25, rtz # perform operation
fmsub.s f29, f18, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x3a8fcaba # load x3 with value 0x3a8fcaba
sw x3, 0(x2) # store 0x3a8fcaba in memory
flw f5, 0(x2) # load 0x3a8fcaba from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmsub.s f7, f29, f5, f10, dyn # perform operation
fmsub.s f7, f29, f5, f10, rdn # perform operation
fmsub.s f7, f29, f5, f10, rmm # perform operation
fmsub.s f7, f29, f5, f10, rne # perform operation
fmsub.s f7, f29, f5, f10, rtz # perform operation
fmsub.s f7, f29, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x7ca1b0ce # load x3 with value 0x7ca1b0ce
sw x3, 0(x2) # store 0x7ca1b0ce in memory
flw f20, 0(x2) # load 0x7ca1b0ce from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmsub.s f27, f1, f20, f22, dyn # perform operation
fmsub.s f27, f1, f20, f22, rdn # perform operation
fmsub.s f27, f1, f20, f22, rmm # perform operation
fmsub.s f27, f1, f20, f22, rne # perform operation
fmsub.s f27, f1, f20, f22, rtz # perform operation
fmsub.s f27, f1, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xd864df79 # load x3 with value 0xd864df79
sw x3, 0(x2) # store 0xd864df79 in memory
flw f16, 0(x2) # load 0xd864df79 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmsub.s f17, f30, f16, f28, dyn # perform operation
fmsub.s f17, f30, f16, f28, rdn # perform operation
fmsub.s f17, f30, f16, f28, rmm # perform operation
fmsub.s f17, f30, f16, f28, rne # perform operation
fmsub.s f17, f30, f16, f28, rtz # perform operation
fmsub.s f17, f30, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f30, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f30, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f30, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f30, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f30, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x76865967 # load x3 with value 0x76865967
sw x3, 0(x2) # store 0x76865967 in memory
flw f18, 0(x2) # load 0x76865967 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmsub.s f19, f11, f18, f24, dyn # perform operation
fmsub.s f19, f11, f18, f24, rdn # perform operation
fmsub.s f19, f11, f18, f24, rmm # perform operation
fmsub.s f19, f11, f18, f24, rne # perform operation
fmsub.s f19, f11, f18, f24, rtz # perform operation
fmsub.s f19, f11, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f11, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0xe893f8b4 # load x3 with value 0xe893f8b4
sw x3, 0(x2) # store 0xe893f8b4 in memory
flw f9, 0(x2) # load 0xe893f8b4 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmsub.s f12, f28, f9, f20, dyn # perform operation
fmsub.s f12, f28, f9, f20, rdn # perform operation
fmsub.s f12, f28, f9, f20, rmm # perform operation
fmsub.s f12, f28, f9, f20, rne # perform operation
fmsub.s f12, f28, f9, f20, rtz # perform operation
fmsub.s f12, f28, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xebbeb5f1 # load x3 with value 0xebbeb5f1
sw x3, 0(x2) # store 0xebbeb5f1 in memory
flw f18, 0(x2) # load 0xebbeb5f1 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmsub.s f23, f9, f18, f10, dyn # perform operation
fmsub.s f23, f9, f18, f10, rdn # perform operation
fmsub.s f23, f9, f18, f10, rmm # perform operation
fmsub.s f23, f9, f18, f10, rne # perform operation
fmsub.s f23, f9, f18, f10, rtz # perform operation
fmsub.s f23, f9, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xd3339f51 # load x3 with value 0xd3339f51
sw x3, 0(x2) # store 0xd3339f51 in memory
flw f21, 0(x2) # load 0xd3339f51 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmsub.s f30, f18, f21, f25, dyn # perform operation
fmsub.s f30, f18, f21, f25, rdn # perform operation
fmsub.s f30, f18, f21, f25, rmm # perform operation
fmsub.s f30, f18, f21, f25, rne # perform operation
fmsub.s f30, f18, f21, f25, rtz # perform operation
fmsub.s f30, f18, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x75bd0279 # load x3 with value 0x75bd0279
sw x3, 0(x2) # store 0x75bd0279 in memory
flw f31, 0(x2) # load 0x75bd0279 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmsub.s f28, f9, f31, f27, dyn # perform operation
fmsub.s f28, f9, f31, f27, rdn # perform operation
fmsub.s f28, f9, f31, f27, rmm # perform operation
fmsub.s f28, f9, f31, f27, rne # perform operation
fmsub.s f28, f9, f31, f27, rtz # perform operation
fmsub.s f28, f9, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f9, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xe07867b1 # load x3 with value 0xe07867b1
sw x3, 0(x2) # store 0xe07867b1 in memory
flw f12, 0(x2) # load 0xe07867b1 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fmsub.s f3, f30, f12, f8, dyn # perform operation
fmsub.s f3, f30, f12, f8, rdn # perform operation
fmsub.s f3, f30, f12, f8, rmm # perform operation
fmsub.s f3, f30, f12, f8, rne # perform operation
fmsub.s f3, f30, f12, f8, rtz # perform operation
fmsub.s f3, f30, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f30, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xaa890e1a # load x3 with value 0xaa890e1a
sw x3, 0(x2) # store 0xaa890e1a in memory
flw f16, 0(x2) # load 0xaa890e1a from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fmsub.s f23, f17, f16, f13, dyn # perform operation
fmsub.s f23, f17, f16, f13, rdn # perform operation
fmsub.s f23, f17, f16, f13, rmm # perform operation
fmsub.s f23, f17, f16, f13, rne # perform operation
fmsub.s f23, f17, f16, f13, rtz # perform operation
fmsub.s f23, f17, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xed120b05 # load x3 with value 0xed120b05
sw x3, 0(x2) # store 0xed120b05 in memory
flw f21, 0(x2) # load 0xed120b05 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f22, f20, f21, f9, dyn # perform operation
fmsub.s f22, f20, f21, f9, rdn # perform operation
fmsub.s f22, f20, f21, f9, rmm # perform operation
fmsub.s f22, f20, f21, f9, rne # perform operation
fmsub.s f22, f20, f21, f9, rtz # perform operation
fmsub.s f22, f20, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x134e0043 # load x3 with value 0x134e0043
sw x3, 0(x2) # store 0x134e0043 in memory
flw f10, 0(x2) # load 0x134e0043 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmsub.s f22, f15, f10, f1, dyn # perform operation
fmsub.s f22, f15, f10, f1, rdn # perform operation
fmsub.s f22, f15, f10, f1, rmm # perform operation
fmsub.s f22, f15, f10, f1, rne # perform operation
fmsub.s f22, f15, f10, f1, rtz # perform operation
fmsub.s f22, f15, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x014c8214 # load x3 with value 0x014c8214
sw x3, 0(x2) # store 0x014c8214 in memory
flw f5, 0(x2) # load 0x014c8214 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f14, f11, f5, f26, dyn # perform operation
fmsub.s f14, f11, f5, f26, rdn # perform operation
fmsub.s f14, f11, f5, f26, rmm # perform operation
fmsub.s f14, f11, f5, f26, rne # perform operation
fmsub.s f14, f11, f5, f26, rtz # perform operation
fmsub.s f14, f11, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f11, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xc7ca9d00 # load x3 with value 0xc7ca9d00
sw x3, 0(x2) # store 0xc7ca9d00 in memory
flw f1, 0(x2) # load 0xc7ca9d00 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmsub.s f22, f11, f1, f27, dyn # perform operation
fmsub.s f22, f11, f1, f27, rdn # perform operation
fmsub.s f22, f11, f1, f27, rmm # perform operation
fmsub.s f22, f11, f1, f27, rne # perform operation
fmsub.s f22, f11, f1, f27, rtz # perform operation
fmsub.s f22, f11, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xdd5d92b5 # load x3 with value 0xdd5d92b5
sw x3, 0(x2) # store 0xdd5d92b5 in memory
flw f26, 0(x2) # load 0xdd5d92b5 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmsub.s f27, f31, f26, f5, dyn # perform operation
fmsub.s f27, f31, f26, f5, rdn # perform operation
fmsub.s f27, f31, f26, f5, rmm # perform operation
fmsub.s f27, f31, f26, f5, rne # perform operation
fmsub.s f27, f31, f26, f5, rtz # perform operation
fmsub.s f27, f31, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x6bd135a5 # load x3 with value 0x6bd135a5
sw x3, 0(x2) # store 0x6bd135a5 in memory
flw f5, 0(x2) # load 0x6bd135a5 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fmsub.s f27, f7, f5, f24, dyn # perform operation
fmsub.s f27, f7, f5, f24, rdn # perform operation
fmsub.s f27, f7, f5, f24, rmm # perform operation
fmsub.s f27, f7, f5, f24, rne # perform operation
fmsub.s f27, f7, f5, f24, rtz # perform operation
fmsub.s f27, f7, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x67c5de0d # load x3 with value 0x67c5de0d
sw x3, 0(x2) # store 0x67c5de0d in memory
flw f24, 0(x2) # load 0x67c5de0d from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fmsub.s f6, f2, f24, f30, dyn # perform operation
fmsub.s f6, f2, f24, f30, rdn # perform operation
fmsub.s f6, f2, f24, f30, rmm # perform operation
fmsub.s f6, f2, f24, f30, rne # perform operation
fmsub.s f6, f2, f24, f30, rtz # perform operation
fmsub.s f6, f2, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f2, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0xdb624928 # load x3 with value 0xdb624928
sw x3, 0(x2) # store 0xdb624928 in memory
flw f16, 0(x2) # load 0xdb624928 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmsub.s f11, f12, f16, f14, dyn # perform operation
fmsub.s f11, f12, f16, f14, rdn # perform operation
fmsub.s f11, f12, f16, f14, rmm # perform operation
fmsub.s f11, f12, f16, f14, rne # perform operation
fmsub.s f11, f12, f16, f14, rtz # perform operation
fmsub.s f11, f12, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x98ff639b # load x3 with value 0x98ff639b
sw x3, 0(x2) # store 0x98ff639b in memory
flw f8, 0(x2) # load 0x98ff639b from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmsub.s f7, f1, f8, f18, dyn # perform operation
fmsub.s f7, f1, f8, f18, rdn # perform operation
fmsub.s f7, f1, f8, f18, rmm # perform operation
fmsub.s f7, f1, f8, f18, rne # perform operation
fmsub.s f7, f1, f8, f18, rtz # perform operation
fmsub.s f7, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xfc11c8c2 # load x3 with value 0xfc11c8c2
sw x3, 0(x2) # store 0xfc11c8c2 in memory
flw f16, 0(x2) # load 0xfc11c8c2 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmsub.s f26, f19, f16, f23, dyn # perform operation
fmsub.s f26, f19, f16, f23, rdn # perform operation
fmsub.s f26, f19, f16, f23, rmm # perform operation
fmsub.s f26, f19, f16, f23, rne # perform operation
fmsub.s f26, f19, f16, f23, rtz # perform operation
fmsub.s f26, f19, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f19, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0xfe67c472 # load x3 with value 0xfe67c472
sw x3, 0(x2) # store 0xfe67c472 in memory
flw f11, 0(x2) # load 0xfe67c472 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f30, f10, f11, f23, dyn # perform operation
fmsub.s f30, f10, f11, f23, rdn # perform operation
fmsub.s f30, f10, f11, f23, rmm # perform operation
fmsub.s f30, f10, f11, f23, rne # perform operation
fmsub.s f30, f10, f11, f23, rtz # perform operation
fmsub.s f30, f10, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x00eaea48 # load x3 with value 0x00eaea48
sw x3, 0(x2) # store 0x00eaea48 in memory
flw f2, 0(x2) # load 0x00eaea48 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmsub.s f18, f28, f2, f17, dyn # perform operation
fmsub.s f18, f28, f2, f17, rdn # perform operation
fmsub.s f18, f28, f2, f17, rmm # perform operation
fmsub.s f18, f28, f2, f17, rne # perform operation
fmsub.s f18, f28, f2, f17, rtz # perform operation
fmsub.s f18, f28, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x7149501a # load x3 with value 0x7149501a
sw x3, 0(x2) # store 0x7149501a in memory
flw f28, 0(x2) # load 0x7149501a from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fmsub.s f15, f10, f28, f14, dyn # perform operation
fmsub.s f15, f10, f28, f14, rdn # perform operation
fmsub.s f15, f10, f28, f14, rmm # perform operation
fmsub.s f15, f10, f28, f14, rne # perform operation
fmsub.s f15, f10, f28, f14, rtz # perform operation
fmsub.s f15, f10, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f10, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x1e2b5243 # load x3 with value 0x1e2b5243
sw x3, 0(x2) # store 0x1e2b5243 in memory
flw f14, 0(x2) # load 0x1e2b5243 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmsub.s f31, f11, f14, f12, dyn # perform operation
fmsub.s f31, f11, f14, f12, rdn # perform operation
fmsub.s f31, f11, f14, f12, rmm # perform operation
fmsub.s f31, f11, f14, f12, rne # perform operation
fmsub.s f31, f11, f14, f12, rtz # perform operation
fmsub.s f31, f11, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x25fd3170 # load x3 with value 0x25fd3170
sw x3, 0(x2) # store 0x25fd3170 in memory
flw f21, 0(x2) # load 0x25fd3170 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmsub.s f30, f17, f21, f3, dyn # perform operation
fmsub.s f30, f17, f21, f3, rdn # perform operation
fmsub.s f30, f17, f21, f3, rmm # perform operation
fmsub.s f30, f17, f21, f3, rne # perform operation
fmsub.s f30, f17, f21, f3, rtz # perform operation
fmsub.s f30, f17, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x49a88fe4 # load x3 with value 0x49a88fe4
sw x3, 0(x2) # store 0x49a88fe4 in memory
flw f30, 0(x2) # load 0x49a88fe4 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fmsub.s f12, f20, f30, f18, dyn # perform operation
fmsub.s f12, f20, f30, f18, rdn # perform operation
fmsub.s f12, f20, f30, f18, rmm # perform operation
fmsub.s f12, f20, f30, f18, rne # perform operation
fmsub.s f12, f20, f30, f18, rtz # perform operation
fmsub.s f12, f20, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x2565edd6 # load x3 with value 0x2565edd6
sw x3, 0(x2) # store 0x2565edd6 in memory
flw f8, 0(x2) # load 0x2565edd6 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmsub.s f23, f20, f8, f27, dyn # perform operation
fmsub.s f23, f20, f8, f27, rdn # perform operation
fmsub.s f23, f20, f8, f27, rmm # perform operation
fmsub.s f23, f20, f8, f27, rne # perform operation
fmsub.s f23, f20, f8, f27, rtz # perform operation
fmsub.s f23, f20, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f20, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x4a745e99 # load x3 with value 0x4a745e99
sw x3, 0(x2) # store 0x4a745e99 in memory
flw f29, 0(x2) # load 0x4a745e99 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fmsub.s f12, f17, f29, f8, dyn # perform operation
fmsub.s f12, f17, f29, f8, rdn # perform operation
fmsub.s f12, f17, f29, f8, rmm # perform operation
fmsub.s f12, f17, f29, f8, rne # perform operation
fmsub.s f12, f17, f29, f8, rtz # perform operation
fmsub.s f12, f17, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f17, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f17, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f17, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f17, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f17, f29, f8 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
