///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fmul.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.956162
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fmul.d f12, f15, f9 # perform first operation
fmul.d f27, f12, f11 # perform second operation

# Testcase cmp_gpr_hazard raw test
fmul.d f6, f1, f4 # perform first operation
fmul.d f1, f26, f6 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmul.d f17, f7, f4 # perform first operation
fmul.d f17, f24, f7 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmul.d f22, f21, f4 # perform first operation
fmul.d f22, f28, f6 # perform second operation

# Testcase cmp_gpr_hazard war test
fmul.d f10, f21, f18 # perform first operation
fmul.d f21, f25, f31 # perform second operation

# Testcase cmp_gpr_hazard war test
fmul.d f5, f6, f23 # perform first operation
fmul.d f23, f8, f31 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x8a0ce9b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x397109d6 # load x3 with 32 MSBs 0x00000000397109d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000397109d6
sw x3, 0(x2) # store x3 (0x397109d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000397109d6 from memory into f0
li x3, 0xa517c983 # load x3 with 32 MSBs 0x00000000a517c983
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a517c983
sw x3, 0(x2) # store x3 (0xa517c983) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a517c983 from memory into f21
fmul.d f0, f0, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x96a25da7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4962d950 # load x3 with 32 MSBs 0x000000004962d950
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004962d950
sw x3, 0(x2) # store x3 (0x4962d950) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004962d950 from memory into f1
li x3, 0x0903aac2 # load x3 with 32 MSBs 0x000000000903aac2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000903aac2
sw x3, 0(x2) # store x3 (0x0903aac2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000903aac2 from memory into f25
fmul.d f1, f1, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x7e97efce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a299600 # load x3 with 32 MSBs 0x000000005a299600
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a299600
sw x3, 0(x2) # store x3 (0x5a299600) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005a299600 from memory into f2
li x3, 0x59bba5dc # load x3 with 32 MSBs 0x0000000059bba5dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059bba5dc
sw x3, 0(x2) # store x3 (0x59bba5dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000059bba5dc from memory into f7
fmul.d f2, f2, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xffb3fe4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc68bc5f # load x3 with 32 MSBs 0x00000000dc68bc5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc68bc5f
sw x3, 0(x2) # store x3 (0xdc68bc5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000dc68bc5f from memory into f3
li x3, 0x328920f6 # load x3 with 32 MSBs 0x00000000328920f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000328920f6
sw x3, 0(x2) # store x3 (0x328920f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000328920f6 from memory into f3
fmul.d f3, f3, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x5c071b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x298daf94 # load x3 with 32 MSBs 0x00000000298daf94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000298daf94
sw x3, 0(x2) # store x3 (0x298daf94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000298daf94 from memory into f4
li x3, 0x727ed5fa # load x3 with 32 MSBs 0x00000000727ed5fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000727ed5fa
sw x3, 0(x2) # store x3 (0x727ed5fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000727ed5fa from memory into f21
fmul.d f4, f4, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xdaf0e438 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4533ea15 # load x3 with 32 MSBs 0x000000004533ea15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004533ea15
sw x3, 0(x2) # store x3 (0x4533ea15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004533ea15 from memory into f5
li x3, 0x71b4afc1 # load x3 with 32 MSBs 0x0000000071b4afc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071b4afc1
sw x3, 0(x2) # store x3 (0x71b4afc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000071b4afc1 from memory into f21
fmul.d f5, f5, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x5d9522ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b071a9c # load x3 with 32 MSBs 0x000000004b071a9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b071a9c
sw x3, 0(x2) # store x3 (0x4b071a9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004b071a9c from memory into f6
li x3, 0x897588c2 # load x3 with 32 MSBs 0x00000000897588c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000897588c2
sw x3, 0(x2) # store x3 (0x897588c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000897588c2 from memory into f28
fmul.d f6, f6, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x8f495172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbed602a3 # load x3 with 32 MSBs 0x00000000bed602a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bed602a3
sw x3, 0(x2) # store x3 (0xbed602a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000bed602a3 from memory into f7
li x3, 0x6051e56e # load x3 with 32 MSBs 0x000000006051e56e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006051e56e
sw x3, 0(x2) # store x3 (0x6051e56e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006051e56e from memory into f7
fmul.d f7, f7, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x1d8895cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0c871c8 # load x3 with 32 MSBs 0x00000000e0c871c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0c871c8
sw x3, 0(x2) # store x3 (0xe0c871c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e0c871c8 from memory into f8
li x3, 0xbfcc86a3 # load x3 with 32 MSBs 0x00000000bfcc86a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfcc86a3
sw x3, 0(x2) # store x3 (0xbfcc86a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000bfcc86a3 from memory into f29
fmul.d f8, f8, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x7826a06e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22c0832b # load x3 with 32 MSBs 0x0000000022c0832b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022c0832b
sw x3, 0(x2) # store x3 (0x22c0832b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000022c0832b from memory into f9
li x3, 0x8bc5ba5c # load x3 with 32 MSBs 0x000000008bc5ba5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bc5ba5c
sw x3, 0(x2) # store x3 (0x8bc5ba5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008bc5ba5c from memory into f5
fmul.d f9, f9, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xf8d7cdd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e50de70 # load x3 with 32 MSBs 0x000000007e50de70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e50de70
sw x3, 0(x2) # store x3 (0x7e50de70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007e50de70 from memory into f10
li x3, 0xfc885834 # load x3 with 32 MSBs 0x00000000fc885834
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc885834
sw x3, 0(x2) # store x3 (0xfc885834) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000fc885834 from memory into f27
fmul.d f10, f10, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x236c4613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x830925ba # load x3 with 32 MSBs 0x00000000830925ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000830925ba
sw x3, 0(x2) # store x3 (0x830925ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000830925ba from memory into f11
li x3, 0x9ef76a38 # load x3 with 32 MSBs 0x000000009ef76a38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ef76a38
sw x3, 0(x2) # store x3 (0x9ef76a38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009ef76a38 from memory into f17
fmul.d f11, f11, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xe8cfc280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba79c06e # load x3 with 32 MSBs 0x00000000ba79c06e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba79c06e
sw x3, 0(x2) # store x3 (0xba79c06e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ba79c06e from memory into f12
li x3, 0xb6790585 # load x3 with 32 MSBs 0x00000000b6790585
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6790585
sw x3, 0(x2) # store x3 (0xb6790585) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b6790585 from memory into f30
fmul.d f12, f12, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x2c5e61b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea3550fc # load x3 with 32 MSBs 0x00000000ea3550fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea3550fc
sw x3, 0(x2) # store x3 (0xea3550fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ea3550fc from memory into f13
li x3, 0x332f7e3a # load x3 with 32 MSBs 0x00000000332f7e3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000332f7e3a
sw x3, 0(x2) # store x3 (0x332f7e3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000332f7e3a from memory into f11
fmul.d f13, f13, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0xae2b71b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e83395f # load x3 with 32 MSBs 0x000000009e83395f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e83395f
sw x3, 0(x2) # store x3 (0x9e83395f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009e83395f from memory into f14
li x3, 0xdc7b5543 # load x3 with 32 MSBs 0x00000000dc7b5543
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc7b5543
sw x3, 0(x2) # store x3 (0xdc7b5543) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dc7b5543 from memory into f6
fmul.d f14, f14, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0xc419cd26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a9c741e # load x3 with 32 MSBs 0x000000001a9c741e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a9c741e
sw x3, 0(x2) # store x3 (0x1a9c741e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001a9c741e from memory into f15
li x3, 0x431686b1 # load x3 with 32 MSBs 0x00000000431686b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000431686b1
sw x3, 0(x2) # store x3 (0x431686b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000431686b1 from memory into f12
fmul.d f15, f15, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xd0903b25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x386aa6ad # load x3 with 32 MSBs 0x00000000386aa6ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000386aa6ad
sw x3, 0(x2) # store x3 (0x386aa6ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000386aa6ad from memory into f16
li x3, 0x7c262d15 # load x3 with 32 MSBs 0x000000007c262d15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c262d15
sw x3, 0(x2) # store x3 (0x7c262d15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007c262d15 from memory into f13
fmul.d f16, f16, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x104ab2c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5d15eb1 # load x3 with 32 MSBs 0x00000000d5d15eb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5d15eb1
sw x3, 0(x2) # store x3 (0xd5d15eb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d5d15eb1 from memory into f17
li x3, 0xe608ce0d # load x3 with 32 MSBs 0x00000000e608ce0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e608ce0d
sw x3, 0(x2) # store x3 (0xe608ce0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e608ce0d from memory into f2
fmul.d f17, f17, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x14ec2bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5afe5a50 # load x3 with 32 MSBs 0x000000005afe5a50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005afe5a50
sw x3, 0(x2) # store x3 (0x5afe5a50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005afe5a50 from memory into f18
li x3, 0x7f62481f # load x3 with 32 MSBs 0x000000007f62481f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f62481f
sw x3, 0(x2) # store x3 (0x7f62481f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007f62481f from memory into f22
fmul.d f18, f18, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x86019ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1fcafda1 # load x3 with 32 MSBs 0x000000001fcafda1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fcafda1
sw x3, 0(x2) # store x3 (0x1fcafda1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001fcafda1 from memory into f19
li x3, 0x645e6835 # load x3 with 32 MSBs 0x00000000645e6835
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000645e6835
sw x3, 0(x2) # store x3 (0x645e6835) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000645e6835 from memory into f15
fmul.d f19, f19, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x6cc9e7f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57d15c8e # load x3 with 32 MSBs 0x0000000057d15c8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057d15c8e
sw x3, 0(x2) # store x3 (0x57d15c8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000057d15c8e from memory into f20
li x3, 0x016d44a6 # load x3 with 32 MSBs 0x00000000016d44a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000016d44a6
sw x3, 0(x2) # store x3 (0x016d44a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000016d44a6 from memory into f10
fmul.d f20, f20, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x3daf8e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20d8bd9f # load x3 with 32 MSBs 0x0000000020d8bd9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020d8bd9f
sw x3, 0(x2) # store x3 (0x20d8bd9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000020d8bd9f from memory into f21
li x3, 0x518ddc04 # load x3 with 32 MSBs 0x00000000518ddc04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000518ddc04
sw x3, 0(x2) # store x3 (0x518ddc04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000518ddc04 from memory into f22
fmul.d f21, f21, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xf320b77d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb1c7d26 # load x3 with 32 MSBs 0x00000000eb1c7d26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb1c7d26
sw x3, 0(x2) # store x3 (0xeb1c7d26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000eb1c7d26 from memory into f22
li x3, 0xa2a4ec6d # load x3 with 32 MSBs 0x00000000a2a4ec6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2a4ec6d
sw x3, 0(x2) # store x3 (0xa2a4ec6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a2a4ec6d from memory into f14
fmul.d f22, f22, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xc6c4b3c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b991fa9 # load x3 with 32 MSBs 0x000000008b991fa9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b991fa9
sw x3, 0(x2) # store x3 (0x8b991fa9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008b991fa9 from memory into f23
li x3, 0xcf56fdea # load x3 with 32 MSBs 0x00000000cf56fdea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf56fdea
sw x3, 0(x2) # store x3 (0xcf56fdea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000cf56fdea from memory into f13
fmul.d f23, f23, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0xea0d5a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcbf86114 # load x3 with 32 MSBs 0x00000000cbf86114
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbf86114
sw x3, 0(x2) # store x3 (0xcbf86114) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cbf86114 from memory into f24
li x3, 0x5012aee1 # load x3 with 32 MSBs 0x000000005012aee1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005012aee1
sw x3, 0(x2) # store x3 (0x5012aee1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005012aee1 from memory into f13
fmul.d f24, f24, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x0694b660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x852ec366 # load x3 with 32 MSBs 0x00000000852ec366
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000852ec366
sw x3, 0(x2) # store x3 (0x852ec366) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000852ec366 from memory into f25
li x3, 0x3a25769c # load x3 with 32 MSBs 0x000000003a25769c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a25769c
sw x3, 0(x2) # store x3 (0x3a25769c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003a25769c from memory into f31
fmul.d f25, f25, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x87ea1f3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d3a94d1 # load x3 with 32 MSBs 0x000000008d3a94d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d3a94d1
sw x3, 0(x2) # store x3 (0x8d3a94d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000008d3a94d1 from memory into f26
li x3, 0xe4bf8d98 # load x3 with 32 MSBs 0x00000000e4bf8d98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4bf8d98
sw x3, 0(x2) # store x3 (0xe4bf8d98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e4bf8d98 from memory into f17
fmul.d f26, f26, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xd353d229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03284b2a # load x3 with 32 MSBs 0x0000000003284b2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003284b2a
sw x3, 0(x2) # store x3 (0x03284b2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000003284b2a from memory into f27
li x3, 0x31889bb2 # load x3 with 32 MSBs 0x0000000031889bb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031889bb2
sw x3, 0(x2) # store x3 (0x31889bb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000031889bb2 from memory into f21
fmul.d f27, f27, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xa9ea9707 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa7b01d07 # load x3 with 32 MSBs 0x00000000a7b01d07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7b01d07
sw x3, 0(x2) # store x3 (0xa7b01d07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a7b01d07 from memory into f28
li x3, 0x208e93f0 # load x3 with 32 MSBs 0x00000000208e93f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000208e93f0
sw x3, 0(x2) # store x3 (0x208e93f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000208e93f0 from memory into f14
fmul.d f28, f28, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xdd777334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25ab3fb6 # load x3 with 32 MSBs 0x0000000025ab3fb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025ab3fb6
sw x3, 0(x2) # store x3 (0x25ab3fb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000025ab3fb6 from memory into f29
li x3, 0x66be36e4 # load x3 with 32 MSBs 0x0000000066be36e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066be36e4
sw x3, 0(x2) # store x3 (0x66be36e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000066be36e4 from memory into f26
fmul.d f29, f29, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0xade33ea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b9fae61 # load x3 with 32 MSBs 0x000000009b9fae61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b9fae61
sw x3, 0(x2) # store x3 (0x9b9fae61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009b9fae61 from memory into f30
li x3, 0x4dcca4a8 # load x3 with 32 MSBs 0x000000004dcca4a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dcca4a8
sw x3, 0(x2) # store x3 (0x4dcca4a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004dcca4a8 from memory into f25
fmul.d f30, f30, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xbab442af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc028bfb3 # load x3 with 32 MSBs 0x00000000c028bfb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c028bfb3
sw x3, 0(x2) # store x3 (0xc028bfb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c028bfb3 from memory into f31
li x3, 0xd7ee1f5c # load x3 with 32 MSBs 0x00000000d7ee1f5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7ee1f5c
sw x3, 0(x2) # store x3 (0xd7ee1f5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d7ee1f5c from memory into f9
fmul.d f31, f31, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x16c49e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bd37076 # load x3 with 32 MSBs 0x000000004bd37076
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bd37076
sw x3, 0(x2) # store x3 (0x4bd37076) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004bd37076 from memory into f31
li x3, 0x5d6d7f3c # load x3 with 32 MSBs 0x000000005d6d7f3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d6d7f3c
sw x3, 0(x2) # store x3 (0x5d6d7f3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000005d6d7f3c from memory into f0
fmul.d f0, f31, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x8f9ed2c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x980b5969 # load x3 with 32 MSBs 0x00000000980b5969
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000980b5969
sw x3, 0(x2) # store x3 (0x980b5969) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000980b5969 from memory into f3
li x3, 0xfe88bdae # load x3 with 32 MSBs 0x00000000fe88bdae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe88bdae
sw x3, 0(x2) # store x3 (0xfe88bdae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fe88bdae from memory into f1
fmul.d f1, f3, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x1e08f957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x732ade92 # load x3 with 32 MSBs 0x00000000732ade92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000732ade92
sw x3, 0(x2) # store x3 (0x732ade92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000732ade92 from memory into f20
li x3, 0x85cfa27c # load x3 with 32 MSBs 0x0000000085cfa27c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085cfa27c
sw x3, 0(x2) # store x3 (0x85cfa27c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000085cfa27c from memory into f2
fmul.d f2, f20, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0xfd745695 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4cc47439 # load x3 with 32 MSBs 0x000000004cc47439
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cc47439
sw x3, 0(x2) # store x3 (0x4cc47439) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004cc47439 from memory into f7
li x3, 0xfbe8a871 # load x3 with 32 MSBs 0x00000000fbe8a871
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbe8a871
sw x3, 0(x2) # store x3 (0xfbe8a871) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fbe8a871 from memory into f3
fmul.d f3, f7, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x9bb9b904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5bc86a8a # load x3 with 32 MSBs 0x000000005bc86a8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005bc86a8a
sw x3, 0(x2) # store x3 (0x5bc86a8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000005bc86a8a from memory into f20
li x3, 0xadb237c2 # load x3 with 32 MSBs 0x00000000adb237c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000adb237c2
sw x3, 0(x2) # store x3 (0xadb237c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000adb237c2 from memory into f4
fmul.d f4, f20, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x7dd437bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67cae5cd # load x3 with 32 MSBs 0x0000000067cae5cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067cae5cd
sw x3, 0(x2) # store x3 (0x67cae5cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000067cae5cd from memory into f17
li x3, 0xc5e15681 # load x3 with 32 MSBs 0x00000000c5e15681
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5e15681
sw x3, 0(x2) # store x3 (0xc5e15681) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c5e15681 from memory into f5
fmul.d f5, f17, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xc7aa97d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1e98b3a # load x3 with 32 MSBs 0x00000000a1e98b3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1e98b3a
sw x3, 0(x2) # store x3 (0xa1e98b3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a1e98b3a from memory into f27
li x3, 0x3cad02e2 # load x3 with 32 MSBs 0x000000003cad02e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cad02e2
sw x3, 0(x2) # store x3 (0x3cad02e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003cad02e2 from memory into f6
fmul.d f6, f27, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xf3de6878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19652e0a # load x3 with 32 MSBs 0x0000000019652e0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019652e0a
sw x3, 0(x2) # store x3 (0x19652e0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000019652e0a from memory into f1
li x3, 0x5c8e9d29 # load x3 with 32 MSBs 0x000000005c8e9d29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c8e9d29
sw x3, 0(x2) # store x3 (0x5c8e9d29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005c8e9d29 from memory into f7
fmul.d f7, f1, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x66a4f328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x61492a9a # load x3 with 32 MSBs 0x0000000061492a9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061492a9a
sw x3, 0(x2) # store x3 (0x61492a9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000061492a9a from memory into f6
li x3, 0x87969167 # load x3 with 32 MSBs 0x0000000087969167
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087969167
sw x3, 0(x2) # store x3 (0x87969167) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000087969167 from memory into f8
fmul.d f8, f6, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xa6471356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0786210c # load x3 with 32 MSBs 0x000000000786210c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000786210c
sw x3, 0(x2) # store x3 (0x0786210c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000786210c from memory into f9
li x3, 0xc6b1abdf # load x3 with 32 MSBs 0x00000000c6b1abdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6b1abdf
sw x3, 0(x2) # store x3 (0xc6b1abdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c6b1abdf from memory into f9
fmul.d f9, f9, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xde45ca73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0779818b # load x3 with 32 MSBs 0x000000000779818b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000779818b
sw x3, 0(x2) # store x3 (0x0779818b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000779818b from memory into f25
li x3, 0x9422963f # load x3 with 32 MSBs 0x000000009422963f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009422963f
sw x3, 0(x2) # store x3 (0x9422963f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009422963f from memory into f10
fmul.d f10, f25, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0xc27ccf85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd66d77bc # load x3 with 32 MSBs 0x00000000d66d77bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d66d77bc
sw x3, 0(x2) # store x3 (0xd66d77bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d66d77bc from memory into f8
li x3, 0xa49ab30c # load x3 with 32 MSBs 0x00000000a49ab30c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a49ab30c
sw x3, 0(x2) # store x3 (0xa49ab30c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a49ab30c from memory into f11
fmul.d f11, f8, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x8ce5d2ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56f15a3b # load x3 with 32 MSBs 0x0000000056f15a3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056f15a3b
sw x3, 0(x2) # store x3 (0x56f15a3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000056f15a3b from memory into f31
li x3, 0x01fb5a83 # load x3 with 32 MSBs 0x0000000001fb5a83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001fb5a83
sw x3, 0(x2) # store x3 (0x01fb5a83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000001fb5a83 from memory into f12
fmul.d f12, f31, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x1a3d5452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00d7f8de # load x3 with 32 MSBs 0x0000000000d7f8de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000d7f8de
sw x3, 0(x2) # store x3 (0x00d7f8de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000d7f8de from memory into f4
li x3, 0x4482fbbe # load x3 with 32 MSBs 0x000000004482fbbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004482fbbe
sw x3, 0(x2) # store x3 (0x4482fbbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004482fbbe from memory into f13
fmul.d f13, f4, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xbd278bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeeb9e6c9 # load x3 with 32 MSBs 0x00000000eeb9e6c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eeb9e6c9
sw x3, 0(x2) # store x3 (0xeeb9e6c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000eeb9e6c9 from memory into f23
li x3, 0xdaadaca7 # load x3 with 32 MSBs 0x00000000daadaca7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daadaca7
sw x3, 0(x2) # store x3 (0xdaadaca7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000daadaca7 from memory into f14
fmul.d f14, f23, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0xf78dbc08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7dbb79b # load x3 with 32 MSBs 0x00000000c7dbb79b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7dbb79b
sw x3, 0(x2) # store x3 (0xc7dbb79b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c7dbb79b from memory into f25
li x3, 0x316b4dc9 # load x3 with 32 MSBs 0x00000000316b4dc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000316b4dc9
sw x3, 0(x2) # store x3 (0x316b4dc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000316b4dc9 from memory into f15
fmul.d f15, f25, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0xe6767d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda3b01e8 # load x3 with 32 MSBs 0x00000000da3b01e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da3b01e8
sw x3, 0(x2) # store x3 (0xda3b01e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000da3b01e8 from memory into f18
li x3, 0x8da9cb58 # load x3 with 32 MSBs 0x000000008da9cb58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008da9cb58
sw x3, 0(x2) # store x3 (0x8da9cb58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008da9cb58 from memory into f16
fmul.d f16, f18, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x2e1afa87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7dbd4d5e # load x3 with 32 MSBs 0x000000007dbd4d5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007dbd4d5e
sw x3, 0(x2) # store x3 (0x7dbd4d5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007dbd4d5e from memory into f10
li x3, 0xeb7eedb7 # load x3 with 32 MSBs 0x00000000eb7eedb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb7eedb7
sw x3, 0(x2) # store x3 (0xeb7eedb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000eb7eedb7 from memory into f17
fmul.d f17, f10, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x47482d5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbce7ace2 # load x3 with 32 MSBs 0x00000000bce7ace2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bce7ace2
sw x3, 0(x2) # store x3 (0xbce7ace2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000bce7ace2 from memory into f7
li x3, 0xc1661c4c # load x3 with 32 MSBs 0x00000000c1661c4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1661c4c
sw x3, 0(x2) # store x3 (0xc1661c4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c1661c4c from memory into f18
fmul.d f18, f7, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xed290fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f75858c # load x3 with 32 MSBs 0x000000004f75858c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f75858c
sw x3, 0(x2) # store x3 (0x4f75858c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004f75858c from memory into f16
li x3, 0x3e376c49 # load x3 with 32 MSBs 0x000000003e376c49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e376c49
sw x3, 0(x2) # store x3 (0x3e376c49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003e376c49 from memory into f19
fmul.d f19, f16, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x6e7cc9d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57c7cc68 # load x3 with 32 MSBs 0x0000000057c7cc68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057c7cc68
sw x3, 0(x2) # store x3 (0x57c7cc68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000057c7cc68 from memory into f30
li x3, 0x029ee0af # load x3 with 32 MSBs 0x00000000029ee0af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000029ee0af
sw x3, 0(x2) # store x3 (0x029ee0af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000029ee0af from memory into f20
fmul.d f20, f30, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x68459a70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4042997 # load x3 with 32 MSBs 0x00000000b4042997
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4042997
sw x3, 0(x2) # store x3 (0xb4042997) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b4042997 from memory into f13
li x3, 0x7072f4cc # load x3 with 32 MSBs 0x000000007072f4cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007072f4cc
sw x3, 0(x2) # store x3 (0x7072f4cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007072f4cc from memory into f21
fmul.d f21, f13, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x6ef40f48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0ab87e27 # load x3 with 32 MSBs 0x000000000ab87e27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ab87e27
sw x3, 0(x2) # store x3 (0x0ab87e27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000ab87e27 from memory into f22
li x3, 0x5fee6e84 # load x3 with 32 MSBs 0x000000005fee6e84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fee6e84
sw x3, 0(x2) # store x3 (0x5fee6e84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005fee6e84 from memory into f22
fmul.d f22, f22, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x9a0ff3c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa040e5b6 # load x3 with 32 MSBs 0x00000000a040e5b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a040e5b6
sw x3, 0(x2) # store x3 (0xa040e5b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a040e5b6 from memory into f17
li x3, 0xa9c77b19 # load x3 with 32 MSBs 0x00000000a9c77b19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9c77b19
sw x3, 0(x2) # store x3 (0xa9c77b19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a9c77b19 from memory into f23
fmul.d f23, f17, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x627e8634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e4eea0e # load x3 with 32 MSBs 0x000000005e4eea0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e4eea0e
sw x3, 0(x2) # store x3 (0x5e4eea0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000005e4eea0e from memory into f5
li x3, 0xbf48405d # load x3 with 32 MSBs 0x00000000bf48405d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf48405d
sw x3, 0(x2) # store x3 (0xbf48405d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bf48405d from memory into f24
fmul.d f24, f5, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xa1b32a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e8b72c9 # load x3 with 32 MSBs 0x000000001e8b72c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e8b72c9
sw x3, 0(x2) # store x3 (0x1e8b72c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001e8b72c9 from memory into f2
li x3, 0x47ebf649 # load x3 with 32 MSBs 0x0000000047ebf649
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047ebf649
sw x3, 0(x2) # store x3 (0x47ebf649) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000047ebf649 from memory into f25
fmul.d f25, f2, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xb6c17929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb851350 # load x3 with 32 MSBs 0x00000000db851350
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db851350
sw x3, 0(x2) # store x3 (0xdb851350) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000db851350 from memory into f10
li x3, 0xee84e254 # load x3 with 32 MSBs 0x00000000ee84e254
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee84e254
sw x3, 0(x2) # store x3 (0xee84e254) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ee84e254 from memory into f26
fmul.d f26, f10, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0x72bebdc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e8013c9 # load x3 with 32 MSBs 0x000000003e8013c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e8013c9
sw x3, 0(x2) # store x3 (0x3e8013c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003e8013c9 from memory into f16
li x3, 0x78a0ea07 # load x3 with 32 MSBs 0x0000000078a0ea07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078a0ea07
sw x3, 0(x2) # store x3 (0x78a0ea07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000078a0ea07 from memory into f27
fmul.d f27, f16, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xeb7df503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e5d734b # load x3 with 32 MSBs 0x000000003e5d734b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e5d734b
sw x3, 0(x2) # store x3 (0x3e5d734b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003e5d734b from memory into f9
li x3, 0x89b5435c # load x3 with 32 MSBs 0x0000000089b5435c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089b5435c
sw x3, 0(x2) # store x3 (0x89b5435c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000089b5435c from memory into f28
fmul.d f28, f9, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x9c717698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x371d23f1 # load x3 with 32 MSBs 0x00000000371d23f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000371d23f1
sw x3, 0(x2) # store x3 (0x371d23f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000371d23f1 from memory into f13
li x3, 0xa4814c9b # load x3 with 32 MSBs 0x00000000a4814c9b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4814c9b
sw x3, 0(x2) # store x3 (0xa4814c9b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a4814c9b from memory into f29
fmul.d f29, f13, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x3d702550 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66922ff7 # load x3 with 32 MSBs 0x0000000066922ff7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066922ff7
sw x3, 0(x2) # store x3 (0x66922ff7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000066922ff7 from memory into f10
li x3, 0xa43225fc # load x3 with 32 MSBs 0x00000000a43225fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a43225fc
sw x3, 0(x2) # store x3 (0xa43225fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a43225fc from memory into f30
fmul.d f30, f10, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x42bdc733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2f72905 # load x3 with 32 MSBs 0x00000000a2f72905
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2f72905
sw x3, 0(x2) # store x3 (0xa2f72905) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a2f72905 from memory into f6
li x3, 0x2033ebf5 # load x3 with 32 MSBs 0x000000002033ebf5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002033ebf5
sw x3, 0(x2) # store x3 (0x2033ebf5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002033ebf5 from memory into f31
fmul.d f31, f6, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x27, 0x3607b5f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xc080eac2 # load x3 with 32 MSBs 0x00000000c080eac2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c080eac2
sw x3, 0(x2) # store x3 (0xc080eac2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c080eac2 from memory into f14
fmul.d f27, f6, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x29, 0xf37c6a0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0xed03eaa4 # load x3 with 32 MSBs 0x00000000ed03eaa4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed03eaa4
sw x3, 0(x2) # store x3 (0xed03eaa4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ed03eaa4 from memory into f22
fmul.d f29, f6, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x23, 0x8cab5894 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x1d7de35f # load x3 with 32 MSBs 0x000000001d7de35f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d7de35f
sw x3, 0(x2) # store x3 (0x1d7de35f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001d7de35f from memory into f7
fmul.d f23, f17, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x3, 0x2ae2fd10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0xfb9fda37 # load x3 with 32 MSBs 0x00000000fb9fda37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb9fda37
sw x3, 0(x2) # store x3 (0xfb9fda37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fb9fda37 from memory into f17
fmul.d f3, f27, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x9, 0x97104e8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x1f60c9be # load x3 with 32 MSBs 0x000000001f60c9be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f60c9be
sw x3, 0(x2) # store x3 (0x1f60c9be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001f60c9be from memory into f22
fmul.d f9, f26, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x25, 0xa26399cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xa48972f7 # load x3 with 32 MSBs 0x00000000a48972f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a48972f7
sw x3, 0(x2) # store x3 (0xa48972f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a48972f7 from memory into f1
fmul.d f25, f15, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x14, 0xea6b93fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x6f2a5f48 # load x3 with 32 MSBs 0x000000006f2a5f48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f2a5f48
sw x3, 0(x2) # store x3 (0x6f2a5f48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000006f2a5f48 from memory into f2
fmul.d f14, f24, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x30, 0xd925ef33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x17644c16 # load x3 with 32 MSBs 0x0000000017644c16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017644c16
sw x3, 0(x2) # store x3 (0x17644c16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000017644c16 from memory into f31
fmul.d f30, f2, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x31, 0xa6955cc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0xc42a593a # load x3 with 32 MSBs 0x00000000c42a593a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c42a593a
sw x3, 0(x2) # store x3 (0xc42a593a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c42a593a from memory into f26
fmul.d f31, f30, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x5, 0x00502dcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xaf472fb1 # load x3 with 32 MSBs 0x00000000af472fb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af472fb1
sw x3, 0(x2) # store x3 (0xaf472fb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000af472fb1 from memory into f18
fmul.d f5, f31, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x19, 0x3fc5cf19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0xffabd5ed # load x3 with 32 MSBs 0x00000000ffabd5ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffabd5ed
sw x3, 0(x2) # store x3 (0xffabd5ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ffabd5ed from memory into f6
fmul.d f19, f25, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x30, 0x6c9dd30b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x6e405c81 # load x3 with 32 MSBs 0x000000006e405c81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e405c81
sw x3, 0(x2) # store x3 (0x6e405c81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006e405c81 from memory into f16
fmul.d f30, f2, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x6, 0x9ee1186e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x2d6c3d5d # load x3 with 32 MSBs 0x000000002d6c3d5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d6c3d5d
sw x3, 0(x2) # store x3 (0x2d6c3d5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002d6c3d5d from memory into f5
fmul.d f6, f18, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x4, 0xea13a4c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x51409279 # load x3 with 32 MSBs 0x0000000051409279
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051409279
sw x3, 0(x2) # store x3 (0x51409279) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000051409279 from memory into f21
fmul.d f4, f20, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x3, 0x3edf26a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x0eb1580b # load x3 with 32 MSBs 0x000000000eb1580b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000eb1580b
sw x3, 0(x2) # store x3 (0x0eb1580b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000eb1580b from memory into f7
fmul.d f3, f23, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x5, 0x6786d82a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xcf68f9f9 # load x3 with 32 MSBs 0x00000000cf68f9f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf68f9f9
sw x3, 0(x2) # store x3 (0xcf68f9f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000cf68f9f9 from memory into f6
fmul.d f5, f3, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x21, 0x27be5898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0xc95a85d1 # load x3 with 32 MSBs 0x00000000c95a85d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c95a85d1
sw x3, 0(x2) # store x3 (0xc95a85d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c95a85d1 from memory into f17
fmul.d f21, f10, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x4, 0xefb6c92b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x08fa843d # load x3 with 32 MSBs 0x0000000008fa843d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008fa843d
sw x3, 0(x2) # store x3 (0x08fa843d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000008fa843d from memory into f2
fmul.d f4, f26, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x22, 0x04c81863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x8c68017d # load x3 with 32 MSBs 0x000000008c68017d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c68017d
sw x3, 0(x2) # store x3 (0x8c68017d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008c68017d from memory into f28
fmul.d f22, f7, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x22, 0x7d796699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xd65a2007 # load x3 with 32 MSBs 0x00000000d65a2007
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d65a2007
sw x3, 0(x2) # store x3 (0xd65a2007) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d65a2007 from memory into f17
fmul.d f22, f6, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x24, 0xa0ebd5c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0xa8f2f52b # load x3 with 32 MSBs 0x00000000a8f2f52b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8f2f52b
sw x3, 0(x2) # store x3 (0xa8f2f52b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a8f2f52b from memory into f18
fmul.d f24, f14, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x17, 0xce866215 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0xc286808e # load x3 with 32 MSBs 0x00000000c286808e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c286808e
sw x3, 0(x2) # store x3 (0xc286808e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c286808e from memory into f13
fmul.d f17, f29, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x21, 0x7636a240 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x2be1e369 # load x3 with 32 MSBs 0x000000002be1e369
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002be1e369
sw x3, 0(x2) # store x3 (0x2be1e369) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002be1e369 from memory into f19
fmul.d f21, f23, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x27, 0x942bc1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xa1dd49da # load x3 with 32 MSBs 0x00000000a1dd49da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1dd49da
sw x3, 0(x2) # store x3 (0xa1dd49da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a1dd49da from memory into f13
fmul.d f27, f14, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x6, 0x76231559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x9623a8c0 # load x3 with 32 MSBs 0x000000009623a8c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009623a8c0
sw x3, 0(x2) # store x3 (0x9623a8c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009623a8c0 from memory into f19
fmul.d f6, f1, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x30, 0xf1414d1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0x4ff5fe7a # load x3 with 32 MSBs 0x000000004ff5fe7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ff5fe7a
sw x3, 0(x2) # store x3 (0x4ff5fe7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004ff5fe7a from memory into f31
fmul.d f30, f4, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x4, 0xef749514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcac8853b # load x3 with 32 MSBs 0x00000000cac8853b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cac8853b
sw x3, 0(x2) # store x3 (0xcac8853b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000cac8853b from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fmul.d f4, f26, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x20, 0x29df7ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13140d92 # load x3 with 32 MSBs 0x0000000013140d92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013140d92
sw x3, 0(x2) # store x3 (0x13140d92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000013140d92 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fmul.d f20, f3, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x29, 0x2c5e106e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50fad99e # load x3 with 32 MSBs 0x0000000050fad99e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050fad99e
sw x3, 0(x2) # store x3 (0x50fad99e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000050fad99e from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fmul.d f29, f1, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x19, 0x800b78d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x94781231 # load x3 with 32 MSBs 0x0000000094781231
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094781231
sw x3, 0(x2) # store x3 (0x94781231) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000094781231 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fmul.d f19, f23, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x18, 0x06963427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbfd4022 # load x3 with 32 MSBs 0x00000000dbfd4022
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbfd4022
sw x3, 0(x2) # store x3 (0xdbfd4022) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000dbfd4022 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fmul.d f18, f27, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x25, 0xb1745798 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3222241 # load x3 with 32 MSBs 0x00000000f3222241
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3222241
sw x3, 0(x2) # store x3 (0xf3222241) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f3222241 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmul.d f25, f19, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x5, 0x5fc61b59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a1b8d70 # load x3 with 32 MSBs 0x000000004a1b8d70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a1b8d70
sw x3, 0(x2) # store x3 (0x4a1b8d70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004a1b8d70 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fmul.d f5, f18, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x29, 0xde974633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b1e941b # load x3 with 32 MSBs 0x000000004b1e941b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b1e941b
sw x3, 0(x2) # store x3 (0x4b1e941b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004b1e941b from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fmul.d f29, f25, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x4, 0x84b07d13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe67b9518 # load x3 with 32 MSBs 0x00000000e67b9518
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e67b9518
sw x3, 0(x2) # store x3 (0xe67b9518) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e67b9518 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f4, f14, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x26, 0xaee92042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e189e92 # load x3 with 32 MSBs 0x000000000e189e92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e189e92
sw x3, 0(x2) # store x3 (0x0e189e92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000e189e92 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fmul.d f26, f10, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x25, 0x5027254f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71b42839 # load x3 with 32 MSBs 0x0000000071b42839
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071b42839
sw x3, 0(x2) # store x3 (0x71b42839) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000071b42839 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmul.d f25, f15, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x13, 0xe1ffee0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc07a3c21 # load x3 with 32 MSBs 0x00000000c07a3c21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c07a3c21
sw x3, 0(x2) # store x3 (0xc07a3c21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c07a3c21 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fmul.d f13, f19, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x29, 0xd6400eb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba3a7d72 # load x3 with 32 MSBs 0x00000000ba3a7d72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba3a7d72
sw x3, 0(x2) # store x3 (0xba3a7d72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ba3a7d72 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fmul.d f29, f27, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x3, 0x306c1d23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe14dd8fe # load x3 with 32 MSBs 0x00000000e14dd8fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e14dd8fe
sw x3, 0(x2) # store x3 (0xe14dd8fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e14dd8fe from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fmul.d f3, f19, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x14, 0x183e8825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb66a7d77 # load x3 with 32 MSBs 0x00000000b66a7d77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b66a7d77
sw x3, 0(x2) # store x3 (0xb66a7d77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b66a7d77 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fmul.d f14, f18, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x20, 0xedb26816 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4712bbdf # load x3 with 32 MSBs 0x000000004712bbdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004712bbdf
sw x3, 0(x2) # store x3 (0x4712bbdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004712bbdf from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fmul.d f20, f4, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x6, 0xcf5c63d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9163a4f7 # load x3 with 32 MSBs 0x000000009163a4f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009163a4f7
sw x3, 0(x2) # store x3 (0x9163a4f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009163a4f7 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fmul.d f6, f21, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x26, 0x97fafc40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40372cc2 # load x3 with 32 MSBs 0x0000000040372cc2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040372cc2
sw x3, 0(x2) # store x3 (0x40372cc2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000040372cc2 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fmul.d f26, f6, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x9, 0xcc0de446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c154a03 # load x3 with 32 MSBs 0x000000003c154a03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c154a03
sw x3, 0(x2) # store x3 (0x3c154a03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003c154a03 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fmul.d f9, f26, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x18, 0xb1aa4c77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf5a4b33 # load x3 with 32 MSBs 0x00000000cf5a4b33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf5a4b33
sw x3, 0(x2) # store x3 (0xcf5a4b33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000cf5a4b33 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fmul.d f18, f10, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x15, 0xae122d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6de328d # load x3 with 32 MSBs 0x00000000c6de328d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6de328d
sw x3, 0(x2) # store x3 (0xc6de328d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000c6de328d from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fmul.d f15, f27, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x9, 0x05d6fac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdef3efdf # load x3 with 32 MSBs 0x00000000def3efdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000def3efdf
sw x3, 0(x2) # store x3 (0xdef3efdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000def3efdf from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fmul.d f9, f26, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x2, 0x65a1d171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa977f610 # load x3 with 32 MSBs 0x00000000a977f610
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a977f610
sw x3, 0(x2) # store x3 (0xa977f610) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a977f610 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fmul.d f2, f27, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x9, 0xdc26aacd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a9e4bea # load x3 with 32 MSBs 0x000000004a9e4bea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a9e4bea
sw x3, 0(x2) # store x3 (0x4a9e4bea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004a9e4bea from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fmul.d f9, f20, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x16, 0x63782491 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b0e191c # load x3 with 32 MSBs 0x000000006b0e191c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b0e191c
sw x3, 0(x2) # store x3 (0x6b0e191c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006b0e191c from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fmul.d f16, f21, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x25, 0x4c3ec687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3965e207 # load x3 with 32 MSBs 0x000000003965e207
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003965e207
sw x3, 0(x2) # store x3 (0x3965e207) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003965e207 from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fmul.d f25, f28, f20 # perform operation

# Testcase cp_frm
li x2, 0x31ea36e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf3fd22d # load x3 with 32 MSBs 0x00000000af3fd22d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af3fd22d
sw x3, 0(x2) # store x3 (0xaf3fd22d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000af3fd22d from memory into f8
li x3, 0x0c2ef256 # load x3 with 32 MSBs 0x000000000c2ef256
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c2ef256
sw x3, 0(x2) # store x3 (0x0c2ef256) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000c2ef256 from memory into f29
fmul.d f2, f8, f29, dyn # perform operation
fmul.d f2, f8, f29, rdn # perform operation
fmul.d f2, f8, f29, rmm # perform operation
fmul.d f2, f8, f29, rne # perform operation
fmul.d f2, f8, f29, rtz # perform operation
fmul.d f2, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x10, 0x60c1ac34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fmul.d f10, f14, f5, dyn # perform operation
fmul.d f10, f14, f5, rdn # perform operation
fmul.d f10, f14, f5, rmm # perform operation
fmul.d f10, f14, f5, rne # perform operation
fmul.d f10, f14, f5, rtz # perform operation
fmul.d f10, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x18, 0xc65479a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fmul.d f18, f11, f31, dyn # perform operation
fmul.d f18, f11, f31, rdn # perform operation
fmul.d f18, f11, f31, rmm # perform operation
fmul.d f18, f11, f31, rne # perform operation
fmul.d f18, f11, f31, rtz # perform operation
fmul.d f18, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x11, 0x27b77119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fmul.d f11, f23, f14, dyn # perform operation
fmul.d f11, f23, f14, rdn # perform operation
fmul.d f11, f23, f14, rmm # perform operation
fmul.d f11, f23, f14, rne # perform operation
fmul.d f11, f23, f14, rtz # perform operation
fmul.d f11, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x8, 0x861f439c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fmul.d f8, f27, f16, dyn # perform operation
fmul.d f8, f27, f16, rdn # perform operation
fmul.d f8, f27, f16, rmm # perform operation
fmul.d f8, f27, f16, rne # perform operation
fmul.d f8, f27, f16, rtz # perform operation
fmul.d f8, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x25, 0x4204d359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fmul.d f25, f13, f28, dyn # perform operation
fmul.d f25, f13, f28, rdn # perform operation
fmul.d f25, f13, f28, rmm # perform operation
fmul.d f25, f13, f28, rne # perform operation
fmul.d f25, f13, f28, rtz # perform operation
fmul.d f25, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x7, 0xfca78a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fmul.d f7, f13, f24, dyn # perform operation
fmul.d f7, f13, f24, rdn # perform operation
fmul.d f7, f13, f24, rmm # perform operation
fmul.d f7, f13, f24, rne # perform operation
fmul.d f7, f13, f24, rtz # perform operation
fmul.d f7, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x19, 0x0b76ae2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fmul.d f19, f4, f28, dyn # perform operation
fmul.d f19, f4, f28, rdn # perform operation
fmul.d f19, f4, f28, rmm # perform operation
fmul.d f19, f4, f28, rne # perform operation
fmul.d f19, f4, f28, rtz # perform operation
fmul.d f19, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x30, 0x8ad09c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fmul.d f30, f26, f7, dyn # perform operation
fmul.d f30, f26, f7, rdn # perform operation
fmul.d f30, f26, f7, rmm # perform operation
fmul.d f30, f26, f7, rne # perform operation
fmul.d f30, f26, f7, rtz # perform operation
fmul.d f30, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x3, 0xe8cb8e26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fmul.d f3, f10, f20, dyn # perform operation
fmul.d f3, f10, f20, rdn # perform operation
fmul.d f3, f10, f20, rmm # perform operation
fmul.d f3, f10, f20, rne # perform operation
fmul.d f3, f10, f20, rtz # perform operation
fmul.d f3, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x30, 0x1cbe6ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fmul.d f30, f20, f2, dyn # perform operation
fmul.d f30, f20, f2, rdn # perform operation
fmul.d f30, f20, f2, rmm # perform operation
fmul.d f30, f20, f2, rne # perform operation
fmul.d f30, f20, f2, rtz # perform operation
fmul.d f30, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x2, 0x2b3064d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fmul.d f2, f15, f23, dyn # perform operation
fmul.d f2, f15, f23, rdn # perform operation
fmul.d f2, f15, f23, rmm # perform operation
fmul.d f2, f15, f23, rne # perform operation
fmul.d f2, f15, f23, rtz # perform operation
fmul.d f2, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x21, 0x78b8ca5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fmul.d f21, f17, f29, dyn # perform operation
fmul.d f21, f17, f29, rdn # perform operation
fmul.d f21, f17, f29, rmm # perform operation
fmul.d f21, f17, f29, rne # perform operation
fmul.d f21, f17, f29, rtz # perform operation
fmul.d f21, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x1, 0xc51b784a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fmul.d f1, f28, f26, dyn # perform operation
fmul.d f1, f28, f26, rdn # perform operation
fmul.d f1, f28, f26, rmm # perform operation
fmul.d f1, f28, f26, rne # perform operation
fmul.d f1, f28, f26, rtz # perform operation
fmul.d f1, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x30, 0x04c60728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fmul.d f30, f11, f4, dyn # perform operation
fmul.d f30, f11, f4, rdn # perform operation
fmul.d f30, f11, f4, rmm # perform operation
fmul.d f30, f11, f4, rne # perform operation
fmul.d f30, f11, f4, rtz # perform operation
fmul.d f30, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x19, 0x884788fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fmul.d f19, f25, f2, dyn # perform operation
fmul.d f19, f25, f2, rdn # perform operation
fmul.d f19, f25, f2, rmm # perform operation
fmul.d f19, f25, f2, rne # perform operation
fmul.d f19, f25, f2, rtz # perform operation
fmul.d f19, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x22, 0x92e0e9a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fmul.d f22, f16, f17, dyn # perform operation
fmul.d f22, f16, f17, rdn # perform operation
fmul.d f22, f16, f17, rmm # perform operation
fmul.d f22, f16, f17, rne # perform operation
fmul.d f22, f16, f17, rtz # perform operation
fmul.d f22, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x23, 0xa8c749dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
fmul.d f23, f2, f4, dyn # perform operation
fmul.d f23, f2, f4, rdn # perform operation
fmul.d f23, f2, f4, rmm # perform operation
fmul.d f23, f2, f4, rne # perform operation
fmul.d f23, f2, f4, rtz # perform operation
fmul.d f23, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x4, 0x7c9663ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fmul.d f4, f19, f11, dyn # perform operation
fmul.d f4, f19, f11, rdn # perform operation
fmul.d f4, f19, f11, rmm # perform operation
fmul.d f4, f19, f11, rne # perform operation
fmul.d f4, f19, f11, rtz # perform operation
fmul.d f4, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x8, 0xf691189b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fmul.d f8, f13, f25, dyn # perform operation
fmul.d f8, f13, f25, rdn # perform operation
fmul.d f8, f13, f25, rmm # perform operation
fmul.d f8, f13, f25, rne # perform operation
fmul.d f8, f13, f25, rtz # perform operation
fmul.d f8, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x27, 0xb2fa46b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
fmul.d f27, f7, f10, dyn # perform operation
fmul.d f27, f7, f10, rdn # perform operation
fmul.d f27, f7, f10, rmm # perform operation
fmul.d f27, f7, f10, rne # perform operation
fmul.d f27, f7, f10, rtz # perform operation
fmul.d f27, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x14, 0x3dd84450 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fmul.d f14, f31, f4, dyn # perform operation
fmul.d f14, f31, f4, rdn # perform operation
fmul.d f14, f31, f4, rmm # perform operation
fmul.d f14, f31, f4, rne # perform operation
fmul.d f14, f31, f4, rtz # perform operation
fmul.d f14, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x16, 0x6d3cd115 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fmul.d f16, f2, f1, dyn # perform operation
fmul.d f16, f2, f1, rdn # perform operation
fmul.d f16, f2, f1, rmm # perform operation
fmul.d f16, f2, f1, rne # perform operation
fmul.d f16, f2, f1, rtz # perform operation
fmul.d f16, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x17, 0x33bd20c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fmul.d f17, f9, f20, dyn # perform operation
fmul.d f17, f9, f20, rdn # perform operation
fmul.d f17, f9, f20, rmm # perform operation
fmul.d f17, f9, f20, rne # perform operation
fmul.d f17, f9, f20, rtz # perform operation
fmul.d f17, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x9, 0xc060bc9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fmul.d f9, f27, f8, dyn # perform operation
fmul.d f9, f27, f8, rdn # perform operation
fmul.d f9, f27, f8, rmm # perform operation
fmul.d f9, f27, f8, rne # perform operation
fmul.d f9, f27, f8, rtz # perform operation
fmul.d f9, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x23, 0x920e3a81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmul.d f23, f21, f14, dyn # perform operation
fmul.d f23, f21, f14, rdn # perform operation
fmul.d f23, f21, f14, rmm # perform operation
fmul.d f23, f21, f14, rne # perform operation
fmul.d f23, f21, f14, rtz # perform operation
fmul.d f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x30, 0xbadd55d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fmul.d f30, f24, f14, dyn # perform operation
fmul.d f30, f24, f14, rdn # perform operation
fmul.d f30, f24, f14, rmm # perform operation
fmul.d f30, f24, f14, rne # perform operation
fmul.d f30, f24, f14, rtz # perform operation
fmul.d f30, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x16, 0x3d5091a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fmul.d f16, f14, f1, dyn # perform operation
fmul.d f16, f14, f1, rdn # perform operation
fmul.d f16, f14, f1, rmm # perform operation
fmul.d f16, f14, f1, rne # perform operation
fmul.d f16, f14, f1, rtz # perform operation
fmul.d f16, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x13, 0xd3d8d47e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fmul.d f13, f26, f4, dyn # perform operation
fmul.d f13, f26, f4, rdn # perform operation
fmul.d f13, f26, f4, rmm # perform operation
fmul.d f13, f26, f4, rne # perform operation
fmul.d f13, f26, f4, rtz # perform operation
fmul.d f13, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x25, 0xf9dda8a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fmul.d f25, f20, f11, dyn # perform operation
fmul.d f25, f20, f11, rdn # perform operation
fmul.d f25, f20, f11, rmm # perform operation
fmul.d f25, f20, f11, rne # perform operation
fmul.d f25, f20, f11, rtz # perform operation
fmul.d f25, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x24, 0xd8e5f347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fmul.d f24, f12, f9, dyn # perform operation
fmul.d f24, f12, f9, rdn # perform operation
fmul.d f24, f12, f9, rmm # perform operation
fmul.d f24, f12, f9, rne # perform operation
fmul.d f24, f12, f9, rtz # perform operation
fmul.d f24, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x5839f7b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fmul.d f29, f3, f13, dyn # perform operation
fmul.d f29, f3, f13, rdn # perform operation
fmul.d f29, f3, f13, rmm # perform operation
fmul.d f29, f3, f13, rne # perform operation
fmul.d f29, f3, f13, rtz # perform operation
fmul.d f29, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x20, 0xa50b779e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fmul.d f20, f10, f5, dyn # perform operation
fmul.d f20, f10, f5, rdn # perform operation
fmul.d f20, f10, f5, rmm # perform operation
fmul.d f20, f10, f5, rne # perform operation
fmul.d f20, f10, f5, rtz # perform operation
fmul.d f20, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x13, 0x37acb17c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fmul.d f13, f17, f21, dyn # perform operation
fmul.d f13, f17, f21, rdn # perform operation
fmul.d f13, f17, f21, rmm # perform operation
fmul.d f13, f17, f21, rne # perform operation
fmul.d f13, f17, f21, rtz # perform operation
fmul.d f13, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x1, 0xf846bf55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fmul.d f1, f12, f9, dyn # perform operation
fmul.d f1, f12, f9, rdn # perform operation
fmul.d f1, f12, f9, rmm # perform operation
fmul.d f1, f12, f9, rne # perform operation
fmul.d f1, f12, f9, rtz # perform operation
fmul.d f1, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x30, 0x94a15572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f30, f13, f22, dyn # perform operation
fmul.d f30, f13, f22, rdn # perform operation
fmul.d f30, f13, f22, rmm # perform operation
fmul.d f30, f13, f22, rne # perform operation
fmul.d f30, f13, f22, rtz # perform operation
fmul.d f30, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x14, 0x46299444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fmul.d f14, f11, f2, dyn # perform operation
fmul.d f14, f11, f2, rdn # perform operation
fmul.d f14, f11, f2, rmm # perform operation
fmul.d f14, f11, f2, rne # perform operation
fmul.d f14, f11, f2, rtz # perform operation
fmul.d f14, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0xf41fea6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fmul.d f15, f14, f6, dyn # perform operation
fmul.d f15, f14, f6, rdn # perform operation
fmul.d f15, f14, f6, rmm # perform operation
fmul.d f15, f14, f6, rne # perform operation
fmul.d f15, f14, f6, rtz # perform operation
fmul.d f15, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x17, 0x6e973332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fmul.d f17, f16, f8, dyn # perform operation
fmul.d f17, f16, f8, rdn # perform operation
fmul.d f17, f16, f8, rmm # perform operation
fmul.d f17, f16, f8, rne # perform operation
fmul.d f17, f16, f8, rtz # perform operation
fmul.d f17, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x28, 0x8c1ac134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fmul.d f28, f23, f30, dyn # perform operation
fmul.d f28, f23, f30, rdn # perform operation
fmul.d f28, f23, f30, rmm # perform operation
fmul.d f28, f23, f30, rne # perform operation
fmul.d f28, f23, f30, rtz # perform operation
fmul.d f28, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x15, 0x7a6f2834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmul.d f15, f23, f21, dyn # perform operation
fmul.d f15, f23, f21, rdn # perform operation
fmul.d f15, f23, f21, rmm # perform operation
fmul.d f15, f23, f21, rne # perform operation
fmul.d f15, f23, f21, rtz # perform operation
fmul.d f15, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x12, 0x58a78063 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fmul.d f12, f9, f1, dyn # perform operation
fmul.d f12, f9, f1, rdn # perform operation
fmul.d f12, f9, f1, rmm # perform operation
fmul.d f12, f9, f1, rne # perform operation
fmul.d f12, f9, f1, rtz # perform operation
fmul.d f12, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x23, 0x8d0143d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fmul.d f23, f5, f31, dyn # perform operation
fmul.d f23, f5, f31, rdn # perform operation
fmul.d f23, f5, f31, rmm # perform operation
fmul.d f23, f5, f31, rne # perform operation
fmul.d f23, f5, f31, rtz # perform operation
fmul.d f23, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x14, 0x94f59d96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fmul.d f14, f24, f22, dyn # perform operation
fmul.d f14, f24, f22, rdn # perform operation
fmul.d f14, f24, f22, rmm # perform operation
fmul.d f14, f24, f22, rne # perform operation
fmul.d f14, f24, f22, rtz # perform operation
fmul.d f14, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x24, 0x9bbcc692 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fmul.d f24, f27, f7, dyn # perform operation
fmul.d f24, f27, f7, rdn # perform operation
fmul.d f24, f27, f7, rmm # perform operation
fmul.d f24, f27, f7, rne # perform operation
fmul.d f24, f27, f7, rtz # perform operation
fmul.d f24, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x30, 0x7f996c9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fmul.d f30, f3, f9, dyn # perform operation
fmul.d f30, f3, f9, rdn # perform operation
fmul.d f30, f3, f9, rmm # perform operation
fmul.d f30, f3, f9, rne # perform operation
fmul.d f30, f3, f9, rtz # perform operation
fmul.d f30, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x22, 0xbbc14308 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fmul.d f22, f30, f3, dyn # perform operation
fmul.d f22, f30, f3, rdn # perform operation
fmul.d f22, f30, f3, rmm # perform operation
fmul.d f22, f30, f3, rne # perform operation
fmul.d f22, f30, f3, rtz # perform operation
fmul.d f22, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x11, 0xa1ca000b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fmul.d f11, f20, f17, dyn # perform operation
fmul.d f11, f20, f17, rdn # perform operation
fmul.d f11, f20, f17, rmm # perform operation
fmul.d f11, f20, f17, rne # perform operation
fmul.d f11, f20, f17, rtz # perform operation
fmul.d f11, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x9, 0x8f73b507 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmul.d f9, f18, f12, dyn # perform operation
fmul.d f9, f18, f12, rdn # perform operation
fmul.d f9, f18, f12, rmm # perform operation
fmul.d f9, f18, f12, rne # perform operation
fmul.d f9, f18, f12, rtz # perform operation
fmul.d f9, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x11, 0x6226aa51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fmul.d f11, f27, f21, dyn # perform operation
fmul.d f11, f27, f21, rdn # perform operation
fmul.d f11, f27, f21, rmm # perform operation
fmul.d f11, f27, f21, rne # perform operation
fmul.d f11, f27, f21, rtz # perform operation
fmul.d f11, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x26, 0xfe2db672 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f26, f27, f11, dyn # perform operation
fmul.d f26, f27, f11, rdn # perform operation
fmul.d f26, f27, f11, rmm # perform operation
fmul.d f26, f27, f11, rne # perform operation
fmul.d f26, f27, f11, rtz # perform operation
fmul.d f26, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x16, 0x370d5303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fmul.d f16, f27, f19, dyn # perform operation
fmul.d f16, f27, f19, rdn # perform operation
fmul.d f16, f27, f19, rmm # perform operation
fmul.d f16, f27, f19, rne # perform operation
fmul.d f16, f27, f19, rtz # perform operation
fmul.d f16, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x25, 0xc84b57dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fmul.d f25, f18, f8, dyn # perform operation
fmul.d f25, f18, f8, rdn # perform operation
fmul.d f25, f18, f8, rmm # perform operation
fmul.d f25, f18, f8, rne # perform operation
fmul.d f25, f18, f8, rtz # perform operation
fmul.d f25, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x7, 0x1cd58042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fmul.d f7, f14, f4, dyn # perform operation
fmul.d f7, f14, f4, rdn # perform operation
fmul.d f7, f14, f4, rmm # perform operation
fmul.d f7, f14, f4, rne # perform operation
fmul.d f7, f14, f4, rtz # perform operation
fmul.d f7, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x4, 0x3d3f3c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fmul.d f4, f17, f18, dyn # perform operation
fmul.d f4, f17, f18, rdn # perform operation
fmul.d f4, f17, f18, rmm # perform operation
fmul.d f4, f17, f18, rne # perform operation
fmul.d f4, f17, f18, rtz # perform operation
fmul.d f4, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x3, 0xa423a125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
fmul.d f3, f4, f19, dyn # perform operation
fmul.d f3, f4, f19, rdn # perform operation
fmul.d f3, f4, f19, rmm # perform operation
fmul.d f3, f4, f19, rne # perform operation
fmul.d f3, f4, f19, rtz # perform operation
fmul.d f3, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x31, 0xc31b75ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fmul.d f31, f18, f5, dyn # perform operation
fmul.d f31, f18, f5, rdn # perform operation
fmul.d f31, f18, f5, rmm # perform operation
fmul.d f31, f18, f5, rne # perform operation
fmul.d f31, f18, f5, rtz # perform operation
fmul.d f31, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x30, 0xed0eaa4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fmul.d f30, f1, f23, dyn # perform operation
fmul.d f30, f1, f23, rdn # perform operation
fmul.d f30, f1, f23, rmm # perform operation
fmul.d f30, f1, f23, rne # perform operation
fmul.d f30, f1, f23, rtz # perform operation
fmul.d f30, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x31, 0xe529f3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fmul.d f31, f21, f12, dyn # perform operation
fmul.d f31, f21, f12, rdn # perform operation
fmul.d f31, f21, f12, rmm # perform operation
fmul.d f31, f21, f12, rne # perform operation
fmul.d f31, f21, f12, rtz # perform operation
fmul.d f31, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x25, 0x797df8f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fmul.d f25, f17, f8, dyn # perform operation
fmul.d f25, f17, f8, rdn # perform operation
fmul.d f25, f17, f8, rmm # perform operation
fmul.d f25, f17, f8, rne # perform operation
fmul.d f25, f17, f8, rtz # perform operation
fmul.d f25, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x23, 0x96955f6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fmul.d f23, f17, f11, dyn # perform operation
fmul.d f23, f17, f11, rdn # perform operation
fmul.d f23, f17, f11, rmm # perform operation
fmul.d f23, f17, f11, rne # perform operation
fmul.d f23, f17, f11, rtz # perform operation
fmul.d f23, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x31, 0x2849e0b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fmul.d f31, f6, f9, dyn # perform operation
fmul.d f31, f6, f9, rdn # perform operation
fmul.d f31, f6, f9, rmm # perform operation
fmul.d f31, f6, f9, rne # perform operation
fmul.d f31, f6, f9, rtz # perform operation
fmul.d f31, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x15, 0xc8e80d3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fmul.d f15, f24, f29, dyn # perform operation
fmul.d f15, f24, f29, rdn # perform operation
fmul.d f15, f24, f29, rmm # perform operation
fmul.d f15, f24, f29, rne # perform operation
fmul.d f15, f24, f29, rtz # perform operation
fmul.d f15, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x6dbf5dfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmul.d f15, f9, f13, dyn # perform operation
fmul.d f15, f9, f13, rdn # perform operation
fmul.d f15, f9, f13, rmm # perform operation
fmul.d f15, f9, f13, rne # perform operation
fmul.d f15, f9, f13, rtz # perform operation
fmul.d f15, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x26, 0x87861c6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmul.d f26, f21, f6, dyn # perform operation
fmul.d f26, f21, f6, rdn # perform operation
fmul.d f26, f21, f6, rmm # perform operation
fmul.d f26, f21, f6, rne # perform operation
fmul.d f26, f21, f6, rtz # perform operation
fmul.d f26, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x1, 0x3042b79b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fmul.d f1, f3, f28, dyn # perform operation
fmul.d f1, f3, f28, rdn # perform operation
fmul.d f1, f3, f28, rmm # perform operation
fmul.d f1, f3, f28, rne # perform operation
fmul.d f1, f3, f28, rtz # perform operation
fmul.d f1, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x2, 0xb75b8ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fmul.d f2, f21, f26, dyn # perform operation
fmul.d f2, f21, f26, rdn # perform operation
fmul.d f2, f21, f26, rmm # perform operation
fmul.d f2, f21, f26, rne # perform operation
fmul.d f2, f21, f26, rtz # perform operation
fmul.d f2, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x31, 0x6c79112a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fmul.d f31, f22, f11, dyn # perform operation
fmul.d f31, f22, f11, rdn # perform operation
fmul.d f31, f22, f11, rmm # perform operation
fmul.d f31, f22, f11, rne # perform operation
fmul.d f31, f22, f11, rtz # perform operation
fmul.d f31, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x28, 0x1e1a5a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fmul.d f28, f25, f26, dyn # perform operation
fmul.d f28, f25, f26, rdn # perform operation
fmul.d f28, f25, f26, rmm # perform operation
fmul.d f28, f25, f26, rne # perform operation
fmul.d f28, f25, f26, rtz # perform operation
fmul.d f28, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x20, 0x49faebe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f20, f17, f31, dyn # perform operation
fmul.d f20, f17, f31, rdn # perform operation
fmul.d f20, f17, f31, rmm # perform operation
fmul.d f20, f17, f31, rne # perform operation
fmul.d f20, f17, f31, rtz # perform operation
fmul.d f20, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x2, 0x5b846372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fmul.d f2, f30, f13, dyn # perform operation
fmul.d f2, f30, f13, rdn # perform operation
fmul.d f2, f30, f13, rmm # perform operation
fmul.d f2, f30, f13, rne # perform operation
fmul.d f2, f30, f13, rtz # perform operation
fmul.d f2, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x4, 0xd8798db8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fmul.d f4, f28, f8, dyn # perform operation
fmul.d f4, f28, f8, rdn # perform operation
fmul.d f4, f28, f8, rmm # perform operation
fmul.d f4, f28, f8, rne # perform operation
fmul.d f4, f28, f8, rtz # perform operation
fmul.d f4, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x1, 0x2bf38ad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fmul.d f1, f12, f5, dyn # perform operation
fmul.d f1, f12, f5, rdn # perform operation
fmul.d f1, f12, f5, rmm # perform operation
fmul.d f1, f12, f5, rne # perform operation
fmul.d f1, f12, f5, rtz # perform operation
fmul.d f1, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x29, 0xf71ddd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fmul.d f29, f14, f3, dyn # perform operation
fmul.d f29, f14, f3, rdn # perform operation
fmul.d f29, f14, f3, rmm # perform operation
fmul.d f29, f14, f3, rne # perform operation
fmul.d f29, f14, f3, rtz # perform operation
fmul.d f29, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0xc75f0a1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fmul.d f6, f30, f21, dyn # perform operation
fmul.d f6, f30, f21, rdn # perform operation
fmul.d f6, f30, f21, rmm # perform operation
fmul.d f6, f30, f21, rne # perform operation
fmul.d f6, f30, f21, rtz # perform operation
fmul.d f6, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x1, 0xb3caf62d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fmul.d f1, f29, f8, dyn # perform operation
fmul.d f1, f29, f8, rdn # perform operation
fmul.d f1, f29, f8, rmm # perform operation
fmul.d f1, f29, f8, rne # perform operation
fmul.d f1, f29, f8, rtz # perform operation
fmul.d f1, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x12, 0x95369a4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fmul.d f12, f15, f25, dyn # perform operation
fmul.d f12, f15, f25, rdn # perform operation
fmul.d f12, f15, f25, rmm # perform operation
fmul.d f12, f15, f25, rne # perform operation
fmul.d f12, f15, f25, rtz # perform operation
fmul.d f12, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0x998a2100 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fmul.d f31, f15, f30, dyn # perform operation
fmul.d f31, f15, f30, rdn # perform operation
fmul.d f31, f15, f30, rmm # perform operation
fmul.d f31, f15, f30, rne # perform operation
fmul.d f31, f15, f30, rtz # perform operation
fmul.d f31, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x15, 0xf5c4760a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fmul.d f15, f18, f30, dyn # perform operation
fmul.d f15, f18, f30, rdn # perform operation
fmul.d f15, f18, f30, rmm # perform operation
fmul.d f15, f18, f30, rne # perform operation
fmul.d f15, f18, f30, rtz # perform operation
fmul.d f15, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x23, 0x63bc0469 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fmul.d f23, f24, f6, dyn # perform operation
fmul.d f23, f24, f6, rdn # perform operation
fmul.d f23, f24, f6, rmm # perform operation
fmul.d f23, f24, f6, rne # perform operation
fmul.d f23, f24, f6, rtz # perform operation
fmul.d f23, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x23, 0x932b8207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
fmul.d f23, f2, f3, dyn # perform operation
fmul.d f23, f2, f3, rdn # perform operation
fmul.d f23, f2, f3, rmm # perform operation
fmul.d f23, f2, f3, rne # perform operation
fmul.d f23, f2, f3, rtz # perform operation
fmul.d f23, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x31, 0x7e6efa1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fmul.d f31, f8, f1, dyn # perform operation
fmul.d f31, f8, f1, rdn # perform operation
fmul.d f31, f8, f1, rmm # perform operation
fmul.d f31, f8, f1, rne # perform operation
fmul.d f31, f8, f1, rtz # perform operation
fmul.d f31, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x22, 0x397172ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fmul.d f22, f27, f19, dyn # perform operation
fmul.d f22, f27, f19, rdn # perform operation
fmul.d f22, f27, f19, rmm # perform operation
fmul.d f22, f27, f19, rne # perform operation
fmul.d f22, f27, f19, rtz # perform operation
fmul.d f22, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x5, 0xb4341b30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fmul.d f5, f18, f14, dyn # perform operation
fmul.d f5, f18, f14, rdn # perform operation
fmul.d f5, f18, f14, rmm # perform operation
fmul.d f5, f18, f14, rne # perform operation
fmul.d f5, f18, f14, rtz # perform operation
fmul.d f5, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x4, 0x87126dc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fmul.d f4, f17, f27, dyn # perform operation
fmul.d f4, f17, f27, rdn # perform operation
fmul.d f4, f17, f27, rmm # perform operation
fmul.d f4, f17, f27, rne # perform operation
fmul.d f4, f17, f27, rtz # perform operation
fmul.d f4, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x30, 0xbb73afd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fmul.d f30, f11, f28, dyn # perform operation
fmul.d f30, f11, f28, rdn # perform operation
fmul.d f30, f11, f28, rmm # perform operation
fmul.d f30, f11, f28, rne # perform operation
fmul.d f30, f11, f28, rtz # perform operation
fmul.d f30, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x12, 0x7b8e5394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fmul.d f12, f9, f10, dyn # perform operation
fmul.d f12, f9, f10, rdn # perform operation
fmul.d f12, f9, f10, rmm # perform operation
fmul.d f12, f9, f10, rne # perform operation
fmul.d f12, f9, f10, rtz # perform operation
fmul.d f12, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x4, 0x134778c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f4, f24, f22, dyn # perform operation
fmul.d f4, f24, f22, rdn # perform operation
fmul.d f4, f24, f22, rmm # perform operation
fmul.d f4, f24, f22, rne # perform operation
fmul.d f4, f24, f22, rtz # perform operation
fmul.d f4, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x8, 0x38399501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fmul.d f8, f11, f20, dyn # perform operation
fmul.d f8, f11, f20, rdn # perform operation
fmul.d f8, f11, f20, rmm # perform operation
fmul.d f8, f11, f20, rne # perform operation
fmul.d f8, f11, f20, rtz # perform operation
fmul.d f8, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x3, 0x887e9721 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fmul.d f3, f15, f14, dyn # perform operation
fmul.d f3, f15, f14, rdn # perform operation
fmul.d f3, f15, f14, rmm # perform operation
fmul.d f3, f15, f14, rne # perform operation
fmul.d f3, f15, f14, rtz # perform operation
fmul.d f3, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x6, 0x265f6072 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fmul.d f6, f2, f30, dyn # perform operation
fmul.d f6, f2, f30, rdn # perform operation
fmul.d f6, f2, f30, rmm # perform operation
fmul.d f6, f2, f30, rne # perform operation
fmul.d f6, f2, f30, rtz # perform operation
fmul.d f6, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x17, 0x881c2d15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fmul.d f17, f1, f14, dyn # perform operation
fmul.d f17, f1, f14, rdn # perform operation
fmul.d f17, f1, f14, rmm # perform operation
fmul.d f17, f1, f14, rne # perform operation
fmul.d f17, f1, f14, rtz # perform operation
fmul.d f17, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x30, 0x2c99606c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fmul.d f30, f25, f1, dyn # perform operation
fmul.d f30, f25, f1, rdn # perform operation
fmul.d f30, f25, f1, rmm # perform operation
fmul.d f30, f25, f1, rne # perform operation
fmul.d f30, f25, f1, rtz # perform operation
fmul.d f30, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x12, 0xea8b9116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fmul.d f12, f22, f1, dyn # perform operation
fmul.d f12, f22, f1, rdn # perform operation
fmul.d f12, f22, f1, rmm # perform operation
fmul.d f12, f22, f1, rne # perform operation
fmul.d f12, f22, f1, rtz # perform operation
fmul.d f12, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x22, 0x2efbf6ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
fmul.d f22, f16, f5, dyn # perform operation
fmul.d f22, f16, f5, rdn # perform operation
fmul.d f22, f16, f5, rmm # perform operation
fmul.d f22, f16, f5, rne # perform operation
fmul.d f22, f16, f5, rtz # perform operation
fmul.d f22, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x10, 0x5f628c59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fmul.d f10, f12, f11, dyn # perform operation
fmul.d f10, f12, f11, rdn # perform operation
fmul.d f10, f12, f11, rmm # perform operation
fmul.d f10, f12, f11, rne # perform operation
fmul.d f10, f12, f11, rtz # perform operation
fmul.d f10, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x9, 0xc7d2f1d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fmul.d f9, f19, f14, dyn # perform operation
fmul.d f9, f19, f14, rdn # perform operation
fmul.d f9, f19, f14, rmm # perform operation
fmul.d f9, f19, f14, rne # perform operation
fmul.d f9, f19, f14, rtz # perform operation
fmul.d f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x29, 0x13afd533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fmul.d f29, f6, f5, dyn # perform operation
fmul.d f29, f6, f5, rdn # perform operation
fmul.d f29, f6, f5, rmm # perform operation
fmul.d f29, f6, f5, rne # perform operation
fmul.d f29, f6, f5, rtz # perform operation
fmul.d f29, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x31, 0xe9344fd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmul.d f31, f28, f15, dyn # perform operation
fmul.d f31, f28, f15, rdn # perform operation
fmul.d f31, f28, f15, rmm # perform operation
fmul.d f31, f28, f15, rne # perform operation
fmul.d f31, f28, f15, rtz # perform operation
fmul.d f31, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x29, 0x156fe47b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fmul.d f29, f2, f7, dyn # perform operation
fmul.d f29, f2, f7, rdn # perform operation
fmul.d f29, f2, f7, rmm # perform operation
fmul.d f29, f2, f7, rne # perform operation
fmul.d f29, f2, f7, rtz # perform operation
fmul.d f29, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x27, 0xaeb3d37c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fmul.d f27, f3, f7, dyn # perform operation
fmul.d f27, f3, f7, rdn # perform operation
fmul.d f27, f3, f7, rmm # perform operation
fmul.d f27, f3, f7, rne # perform operation
fmul.d f27, f3, f7, rtz # perform operation
fmul.d f27, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x22, 0x58c0b3d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fmul.d f22, f27, f21, dyn # perform operation
fmul.d f22, f27, f21, rdn # perform operation
fmul.d f22, f27, f21, rmm # perform operation
fmul.d f22, f27, f21, rne # perform operation
fmul.d f22, f27, f21, rtz # perform operation
fmul.d f22, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x9, 0x1326de01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fmul.d f9, f6, f15, dyn # perform operation
fmul.d f9, f6, f15, rdn # perform operation
fmul.d f9, f6, f15, rmm # perform operation
fmul.d f9, f6, f15, rne # perform operation
fmul.d f9, f6, f15, rtz # perform operation
fmul.d f9, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0x72eb1ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fmul.d f13, f30, f19, dyn # perform operation
fmul.d f13, f30, f19, rdn # perform operation
fmul.d f13, f30, f19, rmm # perform operation
fmul.d f13, f30, f19, rne # perform operation
fmul.d f13, f30, f19, rtz # perform operation
fmul.d f13, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x9, 0x5bac8ecd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fmul.d f9, f24, f28, dyn # perform operation
fmul.d f9, f24, f28, rdn # perform operation
fmul.d f9, f24, f28, rmm # perform operation
fmul.d f9, f24, f28, rne # perform operation
fmul.d f9, f24, f28, rtz # perform operation
fmul.d f9, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x28, 0xaaffb1af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fmul.d f28, f10, f27, dyn # perform operation
fmul.d f28, f10, f27, rdn # perform operation
fmul.d f28, f10, f27, rmm # perform operation
fmul.d f28, f10, f27, rne # perform operation
fmul.d f28, f10, f27, rtz # perform operation
fmul.d f28, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x25, 0xccb7cd98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fmul.d f25, f19, f4, dyn # perform operation
fmul.d f25, f19, f4, rdn # perform operation
fmul.d f25, f19, f4, rmm # perform operation
fmul.d f25, f19, f4, rne # perform operation
fmul.d f25, f19, f4, rtz # perform operation
fmul.d f25, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x3c15816b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fmul.d f21, f31, f13, dyn # perform operation
fmul.d f21, f31, f13, rdn # perform operation
fmul.d f21, f31, f13, rmm # perform operation
fmul.d f21, f31, f13, rne # perform operation
fmul.d f21, f31, f13, rtz # perform operation
fmul.d f21, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x8, 0xfd3de085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fmul.d f8, f27, f11, dyn # perform operation
fmul.d f8, f27, f11, rdn # perform operation
fmul.d f8, f27, f11, rmm # perform operation
fmul.d f8, f27, f11, rne # perform operation
fmul.d f8, f27, f11, rtz # perform operation
fmul.d f8, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x27, 0x23e43acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fmul.d f27, f19, f6, dyn # perform operation
fmul.d f27, f19, f6, rdn # perform operation
fmul.d f27, f19, f6, rmm # perform operation
fmul.d f27, f19, f6, rne # perform operation
fmul.d f27, f19, f6, rtz # perform operation
fmul.d f27, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x22, 0x5253882e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fmul.d f22, f25, f5, dyn # perform operation
fmul.d f22, f25, f5, rdn # perform operation
fmul.d f22, f25, f5, rmm # perform operation
fmul.d f22, f25, f5, rne # perform operation
fmul.d f22, f25, f5, rtz # perform operation
fmul.d f22, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x14, 0x172598f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fmul.d f14, f9, f15, dyn # perform operation
fmul.d f14, f9, f15, rdn # perform operation
fmul.d f14, f9, f15, rmm # perform operation
fmul.d f14, f9, f15, rne # perform operation
fmul.d f14, f9, f15, rtz # perform operation
fmul.d f14, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x26, 0xda8e5746 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fmul.d f26, f31, f29, dyn # perform operation
fmul.d f26, f31, f29, rdn # perform operation
fmul.d f26, f31, f29, rmm # perform operation
fmul.d f26, f31, f29, rne # perform operation
fmul.d f26, f31, f29, rtz # perform operation
fmul.d f26, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x13, 0x771898fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fmul.d f13, f29, f30, dyn # perform operation
fmul.d f13, f29, f30, rdn # perform operation
fmul.d f13, f29, f30, rmm # perform operation
fmul.d f13, f29, f30, rne # perform operation
fmul.d f13, f29, f30, rtz # perform operation
fmul.d f13, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x20, 0x4a4c7b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fmul.d f20, f17, f2, dyn # perform operation
fmul.d f20, f17, f2, rdn # perform operation
fmul.d f20, f17, f2, rmm # perform operation
fmul.d f20, f17, f2, rne # perform operation
fmul.d f20, f17, f2, rtz # perform operation
fmul.d f20, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x23, 0x391e74dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fmul.d f23, f25, f5, dyn # perform operation
fmul.d f23, f25, f5, rdn # perform operation
fmul.d f23, f25, f5, rmm # perform operation
fmul.d f23, f25, f5, rne # perform operation
fmul.d f23, f25, f5, rtz # perform operation
fmul.d f23, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x5, 0x1841ac2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fmul.d f5, f31, f10, dyn # perform operation
fmul.d f5, f31, f10, rdn # perform operation
fmul.d f5, f31, f10, rmm # perform operation
fmul.d f5, f31, f10, rne # perform operation
fmul.d f5, f31, f10, rtz # perform operation
fmul.d f5, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x20, 0x143898be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
fmul.d f20, f15, f5, dyn # perform operation
fmul.d f20, f15, f5, rdn # perform operation
fmul.d f20, f15, f5, rmm # perform operation
fmul.d f20, f15, f5, rne # perform operation
fmul.d f20, f15, f5, rtz # perform operation
fmul.d f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x15, 0xed3df61a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fmul.d f15, f13, f18, dyn # perform operation
fmul.d f15, f13, f18, rdn # perform operation
fmul.d f15, f13, f18, rmm # perform operation
fmul.d f15, f13, f18, rne # perform operation
fmul.d f15, f13, f18, rtz # perform operation
fmul.d f15, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x17, 0xa1124a9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fmul.d f17, f27, f24, dyn # perform operation
fmul.d f17, f27, f24, rdn # perform operation
fmul.d f17, f27, f24, rmm # perform operation
fmul.d f17, f27, f24, rne # perform operation
fmul.d f17, f27, f24, rtz # perform operation
fmul.d f17, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x9, 0x9c9320af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fmul.d f9, f31, f27, dyn # perform operation
fmul.d f9, f31, f27, rdn # perform operation
fmul.d f9, f31, f27, rmm # perform operation
fmul.d f9, f31, f27, rne # perform operation
fmul.d f9, f31, f27, rtz # perform operation
fmul.d f9, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x18, 0x61312140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmul.d f18, f24, f1, dyn # perform operation
fmul.d f18, f24, f1, rdn # perform operation
fmul.d f18, f24, f1, rmm # perform operation
fmul.d f18, f24, f1, rne # perform operation
fmul.d f18, f24, f1, rtz # perform operation
fmul.d f18, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x19, 0xbeb72e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fmul.d f19, f30, f28, dyn # perform operation
fmul.d f19, f30, f28, rdn # perform operation
fmul.d f19, f30, f28, rmm # perform operation
fmul.d f19, f30, f28, rne # perform operation
fmul.d f19, f30, f28, rtz # perform operation
fmul.d f19, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x13, 0xb31b538e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fmul.d f13, f5, f29, dyn # perform operation
fmul.d f13, f5, f29, rdn # perform operation
fmul.d f13, f5, f29, rmm # perform operation
fmul.d f13, f5, f29, rne # perform operation
fmul.d f13, f5, f29, rtz # perform operation
fmul.d f13, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x5, 0x3da80bd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fmul.d f5, f2, f29, dyn # perform operation
fmul.d f5, f2, f29, rdn # perform operation
fmul.d f5, f2, f29, rmm # perform operation
fmul.d f5, f2, f29, rne # perform operation
fmul.d f5, f2, f29, rtz # perform operation
fmul.d f5, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x12, 0xb89729cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fmul.d f12, f5, f21, dyn # perform operation
fmul.d f12, f5, f21, rdn # perform operation
fmul.d f12, f5, f21, rmm # perform operation
fmul.d f12, f5, f21, rne # perform operation
fmul.d f12, f5, f21, rtz # perform operation
fmul.d f12, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x7ffd6fe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmul.d f5, f21, f12, dyn # perform operation
fmul.d f5, f21, f12, rdn # perform operation
fmul.d f5, f21, f12, rmm # perform operation
fmul.d f5, f21, f12, rne # perform operation
fmul.d f5, f21, f12, rtz # perform operation
fmul.d f5, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x7, 0xa0756dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fmul.d f7, f8, f18, dyn # perform operation
fmul.d f7, f8, f18, rdn # perform operation
fmul.d f7, f8, f18, rmm # perform operation
fmul.d f7, f8, f18, rne # perform operation
fmul.d f7, f8, f18, rtz # perform operation
fmul.d f7, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x7, 0x1001a30b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f7, f8, f11, dyn # perform operation
fmul.d f7, f8, f11, rdn # perform operation
fmul.d f7, f8, f11, rmm # perform operation
fmul.d f7, f8, f11, rne # perform operation
fmul.d f7, f8, f11, rtz # perform operation
fmul.d f7, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x7, 0x1340e742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fmul.d f7, f30, f25, dyn # perform operation
fmul.d f7, f30, f25, rdn # perform operation
fmul.d f7, f30, f25, rmm # perform operation
fmul.d f7, f30, f25, rne # perform operation
fmul.d f7, f30, f25, rtz # perform operation
fmul.d f7, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x10, 0xbec4b7b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fmul.d f10, f5, f30, dyn # perform operation
fmul.d f10, f5, f30, rdn # perform operation
fmul.d f10, f5, f30, rmm # perform operation
fmul.d f10, f5, f30, rne # perform operation
fmul.d f10, f5, f30, rtz # perform operation
fmul.d f10, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x11, 0x8a824bf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fmul.d f11, f20, f7, dyn # perform operation
fmul.d f11, f20, f7, rdn # perform operation
fmul.d f11, f20, f7, rmm # perform operation
fmul.d f11, f20, f7, rne # perform operation
fmul.d f11, f20, f7, rtz # perform operation
fmul.d f11, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x17, 0x5a416604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fmul.d f17, f19, f5, dyn # perform operation
fmul.d f17, f19, f5, rdn # perform operation
fmul.d f17, f19, f5, rmm # perform operation
fmul.d f17, f19, f5, rne # perform operation
fmul.d f17, f19, f5, rtz # perform operation
fmul.d f17, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x22, 0xc90c5988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fmul.d f22, f27, f26, dyn # perform operation
fmul.d f22, f27, f26, rdn # perform operation
fmul.d f22, f27, f26, rmm # perform operation
fmul.d f22, f27, f26, rne # perform operation
fmul.d f22, f27, f26, rtz # perform operation
fmul.d f22, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x6, 0xe1f0f556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fmul.d f6, f24, f9, dyn # perform operation
fmul.d f6, f24, f9, rdn # perform operation
fmul.d f6, f24, f9, rmm # perform operation
fmul.d f6, f24, f9, rne # perform operation
fmul.d f6, f24, f9, rtz # perform operation
fmul.d f6, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x20, 0xd620e78e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fmul.d f20, f30, f6, dyn # perform operation
fmul.d f20, f30, f6, rdn # perform operation
fmul.d f20, f30, f6, rmm # perform operation
fmul.d f20, f30, f6, rne # perform operation
fmul.d f20, f30, f6, rtz # perform operation
fmul.d f20, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x5, 0xd1135f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fmul.d f5, f19, f29, dyn # perform operation
fmul.d f5, f19, f29, rdn # perform operation
fmul.d f5, f19, f29, rmm # perform operation
fmul.d f5, f19, f29, rne # perform operation
fmul.d f5, f19, f29, rtz # perform operation
fmul.d f5, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x1, 0x1f8eed28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fmul.d f1, f27, f26, dyn # perform operation
fmul.d f1, f27, f26, rdn # perform operation
fmul.d f1, f27, f26, rmm # perform operation
fmul.d f1, f27, f26, rne # perform operation
fmul.d f1, f27, f26, rtz # perform operation
fmul.d f1, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x21, 0x9273757a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fmul.d f21, f1, f2, dyn # perform operation
fmul.d f21, f1, f2, rdn # perform operation
fmul.d f21, f1, f2, rmm # perform operation
fmul.d f21, f1, f2, rne # perform operation
fmul.d f21, f1, f2, rtz # perform operation
fmul.d f21, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x13, 0xb4709702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fmul.d f13, f21, f8, dyn # perform operation
fmul.d f13, f21, f8, rdn # perform operation
fmul.d f13, f21, f8, rmm # perform operation
fmul.d f13, f21, f8, rne # perform operation
fmul.d f13, f21, f8, rtz # perform operation
fmul.d f13, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x1, 0xbac9f6de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fmul.d f1, f18, f21, dyn # perform operation
fmul.d f1, f18, f21, rdn # perform operation
fmul.d f1, f18, f21, rmm # perform operation
fmul.d f1, f18, f21, rne # perform operation
fmul.d f1, f18, f21, rtz # perform operation
fmul.d f1, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x2, 0x8f908899 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fmul.d f2, f16, f29, dyn # perform operation
fmul.d f2, f16, f29, rdn # perform operation
fmul.d f2, f16, f29, rmm # perform operation
fmul.d f2, f16, f29, rne # perform operation
fmul.d f2, f16, f29, rtz # perform operation
fmul.d f2, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x2, 0xf7394f33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fmul.d f2, f13, f21, dyn # perform operation
fmul.d f2, f13, f21, rdn # perform operation
fmul.d f2, f13, f21, rmm # perform operation
fmul.d f2, f13, f21, rne # perform operation
fmul.d f2, f13, f21, rtz # perform operation
fmul.d f2, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x15, 0x3d10c65c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fmul.d f15, f10, f23, dyn # perform operation
fmul.d f15, f10, f23, rdn # perform operation
fmul.d f15, f10, f23, rmm # perform operation
fmul.d f15, f10, f23, rne # perform operation
fmul.d f15, f10, f23, rtz # perform operation
fmul.d f15, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x5, 0x553fab2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
fmul.d f5, f18, f8, dyn # perform operation
fmul.d f5, f18, f8, rdn # perform operation
fmul.d f5, f18, f8, rmm # perform operation
fmul.d f5, f18, f8, rne # perform operation
fmul.d f5, f18, f8, rtz # perform operation
fmul.d f5, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x3, 0xe6c79c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fmul.d f3, f21, f20, dyn # perform operation
fmul.d f3, f21, f20, rdn # perform operation
fmul.d f3, f21, f20, rmm # perform operation
fmul.d f3, f21, f20, rne # perform operation
fmul.d f3, f21, f20, rtz # perform operation
fmul.d f3, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x12, 0xd075bdb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fmul.d f12, f19, f29, dyn # perform operation
fmul.d f12, f19, f29, rdn # perform operation
fmul.d f12, f19, f29, rmm # perform operation
fmul.d f12, f19, f29, rne # perform operation
fmul.d f12, f19, f29, rtz # perform operation
fmul.d f12, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x14, 0xbf653a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fmul.d f14, f20, f24, dyn # perform operation
fmul.d f14, f20, f24, rdn # perform operation
fmul.d f14, f20, f24, rmm # perform operation
fmul.d f14, f20, f24, rne # perform operation
fmul.d f14, f20, f24, rtz # perform operation
fmul.d f14, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x3, 0x102c0419 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
fmul.d f3, f10, f27, dyn # perform operation
fmul.d f3, f10, f27, rdn # perform operation
fmul.d f3, f10, f27, rmm # perform operation
fmul.d f3, f10, f27, rne # perform operation
fmul.d f3, f10, f27, rtz # perform operation
fmul.d f3, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x12, 0xafc7f17d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fmul.d f12, f25, f27, dyn # perform operation
fmul.d f12, f25, f27, rdn # perform operation
fmul.d f12, f25, f27, rmm # perform operation
fmul.d f12, f25, f27, rne # perform operation
fmul.d f12, f25, f27, rtz # perform operation
fmul.d f12, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x28, 0x143008cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fmul.d f28, f6, f12, dyn # perform operation
fmul.d f28, f6, f12, rdn # perform operation
fmul.d f28, f6, f12, rmm # perform operation
fmul.d f28, f6, f12, rne # perform operation
fmul.d f28, f6, f12, rtz # perform operation
fmul.d f28, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x26, 0x9c1bf5ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fmul.d f26, f23, f15, dyn # perform operation
fmul.d f26, f23, f15, rdn # perform operation
fmul.d f26, f23, f15, rmm # perform operation
fmul.d f26, f23, f15, rne # perform operation
fmul.d f26, f23, f15, rtz # perform operation
fmul.d f26, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0xc7a1180b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fmul.d f17, f4, f28, dyn # perform operation
fmul.d f17, f4, f28, rdn # perform operation
fmul.d f17, f4, f28, rmm # perform operation
fmul.d f17, f4, f28, rne # perform operation
fmul.d f17, f4, f28, rtz # perform operation
fmul.d f17, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x22, 0x6238f5ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fmul.d f22, f27, f1, dyn # perform operation
fmul.d f22, f27, f1, rdn # perform operation
fmul.d f22, f27, f1, rmm # perform operation
fmul.d f22, f27, f1, rne # perform operation
fmul.d f22, f27, f1, rtz # perform operation
fmul.d f22, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x7, 0x466019e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fmul.d f7, f12, f22, dyn # perform operation
fmul.d f7, f12, f22, rdn # perform operation
fmul.d f7, f12, f22, rmm # perform operation
fmul.d f7, f12, f22, rne # perform operation
fmul.d f7, f12, f22, rtz # perform operation
fmul.d f7, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x23, 0xad1117ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fmul.d f23, f8, f5, dyn # perform operation
fmul.d f23, f8, f5, rdn # perform operation
fmul.d f23, f8, f5, rmm # perform operation
fmul.d f23, f8, f5, rne # perform operation
fmul.d f23, f8, f5, rtz # perform operation
fmul.d f23, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x17, 0x89d70299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
fmul.d f17, f12, f13, dyn # perform operation
fmul.d f17, f12, f13, rdn # perform operation
fmul.d f17, f12, f13, rmm # perform operation
fmul.d f17, f12, f13, rne # perform operation
fmul.d f17, f12, f13, rtz # perform operation
fmul.d f17, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x3, 0x0a4f4cf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmul.d f3, f13, f8, dyn # perform operation
fmul.d f3, f13, f8, rdn # perform operation
fmul.d f3, f13, f8, rmm # perform operation
fmul.d f3, f13, f8, rne # perform operation
fmul.d f3, f13, f8, rtz # perform operation
fmul.d f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x7, 0x7211ae67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fmul.d f7, f19, f21, dyn # perform operation
fmul.d f7, f19, f21, rdn # perform operation
fmul.d f7, f19, f21, rmm # perform operation
fmul.d f7, f19, f21, rne # perform operation
fmul.d f7, f19, f21, rtz # perform operation
fmul.d f7, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x18, 0x786c4c0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f18, f13, f23, dyn # perform operation
fmul.d f18, f13, f23, rdn # perform operation
fmul.d f18, f13, f23, rmm # perform operation
fmul.d f18, f13, f23, rne # perform operation
fmul.d f18, f13, f23, rtz # perform operation
fmul.d f18, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x7, 0x84c3b187 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fmul.d f7, f19, f15, dyn # perform operation
fmul.d f7, f19, f15, rdn # perform operation
fmul.d f7, f19, f15, rmm # perform operation
fmul.d f7, f19, f15, rne # perform operation
fmul.d f7, f19, f15, rtz # perform operation
fmul.d f7, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x0011b4c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fmul.d f29, f22, f21, dyn # perform operation
fmul.d f29, f22, f21, rdn # perform operation
fmul.d f29, f22, f21, rmm # perform operation
fmul.d f29, f22, f21, rne # perform operation
fmul.d f29, f22, f21, rtz # perform operation
fmul.d f29, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x27, 0x43b616c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fmul.d f27, f1, f20, dyn # perform operation
fmul.d f27, f1, f20, rdn # perform operation
fmul.d f27, f1, f20, rmm # perform operation
fmul.d f27, f1, f20, rne # perform operation
fmul.d f27, f1, f20, rtz # perform operation
fmul.d f27, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x2, 0x940615ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
fmul.d f2, f21, f23, dyn # perform operation
fmul.d f2, f21, f23, rdn # perform operation
fmul.d f2, f21, f23, rmm # perform operation
fmul.d f2, f21, f23, rne # perform operation
fmul.d f2, f21, f23, rtz # perform operation
fmul.d f2, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x21, 0xea6c0d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fmul.d f21, f24, f29, dyn # perform operation
fmul.d f21, f24, f29, rdn # perform operation
fmul.d f21, f24, f29, rmm # perform operation
fmul.d f21, f24, f29, rne # perform operation
fmul.d f21, f24, f29, rtz # perform operation
fmul.d f21, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x22, 0x0d67e77d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fmul.d f22, f10, f26, dyn # perform operation
fmul.d f22, f10, f26, rdn # perform operation
fmul.d f22, f10, f26, rmm # perform operation
fmul.d f22, f10, f26, rne # perform operation
fmul.d f22, f10, f26, rtz # perform operation
fmul.d f22, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x19, 0x181f1d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fmul.d f19, f9, f3, dyn # perform operation
fmul.d f19, f9, f3, rdn # perform operation
fmul.d f19, f9, f3, rmm # perform operation
fmul.d f19, f9, f3, rne # perform operation
fmul.d f19, f9, f3, rtz # perform operation
fmul.d f19, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x9, 0x74e0f19e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fmul.d f9, f16, f6, dyn # perform operation
fmul.d f9, f16, f6, rdn # perform operation
fmul.d f9, f16, f6, rmm # perform operation
fmul.d f9, f16, f6, rne # perform operation
fmul.d f9, f16, f6, rtz # perform operation
fmul.d f9, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x27, 0xaab85e12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fmul.d f27, f18, f22, dyn # perform operation
fmul.d f27, f18, f22, rdn # perform operation
fmul.d f27, f18, f22, rmm # perform operation
fmul.d f27, f18, f22, rne # perform operation
fmul.d f27, f18, f22, rtz # perform operation
fmul.d f27, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x17, 0x32095a6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fmul.d f17, f1, f25, dyn # perform operation
fmul.d f17, f1, f25, rdn # perform operation
fmul.d f17, f1, f25, rmm # perform operation
fmul.d f17, f1, f25, rne # perform operation
fmul.d f17, f1, f25, rtz # perform operation
fmul.d f17, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x5, 0x9a4d4137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fmul.d f5, f26, f14, dyn # perform operation
fmul.d f5, f26, f14, rdn # perform operation
fmul.d f5, f26, f14, rmm # perform operation
fmul.d f5, f26, f14, rne # perform operation
fmul.d f5, f26, f14, rtz # perform operation
fmul.d f5, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x7, 0xff0b5998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fmul.d f7, f28, f23, dyn # perform operation
fmul.d f7, f28, f23, rdn # perform operation
fmul.d f7, f28, f23, rmm # perform operation
fmul.d f7, f28, f23, rne # perform operation
fmul.d f7, f28, f23, rtz # perform operation
fmul.d f7, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x6, 0xfb609a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fmul.d f6, f29, f21, dyn # perform operation
fmul.d f6, f29, f21, rdn # perform operation
fmul.d f6, f29, f21, rmm # perform operation
fmul.d f6, f29, f21, rne # perform operation
fmul.d f6, f29, f21, rtz # perform operation
fmul.d f6, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x7, 0x2a8257ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmul.d f7, f8, f1, dyn # perform operation
fmul.d f7, f8, f1, rdn # perform operation
fmul.d f7, f8, f1, rmm # perform operation
fmul.d f7, f8, f1, rne # perform operation
fmul.d f7, f8, f1, rtz # perform operation
fmul.d f7, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x17, 0xa771dd16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fmul.d f17, f12, f11, dyn # perform operation
fmul.d f17, f12, f11, rdn # perform operation
fmul.d f17, f12, f11, rmm # perform operation
fmul.d f17, f12, f11, rne # perform operation
fmul.d f17, f12, f11, rtz # perform operation
fmul.d f17, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x8, 0xe60b4158 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fmul.d f8, f24, f20, dyn # perform operation
fmul.d f8, f24, f20, rdn # perform operation
fmul.d f8, f24, f20, rmm # perform operation
fmul.d f8, f24, f20, rne # perform operation
fmul.d f8, f24, f20, rtz # perform operation
fmul.d f8, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x18, 0x8b381a0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmul.d f18, f7, f17, dyn # perform operation
fmul.d f18, f7, f17, rdn # perform operation
fmul.d f18, f7, f17, rmm # perform operation
fmul.d f18, f7, f17, rne # perform operation
fmul.d f18, f7, f17, rtz # perform operation
fmul.d f18, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x5, 0x40d3e36c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fmul.d f5, f22, f27, dyn # perform operation
fmul.d f5, f22, f27, rdn # perform operation
fmul.d f5, f22, f27, rmm # perform operation
fmul.d f5, f22, f27, rne # perform operation
fmul.d f5, f22, f27, rtz # perform operation
fmul.d f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x21, 0x86ea9571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fmul.d f21, f18, f3, dyn # perform operation
fmul.d f21, f18, f3, rdn # perform operation
fmul.d f21, f18, f3, rmm # perform operation
fmul.d f21, f18, f3, rne # perform operation
fmul.d f21, f18, f3, rtz # perform operation
fmul.d f21, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x28, 0x3c278398 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fmul.d f28, f20, f13, dyn # perform operation
fmul.d f28, f20, f13, rdn # perform operation
fmul.d f28, f20, f13, rmm # perform operation
fmul.d f28, f20, f13, rne # perform operation
fmul.d f28, f20, f13, rtz # perform operation
fmul.d f28, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x29, 0x33870603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fmul.d f29, f17, f8, dyn # perform operation
fmul.d f29, f17, f8, rdn # perform operation
fmul.d f29, f17, f8, rmm # perform operation
fmul.d f29, f17, f8, rne # perform operation
fmul.d f29, f17, f8, rtz # perform operation
fmul.d f29, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x28, 0x41c4f515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fmul.d f28, f20, f15, dyn # perform operation
fmul.d f28, f20, f15, rdn # perform operation
fmul.d f28, f20, f15, rmm # perform operation
fmul.d f28, f20, f15, rne # perform operation
fmul.d f28, f20, f15, rtz # perform operation
fmul.d f28, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x30, 0xf037695d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
fmul.d f30, f21, f13, dyn # perform operation
fmul.d f30, f21, f13, rdn # perform operation
fmul.d f30, f21, f13, rmm # perform operation
fmul.d f30, f21, f13, rne # perform operation
fmul.d f30, f21, f13, rtz # perform operation
fmul.d f30, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x20, 0xb18e2009 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fmul.d f20, f12, f28, dyn # perform operation
fmul.d f20, f12, f28, rdn # perform operation
fmul.d f20, f12, f28, rmm # perform operation
fmul.d f20, f12, f28, rne # perform operation
fmul.d f20, f12, f28, rtz # perform operation
fmul.d f20, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x23, 0x6a70668d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fmul.d f23, f3, f24, dyn # perform operation
fmul.d f23, f3, f24, rdn # perform operation
fmul.d f23, f3, f24, rmm # perform operation
fmul.d f23, f3, f24, rne # perform operation
fmul.d f23, f3, f24, rtz # perform operation
fmul.d f23, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x11, 0x0cada506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fmul.d f11, f24, f31, dyn # perform operation
fmul.d f11, f24, f31, rdn # perform operation
fmul.d f11, f24, f31, rmm # perform operation
fmul.d f11, f24, f31, rne # perform operation
fmul.d f11, f24, f31, rtz # perform operation
fmul.d f11, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x18, 0x38ea8df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fmul.d f18, f12, f11, dyn # perform operation
fmul.d f18, f12, f11, rdn # perform operation
fmul.d f18, f12, f11, rmm # perform operation
fmul.d f18, f12, f11, rne # perform operation
fmul.d f18, f12, f11, rtz # perform operation
fmul.d f18, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x12, 0x0efa07a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
fmul.d f12, f24, f15, dyn # perform operation
fmul.d f12, f24, f15, rdn # perform operation
fmul.d f12, f24, f15, rmm # perform operation
fmul.d f12, f24, f15, rne # perform operation
fmul.d f12, f24, f15, rtz # perform operation
fmul.d f12, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x26, 0xa06c6c6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fmul.d f26, f21, f12, dyn # perform operation
fmul.d f26, f21, f12, rdn # perform operation
fmul.d f26, f21, f12, rmm # perform operation
fmul.d f26, f21, f12, rne # perform operation
fmul.d f26, f21, f12, rtz # perform operation
fmul.d f26, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x12, 0xe81207a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fmul.d f12, f1, f10, dyn # perform operation
fmul.d f12, f1, f10, rdn # perform operation
fmul.d f12, f1, f10, rmm # perform operation
fmul.d f12, f1, f10, rne # perform operation
fmul.d f12, f1, f10, rtz # perform operation
fmul.d f12, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x17, 0x43a47398 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fmul.d f17, f27, f28, dyn # perform operation
fmul.d f17, f27, f28, rdn # perform operation
fmul.d f17, f27, f28, rmm # perform operation
fmul.d f17, f27, f28, rne # perform operation
fmul.d f17, f27, f28, rtz # perform operation
fmul.d f17, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x23, 0x7580206f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fmul.d f23, f11, f30, dyn # perform operation
fmul.d f23, f11, f30, rdn # perform operation
fmul.d f23, f11, f30, rmm # perform operation
fmul.d f23, f11, f30, rne # perform operation
fmul.d f23, f11, f30, rtz # perform operation
fmul.d f23, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x11, 0x135a4b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fmul.d f11, f19, f13, dyn # perform operation
fmul.d f11, f19, f13, rdn # perform operation
fmul.d f11, f19, f13, rmm # perform operation
fmul.d f11, f19, f13, rne # perform operation
fmul.d f11, f19, f13, rtz # perform operation
fmul.d f11, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x12, 0xc928bb49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fmul.d f12, f18, f30, dyn # perform operation
fmul.d f12, f18, f30, rdn # perform operation
fmul.d f12, f18, f30, rmm # perform operation
fmul.d f12, f18, f30, rne # perform operation
fmul.d f12, f18, f30, rtz # perform operation
fmul.d f12, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x49d082c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fmul.d f9, f12, f4, dyn # perform operation
fmul.d f9, f12, f4, rdn # perform operation
fmul.d f9, f12, f4, rmm # perform operation
fmul.d f9, f12, f4, rne # perform operation
fmul.d f9, f12, f4, rtz # perform operation
fmul.d f9, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x9, 0xa967dde4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fmul.d f9, f3, f26, dyn # perform operation
fmul.d f9, f3, f26, rdn # perform operation
fmul.d f9, f3, f26, rmm # perform operation
fmul.d f9, f3, f26, rne # perform operation
fmul.d f9, f3, f26, rtz # perform operation
fmul.d f9, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x4, 0x81a1227c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmul.d f4, f15, f24, dyn # perform operation
fmul.d f4, f15, f24, rdn # perform operation
fmul.d f4, f15, f24, rmm # perform operation
fmul.d f4, f15, f24, rne # perform operation
fmul.d f4, f15, f24, rtz # perform operation
fmul.d f4, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x6, 0x21b27013 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fmul.d f6, f20, f13, dyn # perform operation
fmul.d f6, f20, f13, rdn # perform operation
fmul.d f6, f20, f13, rmm # perform operation
fmul.d f6, f20, f13, rne # perform operation
fmul.d f6, f20, f13, rtz # perform operation
fmul.d f6, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x19, 0x36f9c2f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fmul.d f19, f11, f22, dyn # perform operation
fmul.d f19, f11, f22, rdn # perform operation
fmul.d f19, f11, f22, rmm # perform operation
fmul.d f19, f11, f22, rne # perform operation
fmul.d f19, f11, f22, rtz # perform operation
fmul.d f19, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x21, 0x69ed26cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fmul.d f21, f25, f7, dyn # perform operation
fmul.d f21, f25, f7, rdn # perform operation
fmul.d f21, f25, f7, rmm # perform operation
fmul.d f21, f25, f7, rne # perform operation
fmul.d f21, f25, f7, rtz # perform operation
fmul.d f21, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x11, 0xc264df82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fmul.d f11, f7, f19, dyn # perform operation
fmul.d f11, f7, f19, rdn # perform operation
fmul.d f11, f7, f19, rmm # perform operation
fmul.d f11, f7, f19, rne # perform operation
fmul.d f11, f7, f19, rtz # perform operation
fmul.d f11, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x3, 0x58f3d743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fmul.d f3, f17, f22, dyn # perform operation
fmul.d f3, f17, f22, rdn # perform operation
fmul.d f3, f17, f22, rmm # perform operation
fmul.d f3, f17, f22, rne # perform operation
fmul.d f3, f17, f22, rtz # perform operation
fmul.d f3, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x11, 0x0668c89a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fmul.d f11, f5, f20, dyn # perform operation
fmul.d f11, f5, f20, rdn # perform operation
fmul.d f11, f5, f20, rmm # perform operation
fmul.d f11, f5, f20, rne # perform operation
fmul.d f11, f5, f20, rtz # perform operation
fmul.d f11, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x2, 0xa94ca497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fmul.d f2, f15, f12, dyn # perform operation
fmul.d f2, f15, f12, rdn # perform operation
fmul.d f2, f15, f12, rmm # perform operation
fmul.d f2, f15, f12, rne # perform operation
fmul.d f2, f15, f12, rtz # perform operation
fmul.d f2, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x18, 0x011d790b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fmul.d f18, f16, f8, dyn # perform operation
fmul.d f18, f16, f8, rdn # perform operation
fmul.d f18, f16, f8, rmm # perform operation
fmul.d f18, f16, f8, rne # perform operation
fmul.d f18, f16, f8, rtz # perform operation
fmul.d f18, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x21, 0xf03ffae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fmul.d f21, f31, f6, dyn # perform operation
fmul.d f21, f31, f6, rdn # perform operation
fmul.d f21, f31, f6, rmm # perform operation
fmul.d f21, f31, f6, rne # perform operation
fmul.d f21, f31, f6, rtz # perform operation
fmul.d f21, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x16, 0x09f154bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmul.d f16, f25, f26, dyn # perform operation
fmul.d f16, f25, f26, rdn # perform operation
fmul.d f16, f25, f26, rmm # perform operation
fmul.d f16, f25, f26, rne # perform operation
fmul.d f16, f25, f26, rtz # perform operation
fmul.d f16, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x25, 0x17fb12ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fmul.d f25, f15, f30, dyn # perform operation
fmul.d f25, f15, f30, rdn # perform operation
fmul.d f25, f15, f30, rmm # perform operation
fmul.d f25, f15, f30, rne # perform operation
fmul.d f25, f15, f30, rtz # perform operation
fmul.d f25, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x16, 0xea8fe8bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmul.d f16, f30, f29, dyn # perform operation
fmul.d f16, f30, f29, rdn # perform operation
fmul.d f16, f30, f29, rmm # perform operation
fmul.d f16, f30, f29, rne # perform operation
fmul.d f16, f30, f29, rtz # perform operation
fmul.d f16, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x6, 0x5d9c9b59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fmul.d f6, f4, f28, dyn # perform operation
fmul.d f6, f4, f28, rdn # perform operation
fmul.d f6, f4, f28, rmm # perform operation
fmul.d f6, f4, f28, rne # perform operation
fmul.d f6, f4, f28, rtz # perform operation
fmul.d f6, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x29, 0x014c6180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fmul.d f29, f5, f1, dyn # perform operation
fmul.d f29, f5, f1, rdn # perform operation
fmul.d f29, f5, f1, rmm # perform operation
fmul.d f29, f5, f1, rne # perform operation
fmul.d f29, f5, f1, rtz # perform operation
fmul.d f29, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x5, 0x0ea700a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fmul.d f5, f24, f17, dyn # perform operation
fmul.d f5, f24, f17, rdn # perform operation
fmul.d f5, f24, f17, rmm # perform operation
fmul.d f5, f24, f17, rne # perform operation
fmul.d f5, f24, f17, rtz # perform operation
fmul.d f5, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x6, 0x051a2722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fmul.d f6, f24, f28, dyn # perform operation
fmul.d f6, f24, f28, rdn # perform operation
fmul.d f6, f24, f28, rmm # perform operation
fmul.d f6, f24, f28, rne # perform operation
fmul.d f6, f24, f28, rtz # perform operation
fmul.d f6, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x2, 0xee71a003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
fmul.d f2, f4, f15, dyn # perform operation
fmul.d f2, f4, f15, rdn # perform operation
fmul.d f2, f4, f15, rmm # perform operation
fmul.d f2, f4, f15, rne # perform operation
fmul.d f2, f4, f15, rtz # perform operation
fmul.d f2, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x21, 0x1a3d8f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fmul.d f21, f23, f18, dyn # perform operation
fmul.d f21, f23, f18, rdn # perform operation
fmul.d f21, f23, f18, rmm # perform operation
fmul.d f21, f23, f18, rne # perform operation
fmul.d f21, f23, f18, rtz # perform operation
fmul.d f21, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x15, 0x98dd1bfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fmul.d f15, f30, f26, dyn # perform operation
fmul.d f15, f30, f26, rdn # perform operation
fmul.d f15, f30, f26, rmm # perform operation
fmul.d f15, f30, f26, rne # perform operation
fmul.d f15, f30, f26, rtz # perform operation
fmul.d f15, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x7, 0xfa78b1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fmul.d f7, f5, f16, dyn # perform operation
fmul.d f7, f5, f16, rdn # perform operation
fmul.d f7, f5, f16, rmm # perform operation
fmul.d f7, f5, f16, rne # perform operation
fmul.d f7, f5, f16, rtz # perform operation
fmul.d f7, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x18, 0xa9443f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fmul.d f18, f16, f11, dyn # perform operation
fmul.d f18, f16, f11, rdn # perform operation
fmul.d f18, f16, f11, rmm # perform operation
fmul.d f18, f16, f11, rne # perform operation
fmul.d f18, f16, f11, rtz # perform operation
fmul.d f18, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x5, 0x9cb5c44f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fmul.d f5, f7, f9, dyn # perform operation
fmul.d f5, f7, f9, rdn # perform operation
fmul.d f5, f7, f9, rmm # perform operation
fmul.d f5, f7, f9, rne # perform operation
fmul.d f5, f7, f9, rtz # perform operation
fmul.d f5, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x10, 0x01a200a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fmul.d f10, f15, f19, dyn # perform operation
fmul.d f10, f15, f19, rdn # perform operation
fmul.d f10, f15, f19, rmm # perform operation
fmul.d f10, f15, f19, rne # perform operation
fmul.d f10, f15, f19, rtz # perform operation
fmul.d f10, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x13, 0xb895ca0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmul.d f13, f23, f17, dyn # perform operation
fmul.d f13, f23, f17, rdn # perform operation
fmul.d f13, f23, f17, rmm # perform operation
fmul.d f13, f23, f17, rne # perform operation
fmul.d f13, f23, f17, rtz # perform operation
fmul.d f13, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x31, 0x4c4b5adb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fmul.d f31, f15, f17, dyn # perform operation
fmul.d f31, f15, f17, rdn # perform operation
fmul.d f31, f15, f17, rmm # perform operation
fmul.d f31, f15, f17, rne # perform operation
fmul.d f31, f15, f17, rtz # perform operation
fmul.d f31, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x24, 0x4aedc418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fmul.d f24, f2, f19, dyn # perform operation
fmul.d f24, f2, f19, rdn # perform operation
fmul.d f24, f2, f19, rmm # perform operation
fmul.d f24, f2, f19, rne # perform operation
fmul.d f24, f2, f19, rtz # perform operation
fmul.d f24, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x12, 0xb0aacc9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fmul.d f12, f24, f31, dyn # perform operation
fmul.d f12, f24, f31, rdn # perform operation
fmul.d f12, f24, f31, rmm # perform operation
fmul.d f12, f24, f31, rne # perform operation
fmul.d f12, f24, f31, rtz # perform operation
fmul.d f12, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x11, 0x9a772612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fmul.d f11, f3, f12, dyn # perform operation
fmul.d f11, f3, f12, rdn # perform operation
fmul.d f11, f3, f12, rmm # perform operation
fmul.d f11, f3, f12, rne # perform operation
fmul.d f11, f3, f12, rtz # perform operation
fmul.d f11, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x4, 0x8b3db597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fmul.d f4, f13, f26, dyn # perform operation
fmul.d f4, f13, f26, rdn # perform operation
fmul.d f4, f13, f26, rmm # perform operation
fmul.d f4, f13, f26, rne # perform operation
fmul.d f4, f13, f26, rtz # perform operation
fmul.d f4, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x17, 0x9dfb6175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fmul.d f17, f24, f21, dyn # perform operation
fmul.d f17, f24, f21, rdn # perform operation
fmul.d f17, f24, f21, rmm # perform operation
fmul.d f17, f24, f21, rne # perform operation
fmul.d f17, f24, f21, rtz # perform operation
fmul.d f17, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x24, 0x0199a3ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fmul.d f24, f19, f29, dyn # perform operation
fmul.d f24, f19, f29, rdn # perform operation
fmul.d f24, f19, f29, rmm # perform operation
fmul.d f24, f19, f29, rne # perform operation
fmul.d f24, f19, f29, rtz # perform operation
fmul.d f24, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x20, 0xa0a07f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
fmul.d f20, f29, f2, dyn # perform operation
fmul.d f20, f29, f2, rdn # perform operation
fmul.d f20, f29, f2, rmm # perform operation
fmul.d f20, f29, f2, rne # perform operation
fmul.d f20, f29, f2, rtz # perform operation
fmul.d f20, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x13, 0x6b8f73ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fmul.d f13, f14, f31, dyn # perform operation
fmul.d f13, f14, f31, rdn # perform operation
fmul.d f13, f14, f31, rmm # perform operation
fmul.d f13, f14, f31, rne # perform operation
fmul.d f13, f14, f31, rtz # perform operation
fmul.d f13, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x18, 0xff25f29d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fmul.d f18, f16, f10, dyn # perform operation
fmul.d f18, f16, f10, rdn # perform operation
fmul.d f18, f16, f10, rmm # perform operation
fmul.d f18, f16, f10, rne # perform operation
fmul.d f18, f16, f10, rtz # perform operation
fmul.d f18, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x3, 0xf0b11610 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fmul.d f3, f1, f31, dyn # perform operation
fmul.d f3, f1, f31, rdn # perform operation
fmul.d f3, f1, f31, rmm # perform operation
fmul.d f3, f1, f31, rne # perform operation
fmul.d f3, f1, f31, rtz # perform operation
fmul.d f3, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0x5d5100f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fmul.d f30, f15, f1, dyn # perform operation
fmul.d f30, f15, f1, rdn # perform operation
fmul.d f30, f15, f1, rmm # perform operation
fmul.d f30, f15, f1, rne # perform operation
fmul.d f30, f15, f1, rtz # perform operation
fmul.d f30, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x18, 0xccf5395d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fmul.d f18, f14, f10, dyn # perform operation
fmul.d f18, f14, f10, rdn # perform operation
fmul.d f18, f14, f10, rmm # perform operation
fmul.d f18, f14, f10, rne # perform operation
fmul.d f18, f14, f10, rtz # perform operation
fmul.d f18, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x23, 0x32255b00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fmul.d f23, f31, f17, dyn # perform operation
fmul.d f23, f31, f17, rdn # perform operation
fmul.d f23, f31, f17, rmm # perform operation
fmul.d f23, f31, f17, rne # perform operation
fmul.d f23, f31, f17, rtz # perform operation
fmul.d f23, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x11, 0x14e85b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fmul.d f11, f3, f1, dyn # perform operation
fmul.d f11, f3, f1, rdn # perform operation
fmul.d f11, f3, f1, rmm # perform operation
fmul.d f11, f3, f1, rne # perform operation
fmul.d f11, f3, f1, rtz # perform operation
fmul.d f11, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x3, 0xadba30c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fmul.d f3, f10, f12, dyn # perform operation
fmul.d f3, f10, f12, rdn # perform operation
fmul.d f3, f10, f12, rmm # perform operation
fmul.d f3, f10, f12, rne # perform operation
fmul.d f3, f10, f12, rtz # perform operation
fmul.d f3, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x26cb33c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fmul.d f17, f12, f9, dyn # perform operation
fmul.d f17, f12, f9, rdn # perform operation
fmul.d f17, f12, f9, rmm # perform operation
fmul.d f17, f12, f9, rne # perform operation
fmul.d f17, f12, f9, rtz # perform operation
fmul.d f17, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x12, 0xffb93ae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fmul.d f12, f5, f18, dyn # perform operation
fmul.d f12, f5, f18, rdn # perform operation
fmul.d f12, f5, f18, rmm # perform operation
fmul.d f12, f5, f18, rne # perform operation
fmul.d f12, f5, f18, rtz # perform operation
fmul.d f12, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x7, 0x61dad5b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fmul.d f7, f28, f30, dyn # perform operation
fmul.d f7, f28, f30, rdn # perform operation
fmul.d f7, f28, f30, rmm # perform operation
fmul.d f7, f28, f30, rne # perform operation
fmul.d f7, f28, f30, rtz # perform operation
fmul.d f7, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f28, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x28, 0x07841b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fmul.d f28, f16, f17, dyn # perform operation
fmul.d f28, f16, f17, rdn # perform operation
fmul.d f28, f16, f17, rmm # perform operation
fmul.d f28, f16, f17, rne # perform operation
fmul.d f28, f16, f17, rtz # perform operation
fmul.d f28, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x17, 0x2f283444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fmul.d f17, f11, f20, dyn # perform operation
fmul.d f17, f11, f20, rdn # perform operation
fmul.d f17, f11, f20, rmm # perform operation
fmul.d f17, f11, f20, rne # perform operation
fmul.d f17, f11, f20, rtz # perform operation
fmul.d f17, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x14, 0x8d649ddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fmul.d f14, f1, f25, dyn # perform operation
fmul.d f14, f1, f25, rdn # perform operation
fmul.d f14, f1, f25, rmm # perform operation
fmul.d f14, f1, f25, rne # perform operation
fmul.d f14, f1, f25, rtz # perform operation
fmul.d f14, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x24, 0x36f259f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fmul.d f24, f20, f11, dyn # perform operation
fmul.d f24, f20, f11, rdn # perform operation
fmul.d f24, f20, f11, rmm # perform operation
fmul.d f24, f20, f11, rne # perform operation
fmul.d f24, f20, f11, rtz # perform operation
fmul.d f24, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x6, 0x58dacc71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fmul.d f6, f18, f17, dyn # perform operation
fmul.d f6, f18, f17, rdn # perform operation
fmul.d f6, f18, f17, rmm # perform operation
fmul.d f6, f18, f17, rne # perform operation
fmul.d f6, f18, f17, rtz # perform operation
fmul.d f6, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x5, 0x725bc023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fmul.d f5, f14, f1, dyn # perform operation
fmul.d f5, f14, f1, rdn # perform operation
fmul.d f5, f14, f1, rmm # perform operation
fmul.d f5, f14, f1, rne # perform operation
fmul.d f5, f14, f1, rtz # perform operation
fmul.d f5, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x13, 0xdfe6a332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fmul.d f13, f30, f3, dyn # perform operation
fmul.d f13, f30, f3, rdn # perform operation
fmul.d f13, f30, f3, rmm # perform operation
fmul.d f13, f30, f3, rne # perform operation
fmul.d f13, f30, f3, rtz # perform operation
fmul.d f13, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x8, 0xc02b24a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
fmul.d f8, f23, f5, dyn # perform operation
fmul.d f8, f23, f5, rdn # perform operation
fmul.d f8, f23, f5, rmm # perform operation
fmul.d f8, f23, f5, rne # perform operation
fmul.d f8, f23, f5, rtz # perform operation
fmul.d f8, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x1, 0x89a7a97c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fmul.d f1, f18, f4, dyn # perform operation
fmul.d f1, f18, f4, rdn # perform operation
fmul.d f1, f18, f4, rmm # perform operation
fmul.d f1, f18, f4, rne # perform operation
fmul.d f1, f18, f4, rtz # perform operation
fmul.d f1, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x13, 0xf30cca70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fmul.d f13, f7, f15, dyn # perform operation
fmul.d f13, f7, f15, rdn # perform operation
fmul.d f13, f7, f15, rmm # perform operation
fmul.d f13, f7, f15, rne # perform operation
fmul.d f13, f7, f15, rtz # perform operation
fmul.d f13, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x1, 0xa72360e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fmul.d f1, f17, f30, dyn # perform operation
fmul.d f1, f17, f30, rdn # perform operation
fmul.d f1, f17, f30, rmm # perform operation
fmul.d f1, f17, f30, rne # perform operation
fmul.d f1, f17, f30, rtz # perform operation
fmul.d f1, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x8, 0x72f7a4b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
fmul.d f8, f1, f4, dyn # perform operation
fmul.d f8, f1, f4, rdn # perform operation
fmul.d f8, f1, f4, rmm # perform operation
fmul.d f8, f1, f4, rne # perform operation
fmul.d f8, f1, f4, rtz # perform operation
fmul.d f8, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x27, 0x3fb89602 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fmul.d f27, f20, f19, dyn # perform operation
fmul.d f27, f20, f19, rdn # perform operation
fmul.d f27, f20, f19, rmm # perform operation
fmul.d f27, f20, f19, rne # perform operation
fmul.d f27, f20, f19, rtz # perform operation
fmul.d f27, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x14, 0xbc3d2eee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fmul.d f14, f2, f17, dyn # perform operation
fmul.d f14, f2, f17, rdn # perform operation
fmul.d f14, f2, f17, rmm # perform operation
fmul.d f14, f2, f17, rne # perform operation
fmul.d f14, f2, f17, rtz # perform operation
fmul.d f14, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x16, 0xc64deef3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fmul.d f16, f9, f12, dyn # perform operation
fmul.d f16, f9, f12, rdn # perform operation
fmul.d f16, f9, f12, rmm # perform operation
fmul.d f16, f9, f12, rne # perform operation
fmul.d f16, f9, f12, rtz # perform operation
fmul.d f16, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x26, 0xabc4dfb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fmul.d f26, f6, f16, dyn # perform operation
fmul.d f26, f6, f16, rdn # perform operation
fmul.d f26, f6, f16, rmm # perform operation
fmul.d f26, f6, f16, rne # perform operation
fmul.d f26, f6, f16, rtz # perform operation
fmul.d f26, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x4, 0x91e1a5f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fmul.d f4, f15, f1, dyn # perform operation
fmul.d f4, f15, f1, rdn # perform operation
fmul.d f4, f15, f1, rmm # perform operation
fmul.d f4, f15, f1, rne # perform operation
fmul.d f4, f15, f1, rtz # perform operation
fmul.d f4, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x16, 0x83e1e722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
fmul.d f16, f18, f10, dyn # perform operation
fmul.d f16, f18, f10, rdn # perform operation
fmul.d f16, f18, f10, rmm # perform operation
fmul.d f16, f18, f10, rne # perform operation
fmul.d f16, f18, f10, rtz # perform operation
fmul.d f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x17, 0x4d709abb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fmul.d f17, f12, f24, dyn # perform operation
fmul.d f17, f12, f24, rdn # perform operation
fmul.d f17, f12, f24, rmm # perform operation
fmul.d f17, f12, f24, rne # perform operation
fmul.d f17, f12, f24, rtz # perform operation
fmul.d f17, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0x0d5349c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmul.d f14, f17, f12, dyn # perform operation
fmul.d f14, f17, f12, rdn # perform operation
fmul.d f14, f17, f12, rmm # perform operation
fmul.d f14, f17, f12, rne # perform operation
fmul.d f14, f17, f12, rtz # perform operation
fmul.d f14, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x8, 0x09115253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fmul.d f8, f31, f1, dyn # perform operation
fmul.d f8, f31, f1, rdn # perform operation
fmul.d f8, f31, f1, rmm # perform operation
fmul.d f8, f31, f1, rne # perform operation
fmul.d f8, f31, f1, rtz # perform operation
fmul.d f8, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x15, 0x8925aa86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmul.d f15, f4, f11, dyn # perform operation
fmul.d f15, f4, f11, rdn # perform operation
fmul.d f15, f4, f11, rmm # perform operation
fmul.d f15, f4, f11, rne # perform operation
fmul.d f15, f4, f11, rtz # perform operation
fmul.d f15, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x23, 0x4d11ccc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fmul.d f23, f16, f25, dyn # perform operation
fmul.d f23, f16, f25, rdn # perform operation
fmul.d f23, f16, f25, rmm # perform operation
fmul.d f23, f16, f25, rne # perform operation
fmul.d f23, f16, f25, rtz # perform operation
fmul.d f23, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x28, 0xebf05149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fmul.d f28, f7, f10, dyn # perform operation
fmul.d f28, f7, f10, rdn # perform operation
fmul.d f28, f7, f10, rmm # perform operation
fmul.d f28, f7, f10, rne # perform operation
fmul.d f28, f7, f10, rtz # perform operation
fmul.d f28, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x25, 0x856b82df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fmul.d f25, f24, f17, dyn # perform operation
fmul.d f25, f24, f17, rdn # perform operation
fmul.d f25, f24, f17, rmm # perform operation
fmul.d f25, f24, f17, rne # perform operation
fmul.d f25, f24, f17, rtz # perform operation
fmul.d f25, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x22, 0xe0f8b821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fmul.d f22, f24, f30, dyn # perform operation
fmul.d f22, f24, f30, rdn # perform operation
fmul.d f22, f24, f30, rmm # perform operation
fmul.d f22, f24, f30, rne # perform operation
fmul.d f22, f24, f30, rtz # perform operation
fmul.d f22, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x14, 0x8537c3fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fmul.d f14, f26, f11, dyn # perform operation
fmul.d f14, f26, f11, rdn # perform operation
fmul.d f14, f26, f11, rmm # perform operation
fmul.d f14, f26, f11, rne # perform operation
fmul.d f14, f26, f11, rtz # perform operation
fmul.d f14, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x4, 0x4482af0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fmul.d f4, f9, f27, dyn # perform operation
fmul.d f4, f9, f27, rdn # perform operation
fmul.d f4, f9, f27, rmm # perform operation
fmul.d f4, f9, f27, rne # perform operation
fmul.d f4, f9, f27, rtz # perform operation
fmul.d f4, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x27, 0xcc312c10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fmul.d f27, f30, f3, dyn # perform operation
fmul.d f27, f30, f3, rdn # perform operation
fmul.d f27, f30, f3, rmm # perform operation
fmul.d f27, f30, f3, rne # perform operation
fmul.d f27, f30, f3, rtz # perform operation
fmul.d f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x20, 0xcbb910d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fmul.d f20, f1, f6, dyn # perform operation
fmul.d f20, f1, f6, rdn # perform operation
fmul.d f20, f1, f6, rmm # perform operation
fmul.d f20, f1, f6, rne # perform operation
fmul.d f20, f1, f6, rtz # perform operation
fmul.d f20, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x26, 0x8e662e72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fmul.d f26, f22, f3, dyn # perform operation
fmul.d f26, f22, f3, rdn # perform operation
fmul.d f26, f22, f3, rmm # perform operation
fmul.d f26, f22, f3, rne # perform operation
fmul.d f26, f22, f3, rtz # perform operation
fmul.d f26, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x21, 0xe5fa40bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fmul.d f21, f31, f26, dyn # perform operation
fmul.d f21, f31, f26, rdn # perform operation
fmul.d f21, f31, f26, rmm # perform operation
fmul.d f21, f31, f26, rne # perform operation
fmul.d f21, f31, f26, rtz # perform operation
fmul.d f21, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x7, 0xa0583cc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fmul.d f7, f22, f29, dyn # perform operation
fmul.d f7, f22, f29, rdn # perform operation
fmul.d f7, f22, f29, rmm # perform operation
fmul.d f7, f22, f29, rne # perform operation
fmul.d f7, f22, f29, rtz # perform operation
fmul.d f7, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x9, 0x06e6ff1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fmul.d f9, f4, f8, dyn # perform operation
fmul.d f9, f4, f8, rdn # perform operation
fmul.d f9, f4, f8, rmm # perform operation
fmul.d f9, f4, f8, rne # perform operation
fmul.d f9, f4, f8, rtz # perform operation
fmul.d f9, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x7, 0x5c128d79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fmul.d f7, f4, f28, dyn # perform operation
fmul.d f7, f4, f28, rdn # perform operation
fmul.d f7, f4, f28, rmm # perform operation
fmul.d f7, f4, f28, rne # perform operation
fmul.d f7, f4, f28, rtz # perform operation
fmul.d f7, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x14, 0x5347551e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fmul.d f14, f8, f26, dyn # perform operation
fmul.d f14, f8, f26, rdn # perform operation
fmul.d f14, f8, f26, rmm # perform operation
fmul.d f14, f8, f26, rne # perform operation
fmul.d f14, f8, f26, rtz # perform operation
fmul.d f14, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x1, 0x88e442bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fmul.d f1, f29, f27, dyn # perform operation
fmul.d f1, f29, f27, rdn # perform operation
fmul.d f1, f29, f27, rmm # perform operation
fmul.d f1, f29, f27, rne # perform operation
fmul.d f1, f29, f27, rtz # perform operation
fmul.d f1, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x1, 0x41390fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fmul.d f1, f22, f18, dyn # perform operation
fmul.d f1, f22, f18, rdn # perform operation
fmul.d f1, f22, f18, rmm # perform operation
fmul.d f1, f22, f18, rne # perform operation
fmul.d f1, f22, f18, rtz # perform operation
fmul.d f1, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x31, 0x39f41aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fmul.d f31, f11, f21, dyn # perform operation
fmul.d f31, f11, f21, rdn # perform operation
fmul.d f31, f11, f21, rmm # perform operation
fmul.d f31, f11, f21, rne # perform operation
fmul.d f31, f11, f21, rtz # perform operation
fmul.d f31, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x3, 0x47c8cae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fmul.d f3, f9, f27, dyn # perform operation
fmul.d f3, f9, f27, rdn # perform operation
fmul.d f3, f9, f27, rmm # perform operation
fmul.d f3, f9, f27, rne # perform operation
fmul.d f3, f9, f27, rtz # perform operation
fmul.d f3, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x19, 0xe5a782b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fmul.d f19, f21, f16, dyn # perform operation
fmul.d f19, f21, f16, rdn # perform operation
fmul.d f19, f21, f16, rmm # perform operation
fmul.d f19, f21, f16, rne # perform operation
fmul.d f19, f21, f16, rtz # perform operation
fmul.d f19, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x11, 0x594e0336 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fmul.d f11, f31, f17, dyn # perform operation
fmul.d f11, f31, f17, rdn # perform operation
fmul.d f11, f31, f17, rmm # perform operation
fmul.d f11, f31, f17, rne # perform operation
fmul.d f11, f31, f17, rtz # perform operation
fmul.d f11, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x4, 0x3cb83efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f4, f30, f23, dyn # perform operation
fmul.d f4, f30, f23, rdn # perform operation
fmul.d f4, f30, f23, rmm # perform operation
fmul.d f4, f30, f23, rne # perform operation
fmul.d f4, f30, f23, rtz # perform operation
fmul.d f4, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x21, 0xe9b49242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fmul.d f21, f17, f31, dyn # perform operation
fmul.d f21, f17, f31, rdn # perform operation
fmul.d f21, f17, f31, rmm # perform operation
fmul.d f21, f17, f31, rne # perform operation
fmul.d f21, f17, f31, rtz # perform operation
fmul.d f21, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x13, 0x6a96d4cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fmul.d f13, f11, f15, dyn # perform operation
fmul.d f13, f11, f15, rdn # perform operation
fmul.d f13, f11, f15, rmm # perform operation
fmul.d f13, f11, f15, rne # perform operation
fmul.d f13, f11, f15, rtz # perform operation
fmul.d f13, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x2, 0x60842e92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fmul.d f2, f30, f29, dyn # perform operation
fmul.d f2, f30, f29, rdn # perform operation
fmul.d f2, f30, f29, rmm # perform operation
fmul.d f2, f30, f29, rne # perform operation
fmul.d f2, f30, f29, rtz # perform operation
fmul.d f2, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x15, 0x727fa0ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fmul.d f15, f31, f21, dyn # perform operation
fmul.d f15, f31, f21, rdn # perform operation
fmul.d f15, f31, f21, rmm # perform operation
fmul.d f15, f31, f21, rne # perform operation
fmul.d f15, f31, f21, rtz # perform operation
fmul.d f15, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x4, 0x01d9d06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fmul.d f4, f3, f26, dyn # perform operation
fmul.d f4, f3, f26, rdn # perform operation
fmul.d f4, f3, f26, rmm # perform operation
fmul.d f4, f3, f26, rne # perform operation
fmul.d f4, f3, f26, rtz # perform operation
fmul.d f4, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x19, 0xfe99fc77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fmul.d f19, f9, f27, dyn # perform operation
fmul.d f19, f9, f27, rdn # perform operation
fmul.d f19, f9, f27, rmm # perform operation
fmul.d f19, f9, f27, rne # perform operation
fmul.d f19, f9, f27, rtz # perform operation
fmul.d f19, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x30, 0xf5f7731a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f30, f18, f23, dyn # perform operation
fmul.d f30, f18, f23, rdn # perform operation
fmul.d f30, f18, f23, rmm # perform operation
fmul.d f30, f18, f23, rne # perform operation
fmul.d f30, f18, f23, rtz # perform operation
fmul.d f30, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x15, 0x311157e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fmul.d f15, f12, f9, dyn # perform operation
fmul.d f15, f12, f9, rdn # perform operation
fmul.d f15, f12, f9, rmm # perform operation
fmul.d f15, f12, f9, rne # perform operation
fmul.d f15, f12, f9, rtz # perform operation
fmul.d f15, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x31, 0xa590d6d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fmul.d f31, f12, f28, dyn # perform operation
fmul.d f31, f12, f28, rdn # perform operation
fmul.d f31, f12, f28, rmm # perform operation
fmul.d f31, f12, f28, rne # perform operation
fmul.d f31, f12, f28, rtz # perform operation
fmul.d f31, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x8, 0x089f14a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fmul.d f8, f27, f22, dyn # perform operation
fmul.d f8, f27, f22, rdn # perform operation
fmul.d f8, f27, f22, rmm # perform operation
fmul.d f8, f27, f22, rne # perform operation
fmul.d f8, f27, f22, rtz # perform operation
fmul.d f8, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x14, 0x12f57294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fmul.d f14, f29, f31, dyn # perform operation
fmul.d f14, f29, f31, rdn # perform operation
fmul.d f14, f29, f31, rmm # perform operation
fmul.d f14, f29, f31, rne # perform operation
fmul.d f14, f29, f31, rtz # perform operation
fmul.d f14, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x6, 0x40459be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fmul.d f6, f16, f22, dyn # perform operation
fmul.d f6, f16, f22, rdn # perform operation
fmul.d f6, f16, f22, rmm # perform operation
fmul.d f6, f16, f22, rne # perform operation
fmul.d f6, f16, f22, rtz # perform operation
fmul.d f6, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x2, 0xce43aa20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fmul.d f2, f26, f27, dyn # perform operation
fmul.d f2, f26, f27, rdn # perform operation
fmul.d f2, f26, f27, rmm # perform operation
fmul.d f2, f26, f27, rne # perform operation
fmul.d f2, f26, f27, rtz # perform operation
fmul.d f2, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x8, 0x21996276 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fmul.d f8, f29, f27, dyn # perform operation
fmul.d f8, f29, f27, rdn # perform operation
fmul.d f8, f29, f27, rmm # perform operation
fmul.d f8, f29, f27, rne # perform operation
fmul.d f8, f29, f27, rtz # perform operation
fmul.d f8, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x9, 0xfcb49aee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmul.d f9, f15, f11, dyn # perform operation
fmul.d f9, f15, f11, rdn # perform operation
fmul.d f9, f15, f11, rmm # perform operation
fmul.d f9, f15, f11, rne # perform operation
fmul.d f9, f15, f11, rtz # perform operation
fmul.d f9, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x11, 0xe6027463 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fmul.d f11, f18, f9, dyn # perform operation
fmul.d f11, f18, f9, rdn # perform operation
fmul.d f11, f18, f9, rmm # perform operation
fmul.d f11, f18, f9, rne # perform operation
fmul.d f11, f18, f9, rtz # perform operation
fmul.d f11, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x29, 0x1bb68d27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fmul.d f29, f31, f1, dyn # perform operation
fmul.d f29, f31, f1, rdn # perform operation
fmul.d f29, f31, f1, rmm # perform operation
fmul.d f29, f31, f1, rne # perform operation
fmul.d f29, f31, f1, rtz # perform operation
fmul.d f29, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x12, 0x14df99ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fmul.d f12, f1, f4, dyn # perform operation
fmul.d f12, f1, f4, rdn # perform operation
fmul.d f12, f1, f4, rmm # perform operation
fmul.d f12, f1, f4, rne # perform operation
fmul.d f12, f1, f4, rtz # perform operation
fmul.d f12, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x28, 0x2c29bbed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fmul.d f28, f14, f18, dyn # perform operation
fmul.d f28, f14, f18, rdn # perform operation
fmul.d f28, f14, f18, rmm # perform operation
fmul.d f28, f14, f18, rne # perform operation
fmul.d f28, f14, f18, rtz # perform operation
fmul.d f28, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f14, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x18, 0x03b8a2e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmul.d f18, f6, f15, dyn # perform operation
fmul.d f18, f6, f15, rdn # perform operation
fmul.d f18, f6, f15, rmm # perform operation
fmul.d f18, f6, f15, rne # perform operation
fmul.d f18, f6, f15, rtz # perform operation
fmul.d f18, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x18, 0x226ccc01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fmul.d f18, f28, f14, dyn # perform operation
fmul.d f18, f28, f14, rdn # perform operation
fmul.d f18, f28, f14, rmm # perform operation
fmul.d f18, f28, f14, rne # perform operation
fmul.d f18, f28, f14, rtz # perform operation
fmul.d f18, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x24, 0x67704f82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fmul.d f24, f3, f19, dyn # perform operation
fmul.d f24, f3, f19, rdn # perform operation
fmul.d f24, f3, f19, rmm # perform operation
fmul.d f24, f3, f19, rne # perform operation
fmul.d f24, f3, f19, rtz # perform operation
fmul.d f24, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x23, 0x05d3b6eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fmul.d f23, f8, f31, dyn # perform operation
fmul.d f23, f8, f31, rdn # perform operation
fmul.d f23, f8, f31, rmm # perform operation
fmul.d f23, f8, f31, rne # perform operation
fmul.d f23, f8, f31, rtz # perform operation
fmul.d f23, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x15, 0x86e3e428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fmul.d f15, f13, f24, dyn # perform operation
fmul.d f15, f13, f24, rdn # perform operation
fmul.d f15, f13, f24, rmm # perform operation
fmul.d f15, f13, f24, rne # perform operation
fmul.d f15, f13, f24, rtz # perform operation
fmul.d f15, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x2, 0x6e0ea028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fmul.d f2, f15, f7, dyn # perform operation
fmul.d f2, f15, f7, rdn # perform operation
fmul.d f2, f15, f7, rmm # perform operation
fmul.d f2, f15, f7, rne # perform operation
fmul.d f2, f15, f7, rtz # perform operation
fmul.d f2, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x1, 0xcca5e0c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fmul.d f1, f28, f4, dyn # perform operation
fmul.d f1, f28, f4, rdn # perform operation
fmul.d f1, f28, f4, rmm # perform operation
fmul.d f1, f28, f4, rne # perform operation
fmul.d f1, f28, f4, rtz # perform operation
fmul.d f1, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x4, 0x6d62d010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fmul.d f4, f7, f14, dyn # perform operation
fmul.d f4, f7, f14, rdn # perform operation
fmul.d f4, f7, f14, rmm # perform operation
fmul.d f4, f7, f14, rne # perform operation
fmul.d f4, f7, f14, rtz # perform operation
fmul.d f4, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x18, 0x480db4cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fmul.d f18, f27, f1, dyn # perform operation
fmul.d f18, f27, f1, rdn # perform operation
fmul.d f18, f27, f1, rmm # perform operation
fmul.d f18, f27, f1, rne # perform operation
fmul.d f18, f27, f1, rtz # perform operation
fmul.d f18, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x21, 0x46854775 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fmul.d f21, f20, f13, dyn # perform operation
fmul.d f21, f20, f13, rdn # perform operation
fmul.d f21, f20, f13, rmm # perform operation
fmul.d f21, f20, f13, rne # perform operation
fmul.d f21, f20, f13, rtz # perform operation
fmul.d f21, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x24, 0x188974e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fmul.d f24, f15, f14, dyn # perform operation
fmul.d f24, f15, f14, rdn # perform operation
fmul.d f24, f15, f14, rmm # perform operation
fmul.d f24, f15, f14, rne # perform operation
fmul.d f24, f15, f14, rtz # perform operation
fmul.d f24, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x25, 0x4520bd01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fmul.d f25, f4, f5, dyn # perform operation
fmul.d f25, f4, f5, rdn # perform operation
fmul.d f25, f4, f5, rmm # perform operation
fmul.d f25, f4, f5, rne # perform operation
fmul.d f25, f4, f5, rtz # perform operation
fmul.d f25, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x8, 0xbecc9fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fmul.d f8, f21, f12, dyn # perform operation
fmul.d f8, f21, f12, rdn # perform operation
fmul.d f8, f21, f12, rmm # perform operation
fmul.d f8, f21, f12, rne # perform operation
fmul.d f8, f21, f12, rtz # perform operation
fmul.d f8, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x20, 0x72885168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fmul.d f20, f2, f4, dyn # perform operation
fmul.d f20, f2, f4, rdn # perform operation
fmul.d f20, f2, f4, rmm # perform operation
fmul.d f20, f2, f4, rne # perform operation
fmul.d f20, f2, f4, rtz # perform operation
fmul.d f20, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x17, 0x2bde6bfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fmul.d f17, f18, f6, dyn # perform operation
fmul.d f17, f18, f6, rdn # perform operation
fmul.d f17, f18, f6, rmm # perform operation
fmul.d f17, f18, f6, rne # perform operation
fmul.d f17, f18, f6, rtz # perform operation
fmul.d f17, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x21, 0x4b42d06d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fmul.d f21, f14, f18, dyn # perform operation
fmul.d f21, f14, f18, rdn # perform operation
fmul.d f21, f14, f18, rmm # perform operation
fmul.d f21, f14, f18, rne # perform operation
fmul.d f21, f14, f18, rtz # perform operation
fmul.d f21, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f14, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x18, 0x52fff4e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fmul.d f18, f3, f16, dyn # perform operation
fmul.d f18, f3, f16, rdn # perform operation
fmul.d f18, f3, f16, rmm # perform operation
fmul.d f18, f3, f16, rne # perform operation
fmul.d f18, f3, f16, rtz # perform operation
fmul.d f18, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x29, 0xf81d509d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmul.d f29, f21, f3, dyn # perform operation
fmul.d f29, f21, f3, rdn # perform operation
fmul.d f29, f21, f3, rmm # perform operation
fmul.d f29, f21, f3, rne # perform operation
fmul.d f29, f21, f3, rtz # perform operation
fmul.d f29, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x25, 0xe64e58d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fmul.d f25, f5, f12, dyn # perform operation
fmul.d f25, f5, f12, rdn # perform operation
fmul.d f25, f5, f12, rmm # perform operation
fmul.d f25, f5, f12, rne # perform operation
fmul.d f25, f5, f12, rtz # perform operation
fmul.d f25, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x3, 0xb397a0ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fmul.d f3, f28, f20, dyn # perform operation
fmul.d f3, f28, f20, rdn # perform operation
fmul.d f3, f28, f20, rmm # perform operation
fmul.d f3, f28, f20, rne # perform operation
fmul.d f3, f28, f20, rtz # perform operation
fmul.d f3, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x27, 0x60d9603b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fmul.d f27, f30, f22, dyn # perform operation
fmul.d f27, f30, f22, rdn # perform operation
fmul.d f27, f30, f22, rmm # perform operation
fmul.d f27, f30, f22, rne # perform operation
fmul.d f27, f30, f22, rtz # perform operation
fmul.d f27, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x2, 0x337ca88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fmul.d f2, f12, f20, dyn # perform operation
fmul.d f2, f12, f20, rdn # perform operation
fmul.d f2, f12, f20, rmm # perform operation
fmul.d f2, f12, f20, rne # perform operation
fmul.d f2, f12, f20, rtz # perform operation
fmul.d f2, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x18, 0x90cf2c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmul.d f18, f25, f17, dyn # perform operation
fmul.d f18, f25, f17, rdn # perform operation
fmul.d f18, f25, f17, rmm # perform operation
fmul.d f18, f25, f17, rne # perform operation
fmul.d f18, f25, f17, rtz # perform operation
fmul.d f18, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x27, 0xc1e5c455 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fmul.d f27, f1, f10, dyn # perform operation
fmul.d f27, f1, f10, rdn # perform operation
fmul.d f27, f1, f10, rmm # perform operation
fmul.d f27, f1, f10, rne # perform operation
fmul.d f27, f1, f10, rtz # perform operation
fmul.d f27, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x26, 0x70239745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmul.d f26, f30, f21, dyn # perform operation
fmul.d f26, f30, f21, rdn # perform operation
fmul.d f26, f30, f21, rmm # perform operation
fmul.d f26, f30, f21, rne # perform operation
fmul.d f26, f30, f21, rtz # perform operation
fmul.d f26, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x19, 0xf1fe05d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fmul.d f19, f8, f22, dyn # perform operation
fmul.d f19, f8, f22, rdn # perform operation
fmul.d f19, f8, f22, rmm # perform operation
fmul.d f19, f8, f22, rne # perform operation
fmul.d f19, f8, f22, rtz # perform operation
fmul.d f19, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x30, 0x5cf6fb3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
fmul.d f30, f18, f13, dyn # perform operation
fmul.d f30, f18, f13, rdn # perform operation
fmul.d f30, f18, f13, rmm # perform operation
fmul.d f30, f18, f13, rne # perform operation
fmul.d f30, f18, f13, rtz # perform operation
fmul.d f30, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x16, 0x83bee0ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fmul.d f16, f25, f10, dyn # perform operation
fmul.d f16, f25, f10, rdn # perform operation
fmul.d f16, f25, f10, rmm # perform operation
fmul.d f16, f25, f10, rne # perform operation
fmul.d f16, f25, f10, rtz # perform operation
fmul.d f16, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x27, 0x489f630d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fmul.d f27, f22, f11, dyn # perform operation
fmul.d f27, f22, f11, rdn # perform operation
fmul.d f27, f22, f11, rmm # perform operation
fmul.d f27, f22, f11, rne # perform operation
fmul.d f27, f22, f11, rtz # perform operation
fmul.d f27, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x8, 0xbfebb550 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fmul.d f8, f11, f10, dyn # perform operation
fmul.d f8, f11, f10, rdn # perform operation
fmul.d f8, f11, f10, rmm # perform operation
fmul.d f8, f11, f10, rne # perform operation
fmul.d f8, f11, f10, rtz # perform operation
fmul.d f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x31, 0x4cb95c67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fmul.d f31, f25, f22, dyn # perform operation
fmul.d f31, f25, f22, rdn # perform operation
fmul.d f31, f25, f22, rmm # perform operation
fmul.d f31, f25, f22, rne # perform operation
fmul.d f31, f25, f22, rtz # perform operation
fmul.d f31, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x30, 0x63d8a212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fmul.d f30, f12, f23, dyn # perform operation
fmul.d f30, f12, f23, rdn # perform operation
fmul.d f30, f12, f23, rmm # perform operation
fmul.d f30, f12, f23, rne # perform operation
fmul.d f30, f12, f23, rtz # perform operation
fmul.d f30, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x10, 0xe02bbb5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fmul.d f10, f4, f2, dyn # perform operation
fmul.d f10, f4, f2, rdn # perform operation
fmul.d f10, f4, f2, rmm # perform operation
fmul.d f10, f4, f2, rne # perform operation
fmul.d f10, f4, f2, rtz # perform operation
fmul.d f10, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x10, 0x1196c846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmul.d f10, f18, f19, dyn # perform operation
fmul.d f10, f18, f19, rdn # perform operation
fmul.d f10, f18, f19, rmm # perform operation
fmul.d f10, f18, f19, rne # perform operation
fmul.d f10, f18, f19, rtz # perform operation
fmul.d f10, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x31, 0xa5c281c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fmul.d f31, f11, f13, dyn # perform operation
fmul.d f31, f11, f13, rdn # perform operation
fmul.d f31, f11, f13, rmm # perform operation
fmul.d f31, f11, f13, rne # perform operation
fmul.d f31, f11, f13, rtz # perform operation
fmul.d f31, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x26, 0xae631885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fmul.d f26, f6, f24, dyn # perform operation
fmul.d f26, f6, f24, rdn # perform operation
fmul.d f26, f6, f24, rmm # perform operation
fmul.d f26, f6, f24, rne # perform operation
fmul.d f26, f6, f24, rtz # perform operation
fmul.d f26, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x14, 0xdba405c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fmul.d f14, f23, f16, dyn # perform operation
fmul.d f14, f23, f16, rdn # perform operation
fmul.d f14, f23, f16, rmm # perform operation
fmul.d f14, f23, f16, rne # perform operation
fmul.d f14, f23, f16, rtz # perform operation
fmul.d f14, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x5, 0x29611ff1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fmul.d f5, f25, f20, dyn # perform operation
fmul.d f5, f25, f20, rdn # perform operation
fmul.d f5, f25, f20, rmm # perform operation
fmul.d f5, f25, f20, rne # perform operation
fmul.d f5, f25, f20, rtz # perform operation
fmul.d f5, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x10, 0x265d9328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fmul.d f10, f12, f7, dyn # perform operation
fmul.d f10, f12, f7, rdn # perform operation
fmul.d f10, f12, f7, rmm # perform operation
fmul.d f10, f12, f7, rne # perform operation
fmul.d f10, f12, f7, rtz # perform operation
fmul.d f10, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x11, 0x43b4b642 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fmul.d f11, f22, f18, dyn # perform operation
fmul.d f11, f22, f18, rdn # perform operation
fmul.d f11, f22, f18, rmm # perform operation
fmul.d f11, f22, f18, rne # perform operation
fmul.d f11, f22, f18, rtz # perform operation
fmul.d f11, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x3, 0x8e89daa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fmul.d f3, f26, f28, dyn # perform operation
fmul.d f3, f26, f28, rdn # perform operation
fmul.d f3, f26, f28, rmm # perform operation
fmul.d f3, f26, f28, rne # perform operation
fmul.d f3, f26, f28, rtz # perform operation
fmul.d f3, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x13, 0x322947ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fmul.d f13, f17, f4, dyn # perform operation
fmul.d f13, f17, f4, rdn # perform operation
fmul.d f13, f17, f4, rmm # perform operation
fmul.d f13, f17, f4, rne # perform operation
fmul.d f13, f17, f4, rtz # perform operation
fmul.d f13, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x23, 0x3844cf5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fmul.d f23, f10, f1, dyn # perform operation
fmul.d f23, f10, f1, rdn # perform operation
fmul.d f23, f10, f1, rmm # perform operation
fmul.d f23, f10, f1, rne # perform operation
fmul.d f23, f10, f1, rtz # perform operation
fmul.d f23, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x23, 0xef38de13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fmul.d f23, f31, f27, dyn # perform operation
fmul.d f23, f31, f27, rdn # perform operation
fmul.d f23, f31, f27, rmm # perform operation
fmul.d f23, f31, f27, rne # perform operation
fmul.d f23, f31, f27, rtz # perform operation
fmul.d f23, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x10, 0x12220404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fmul.d f10, f3, f1, dyn # perform operation
fmul.d f10, f3, f1, rdn # perform operation
fmul.d f10, f3, f1, rmm # perform operation
fmul.d f10, f3, f1, rne # perform operation
fmul.d f10, f3, f1, rtz # perform operation
fmul.d f10, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x17, 0x58f2f345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fmul.d f17, f3, f31, dyn # perform operation
fmul.d f17, f3, f31, rdn # perform operation
fmul.d f17, f3, f31, rmm # perform operation
fmul.d f17, f3, f31, rne # perform operation
fmul.d f17, f3, f31, rtz # perform operation
fmul.d f17, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x29, 0xf87ec5d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fmul.d f29, f8, f7, dyn # perform operation
fmul.d f29, f8, f7, rdn # perform operation
fmul.d f29, f8, f7, rmm # perform operation
fmul.d f29, f8, f7, rne # perform operation
fmul.d f29, f8, f7, rtz # perform operation
fmul.d f29, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x4, 0x7005e1d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmul.d f4, f28, f11, dyn # perform operation
fmul.d f4, f28, f11, rdn # perform operation
fmul.d f4, f28, f11, rmm # perform operation
fmul.d f4, f28, f11, rne # perform operation
fmul.d f4, f28, f11, rtz # perform operation
fmul.d f4, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x13, 0xf23776de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmul.d f13, f12, f15, dyn # perform operation
fmul.d f13, f12, f15, rdn # perform operation
fmul.d f13, f12, f15, rmm # perform operation
fmul.d f13, f12, f15, rne # perform operation
fmul.d f13, f12, f15, rtz # perform operation
fmul.d f13, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x11, 0x951c8eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fmul.d f11, f26, f20, dyn # perform operation
fmul.d f11, f26, f20, rdn # perform operation
fmul.d f11, f26, f20, rmm # perform operation
fmul.d f11, f26, f20, rne # perform operation
fmul.d f11, f26, f20, rtz # perform operation
fmul.d f11, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x13, 0x77243fe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fmul.d f13, f5, f17, dyn # perform operation
fmul.d f13, f5, f17, rdn # perform operation
fmul.d f13, f5, f17, rmm # perform operation
fmul.d f13, f5, f17, rne # perform operation
fmul.d f13, f5, f17, rtz # perform operation
fmul.d f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x22, 0x30498712 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fmul.d f22, f10, f21, dyn # perform operation
fmul.d f22, f10, f21, rdn # perform operation
fmul.d f22, f10, f21, rmm # perform operation
fmul.d f22, f10, f21, rne # perform operation
fmul.d f22, f10, f21, rtz # perform operation
fmul.d f22, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x20, 0x65af3c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fmul.d f20, f19, f11, dyn # perform operation
fmul.d f20, f19, f11, rdn # perform operation
fmul.d f20, f19, f11, rmm # perform operation
fmul.d f20, f19, f11, rne # perform operation
fmul.d f20, f19, f11, rtz # perform operation
fmul.d f20, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x19, 0x2593a756 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fmul.d f19, f4, f28, dyn # perform operation
fmul.d f19, f4, f28, rdn # perform operation
fmul.d f19, f4, f28, rmm # perform operation
fmul.d f19, f4, f28, rne # perform operation
fmul.d f19, f4, f28, rtz # perform operation
fmul.d f19, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x5, 0x29edbbb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmul.d f5, f3, f18, dyn # perform operation
fmul.d f5, f3, f18, rdn # perform operation
fmul.d f5, f3, f18, rmm # perform operation
fmul.d f5, f3, f18, rne # perform operation
fmul.d f5, f3, f18, rtz # perform operation
fmul.d f5, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x12, 0xc3062bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fmul.d f12, f14, f9, dyn # perform operation
fmul.d f12, f14, f9, rdn # perform operation
fmul.d f12, f14, f9, rmm # perform operation
fmul.d f12, f14, f9, rne # perform operation
fmul.d f12, f14, f9, rtz # perform operation
fmul.d f12, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x14, 0x4d17861d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fmul.d f14, f1, f23, dyn # perform operation
fmul.d f14, f1, f23, rdn # perform operation
fmul.d f14, f1, f23, rmm # perform operation
fmul.d f14, f1, f23, rne # perform operation
fmul.d f14, f1, f23, rtz # perform operation
fmul.d f14, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x9, 0x5da516de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fmul.d f9, f1, f12, dyn # perform operation
fmul.d f9, f1, f12, rdn # perform operation
fmul.d f9, f1, f12, rmm # perform operation
fmul.d f9, f1, f12, rne # perform operation
fmul.d f9, f1, f12, rtz # perform operation
fmul.d f9, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x4, 0x7068e0c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmul.d f4, f25, f12, dyn # perform operation
fmul.d f4, f25, f12, rdn # perform operation
fmul.d f4, f25, f12, rmm # perform operation
fmul.d f4, f25, f12, rne # perform operation
fmul.d f4, f25, f12, rtz # perform operation
fmul.d f4, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x27, 0xb5bc0c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fmul.d f27, f28, f2, dyn # perform operation
fmul.d f27, f28, f2, rdn # perform operation
fmul.d f27, f28, f2, rmm # perform operation
fmul.d f27, f28, f2, rne # perform operation
fmul.d f27, f28, f2, rtz # perform operation
fmul.d f27, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x14, 0xbba5d864 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fmul.d f14, f28, f25, dyn # perform operation
fmul.d f14, f28, f25, rdn # perform operation
fmul.d f14, f28, f25, rmm # perform operation
fmul.d f14, f28, f25, rne # perform operation
fmul.d f14, f28, f25, rtz # perform operation
fmul.d f14, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x25, 0xe3a83465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fmul.d f25, f13, f29, dyn # perform operation
fmul.d f25, f13, f29, rdn # perform operation
fmul.d f25, f13, f29, rmm # perform operation
fmul.d f25, f13, f29, rne # perform operation
fmul.d f25, f13, f29, rtz # perform operation
fmul.d f25, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x1, 0x5cf41bc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fmul.d f1, f13, f16, dyn # perform operation
fmul.d f1, f13, f16, rdn # perform operation
fmul.d f1, f13, f16, rmm # perform operation
fmul.d f1, f13, f16, rne # perform operation
fmul.d f1, f13, f16, rtz # perform operation
fmul.d f1, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x28, 0x5197abeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fmul.d f28, f3, f19, dyn # perform operation
fmul.d f28, f3, f19, rdn # perform operation
fmul.d f28, f3, f19, rmm # perform operation
fmul.d f28, f3, f19, rne # perform operation
fmul.d f28, f3, f19, rtz # perform operation
fmul.d f28, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x10, 0x6efd5b59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fmul.d f10, f24, f17, dyn # perform operation
fmul.d f10, f24, f17, rdn # perform operation
fmul.d f10, f24, f17, rmm # perform operation
fmul.d f10, f24, f17, rne # perform operation
fmul.d f10, f24, f17, rtz # perform operation
fmul.d f10, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x9, 0xc50a1652 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fmul.d f9, f23, f11, dyn # perform operation
fmul.d f9, f23, f11, rdn # perform operation
fmul.d f9, f23, f11, rmm # perform operation
fmul.d f9, f23, f11, rne # perform operation
fmul.d f9, f23, f11, rtz # perform operation
fmul.d f9, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x18, 0xcf62c649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fmul.d f18, f28, f21, dyn # perform operation
fmul.d f18, f28, f21, rdn # perform operation
fmul.d f18, f28, f21, rmm # perform operation
fmul.d f18, f28, f21, rne # perform operation
fmul.d f18, f28, f21, rtz # perform operation
fmul.d f18, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x31, 0x73ae785e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fmul.d f31, f7, f28, dyn # perform operation
fmul.d f31, f7, f28, rdn # perform operation
fmul.d f31, f7, f28, rmm # perform operation
fmul.d f31, f7, f28, rne # perform operation
fmul.d f31, f7, f28, rtz # perform operation
fmul.d f31, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x29, 0xf846f2b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fmul.d f29, f11, f5, dyn # perform operation
fmul.d f29, f11, f5, rdn # perform operation
fmul.d f29, f11, f5, rmm # perform operation
fmul.d f29, f11, f5, rne # perform operation
fmul.d f29, f11, f5, rtz # perform operation
fmul.d f29, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x12, 0xfeed1459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fmul.d f12, f20, f4, dyn # perform operation
fmul.d f12, f20, f4, rdn # perform operation
fmul.d f12, f20, f4, rmm # perform operation
fmul.d f12, f20, f4, rne # perform operation
fmul.d f12, f20, f4, rtz # perform operation
fmul.d f12, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x15, 0x1d46a1d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fmul.d f15, f20, f5, dyn # perform operation
fmul.d f15, f20, f5, rdn # perform operation
fmul.d f15, f20, f5, rmm # perform operation
fmul.d f15, f20, f5, rne # perform operation
fmul.d f15, f20, f5, rtz # perform operation
fmul.d f15, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x9, 0x1d428edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fmul.d f9, f28, f5, dyn # perform operation
fmul.d f9, f28, f5, rdn # perform operation
fmul.d f9, f28, f5, rmm # perform operation
fmul.d f9, f28, f5, rne # perform operation
fmul.d f9, f28, f5, rtz # perform operation
fmul.d f9, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x24, 0x504a3ce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fmul.d f24, f12, f8, dyn # perform operation
fmul.d f24, f12, f8, rdn # perform operation
fmul.d f24, f12, f8, rmm # perform operation
fmul.d f24, f12, f8, rne # perform operation
fmul.d f24, f12, f8, rtz # perform operation
fmul.d f24, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x2, 0x6fd5b8f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
fmul.d f2, f18, f3, dyn # perform operation
fmul.d f2, f18, f3, rdn # perform operation
fmul.d f2, f18, f3, rmm # perform operation
fmul.d f2, f18, f3, rne # perform operation
fmul.d f2, f18, f3, rtz # perform operation
fmul.d f2, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x22, 0x3106c412 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f22, f5, f18, dyn # perform operation
fmul.d f22, f5, f18, rdn # perform operation
fmul.d f22, f5, f18, rmm # perform operation
fmul.d f22, f5, f18, rne # perform operation
fmul.d f22, f5, f18, rtz # perform operation
fmul.d f22, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x30, 0x04785a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fmul.d f30, f11, f22, dyn # perform operation
fmul.d f30, f11, f22, rdn # perform operation
fmul.d f30, f11, f22, rmm # perform operation
fmul.d f30, f11, f22, rne # perform operation
fmul.d f30, f11, f22, rtz # perform operation
fmul.d f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x17, 0x6bdc2ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmul.d f17, f26, f24, dyn # perform operation
fmul.d f17, f26, f24, rdn # perform operation
fmul.d f17, f26, f24, rmm # perform operation
fmul.d f17, f26, f24, rne # perform operation
fmul.d f17, f26, f24, rtz # perform operation
fmul.d f17, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x10, 0x9e70db1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fmul.d f10, f22, f8, dyn # perform operation
fmul.d f10, f22, f8, rdn # perform operation
fmul.d f10, f22, f8, rmm # perform operation
fmul.d f10, f22, f8, rne # perform operation
fmul.d f10, f22, f8, rtz # perform operation
fmul.d f10, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x26, 0xeb6c4cf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fmul.d f26, f31, f4, dyn # perform operation
fmul.d f26, f31, f4, rdn # perform operation
fmul.d f26, f31, f4, rmm # perform operation
fmul.d f26, f31, f4, rne # perform operation
fmul.d f26, f31, f4, rtz # perform operation
fmul.d f26, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x31, 0x5d6a5e95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fmul.d f31, f30, f13, dyn # perform operation
fmul.d f31, f30, f13, rdn # perform operation
fmul.d f31, f30, f13, rmm # perform operation
fmul.d f31, f30, f13, rne # perform operation
fmul.d f31, f30, f13, rtz # perform operation
fmul.d f31, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x30, 0x602c2bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fmul.d f30, f31, f17, dyn # perform operation
fmul.d f30, f31, f17, rdn # perform operation
fmul.d f30, f31, f17, rmm # perform operation
fmul.d f30, f31, f17, rne # perform operation
fmul.d f30, f31, f17, rtz # perform operation
fmul.d f30, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x12, 0xc1e047c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmul.d f12, f26, f19, dyn # perform operation
fmul.d f12, f26, f19, rdn # perform operation
fmul.d f12, f26, f19, rmm # perform operation
fmul.d f12, f26, f19, rne # perform operation
fmul.d f12, f26, f19, rtz # perform operation
fmul.d f12, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x7, 0x8d7afcea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmul.d f7, f1, f17, dyn # perform operation
fmul.d f7, f1, f17, rdn # perform operation
fmul.d f7, f1, f17, rmm # perform operation
fmul.d f7, f1, f17, rne # perform operation
fmul.d f7, f1, f17, rtz # perform operation
fmul.d f7, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x19, 0x98e0ae4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fmul.d f19, f31, f30, dyn # perform operation
fmul.d f19, f31, f30, rdn # perform operation
fmul.d f19, f31, f30, rmm # perform operation
fmul.d f19, f31, f30, rne # perform operation
fmul.d f19, f31, f30, rtz # perform operation
fmul.d f19, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x27, 0x0691decd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fmul.d f27, f6, f9, dyn # perform operation
fmul.d f27, f6, f9, rdn # perform operation
fmul.d f27, f6, f9, rmm # perform operation
fmul.d f27, f6, f9, rne # perform operation
fmul.d f27, f6, f9, rtz # perform operation
fmul.d f27, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x6, 0xe4d83be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fmul.d f6, f20, f3, dyn # perform operation
fmul.d f6, f20, f3, rdn # perform operation
fmul.d f6, f20, f3, rmm # perform operation
fmul.d f6, f20, f3, rne # perform operation
fmul.d f6, f20, f3, rtz # perform operation
fmul.d f6, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x25, 0x1e686b79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fmul.d f25, f4, f19, dyn # perform operation
fmul.d f25, f4, f19, rdn # perform operation
fmul.d f25, f4, f19, rmm # perform operation
fmul.d f25, f4, f19, rne # perform operation
fmul.d f25, f4, f19, rtz # perform operation
fmul.d f25, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0x1d4a6471 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmul.d f14, f21, f11, dyn # perform operation
fmul.d f14, f21, f11, rdn # perform operation
fmul.d f14, f21, f11, rmm # perform operation
fmul.d f14, f21, f11, rne # perform operation
fmul.d f14, f21, f11, rtz # perform operation
fmul.d f14, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x14, 0x846151ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fmul.d f14, f30, f6, dyn # perform operation
fmul.d f14, f30, f6, rdn # perform operation
fmul.d f14, f30, f6, rmm # perform operation
fmul.d f14, f30, f6, rne # perform operation
fmul.d f14, f30, f6, rtz # perform operation
fmul.d f14, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x22, 0x1a1cef0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fmul.d f22, f26, f29, dyn # perform operation
fmul.d f22, f26, f29, rdn # perform operation
fmul.d f22, f26, f29, rmm # perform operation
fmul.d f22, f26, f29, rne # perform operation
fmul.d f22, f26, f29, rtz # perform operation
fmul.d f22, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x6, 0xdacda22b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fmul.d f6, f21, f8, dyn # perform operation
fmul.d f6, f21, f8, rdn # perform operation
fmul.d f6, f21, f8, rmm # perform operation
fmul.d f6, f21, f8, rne # perform operation
fmul.d f6, f21, f8, rtz # perform operation
fmul.d f6, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x2, 0x310abf80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fmul.d f2, f18, f3, dyn # perform operation
fmul.d f2, f18, f3, rdn # perform operation
fmul.d f2, f18, f3, rmm # perform operation
fmul.d f2, f18, f3, rne # perform operation
fmul.d f2, f18, f3, rtz # perform operation
fmul.d f2, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x10, 0x0fd11349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fmul.d f10, f11, f20, dyn # perform operation
fmul.d f10, f11, f20, rdn # perform operation
fmul.d f10, f11, f20, rmm # perform operation
fmul.d f10, f11, f20, rne # perform operation
fmul.d f10, f11, f20, rtz # perform operation
fmul.d f10, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x30, 0x90dd7ed4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fmul.d f30, f9, f7, dyn # perform operation
fmul.d f30, f9, f7, rdn # perform operation
fmul.d f30, f9, f7, rmm # perform operation
fmul.d f30, f9, f7, rne # perform operation
fmul.d f30, f9, f7, rtz # perform operation
fmul.d f30, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x30, 0x76ec7ac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fmul.d f30, f31, f18, dyn # perform operation
fmul.d f30, f31, f18, rdn # perform operation
fmul.d f30, f31, f18, rmm # perform operation
fmul.d f30, f31, f18, rne # perform operation
fmul.d f30, f31, f18, rtz # perform operation
fmul.d f30, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x6, 0x6e01e9fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fmul.d f6, f4, f29, dyn # perform operation
fmul.d f6, f4, f29, rdn # perform operation
fmul.d f6, f4, f29, rmm # perform operation
fmul.d f6, f4, f29, rne # perform operation
fmul.d f6, f4, f29, rtz # perform operation
fmul.d f6, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x15, 0xc767de86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fmul.d f15, f8, f16, dyn # perform operation
fmul.d f15, f8, f16, rdn # perform operation
fmul.d f15, f8, f16, rmm # perform operation
fmul.d f15, f8, f16, rne # perform operation
fmul.d f15, f8, f16, rtz # perform operation
fmul.d f15, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x15, 0x4b565072 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fmul.d f15, f8, f24, dyn # perform operation
fmul.d f15, f8, f24, rdn # perform operation
fmul.d f15, f8, f24, rmm # perform operation
fmul.d f15, f8, f24, rne # perform operation
fmul.d f15, f8, f24, rtz # perform operation
fmul.d f15, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x15, 0x270d28b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fmul.d f15, f27, f31, dyn # perform operation
fmul.d f15, f27, f31, rdn # perform operation
fmul.d f15, f27, f31, rmm # perform operation
fmul.d f15, f27, f31, rne # perform operation
fmul.d f15, f27, f31, rtz # perform operation
fmul.d f15, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x14, 0x1e8fbe9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fmul.d f14, f22, f7, dyn # perform operation
fmul.d f14, f22, f7, rdn # perform operation
fmul.d f14, f22, f7, rmm # perform operation
fmul.d f14, f22, f7, rne # perform operation
fmul.d f14, f22, f7, rtz # perform operation
fmul.d f14, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x28, 0x7838541d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fmul.d f28, f10, f7, dyn # perform operation
fmul.d f28, f10, f7, rdn # perform operation
fmul.d f28, f10, f7, rmm # perform operation
fmul.d f28, f10, f7, rne # perform operation
fmul.d f28, f10, f7, rtz # perform operation
fmul.d f28, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x22, 0x698c5a31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmul.d f22, f29, f15, dyn # perform operation
fmul.d f22, f29, f15, rdn # perform operation
fmul.d f22, f29, f15, rmm # perform operation
fmul.d f22, f29, f15, rne # perform operation
fmul.d f22, f29, f15, rtz # perform operation
fmul.d f22, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x28, 0x9980f06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fmul.d f28, f5, f14, dyn # perform operation
fmul.d f28, f5, f14, rdn # perform operation
fmul.d f28, f5, f14, rmm # perform operation
fmul.d f28, f5, f14, rne # perform operation
fmul.d f28, f5, f14, rtz # perform operation
fmul.d f28, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x10, 0x02266c85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fmul.d f10, f2, f4, dyn # perform operation
fmul.d f10, f2, f4, rdn # perform operation
fmul.d f10, f2, f4, rmm # perform operation
fmul.d f10, f2, f4, rne # perform operation
fmul.d f10, f2, f4, rtz # perform operation
fmul.d f10, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x12, 0x76d865d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmul.d f12, f23, f15, dyn # perform operation
fmul.d f12, f23, f15, rdn # perform operation
fmul.d f12, f23, f15, rmm # perform operation
fmul.d f12, f23, f15, rne # perform operation
fmul.d f12, f23, f15, rtz # perform operation
fmul.d f12, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x4, 0xf297a20b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fmul.d f4, f6, f29, dyn # perform operation
fmul.d f4, f6, f29, rdn # perform operation
fmul.d f4, f6, f29, rmm # perform operation
fmul.d f4, f6, f29, rne # perform operation
fmul.d f4, f6, f29, rtz # perform operation
fmul.d f4, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x18, 0xd7f08792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fmul.d f18, f30, f13, dyn # perform operation
fmul.d f18, f30, f13, rdn # perform operation
fmul.d f18, f30, f13, rmm # perform operation
fmul.d f18, f30, f13, rne # perform operation
fmul.d f18, f30, f13, rtz # perform operation
fmul.d f18, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x28, 0x206ca8ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fmul.d f28, f1, f29, dyn # perform operation
fmul.d f28, f1, f29, rdn # perform operation
fmul.d f28, f1, f29, rmm # perform operation
fmul.d f28, f1, f29, rne # perform operation
fmul.d f28, f1, f29, rtz # perform operation
fmul.d f28, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x1, 0x4e3a92e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fmul.d f1, f12, f9, dyn # perform operation
fmul.d f1, f12, f9, rdn # perform operation
fmul.d f1, f12, f9, rmm # perform operation
fmul.d f1, f12, f9, rne # perform operation
fmul.d f1, f12, f9, rtz # perform operation
fmul.d f1, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x20, 0xb5d464a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fmul.d f20, f14, f15, dyn # perform operation
fmul.d f20, f14, f15, rdn # perform operation
fmul.d f20, f14, f15, rmm # perform operation
fmul.d f20, f14, f15, rne # perform operation
fmul.d f20, f14, f15, rtz # perform operation
fmul.d f20, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x28, 0x13f0b754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fmul.d f28, f30, f5, dyn # perform operation
fmul.d f28, f30, f5, rdn # perform operation
fmul.d f28, f30, f5, rmm # perform operation
fmul.d f28, f30, f5, rne # perform operation
fmul.d f28, f30, f5, rtz # perform operation
fmul.d f28, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x15, 0xb3a5a0cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmul.d f15, f28, f19, dyn # perform operation
fmul.d f15, f28, f19, rdn # perform operation
fmul.d f15, f28, f19, rmm # perform operation
fmul.d f15, f28, f19, rne # perform operation
fmul.d f15, f28, f19, rtz # perform operation
fmul.d f15, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x5, 0x4012e22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fmul.d f5, f17, f24, dyn # perform operation
fmul.d f5, f17, f24, rdn # perform operation
fmul.d f5, f17, f24, rmm # perform operation
fmul.d f5, f17, f24, rne # perform operation
fmul.d f5, f17, f24, rtz # perform operation
fmul.d f5, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x21, 0x0a9a831a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fmul.d f21, f26, f29, dyn # perform operation
fmul.d f21, f26, f29, rdn # perform operation
fmul.d f21, f26, f29, rmm # perform operation
fmul.d f21, f26, f29, rne # perform operation
fmul.d f21, f26, f29, rtz # perform operation
fmul.d f21, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x2, 0xc55d67a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fmul.d f2, f6, f15, dyn # perform operation
fmul.d f2, f6, f15, rdn # perform operation
fmul.d f2, f6, f15, rmm # perform operation
fmul.d f2, f6, f15, rne # perform operation
fmul.d f2, f6, f15, rtz # perform operation
fmul.d f2, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x3, 0x8392cca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmul.d f3, f17, f11, dyn # perform operation
fmul.d f3, f17, f11, rdn # perform operation
fmul.d f3, f17, f11, rmm # perform operation
fmul.d f3, f17, f11, rne # perform operation
fmul.d f3, f17, f11, rtz # perform operation
fmul.d f3, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x12, 0x3bbadba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fmul.d f12, f14, f26, dyn # perform operation
fmul.d f12, f14, f26, rdn # perform operation
fmul.d f12, f14, f26, rmm # perform operation
fmul.d f12, f14, f26, rne # perform operation
fmul.d f12, f14, f26, rtz # perform operation
fmul.d f12, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x16, 0x1fd0e4db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fmul.d f16, f23, f10, dyn # perform operation
fmul.d f16, f23, f10, rdn # perform operation
fmul.d f16, f23, f10, rmm # perform operation
fmul.d f16, f23, f10, rne # perform operation
fmul.d f16, f23, f10, rtz # perform operation
fmul.d f16, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x20, 0xc902d2dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fmul.d f20, f26, f19, dyn # perform operation
fmul.d f20, f26, f19, rdn # perform operation
fmul.d f20, f26, f19, rmm # perform operation
fmul.d f20, f26, f19, rne # perform operation
fmul.d f20, f26, f19, rtz # perform operation
fmul.d f20, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x27, 0xfcfe0d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fmul.d f27, f25, f16, dyn # perform operation
fmul.d f27, f25, f16, rdn # perform operation
fmul.d f27, f25, f16, rmm # perform operation
fmul.d f27, f25, f16, rne # perform operation
fmul.d f27, f25, f16, rtz # perform operation
fmul.d f27, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x11, 0xa86144d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fmul.d f11, f19, f2, dyn # perform operation
fmul.d f11, f19, f2, rdn # perform operation
fmul.d f11, f19, f2, rmm # perform operation
fmul.d f11, f19, f2, rne # perform operation
fmul.d f11, f19, f2, rtz # perform operation
fmul.d f11, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x21, 0xcc324e35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fmul.d f21, f8, f2, dyn # perform operation
fmul.d f21, f8, f2, rdn # perform operation
fmul.d f21, f8, f2, rmm # perform operation
fmul.d f21, f8, f2, rne # perform operation
fmul.d f21, f8, f2, rtz # perform operation
fmul.d f21, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x11, 0xb1d8f26e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmul.d f11, f2, f15, dyn # perform operation
fmul.d f11, f2, f15, rdn # perform operation
fmul.d f11, f2, f15, rmm # perform operation
fmul.d f11, f2, f15, rne # perform operation
fmul.d f11, f2, f15, rtz # perform operation
fmul.d f11, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x26, 0x6b1f84b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fmul.d f26, f22, f12, dyn # perform operation
fmul.d f26, f22, f12, rdn # perform operation
fmul.d f26, f22, f12, rmm # perform operation
fmul.d f26, f22, f12, rne # perform operation
fmul.d f26, f22, f12, rtz # perform operation
fmul.d f26, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x4, 0x1c03de35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fmul.d f4, f26, f9, dyn # perform operation
fmul.d f4, f26, f9, rdn # perform operation
fmul.d f4, f26, f9, rmm # perform operation
fmul.d f4, f26, f9, rne # perform operation
fmul.d f4, f26, f9, rtz # perform operation
fmul.d f4, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x24, 0x70292d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmul.d f24, f4, f10, dyn # perform operation
fmul.d f24, f4, f10, rdn # perform operation
fmul.d f24, f4, f10, rmm # perform operation
fmul.d f24, f4, f10, rne # perform operation
fmul.d f24, f4, f10, rtz # perform operation
fmul.d f24, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x16, 0x0bc589c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fmul.d f16, f14, f10, dyn # perform operation
fmul.d f16, f14, f10, rdn # perform operation
fmul.d f16, f14, f10, rmm # perform operation
fmul.d f16, f14, f10, rne # perform operation
fmul.d f16, f14, f10, rtz # perform operation
fmul.d f16, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x9, 0x31631c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fmul.d f9, f12, f20, dyn # perform operation
fmul.d f9, f12, f20, rdn # perform operation
fmul.d f9, f12, f20, rmm # perform operation
fmul.d f9, f12, f20, rne # perform operation
fmul.d f9, f12, f20, rtz # perform operation
fmul.d f9, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x29, 0xda020a97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fmul.d f29, f11, f9, dyn # perform operation
fmul.d f29, f11, f9, rdn # perform operation
fmul.d f29, f11, f9, rmm # perform operation
fmul.d f29, f11, f9, rne # perform operation
fmul.d f29, f11, f9, rtz # perform operation
fmul.d f29, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x21, 0xb0201863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fmul.d f21, f14, f11, dyn # perform operation
fmul.d f21, f14, f11, rdn # perform operation
fmul.d f21, f14, f11, rmm # perform operation
fmul.d f21, f14, f11, rne # perform operation
fmul.d f21, f14, f11, rtz # perform operation
fmul.d f21, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x25, 0xfd4a99c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fmul.d f25, f5, f7, dyn # perform operation
fmul.d f25, f5, f7, rdn # perform operation
fmul.d f25, f5, f7, rmm # perform operation
fmul.d f25, f5, f7, rne # perform operation
fmul.d f25, f5, f7, rtz # perform operation
fmul.d f25, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x10, 0x1d72ce83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f10, f29, f31, dyn # perform operation
fmul.d f10, f29, f31, rdn # perform operation
fmul.d f10, f29, f31, rmm # perform operation
fmul.d f10, f29, f31, rne # perform operation
fmul.d f10, f29, f31, rtz # perform operation
fmul.d f10, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x11, 0xf1532f8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fmul.d f11, f22, f1, dyn # perform operation
fmul.d f11, f22, f1, rdn # perform operation
fmul.d f11, f22, f1, rmm # perform operation
fmul.d f11, f22, f1, rne # perform operation
fmul.d f11, f22, f1, rtz # perform operation
fmul.d f11, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x10, 0x9060b5c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fmul.d f10, f18, f22, dyn # perform operation
fmul.d f10, f18, f22, rdn # perform operation
fmul.d f10, f18, f22, rmm # perform operation
fmul.d f10, f18, f22, rne # perform operation
fmul.d f10, f18, f22, rtz # perform operation
fmul.d f10, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x10, 0xc5b11b66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fmul.d f10, f13, f9, dyn # perform operation
fmul.d f10, f13, f9, rdn # perform operation
fmul.d f10, f13, f9, rmm # perform operation
fmul.d f10, f13, f9, rne # perform operation
fmul.d f10, f13, f9, rtz # perform operation
fmul.d f10, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x12, 0xb71e3401 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fmul.d f12, f2, f16, dyn # perform operation
fmul.d f12, f2, f16, rdn # perform operation
fmul.d f12, f2, f16, rmm # perform operation
fmul.d f12, f2, f16, rne # perform operation
fmul.d f12, f2, f16, rtz # perform operation
fmul.d f12, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x9, 0xd9bce593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fmul.d f9, f11, f13, dyn # perform operation
fmul.d f9, f11, f13, rdn # perform operation
fmul.d f9, f11, f13, rmm # perform operation
fmul.d f9, f11, f13, rne # perform operation
fmul.d f9, f11, f13, rtz # perform operation
fmul.d f9, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x25, 0x2ece6de8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fmul.d f25, f18, f29, dyn # perform operation
fmul.d f25, f18, f29, rdn # perform operation
fmul.d f25, f18, f29, rmm # perform operation
fmul.d f25, f18, f29, rne # perform operation
fmul.d f25, f18, f29, rtz # perform operation
fmul.d f25, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x1, 0xea0d038a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fmul.d f1, f18, f22, dyn # perform operation
fmul.d f1, f18, f22, rdn # perform operation
fmul.d f1, f18, f22, rmm # perform operation
fmul.d f1, f18, f22, rne # perform operation
fmul.d f1, f18, f22, rtz # perform operation
fmul.d f1, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x28, 0xd5126dba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fmul.d f28, f9, f4, dyn # perform operation
fmul.d f28, f9, f4, rdn # perform operation
fmul.d f28, f9, f4, rmm # perform operation
fmul.d f28, f9, f4, rne # perform operation
fmul.d f28, f9, f4, rtz # perform operation
fmul.d f28, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x7, 0x83e37f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fmul.d f7, f11, f1, dyn # perform operation
fmul.d f7, f11, f1, rdn # perform operation
fmul.d f7, f11, f1, rmm # perform operation
fmul.d f7, f11, f1, rne # perform operation
fmul.d f7, f11, f1, rtz # perform operation
fmul.d f7, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x6, 0xa152ec61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fmul.d f6, f29, f2, dyn # perform operation
fmul.d f6, f29, f2, rdn # perform operation
fmul.d f6, f29, f2, rmm # perform operation
fmul.d f6, f29, f2, rne # perform operation
fmul.d f6, f29, f2, rtz # perform operation
fmul.d f6, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x9, 0xbba52f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fmul.d f9, f11, f13, dyn # perform operation
fmul.d f9, f11, f13, rdn # perform operation
fmul.d f9, f11, f13, rmm # perform operation
fmul.d f9, f11, f13, rne # perform operation
fmul.d f9, f11, f13, rtz # perform operation
fmul.d f9, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x27, 0x1c6e31c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f27, f4, f23, dyn # perform operation
fmul.d f27, f4, f23, rdn # perform operation
fmul.d f27, f4, f23, rmm # perform operation
fmul.d f27, f4, f23, rne # perform operation
fmul.d f27, f4, f23, rtz # perform operation
fmul.d f27, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x23, 0x26524d89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fmul.d f23, f11, f5, dyn # perform operation
fmul.d f23, f11, f5, rdn # perform operation
fmul.d f23, f11, f5, rmm # perform operation
fmul.d f23, f11, f5, rne # perform operation
fmul.d f23, f11, f5, rtz # perform operation
fmul.d f23, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x11, 0x7165bdc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fmul.d f11, f17, f2, dyn # perform operation
fmul.d f11, f17, f2, rdn # perform operation
fmul.d f11, f17, f2, rmm # perform operation
fmul.d f11, f17, f2, rne # perform operation
fmul.d f11, f17, f2, rtz # perform operation
fmul.d f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x8, 0x33079250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fmul.d f8, f13, f22, dyn # perform operation
fmul.d f8, f13, f22, rdn # perform operation
fmul.d f8, f13, f22, rmm # perform operation
fmul.d f8, f13, f22, rne # perform operation
fmul.d f8, f13, f22, rtz # perform operation
fmul.d f8, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x15, 0x495b62a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fmul.d f15, f4, f19, dyn # perform operation
fmul.d f15, f4, f19, rdn # perform operation
fmul.d f15, f4, f19, rmm # perform operation
fmul.d f15, f4, f19, rne # perform operation
fmul.d f15, f4, f19, rtz # perform operation
fmul.d f15, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x8, 0xb8335b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fmul.d f8, f1, f31, dyn # perform operation
fmul.d f8, f1, f31, rdn # perform operation
fmul.d f8, f1, f31, rmm # perform operation
fmul.d f8, f1, f31, rne # perform operation
fmul.d f8, f1, f31, rtz # perform operation
fmul.d f8, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x20, 0x0837dc93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fmul.d f20, f11, f10, dyn # perform operation
fmul.d f20, f11, f10, rdn # perform operation
fmul.d f20, f11, f10, rmm # perform operation
fmul.d f20, f11, f10, rne # perform operation
fmul.d f20, f11, f10, rtz # perform operation
fmul.d f20, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x25, 0xce533e81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fmul.d f25, f10, f13, dyn # perform operation
fmul.d f25, f10, f13, rdn # perform operation
fmul.d f25, f10, f13, rmm # perform operation
fmul.d f25, f10, f13, rne # perform operation
fmul.d f25, f10, f13, rtz # perform operation
fmul.d f25, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x16, 0x9eb52458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
fmul.d f16, f15, f18, dyn # perform operation
fmul.d f16, f15, f18, rdn # perform operation
fmul.d f16, f15, f18, rmm # perform operation
fmul.d f16, f15, f18, rne # perform operation
fmul.d f16, f15, f18, rtz # perform operation
fmul.d f16, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x13, 0x9abb50c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f13, f25, f18, dyn # perform operation
fmul.d f13, f25, f18, rdn # perform operation
fmul.d f13, f25, f18, rmm # perform operation
fmul.d f13, f25, f18, rne # perform operation
fmul.d f13, f25, f18, rtz # perform operation
fmul.d f13, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x23, 0xbc1c8df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmul.d f23, f9, f15, dyn # perform operation
fmul.d f23, f9, f15, rdn # perform operation
fmul.d f23, f9, f15, rmm # perform operation
fmul.d f23, f9, f15, rne # perform operation
fmul.d f23, f9, f15, rtz # perform operation
fmul.d f23, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x13, 0x83c95cc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fmul.d f13, f12, f27, dyn # perform operation
fmul.d f13, f12, f27, rdn # perform operation
fmul.d f13, f12, f27, rmm # perform operation
fmul.d f13, f12, f27, rne # perform operation
fmul.d f13, f12, f27, rtz # perform operation
fmul.d f13, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x2, 0xec5e586a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fmul.d f2, f16, f5, dyn # perform operation
fmul.d f2, f16, f5, rdn # perform operation
fmul.d f2, f16, f5, rmm # perform operation
fmul.d f2, f16, f5, rne # perform operation
fmul.d f2, f16, f5, rtz # perform operation
fmul.d f2, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x11, 0x47f60443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fmul.d f11, f14, f23, dyn # perform operation
fmul.d f11, f14, f23, rdn # perform operation
fmul.d f11, f14, f23, rmm # perform operation
fmul.d f11, f14, f23, rne # perform operation
fmul.d f11, f14, f23, rtz # perform operation
fmul.d f11, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x7, 0x2ee4b07a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fmul.d f7, f1, f21, dyn # perform operation
fmul.d f7, f1, f21, rdn # perform operation
fmul.d f7, f1, f21, rmm # perform operation
fmul.d f7, f1, f21, rne # perform operation
fmul.d f7, f1, f21, rtz # perform operation
fmul.d f7, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x21, 0xf63289a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
fmul.d f21, f22, f27, dyn # perform operation
fmul.d f21, f22, f27, rdn # perform operation
fmul.d f21, f22, f27, rmm # perform operation
fmul.d f21, f22, f27, rne # perform operation
fmul.d f21, f22, f27, rtz # perform operation
fmul.d f21, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x30, 0xd7b58584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fmul.d f30, f6, f29, dyn # perform operation
fmul.d f30, f6, f29, rdn # perform operation
fmul.d f30, f6, f29, rmm # perform operation
fmul.d f30, f6, f29, rne # perform operation
fmul.d f30, f6, f29, rtz # perform operation
fmul.d f30, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x4, 0x5c0e84b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fmul.d f4, f22, f23, dyn # perform operation
fmul.d f4, f22, f23, rdn # perform operation
fmul.d f4, f22, f23, rmm # perform operation
fmul.d f4, f22, f23, rne # perform operation
fmul.d f4, f22, f23, rtz # perform operation
fmul.d f4, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x18, 0x77f119c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fmul.d f18, f28, f23, dyn # perform operation
fmul.d f18, f28, f23, rdn # perform operation
fmul.d f18, f28, f23, rmm # perform operation
fmul.d f18, f28, f23, rne # perform operation
fmul.d f18, f28, f23, rtz # perform operation
fmul.d f18, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x12, 0xabb5ce61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f12, f2, f23, dyn # perform operation
fmul.d f12, f2, f23, rdn # perform operation
fmul.d f12, f2, f23, rmm # perform operation
fmul.d f12, f2, f23, rne # perform operation
fmul.d f12, f2, f23, rtz # perform operation
fmul.d f12, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x23, 0xf8737c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fmul.d f23, f28, f16, dyn # perform operation
fmul.d f23, f28, f16, rdn # perform operation
fmul.d f23, f28, f16, rmm # perform operation
fmul.d f23, f28, f16, rne # perform operation
fmul.d f23, f28, f16, rtz # perform operation
fmul.d f23, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x19, 0x12675330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fmul.d f19, f9, f15, dyn # perform operation
fmul.d f19, f9, f15, rdn # perform operation
fmul.d f19, f9, f15, rmm # perform operation
fmul.d f19, f9, f15, rne # perform operation
fmul.d f19, f9, f15, rtz # perform operation
fmul.d f19, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x24, 0x08af6099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmul.d f24, f25, f14, dyn # perform operation
fmul.d f24, f25, f14, rdn # perform operation
fmul.d f24, f25, f14, rmm # perform operation
fmul.d f24, f25, f14, rne # perform operation
fmul.d f24, f25, f14, rtz # perform operation
fmul.d f24, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x5, 0x05fc7867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fmul.d f5, f24, f27, dyn # perform operation
fmul.d f5, f24, f27, rdn # perform operation
fmul.d f5, f24, f27, rmm # perform operation
fmul.d f5, f24, f27, rne # perform operation
fmul.d f5, f24, f27, rtz # perform operation
fmul.d f5, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x19, 0xe55717a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fmul.d f19, f1, f7, dyn # perform operation
fmul.d f19, f1, f7, rdn # perform operation
fmul.d f19, f1, f7, rmm # perform operation
fmul.d f19, f1, f7, rne # perform operation
fmul.d f19, f1, f7, rtz # perform operation
fmul.d f19, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x18, 0xc2068609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fmul.d f18, f15, f9, dyn # perform operation
fmul.d f18, f15, f9, rdn # perform operation
fmul.d f18, f15, f9, rmm # perform operation
fmul.d f18, f15, f9, rne # perform operation
fmul.d f18, f15, f9, rtz # perform operation
fmul.d f18, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x18, 0x756f28b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fmul.d f18, f21, f31, dyn # perform operation
fmul.d f18, f21, f31, rdn # perform operation
fmul.d f18, f21, f31, rmm # perform operation
fmul.d f18, f21, f31, rne # perform operation
fmul.d f18, f21, f31, rtz # perform operation
fmul.d f18, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x3, 0xea44940a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fmul.d f3, f14, f21, dyn # perform operation
fmul.d f3, f14, f21, rdn # perform operation
fmul.d f3, f14, f21, rmm # perform operation
fmul.d f3, f14, f21, rne # perform operation
fmul.d f3, f14, f21, rtz # perform operation
fmul.d f3, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x26, 0xc63d7d22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fmul.d f26, f21, f16, dyn # perform operation
fmul.d f26, f21, f16, rdn # perform operation
fmul.d f26, f21, f16, rmm # perform operation
fmul.d f26, f21, f16, rne # perform operation
fmul.d f26, f21, f16, rtz # perform operation
fmul.d f26, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x10, 0x6ba89f2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fmul.d f10, f27, f26, dyn # perform operation
fmul.d f10, f27, f26, rdn # perform operation
fmul.d f10, f27, f26, rmm # perform operation
fmul.d f10, f27, f26, rne # perform operation
fmul.d f10, f27, f26, rtz # perform operation
fmul.d f10, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x2, 0x8e7e5f1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fmul.d f2, f17, f24, dyn # perform operation
fmul.d f2, f17, f24, rdn # perform operation
fmul.d f2, f17, f24, rmm # perform operation
fmul.d f2, f17, f24, rne # perform operation
fmul.d f2, f17, f24, rtz # perform operation
fmul.d f2, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x18, 0xc9f8414c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmul.d f18, f2, f15, dyn # perform operation
fmul.d f18, f2, f15, rdn # perform operation
fmul.d f18, f2, f15, rmm # perform operation
fmul.d f18, f2, f15, rne # perform operation
fmul.d f18, f2, f15, rtz # perform operation
fmul.d f18, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x7, 0x33573c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fmul.d f7, f11, f17, dyn # perform operation
fmul.d f7, f11, f17, rdn # perform operation
fmul.d f7, f11, f17, rmm # perform operation
fmul.d f7, f11, f17, rne # perform operation
fmul.d f7, f11, f17, rtz # perform operation
fmul.d f7, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x30, 0xf42ad29b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fmul.d f30, f10, f16, dyn # perform operation
fmul.d f30, f10, f16, rdn # perform operation
fmul.d f30, f10, f16, rmm # perform operation
fmul.d f30, f10, f16, rne # perform operation
fmul.d f30, f10, f16, rtz # perform operation
fmul.d f30, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x24, 0x81ee04ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fmul.d f24, f19, f29, dyn # perform operation
fmul.d f24, f19, f29, rdn # perform operation
fmul.d f24, f19, f29, rmm # perform operation
fmul.d f24, f19, f29, rne # perform operation
fmul.d f24, f19, f29, rtz # perform operation
fmul.d f24, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x7d30d442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fmul.d f29, f7, f2, dyn # perform operation
fmul.d f29, f7, f2, rdn # perform operation
fmul.d f29, f7, f2, rmm # perform operation
fmul.d f29, f7, f2, rne # perform operation
fmul.d f29, f7, f2, rtz # perform operation
fmul.d f29, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x25, 0x8091734c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fmul.d f25, f23, f19, dyn # perform operation
fmul.d f25, f23, f19, rdn # perform operation
fmul.d f25, f23, f19, rmm # perform operation
fmul.d f25, f23, f19, rne # perform operation
fmul.d f25, f23, f19, rtz # perform operation
fmul.d f25, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x28, 0x7c3dccbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fmul.d f28, f30, f17, dyn # perform operation
fmul.d f28, f30, f17, rdn # perform operation
fmul.d f28, f30, f17, rmm # perform operation
fmul.d f28, f30, f17, rne # perform operation
fmul.d f28, f30, f17, rtz # perform operation
fmul.d f28, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x27, 0xe90632e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fmul.d f27, f11, f4, dyn # perform operation
fmul.d f27, f11, f4, rdn # perform operation
fmul.d f27, f11, f4, rmm # perform operation
fmul.d f27, f11, f4, rne # perform operation
fmul.d f27, f11, f4, rtz # perform operation
fmul.d f27, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x4, 0x5cc760d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fmul.d f4, f29, f24, dyn # perform operation
fmul.d f4, f29, f24, rdn # perform operation
fmul.d f4, f29, f24, rmm # perform operation
fmul.d f4, f29, f24, rne # perform operation
fmul.d f4, f29, f24, rtz # perform operation
fmul.d f4, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x24, 0x19eed624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fmul.d f24, f27, f20, dyn # perform operation
fmul.d f24, f27, f20, rdn # perform operation
fmul.d f24, f27, f20, rmm # perform operation
fmul.d f24, f27, f20, rne # perform operation
fmul.d f24, f27, f20, rtz # perform operation
fmul.d f24, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x22, 0x669a3c8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fmul.d f22, f21, f20, dyn # perform operation
fmul.d f22, f21, f20, rdn # perform operation
fmul.d f22, f21, f20, rmm # perform operation
fmul.d f22, f21, f20, rne # perform operation
fmul.d f22, f21, f20, rtz # perform operation
fmul.d f22, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x14, 0x81b72235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fmul.d f14, f31, f8, dyn # perform operation
fmul.d f14, f31, f8, rdn # perform operation
fmul.d f14, f31, f8, rmm # perform operation
fmul.d f14, f31, f8, rne # perform operation
fmul.d f14, f31, f8, rtz # perform operation
fmul.d f14, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x16, 0xb1726f9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fmul.d f16, f20, f14, dyn # perform operation
fmul.d f16, f20, f14, rdn # perform operation
fmul.d f16, f20, f14, rmm # perform operation
fmul.d f16, f20, f14, rne # perform operation
fmul.d f16, f20, f14, rtz # perform operation
fmul.d f16, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x2, 0x89ec8fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fmul.d f2, f24, f10, dyn # perform operation
fmul.d f2, f24, f10, rdn # perform operation
fmul.d f2, f24, f10, rmm # perform operation
fmul.d f2, f24, f10, rne # perform operation
fmul.d f2, f24, f10, rtz # perform operation
fmul.d f2, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x3, 0x31b5226f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fmul.d f3, f24, f21, dyn # perform operation
fmul.d f3, f24, f21, rdn # perform operation
fmul.d f3, f24, f21, rmm # perform operation
fmul.d f3, f24, f21, rne # perform operation
fmul.d f3, f24, f21, rtz # perform operation
fmul.d f3, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x20, 0x6e1d4f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fmul.d f20, f15, f29, dyn # perform operation
fmul.d f20, f15, f29, rdn # perform operation
fmul.d f20, f15, f29, rmm # perform operation
fmul.d f20, f15, f29, rne # perform operation
fmul.d f20, f15, f29, rtz # perform operation
fmul.d f20, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0x1bb06017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fmul.d f30, f20, f7, dyn # perform operation
fmul.d f30, f20, f7, rdn # perform operation
fmul.d f30, f20, f7, rmm # perform operation
fmul.d f30, f20, f7, rne # perform operation
fmul.d f30, f20, f7, rtz # perform operation
fmul.d f30, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x7, 0x9c98ceb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fmul.d f7, f16, f19, dyn # perform operation
fmul.d f7, f16, f19, rdn # perform operation
fmul.d f7, f16, f19, rmm # perform operation
fmul.d f7, f16, f19, rne # perform operation
fmul.d f7, f16, f19, rtz # perform operation
fmul.d f7, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x9, 0x4493e355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fmul.d f9, f26, f4, dyn # perform operation
fmul.d f9, f26, f4, rdn # perform operation
fmul.d f9, f26, f4, rmm # perform operation
fmul.d f9, f26, f4, rne # perform operation
fmul.d f9, f26, f4, rtz # perform operation
fmul.d f9, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x21, 0x1f1241ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmul.d f21, f5, f15, dyn # perform operation
fmul.d f21, f5, f15, rdn # perform operation
fmul.d f21, f5, f15, rmm # perform operation
fmul.d f21, f5, f15, rne # perform operation
fmul.d f21, f5, f15, rtz # perform operation
fmul.d f21, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x29, 0x55fb9eff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fmul.d f29, f14, f9, dyn # perform operation
fmul.d f29, f14, f9, rdn # perform operation
fmul.d f29, f14, f9, rmm # perform operation
fmul.d f29, f14, f9, rne # perform operation
fmul.d f29, f14, f9, rtz # perform operation
fmul.d f29, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x12, 0xfd04628f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fmul.d f12, f21, f14, dyn # perform operation
fmul.d f12, f21, f14, rdn # perform operation
fmul.d f12, f21, f14, rmm # perform operation
fmul.d f12, f21, f14, rne # perform operation
fmul.d f12, f21, f14, rtz # perform operation
fmul.d f12, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x2, 0xc3c29b4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fmul.d f2, f29, f30, dyn # perform operation
fmul.d f2, f29, f30, rdn # perform operation
fmul.d f2, f29, f30, rmm # perform operation
fmul.d f2, f29, f30, rne # perform operation
fmul.d f2, f29, f30, rtz # perform operation
fmul.d f2, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x1, 0x05ca3982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
fmul.d f1, f11, f17, dyn # perform operation
fmul.d f1, f11, f17, rdn # perform operation
fmul.d f1, f11, f17, rmm # perform operation
fmul.d f1, f11, f17, rne # perform operation
fmul.d f1, f11, f17, rtz # perform operation
fmul.d f1, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x5, 0xd31a0512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fmul.d f5, f26, f7, dyn # perform operation
fmul.d f5, f26, f7, rdn # perform operation
fmul.d f5, f26, f7, rmm # perform operation
fmul.d f5, f26, f7, rne # perform operation
fmul.d f5, f26, f7, rtz # perform operation
fmul.d f5, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x25, 0xc2c12ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fmul.d f25, f21, f26, dyn # perform operation
fmul.d f25, f21, f26, rdn # perform operation
fmul.d f25, f21, f26, rmm # perform operation
fmul.d f25, f21, f26, rne # perform operation
fmul.d f25, f21, f26, rtz # perform operation
fmul.d f25, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x19, 0x7be633aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fmul.d f19, f8, f30, dyn # perform operation
fmul.d f19, f8, f30, rdn # perform operation
fmul.d f19, f8, f30, rmm # perform operation
fmul.d f19, f8, f30, rne # perform operation
fmul.d f19, f8, f30, rtz # perform operation
fmul.d f19, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x23, 0x13a34a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fmul.d f23, f13, f26, dyn # perform operation
fmul.d f23, f13, f26, rdn # perform operation
fmul.d f23, f13, f26, rmm # perform operation
fmul.d f23, f13, f26, rne # perform operation
fmul.d f23, f13, f26, rtz # perform operation
fmul.d f23, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x30, 0xccd22293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fmul.d f30, f29, f12, dyn # perform operation
fmul.d f30, f29, f12, rdn # perform operation
fmul.d f30, f29, f12, rmm # perform operation
fmul.d f30, f29, f12, rne # perform operation
fmul.d f30, f29, f12, rtz # perform operation
fmul.d f30, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0x5d358098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmul.d f7, f9, f13, dyn # perform operation
fmul.d f7, f9, f13, rdn # perform operation
fmul.d f7, f9, f13, rmm # perform operation
fmul.d f7, f9, f13, rne # perform operation
fmul.d f7, f9, f13, rtz # perform operation
fmul.d f7, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x4, 0x31163253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f4, f24, f18, dyn # perform operation
fmul.d f4, f24, f18, rdn # perform operation
fmul.d f4, f24, f18, rmm # perform operation
fmul.d f4, f24, f18, rne # perform operation
fmul.d f4, f24, f18, rtz # perform operation
fmul.d f4, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x10, 0x1eeb39ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fmul.d f10, f21, f12, dyn # perform operation
fmul.d f10, f21, f12, rdn # perform operation
fmul.d f10, f21, f12, rmm # perform operation
fmul.d f10, f21, f12, rne # perform operation
fmul.d f10, f21, f12, rtz # perform operation
fmul.d f10, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x27, 0xba27cfb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fmul.d f27, f3, f23, dyn # perform operation
fmul.d f27, f3, f23, rdn # perform operation
fmul.d f27, f3, f23, rmm # perform operation
fmul.d f27, f3, f23, rne # perform operation
fmul.d f27, f3, f23, rtz # perform operation
fmul.d f27, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x12, 0xf3887e36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fmul.d f12, f23, f29, dyn # perform operation
fmul.d f12, f23, f29, rdn # perform operation
fmul.d f12, f23, f29, rmm # perform operation
fmul.d f12, f23, f29, rne # perform operation
fmul.d f12, f23, f29, rtz # perform operation
fmul.d f12, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x8, 0x846143cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fmul.d f8, f16, f29, dyn # perform operation
fmul.d f8, f16, f29, rdn # perform operation
fmul.d f8, f16, f29, rmm # perform operation
fmul.d f8, f16, f29, rne # perform operation
fmul.d f8, f16, f29, rtz # perform operation
fmul.d f8, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x25, 0x36c2a222 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fmul.d f25, f16, f30, dyn # perform operation
fmul.d f25, f16, f30, rdn # perform operation
fmul.d f25, f16, f30, rmm # perform operation
fmul.d f25, f16, f30, rne # perform operation
fmul.d f25, f16, f30, rtz # perform operation
fmul.d f25, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x24, 0x097558d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fmul.d f24, f5, f31, dyn # perform operation
fmul.d f24, f5, f31, rdn # perform operation
fmul.d f24, f5, f31, rmm # perform operation
fmul.d f24, f5, f31, rne # perform operation
fmul.d f24, f5, f31, rtz # perform operation
fmul.d f24, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x13, 0x5ec9a0ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fmul.d f13, f16, f25, dyn # perform operation
fmul.d f13, f16, f25, rdn # perform operation
fmul.d f13, f16, f25, rmm # perform operation
fmul.d f13, f16, f25, rne # perform operation
fmul.d f13, f16, f25, rtz # perform operation
fmul.d f13, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x29, 0x1c967534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fmul.d f29, f6, f14, dyn # perform operation
fmul.d f29, f6, f14, rdn # perform operation
fmul.d f29, f6, f14, rmm # perform operation
fmul.d f29, f6, f14, rne # perform operation
fmul.d f29, f6, f14, rtz # perform operation
fmul.d f29, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x20, 0x70c4aa4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fmul.d f20, f24, f4, dyn # perform operation
fmul.d f20, f24, f4, rdn # perform operation
fmul.d f20, f24, f4, rmm # perform operation
fmul.d f20, f24, f4, rne # perform operation
fmul.d f20, f24, f4, rtz # perform operation
fmul.d f20, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x26, 0x55f2a01e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fmul.d f26, f24, f30, dyn # perform operation
fmul.d f26, f24, f30, rdn # perform operation
fmul.d f26, f24, f30, rmm # perform operation
fmul.d f26, f24, f30, rne # perform operation
fmul.d f26, f24, f30, rtz # perform operation
fmul.d f26, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x27, 0x306ae1d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmul.d f27, f15, f19, dyn # perform operation
fmul.d f27, f15, f19, rdn # perform operation
fmul.d f27, f15, f19, rmm # perform operation
fmul.d f27, f15, f19, rne # perform operation
fmul.d f27, f15, f19, rtz # perform operation
fmul.d f27, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x8d61e072 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fmul.d f28, f10, f16, dyn # perform operation
fmul.d f28, f10, f16, rdn # perform operation
fmul.d f28, f10, f16, rmm # perform operation
fmul.d f28, f10, f16, rne # perform operation
fmul.d f28, f10, f16, rtz # perform operation
fmul.d f28, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0x6a77ba98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fmul.d f13, f16, f19, dyn # perform operation
fmul.d f13, f16, f19, rdn # perform operation
fmul.d f13, f16, f19, rmm # perform operation
fmul.d f13, f16, f19, rne # perform operation
fmul.d f13, f16, f19, rtz # perform operation
fmul.d f13, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x4a3722f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fmul.d f20, f10, f16, dyn # perform operation
fmul.d f20, f10, f16, rdn # perform operation
fmul.d f20, f10, f16, rmm # perform operation
fmul.d f20, f10, f16, rne # perform operation
fmul.d f20, f10, f16, rtz # perform operation
fmul.d f20, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x11, 0x8bbb7596 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fmul.d f11, f16, f19, dyn # perform operation
fmul.d f11, f16, f19, rdn # perform operation
fmul.d f11, f16, f19, rmm # perform operation
fmul.d f11, f16, f19, rne # perform operation
fmul.d f11, f16, f19, rtz # perform operation
fmul.d f11, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x23, 0x1c3de079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fmul.d f23, f20, f6, dyn # perform operation
fmul.d f23, f20, f6, rdn # perform operation
fmul.d f23, f20, f6, rmm # perform operation
fmul.d f23, f20, f6, rne # perform operation
fmul.d f23, f20, f6, rtz # perform operation
fmul.d f23, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x10, 0x204043ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fmul.d f10, f30, f29, dyn # perform operation
fmul.d f10, f30, f29, rdn # perform operation
fmul.d f10, f30, f29, rmm # perform operation
fmul.d f10, f30, f29, rne # perform operation
fmul.d f10, f30, f29, rtz # perform operation
fmul.d f10, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x26, 0x991f9648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fmul.d f26, f24, f12, dyn # perform operation
fmul.d f26, f24, f12, rdn # perform operation
fmul.d f26, f24, f12, rmm # perform operation
fmul.d f26, f24, f12, rne # perform operation
fmul.d f26, f24, f12, rtz # perform operation
fmul.d f26, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x7, 0x3b6d9a63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fmul.d f7, f2, f30, dyn # perform operation
fmul.d f7, f2, f30, rdn # perform operation
fmul.d f7, f2, f30, rmm # perform operation
fmul.d f7, f2, f30, rne # perform operation
fmul.d f7, f2, f30, rtz # perform operation
fmul.d f7, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x20, 0x8080745b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fmul.d f20, f8, f11, dyn # perform operation
fmul.d f20, f8, f11, rdn # perform operation
fmul.d f20, f8, f11, rmm # perform operation
fmul.d f20, f8, f11, rne # perform operation
fmul.d f20, f8, f11, rtz # perform operation
fmul.d f20, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x21, 0x1aae838b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmul.d f21, f17, f11, dyn # perform operation
fmul.d f21, f17, f11, rdn # perform operation
fmul.d f21, f17, f11, rmm # perform operation
fmul.d f21, f17, f11, rne # perform operation
fmul.d f21, f17, f11, rtz # perform operation
fmul.d f21, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x22, 0x9239abaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fmul.d f22, f20, f31, dyn # perform operation
fmul.d f22, f20, f31, rdn # perform operation
fmul.d f22, f20, f31, rmm # perform operation
fmul.d f22, f20, f31, rne # perform operation
fmul.d f22, f20, f31, rtz # perform operation
fmul.d f22, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x10, 0xa7200766 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fmul.d f10, f6, f7, dyn # perform operation
fmul.d f10, f6, f7, rdn # perform operation
fmul.d f10, f6, f7, rmm # perform operation
fmul.d f10, f6, f7, rne # perform operation
fmul.d f10, f6, f7, rtz # perform operation
fmul.d f10, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x31, 0x78546975 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fmul.d f31, f20, f26, dyn # perform operation
fmul.d f31, f20, f26, rdn # perform operation
fmul.d f31, f20, f26, rmm # perform operation
fmul.d f31, f20, f26, rne # perform operation
fmul.d f31, f20, f26, rtz # perform operation
fmul.d f31, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0xf7c39bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fmul.d f7, f21, f9, dyn # perform operation
fmul.d f7, f21, f9, rdn # perform operation
fmul.d f7, f21, f9, rmm # perform operation
fmul.d f7, f21, f9, rne # perform operation
fmul.d f7, f21, f9, rtz # perform operation
fmul.d f7, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x22, 0xb057d4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmul.d f22, f13, f15, dyn # perform operation
fmul.d f22, f13, f15, rdn # perform operation
fmul.d f22, f13, f15, rmm # perform operation
fmul.d f22, f13, f15, rne # perform operation
fmul.d f22, f13, f15, rtz # perform operation
fmul.d f22, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x1, 0xbf81d466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fmul.d f1, f11, f29, dyn # perform operation
fmul.d f1, f11, f29, rdn # perform operation
fmul.d f1, f11, f29, rmm # perform operation
fmul.d f1, f11, f29, rne # perform operation
fmul.d f1, f11, f29, rtz # perform operation
fmul.d f1, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x28, 0xe96bc368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmul.d f28, f30, f21, dyn # perform operation
fmul.d f28, f30, f21, rdn # perform operation
fmul.d f28, f30, f21, rmm # perform operation
fmul.d f28, f30, f21, rne # perform operation
fmul.d f28, f30, f21, rtz # perform operation
fmul.d f28, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x13, 0xd86ca76c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fmul.d f13, f4, f6, dyn # perform operation
fmul.d f13, f4, f6, rdn # perform operation
fmul.d f13, f4, f6, rmm # perform operation
fmul.d f13, f4, f6, rne # perform operation
fmul.d f13, f4, f6, rtz # perform operation
fmul.d f13, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x31, 0x965e9643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fmul.d f31, f30, f21, dyn # perform operation
fmul.d f31, f30, f21, rdn # perform operation
fmul.d f31, f30, f21, rmm # perform operation
fmul.d f31, f30, f21, rne # perform operation
fmul.d f31, f30, f21, rtz # perform operation
fmul.d f31, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x7, 0x06de15f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fmul.d f7, f30, f16, dyn # perform operation
fmul.d f7, f30, f16, rdn # perform operation
fmul.d f7, f30, f16, rmm # perform operation
fmul.d f7, f30, f16, rne # perform operation
fmul.d f7, f30, f16, rtz # perform operation
fmul.d f7, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x17, 0x2ed6f4e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
fmul.d f17, f6, f2, dyn # perform operation
fmul.d f17, f6, f2, rdn # perform operation
fmul.d f17, f6, f2, rmm # perform operation
fmul.d f17, f6, f2, rne # perform operation
fmul.d f17, f6, f2, rtz # perform operation
fmul.d f17, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x13, 0x44d9c3b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fmul.d f13, f26, f17, dyn # perform operation
fmul.d f13, f26, f17, rdn # perform operation
fmul.d f13, f26, f17, rmm # perform operation
fmul.d f13, f26, f17, rne # perform operation
fmul.d f13, f26, f17, rtz # perform operation
fmul.d f13, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x3, 0xa21209ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fmul.d f3, f12, f14, dyn # perform operation
fmul.d f3, f12, f14, rdn # perform operation
fmul.d f3, f12, f14, rmm # perform operation
fmul.d f3, f12, f14, rne # perform operation
fmul.d f3, f12, f14, rtz # perform operation
fmul.d f3, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x1, 0x67bab2a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fmul.d f1, f21, f4, dyn # perform operation
fmul.d f1, f21, f4, rdn # perform operation
fmul.d f1, f21, f4, rmm # perform operation
fmul.d f1, f21, f4, rne # perform operation
fmul.d f1, f21, f4, rtz # perform operation
fmul.d f1, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0x07eb5276 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fmul.d f17, f29, f8, dyn # perform operation
fmul.d f17, f29, f8, rdn # perform operation
fmul.d f17, f29, f8, rmm # perform operation
fmul.d f17, f29, f8, rne # perform operation
fmul.d f17, f29, f8, rtz # perform operation
fmul.d f17, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x21, 0xd07305a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fmul.d f21, f14, f31, dyn # perform operation
fmul.d f21, f14, f31, rdn # perform operation
fmul.d f21, f14, f31, rmm # perform operation
fmul.d f21, f14, f31, rne # perform operation
fmul.d f21, f14, f31, rtz # perform operation
fmul.d f21, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x13, 0xc84f9528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fmul.d f13, f18, f25, dyn # perform operation
fmul.d f13, f18, f25, rdn # perform operation
fmul.d f13, f18, f25, rmm # perform operation
fmul.d f13, f18, f25, rne # perform operation
fmul.d f13, f18, f25, rtz # perform operation
fmul.d f13, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x17, 0x7b82deef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fmul.d f17, f15, f28, dyn # perform operation
fmul.d f17, f15, f28, rdn # perform operation
fmul.d f17, f15, f28, rmm # perform operation
fmul.d f17, f15, f28, rne # perform operation
fmul.d f17, f15, f28, rtz # perform operation
fmul.d f17, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x1, 0x232ed81c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fmul.d f1, f3, f15, dyn # perform operation
fmul.d f1, f3, f15, rdn # perform operation
fmul.d f1, f3, f15, rmm # perform operation
fmul.d f1, f3, f15, rne # perform operation
fmul.d f1, f3, f15, rtz # perform operation
fmul.d f1, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x2, 0x83a5e3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fmul.d f2, f19, f4, dyn # perform operation
fmul.d f2, f19, f4, rdn # perform operation
fmul.d f2, f19, f4, rmm # perform operation
fmul.d f2, f19, f4, rne # perform operation
fmul.d f2, f19, f4, rtz # perform operation
fmul.d f2, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x20, 0x74e9e7c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fmul.d f20, f4, f14, dyn # perform operation
fmul.d f20, f4, f14, rdn # perform operation
fmul.d f20, f4, f14, rmm # perform operation
fmul.d f20, f4, f14, rne # perform operation
fmul.d f20, f4, f14, rtz # perform operation
fmul.d f20, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x18, 0xf62b835c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fmul.d f18, f11, f13, dyn # perform operation
fmul.d f18, f11, f13, rdn # perform operation
fmul.d f18, f11, f13, rmm # perform operation
fmul.d f18, f11, f13, rne # perform operation
fmul.d f18, f11, f13, rtz # perform operation
fmul.d f18, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x24, 0x74d50552 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fmul.d f24, f21, f18, dyn # perform operation
fmul.d f24, f21, f18, rdn # perform operation
fmul.d f24, f21, f18, rmm # perform operation
fmul.d f24, f21, f18, rne # perform operation
fmul.d f24, f21, f18, rtz # perform operation
fmul.d f24, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x27, 0x0d9c8c68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fmul.d f27, f5, f2, dyn # perform operation
fmul.d f27, f5, f2, rdn # perform operation
fmul.d f27, f5, f2, rmm # perform operation
fmul.d f27, f5, f2, rne # perform operation
fmul.d f27, f5, f2, rtz # perform operation
fmul.d f27, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x15, 0x6a46028a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fmul.d f15, f5, f17, dyn # perform operation
fmul.d f15, f5, f17, rdn # perform operation
fmul.d f15, f5, f17, rmm # perform operation
fmul.d f15, f5, f17, rne # perform operation
fmul.d f15, f5, f17, rtz # perform operation
fmul.d f15, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x2, 0xcfb777f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fmul.d f2, f9, f12, dyn # perform operation
fmul.d f2, f9, f12, rdn # perform operation
fmul.d f2, f9, f12, rmm # perform operation
fmul.d f2, f9, f12, rne # perform operation
fmul.d f2, f9, f12, rtz # perform operation
fmul.d f2, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x10, 0x699f08b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fmul.d f10, f1, f6, dyn # perform operation
fmul.d f10, f1, f6, rdn # perform operation
fmul.d f10, f1, f6, rmm # perform operation
fmul.d f10, f1, f6, rne # perform operation
fmul.d f10, f1, f6, rtz # perform operation
fmul.d f10, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x29, 0xb6dd9b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fmul.d f29, f14, f9, dyn # perform operation
fmul.d f29, f14, f9, rdn # perform operation
fmul.d f29, f14, f9, rmm # perform operation
fmul.d f29, f14, f9, rne # perform operation
fmul.d f29, f14, f9, rtz # perform operation
fmul.d f29, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x22, 0x51c731bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fmul.d f22, f15, f20, dyn # perform operation
fmul.d f22, f15, f20, rdn # perform operation
fmul.d f22, f15, f20, rmm # perform operation
fmul.d f22, f15, f20, rne # perform operation
fmul.d f22, f15, f20, rtz # perform operation
fmul.d f22, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x18, 0x002432d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fmul.d f18, f8, f12, dyn # perform operation
fmul.d f18, f8, f12, rdn # perform operation
fmul.d f18, f8, f12, rmm # perform operation
fmul.d f18, f8, f12, rne # perform operation
fmul.d f18, f8, f12, rtz # perform operation
fmul.d f18, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x23, 0x3c25455c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fmul.d f23, f20, f24, dyn # perform operation
fmul.d f23, f20, f24, rdn # perform operation
fmul.d f23, f20, f24, rmm # perform operation
fmul.d f23, f20, f24, rne # perform operation
fmul.d f23, f20, f24, rtz # perform operation
fmul.d f23, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x14, 0x1cc656f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fmul.d f14, f19, f22, dyn # perform operation
fmul.d f14, f19, f22, rdn # perform operation
fmul.d f14, f19, f22, rmm # perform operation
fmul.d f14, f19, f22, rne # perform operation
fmul.d f14, f19, f22, rtz # perform operation
fmul.d f14, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x14, 0xc30651f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fmul.d f14, f9, f11, dyn # perform operation
fmul.d f14, f9, f11, rdn # perform operation
fmul.d f14, f9, f11, rmm # perform operation
fmul.d f14, f9, f11, rne # perform operation
fmul.d f14, f9, f11, rtz # perform operation
fmul.d f14, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x20, 0x0df0c6e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fmul.d f20, f9, f26, dyn # perform operation
fmul.d f20, f9, f26, rdn # perform operation
fmul.d f20, f9, f26, rmm # perform operation
fmul.d f20, f9, f26, rne # perform operation
fmul.d f20, f9, f26, rtz # perform operation
fmul.d f20, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x12, 0x30c045dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fmul.d f12, f23, f1, dyn # perform operation
fmul.d f12, f23, f1, rdn # perform operation
fmul.d f12, f23, f1, rmm # perform operation
fmul.d f12, f23, f1, rne # perform operation
fmul.d f12, f23, f1, rtz # perform operation
fmul.d f12, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x3, 0xaabd2ca6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fmul.d f3, f21, f9, dyn # perform operation
fmul.d f3, f21, f9, rdn # perform operation
fmul.d f3, f21, f9, rmm # perform operation
fmul.d f3, f21, f9, rne # perform operation
fmul.d f3, f21, f9, rtz # perform operation
fmul.d f3, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x5, 0xafa95cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fmul.d f5, f28, f12, dyn # perform operation
fmul.d f5, f28, f12, rdn # perform operation
fmul.d f5, f28, f12, rmm # perform operation
fmul.d f5, f28, f12, rne # perform operation
fmul.d f5, f28, f12, rtz # perform operation
fmul.d f5, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x10, 0x0d3c52d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fmul.d f10, f24, f20, dyn # perform operation
fmul.d f10, f24, f20, rdn # perform operation
fmul.d f10, f24, f20, rmm # perform operation
fmul.d f10, f24, f20, rne # perform operation
fmul.d f10, f24, f20, rtz # perform operation
fmul.d f10, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x22, 0x97e1db7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fmul.d f22, f26, f25, dyn # perform operation
fmul.d f22, f26, f25, rdn # perform operation
fmul.d f22, f26, f25, rmm # perform operation
fmul.d f22, f26, f25, rne # perform operation
fmul.d f22, f26, f25, rtz # perform operation
fmul.d f22, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x16, 0x22848146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fmul.d f16, f20, f13, dyn # perform operation
fmul.d f16, f20, f13, rdn # perform operation
fmul.d f16, f20, f13, rmm # perform operation
fmul.d f16, f20, f13, rne # perform operation
fmul.d f16, f20, f13, rtz # perform operation
fmul.d f16, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x27, 0xb0a9a1cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fmul.d f27, f31, f29, dyn # perform operation
fmul.d f27, f31, f29, rdn # perform operation
fmul.d f27, f31, f29, rmm # perform operation
fmul.d f27, f31, f29, rne # perform operation
fmul.d f27, f31, f29, rtz # perform operation
fmul.d f27, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x29, 0x6984d6f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fmul.d f29, f10, f16, dyn # perform operation
fmul.d f29, f10, f16, rdn # perform operation
fmul.d f29, f10, f16, rmm # perform operation
fmul.d f29, f10, f16, rne # perform operation
fmul.d f29, f10, f16, rtz # perform operation
fmul.d f29, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x31, 0xf2480646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fmul.d f31, f23, f2, dyn # perform operation
fmul.d f31, f23, f2, rdn # perform operation
fmul.d f31, f23, f2, rmm # perform operation
fmul.d f31, f23, f2, rne # perform operation
fmul.d f31, f23, f2, rtz # perform operation
fmul.d f31, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x21, 0xa1902e24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fmul.d f21, f27, f23, dyn # perform operation
fmul.d f21, f27, f23, rdn # perform operation
fmul.d f21, f27, f23, rmm # perform operation
fmul.d f21, f27, f23, rne # perform operation
fmul.d f21, f27, f23, rtz # perform operation
fmul.d f21, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xabd29bcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fmul.d f17, f29, f5, dyn # perform operation
fmul.d f17, f29, f5, rdn # perform operation
fmul.d f17, f29, f5, rmm # perform operation
fmul.d f17, f29, f5, rne # perform operation
fmul.d f17, f29, f5, rtz # perform operation
fmul.d f17, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x9, 0x35a9edd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fmul.d f9, f21, f26, dyn # perform operation
fmul.d f9, f21, f26, rdn # perform operation
fmul.d f9, f21, f26, rmm # perform operation
fmul.d f9, f21, f26, rne # perform operation
fmul.d f9, f21, f26, rtz # perform operation
fmul.d f9, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x12, 0x3b2e407f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fmul.d f12, f28, f14, dyn # perform operation
fmul.d f12, f28, f14, rdn # perform operation
fmul.d f12, f28, f14, rmm # perform operation
fmul.d f12, f28, f14, rne # perform operation
fmul.d f12, f28, f14, rtz # perform operation
fmul.d f12, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x11, 0x1d1b617c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fmul.d f11, f26, f20, dyn # perform operation
fmul.d f11, f26, f20, rdn # perform operation
fmul.d f11, f26, f20, rmm # perform operation
fmul.d f11, f26, f20, rne # perform operation
fmul.d f11, f26, f20, rtz # perform operation
fmul.d f11, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x27, 0xee4c1853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fmul.d f27, f30, f24, dyn # perform operation
fmul.d f27, f30, f24, rdn # perform operation
fmul.d f27, f30, f24, rmm # perform operation
fmul.d f27, f30, f24, rne # perform operation
fmul.d f27, f30, f24, rtz # perform operation
fmul.d f27, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x12, 0x97c65d2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fmul.d f12, f21, f5, dyn # perform operation
fmul.d f12, f21, f5, rdn # perform operation
fmul.d f12, f21, f5, rmm # perform operation
fmul.d f12, f21, f5, rne # perform operation
fmul.d f12, f21, f5, rtz # perform operation
fmul.d f12, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x14, 0x03abf34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fmul.d f14, f12, f2, dyn # perform operation
fmul.d f14, f12, f2, rdn # perform operation
fmul.d f14, f12, f2, rmm # perform operation
fmul.d f14, f12, f2, rne # perform operation
fmul.d f14, f12, f2, rtz # perform operation
fmul.d f14, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x22, 0xe70d5503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
fmul.d f22, f10, f13, dyn # perform operation
fmul.d f22, f10, f13, rdn # perform operation
fmul.d f22, f10, f13, rmm # perform operation
fmul.d f22, f10, f13, rne # perform operation
fmul.d f22, f10, f13, rtz # perform operation
fmul.d f22, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x28, 0x7407236a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fmul.d f28, f14, f20, dyn # perform operation
fmul.d f28, f14, f20, rdn # perform operation
fmul.d f28, f14, f20, rmm # perform operation
fmul.d f28, f14, f20, rne # perform operation
fmul.d f28, f14, f20, rtz # perform operation
fmul.d f28, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x6, 0xcc862c11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fmul.d f6, f5, f29, dyn # perform operation
fmul.d f6, f5, f29, rdn # perform operation
fmul.d f6, f5, f29, rmm # perform operation
fmul.d f6, f5, f29, rne # perform operation
fmul.d f6, f5, f29, rtz # perform operation
fmul.d f6, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x6, 0x8a9e0252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fmul.d f6, f19, f4, dyn # perform operation
fmul.d f6, f19, f4, rdn # perform operation
fmul.d f6, f19, f4, rmm # perform operation
fmul.d f6, f19, f4, rne # perform operation
fmul.d f6, f19, f4, rtz # perform operation
fmul.d f6, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x6, 0x8ad0629d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fmul.d f6, f10, f9, dyn # perform operation
fmul.d f6, f10, f9, rdn # perform operation
fmul.d f6, f10, f9, rmm # perform operation
fmul.d f6, f10, f9, rne # perform operation
fmul.d f6, f10, f9, rtz # perform operation
fmul.d f6, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x25, 0xd5c007cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fmul.d f25, f31, f26, dyn # perform operation
fmul.d f25, f31, f26, rdn # perform operation
fmul.d f25, f31, f26, rmm # perform operation
fmul.d f25, f31, f26, rne # perform operation
fmul.d f25, f31, f26, rtz # perform operation
fmul.d f25, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x20, 0xe0656334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fmul.d f20, f3, f26, dyn # perform operation
fmul.d f20, f3, f26, rdn # perform operation
fmul.d f20, f3, f26, rmm # perform operation
fmul.d f20, f3, f26, rne # perform operation
fmul.d f20, f3, f26, rtz # perform operation
fmul.d f20, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x4, 0x157908c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fmul.d f4, f14, f12, dyn # perform operation
fmul.d f4, f14, f12, rdn # perform operation
fmul.d f4, f14, f12, rmm # perform operation
fmul.d f4, f14, f12, rne # perform operation
fmul.d f4, f14, f12, rtz # perform operation
fmul.d f4, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x31, 0x5f8064c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fmul.d f31, f14, f1, dyn # perform operation
fmul.d f31, f14, f1, rdn # perform operation
fmul.d f31, f14, f1, rmm # perform operation
fmul.d f31, f14, f1, rne # perform operation
fmul.d f31, f14, f1, rtz # perform operation
fmul.d f31, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x23, 0x9090076c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fmul.d f23, f12, f19, dyn # perform operation
fmul.d f23, f12, f19, rdn # perform operation
fmul.d f23, f12, f19, rmm # perform operation
fmul.d f23, f12, f19, rne # perform operation
fmul.d f23, f12, f19, rtz # perform operation
fmul.d f23, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x17, 0xdbd57565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fmul.d f17, f21, f7, dyn # perform operation
fmul.d f17, f21, f7, rdn # perform operation
fmul.d f17, f21, f7, rmm # perform operation
fmul.d f17, f21, f7, rne # perform operation
fmul.d f17, f21, f7, rtz # perform operation
fmul.d f17, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x23, 0x549486b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmul.d f23, f4, f18, dyn # perform operation
fmul.d f23, f4, f18, rdn # perform operation
fmul.d f23, f4, f18, rmm # perform operation
fmul.d f23, f4, f18, rne # perform operation
fmul.d f23, f4, f18, rtz # perform operation
fmul.d f23, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x3, 0x1cbf6a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fmul.d f3, f17, f30, dyn # perform operation
fmul.d f3, f17, f30, rdn # perform operation
fmul.d f3, f17, f30, rmm # perform operation
fmul.d f3, f17, f30, rne # perform operation
fmul.d f3, f17, f30, rtz # perform operation
fmul.d f3, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x6, 0xa05245a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fmul.d f6, f3, f1, dyn # perform operation
fmul.d f6, f3, f1, rdn # perform operation
fmul.d f6, f3, f1, rmm # perform operation
fmul.d f6, f3, f1, rne # perform operation
fmul.d f6, f3, f1, rtz # perform operation
fmul.d f6, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x20, 0x6f4a7635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fmul.d f20, f4, f22, dyn # perform operation
fmul.d f20, f4, f22, rdn # perform operation
fmul.d f20, f4, f22, rmm # perform operation
fmul.d f20, f4, f22, rne # perform operation
fmul.d f20, f4, f22, rtz # perform operation
fmul.d f20, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x16, 0x2de419cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fmul.d f16, f20, f17, dyn # perform operation
fmul.d f16, f20, f17, rdn # perform operation
fmul.d f16, f20, f17, rmm # perform operation
fmul.d f16, f20, f17, rne # perform operation
fmul.d f16, f20, f17, rtz # perform operation
fmul.d f16, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x5, 0xef5a52ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fmul.d f5, f6, f25, dyn # perform operation
fmul.d f5, f6, f25, rdn # perform operation
fmul.d f5, f6, f25, rmm # perform operation
fmul.d f5, f6, f25, rne # perform operation
fmul.d f5, f6, f25, rtz # perform operation
fmul.d f5, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x27, 0x9029af7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f27, f15, f11, dyn # perform operation
fmul.d f27, f15, f11, rdn # perform operation
fmul.d f27, f15, f11, rmm # perform operation
fmul.d f27, f15, f11, rne # perform operation
fmul.d f27, f15, f11, rtz # perform operation
fmul.d f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x30, 0x48779a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fmul.d f30, f29, f23, dyn # perform operation
fmul.d f30, f29, f23, rdn # perform operation
fmul.d f30, f29, f23, rmm # perform operation
fmul.d f30, f29, f23, rne # perform operation
fmul.d f30, f29, f23, rtz # perform operation
fmul.d f30, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x6, 0xf390ea20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmul.d f6, f4, f29, dyn # perform operation
fmul.d f6, f4, f29, rdn # perform operation
fmul.d f6, f4, f29, rmm # perform operation
fmul.d f6, f4, f29, rne # perform operation
fmul.d f6, f4, f29, rtz # perform operation
fmul.d f6, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x1, 0x35a51490 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fmul.d f1, f9, f17, dyn # perform operation
fmul.d f1, f9, f17, rdn # perform operation
fmul.d f1, f9, f17, rmm # perform operation
fmul.d f1, f9, f17, rne # perform operation
fmul.d f1, f9, f17, rtz # perform operation
fmul.d f1, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x17, 0xb48d86fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fmul.d f17, f6, f25, dyn # perform operation
fmul.d f17, f6, f25, rdn # perform operation
fmul.d f17, f6, f25, rmm # perform operation
fmul.d f17, f6, f25, rne # perform operation
fmul.d f17, f6, f25, rtz # perform operation
fmul.d f17, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x9, 0xe3e35a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fmul.d f9, f19, f16, dyn # perform operation
fmul.d f9, f19, f16, rdn # perform operation
fmul.d f9, f19, f16, rmm # perform operation
fmul.d f9, f19, f16, rne # perform operation
fmul.d f9, f19, f16, rtz # perform operation
fmul.d f9, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x11, 0xddfa69d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fmul.d f11, f29, f13, dyn # perform operation
fmul.d f11, f29, f13, rdn # perform operation
fmul.d f11, f29, f13, rmm # perform operation
fmul.d f11, f29, f13, rne # perform operation
fmul.d f11, f29, f13, rtz # perform operation
fmul.d f11, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x21, 0x22b8bca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fmul.d f21, f8, f18, dyn # perform operation
fmul.d f21, f8, f18, rdn # perform operation
fmul.d f21, f8, f18, rmm # perform operation
fmul.d f21, f8, f18, rne # perform operation
fmul.d f21, f8, f18, rtz # perform operation
fmul.d f21, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x3, 0x455ebf45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fmul.d f3, f31, f4, dyn # perform operation
fmul.d f3, f31, f4, rdn # perform operation
fmul.d f3, f31, f4, rmm # perform operation
fmul.d f3, f31, f4, rne # perform operation
fmul.d f3, f31, f4, rtz # perform operation
fmul.d f3, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x11, 0x8efdd9c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fmul.d f11, f9, f24, dyn # perform operation
fmul.d f11, f9, f24, rdn # perform operation
fmul.d f11, f9, f24, rmm # perform operation
fmul.d f11, f9, f24, rne # perform operation
fmul.d f11, f9, f24, rtz # perform operation
fmul.d f11, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x7, 0x452f1400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fmul.d f7, f10, f5, dyn # perform operation
fmul.d f7, f10, f5, rdn # perform operation
fmul.d f7, f10, f5, rmm # perform operation
fmul.d f7, f10, f5, rne # perform operation
fmul.d f7, f10, f5, rtz # perform operation
fmul.d f7, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x11, 0x49d11d0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fmul.d f11, f10, f3, dyn # perform operation
fmul.d f11, f10, f3, rdn # perform operation
fmul.d f11, f10, f3, rmm # perform operation
fmul.d f11, f10, f3, rne # perform operation
fmul.d f11, f10, f3, rtz # perform operation
fmul.d f11, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x18, 0x194390e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fmul.d f18, f2, f21, dyn # perform operation
fmul.d f18, f2, f21, rdn # perform operation
fmul.d f18, f2, f21, rmm # perform operation
fmul.d f18, f2, f21, rne # perform operation
fmul.d f18, f2, f21, rtz # perform operation
fmul.d f18, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x7, 0x38725a41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fmul.d f7, f18, f22, dyn # perform operation
fmul.d f7, f18, f22, rdn # perform operation
fmul.d f7, f18, f22, rmm # perform operation
fmul.d f7, f18, f22, rne # perform operation
fmul.d f7, f18, f22, rtz # perform operation
fmul.d f7, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x20, 0xe9617f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmul.d f20, f3, f15, dyn # perform operation
fmul.d f20, f3, f15, rdn # perform operation
fmul.d f20, f3, f15, rmm # perform operation
fmul.d f20, f3, f15, rne # perform operation
fmul.d f20, f3, f15, rtz # perform operation
fmul.d f20, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x15, 0x1037a8f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fmul.d f15, f27, f19, dyn # perform operation
fmul.d f15, f27, f19, rdn # perform operation
fmul.d f15, f27, f19, rmm # perform operation
fmul.d f15, f27, f19, rne # perform operation
fmul.d f15, f27, f19, rtz # perform operation
fmul.d f15, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x2, 0x559c793c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fmul.d f2, f31, f7, dyn # perform operation
fmul.d f2, f31, f7, rdn # perform operation
fmul.d f2, f31, f7, rmm # perform operation
fmul.d f2, f31, f7, rne # perform operation
fmul.d f2, f31, f7, rtz # perform operation
fmul.d f2, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x26, 0x6a8c8f51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fmul.d f26, f17, f22, dyn # perform operation
fmul.d f26, f17, f22, rdn # perform operation
fmul.d f26, f17, f22, rmm # perform operation
fmul.d f26, f17, f22, rne # perform operation
fmul.d f26, f17, f22, rtz # perform operation
fmul.d f26, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x23, 0x698d6b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fmul.d f23, f13, f14, dyn # perform operation
fmul.d f23, f13, f14, rdn # perform operation
fmul.d f23, f13, f14, rmm # perform operation
fmul.d f23, f13, f14, rne # perform operation
fmul.d f23, f13, f14, rtz # perform operation
fmul.d f23, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x9, 0x718c8514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f9, f7, f31, dyn # perform operation
fmul.d f9, f7, f31, rdn # perform operation
fmul.d f9, f7, f31, rmm # perform operation
fmul.d f9, f7, f31, rne # perform operation
fmul.d f9, f7, f31, rtz # perform operation
fmul.d f9, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x26, 0x846a2bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fmul.d f26, f10, f30, dyn # perform operation
fmul.d f26, f10, f30, rdn # perform operation
fmul.d f26, f10, f30, rmm # perform operation
fmul.d f26, f10, f30, rne # perform operation
fmul.d f26, f10, f30, rtz # perform operation
fmul.d f26, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x7, 0x67450424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fmul.d f7, f13, f5, dyn # perform operation
fmul.d f7, f13, f5, rdn # perform operation
fmul.d f7, f13, f5, rmm # perform operation
fmul.d f7, f13, f5, rne # perform operation
fmul.d f7, f13, f5, rtz # perform operation
fmul.d f7, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x28, 0xa4b86b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
fmul.d f28, f17, f10, dyn # perform operation
fmul.d f28, f17, f10, rdn # perform operation
fmul.d f28, f17, f10, rmm # perform operation
fmul.d f28, f17, f10, rne # perform operation
fmul.d f28, f17, f10, rtz # perform operation
fmul.d f28, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x15, 0xe15e88bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fmul.d f15, f8, f16, dyn # perform operation
fmul.d f15, f8, f16, rdn # perform operation
fmul.d f15, f8, f16, rmm # perform operation
fmul.d f15, f8, f16, rne # perform operation
fmul.d f15, f8, f16, rtz # perform operation
fmul.d f15, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x22, 0x81f52942 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fmul.d f22, f24, f13, dyn # perform operation
fmul.d f22, f24, f13, rdn # perform operation
fmul.d f22, f24, f13, rmm # perform operation
fmul.d f22, f24, f13, rne # perform operation
fmul.d f22, f24, f13, rtz # perform operation
fmul.d f22, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x21, 0x20a68087 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fmul.d f21, f15, f5, dyn # perform operation
fmul.d f21, f15, f5, rdn # perform operation
fmul.d f21, f15, f5, rmm # perform operation
fmul.d f21, f15, f5, rne # perform operation
fmul.d f21, f15, f5, rtz # perform operation
fmul.d f21, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x28, 0x6f04d051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fmul.d f28, f29, f7, dyn # perform operation
fmul.d f28, f29, f7, rdn # perform operation
fmul.d f28, f29, f7, rmm # perform operation
fmul.d f28, f29, f7, rne # perform operation
fmul.d f28, f29, f7, rtz # perform operation
fmul.d f28, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x29, 0x0ec627e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fmul.d f29, f7, f28, dyn # perform operation
fmul.d f29, f7, f28, rdn # perform operation
fmul.d f29, f7, f28, rmm # perform operation
fmul.d f29, f7, f28, rne # perform operation
fmul.d f29, f7, f28, rtz # perform operation
fmul.d f29, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x30, 0xb14db89b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fmul.d f30, f2, f5, dyn # perform operation
fmul.d f30, f2, f5, rdn # perform operation
fmul.d f30, f2, f5, rmm # perform operation
fmul.d f30, f2, f5, rne # perform operation
fmul.d f30, f2, f5, rtz # perform operation
fmul.d f30, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x10, 0xf9570ad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fmul.d f10, f27, f4, dyn # perform operation
fmul.d f10, f27, f4, rdn # perform operation
fmul.d f10, f27, f4, rmm # perform operation
fmul.d f10, f27, f4, rne # perform operation
fmul.d f10, f27, f4, rtz # perform operation
fmul.d f10, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x7, 0x1f5a9d75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fmul.d f7, f16, f18, dyn # perform operation
fmul.d f7, f16, f18, rdn # perform operation
fmul.d f7, f16, f18, rmm # perform operation
fmul.d f7, f16, f18, rne # perform operation
fmul.d f7, f16, f18, rtz # perform operation
fmul.d f7, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x8, 0x2eb963dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fmul.d f8, f23, f2, dyn # perform operation
fmul.d f8, f23, f2, rdn # perform operation
fmul.d f8, f23, f2, rmm # perform operation
fmul.d f8, f23, f2, rne # perform operation
fmul.d f8, f23, f2, rtz # perform operation
fmul.d f8, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x29, 0xe179d68d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fmul.d f29, f22, f12, dyn # perform operation
fmul.d f29, f22, f12, rdn # perform operation
fmul.d f29, f22, f12, rmm # perform operation
fmul.d f29, f22, f12, rne # perform operation
fmul.d f29, f22, f12, rtz # perform operation
fmul.d f29, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x25, 0x2be803a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmul.d f25, f11, f29, dyn # perform operation
fmul.d f25, f11, f29, rdn # perform operation
fmul.d f25, f11, f29, rmm # perform operation
fmul.d f25, f11, f29, rne # perform operation
fmul.d f25, f11, f29, rtz # perform operation
fmul.d f25, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x18, 0xd4cdcd8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fmul.d f18, f21, f22, dyn # perform operation
fmul.d f18, f21, f22, rdn # perform operation
fmul.d f18, f21, f22, rmm # perform operation
fmul.d f18, f21, f22, rne # perform operation
fmul.d f18, f21, f22, rtz # perform operation
fmul.d f18, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x31, 0x48a11c73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmul.d f31, f6, f3, dyn # perform operation
fmul.d f31, f6, f3, rdn # perform operation
fmul.d f31, f6, f3, rmm # perform operation
fmul.d f31, f6, f3, rne # perform operation
fmul.d f31, f6, f3, rtz # perform operation
fmul.d f31, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x23, 0x6f1ae882 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fmul.d f23, f19, f12, dyn # perform operation
fmul.d f23, f19, f12, rdn # perform operation
fmul.d f23, f19, f12, rmm # perform operation
fmul.d f23, f19, f12, rne # perform operation
fmul.d f23, f19, f12, rtz # perform operation
fmul.d f23, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x1, 0x35ef9df4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f1, f13, f22, dyn # perform operation
fmul.d f1, f13, f22, rdn # perform operation
fmul.d f1, f13, f22, rmm # perform operation
fmul.d f1, f13, f22, rne # perform operation
fmul.d f1, f13, f22, rtz # perform operation
fmul.d f1, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x1, 0xb8f7b436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fmul.d f1, f2, f14, dyn # perform operation
fmul.d f1, f2, f14, rdn # perform operation
fmul.d f1, f2, f14, rmm # perform operation
fmul.d f1, f2, f14, rne # perform operation
fmul.d f1, f2, f14, rtz # perform operation
fmul.d f1, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x28, 0x5266cfe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fmul.d f28, f20, f2, dyn # perform operation
fmul.d f28, f20, f2, rdn # perform operation
fmul.d f28, f20, f2, rmm # perform operation
fmul.d f28, f20, f2, rne # perform operation
fmul.d f28, f20, f2, rtz # perform operation
fmul.d f28, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x24, 0x1b77be0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fmul.d f24, f19, f2, dyn # perform operation
fmul.d f24, f19, f2, rdn # perform operation
fmul.d f24, f19, f2, rmm # perform operation
fmul.d f24, f19, f2, rne # perform operation
fmul.d f24, f19, f2, rtz # perform operation
fmul.d f24, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x22, 0x3f55631d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fmul.d f22, f23, f19, dyn # perform operation
fmul.d f22, f23, f19, rdn # perform operation
fmul.d f22, f23, f19, rmm # perform operation
fmul.d f22, f23, f19, rne # perform operation
fmul.d f22, f23, f19, rtz # perform operation
fmul.d f22, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x24, 0x633e2ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fmul.d f24, f8, f22, dyn # perform operation
fmul.d f24, f8, f22, rdn # perform operation
fmul.d f24, f8, f22, rmm # perform operation
fmul.d f24, f8, f22, rne # perform operation
fmul.d f24, f8, f22, rtz # perform operation
fmul.d f24, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x16, 0xb0c4105f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fmul.d f16, f10, f12, dyn # perform operation
fmul.d f16, f10, f12, rdn # perform operation
fmul.d f16, f10, f12, rmm # perform operation
fmul.d f16, f10, f12, rne # perform operation
fmul.d f16, f10, f12, rtz # perform operation
fmul.d f16, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x18, 0xf09b213c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmul.d f18, f8, f15, dyn # perform operation
fmul.d f18, f8, f15, rdn # perform operation
fmul.d f18, f8, f15, rmm # perform operation
fmul.d f18, f8, f15, rne # perform operation
fmul.d f18, f8, f15, rtz # perform operation
fmul.d f18, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x9, 0x486d17a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fmul.d f9, f3, f16, dyn # perform operation
fmul.d f9, f3, f16, rdn # perform operation
fmul.d f9, f3, f16, rmm # perform operation
fmul.d f9, f3, f16, rne # perform operation
fmul.d f9, f3, f16, rtz # perform operation
fmul.d f9, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x16, 0x39500dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fmul.d f16, f27, f15, dyn # perform operation
fmul.d f16, f27, f15, rdn # perform operation
fmul.d f16, f27, f15, rmm # perform operation
fmul.d f16, f27, f15, rne # perform operation
fmul.d f16, f27, f15, rtz # perform operation
fmul.d f16, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x6, 0x3d157256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fmul.d f6, f17, f11, dyn # perform operation
fmul.d f6, f17, f11, rdn # perform operation
fmul.d f6, f17, f11, rmm # perform operation
fmul.d f6, f17, f11, rne # perform operation
fmul.d f6, f17, f11, rtz # perform operation
fmul.d f6, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x10, 0xc9cadfc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
fmul.d f10, f23, f28, dyn # perform operation
fmul.d f10, f23, f28, rdn # perform operation
fmul.d f10, f23, f28, rmm # perform operation
fmul.d f10, f23, f28, rne # perform operation
fmul.d f10, f23, f28, rtz # perform operation
fmul.d f10, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x29, 0x4fbb829c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fmul.d f29, f30, f19, dyn # perform operation
fmul.d f29, f30, f19, rdn # perform operation
fmul.d f29, f30, f19, rmm # perform operation
fmul.d f29, f30, f19, rne # perform operation
fmul.d f29, f30, f19, rtz # perform operation
fmul.d f29, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x1, 0xc691a7c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fmul.d f1, f17, f25, dyn # perform operation
fmul.d f1, f17, f25, rdn # perform operation
fmul.d f1, f17, f25, rmm # perform operation
fmul.d f1, f17, f25, rne # perform operation
fmul.d f1, f17, f25, rtz # perform operation
fmul.d f1, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x18, 0x33595f78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fmul.d f18, f10, f27, dyn # perform operation
fmul.d f18, f10, f27, rdn # perform operation
fmul.d f18, f10, f27, rmm # perform operation
fmul.d f18, f10, f27, rne # perform operation
fmul.d f18, f10, f27, rtz # perform operation
fmul.d f18, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x12, 0x31804464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fmul.d f12, f31, f2, dyn # perform operation
fmul.d f12, f31, f2, rdn # perform operation
fmul.d f12, f31, f2, rmm # perform operation
fmul.d f12, f31, f2, rne # perform operation
fmul.d f12, f31, f2, rtz # perform operation
fmul.d f12, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x11, 0x656cdf59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fmul.d f11, f9, f21, dyn # perform operation
fmul.d f11, f9, f21, rdn # perform operation
fmul.d f11, f9, f21, rmm # perform operation
fmul.d f11, f9, f21, rne # perform operation
fmul.d f11, f9, f21, rtz # perform operation
fmul.d f11, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x24, 0x88206225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
fmul.d f24, f22, f23, dyn # perform operation
fmul.d f24, f22, f23, rdn # perform operation
fmul.d f24, f22, f23, rmm # perform operation
fmul.d f24, f22, f23, rne # perform operation
fmul.d f24, f22, f23, rtz # perform operation
fmul.d f24, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x7, 0x0ff2794a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fmul.d f7, f1, f29, dyn # perform operation
fmul.d f7, f1, f29, rdn # perform operation
fmul.d f7, f1, f29, rmm # perform operation
fmul.d f7, f1, f29, rne # perform operation
fmul.d f7, f1, f29, rtz # perform operation
fmul.d f7, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x21, 0xd2cffefe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fmul.d f21, f12, f22, dyn # perform operation
fmul.d f21, f12, f22, rdn # perform operation
fmul.d f21, f12, f22, rmm # perform operation
fmul.d f21, f12, f22, rne # perform operation
fmul.d f21, f12, f22, rtz # perform operation
fmul.d f21, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x29, 0xda5a4206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fmul.d f29, f31, f14, dyn # perform operation
fmul.d f29, f31, f14, rdn # perform operation
fmul.d f29, f31, f14, rmm # perform operation
fmul.d f29, f31, f14, rne # perform operation
fmul.d f29, f31, f14, rtz # perform operation
fmul.d f29, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x10, 0x3f7eea32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fmul.d f10, f18, f30, dyn # perform operation
fmul.d f10, f18, f30, rdn # perform operation
fmul.d f10, f18, f30, rmm # perform operation
fmul.d f10, f18, f30, rne # perform operation
fmul.d f10, f18, f30, rtz # perform operation
fmul.d f10, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x13, 0x76d28c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fmul.d f13, f19, f9, dyn # perform operation
fmul.d f13, f19, f9, rdn # perform operation
fmul.d f13, f19, f9, rmm # perform operation
fmul.d f13, f19, f9, rne # perform operation
fmul.d f13, f19, f9, rtz # perform operation
fmul.d f13, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x4, 0x3d3e43e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
fmul.d f4, f2, f25, dyn # perform operation
fmul.d f4, f2, f25, rdn # perform operation
fmul.d f4, f2, f25, rmm # perform operation
fmul.d f4, f2, f25, rne # perform operation
fmul.d f4, f2, f25, rtz # perform operation
fmul.d f4, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f4, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f4, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f4, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f4, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f4, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x31, 0x158a59eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fmul.d f31, f8, f29, dyn # perform operation
fmul.d f31, f8, f29, rdn # perform operation
fmul.d f31, f8, f29, rmm # perform operation
fmul.d f31, f8, f29, rne # perform operation
fmul.d f31, f8, f29, rtz # perform operation
fmul.d f31, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x15, 0x36558a92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fmul.d f15, f25, f20, dyn # perform operation
fmul.d f15, f25, f20, rdn # perform operation
fmul.d f15, f25, f20, rmm # perform operation
fmul.d f15, f25, f20, rne # perform operation
fmul.d f15, f25, f20, rtz # perform operation
fmul.d f15, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x29, 0xea428a24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fmul.d f29, f11, f7, dyn # perform operation
fmul.d f29, f11, f7, rdn # perform operation
fmul.d f29, f11, f7, rmm # perform operation
fmul.d f29, f11, f7, rne # perform operation
fmul.d f29, f11, f7, rtz # perform operation
fmul.d f29, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x24, 0x8fd5f812 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fmul.d f24, f26, f7, dyn # perform operation
fmul.d f24, f26, f7, rdn # perform operation
fmul.d f24, f26, f7, rmm # perform operation
fmul.d f24, f26, f7, rne # perform operation
fmul.d f24, f26, f7, rtz # perform operation
fmul.d f24, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x1, 0x1f4367a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fmul.d f1, f18, f14, dyn # perform operation
fmul.d f1, f18, f14, rdn # perform operation
fmul.d f1, f18, f14, rmm # perform operation
fmul.d f1, f18, f14, rne # perform operation
fmul.d f1, f18, f14, rtz # perform operation
fmul.d f1, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x10, 0x7ab3d870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmul.d f10, f25, f17, dyn # perform operation
fmul.d f10, f25, f17, rdn # perform operation
fmul.d f10, f25, f17, rmm # perform operation
fmul.d f10, f25, f17, rne # perform operation
fmul.d f10, f25, f17, rtz # perform operation
fmul.d f10, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x24, 0x382a9c8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fmul.d f24, f22, f11, dyn # perform operation
fmul.d f24, f22, f11, rdn # perform operation
fmul.d f24, f22, f11, rmm # perform operation
fmul.d f24, f22, f11, rne # perform operation
fmul.d f24, f22, f11, rtz # perform operation
fmul.d f24, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x15, 0x7c63373d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fmul.d f15, f29, f6, dyn # perform operation
fmul.d f15, f29, f6, rdn # perform operation
fmul.d f15, f29, f6, rmm # perform operation
fmul.d f15, f29, f6, rne # perform operation
fmul.d f15, f29, f6, rtz # perform operation
fmul.d f15, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x22, 0x7edcf5bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fmul.d f22, f13, f14, dyn # perform operation
fmul.d f22, f13, f14, rdn # perform operation
fmul.d f22, f13, f14, rmm # perform operation
fmul.d f22, f13, f14, rne # perform operation
fmul.d f22, f13, f14, rtz # perform operation
fmul.d f22, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x24, 0x4d183ceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fmul.d f24, f20, f11, dyn # perform operation
fmul.d f24, f20, f11, rdn # perform operation
fmul.d f24, f20, f11, rmm # perform operation
fmul.d f24, f20, f11, rne # perform operation
fmul.d f24, f20, f11, rtz # perform operation
fmul.d f24, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x11, 0xf3dacfb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fmul.d f11, f2, f24, dyn # perform operation
fmul.d f11, f2, f24, rdn # perform operation
fmul.d f11, f2, f24, rmm # perform operation
fmul.d f11, f2, f24, rne # perform operation
fmul.d f11, f2, f24, rtz # perform operation
fmul.d f11, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x1, 0xfd4c7a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmul.d f1, f9, f18, dyn # perform operation
fmul.d f1, f9, f18, rdn # perform operation
fmul.d f1, f9, f18, rmm # perform operation
fmul.d f1, f9, f18, rne # perform operation
fmul.d f1, f9, f18, rtz # perform operation
fmul.d f1, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x20, 0x320e29c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fmul.d f20, f6, f15, dyn # perform operation
fmul.d f20, f6, f15, rdn # perform operation
fmul.d f20, f6, f15, rmm # perform operation
fmul.d f20, f6, f15, rne # perform operation
fmul.d f20, f6, f15, rtz # perform operation
fmul.d f20, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x7, 0x8e1ec5a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
fmul.d f7, f27, f4, dyn # perform operation
fmul.d f7, f27, f4, rdn # perform operation
fmul.d f7, f27, f4, rmm # perform operation
fmul.d f7, f27, f4, rne # perform operation
fmul.d f7, f27, f4, rtz # perform operation
fmul.d f7, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x9, 0x56818ea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fmul.d f9, f20, f2, dyn # perform operation
fmul.d f9, f20, f2, rdn # perform operation
fmul.d f9, f20, f2, rmm # perform operation
fmul.d f9, f20, f2, rne # perform operation
fmul.d f9, f20, f2, rtz # perform operation
fmul.d f9, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x10, 0x4119d7c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fmul.d f10, f2, f22, dyn # perform operation
fmul.d f10, f2, f22, rdn # perform operation
fmul.d f10, f2, f22, rmm # perform operation
fmul.d f10, f2, f22, rne # perform operation
fmul.d f10, f2, f22, rtz # perform operation
fmul.d f10, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x27, 0x25e5f27f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fmul.d f27, f6, f8, dyn # perform operation
fmul.d f27, f6, f8, rdn # perform operation
fmul.d f27, f6, f8, rmm # perform operation
fmul.d f27, f6, f8, rne # perform operation
fmul.d f27, f6, f8, rtz # perform operation
fmul.d f27, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x9, 0xf88b45f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fmul.d f9, f24, f29, dyn # perform operation
fmul.d f9, f24, f29, rdn # perform operation
fmul.d f9, f24, f29, rmm # perform operation
fmul.d f9, f24, f29, rne # perform operation
fmul.d f9, f24, f29, rtz # perform operation
fmul.d f9, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x23, 0xaa1a3aa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmul.d f23, f20, f11, dyn # perform operation
fmul.d f23, f20, f11, rdn # perform operation
fmul.d f23, f20, f11, rmm # perform operation
fmul.d f23, f20, f11, rne # perform operation
fmul.d f23, f20, f11, rtz # perform operation
fmul.d f23, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x28, 0x9e1bf2c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fmul.d f28, f14, f3, dyn # perform operation
fmul.d f28, f14, f3, rdn # perform operation
fmul.d f28, f14, f3, rmm # perform operation
fmul.d f28, f14, f3, rne # perform operation
fmul.d f28, f14, f3, rtz # perform operation
fmul.d f28, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f14, f3 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x59fd8481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27ed5898 # load x3 with 32 MSBs 0x0000000027ed5898
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027ed5898
sw x3, 0(x2) # store x3 (0x27ed5898) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000027ed5898 from memory into f27
li x3, 0xc664b088 # load x3 with 32 MSBs 0x00000000c664b088
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c664b088
sw x3, 0(x2) # store x3 (0xc664b088) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c664b088 from memory into f23
fmul.d f0, f27, f23 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x77f5f1eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65340cf2 # load x3 with 32 MSBs 0x0000000065340cf2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065340cf2
sw x3, 0(x2) # store x3 (0x65340cf2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000065340cf2 from memory into f16
li x3, 0x47750a67 # load x3 with 32 MSBs 0x0000000047750a67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047750a67
sw x3, 0(x2) # store x3 (0x47750a67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000047750a67 from memory into f10
fmul.d f1, f16, f10 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xc2f0d3a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bb8cbac # load x3 with 32 MSBs 0x000000008bb8cbac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bb8cbac
sw x3, 0(x2) # store x3 (0x8bb8cbac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008bb8cbac from memory into f5
li x3, 0x6c69721d # load x3 with 32 MSBs 0x000000006c69721d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c69721d
sw x3, 0(x2) # store x3 (0x6c69721d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006c69721d from memory into f3
fmul.d f2, f5, f3 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x2b79d48e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7dfc1604 # load x3 with 32 MSBs 0x000000007dfc1604
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007dfc1604
sw x3, 0(x2) # store x3 (0x7dfc1604) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007dfc1604 from memory into f10
li x3, 0xc8b099b9 # load x3 with 32 MSBs 0x00000000c8b099b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8b099b9
sw x3, 0(x2) # store x3 (0xc8b099b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c8b099b9 from memory into f24
fmul.d f3, f10, f24 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0xbbb66b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13a9cff4 # load x3 with 32 MSBs 0x0000000013a9cff4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013a9cff4
sw x3, 0(x2) # store x3 (0x13a9cff4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000013a9cff4 from memory into f6
li x3, 0x12b66c9d # load x3 with 32 MSBs 0x0000000012b66c9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012b66c9d
sw x3, 0(x2) # store x3 (0x12b66c9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000012b66c9d from memory into f30
fmul.d f4, f6, f30 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xd81969d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f7d6d35 # load x3 with 32 MSBs 0x000000004f7d6d35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f7d6d35
sw x3, 0(x2) # store x3 (0x4f7d6d35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004f7d6d35 from memory into f20
li x3, 0x29204329 # load x3 with 32 MSBs 0x0000000029204329
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029204329
sw x3, 0(x2) # store x3 (0x29204329) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000029204329 from memory into f11
fmul.d f5, f20, f11 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xa69d56c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x639a95b5 # load x3 with 32 MSBs 0x00000000639a95b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000639a95b5
sw x3, 0(x2) # store x3 (0x639a95b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000639a95b5 from memory into f31
li x3, 0xbf0bb5eb # load x3 with 32 MSBs 0x00000000bf0bb5eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf0bb5eb
sw x3, 0(x2) # store x3 (0xbf0bb5eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bf0bb5eb from memory into f28
fmul.d f6, f31, f28 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x8c3e2cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb5ecd4b5 # load x3 with 32 MSBs 0x00000000b5ecd4b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5ecd4b5
sw x3, 0(x2) # store x3 (0xb5ecd4b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b5ecd4b5 from memory into f24
li x3, 0x008c2d4f # load x3 with 32 MSBs 0x00000000008c2d4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000008c2d4f
sw x3, 0(x2) # store x3 (0x008c2d4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000008c2d4f from memory into f16
fmul.d f7, f24, f16 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x832c6b97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfecbee42 # load x3 with 32 MSBs 0x00000000fecbee42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fecbee42
sw x3, 0(x2) # store x3 (0xfecbee42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000fecbee42 from memory into f26
li x3, 0x15ae6015 # load x3 with 32 MSBs 0x0000000015ae6015
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015ae6015
sw x3, 0(x2) # store x3 (0x15ae6015) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000015ae6015 from memory into f13
fmul.d f8, f26, f13 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x0aaa112e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x47bd1a2f # load x3 with 32 MSBs 0x0000000047bd1a2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047bd1a2f
sw x3, 0(x2) # store x3 (0x47bd1a2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000047bd1a2f from memory into f9
li x3, 0xf447138f # load x3 with 32 MSBs 0x00000000f447138f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f447138f
sw x3, 0(x2) # store x3 (0xf447138f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f447138f from memory into f15
fmul.d f9, f9, f15 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x4de0073a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c8abda0 # load x3 with 32 MSBs 0x000000007c8abda0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c8abda0
sw x3, 0(x2) # store x3 (0x7c8abda0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007c8abda0 from memory into f4
li x3, 0x2de07d94 # load x3 with 32 MSBs 0x000000002de07d94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002de07d94
sw x3, 0(x2) # store x3 (0x2de07d94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002de07d94 from memory into f13
fmul.d f10, f4, f13 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xdd3d71c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95baf04d # load x3 with 32 MSBs 0x0000000095baf04d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095baf04d
sw x3, 0(x2) # store x3 (0x95baf04d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000095baf04d from memory into f13
li x3, 0xb6fee29d # load x3 with 32 MSBs 0x00000000b6fee29d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6fee29d
sw x3, 0(x2) # store x3 (0xb6fee29d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b6fee29d from memory into f12
fmul.d f11, f13, f12 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x7b23123f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x669c6962 # load x3 with 32 MSBs 0x00000000669c6962
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000669c6962
sw x3, 0(x2) # store x3 (0x669c6962) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000669c6962 from memory into f25
li x3, 0x9b7aebeb # load x3 with 32 MSBs 0x000000009b7aebeb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b7aebeb
sw x3, 0(x2) # store x3 (0x9b7aebeb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009b7aebeb from memory into f23
fmul.d f12, f25, f23 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0xd14b2bce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c9554af # load x3 with 32 MSBs 0x000000004c9554af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c9554af
sw x3, 0(x2) # store x3 (0x4c9554af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004c9554af from memory into f14
li x3, 0x67bc54f4 # load x3 with 32 MSBs 0x0000000067bc54f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067bc54f4
sw x3, 0(x2) # store x3 (0x67bc54f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000067bc54f4 from memory into f2
fmul.d f13, f14, f2 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xd31c6ae0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3501b03e # load x3 with 32 MSBs 0x000000003501b03e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003501b03e
sw x3, 0(x2) # store x3 (0x3501b03e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003501b03e from memory into f25
li x3, 0x50c5a7a6 # load x3 with 32 MSBs 0x0000000050c5a7a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050c5a7a6
sw x3, 0(x2) # store x3 (0x50c5a7a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000050c5a7a6 from memory into f20
fmul.d f14, f25, f20 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x58c378ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcdf5da9c # load x3 with 32 MSBs 0x00000000cdf5da9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdf5da9c
sw x3, 0(x2) # store x3 (0xcdf5da9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000cdf5da9c from memory into f18
li x3, 0xa5de1ef3 # load x3 with 32 MSBs 0x00000000a5de1ef3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5de1ef3
sw x3, 0(x2) # store x3 (0xa5de1ef3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a5de1ef3 from memory into f1
fmul.d f15, f18, f1 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x1bd006be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea3fdc55 # load x3 with 32 MSBs 0x00000000ea3fdc55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea3fdc55
sw x3, 0(x2) # store x3 (0xea3fdc55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ea3fdc55 from memory into f13
li x3, 0x908e8dac # load x3 with 32 MSBs 0x00000000908e8dac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000908e8dac
sw x3, 0(x2) # store x3 (0x908e8dac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000908e8dac from memory into f12
fmul.d f16, f13, f12 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x495a018f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x030e31e7 # load x3 with 32 MSBs 0x00000000030e31e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000030e31e7
sw x3, 0(x2) # store x3 (0x030e31e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000030e31e7 from memory into f5
li x3, 0xe181ce00 # load x3 with 32 MSBs 0x00000000e181ce00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e181ce00
sw x3, 0(x2) # store x3 (0xe181ce00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e181ce00 from memory into f21
fmul.d f17, f5, f21 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x759c9af3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x681a8b4d # load x3 with 32 MSBs 0x00000000681a8b4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000681a8b4d
sw x3, 0(x2) # store x3 (0x681a8b4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000681a8b4d from memory into f4
li x3, 0x2ec7e718 # load x3 with 32 MSBs 0x000000002ec7e718
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ec7e718
sw x3, 0(x2) # store x3 (0x2ec7e718) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002ec7e718 from memory into f7
fmul.d f18, f4, f7 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xd7a6a94f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81af99e1 # load x3 with 32 MSBs 0x0000000081af99e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081af99e1
sw x3, 0(x2) # store x3 (0x81af99e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000081af99e1 from memory into f28
li x3, 0xfb9549ba # load x3 with 32 MSBs 0x00000000fb9549ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb9549ba
sw x3, 0(x2) # store x3 (0xfb9549ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000fb9549ba from memory into f4
fmul.d f19, f28, f4 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x5a9e19fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a1b6867 # load x3 with 32 MSBs 0x000000006a1b6867
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a1b6867
sw x3, 0(x2) # store x3 (0x6a1b6867) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006a1b6867 from memory into f5
li x3, 0x7269a92c # load x3 with 32 MSBs 0x000000007269a92c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007269a92c
sw x3, 0(x2) # store x3 (0x7269a92c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007269a92c from memory into f24
fmul.d f20, f5, f24 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x6a9dfdd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x877cc4bc # load x3 with 32 MSBs 0x00000000877cc4bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000877cc4bc
sw x3, 0(x2) # store x3 (0x877cc4bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000877cc4bc from memory into f15
li x3, 0x76470c78 # load x3 with 32 MSBs 0x0000000076470c78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076470c78
sw x3, 0(x2) # store x3 (0x76470c78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000076470c78 from memory into f7
fmul.d f21, f15, f7 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xab5d8f84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65d1313a # load x3 with 32 MSBs 0x0000000065d1313a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065d1313a
sw x3, 0(x2) # store x3 (0x65d1313a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000065d1313a from memory into f6
li x3, 0x1974f260 # load x3 with 32 MSBs 0x000000001974f260
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001974f260
sw x3, 0(x2) # store x3 (0x1974f260) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001974f260 from memory into f4
fmul.d f22, f6, f4 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x6cf98f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bd45ff0 # load x3 with 32 MSBs 0x000000009bd45ff0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bd45ff0
sw x3, 0(x2) # store x3 (0x9bd45ff0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009bd45ff0 from memory into f23
li x3, 0xbcd421cb # load x3 with 32 MSBs 0x00000000bcd421cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcd421cb
sw x3, 0(x2) # store x3 (0xbcd421cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000bcd421cb from memory into f13
fmul.d f23, f23, f13 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x961ac3dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe7341ce1 # load x3 with 32 MSBs 0x00000000e7341ce1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7341ce1
sw x3, 0(x2) # store x3 (0xe7341ce1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e7341ce1 from memory into f1
li x3, 0x1081f94a # load x3 with 32 MSBs 0x000000001081f94a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001081f94a
sw x3, 0(x2) # store x3 (0x1081f94a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001081f94a from memory into f8
fmul.d f24, f1, f8 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xee1de79d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf61b130 # load x3 with 32 MSBs 0x00000000df61b130
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df61b130
sw x3, 0(x2) # store x3 (0xdf61b130) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000df61b130 from memory into f27
li x3, 0x8a4fefeb # load x3 with 32 MSBs 0x000000008a4fefeb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a4fefeb
sw x3, 0(x2) # store x3 (0x8a4fefeb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008a4fefeb from memory into f31
fmul.d f25, f27, f31 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x8d36a8b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e84dd7c # load x3 with 32 MSBs 0x000000006e84dd7c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e84dd7c
sw x3, 0(x2) # store x3 (0x6e84dd7c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000006e84dd7c from memory into f19
li x3, 0x575e1b7a # load x3 with 32 MSBs 0x00000000575e1b7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000575e1b7a
sw x3, 0(x2) # store x3 (0x575e1b7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000575e1b7a from memory into f29
fmul.d f26, f19, f29 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x2f8db63b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8ab218da # load x3 with 32 MSBs 0x000000008ab218da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ab218da
sw x3, 0(x2) # store x3 (0x8ab218da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008ab218da from memory into f19
li x3, 0xea1c1a15 # load x3 with 32 MSBs 0x00000000ea1c1a15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea1c1a15
sw x3, 0(x2) # store x3 (0xea1c1a15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ea1c1a15 from memory into f6
fmul.d f27, f19, f6 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x610a027d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x283f4d05 # load x3 with 32 MSBs 0x00000000283f4d05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000283f4d05
sw x3, 0(x2) # store x3 (0x283f4d05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000283f4d05 from memory into f8
li x3, 0x9d0a2755 # load x3 with 32 MSBs 0x000000009d0a2755
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d0a2755
sw x3, 0(x2) # store x3 (0x9d0a2755) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009d0a2755 from memory into f10
fmul.d f28, f8, f10 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x0c946f60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4f57d7a # load x3 with 32 MSBs 0x00000000a4f57d7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4f57d7a
sw x3, 0(x2) # store x3 (0xa4f57d7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a4f57d7a from memory into f3
li x3, 0x7660639f # load x3 with 32 MSBs 0x000000007660639f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007660639f
sw x3, 0(x2) # store x3 (0x7660639f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007660639f from memory into f5
fmul.d f29, f3, f5 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x4078e78f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75b957ba # load x3 with 32 MSBs 0x0000000075b957ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075b957ba
sw x3, 0(x2) # store x3 (0x75b957ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000075b957ba from memory into f17
li x3, 0x269c8435 # load x3 with 32 MSBs 0x00000000269c8435
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000269c8435
sw x3, 0(x2) # store x3 (0x269c8435) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000269c8435 from memory into f14
fmul.d f30, f17, f14 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xe6b84926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e890b60 # load x3 with 32 MSBs 0x000000008e890b60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e890b60
sw x3, 0(x2) # store x3 (0x8e890b60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000008e890b60 from memory into f13
li x3, 0xc3442fcd # load x3 with 32 MSBs 0x00000000c3442fcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3442fcd
sw x3, 0(x2) # store x3 (0xc3442fcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c3442fcd from memory into f31
fmul.d f31, f13, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x16, 0xc7556f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e08d7cf # load x3 with 32 MSBs 0x000000001e08d7cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e08d7cf
sw x3, 0(x2) # store x3 (0x1e08d7cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000001e08d7cf from memory into f0
li x3, 0xf45ee11d # load x3 with 32 MSBs 0x00000000f45ee11d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f45ee11d
sw x3, 0(x2) # store x3 (0xf45ee11d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f45ee11d from memory into f27
fmul.d f16, f0, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x1, 0xddd500dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x904457b4 # load x3 with 32 MSBs 0x00000000904457b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000904457b4
sw x3, 0(x2) # store x3 (0x904457b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000904457b4 from memory into f1
li x3, 0x050d1b2e # load x3 with 32 MSBs 0x00000000050d1b2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000050d1b2e
sw x3, 0(x2) # store x3 (0x050d1b2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000050d1b2e from memory into f31
fmul.d f1, f1, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x11, 0x05d882f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23ddf120 # load x3 with 32 MSBs 0x0000000023ddf120
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023ddf120
sw x3, 0(x2) # store x3 (0x23ddf120) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000023ddf120 from memory into f2
li x3, 0x8f686adb # load x3 with 32 MSBs 0x000000008f686adb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f686adb
sw x3, 0(x2) # store x3 (0x8f686adb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008f686adb from memory into f6
fmul.d f11, f2, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x2, 0x2ea65453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d685190 # load x3 with 32 MSBs 0x000000005d685190
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d685190
sw x3, 0(x2) # store x3 (0x5d685190) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000005d685190 from memory into f3
li x3, 0x0be7b009 # load x3 with 32 MSBs 0x000000000be7b009
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000be7b009
sw x3, 0(x2) # store x3 (0x0be7b009) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000be7b009 from memory into f21
fmul.d f2, f3, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x10, 0x481b9929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3c8970f # load x3 with 32 MSBs 0x00000000e3c8970f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3c8970f
sw x3, 0(x2) # store x3 (0xe3c8970f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e3c8970f from memory into f4
li x3, 0x0ce3df4f # load x3 with 32 MSBs 0x000000000ce3df4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ce3df4f
sw x3, 0(x2) # store x3 (0x0ce3df4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000ce3df4f from memory into f30
fmul.d f10, f4, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x20, 0x6908a814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69dbb24f # load x3 with 32 MSBs 0x0000000069dbb24f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069dbb24f
sw x3, 0(x2) # store x3 (0x69dbb24f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000069dbb24f from memory into f5
li x3, 0xd63cd465 # load x3 with 32 MSBs 0x00000000d63cd465
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d63cd465
sw x3, 0(x2) # store x3 (0xd63cd465) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d63cd465 from memory into f29
fmul.d f20, f5, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x12, 0x7ba1a4c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3449d733 # load x3 with 32 MSBs 0x000000003449d733
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003449d733
sw x3, 0(x2) # store x3 (0x3449d733) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003449d733 from memory into f6
li x3, 0xf448a474 # load x3 with 32 MSBs 0x00000000f448a474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f448a474
sw x3, 0(x2) # store x3 (0xf448a474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f448a474 from memory into f22
fmul.d f12, f6, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x12, 0x5a0c2f62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8006bdd8 # load x3 with 32 MSBs 0x000000008006bdd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008006bdd8
sw x3, 0(x2) # store x3 (0x8006bdd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008006bdd8 from memory into f7
li x3, 0x86fd0f03 # load x3 with 32 MSBs 0x0000000086fd0f03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086fd0f03
sw x3, 0(x2) # store x3 (0x86fd0f03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000086fd0f03 from memory into f18
fmul.d f12, f7, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x10, 0xea49225a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x86e07494 # load x3 with 32 MSBs 0x0000000086e07494
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086e07494
sw x3, 0(x2) # store x3 (0x86e07494) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000086e07494 from memory into f8
li x3, 0x305e093d # load x3 with 32 MSBs 0x00000000305e093d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000305e093d
sw x3, 0(x2) # store x3 (0x305e093d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000305e093d from memory into f13
fmul.d f10, f8, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x19, 0xbbd453b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5da5bf7d # load x3 with 32 MSBs 0x000000005da5bf7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005da5bf7d
sw x3, 0(x2) # store x3 (0x5da5bf7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005da5bf7d from memory into f9
li x3, 0x064cf720 # load x3 with 32 MSBs 0x00000000064cf720
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000064cf720
sw x3, 0(x2) # store x3 (0x064cf720) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000064cf720 from memory into f29
fmul.d f19, f9, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x27, 0x2f5a5123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb83ab59d # load x3 with 32 MSBs 0x00000000b83ab59d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b83ab59d
sw x3, 0(x2) # store x3 (0xb83ab59d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b83ab59d from memory into f10
li x3, 0xedcfbac6 # load x3 with 32 MSBs 0x00000000edcfbac6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edcfbac6
sw x3, 0(x2) # store x3 (0xedcfbac6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000edcfbac6 from memory into f22
fmul.d f27, f10, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x8, 0xe7a6fcad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2f1f349 # load x3 with 32 MSBs 0x00000000b2f1f349
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2f1f349
sw x3, 0(x2) # store x3 (0xb2f1f349) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b2f1f349 from memory into f11
li x3, 0xf2986545 # load x3 with 32 MSBs 0x00000000f2986545
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2986545
sw x3, 0(x2) # store x3 (0xf2986545) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f2986545 from memory into f9
fmul.d f8, f11, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x14, 0xa0debf8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd58747b9 # load x3 with 32 MSBs 0x00000000d58747b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d58747b9
sw x3, 0(x2) # store x3 (0xd58747b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d58747b9 from memory into f12
li x3, 0x4c029df0 # load x3 with 32 MSBs 0x000000004c029df0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c029df0
sw x3, 0(x2) # store x3 (0x4c029df0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004c029df0 from memory into f28
fmul.d f14, f12, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x20, 0xbbdd0ecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62fa10c5 # load x3 with 32 MSBs 0x0000000062fa10c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062fa10c5
sw x3, 0(x2) # store x3 (0x62fa10c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000062fa10c5 from memory into f13
li x3, 0x691433f4 # load x3 with 32 MSBs 0x00000000691433f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000691433f4
sw x3, 0(x2) # store x3 (0x691433f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000691433f4 from memory into f2
fmul.d f20, f13, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x30, 0x05b9f694 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4011caf # load x3 with 32 MSBs 0x00000000d4011caf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4011caf
sw x3, 0(x2) # store x3 (0xd4011caf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d4011caf from memory into f14
li x3, 0xe29cb65d # load x3 with 32 MSBs 0x00000000e29cb65d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e29cb65d
sw x3, 0(x2) # store x3 (0xe29cb65d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e29cb65d from memory into f29
fmul.d f30, f14, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x9, 0x452d8076 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc39ff4c3 # load x3 with 32 MSBs 0x00000000c39ff4c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c39ff4c3
sw x3, 0(x2) # store x3 (0xc39ff4c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c39ff4c3 from memory into f15
li x3, 0x2417620a # load x3 with 32 MSBs 0x000000002417620a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002417620a
sw x3, 0(x2) # store x3 (0x2417620a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002417620a from memory into f18
fmul.d f9, f15, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x2, 0x7b8fadc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x015ba096 # load x3 with 32 MSBs 0x00000000015ba096
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000015ba096
sw x3, 0(x2) # store x3 (0x015ba096) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000015ba096 from memory into f16
li x3, 0x9527dd49 # load x3 with 32 MSBs 0x000000009527dd49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009527dd49
sw x3, 0(x2) # store x3 (0x9527dd49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009527dd49 from memory into f21
fmul.d f2, f16, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x11, 0xe86c9e53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f1de788 # load x3 with 32 MSBs 0x000000001f1de788
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f1de788
sw x3, 0(x2) # store x3 (0x1f1de788) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001f1de788 from memory into f17
li x3, 0xf77ee2d6 # load x3 with 32 MSBs 0x00000000f77ee2d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f77ee2d6
sw x3, 0(x2) # store x3 (0xf77ee2d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f77ee2d6 from memory into f20
fmul.d f11, f17, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x19, 0x3dcb0b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c892cf4 # load x3 with 32 MSBs 0x000000006c892cf4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c892cf4
sw x3, 0(x2) # store x3 (0x6c892cf4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006c892cf4 from memory into f18
li x3, 0xb3dbbc04 # load x3 with 32 MSBs 0x00000000b3dbbc04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3dbbc04
sw x3, 0(x2) # store x3 (0xb3dbbc04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b3dbbc04 from memory into f24
fmul.d f19, f18, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x31, 0x450f5214 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb9350d6 # load x3 with 32 MSBs 0x00000000fb9350d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb9350d6
sw x3, 0(x2) # store x3 (0xfb9350d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000fb9350d6 from memory into f19
li x3, 0xdea0c565 # load x3 with 32 MSBs 0x00000000dea0c565
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dea0c565
sw x3, 0(x2) # store x3 (0xdea0c565) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000dea0c565 from memory into f21
fmul.d f31, f19, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x22, 0x3752d286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x12dfa015 # load x3 with 32 MSBs 0x0000000012dfa015
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012dfa015
sw x3, 0(x2) # store x3 (0x12dfa015) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000012dfa015 from memory into f20
li x3, 0x47dec3b4 # load x3 with 32 MSBs 0x0000000047dec3b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047dec3b4
sw x3, 0(x2) # store x3 (0x47dec3b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000047dec3b4 from memory into f30
fmul.d f22, f20, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x3, 0xb190405c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab02f9c6 # load x3 with 32 MSBs 0x00000000ab02f9c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab02f9c6
sw x3, 0(x2) # store x3 (0xab02f9c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ab02f9c6 from memory into f21
li x3, 0xd882e888 # load x3 with 32 MSBs 0x00000000d882e888
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d882e888
sw x3, 0(x2) # store x3 (0xd882e888) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d882e888 from memory into f23
fmul.d f3, f21, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x24, 0x833f670d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x694a4077 # load x3 with 32 MSBs 0x00000000694a4077
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000694a4077
sw x3, 0(x2) # store x3 (0x694a4077) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000694a4077 from memory into f22
li x3, 0x0e84aea9 # load x3 with 32 MSBs 0x000000000e84aea9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e84aea9
sw x3, 0(x2) # store x3 (0x0e84aea9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000e84aea9 from memory into f21
fmul.d f24, f22, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x8, 0xb08c1477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf56740b # load x3 with 32 MSBs 0x00000000bf56740b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf56740b
sw x3, 0(x2) # store x3 (0xbf56740b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000bf56740b from memory into f23
li x3, 0x9413b12d # load x3 with 32 MSBs 0x000000009413b12d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009413b12d
sw x3, 0(x2) # store x3 (0x9413b12d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009413b12d from memory into f18
fmul.d f8, f23, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x30, 0xa676daab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc789ea62 # load x3 with 32 MSBs 0x00000000c789ea62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c789ea62
sw x3, 0(x2) # store x3 (0xc789ea62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c789ea62 from memory into f24
li x3, 0x26f1b2f6 # load x3 with 32 MSBs 0x0000000026f1b2f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026f1b2f6
sw x3, 0(x2) # store x3 (0x26f1b2f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000026f1b2f6 from memory into f10
fmul.d f30, f24, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x29, 0x0d453b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6b447fb # load x3 with 32 MSBs 0x00000000e6b447fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6b447fb
sw x3, 0(x2) # store x3 (0xe6b447fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e6b447fb from memory into f25
li x3, 0xc1f09d10 # load x3 with 32 MSBs 0x00000000c1f09d10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1f09d10
sw x3, 0(x2) # store x3 (0xc1f09d10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c1f09d10 from memory into f15
fmul.d f29, f25, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x11, 0xe0be3cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4fd57a0 # load x3 with 32 MSBs 0x00000000c4fd57a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4fd57a0
sw x3, 0(x2) # store x3 (0xc4fd57a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c4fd57a0 from memory into f26
li x3, 0x3a9ccb40 # load x3 with 32 MSBs 0x000000003a9ccb40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a9ccb40
sw x3, 0(x2) # store x3 (0x3a9ccb40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003a9ccb40 from memory into f25
fmul.d f11, f26, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x23, 0xac5ec1df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14936959 # load x3 with 32 MSBs 0x0000000014936959
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014936959
sw x3, 0(x2) # store x3 (0x14936959) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000014936959 from memory into f27
li x3, 0x1a510f6e # load x3 with 32 MSBs 0x000000001a510f6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a510f6e
sw x3, 0(x2) # store x3 (0x1a510f6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001a510f6e from memory into f28
fmul.d f23, f27, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x21, 0x9496c5f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85d7c4a4 # load x3 with 32 MSBs 0x0000000085d7c4a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085d7c4a4
sw x3, 0(x2) # store x3 (0x85d7c4a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000085d7c4a4 from memory into f28
li x3, 0xb6af93b9 # load x3 with 32 MSBs 0x00000000b6af93b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6af93b9
sw x3, 0(x2) # store x3 (0xb6af93b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b6af93b9 from memory into f22
fmul.d f21, f28, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x25, 0xa4f49d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa43346c9 # load x3 with 32 MSBs 0x00000000a43346c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a43346c9
sw x3, 0(x2) # store x3 (0xa43346c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a43346c9 from memory into f29
li x3, 0xabd154b3 # load x3 with 32 MSBs 0x00000000abd154b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abd154b3
sw x3, 0(x2) # store x3 (0xabd154b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000abd154b3 from memory into f13
fmul.d f25, f29, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x9, 0x7caa579d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x30ed6b77 # load x3 with 32 MSBs 0x0000000030ed6b77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030ed6b77
sw x3, 0(x2) # store x3 (0x30ed6b77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000030ed6b77 from memory into f30
li x3, 0xab2effee # load x3 with 32 MSBs 0x00000000ab2effee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab2effee
sw x3, 0(x2) # store x3 (0xab2effee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ab2effee from memory into f26
fmul.d f9, f30, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x31, 0xbe77e2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56fedef4 # load x3 with 32 MSBs 0x0000000056fedef4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056fedef4
sw x3, 0(x2) # store x3 (0x56fedef4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000056fedef4 from memory into f31
li x3, 0x414485b6 # load x3 with 32 MSBs 0x00000000414485b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000414485b6
sw x3, 0(x2) # store x3 (0x414485b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000414485b6 from memory into f19
fmul.d f31, f31, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x22, 0xa6f3bf78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcbf88187 # load x3 with 32 MSBs 0x00000000cbf88187
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbf88187
sw x3, 0(x2) # store x3 (0xcbf88187) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000cbf88187 from memory into f21
li x3, 0x3197b70d # load x3 with 32 MSBs 0x000000003197b70d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003197b70d
sw x3, 0(x2) # store x3 (0x3197b70d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000003197b70d from memory into f0
fmul.d f22, f21, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x19, 0x982a527e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xedff43fe # load x3 with 32 MSBs 0x00000000edff43fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edff43fe
sw x3, 0(x2) # store x3 (0xedff43fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000edff43fe from memory into f23
li x3, 0x5489178d # load x3 with 32 MSBs 0x000000005489178d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005489178d
sw x3, 0(x2) # store x3 (0x5489178d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005489178d from memory into f1
fmul.d f19, f23, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x17, 0xc3b53d98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x625c9dba # load x3 with 32 MSBs 0x00000000625c9dba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000625c9dba
sw x3, 0(x2) # store x3 (0x625c9dba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000625c9dba from memory into f27
li x3, 0xb5eb30e1 # load x3 with 32 MSBs 0x00000000b5eb30e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5eb30e1
sw x3, 0(x2) # store x3 (0xb5eb30e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b5eb30e1 from memory into f2
fmul.d f17, f27, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x20, 0xb9c2ee17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ce97fca # load x3 with 32 MSBs 0x000000007ce97fca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ce97fca
sw x3, 0(x2) # store x3 (0x7ce97fca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007ce97fca from memory into f24
li x3, 0x08f5e7ca # load x3 with 32 MSBs 0x0000000008f5e7ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008f5e7ca
sw x3, 0(x2) # store x3 (0x08f5e7ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000008f5e7ca from memory into f3
fmul.d f20, f24, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x2, 0xccfd7707 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55516aaf # load x3 with 32 MSBs 0x0000000055516aaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055516aaf
sw x3, 0(x2) # store x3 (0x55516aaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000055516aaf from memory into f15
li x3, 0x25d0512d # load x3 with 32 MSBs 0x0000000025d0512d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025d0512d
sw x3, 0(x2) # store x3 (0x25d0512d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000025d0512d from memory into f4
fmul.d f2, f15, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x28, 0x5d79ffe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5968d9ce # load x3 with 32 MSBs 0x000000005968d9ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005968d9ce
sw x3, 0(x2) # store x3 (0x5968d9ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005968d9ce from memory into f6
li x3, 0x6fda70a7 # load x3 with 32 MSBs 0x000000006fda70a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fda70a7
sw x3, 0(x2) # store x3 (0x6fda70a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006fda70a7 from memory into f5
fmul.d f28, f6, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x10, 0xd55f06fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x471abd3f # load x3 with 32 MSBs 0x00000000471abd3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000471abd3f
sw x3, 0(x2) # store x3 (0x471abd3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000471abd3f from memory into f9
li x3, 0x48664e42 # load x3 with 32 MSBs 0x0000000048664e42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048664e42
sw x3, 0(x2) # store x3 (0x48664e42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000048664e42 from memory into f6
fmul.d f10, f9, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x9, 0x56c715c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2aaab2d1 # load x3 with 32 MSBs 0x000000002aaab2d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002aaab2d1
sw x3, 0(x2) # store x3 (0x2aaab2d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002aaab2d1 from memory into f19
li x3, 0xb20c2868 # load x3 with 32 MSBs 0x00000000b20c2868
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b20c2868
sw x3, 0(x2) # store x3 (0xb20c2868) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b20c2868 from memory into f7
fmul.d f9, f19, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x8, 0xd8e8908e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0840f2d # load x3 with 32 MSBs 0x00000000a0840f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0840f2d
sw x3, 0(x2) # store x3 (0xa0840f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a0840f2d from memory into f10
li x3, 0xc95ec506 # load x3 with 32 MSBs 0x00000000c95ec506
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c95ec506
sw x3, 0(x2) # store x3 (0xc95ec506) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c95ec506 from memory into f8
fmul.d f8, f10, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x8, 0xb7b7bfff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf47c7112 # load x3 with 32 MSBs 0x00000000f47c7112
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f47c7112
sw x3, 0(x2) # store x3 (0xf47c7112) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f47c7112 from memory into f30
li x3, 0x57cdd514 # load x3 with 32 MSBs 0x0000000057cdd514
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057cdd514
sw x3, 0(x2) # store x3 (0x57cdd514) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000057cdd514 from memory into f9
fmul.d f8, f30, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x23, 0x019c18e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44555e96 # load x3 with 32 MSBs 0x0000000044555e96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044555e96
sw x3, 0(x2) # store x3 (0x44555e96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000044555e96 from memory into f30
li x3, 0x27a3e6fc # load x3 with 32 MSBs 0x0000000027a3e6fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027a3e6fc
sw x3, 0(x2) # store x3 (0x27a3e6fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000027a3e6fc from memory into f10
fmul.d f23, f30, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x19, 0x4d1530dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x695fd2a3 # load x3 with 32 MSBs 0x00000000695fd2a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000695fd2a3
sw x3, 0(x2) # store x3 (0x695fd2a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000695fd2a3 from memory into f17
li x3, 0x357ecd63 # load x3 with 32 MSBs 0x00000000357ecd63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000357ecd63
sw x3, 0(x2) # store x3 (0x357ecd63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000357ecd63 from memory into f11
fmul.d f19, f17, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x22, 0x1796f569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba84adbc # load x3 with 32 MSBs 0x00000000ba84adbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba84adbc
sw x3, 0(x2) # store x3 (0xba84adbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ba84adbc from memory into f6
li x3, 0xab976c71 # load x3 with 32 MSBs 0x00000000ab976c71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab976c71
sw x3, 0(x2) # store x3 (0xab976c71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ab976c71 from memory into f12
fmul.d f22, f6, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x24, 0xe7cdfdb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x392515d9 # load x3 with 32 MSBs 0x00000000392515d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000392515d9
sw x3, 0(x2) # store x3 (0x392515d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000392515d9 from memory into f12
li x3, 0x57e92ad0 # load x3 with 32 MSBs 0x0000000057e92ad0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057e92ad0
sw x3, 0(x2) # store x3 (0x57e92ad0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000057e92ad0 from memory into f13
fmul.d f24, f12, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x21, 0x8864804d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5a4edd0 # load x3 with 32 MSBs 0x00000000f5a4edd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5a4edd0
sw x3, 0(x2) # store x3 (0xf5a4edd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f5a4edd0 from memory into f19
li x3, 0x2ef46cae # load x3 with 32 MSBs 0x000000002ef46cae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ef46cae
sw x3, 0(x2) # store x3 (0x2ef46cae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002ef46cae from memory into f14
fmul.d f21, f19, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x15, 0xcc59ae72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf325b6e # load x3 with 32 MSBs 0x00000000bf325b6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf325b6e
sw x3, 0(x2) # store x3 (0xbf325b6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bf325b6e from memory into f17
li x3, 0x5e3e645c # load x3 with 32 MSBs 0x000000005e3e645c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e3e645c
sw x3, 0(x2) # store x3 (0x5e3e645c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000005e3e645c from memory into f15
fmul.d f15, f17, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x22, 0x47c14c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x955b0914 # load x3 with 32 MSBs 0x00000000955b0914
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000955b0914
sw x3, 0(x2) # store x3 (0x955b0914) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000955b0914 from memory into f18
li x3, 0x378246bf # load x3 with 32 MSBs 0x00000000378246bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000378246bf
sw x3, 0(x2) # store x3 (0x378246bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000378246bf from memory into f16
fmul.d f22, f18, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x8, 0x34650c6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ea468ab # load x3 with 32 MSBs 0x000000009ea468ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ea468ab
sw x3, 0(x2) # store x3 (0x9ea468ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009ea468ab from memory into f11
li x3, 0x0f135112 # load x3 with 32 MSBs 0x000000000f135112
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f135112
sw x3, 0(x2) # store x3 (0x0f135112) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000f135112 from memory into f17
fmul.d f8, f11, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x17, 0x10a9b8b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77069009 # load x3 with 32 MSBs 0x0000000077069009
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077069009
sw x3, 0(x2) # store x3 (0x77069009) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000077069009 from memory into f9
li x3, 0x286e96df # load x3 with 32 MSBs 0x00000000286e96df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000286e96df
sw x3, 0(x2) # store x3 (0x286e96df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000286e96df from memory into f18
fmul.d f17, f9, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x22, 0xe65a079a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c698182 # load x3 with 32 MSBs 0x000000002c698182
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c698182
sw x3, 0(x2) # store x3 (0x2c698182) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002c698182 from memory into f2
li x3, 0x9bd9992c # load x3 with 32 MSBs 0x000000009bd9992c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bd9992c
sw x3, 0(x2) # store x3 (0x9bd9992c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009bd9992c from memory into f19
fmul.d f22, f2, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x7, 0x53ce8b51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7bb8ad8e # load x3 with 32 MSBs 0x000000007bb8ad8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bb8ad8e
sw x3, 0(x2) # store x3 (0x7bb8ad8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007bb8ad8e from memory into f11
li x3, 0x3914b678 # load x3 with 32 MSBs 0x000000003914b678
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003914b678
sw x3, 0(x2) # store x3 (0x3914b678) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003914b678 from memory into f20
fmul.d f7, f11, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x3, 0xd5c23bcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec2984fa # load x3 with 32 MSBs 0x00000000ec2984fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec2984fa
sw x3, 0(x2) # store x3 (0xec2984fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ec2984fa from memory into f29
li x3, 0x8cb11a8f # load x3 with 32 MSBs 0x000000008cb11a8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008cb11a8f
sw x3, 0(x2) # store x3 (0x8cb11a8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008cb11a8f from memory into f21
fmul.d f3, f29, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x20, 0xe7d28103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb45c589 # load x3 with 32 MSBs 0x00000000db45c589
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db45c589
sw x3, 0(x2) # store x3 (0xdb45c589) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000db45c589 from memory into f21
li x3, 0xb3d8e5ac # load x3 with 32 MSBs 0x00000000b3d8e5ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3d8e5ac
sw x3, 0(x2) # store x3 (0xb3d8e5ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b3d8e5ac from memory into f22
fmul.d f20, f21, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x1, 0x3b91781f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x039270d1 # load x3 with 32 MSBs 0x00000000039270d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000039270d1
sw x3, 0(x2) # store x3 (0x039270d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000039270d1 from memory into f4
li x3, 0xaa8345eb # load x3 with 32 MSBs 0x00000000aa8345eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa8345eb
sw x3, 0(x2) # store x3 (0xaa8345eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000aa8345eb from memory into f23
fmul.d f1, f4, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x31, 0xa3a71fea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe42e9b78 # load x3 with 32 MSBs 0x00000000e42e9b78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e42e9b78
sw x3, 0(x2) # store x3 (0xe42e9b78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e42e9b78 from memory into f30
li x3, 0xb1ac2a13 # load x3 with 32 MSBs 0x00000000b1ac2a13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ac2a13
sw x3, 0(x2) # store x3 (0xb1ac2a13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b1ac2a13 from memory into f24
fmul.d f31, f30, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x30, 0xb9a178cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7d9ed43 # load x3 with 32 MSBs 0x00000000f7d9ed43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7d9ed43
sw x3, 0(x2) # store x3 (0xf7d9ed43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f7d9ed43 from memory into f14
li x3, 0x5dea73cd # load x3 with 32 MSBs 0x000000005dea73cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dea73cd
sw x3, 0(x2) # store x3 (0x5dea73cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005dea73cd from memory into f25
fmul.d f30, f14, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x26, 0xa27451d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35378264 # load x3 with 32 MSBs 0x0000000035378264
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035378264
sw x3, 0(x2) # store x3 (0x35378264) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000035378264 from memory into f20
li x3, 0x3076014c # load x3 with 32 MSBs 0x000000003076014c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003076014c
sw x3, 0(x2) # store x3 (0x3076014c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003076014c from memory into f26
fmul.d f26, f20, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x26, 0x81fbccca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8e8792c # load x3 with 32 MSBs 0x00000000f8e8792c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8e8792c
sw x3, 0(x2) # store x3 (0xf8e8792c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f8e8792c from memory into f22
li x3, 0x70357d75 # load x3 with 32 MSBs 0x0000000070357d75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070357d75
sw x3, 0(x2) # store x3 (0x70357d75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000070357d75 from memory into f27
fmul.d f26, f22, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x26, 0x24756ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x625bb315 # load x3 with 32 MSBs 0x00000000625bb315
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000625bb315
sw x3, 0(x2) # store x3 (0x625bb315) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000625bb315 from memory into f24
li x3, 0x20daf7c0 # load x3 with 32 MSBs 0x0000000020daf7c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020daf7c0
sw x3, 0(x2) # store x3 (0x20daf7c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000020daf7c0 from memory into f28
fmul.d f26, f24, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x9, 0x00b6ee4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf163b795 # load x3 with 32 MSBs 0x00000000f163b795
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f163b795
sw x3, 0(x2) # store x3 (0xf163b795) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f163b795 from memory into f11
li x3, 0x812d0b5a # load x3 with 32 MSBs 0x00000000812d0b5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000812d0b5a
sw x3, 0(x2) # store x3 (0x812d0b5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000812d0b5a from memory into f29
fmul.d f9, f11, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x20, 0xf22f55da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee8ddb0a # load x3 with 32 MSBs 0x00000000ee8ddb0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee8ddb0a
sw x3, 0(x2) # store x3 (0xee8ddb0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ee8ddb0a from memory into f3
li x3, 0x76db1f26 # load x3 with 32 MSBs 0x0000000076db1f26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076db1f26
sw x3, 0(x2) # store x3 (0x76db1f26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000076db1f26 from memory into f30
fmul.d f20, f3, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x12, 0x3b7fa1a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d09079b # load x3 with 32 MSBs 0x000000009d09079b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d09079b
sw x3, 0(x2) # store x3 (0x9d09079b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009d09079b from memory into f4
li x3, 0x25cb24a0 # load x3 with 32 MSBs 0x0000000025cb24a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025cb24a0
sw x3, 0(x2) # store x3 (0x25cb24a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000025cb24a0 from memory into f31
fmul.d f12, f4, f31 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
