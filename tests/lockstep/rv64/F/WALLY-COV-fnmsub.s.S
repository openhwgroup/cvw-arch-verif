///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv64/F/WALLY-COV-fnmsub.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x9, x16, x13 # perform first operation
fnmsub.s f29, f26, f28, f21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x8, x1, x28 # perform first operation
fnmsub.s f29, f27, f20, f3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x13, x1, x19 # perform first operation
fnmsub.s f31, f24, f30, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f5, f20, f18 # perform first operation
fnmsub.s f18, f5, f24, f31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f18, f28, f26 # perform first operation
fnmsub.s f18, f23, f18, f30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f5, f28, f25 # perform first operation
fnmsub.s f25, f16, f26, f5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f19, f30, f12 # perform first operation
fnmsub.s f19, f11, f1, f9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f5, f7, f12 # perform first operation
fnmsub.s f5, f16, f30, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f24, f19, f2 # perform first operation
fnmsub.s f24, f22, f5, f1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f17, f11, f23 # perform first operation
fnmsub.s f11, f27, f24, f29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f9, f7, f21 # perform first operation
fnmsub.s f21, f22, f2, f13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f18, f10, f15 # perform first operation
fnmsub.s f19, f30, f2, f21 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x31a3d4772aedb8c5 # load x3 with value 0x31a3d4772aedb8c5
sw x3, 0(x2) # store 0x31a3d4772aedb8c5 in memory
flw f0, 0(x2) # load 0x31a3d4772aedb8c5 from memory into f0
la x2, scratch
li x3, 0x8aa51e3a512276dc # load x3 with value 0x8aa51e3a512276dc
sw x3, 0(x2) # store 0x8aa51e3a512276dc in memory
flw f30, 0(x2) # load 0x8aa51e3a512276dc from memory into f30
la x2, scratch
li x3, 0x5bdf67adc85e0ff6 # load x3 with value 0x5bdf67adc85e0ff6
sw x3, 0(x2) # store 0x5bdf67adc85e0ff6 in memory
flw f19, 0(x2) # load 0x5bdf67adc85e0ff6 from memory into f19
fnmsub.s f10, f0, f30, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x20d1275a077cd524 # load x3 with value 0x20d1275a077cd524
sw x3, 0(x2) # store 0x20d1275a077cd524 in memory
flw f1, 0(x2) # load 0x20d1275a077cd524 from memory into f1
la x2, scratch
li x3, 0x3b0413cf69d0715c # load x3 with value 0x3b0413cf69d0715c
sw x3, 0(x2) # store 0x3b0413cf69d0715c in memory
flw f6, 0(x2) # load 0x3b0413cf69d0715c from memory into f6
la x2, scratch
li x3, 0x740f28b59b8ec02f # load x3 with value 0x740f28b59b8ec02f
sw x3, 0(x2) # store 0x740f28b59b8ec02f in memory
flw f25, 0(x2) # load 0x740f28b59b8ec02f from memory into f25
fnmsub.s f28, f1, f6, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0xf5c47bff20cab00f # load x3 with value 0xf5c47bff20cab00f
sw x3, 0(x2) # store 0xf5c47bff20cab00f in memory
flw f2, 0(x2) # load 0xf5c47bff20cab00f from memory into f2
la x2, scratch
li x3, 0x7268e5e3ab505233 # load x3 with value 0x7268e5e3ab505233
sw x3, 0(x2) # store 0x7268e5e3ab505233 in memory
flw f15, 0(x2) # load 0x7268e5e3ab505233 from memory into f15
la x2, scratch
li x3, 0xa43045c86d1e931e # load x3 with value 0xa43045c86d1e931e
sw x3, 0(x2) # store 0xa43045c86d1e931e in memory
flw f7, 0(x2) # load 0xa43045c86d1e931e from memory into f7
fnmsub.s f18, f2, f15, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x937daa83de74af53 # load x3 with value 0x937daa83de74af53
sw x3, 0(x2) # store 0x937daa83de74af53 in memory
flw f3, 0(x2) # load 0x937daa83de74af53 from memory into f3
la x2, scratch
li x3, 0x5f003a59a6b3226e # load x3 with value 0x5f003a59a6b3226e
sw x3, 0(x2) # store 0x5f003a59a6b3226e in memory
flw f15, 0(x2) # load 0x5f003a59a6b3226e from memory into f15
la x2, scratch
li x3, 0xe8edbdf9085c657d # load x3 with value 0xe8edbdf9085c657d
sw x3, 0(x2) # store 0xe8edbdf9085c657d in memory
flw f23, 0(x2) # load 0xe8edbdf9085c657d from memory into f23
fnmsub.s f28, f3, f15, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8cf3bf8e688434b4 # load x3 with value 0x8cf3bf8e688434b4
sw x3, 0(x2) # store 0x8cf3bf8e688434b4 in memory
flw f4, 0(x2) # load 0x8cf3bf8e688434b4 from memory into f4
la x2, scratch
li x3, 0x599106d58ed327d2 # load x3 with value 0x599106d58ed327d2
sw x3, 0(x2) # store 0x599106d58ed327d2 in memory
flw f5, 0(x2) # load 0x599106d58ed327d2 from memory into f5
la x2, scratch
li x3, 0x5b73bbf4b9af7da7 # load x3 with value 0x5b73bbf4b9af7da7
sw x3, 0(x2) # store 0x5b73bbf4b9af7da7 in memory
flw f29, 0(x2) # load 0x5b73bbf4b9af7da7 from memory into f29
fnmsub.s f16, f4, f5, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
la x2, scratch
li x3, 0x88cd5ba19b995646 # load x3 with value 0x88cd5ba19b995646
sw x3, 0(x2) # store 0x88cd5ba19b995646 in memory
flw f5, 0(x2) # load 0x88cd5ba19b995646 from memory into f5
la x2, scratch
li x3, 0x9289ac85d140cd82 # load x3 with value 0x9289ac85d140cd82
sw x3, 0(x2) # store 0x9289ac85d140cd82 in memory
flw f16, 0(x2) # load 0x9289ac85d140cd82 from memory into f16
la x2, scratch
li x3, 0x381d5898726d5064 # load x3 with value 0x381d5898726d5064
sw x3, 0(x2) # store 0x381d5898726d5064 in memory
flw f19, 0(x2) # load 0x381d5898726d5064 from memory into f19
fnmsub.s f10, f5, f16, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb8f03957e3df77dd # load x3 with value 0xb8f03957e3df77dd
sw x3, 0(x2) # store 0xb8f03957e3df77dd in memory
flw f6, 0(x2) # load 0xb8f03957e3df77dd from memory into f6
la x2, scratch
li x3, 0x211f9efa6f9f9782 # load x3 with value 0x211f9efa6f9f9782
sw x3, 0(x2) # store 0x211f9efa6f9f9782 in memory
flw f10, 0(x2) # load 0x211f9efa6f9f9782 from memory into f10
la x2, scratch
li x3, 0x8e81852a3a3da13e # load x3 with value 0x8e81852a3a3da13e
sw x3, 0(x2) # store 0x8e81852a3a3da13e in memory
flw f8, 0(x2) # load 0x8e81852a3a3da13e from memory into f8
fnmsub.s f5, f6, f10, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9ee863d1f17a495 # load x3 with value 0x9ee863d1f17a495
sw x3, 0(x2) # store 0x9ee863d1f17a495 in memory
flw f7, 0(x2) # load 0x9ee863d1f17a495 from memory into f7
la x2, scratch
li x3, 0x7d32d2392eea8a5a # load x3 with value 0x7d32d2392eea8a5a
sw x3, 0(x2) # store 0x7d32d2392eea8a5a in memory
flw f11, 0(x2) # load 0x7d32d2392eea8a5a from memory into f11
la x2, scratch
li x3, 0xd500ce6b6d2c4da0 # load x3 with value 0xd500ce6b6d2c4da0
sw x3, 0(x2) # store 0xd500ce6b6d2c4da0 in memory
flw f31, 0(x2) # load 0xd500ce6b6d2c4da0 from memory into f31
fnmsub.s f18, f7, f11, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0xb0841b8ddedc7b62 # load x3 with value 0xb0841b8ddedc7b62
sw x3, 0(x2) # store 0xb0841b8ddedc7b62 in memory
flw f8, 0(x2) # load 0xb0841b8ddedc7b62 from memory into f8
la x2, scratch
li x3, 0xebdac5b623a6ed31 # load x3 with value 0xebdac5b623a6ed31
sw x3, 0(x2) # store 0xebdac5b623a6ed31 in memory
flw f23, 0(x2) # load 0xebdac5b623a6ed31 from memory into f23
la x2, scratch
li x3, 0x799969cb4980c26 # load x3 with value 0x799969cb4980c26
sw x3, 0(x2) # store 0x799969cb4980c26 in memory
flw f12, 0(x2) # load 0x799969cb4980c26 from memory into f12
fnmsub.s f14, f8, f23, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x91e18ac8ad713669 # load x3 with value 0x91e18ac8ad713669
sw x3, 0(x2) # store 0x91e18ac8ad713669 in memory
flw f9, 0(x2) # load 0x91e18ac8ad713669 from memory into f9
la x2, scratch
li x3, 0x711bb202a311a9ad # load x3 with value 0x711bb202a311a9ad
sw x3, 0(x2) # store 0x711bb202a311a9ad in memory
flw f6, 0(x2) # load 0x711bb202a311a9ad from memory into f6
la x2, scratch
li x3, 0xcd95d4cfa9828b68 # load x3 with value 0xcd95d4cfa9828b68
sw x3, 0(x2) # store 0xcd95d4cfa9828b68 in memory
flw f24, 0(x2) # load 0xcd95d4cfa9828b68 from memory into f24
fnmsub.s f1, f9, f6, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0xc4ee70e0931e526d # load x3 with value 0xc4ee70e0931e526d
sw x3, 0(x2) # store 0xc4ee70e0931e526d in memory
flw f10, 0(x2) # load 0xc4ee70e0931e526d from memory into f10
la x2, scratch
li x3, 0x9626614c5fd1dfbb # load x3 with value 0x9626614c5fd1dfbb
sw x3, 0(x2) # store 0x9626614c5fd1dfbb in memory
flw f21, 0(x2) # load 0x9626614c5fd1dfbb from memory into f21
la x2, scratch
li x3, 0xe9e112cf22c67705 # load x3 with value 0xe9e112cf22c67705
sw x3, 0(x2) # store 0xe9e112cf22c67705 in memory
flw f18, 0(x2) # load 0xe9e112cf22c67705 from memory into f18
fnmsub.s f2, f10, f21, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0xe78a703e08087836 # load x3 with value 0xe78a703e08087836
sw x3, 0(x2) # store 0xe78a703e08087836 in memory
flw f11, 0(x2) # load 0xe78a703e08087836 from memory into f11
la x2, scratch
li x3, 0x4ae0a161bae4624e # load x3 with value 0x4ae0a161bae4624e
sw x3, 0(x2) # store 0x4ae0a161bae4624e in memory
flw f2, 0(x2) # load 0x4ae0a161bae4624e from memory into f2
la x2, scratch
li x3, 0xab95be283268e166 # load x3 with value 0xab95be283268e166
sw x3, 0(x2) # store 0xab95be283268e166 in memory
flw f18, 0(x2) # load 0xab95be283268e166 from memory into f18
fnmsub.s f10, f11, f2, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x4466ac971b480bb # load x3 with value 0x4466ac971b480bb
sw x3, 0(x2) # store 0x4466ac971b480bb in memory
flw f12, 0(x2) # load 0x4466ac971b480bb from memory into f12
la x2, scratch
li x3, 0x7ab7b5fedfe4f27 # load x3 with value 0x7ab7b5fedfe4f27
sw x3, 0(x2) # store 0x7ab7b5fedfe4f27 in memory
flw f24, 0(x2) # load 0x7ab7b5fedfe4f27 from memory into f24
la x2, scratch
li x3, 0x21c3929fd5b86dc8 # load x3 with value 0x21c3929fd5b86dc8
sw x3, 0(x2) # store 0x21c3929fd5b86dc8 in memory
flw f15, 0(x2) # load 0x21c3929fd5b86dc8 from memory into f15
fnmsub.s f26, f12, f24, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xb6a1ac53758db2e0 # load x3 with value 0xb6a1ac53758db2e0
sw x3, 0(x2) # store 0xb6a1ac53758db2e0 in memory
flw f13, 0(x2) # load 0xb6a1ac53758db2e0 from memory into f13
la x2, scratch
li x3, 0xb12e1ca162b699d8 # load x3 with value 0xb12e1ca162b699d8
sw x3, 0(x2) # store 0xb12e1ca162b699d8 in memory
flw f3, 0(x2) # load 0xb12e1ca162b699d8 from memory into f3
la x2, scratch
li x3, 0x9aa137a1c1a2db5d # load x3 with value 0x9aa137a1c1a2db5d
sw x3, 0(x2) # store 0x9aa137a1c1a2db5d in memory
flw f23, 0(x2) # load 0x9aa137a1c1a2db5d from memory into f23
fnmsub.s f22, f13, f3, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x4f5cbc87c3db0935 # load x3 with value 0x4f5cbc87c3db0935
sw x3, 0(x2) # store 0x4f5cbc87c3db0935 in memory
flw f14, 0(x2) # load 0x4f5cbc87c3db0935 from memory into f14
la x2, scratch
li x3, 0x821be221d860c2b1 # load x3 with value 0x821be221d860c2b1
sw x3, 0(x2) # store 0x821be221d860c2b1 in memory
flw f1, 0(x2) # load 0x821be221d860c2b1 from memory into f1
la x2, scratch
li x3, 0xfc632e9f43297bf0 # load x3 with value 0xfc632e9f43297bf0
sw x3, 0(x2) # store 0xfc632e9f43297bf0 in memory
flw f25, 0(x2) # load 0xfc632e9f43297bf0 from memory into f25
fnmsub.s f20, f14, f1, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x8a86bc5a0dffb028 # load x3 with value 0x8a86bc5a0dffb028
sw x3, 0(x2) # store 0x8a86bc5a0dffb028 in memory
flw f15, 0(x2) # load 0x8a86bc5a0dffb028 from memory into f15
la x2, scratch
li x3, 0x4a214602987a70da # load x3 with value 0x4a214602987a70da
sw x3, 0(x2) # store 0x4a214602987a70da in memory
flw f29, 0(x2) # load 0x4a214602987a70da from memory into f29
la x2, scratch
li x3, 0x14e7c51e57e8d8b4 # load x3 with value 0x14e7c51e57e8d8b4
sw x3, 0(x2) # store 0x14e7c51e57e8d8b4 in memory
flw f17, 0(x2) # load 0x14e7c51e57e8d8b4 from memory into f17
fnmsub.s f3, f15, f29, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xb67a6f8b8ab419e1 # load x3 with value 0xb67a6f8b8ab419e1
sw x3, 0(x2) # store 0xb67a6f8b8ab419e1 in memory
flw f16, 0(x2) # load 0xb67a6f8b8ab419e1 from memory into f16
la x2, scratch
li x3, 0x21c0066835ea3a0b # load x3 with value 0x21c0066835ea3a0b
sw x3, 0(x2) # store 0x21c0066835ea3a0b in memory
flw f28, 0(x2) # load 0x21c0066835ea3a0b from memory into f28
la x2, scratch
li x3, 0xac935ebb8fa9441 # load x3 with value 0xac935ebb8fa9441
sw x3, 0(x2) # store 0xac935ebb8fa9441 in memory
flw f7, 0(x2) # load 0xac935ebb8fa9441 from memory into f7
fnmsub.s f27, f16, f28, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x4e5e7fdf03fae4bf # load x3 with value 0x4e5e7fdf03fae4bf
sw x3, 0(x2) # store 0x4e5e7fdf03fae4bf in memory
flw f17, 0(x2) # load 0x4e5e7fdf03fae4bf from memory into f17
la x2, scratch
li x3, 0xef4ed74a27590177 # load x3 with value 0xef4ed74a27590177
sw x3, 0(x2) # store 0xef4ed74a27590177 in memory
flw f16, 0(x2) # load 0xef4ed74a27590177 from memory into f16
la x2, scratch
li x3, 0x41a40032f84fe155 # load x3 with value 0x41a40032f84fe155
sw x3, 0(x2) # store 0x41a40032f84fe155 in memory
flw f5, 0(x2) # load 0x41a40032f84fe155 from memory into f5
fnmsub.s f10, f17, f16, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0x917b0dafced6138b # load x3 with value 0x917b0dafced6138b
sw x3, 0(x2) # store 0x917b0dafced6138b in memory
flw f18, 0(x2) # load 0x917b0dafced6138b from memory into f18
la x2, scratch
li x3, 0xfdffe686e73551cc # load x3 with value 0xfdffe686e73551cc
sw x3, 0(x2) # store 0xfdffe686e73551cc in memory
flw f1, 0(x2) # load 0xfdffe686e73551cc from memory into f1
la x2, scratch
li x3, 0xe58664122a295320 # load x3 with value 0xe58664122a295320
sw x3, 0(x2) # store 0xe58664122a295320 in memory
flw f21, 0(x2) # load 0xe58664122a295320 from memory into f21
fnmsub.s f27, f18, f1, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x52cc85ed87de657 # load x3 with value 0x52cc85ed87de657
sw x3, 0(x2) # store 0x52cc85ed87de657 in memory
flw f19, 0(x2) # load 0x52cc85ed87de657 from memory into f19
la x2, scratch
li x3, 0xbdf8808a311ee2a4 # load x3 with value 0xbdf8808a311ee2a4
sw x3, 0(x2) # store 0xbdf8808a311ee2a4 in memory
flw f18, 0(x2) # load 0xbdf8808a311ee2a4 from memory into f18
la x2, scratch
li x3, 0xfb63a0fbccf31672 # load x3 with value 0xfb63a0fbccf31672
sw x3, 0(x2) # store 0xfb63a0fbccf31672 in memory
flw f23, 0(x2) # load 0xfb63a0fbccf31672 from memory into f23
fnmsub.s f13, f19, f18, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xfec6a4bec71ad887 # load x3 with value 0xfec6a4bec71ad887
sw x3, 0(x2) # store 0xfec6a4bec71ad887 in memory
flw f20, 0(x2) # load 0xfec6a4bec71ad887 from memory into f20
la x2, scratch
li x3, 0x92fe0150311f880f # load x3 with value 0x92fe0150311f880f
sw x3, 0(x2) # store 0x92fe0150311f880f in memory
flw f8, 0(x2) # load 0x92fe0150311f880f from memory into f8
la x2, scratch
li x3, 0x62280245873c09c1 # load x3 with value 0x62280245873c09c1
sw x3, 0(x2) # store 0x62280245873c09c1 in memory
flw f26, 0(x2) # load 0x62280245873c09c1 from memory into f26
fnmsub.s f29, f20, f8, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x5096ecdf22cf8ab3 # load x3 with value 0x5096ecdf22cf8ab3
sw x3, 0(x2) # store 0x5096ecdf22cf8ab3 in memory
flw f21, 0(x2) # load 0x5096ecdf22cf8ab3 from memory into f21
la x2, scratch
li x3, 0xe310f68d6433115d # load x3 with value 0xe310f68d6433115d
sw x3, 0(x2) # store 0xe310f68d6433115d in memory
flw f9, 0(x2) # load 0xe310f68d6433115d from memory into f9
la x2, scratch
li x3, 0x878fbb2c34c35d20 # load x3 with value 0x878fbb2c34c35d20
sw x3, 0(x2) # store 0x878fbb2c34c35d20 in memory
flw f30, 0(x2) # load 0x878fbb2c34c35d20 from memory into f30
fnmsub.s f2, f21, f9, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0xbbad467e71282212 # load x3 with value 0xbbad467e71282212
sw x3, 0(x2) # store 0xbbad467e71282212 in memory
flw f22, 0(x2) # load 0xbbad467e71282212 from memory into f22
la x2, scratch
li x3, 0xb81412d9b5b0b2cf # load x3 with value 0xb81412d9b5b0b2cf
sw x3, 0(x2) # store 0xb81412d9b5b0b2cf in memory
flw f24, 0(x2) # load 0xb81412d9b5b0b2cf from memory into f24
la x2, scratch
li x3, 0x11a39428021eb9de # load x3 with value 0x11a39428021eb9de
sw x3, 0(x2) # store 0x11a39428021eb9de in memory
flw f16, 0(x2) # load 0x11a39428021eb9de from memory into f16
fnmsub.s f10, f22, f24, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x616f956f9657d0c # load x3 with value 0x616f956f9657d0c
sw x3, 0(x2) # store 0x616f956f9657d0c in memory
flw f23, 0(x2) # load 0x616f956f9657d0c from memory into f23
la x2, scratch
li x3, 0xcba9c806fab50a # load x3 with value 0xcba9c806fab50a
sw x3, 0(x2) # store 0xcba9c806fab50a in memory
flw f13, 0(x2) # load 0xcba9c806fab50a from memory into f13
la x2, scratch
li x3, 0xb15263e54f0908be # load x3 with value 0xb15263e54f0908be
sw x3, 0(x2) # store 0xb15263e54f0908be in memory
flw f22, 0(x2) # load 0xb15263e54f0908be from memory into f22
fnmsub.s f20, f23, f13, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0xf5dab8f5b4f77835 # load x3 with value 0xf5dab8f5b4f77835
sw x3, 0(x2) # store 0xf5dab8f5b4f77835 in memory
flw f24, 0(x2) # load 0xf5dab8f5b4f77835 from memory into f24
la x2, scratch
li x3, 0x3e8eb797373e3264 # load x3 with value 0x3e8eb797373e3264
sw x3, 0(x2) # store 0x3e8eb797373e3264 in memory
flw f28, 0(x2) # load 0x3e8eb797373e3264 from memory into f28
la x2, scratch
li x3, 0x62eb1eed81c66246 # load x3 with value 0x62eb1eed81c66246
sw x3, 0(x2) # store 0x62eb1eed81c66246 in memory
flw f10, 0(x2) # load 0x62eb1eed81c66246 from memory into f10
fnmsub.s f5, f24, f28, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0xed7ea3b0de19cb5b # load x3 with value 0xed7ea3b0de19cb5b
sw x3, 0(x2) # store 0xed7ea3b0de19cb5b in memory
flw f25, 0(x2) # load 0xed7ea3b0de19cb5b from memory into f25
la x2, scratch
li x3, 0x41fb087272bf7c50 # load x3 with value 0x41fb087272bf7c50
sw x3, 0(x2) # store 0x41fb087272bf7c50 in memory
flw f24, 0(x2) # load 0x41fb087272bf7c50 from memory into f24
la x2, scratch
li x3, 0x79017263e25b8ae5 # load x3 with value 0x79017263e25b8ae5
sw x3, 0(x2) # store 0x79017263e25b8ae5 in memory
flw f16, 0(x2) # load 0x79017263e25b8ae5 from memory into f16
fnmsub.s f21, f25, f24, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x920ecdc8789ae16b # load x3 with value 0x920ecdc8789ae16b
sw x3, 0(x2) # store 0x920ecdc8789ae16b in memory
flw f26, 0(x2) # load 0x920ecdc8789ae16b from memory into f26
la x2, scratch
li x3, 0x376bfd598fc200bf # load x3 with value 0x376bfd598fc200bf
sw x3, 0(x2) # store 0x376bfd598fc200bf in memory
flw f9, 0(x2) # load 0x376bfd598fc200bf from memory into f9
la x2, scratch
li x3, 0x76a862dfb902e11 # load x3 with value 0x76a862dfb902e11
sw x3, 0(x2) # store 0x76a862dfb902e11 in memory
flw f7, 0(x2) # load 0x76a862dfb902e11 from memory into f7
fnmsub.s f18, f26, f9, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x44ac0c12ebb534b4 # load x3 with value 0x44ac0c12ebb534b4
sw x3, 0(x2) # store 0x44ac0c12ebb534b4 in memory
flw f27, 0(x2) # load 0x44ac0c12ebb534b4 from memory into f27
la x2, scratch
li x3, 0x4027daa60f9c614a # load x3 with value 0x4027daa60f9c614a
sw x3, 0(x2) # store 0x4027daa60f9c614a in memory
flw f29, 0(x2) # load 0x4027daa60f9c614a from memory into f29
la x2, scratch
li x3, 0x465bcf73d25bae93 # load x3 with value 0x465bcf73d25bae93
sw x3, 0(x2) # store 0x465bcf73d25bae93 in memory
flw f3, 0(x2) # load 0x465bcf73d25bae93 from memory into f3
fnmsub.s f11, f27, f29, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xa7c02771d433ce03 # load x3 with value 0xa7c02771d433ce03
sw x3, 0(x2) # store 0xa7c02771d433ce03 in memory
flw f28, 0(x2) # load 0xa7c02771d433ce03 from memory into f28
la x2, scratch
li x3, 0x95bb3db6624baba8 # load x3 with value 0x95bb3db6624baba8
sw x3, 0(x2) # store 0x95bb3db6624baba8 in memory
flw f11, 0(x2) # load 0x95bb3db6624baba8 from memory into f11
la x2, scratch
li x3, 0x2f40a5b022353da8 # load x3 with value 0x2f40a5b022353da8
sw x3, 0(x2) # store 0x2f40a5b022353da8 in memory
flw f12, 0(x2) # load 0x2f40a5b022353da8 from memory into f12
fnmsub.s f3, f28, f11, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xf11bf0dd3a08b862 # load x3 with value 0xf11bf0dd3a08b862
sw x3, 0(x2) # store 0xf11bf0dd3a08b862 in memory
flw f29, 0(x2) # load 0xf11bf0dd3a08b862 from memory into f29
la x2, scratch
li x3, 0xacd8a37eb38dff32 # load x3 with value 0xacd8a37eb38dff32
sw x3, 0(x2) # store 0xacd8a37eb38dff32 in memory
flw f20, 0(x2) # load 0xacd8a37eb38dff32 from memory into f20
la x2, scratch
li x3, 0xa01d8af953b23288 # load x3 with value 0xa01d8af953b23288
sw x3, 0(x2) # store 0xa01d8af953b23288 in memory
flw f22, 0(x2) # load 0xa01d8af953b23288 from memory into f22
fnmsub.s f9, f29, f20, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0xb7137d7de16b6e97 # load x3 with value 0xb7137d7de16b6e97
sw x3, 0(x2) # store 0xb7137d7de16b6e97 in memory
flw f30, 0(x2) # load 0xb7137d7de16b6e97 from memory into f30
la x2, scratch
li x3, 0xd55940dc37beead5 # load x3 with value 0xd55940dc37beead5
sw x3, 0(x2) # store 0xd55940dc37beead5 in memory
flw f3, 0(x2) # load 0xd55940dc37beead5 from memory into f3
la x2, scratch
li x3, 0x1fcd4521df8243b # load x3 with value 0x1fcd4521df8243b
sw x3, 0(x2) # store 0x1fcd4521df8243b in memory
flw f6, 0(x2) # load 0x1fcd4521df8243b from memory into f6
fnmsub.s f22, f30, f3, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xf5217b181c6e87ee # load x3 with value 0xf5217b181c6e87ee
sw x3, 0(x2) # store 0xf5217b181c6e87ee in memory
flw f31, 0(x2) # load 0xf5217b181c6e87ee from memory into f31
la x2, scratch
li x3, 0xe3a5e11cd3460fa3 # load x3 with value 0xe3a5e11cd3460fa3
sw x3, 0(x2) # store 0xe3a5e11cd3460fa3 in memory
flw f6, 0(x2) # load 0xe3a5e11cd3460fa3 from memory into f6
la x2, scratch
li x3, 0xc5f81e77e0b58179 # load x3 with value 0xc5f81e77e0b58179
sw x3, 0(x2) # store 0xc5f81e77e0b58179 in memory
flw f11, 0(x2) # load 0xc5f81e77e0b58179 from memory into f11
fnmsub.s f14, f31, f6, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x1cacd299c696ee75 # load x3 with value 0x1cacd299c696ee75
sw x3, 0(x2) # store 0x1cacd299c696ee75 in memory
flw f22, 0(x2) # load 0x1cacd299c696ee75 from memory into f22
la x2, scratch
li x3, 0x3becdeab17b638f0 # load x3 with value 0x3becdeab17b638f0
sw x3, 0(x2) # store 0x3becdeab17b638f0 in memory
flw f0, 0(x2) # load 0x3becdeab17b638f0 from memory into f0
la x2, scratch
li x3, 0xea49739231f758e0 # load x3 with value 0xea49739231f758e0
sw x3, 0(x2) # store 0xea49739231f758e0 in memory
flw f10, 0(x2) # load 0xea49739231f758e0 from memory into f10
fnmsub.s f23, f22, f0, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0xde4eee42ce84039a # load x3 with value 0xde4eee42ce84039a
sw x3, 0(x2) # store 0xde4eee42ce84039a in memory
flw f31, 0(x2) # load 0xde4eee42ce84039a from memory into f31
la x2, scratch
li x3, 0x129abb24a8fc9b35 # load x3 with value 0x129abb24a8fc9b35
sw x3, 0(x2) # store 0x129abb24a8fc9b35 in memory
flw f1, 0(x2) # load 0x129abb24a8fc9b35 from memory into f1
la x2, scratch
li x3, 0x16df1a9bf465fd84 # load x3 with value 0x16df1a9bf465fd84
sw x3, 0(x2) # store 0x16df1a9bf465fd84 in memory
flw f17, 0(x2) # load 0x16df1a9bf465fd84 from memory into f17
fnmsub.s f2, f31, f1, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0xff9b2f700d3fd7dc # load x3 with value 0xff9b2f700d3fd7dc
sw x3, 0(x2) # store 0xff9b2f700d3fd7dc in memory
flw f31, 0(x2) # load 0xff9b2f700d3fd7dc from memory into f31
la x2, scratch
li x3, 0xa85f324bcbaf39e8 # load x3 with value 0xa85f324bcbaf39e8
sw x3, 0(x2) # store 0xa85f324bcbaf39e8 in memory
flw f2, 0(x2) # load 0xa85f324bcbaf39e8 from memory into f2
la x2, scratch
li x3, 0x52fb1a2f6cf617f7 # load x3 with value 0x52fb1a2f6cf617f7
sw x3, 0(x2) # store 0x52fb1a2f6cf617f7 in memory
flw f29, 0(x2) # load 0x52fb1a2f6cf617f7 from memory into f29
fnmsub.s f14, f31, f2, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x4a165badd55ac37c # load x3 with value 0x4a165badd55ac37c
sw x3, 0(x2) # store 0x4a165badd55ac37c in memory
flw f7, 0(x2) # load 0x4a165badd55ac37c from memory into f7
la x2, scratch
li x3, 0xe297feb9f123271a # load x3 with value 0xe297feb9f123271a
sw x3, 0(x2) # store 0xe297feb9f123271a in memory
flw f3, 0(x2) # load 0xe297feb9f123271a from memory into f3
la x2, scratch
li x3, 0xeb4d3e6623c0e07f # load x3 with value 0xeb4d3e6623c0e07f
sw x3, 0(x2) # store 0xeb4d3e6623c0e07f in memory
flw f24, 0(x2) # load 0xeb4d3e6623c0e07f from memory into f24
fnmsub.s f8, f7, f3, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9b1f0c9a99ea4e28 # load x3 with value 0x9b1f0c9a99ea4e28
sw x3, 0(x2) # store 0x9b1f0c9a99ea4e28 in memory
flw f10, 0(x2) # load 0x9b1f0c9a99ea4e28 from memory into f10
la x2, scratch
li x3, 0x6c92049987acaa6c # load x3 with value 0x6c92049987acaa6c
sw x3, 0(x2) # store 0x6c92049987acaa6c in memory
flw f4, 0(x2) # load 0x6c92049987acaa6c from memory into f4
la x2, scratch
li x3, 0x286db61bdf78cb84 # load x3 with value 0x286db61bdf78cb84
sw x3, 0(x2) # store 0x286db61bdf78cb84 in memory
flw f16, 0(x2) # load 0x286db61bdf78cb84 from memory into f16
fnmsub.s f2, f10, f4, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb45834610354aef2 # load x3 with value 0xb45834610354aef2
sw x3, 0(x2) # store 0xb45834610354aef2 in memory
flw f15, 0(x2) # load 0xb45834610354aef2 from memory into f15
la x2, scratch
li x3, 0x9bfed65e19b11084 # load x3 with value 0x9bfed65e19b11084
sw x3, 0(x2) # store 0x9bfed65e19b11084 in memory
flw f5, 0(x2) # load 0x9bfed65e19b11084 from memory into f5
la x2, scratch
li x3, 0xaa0627f29e6854f7 # load x3 with value 0xaa0627f29e6854f7
sw x3, 0(x2) # store 0xaa0627f29e6854f7 in memory
flw f28, 0(x2) # load 0xaa0627f29e6854f7 from memory into f28
fnmsub.s f2, f15, f5, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1ac0d22b6d1facff # load x3 with value 0x1ac0d22b6d1facff
sw x3, 0(x2) # store 0x1ac0d22b6d1facff in memory
flw f14, 0(x2) # load 0x1ac0d22b6d1facff from memory into f14
la x2, scratch
li x3, 0xff7d9bb3a09bfb70 # load x3 with value 0xff7d9bb3a09bfb70
sw x3, 0(x2) # store 0xff7d9bb3a09bfb70 in memory
flw f6, 0(x2) # load 0xff7d9bb3a09bfb70 from memory into f6
la x2, scratch
li x3, 0xcd80d242a346f0b7 # load x3 with value 0xcd80d242a346f0b7
sw x3, 0(x2) # store 0xcd80d242a346f0b7 in memory
flw f30, 0(x2) # load 0xcd80d242a346f0b7 from memory into f30
fnmsub.s f22, f14, f6, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe187fbada748aa33 # load x3 with value 0xe187fbada748aa33
sw x3, 0(x2) # store 0xe187fbada748aa33 in memory
flw f3, 0(x2) # load 0xe187fbada748aa33 from memory into f3
la x2, scratch
li x3, 0x197efb51114dc12a # load x3 with value 0x197efb51114dc12a
sw x3, 0(x2) # store 0x197efb51114dc12a in memory
flw f7, 0(x2) # load 0x197efb51114dc12a from memory into f7
la x2, scratch
li x3, 0xf7c17baca63bdfe # load x3 with value 0xf7c17baca63bdfe
sw x3, 0(x2) # store 0xf7c17baca63bdfe in memory
flw f5, 0(x2) # load 0xf7c17baca63bdfe from memory into f5
fnmsub.s f2, f3, f7, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xae1165e59daeb99c # load x3 with value 0xae1165e59daeb99c
sw x3, 0(x2) # store 0xae1165e59daeb99c in memory
flw f31, 0(x2) # load 0xae1165e59daeb99c from memory into f31
la x2, scratch
li x3, 0x46f94461274dfdbf # load x3 with value 0x46f94461274dfdbf
sw x3, 0(x2) # store 0x46f94461274dfdbf in memory
flw f8, 0(x2) # load 0x46f94461274dfdbf from memory into f8
la x2, scratch
li x3, 0x1bc7e42e8ddf9b6c # load x3 with value 0x1bc7e42e8ddf9b6c
sw x3, 0(x2) # store 0x1bc7e42e8ddf9b6c in memory
flw f30, 0(x2) # load 0x1bc7e42e8ddf9b6c from memory into f30
fnmsub.s f16, f31, f8, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xc240658b8285d2ee # load x3 with value 0xc240658b8285d2ee
sw x3, 0(x2) # store 0xc240658b8285d2ee in memory
flw f12, 0(x2) # load 0xc240658b8285d2ee from memory into f12
la x2, scratch
li x3, 0xc2c6ddf77977467 # load x3 with value 0xc2c6ddf77977467
sw x3, 0(x2) # store 0xc2c6ddf77977467 in memory
flw f9, 0(x2) # load 0xc2c6ddf77977467 from memory into f9
la x2, scratch
li x3, 0xcf190f26cfa9b042 # load x3 with value 0xcf190f26cfa9b042
sw x3, 0(x2) # store 0xcf190f26cfa9b042 in memory
flw f20, 0(x2) # load 0xcf190f26cfa9b042 from memory into f20
fnmsub.s f26, f12, f9, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x28411f31675bd38c # load x3 with value 0x28411f31675bd38c
sw x3, 0(x2) # store 0x28411f31675bd38c in memory
flw f15, 0(x2) # load 0x28411f31675bd38c from memory into f15
la x2, scratch
li x3, 0xceb725f965514fd7 # load x3 with value 0xceb725f965514fd7
sw x3, 0(x2) # store 0xceb725f965514fd7 in memory
flw f10, 0(x2) # load 0xceb725f965514fd7 from memory into f10
la x2, scratch
li x3, 0x41ad3e40335b1b68 # load x3 with value 0x41ad3e40335b1b68
sw x3, 0(x2) # store 0x41ad3e40335b1b68 in memory
flw f18, 0(x2) # load 0x41ad3e40335b1b68 from memory into f18
fnmsub.s f25, f15, f10, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0xb4f74dd4c39a0c35 # load x3 with value 0xb4f74dd4c39a0c35
sw x3, 0(x2) # store 0xb4f74dd4c39a0c35 in memory
flw f9, 0(x2) # load 0xb4f74dd4c39a0c35 from memory into f9
la x2, scratch
li x3, 0xed828099f98b10e2 # load x3 with value 0xed828099f98b10e2
sw x3, 0(x2) # store 0xed828099f98b10e2 in memory
flw f11, 0(x2) # load 0xed828099f98b10e2 from memory into f11
la x2, scratch
li x3, 0xfdecc7a3fe1dd2a # load x3 with value 0xfdecc7a3fe1dd2a
sw x3, 0(x2) # store 0xfdecc7a3fe1dd2a in memory
flw f22, 0(x2) # load 0xfdecc7a3fe1dd2a from memory into f22
fnmsub.s f3, f9, f11, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x9e648af394efd79d # load x3 with value 0x9e648af394efd79d
sw x3, 0(x2) # store 0x9e648af394efd79d in memory
flw f19, 0(x2) # load 0x9e648af394efd79d from memory into f19
la x2, scratch
li x3, 0xa9514f505aa2c214 # load x3 with value 0xa9514f505aa2c214
sw x3, 0(x2) # store 0xa9514f505aa2c214 in memory
flw f12, 0(x2) # load 0xa9514f505aa2c214 from memory into f12
la x2, scratch
li x3, 0xae17888ed872f7dd # load x3 with value 0xae17888ed872f7dd
sw x3, 0(x2) # store 0xae17888ed872f7dd in memory
flw f26, 0(x2) # load 0xae17888ed872f7dd from memory into f26
fnmsub.s f30, f19, f12, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0xc6d2b3e1729b6038 # load x3 with value 0xc6d2b3e1729b6038
sw x3, 0(x2) # store 0xc6d2b3e1729b6038 in memory
flw f27, 0(x2) # load 0xc6d2b3e1729b6038 from memory into f27
la x2, scratch
li x3, 0x99fa6ceb8f124589 # load x3 with value 0x99fa6ceb8f124589
sw x3, 0(x2) # store 0x99fa6ceb8f124589 in memory
flw f13, 0(x2) # load 0x99fa6ceb8f124589 from memory into f13
la x2, scratch
li x3, 0x8da41aeaf663b7fd # load x3 with value 0x8da41aeaf663b7fd
sw x3, 0(x2) # store 0x8da41aeaf663b7fd in memory
flw f6, 0(x2) # load 0x8da41aeaf663b7fd from memory into f6
fnmsub.s f3, f27, f13, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x2bc2639d6bc959e4 # load x3 with value 0x2bc2639d6bc959e4
sw x3, 0(x2) # store 0x2bc2639d6bc959e4 in memory
flw f13, 0(x2) # load 0x2bc2639d6bc959e4 from memory into f13
la x2, scratch
li x3, 0x31b51256b5fa95a1 # load x3 with value 0x31b51256b5fa95a1
sw x3, 0(x2) # store 0x31b51256b5fa95a1 in memory
flw f14, 0(x2) # load 0x31b51256b5fa95a1 from memory into f14
la x2, scratch
li x3, 0xcac27183644c8128 # load x3 with value 0xcac27183644c8128
sw x3, 0(x2) # store 0xcac27183644c8128 in memory
flw f19, 0(x2) # load 0xcac27183644c8128 from memory into f19
fnmsub.s f17, f13, f14, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0xbe15fb63c52dcf85 # load x3 with value 0xbe15fb63c52dcf85
sw x3, 0(x2) # store 0xbe15fb63c52dcf85 in memory
flw f27, 0(x2) # load 0xbe15fb63c52dcf85 from memory into f27
la x2, scratch
li x3, 0xa26bf7d10b42bb9e # load x3 with value 0xa26bf7d10b42bb9e
sw x3, 0(x2) # store 0xa26bf7d10b42bb9e in memory
flw f15, 0(x2) # load 0xa26bf7d10b42bb9e from memory into f15
la x2, scratch
li x3, 0x268fc1f60fc2dcec # load x3 with value 0x268fc1f60fc2dcec
sw x3, 0(x2) # store 0x268fc1f60fc2dcec in memory
flw f24, 0(x2) # load 0x268fc1f60fc2dcec from memory into f24
fnmsub.s f14, f27, f15, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x51850b2af37dddff # load x3 with value 0x51850b2af37dddff
sw x3, 0(x2) # store 0x51850b2af37dddff in memory
flw f5, 0(x2) # load 0x51850b2af37dddff from memory into f5
la x2, scratch
li x3, 0xf3e8381ad5de53ab # load x3 with value 0xf3e8381ad5de53ab
sw x3, 0(x2) # store 0xf3e8381ad5de53ab in memory
flw f16, 0(x2) # load 0xf3e8381ad5de53ab from memory into f16
la x2, scratch
li x3, 0x9d3f2ad61b02d4d7 # load x3 with value 0x9d3f2ad61b02d4d7
sw x3, 0(x2) # store 0x9d3f2ad61b02d4d7 in memory
flw f7, 0(x2) # load 0x9d3f2ad61b02d4d7 from memory into f7
fnmsub.s f14, f5, f16, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xe2f8ea91d5158c6 # load x3 with value 0xe2f8ea91d5158c6
sw x3, 0(x2) # store 0xe2f8ea91d5158c6 in memory
flw f18, 0(x2) # load 0xe2f8ea91d5158c6 from memory into f18
la x2, scratch
li x3, 0x919e6a63367ec3dd # load x3 with value 0x919e6a63367ec3dd
sw x3, 0(x2) # store 0x919e6a63367ec3dd in memory
flw f17, 0(x2) # load 0x919e6a63367ec3dd from memory into f17
la x2, scratch
li x3, 0x257fe29b71bb3576 # load x3 with value 0x257fe29b71bb3576
sw x3, 0(x2) # store 0x257fe29b71bb3576 in memory
flw f22, 0(x2) # load 0x257fe29b71bb3576 from memory into f22
fnmsub.s f12, f18, f17, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x4233760b60b91e93 # load x3 with value 0x4233760b60b91e93
sw x3, 0(x2) # store 0x4233760b60b91e93 in memory
flw f29, 0(x2) # load 0x4233760b60b91e93 from memory into f29
la x2, scratch
li x3, 0xc1742dd8f1bffb37 # load x3 with value 0xc1742dd8f1bffb37
sw x3, 0(x2) # store 0xc1742dd8f1bffb37 in memory
flw f18, 0(x2) # load 0xc1742dd8f1bffb37 from memory into f18
la x2, scratch
li x3, 0x1f52781bf9d73dd8 # load x3 with value 0x1f52781bf9d73dd8
sw x3, 0(x2) # store 0x1f52781bf9d73dd8 in memory
flw f1, 0(x2) # load 0x1f52781bf9d73dd8 from memory into f1
fnmsub.s f12, f29, f18, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xe4426d0b8d6d09b # load x3 with value 0xe4426d0b8d6d09b
sw x3, 0(x2) # store 0xe4426d0b8d6d09b in memory
flw f5, 0(x2) # load 0xe4426d0b8d6d09b from memory into f5
la x2, scratch
li x3, 0xd26b2b9dc5c0577b # load x3 with value 0xd26b2b9dc5c0577b
sw x3, 0(x2) # store 0xd26b2b9dc5c0577b in memory
flw f19, 0(x2) # load 0xd26b2b9dc5c0577b from memory into f19
la x2, scratch
li x3, 0x4688d9e1d4a8f69e # load x3 with value 0x4688d9e1d4a8f69e
sw x3, 0(x2) # store 0x4688d9e1d4a8f69e in memory
flw f23, 0(x2) # load 0x4688d9e1d4a8f69e from memory into f23
fnmsub.s f2, f5, f19, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x19a311aec843402d # load x3 with value 0x19a311aec843402d
sw x3, 0(x2) # store 0x19a311aec843402d in memory
flw f18, 0(x2) # load 0x19a311aec843402d from memory into f18
la x2, scratch
li x3, 0x5fd46ed82a3ff23 # load x3 with value 0x5fd46ed82a3ff23
sw x3, 0(x2) # store 0x5fd46ed82a3ff23 in memory
flw f20, 0(x2) # load 0x5fd46ed82a3ff23 from memory into f20
la x2, scratch
li x3, 0xc0e35af3354c81e1 # load x3 with value 0xc0e35af3354c81e1
sw x3, 0(x2) # store 0xc0e35af3354c81e1 in memory
flw f30, 0(x2) # load 0xc0e35af3354c81e1 from memory into f30
fnmsub.s f24, f18, f20, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0xbeef97a1768d3b42 # load x3 with value 0xbeef97a1768d3b42
sw x3, 0(x2) # store 0xbeef97a1768d3b42 in memory
flw f19, 0(x2) # load 0xbeef97a1768d3b42 from memory into f19
la x2, scratch
li x3, 0xc74885a1246edc09 # load x3 with value 0xc74885a1246edc09
sw x3, 0(x2) # store 0xc74885a1246edc09 in memory
flw f21, 0(x2) # load 0xc74885a1246edc09 from memory into f21
la x2, scratch
li x3, 0x7b7d1d95e3e4ecba # load x3 with value 0x7b7d1d95e3e4ecba
sw x3, 0(x2) # store 0x7b7d1d95e3e4ecba in memory
flw f31, 0(x2) # load 0x7b7d1d95e3e4ecba from memory into f31
fnmsub.s f25, f19, f21, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0xbd5d3933c5238184 # load x3 with value 0xbd5d3933c5238184
sw x3, 0(x2) # store 0xbd5d3933c5238184 in memory
flw f9, 0(x2) # load 0xbd5d3933c5238184 from memory into f9
la x2, scratch
li x3, 0xe94a9eb67e0b63c4 # load x3 with value 0xe94a9eb67e0b63c4
sw x3, 0(x2) # store 0xe94a9eb67e0b63c4 in memory
flw f22, 0(x2) # load 0xe94a9eb67e0b63c4 from memory into f22
la x2, scratch
li x3, 0xa1b6faf521df7a4d # load x3 with value 0xa1b6faf521df7a4d
sw x3, 0(x2) # store 0xa1b6faf521df7a4d in memory
flw f6, 0(x2) # load 0xa1b6faf521df7a4d from memory into f6
fnmsub.s f14, f9, f22, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x44a35cbf4a3b08ba # load x3 with value 0x44a35cbf4a3b08ba
sw x3, 0(x2) # store 0x44a35cbf4a3b08ba in memory
flw f21, 0(x2) # load 0x44a35cbf4a3b08ba from memory into f21
la x2, scratch
li x3, 0x680f89908999b151 # load x3 with value 0x680f89908999b151
sw x3, 0(x2) # store 0x680f89908999b151 in memory
flw f23, 0(x2) # load 0x680f89908999b151 from memory into f23
la x2, scratch
li x3, 0x91577e97a06fe1cd # load x3 with value 0x91577e97a06fe1cd
sw x3, 0(x2) # store 0x91577e97a06fe1cd in memory
flw f11, 0(x2) # load 0x91577e97a06fe1cd from memory into f11
fnmsub.s f12, f21, f23, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xb9da3533b5407e3a # load x3 with value 0xb9da3533b5407e3a
sw x3, 0(x2) # store 0xb9da3533b5407e3a in memory
flw f21, 0(x2) # load 0xb9da3533b5407e3a from memory into f21
la x2, scratch
li x3, 0xd2178266e5646b2 # load x3 with value 0xd2178266e5646b2
sw x3, 0(x2) # store 0xd2178266e5646b2 in memory
flw f24, 0(x2) # load 0xd2178266e5646b2 from memory into f24
la x2, scratch
li x3, 0x72336a7ac0433105 # load x3 with value 0x72336a7ac0433105
sw x3, 0(x2) # store 0x72336a7ac0433105 in memory
flw f30, 0(x2) # load 0x72336a7ac0433105 from memory into f30
fnmsub.s f1, f21, f24, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x313b495e1cfb9c90 # load x3 with value 0x313b495e1cfb9c90
sw x3, 0(x2) # store 0x313b495e1cfb9c90 in memory
flw f24, 0(x2) # load 0x313b495e1cfb9c90 from memory into f24
la x2, scratch
li x3, 0x995713c06bfe9a03 # load x3 with value 0x995713c06bfe9a03
sw x3, 0(x2) # store 0x995713c06bfe9a03 in memory
flw f25, 0(x2) # load 0x995713c06bfe9a03 from memory into f25
la x2, scratch
li x3, 0x2bf0384e7881ced2 # load x3 with value 0x2bf0384e7881ced2
sw x3, 0(x2) # store 0x2bf0384e7881ced2 in memory
flw f18, 0(x2) # load 0x2bf0384e7881ced2 from memory into f18
fnmsub.s f22, f24, f25, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0xb9613f1545d69f55 # load x3 with value 0xb9613f1545d69f55
sw x3, 0(x2) # store 0xb9613f1545d69f55 in memory
flw f20, 0(x2) # load 0xb9613f1545d69f55 from memory into f20
la x2, scratch
li x3, 0x6e6bfa4885019597 # load x3 with value 0x6e6bfa4885019597
sw x3, 0(x2) # store 0x6e6bfa4885019597 in memory
flw f26, 0(x2) # load 0x6e6bfa4885019597 from memory into f26
la x2, scratch
li x3, 0xa83e0f570804fe33 # load x3 with value 0xa83e0f570804fe33
sw x3, 0(x2) # store 0xa83e0f570804fe33 in memory
flw f6, 0(x2) # load 0xa83e0f570804fe33 from memory into f6
fnmsub.s f30, f20, f26, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x574eedabd60d3e1 # load x3 with value 0x574eedabd60d3e1
sw x3, 0(x2) # store 0x574eedabd60d3e1 in memory
flw f8, 0(x2) # load 0x574eedabd60d3e1 from memory into f8
la x2, scratch
li x3, 0x89f0c06648de550d # load x3 with value 0x89f0c06648de550d
sw x3, 0(x2) # store 0x89f0c06648de550d in memory
flw f27, 0(x2) # load 0x89f0c06648de550d from memory into f27
la x2, scratch
li x3, 0xc3d19efa6c118dd7 # load x3 with value 0xc3d19efa6c118dd7
sw x3, 0(x2) # store 0xc3d19efa6c118dd7 in memory
flw f15, 0(x2) # load 0xc3d19efa6c118dd7 from memory into f15
fnmsub.s f30, f8, f27, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0xe6db3bbb90aafab3 # load x3 with value 0xe6db3bbb90aafab3
sw x3, 0(x2) # store 0xe6db3bbb90aafab3 in memory
flw f27, 0(x2) # load 0xe6db3bbb90aafab3 from memory into f27
la x2, scratch
li x3, 0x70806c0fc9e29c03 # load x3 with value 0x70806c0fc9e29c03
sw x3, 0(x2) # store 0x70806c0fc9e29c03 in memory
flw f28, 0(x2) # load 0x70806c0fc9e29c03 from memory into f28
la x2, scratch
li x3, 0x28f72f6f0189b1f9 # load x3 with value 0x28f72f6f0189b1f9
sw x3, 0(x2) # store 0x28f72f6f0189b1f9 in memory
flw f18, 0(x2) # load 0x28f72f6f0189b1f9 from memory into f18
fnmsub.s f28, f27, f28, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xd9c4be48de9c20f4 # load x3 with value 0xd9c4be48de9c20f4
sw x3, 0(x2) # store 0xd9c4be48de9c20f4 in memory
flw f13, 0(x2) # load 0xd9c4be48de9c20f4 from memory into f13
la x2, scratch
li x3, 0x47bc44712602c196 # load x3 with value 0x47bc44712602c196
sw x3, 0(x2) # store 0x47bc44712602c196 in memory
flw f29, 0(x2) # load 0x47bc44712602c196 from memory into f29
la x2, scratch
li x3, 0x8b2041cae73b6034 # load x3 with value 0x8b2041cae73b6034
sw x3, 0(x2) # store 0x8b2041cae73b6034 in memory
flw f31, 0(x2) # load 0x8b2041cae73b6034 from memory into f31
fnmsub.s f26, f13, f29, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xe6be460b14fb6e5f # load x3 with value 0xe6be460b14fb6e5f
sw x3, 0(x2) # store 0xe6be460b14fb6e5f in memory
flw f20, 0(x2) # load 0xe6be460b14fb6e5f from memory into f20
la x2, scratch
li x3, 0xb010d8eb5abe21b2 # load x3 with value 0xb010d8eb5abe21b2
sw x3, 0(x2) # store 0xb010d8eb5abe21b2 in memory
flw f30, 0(x2) # load 0xb010d8eb5abe21b2 from memory into f30
la x2, scratch
li x3, 0xbf89eb0aba289994 # load x3 with value 0xbf89eb0aba289994
sw x3, 0(x2) # store 0xbf89eb0aba289994 in memory
flw f2, 0(x2) # load 0xbf89eb0aba289994 from memory into f2
fnmsub.s f1, f20, f30, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x5f223f6a44d841b0 # load x3 with value 0x5f223f6a44d841b0
sw x3, 0(x2) # store 0x5f223f6a44d841b0 in memory
flw f6, 0(x2) # load 0x5f223f6a44d841b0 from memory into f6
la x2, scratch
li x3, 0x1f3eb351ce54c58e # load x3 with value 0x1f3eb351ce54c58e
sw x3, 0(x2) # store 0x1f3eb351ce54c58e in memory
flw f31, 0(x2) # load 0x1f3eb351ce54c58e from memory into f31
la x2, scratch
li x3, 0x6fd7324e4ed34322 # load x3 with value 0x6fd7324e4ed34322
sw x3, 0(x2) # store 0x6fd7324e4ed34322 in memory
flw f20, 0(x2) # load 0x6fd7324e4ed34322 from memory into f20
fnmsub.s f16, f6, f31, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x57990a276097dfe8 # load x3 with value 0x57990a276097dfe8
sw x3, 0(x2) # store 0x57990a276097dfe8 in memory
flw f29, 0(x2) # load 0x57990a276097dfe8 from memory into f29
la x2, scratch
li x3, 0x8c816e20f7b01bc4 # load x3 with value 0x8c816e20f7b01bc4
sw x3, 0(x2) # store 0x8c816e20f7b01bc4 in memory
flw f5, 0(x2) # load 0x8c816e20f7b01bc4 from memory into f5
la x2, scratch
li x3, 0x87beeb3cf36227b5 # load x3 with value 0x87beeb3cf36227b5
sw x3, 0(x2) # store 0x87beeb3cf36227b5 in memory
flw f0, 0(x2) # load 0x87beeb3cf36227b5 from memory into f0
fnmsub.s f1, f29, f5, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xe55efd34f42e504f # load x3 with value 0xe55efd34f42e504f
sw x3, 0(x2) # store 0xe55efd34f42e504f in memory
flw f17, 0(x2) # load 0xe55efd34f42e504f from memory into f17
la x2, scratch
li x3, 0x15983224fbfd5319 # load x3 with value 0x15983224fbfd5319
sw x3, 0(x2) # store 0x15983224fbfd5319 in memory
flw f16, 0(x2) # load 0x15983224fbfd5319 from memory into f16
la x2, scratch
li x3, 0x482c0d3f4f868f1f # load x3 with value 0x482c0d3f4f868f1f
sw x3, 0(x2) # store 0x482c0d3f4f868f1f in memory
flw f1, 0(x2) # load 0x482c0d3f4f868f1f from memory into f1
fnmsub.s f2, f17, f16, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xc9f1af5739bfb121 # load x3 with value 0xc9f1af5739bfb121
sw x3, 0(x2) # store 0xc9f1af5739bfb121 in memory
flw f12, 0(x2) # load 0xc9f1af5739bfb121 from memory into f12
la x2, scratch
li x3, 0x499f739929d0c4a8 # load x3 with value 0x499f739929d0c4a8
sw x3, 0(x2) # store 0x499f739929d0c4a8 in memory
flw f3, 0(x2) # load 0x499f739929d0c4a8 from memory into f3
la x2, scratch
li x3, 0xc93c6443db928432 # load x3 with value 0xc93c6443db928432
sw x3, 0(x2) # store 0xc93c6443db928432 in memory
flw f2, 0(x2) # load 0xc93c6443db928432 from memory into f2
fnmsub.s f10, f12, f3, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0xd4dcb9316b0df4bb # load x3 with value 0xd4dcb9316b0df4bb
sw x3, 0(x2) # store 0xd4dcb9316b0df4bb in memory
flw f20, 0(x2) # load 0xd4dcb9316b0df4bb from memory into f20
la x2, scratch
li x3, 0x73ebdd23f9372608 # load x3 with value 0x73ebdd23f9372608
sw x3, 0(x2) # store 0x73ebdd23f9372608 in memory
flw f13, 0(x2) # load 0x73ebdd23f9372608 from memory into f13
la x2, scratch
li x3, 0x6fe587b360ff1461 # load x3 with value 0x6fe587b360ff1461
sw x3, 0(x2) # store 0x6fe587b360ff1461 in memory
flw f3, 0(x2) # load 0x6fe587b360ff1461 from memory into f3
fnmsub.s f8, f20, f13, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x30be1a64be15701 # load x3 with value 0x30be1a64be15701
sw x3, 0(x2) # store 0x30be1a64be15701 in memory
flw f27, 0(x2) # load 0x30be1a64be15701 from memory into f27
la x2, scratch
li x3, 0x8408c3266b241a9a # load x3 with value 0x8408c3266b241a9a
sw x3, 0(x2) # store 0x8408c3266b241a9a in memory
flw f11, 0(x2) # load 0x8408c3266b241a9a from memory into f11
la x2, scratch
li x3, 0x9c282c47aa70559a # load x3 with value 0x9c282c47aa70559a
sw x3, 0(x2) # store 0x9c282c47aa70559a in memory
flw f4, 0(x2) # load 0x9c282c47aa70559a from memory into f4
fnmsub.s f25, f27, f11, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0xb70468369dff8347 # load x3 with value 0xb70468369dff8347
sw x3, 0(x2) # store 0xb70468369dff8347 in memory
flw f26, 0(x2) # load 0xb70468369dff8347 from memory into f26
la x2, scratch
li x3, 0xe33cb0fd319dae11 # load x3 with value 0xe33cb0fd319dae11
sw x3, 0(x2) # store 0xe33cb0fd319dae11 in memory
flw f3, 0(x2) # load 0xe33cb0fd319dae11 from memory into f3
la x2, scratch
li x3, 0xdbcbbbd2bbbd4fb4 # load x3 with value 0xdbcbbbd2bbbd4fb4
sw x3, 0(x2) # store 0xdbcbbbd2bbbd4fb4 in memory
flw f5, 0(x2) # load 0xdbcbbbd2bbbd4fb4 from memory into f5
fnmsub.s f31, f26, f3, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x67dad29c97a9f484 # load x3 with value 0x67dad29c97a9f484
sw x3, 0(x2) # store 0x67dad29c97a9f484 in memory
flw f16, 0(x2) # load 0x67dad29c97a9f484 from memory into f16
la x2, scratch
li x3, 0x8fbec7e888058590 # load x3 with value 0x8fbec7e888058590
sw x3, 0(x2) # store 0x8fbec7e888058590 in memory
flw f7, 0(x2) # load 0x8fbec7e888058590 from memory into f7
la x2, scratch
li x3, 0xe2690a785cd3dd30 # load x3 with value 0xe2690a785cd3dd30
sw x3, 0(x2) # store 0xe2690a785cd3dd30 in memory
flw f6, 0(x2) # load 0xe2690a785cd3dd30 from memory into f6
fnmsub.s f30, f16, f7, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0xf326f39f9c3ca7e # load x3 with value 0xf326f39f9c3ca7e
sw x3, 0(x2) # store 0xf326f39f9c3ca7e in memory
flw f28, 0(x2) # load 0xf326f39f9c3ca7e from memory into f28
la x2, scratch
li x3, 0x59a4b7f91438594 # load x3 with value 0x59a4b7f91438594
sw x3, 0(x2) # store 0x59a4b7f91438594 in memory
flw f14, 0(x2) # load 0x59a4b7f91438594 from memory into f14
la x2, scratch
li x3, 0xab4f1532518996e9 # load x3 with value 0xab4f1532518996e9
sw x3, 0(x2) # store 0xab4f1532518996e9 in memory
flw f7, 0(x2) # load 0xab4f1532518996e9 from memory into f7
fnmsub.s f19, f28, f14, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x95f9052604d904de # load x3 with value 0x95f9052604d904de
sw x3, 0(x2) # store 0x95f9052604d904de in memory
flw f31, 0(x2) # load 0x95f9052604d904de from memory into f31
la x2, scratch
li x3, 0x9244e7d18356e3b9 # load x3 with value 0x9244e7d18356e3b9
sw x3, 0(x2) # store 0x9244e7d18356e3b9 in memory
flw f19, 0(x2) # load 0x9244e7d18356e3b9 from memory into f19
la x2, scratch
li x3, 0xb72eafae4b56aba9 # load x3 with value 0xb72eafae4b56aba9
sw x3, 0(x2) # store 0xb72eafae4b56aba9 in memory
flw f8, 0(x2) # load 0xb72eafae4b56aba9 from memory into f8
fnmsub.s f28, f31, f19, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0xd0f0dbceb9835ea # load x3 with value 0xd0f0dbceb9835ea
sw x3, 0(x2) # store 0xd0f0dbceb9835ea in memory
flw f17, 0(x2) # load 0xd0f0dbceb9835ea from memory into f17
la x2, scratch
li x3, 0xfb470a25f6baf7c0 # load x3 with value 0xfb470a25f6baf7c0
sw x3, 0(x2) # store 0xfb470a25f6baf7c0 in memory
flw f8, 0(x2) # load 0xfb470a25f6baf7c0 from memory into f8
la x2, scratch
li x3, 0xbc94640e149fbb9e # load x3 with value 0xbc94640e149fbb9e
sw x3, 0(x2) # store 0xbc94640e149fbb9e in memory
flw f9, 0(x2) # load 0xbc94640e149fbb9e from memory into f9
fnmsub.s f28, f17, f8, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x51dbf8e77615b005 # load x3 with value 0x51dbf8e77615b005
sw x3, 0(x2) # store 0x51dbf8e77615b005 in memory
flw f24, 0(x2) # load 0x51dbf8e77615b005 from memory into f24
la x2, scratch
li x3, 0xeeebd1581ef1254b # load x3 with value 0xeeebd1581ef1254b
sw x3, 0(x2) # store 0xeeebd1581ef1254b in memory
flw f8, 0(x2) # load 0xeeebd1581ef1254b from memory into f8
la x2, scratch
li x3, 0xea677f35a2822ffc # load x3 with value 0xea677f35a2822ffc
sw x3, 0(x2) # store 0xea677f35a2822ffc in memory
flw f10, 0(x2) # load 0xea677f35a2822ffc from memory into f10
fnmsub.s f29, f24, f8, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x9229dd868bab6273 # load x3 with value 0x9229dd868bab6273
sw x3, 0(x2) # store 0x9229dd868bab6273 in memory
flw f20, 0(x2) # load 0x9229dd868bab6273 from memory into f20
la x2, scratch
li x3, 0x377552c914a6ccbe # load x3 with value 0x377552c914a6ccbe
sw x3, 0(x2) # store 0x377552c914a6ccbe in memory
flw f24, 0(x2) # load 0x377552c914a6ccbe from memory into f24
la x2, scratch
li x3, 0x53a1ffee6c7b9352 # load x3 with value 0x53a1ffee6c7b9352
sw x3, 0(x2) # store 0x53a1ffee6c7b9352 in memory
flw f11, 0(x2) # load 0x53a1ffee6c7b9352 from memory into f11
fnmsub.s f25, f20, f24, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x8e5c28190b306d67 # load x3 with value 0x8e5c28190b306d67
sw x3, 0(x2) # store 0x8e5c28190b306d67 in memory
flw f28, 0(x2) # load 0x8e5c28190b306d67 from memory into f28
la x2, scratch
li x3, 0x13b0621162f4f924 # load x3 with value 0x13b0621162f4f924
sw x3, 0(x2) # store 0x13b0621162f4f924 in memory
flw f19, 0(x2) # load 0x13b0621162f4f924 from memory into f19
la x2, scratch
li x3, 0x5205a26fdb3c5180 # load x3 with value 0x5205a26fdb3c5180
sw x3, 0(x2) # store 0x5205a26fdb3c5180 in memory
flw f12, 0(x2) # load 0x5205a26fdb3c5180 from memory into f12
fnmsub.s f13, f28, f19, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x5b9c42edc61cc592 # load x3 with value 0x5b9c42edc61cc592
sw x3, 0(x2) # store 0x5b9c42edc61cc592 in memory
flw f29, 0(x2) # load 0x5b9c42edc61cc592 from memory into f29
la x2, scratch
li x3, 0xcacca0667b6bb3d2 # load x3 with value 0xcacca0667b6bb3d2
sw x3, 0(x2) # store 0xcacca0667b6bb3d2 in memory
flw f24, 0(x2) # load 0xcacca0667b6bb3d2 from memory into f24
la x2, scratch
li x3, 0xbbce196e4e98 # load x3 with value 0xbbce196e4e98
sw x3, 0(x2) # store 0xbbce196e4e98 in memory
flw f13, 0(x2) # load 0xbbce196e4e98 from memory into f13
fnmsub.s f14, f29, f24, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0xd769d049de92d14c # load x3 with value 0xd769d049de92d14c
sw x3, 0(x2) # store 0xd769d049de92d14c in memory
flw f11, 0(x2) # load 0xd769d049de92d14c from memory into f11
la x2, scratch
li x3, 0xdab5eb530f250638 # load x3 with value 0xdab5eb530f250638
sw x3, 0(x2) # store 0xdab5eb530f250638 in memory
flw f13, 0(x2) # load 0xdab5eb530f250638 from memory into f13
la x2, scratch
li x3, 0x930c320b034778fb # load x3 with value 0x930c320b034778fb
sw x3, 0(x2) # store 0x930c320b034778fb in memory
flw f14, 0(x2) # load 0x930c320b034778fb from memory into f14
fnmsub.s f7, f11, f13, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x836dc0ec96010211 # load x3 with value 0x836dc0ec96010211
sw x3, 0(x2) # store 0x836dc0ec96010211 in memory
flw f9, 0(x2) # load 0x836dc0ec96010211 from memory into f9
la x2, scratch
li x3, 0x3ea2089c46a06db1 # load x3 with value 0x3ea2089c46a06db1
sw x3, 0(x2) # store 0x3ea2089c46a06db1 in memory
flw f14, 0(x2) # load 0x3ea2089c46a06db1 from memory into f14
la x2, scratch
li x3, 0x376b2aed63cd3003 # load x3 with value 0x376b2aed63cd3003
sw x3, 0(x2) # store 0x376b2aed63cd3003 in memory
flw f15, 0(x2) # load 0x376b2aed63cd3003 from memory into f15
fnmsub.s f6, f9, f14, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x9811874575121a6e # load x3 with value 0x9811874575121a6e
sw x3, 0(x2) # store 0x9811874575121a6e in memory
flw f7, 0(x2) # load 0x9811874575121a6e from memory into f7
la x2, scratch
li x3, 0x42057ed88a64cf72 # load x3 with value 0x42057ed88a64cf72
sw x3, 0(x2) # store 0x42057ed88a64cf72 in memory
flw f18, 0(x2) # load 0x42057ed88a64cf72 from memory into f18
la x2, scratch
li x3, 0x92dd1867cee7e25f # load x3 with value 0x92dd1867cee7e25f
sw x3, 0(x2) # store 0x92dd1867cee7e25f in memory
flw f16, 0(x2) # load 0x92dd1867cee7e25f from memory into f16
fnmsub.s f13, f7, f18, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0xad6513b31a447c5c # load x3 with value 0xad6513b31a447c5c
sw x3, 0(x2) # store 0xad6513b31a447c5c in memory
flw f23, 0(x2) # load 0xad6513b31a447c5c from memory into f23
la x2, scratch
li x3, 0x2069d4566a38ee09 # load x3 with value 0x2069d4566a38ee09
sw x3, 0(x2) # store 0x2069d4566a38ee09 in memory
flw f22, 0(x2) # load 0x2069d4566a38ee09 from memory into f22
la x2, scratch
li x3, 0x5bd1b2991d6b521b # load x3 with value 0x5bd1b2991d6b521b
sw x3, 0(x2) # store 0x5bd1b2991d6b521b in memory
flw f17, 0(x2) # load 0x5bd1b2991d6b521b from memory into f17
fnmsub.s f9, f23, f22, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x50482037ea8231dd # load x3 with value 0x50482037ea8231dd
sw x3, 0(x2) # store 0x50482037ea8231dd in memory
flw f28, 0(x2) # load 0x50482037ea8231dd from memory into f28
la x2, scratch
li x3, 0x215b90e27fa799d9 # load x3 with value 0x215b90e27fa799d9
sw x3, 0(x2) # store 0x215b90e27fa799d9 in memory
flw f14, 0(x2) # load 0x215b90e27fa799d9 from memory into f14
la x2, scratch
li x3, 0x2a45fc7b002287a7 # load x3 with value 0x2a45fc7b002287a7
sw x3, 0(x2) # store 0x2a45fc7b002287a7 in memory
flw f18, 0(x2) # load 0x2a45fc7b002287a7 from memory into f18
fnmsub.s f15, f28, f14, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x4cac64ebdd2fa681 # load x3 with value 0x4cac64ebdd2fa681
sw x3, 0(x2) # store 0x4cac64ebdd2fa681 in memory
flw f9, 0(x2) # load 0x4cac64ebdd2fa681 from memory into f9
la x2, scratch
li x3, 0xa62621029606cec0 # load x3 with value 0xa62621029606cec0
sw x3, 0(x2) # store 0xa62621029606cec0 in memory
flw f10, 0(x2) # load 0xa62621029606cec0 from memory into f10
la x2, scratch
li x3, 0x8a0172bd6568cd23 # load x3 with value 0x8a0172bd6568cd23
sw x3, 0(x2) # store 0x8a0172bd6568cd23 in memory
flw f19, 0(x2) # load 0x8a0172bd6568cd23 from memory into f19
fnmsub.s f16, f9, f10, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0xadc2425629b8dab8 # load x3 with value 0xadc2425629b8dab8
sw x3, 0(x2) # store 0xadc2425629b8dab8 in memory
flw f29, 0(x2) # load 0xadc2425629b8dab8 from memory into f29
la x2, scratch
li x3, 0x6d7f6b1e567007ce # load x3 with value 0x6d7f6b1e567007ce
sw x3, 0(x2) # store 0x6d7f6b1e567007ce in memory
flw f25, 0(x2) # load 0x6d7f6b1e567007ce from memory into f25
la x2, scratch
li x3, 0x6c7c523ad7bc64c9 # load x3 with value 0x6c7c523ad7bc64c9
sw x3, 0(x2) # store 0x6c7c523ad7bc64c9 in memory
flw f20, 0(x2) # load 0x6c7c523ad7bc64c9 from memory into f20
fnmsub.s f3, f29, f25, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x79875148d44c2284 # load x3 with value 0x79875148d44c2284
sw x3, 0(x2) # store 0x79875148d44c2284 in memory
flw f1, 0(x2) # load 0x79875148d44c2284 from memory into f1
la x2, scratch
li x3, 0xde37c9832db2c247 # load x3 with value 0xde37c9832db2c247
sw x3, 0(x2) # store 0xde37c9832db2c247 in memory
flw f10, 0(x2) # load 0xde37c9832db2c247 from memory into f10
la x2, scratch
li x3, 0x3e424dc4842d9f35 # load x3 with value 0x3e424dc4842d9f35
sw x3, 0(x2) # store 0x3e424dc4842d9f35 in memory
flw f21, 0(x2) # load 0x3e424dc4842d9f35 from memory into f21
fnmsub.s f31, f1, f10, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x5944723dcb8a3c56 # load x3 with value 0x5944723dcb8a3c56
sw x3, 0(x2) # store 0x5944723dcb8a3c56 in memory
flw f26, 0(x2) # load 0x5944723dcb8a3c56 from memory into f26
la x2, scratch
li x3, 0x9a8c159a08928ab9 # load x3 with value 0x9a8c159a08928ab9
sw x3, 0(x2) # store 0x9a8c159a08928ab9 in memory
flw f23, 0(x2) # load 0x9a8c159a08928ab9 from memory into f23
la x2, scratch
li x3, 0x8290bba9ed8955f # load x3 with value 0x8290bba9ed8955f
sw x3, 0(x2) # store 0x8290bba9ed8955f in memory
flw f22, 0(x2) # load 0x8290bba9ed8955f from memory into f22
fnmsub.s f28, f26, f23, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x1ac8e59a1a8c5562 # load x3 with value 0x1ac8e59a1a8c5562
sw x3, 0(x2) # store 0x1ac8e59a1a8c5562 in memory
flw f5, 0(x2) # load 0x1ac8e59a1a8c5562 from memory into f5
la x2, scratch
li x3, 0x41d0e296d2416946 # load x3 with value 0x41d0e296d2416946
sw x3, 0(x2) # store 0x41d0e296d2416946 in memory
flw f21, 0(x2) # load 0x41d0e296d2416946 from memory into f21
la x2, scratch
li x3, 0xe1e6f6e5c8892578 # load x3 with value 0xe1e6f6e5c8892578
sw x3, 0(x2) # store 0xe1e6f6e5c8892578 in memory
flw f23, 0(x2) # load 0xe1e6f6e5c8892578 from memory into f23
fnmsub.s f31, f5, f21, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0x502ad490906e6b2c # load x3 with value 0x502ad490906e6b2c
sw x3, 0(x2) # store 0x502ad490906e6b2c in memory
flw f3, 0(x2) # load 0x502ad490906e6b2c from memory into f3
la x2, scratch
li x3, 0xa88ac70058429743 # load x3 with value 0xa88ac70058429743
sw x3, 0(x2) # store 0xa88ac70058429743 in memory
flw f11, 0(x2) # load 0xa88ac70058429743 from memory into f11
la x2, scratch
li x3, 0x6190bb9061e955c0 # load x3 with value 0x6190bb9061e955c0
sw x3, 0(x2) # store 0x6190bb9061e955c0 in memory
flw f24, 0(x2) # load 0x6190bb9061e955c0 from memory into f24
fnmsub.s f8, f3, f11, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x860844634eeeda24 # load x3 with value 0x860844634eeeda24
sw x3, 0(x2) # store 0x860844634eeeda24 in memory
flw f13, 0(x2) # load 0x860844634eeeda24 from memory into f13
la x2, scratch
li x3, 0xa954ba10b052c47d # load x3 with value 0xa954ba10b052c47d
sw x3, 0(x2) # store 0xa954ba10b052c47d in memory
flw f24, 0(x2) # load 0xa954ba10b052c47d from memory into f24
la x2, scratch
li x3, 0x537c81e61b85482a # load x3 with value 0x537c81e61b85482a
sw x3, 0(x2) # store 0x537c81e61b85482a in memory
flw f25, 0(x2) # load 0x537c81e61b85482a from memory into f25
fnmsub.s f18, f13, f24, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0xb97fbab618dde50a # load x3 with value 0xb97fbab618dde50a
sw x3, 0(x2) # store 0xb97fbab618dde50a in memory
flw f25, 0(x2) # load 0xb97fbab618dde50a from memory into f25
la x2, scratch
li x3, 0x873db5e4f944a522 # load x3 with value 0x873db5e4f944a522
sw x3, 0(x2) # store 0x873db5e4f944a522 in memory
flw f16, 0(x2) # load 0x873db5e4f944a522 from memory into f16
la x2, scratch
li x3, 0x679ff6b6378215f7 # load x3 with value 0x679ff6b6378215f7
sw x3, 0(x2) # store 0x679ff6b6378215f7 in memory
flw f26, 0(x2) # load 0x679ff6b6378215f7 from memory into f26
fnmsub.s f17, f25, f16, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0xe810763ffdec1ee9 # load x3 with value 0xe810763ffdec1ee9
sw x3, 0(x2) # store 0xe810763ffdec1ee9 in memory
flw f19, 0(x2) # load 0xe810763ffdec1ee9 from memory into f19
la x2, scratch
li x3, 0x98de456db4360a2f # load x3 with value 0x98de456db4360a2f
sw x3, 0(x2) # store 0x98de456db4360a2f in memory
flw f30, 0(x2) # load 0x98de456db4360a2f from memory into f30
la x2, scratch
li x3, 0xbf22517fbb334a36 # load x3 with value 0xbf22517fbb334a36
sw x3, 0(x2) # store 0xbf22517fbb334a36 in memory
flw f27, 0(x2) # load 0xbf22517fbb334a36 from memory into f27
fnmsub.s f6, f19, f30, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0xa2c1278351d6b758 # load x3 with value 0xa2c1278351d6b758
sw x3, 0(x2) # store 0xa2c1278351d6b758 in memory
flw f31, 0(x2) # load 0xa2c1278351d6b758 from memory into f31
la x2, scratch
li x3, 0x233233aa3fb2a010 # load x3 with value 0x233233aa3fb2a010
sw x3, 0(x2) # store 0x233233aa3fb2a010 in memory
flw f15, 0(x2) # load 0x233233aa3fb2a010 from memory into f15
la x2, scratch
li x3, 0x2f4ff9aa444d8e8f # load x3 with value 0x2f4ff9aa444d8e8f
sw x3, 0(x2) # store 0x2f4ff9aa444d8e8f in memory
flw f28, 0(x2) # load 0x2f4ff9aa444d8e8f from memory into f28
fnmsub.s f16, f31, f15, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x82ae83d80356ac97 # load x3 with value 0x82ae83d80356ac97
sw x3, 0(x2) # store 0x82ae83d80356ac97 in memory
flw f10, 0(x2) # load 0x82ae83d80356ac97 from memory into f10
la x2, scratch
li x3, 0xf836695d2cf2a8b3 # load x3 with value 0xf836695d2cf2a8b3
sw x3, 0(x2) # store 0xf836695d2cf2a8b3 in memory
flw f21, 0(x2) # load 0xf836695d2cf2a8b3 from memory into f21
la x2, scratch
li x3, 0x993836d04ac6fe7c # load x3 with value 0x993836d04ac6fe7c
sw x3, 0(x2) # store 0x993836d04ac6fe7c in memory
flw f29, 0(x2) # load 0x993836d04ac6fe7c from memory into f29
fnmsub.s f22, f10, f21, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x469c68b993e7bed3 # load x3 with value 0x469c68b993e7bed3
sw x3, 0(x2) # store 0x469c68b993e7bed3 in memory
flw f10, 0(x2) # load 0x469c68b993e7bed3 from memory into f10
la x2, scratch
li x3, 0xa2d933a09b2536c3 # load x3 with value 0xa2d933a09b2536c3
sw x3, 0(x2) # store 0xa2d933a09b2536c3 in memory
flw f8, 0(x2) # load 0xa2d933a09b2536c3 from memory into f8
la x2, scratch
li x3, 0x8ee4bd4ad48c39e6 # load x3 with value 0x8ee4bd4ad48c39e6
sw x3, 0(x2) # store 0x8ee4bd4ad48c39e6 in memory
flw f30, 0(x2) # load 0x8ee4bd4ad48c39e6 from memory into f30
fnmsub.s f9, f10, f8, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x775393c9405602df # load x3 with value 0x775393c9405602df
sw x3, 0(x2) # store 0x775393c9405602df in memory
flw f5, 0(x2) # load 0x775393c9405602df from memory into f5
la x2, scratch
li x3, 0x9b41ca6118f014a8 # load x3 with value 0x9b41ca6118f014a8
sw x3, 0(x2) # store 0x9b41ca6118f014a8 in memory
flw f15, 0(x2) # load 0x9b41ca6118f014a8 from memory into f15
la x2, scratch
li x3, 0x4680f75959de6617 # load x3 with value 0x4680f75959de6617
sw x3, 0(x2) # store 0x4680f75959de6617 in memory
flw f31, 0(x2) # load 0x4680f75959de6617 from memory into f31
fnmsub.s f3, f5, f15, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xfa54efdcc67d1d17 # load x3 with value 0xfa54efdcc67d1d17
sw x3, 0(x2) # store 0xfa54efdcc67d1d17 in memory
flw f21, 0(x2) # load 0xfa54efdcc67d1d17 from memory into f21
la x2, scratch
li x3, 0x7c020c68f56eaf6d # load x3 with value 0x7c020c68f56eaf6d
sw x3, 0(x2) # store 0x7c020c68f56eaf6d in memory
flw f30, 0(x2) # load 0x7c020c68f56eaf6d from memory into f30
la x2, scratch
li x3, 0x98ecd74a6eed10a8 # load x3 with value 0x98ecd74a6eed10a8
sw x3, 0(x2) # store 0x98ecd74a6eed10a8 in memory
flw f26, 0(x2) # load 0x98ecd74a6eed10a8 from memory into f26
fnmsub.s f0, f21, f30, f26 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x2971a5733502248d # load x3 with value 0x2971a5733502248d
sw x3, 0(x2) # store 0x2971a5733502248d in memory
flw f29, 0(x2) # load 0x2971a5733502248d from memory into f29
la x2, scratch
li x3, 0x6a242a7839e90681 # load x3 with value 0x6a242a7839e90681
sw x3, 0(x2) # store 0x6a242a7839e90681 in memory
flw f21, 0(x2) # load 0x6a242a7839e90681 from memory into f21
la x2, scratch
li x3, 0x250c75a1d2d2bbd3 # load x3 with value 0x250c75a1d2d2bbd3
sw x3, 0(x2) # store 0x250c75a1d2d2bbd3 in memory
flw f17, 0(x2) # load 0x250c75a1d2d2bbd3 from memory into f17
fnmsub.s f1, f29, f21, f17 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x3a084492feb74d37 # load x3 with value 0x3a084492feb74d37
sw x3, 0(x2) # store 0x3a084492feb74d37 in memory
flw f22, 0(x2) # load 0x3a084492feb74d37 from memory into f22
la x2, scratch
li x3, 0x9e59c6f80598e3c9 # load x3 with value 0x9e59c6f80598e3c9
sw x3, 0(x2) # store 0x9e59c6f80598e3c9 in memory
flw f12, 0(x2) # load 0x9e59c6f80598e3c9 from memory into f12
la x2, scratch
li x3, 0x6cd5e6b65f2ea4f0 # load x3 with value 0x6cd5e6b65f2ea4f0
sw x3, 0(x2) # store 0x6cd5e6b65f2ea4f0 in memory
flw f9, 0(x2) # load 0x6cd5e6b65f2ea4f0 from memory into f9
fnmsub.s f2, f22, f12, f9 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xceecc65e1f48a8d # load x3 with value 0xceecc65e1f48a8d
sw x3, 0(x2) # store 0xceecc65e1f48a8d in memory
flw f20, 0(x2) # load 0xceecc65e1f48a8d from memory into f20
la x2, scratch
li x3, 0x4d224e4076490382 # load x3 with value 0x4d224e4076490382
sw x3, 0(x2) # store 0x4d224e4076490382 in memory
flw f19, 0(x2) # load 0x4d224e4076490382 from memory into f19
la x2, scratch
li x3, 0xd6ed96301e845d54 # load x3 with value 0xd6ed96301e845d54
sw x3, 0(x2) # store 0xd6ed96301e845d54 in memory
flw f9, 0(x2) # load 0xd6ed96301e845d54 from memory into f9
fnmsub.s f3, f20, f19, f9 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4a62222b9f375c01 # load x3 with value 0x4a62222b9f375c01
sw x3, 0(x2) # store 0x4a62222b9f375c01 in memory
flw f6, 0(x2) # load 0x4a62222b9f375c01 from memory into f6
la x2, scratch
li x3, 0x63569d90469c2854 # load x3 with value 0x63569d90469c2854
sw x3, 0(x2) # store 0x63569d90469c2854 in memory
flw f30, 0(x2) # load 0x63569d90469c2854 from memory into f30
la x2, scratch
li x3, 0xa5972e566b5fb58 # load x3 with value 0xa5972e566b5fb58
sw x3, 0(x2) # store 0xa5972e566b5fb58 in memory
flw f2, 0(x2) # load 0xa5972e566b5fb58 from memory into f2
fnmsub.s f4, f6, f30, f2 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5e5d56d599aa6086 # load x3 with value 0x5e5d56d599aa6086
sw x3, 0(x2) # store 0x5e5d56d599aa6086 in memory
flw f30, 0(x2) # load 0x5e5d56d599aa6086 from memory into f30
la x2, scratch
li x3, 0xc61e51dc549c122d # load x3 with value 0xc61e51dc549c122d
sw x3, 0(x2) # store 0xc61e51dc549c122d in memory
flw f15, 0(x2) # load 0xc61e51dc549c122d from memory into f15
la x2, scratch
li x3, 0x8281adbddf408cce # load x3 with value 0x8281adbddf408cce
sw x3, 0(x2) # store 0x8281adbddf408cce in memory
flw f25, 0(x2) # load 0x8281adbddf408cce from memory into f25
fnmsub.s f5, f30, f15, f25 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x6feaed7cbf20b669 # load x3 with value 0x6feaed7cbf20b669
sw x3, 0(x2) # store 0x6feaed7cbf20b669 in memory
flw f26, 0(x2) # load 0x6feaed7cbf20b669 from memory into f26
la x2, scratch
li x3, 0x9111c16bf46a8d29 # load x3 with value 0x9111c16bf46a8d29
sw x3, 0(x2) # store 0x9111c16bf46a8d29 in memory
flw f24, 0(x2) # load 0x9111c16bf46a8d29 from memory into f24
la x2, scratch
li x3, 0x316d3596d45001ab # load x3 with value 0x316d3596d45001ab
sw x3, 0(x2) # store 0x316d3596d45001ab in memory
flw f3, 0(x2) # load 0x316d3596d45001ab from memory into f3
fnmsub.s f6, f26, f24, f3 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbaad20af64acafff # load x3 with value 0xbaad20af64acafff
sw x3, 0(x2) # store 0xbaad20af64acafff in memory
flw f8, 0(x2) # load 0xbaad20af64acafff from memory into f8
la x2, scratch
li x3, 0xb4ad9d8fabec8e0f # load x3 with value 0xb4ad9d8fabec8e0f
sw x3, 0(x2) # store 0xb4ad9d8fabec8e0f in memory
flw f2, 0(x2) # load 0xb4ad9d8fabec8e0f from memory into f2
la x2, scratch
li x3, 0xd4a767b541590096 # load x3 with value 0xd4a767b541590096
sw x3, 0(x2) # store 0xd4a767b541590096 in memory
flw f27, 0(x2) # load 0xd4a767b541590096 from memory into f27
fnmsub.s f7, f8, f2, f27 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x1959f6ac471fd6ed # load x3 with value 0x1959f6ac471fd6ed
sw x3, 0(x2) # store 0x1959f6ac471fd6ed in memory
flw f8, 0(x2) # load 0x1959f6ac471fd6ed from memory into f8
la x2, scratch
li x3, 0x4df8d360562db8b5 # load x3 with value 0x4df8d360562db8b5
sw x3, 0(x2) # store 0x4df8d360562db8b5 in memory
flw f17, 0(x2) # load 0x4df8d360562db8b5 from memory into f17
la x2, scratch
li x3, 0x5d3bb6dc0fdb4317 # load x3 with value 0x5d3bb6dc0fdb4317
sw x3, 0(x2) # store 0x5d3bb6dc0fdb4317 in memory
flw f1, 0(x2) # load 0x5d3bb6dc0fdb4317 from memory into f1
fnmsub.s f8, f8, f17, f1 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0xde414062cf035ab7 # load x3 with value 0xde414062cf035ab7
sw x3, 0(x2) # store 0xde414062cf035ab7 in memory
flw f9, 0(x2) # load 0xde414062cf035ab7 from memory into f9
la x2, scratch
li x3, 0x9f42d0b05179f9c5 # load x3 with value 0x9f42d0b05179f9c5
sw x3, 0(x2) # store 0x9f42d0b05179f9c5 in memory
flw f18, 0(x2) # load 0x9f42d0b05179f9c5 from memory into f18
la x2, scratch
li x3, 0x5b6c7aa76e819c3b # load x3 with value 0x5b6c7aa76e819c3b
sw x3, 0(x2) # store 0x5b6c7aa76e819c3b in memory
flw f11, 0(x2) # load 0x5b6c7aa76e819c3b from memory into f11
fnmsub.s f9, f9, f18, f11 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xe5bc3e0274a4e3b4 # load x3 with value 0xe5bc3e0274a4e3b4
sw x3, 0(x2) # store 0xe5bc3e0274a4e3b4 in memory
flw f9, 0(x2) # load 0xe5bc3e0274a4e3b4 from memory into f9
la x2, scratch
li x3, 0xb993f1a3dd409e82 # load x3 with value 0xb993f1a3dd409e82
sw x3, 0(x2) # store 0xb993f1a3dd409e82 in memory
flw f20, 0(x2) # load 0xb993f1a3dd409e82 from memory into f20
la x2, scratch
li x3, 0xbd7ac2b6219c8dcd # load x3 with value 0xbd7ac2b6219c8dcd
sw x3, 0(x2) # store 0xbd7ac2b6219c8dcd in memory
flw f18, 0(x2) # load 0xbd7ac2b6219c8dcd from memory into f18
fnmsub.s f10, f9, f20, f18 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xcbabfd6ce1e42b59 # load x3 with value 0xcbabfd6ce1e42b59
sw x3, 0(x2) # store 0xcbabfd6ce1e42b59 in memory
flw f16, 0(x2) # load 0xcbabfd6ce1e42b59 from memory into f16
la x2, scratch
li x3, 0xe1b360713ce529f1 # load x3 with value 0xe1b360713ce529f1
sw x3, 0(x2) # store 0xe1b360713ce529f1 in memory
flw f15, 0(x2) # load 0xe1b360713ce529f1 from memory into f15
la x2, scratch
li x3, 0xae51b20613f9be21 # load x3 with value 0xae51b20613f9be21
sw x3, 0(x2) # store 0xae51b20613f9be21 in memory
flw f21, 0(x2) # load 0xae51b20613f9be21 from memory into f21
fnmsub.s f11, f16, f15, f21 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x587418e0fe4f820f # load x3 with value 0x587418e0fe4f820f
sw x3, 0(x2) # store 0x587418e0fe4f820f in memory
flw f27, 0(x2) # load 0x587418e0fe4f820f from memory into f27
la x2, scratch
li x3, 0xd479670d1ab95607 # load x3 with value 0xd479670d1ab95607
sw x3, 0(x2) # store 0xd479670d1ab95607 in memory
flw f3, 0(x2) # load 0xd479670d1ab95607 from memory into f3
la x2, scratch
li x3, 0x842a6f2b8be92d35 # load x3 with value 0x842a6f2b8be92d35
sw x3, 0(x2) # store 0x842a6f2b8be92d35 in memory
flw f23, 0(x2) # load 0x842a6f2b8be92d35 from memory into f23
fnmsub.s f12, f27, f3, f23 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0x35d84ab786f9505c # load x3 with value 0x35d84ab786f9505c
sw x3, 0(x2) # store 0x35d84ab786f9505c in memory
flw f11, 0(x2) # load 0x35d84ab786f9505c from memory into f11
la x2, scratch
li x3, 0x2b5e586fb129f536 # load x3 with value 0x2b5e586fb129f536
sw x3, 0(x2) # store 0x2b5e586fb129f536 in memory
flw f26, 0(x2) # load 0x2b5e586fb129f536 from memory into f26
la x2, scratch
li x3, 0x835d5c8aac95abfc # load x3 with value 0x835d5c8aac95abfc
sw x3, 0(x2) # store 0x835d5c8aac95abfc in memory
flw f19, 0(x2) # load 0x835d5c8aac95abfc from memory into f19
fnmsub.s f13, f11, f26, f19 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x6abb8e9ff0249301 # load x3 with value 0x6abb8e9ff0249301
sw x3, 0(x2) # store 0x6abb8e9ff0249301 in memory
flw f10, 0(x2) # load 0x6abb8e9ff0249301 from memory into f10
la x2, scratch
li x3, 0xb6799b881cde0b55 # load x3 with value 0xb6799b881cde0b55
sw x3, 0(x2) # store 0xb6799b881cde0b55 in memory
flw f14, 0(x2) # load 0xb6799b881cde0b55 from memory into f14
la x2, scratch
li x3, 0xbeba7fce14e5a3fa # load x3 with value 0xbeba7fce14e5a3fa
sw x3, 0(x2) # store 0xbeba7fce14e5a3fa in memory
flw f17, 0(x2) # load 0xbeba7fce14e5a3fa from memory into f17
fnmsub.s f14, f10, f14, f17 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xb8ac8d27d78d82b9 # load x3 with value 0xb8ac8d27d78d82b9
sw x3, 0(x2) # store 0xb8ac8d27d78d82b9 in memory
flw f7, 0(x2) # load 0xb8ac8d27d78d82b9 from memory into f7
la x2, scratch
li x3, 0x5c9da947634a9feb # load x3 with value 0x5c9da947634a9feb
sw x3, 0(x2) # store 0x5c9da947634a9feb in memory
flw f11, 0(x2) # load 0x5c9da947634a9feb from memory into f11
la x2, scratch
li x3, 0x2bdb54e2a613112c # load x3 with value 0x2bdb54e2a613112c
sw x3, 0(x2) # store 0x2bdb54e2a613112c in memory
flw f9, 0(x2) # load 0x2bdb54e2a613112c from memory into f9
fnmsub.s f15, f7, f11, f9 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xe7f43c0d13a11d61 # load x3 with value 0xe7f43c0d13a11d61
sw x3, 0(x2) # store 0xe7f43c0d13a11d61 in memory
flw f29, 0(x2) # load 0xe7f43c0d13a11d61 from memory into f29
la x2, scratch
li x3, 0x4e73593f70ecabba # load x3 with value 0x4e73593f70ecabba
sw x3, 0(x2) # store 0x4e73593f70ecabba in memory
flw f18, 0(x2) # load 0x4e73593f70ecabba from memory into f18
la x2, scratch
li x3, 0x63353dd1324f22b1 # load x3 with value 0x63353dd1324f22b1
sw x3, 0(x2) # store 0x63353dd1324f22b1 in memory
flw f17, 0(x2) # load 0x63353dd1324f22b1 from memory into f17
fnmsub.s f16, f29, f18, f17 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xef38163ad5d9044 # load x3 with value 0xef38163ad5d9044
sw x3, 0(x2) # store 0xef38163ad5d9044 in memory
flw f6, 0(x2) # load 0xef38163ad5d9044 from memory into f6
la x2, scratch
li x3, 0xc04097f105d6ee56 # load x3 with value 0xc04097f105d6ee56
sw x3, 0(x2) # store 0xc04097f105d6ee56 in memory
flw f25, 0(x2) # load 0xc04097f105d6ee56 from memory into f25
la x2, scratch
li x3, 0xdde708a222c4add4 # load x3 with value 0xdde708a222c4add4
sw x3, 0(x2) # store 0xdde708a222c4add4 in memory
flw f9, 0(x2) # load 0xdde708a222c4add4 from memory into f9
fnmsub.s f17, f6, f25, f9 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x711d2e45f8b603a7 # load x3 with value 0x711d2e45f8b603a7
sw x3, 0(x2) # store 0x711d2e45f8b603a7 in memory
flw f24, 0(x2) # load 0x711d2e45f8b603a7 from memory into f24
la x2, scratch
li x3, 0x7b0cef0b9d97880b # load x3 with value 0x7b0cef0b9d97880b
sw x3, 0(x2) # store 0x7b0cef0b9d97880b in memory
flw f21, 0(x2) # load 0x7b0cef0b9d97880b from memory into f21
la x2, scratch
li x3, 0x65a68a4d3d6a8c46 # load x3 with value 0x65a68a4d3d6a8c46
sw x3, 0(x2) # store 0x65a68a4d3d6a8c46 in memory
flw f12, 0(x2) # load 0x65a68a4d3d6a8c46 from memory into f12
fnmsub.s f18, f24, f21, f12 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x7108ef01ec44f7c7 # load x3 with value 0x7108ef01ec44f7c7
sw x3, 0(x2) # store 0x7108ef01ec44f7c7 in memory
flw f15, 0(x2) # load 0x7108ef01ec44f7c7 from memory into f15
la x2, scratch
li x3, 0x87dc00e909f8aafd # load x3 with value 0x87dc00e909f8aafd
sw x3, 0(x2) # store 0x87dc00e909f8aafd in memory
flw f19, 0(x2) # load 0x87dc00e909f8aafd from memory into f19
la x2, scratch
li x3, 0x9328012f29f62b77 # load x3 with value 0x9328012f29f62b77
sw x3, 0(x2) # store 0x9328012f29f62b77 in memory
flw f5, 0(x2) # load 0x9328012f29f62b77 from memory into f5
fnmsub.s f19, f15, f19, f5 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0xdbf7c72a95421937 # load x3 with value 0xdbf7c72a95421937
sw x3, 0(x2) # store 0xdbf7c72a95421937 in memory
flw f19, 0(x2) # load 0xdbf7c72a95421937 from memory into f19
la x2, scratch
li x3, 0x2d46ae54bcfc3118 # load x3 with value 0x2d46ae54bcfc3118
sw x3, 0(x2) # store 0x2d46ae54bcfc3118 in memory
flw f5, 0(x2) # load 0x2d46ae54bcfc3118 from memory into f5
la x2, scratch
li x3, 0x4404638dc2588996 # load x3 with value 0x4404638dc2588996
sw x3, 0(x2) # store 0x4404638dc2588996 in memory
flw f7, 0(x2) # load 0x4404638dc2588996 from memory into f7
fnmsub.s f20, f19, f5, f7 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x28f882c41347d0f2 # load x3 with value 0x28f882c41347d0f2
sw x3, 0(x2) # store 0x28f882c41347d0f2 in memory
flw f10, 0(x2) # load 0x28f882c41347d0f2 from memory into f10
la x2, scratch
li x3, 0x82f719729bc1a513 # load x3 with value 0x82f719729bc1a513
sw x3, 0(x2) # store 0x82f719729bc1a513 in memory
flw f11, 0(x2) # load 0x82f719729bc1a513 from memory into f11
la x2, scratch
li x3, 0x6346c2d52b885281 # load x3 with value 0x6346c2d52b885281
sw x3, 0(x2) # store 0x6346c2d52b885281 in memory
flw f13, 0(x2) # load 0x6346c2d52b885281 from memory into f13
fnmsub.s f21, f10, f11, f13 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0xc530e1314f1fbdd3 # load x3 with value 0xc530e1314f1fbdd3
sw x3, 0(x2) # store 0xc530e1314f1fbdd3 in memory
flw f14, 0(x2) # load 0xc530e1314f1fbdd3 from memory into f14
la x2, scratch
li x3, 0xc312e579c4562cd3 # load x3 with value 0xc312e579c4562cd3
sw x3, 0(x2) # store 0xc312e579c4562cd3 in memory
flw f2, 0(x2) # load 0xc312e579c4562cd3 from memory into f2
la x2, scratch
li x3, 0x5373e82d6c453f5f # load x3 with value 0x5373e82d6c453f5f
sw x3, 0(x2) # store 0x5373e82d6c453f5f in memory
flw f9, 0(x2) # load 0x5373e82d6c453f5f from memory into f9
fnmsub.s f22, f14, f2, f9 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x4c87863285d424c2 # load x3 with value 0x4c87863285d424c2
sw x3, 0(x2) # store 0x4c87863285d424c2 in memory
flw f9, 0(x2) # load 0x4c87863285d424c2 from memory into f9
la x2, scratch
li x3, 0xfd0be0b00dace9c7 # load x3 with value 0xfd0be0b00dace9c7
sw x3, 0(x2) # store 0xfd0be0b00dace9c7 in memory
flw f21, 0(x2) # load 0xfd0be0b00dace9c7 from memory into f21
la x2, scratch
li x3, 0x3918e4ae79cb4bee # load x3 with value 0x3918e4ae79cb4bee
sw x3, 0(x2) # store 0x3918e4ae79cb4bee in memory
flw f25, 0(x2) # load 0x3918e4ae79cb4bee from memory into f25
fnmsub.s f23, f9, f21, f25 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xd9658555aee0dc7c # load x3 with value 0xd9658555aee0dc7c
sw x3, 0(x2) # store 0xd9658555aee0dc7c in memory
flw f10, 0(x2) # load 0xd9658555aee0dc7c from memory into f10
la x2, scratch
li x3, 0x711911236fd16d82 # load x3 with value 0x711911236fd16d82
sw x3, 0(x2) # store 0x711911236fd16d82 in memory
flw f31, 0(x2) # load 0x711911236fd16d82 from memory into f31
la x2, scratch
li x3, 0x1757ba2fc4ad9704 # load x3 with value 0x1757ba2fc4ad9704
sw x3, 0(x2) # store 0x1757ba2fc4ad9704 in memory
flw f12, 0(x2) # load 0x1757ba2fc4ad9704 from memory into f12
fnmsub.s f24, f10, f31, f12 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xe63c28bce8b9fd7f # load x3 with value 0xe63c28bce8b9fd7f
sw x3, 0(x2) # store 0xe63c28bce8b9fd7f in memory
flw f17, 0(x2) # load 0xe63c28bce8b9fd7f from memory into f17
la x2, scratch
li x3, 0x6fb9ca6f08fb9e2c # load x3 with value 0x6fb9ca6f08fb9e2c
sw x3, 0(x2) # store 0x6fb9ca6f08fb9e2c in memory
flw f10, 0(x2) # load 0x6fb9ca6f08fb9e2c from memory into f10
la x2, scratch
li x3, 0x1b264736e1da0c81 # load x3 with value 0x1b264736e1da0c81
sw x3, 0(x2) # store 0x1b264736e1da0c81 in memory
flw f24, 0(x2) # load 0x1b264736e1da0c81 from memory into f24
fnmsub.s f25, f17, f10, f24 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x6f2fd73fb4cf3139 # load x3 with value 0x6f2fd73fb4cf3139
sw x3, 0(x2) # store 0x6f2fd73fb4cf3139 in memory
flw f23, 0(x2) # load 0x6f2fd73fb4cf3139 from memory into f23
la x2, scratch
li x3, 0x92a0bf508b14a43f # load x3 with value 0x92a0bf508b14a43f
sw x3, 0(x2) # store 0x92a0bf508b14a43f in memory
flw f6, 0(x2) # load 0x92a0bf508b14a43f from memory into f6
la x2, scratch
li x3, 0x2f7b8d3e6c871a52 # load x3 with value 0x2f7b8d3e6c871a52
sw x3, 0(x2) # store 0x2f7b8d3e6c871a52 in memory
flw f11, 0(x2) # load 0x2f7b8d3e6c871a52 from memory into f11
fnmsub.s f26, f23, f6, f11 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xf3841c33a407e305 # load x3 with value 0xf3841c33a407e305
sw x3, 0(x2) # store 0xf3841c33a407e305 in memory
flw f18, 0(x2) # load 0xf3841c33a407e305 from memory into f18
la x2, scratch
li x3, 0x5ea2a3bf3b94eecd # load x3 with value 0x5ea2a3bf3b94eecd
sw x3, 0(x2) # store 0x5ea2a3bf3b94eecd in memory
flw f23, 0(x2) # load 0x5ea2a3bf3b94eecd from memory into f23
la x2, scratch
li x3, 0x212ab126cc6a0dd5 # load x3 with value 0x212ab126cc6a0dd5
sw x3, 0(x2) # store 0x212ab126cc6a0dd5 in memory
flw f13, 0(x2) # load 0x212ab126cc6a0dd5 from memory into f13
fnmsub.s f27, f18, f23, f13 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x5b4550f3f762b767 # load x3 with value 0x5b4550f3f762b767
sw x3, 0(x2) # store 0x5b4550f3f762b767 in memory
flw f21, 0(x2) # load 0x5b4550f3f762b767 from memory into f21
la x2, scratch
li x3, 0x1405933945657850 # load x3 with value 0x1405933945657850
sw x3, 0(x2) # store 0x1405933945657850 in memory
flw f25, 0(x2) # load 0x1405933945657850 from memory into f25
la x2, scratch
li x3, 0xcc8b556c4d891734 # load x3 with value 0xcc8b556c4d891734
sw x3, 0(x2) # store 0xcc8b556c4d891734 in memory
flw f18, 0(x2) # load 0xcc8b556c4d891734 from memory into f18
fnmsub.s f28, f21, f25, f18 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x3d7d7fa0c1eb154 # load x3 with value 0x3d7d7fa0c1eb154
sw x3, 0(x2) # store 0x3d7d7fa0c1eb154 in memory
flw f30, 0(x2) # load 0x3d7d7fa0c1eb154 from memory into f30
la x2, scratch
li x3, 0x965bbdf98c1a9f56 # load x3 with value 0x965bbdf98c1a9f56
sw x3, 0(x2) # store 0x965bbdf98c1a9f56 in memory
flw f14, 0(x2) # load 0x965bbdf98c1a9f56 from memory into f14
la x2, scratch
li x3, 0x222c325d2b5259fb # load x3 with value 0x222c325d2b5259fb
sw x3, 0(x2) # store 0x222c325d2b5259fb in memory
flw f24, 0(x2) # load 0x222c325d2b5259fb from memory into f24
fnmsub.s f29, f30, f14, f24 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x683ce24277237eeb # load x3 with value 0x683ce24277237eeb
sw x3, 0(x2) # store 0x683ce24277237eeb in memory
flw f21, 0(x2) # load 0x683ce24277237eeb from memory into f21
la x2, scratch
li x3, 0x5e355035bf35526c # load x3 with value 0x5e355035bf35526c
sw x3, 0(x2) # store 0x5e355035bf35526c in memory
flw f29, 0(x2) # load 0x5e355035bf35526c from memory into f29
la x2, scratch
li x3, 0xac9e9d8eaddd3ca3 # load x3 with value 0xac9e9d8eaddd3ca3
sw x3, 0(x2) # store 0xac9e9d8eaddd3ca3 in memory
flw f23, 0(x2) # load 0xac9e9d8eaddd3ca3 from memory into f23
fnmsub.s f30, f21, f29, f23 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x7da0b2f9140520e1 # load x3 with value 0x7da0b2f9140520e1
sw x3, 0(x2) # store 0x7da0b2f9140520e1 in memory
flw f24, 0(x2) # load 0x7da0b2f9140520e1 from memory into f24
la x2, scratch
li x3, 0xca86df2437c3be83 # load x3 with value 0xca86df2437c3be83
sw x3, 0(x2) # store 0xca86df2437c3be83 in memory
flw f11, 0(x2) # load 0xca86df2437c3be83 from memory into f11
la x2, scratch
li x3, 0x23b7c2fbcfc09e4d # load x3 with value 0x23b7c2fbcfc09e4d
sw x3, 0(x2) # store 0x23b7c2fbcfc09e4d in memory
flw f15, 0(x2) # load 0x23b7c2fbcfc09e4d from memory into f15
fnmsub.s f31, f24, f11, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x9a0bf4225708fd62 # load x3 with value 0x9a0bf4225708fd62
sw x3, 0(x2) # store 0x9a0bf4225708fd62 in memory
flw f10, 0(x2) # load 0x9a0bf4225708fd62 from memory into f10
la x2, scratch
li x3, 0xaf3bd56596cfea38 # load x3 with value 0xaf3bd56596cfea38
sw x3, 0(x2) # store 0xaf3bd56596cfea38 in memory
flw f25, 0(x2) # load 0xaf3bd56596cfea38 from memory into f25
fnmsub.s f24, f26, f10, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x9a6f227210399b6b # load x3 with value 0x9a6f227210399b6b
sw x3, 0(x2) # store 0x9a6f227210399b6b in memory
flw f19, 0(x2) # load 0x9a6f227210399b6b from memory into f19
la x2, scratch
li x3, 0xd44948cee4239387 # load x3 with value 0xd44948cee4239387
sw x3, 0(x2) # store 0xd44948cee4239387 in memory
flw f8, 0(x2) # load 0xd44948cee4239387 from memory into f8
fnmsub.s f26, f13, f19, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0xc773553cff7340eb # load x3 with value 0xc773553cff7340eb
sw x3, 0(x2) # store 0xc773553cff7340eb in memory
flw f26, 0(x2) # load 0xc773553cff7340eb from memory into f26
la x2, scratch
li x3, 0xf4971baf794b369a # load x3 with value 0xf4971baf794b369a
sw x3, 0(x2) # store 0xf4971baf794b369a in memory
flw f9, 0(x2) # load 0xf4971baf794b369a from memory into f9
fnmsub.s f6, f16, f26, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x96841887a2ebe7bf # load x3 with value 0x96841887a2ebe7bf
sw x3, 0(x2) # store 0x96841887a2ebe7bf in memory
flw f21, 0(x2) # load 0x96841887a2ebe7bf from memory into f21
la x2, scratch
li x3, 0xdafe0bc07d8a356 # load x3 with value 0xdafe0bc07d8a356
sw x3, 0(x2) # store 0xdafe0bc07d8a356 in memory
flw f16, 0(x2) # load 0xdafe0bc07d8a356 from memory into f16
fnmsub.s f31, f24, f21, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xd141f65b9ec74084 # load x3 with value 0xd141f65b9ec74084
sw x3, 0(x2) # store 0xd141f65b9ec74084 in memory
flw f7, 0(x2) # load 0xd141f65b9ec74084 from memory into f7
la x2, scratch
li x3, 0xf1bd9d9f20bcea2c # load x3 with value 0xf1bd9d9f20bcea2c
sw x3, 0(x2) # store 0xf1bd9d9f20bcea2c in memory
flw f20, 0(x2) # load 0xf1bd9d9f20bcea2c from memory into f20
fnmsub.s f31, f11, f7, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x4aa507596121abf # load x3 with value 0x4aa507596121abf
sw x3, 0(x2) # store 0x4aa507596121abf in memory
flw f11, 0(x2) # load 0x4aa507596121abf from memory into f11
la x2, scratch
li x3, 0x93bd2bf093874c74 # load x3 with value 0x93bd2bf093874c74
sw x3, 0(x2) # store 0x93bd2bf093874c74 in memory
flw f21, 0(x2) # load 0x93bd2bf093874c74 from memory into f21
fnmsub.s f17, f22, f11, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x9f4fc7bbd6b6d315 # load x3 with value 0x9f4fc7bbd6b6d315
sw x3, 0(x2) # store 0x9f4fc7bbd6b6d315 in memory
flw f19, 0(x2) # load 0x9f4fc7bbd6b6d315 from memory into f19
la x2, scratch
li x3, 0xef67c8a584b1a658 # load x3 with value 0xef67c8a584b1a658
sw x3, 0(x2) # store 0xef67c8a584b1a658 in memory
flw f21, 0(x2) # load 0xef67c8a584b1a658 from memory into f21
fnmsub.s f18, f17, f19, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x54e4a1be693590e5 # load x3 with value 0x54e4a1be693590e5
sw x3, 0(x2) # store 0x54e4a1be693590e5 in memory
flw f23, 0(x2) # load 0x54e4a1be693590e5 from memory into f23
la x2, scratch
li x3, 0x9f0cadd4343428dd # load x3 with value 0x9f0cadd4343428dd
sw x3, 0(x2) # store 0x9f0cadd4343428dd in memory
flw f5, 0(x2) # load 0x9f0cadd4343428dd from memory into f5
fnmsub.s f14, f29, f23, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x6fa3a7639e90f1dc # load x3 with value 0x6fa3a7639e90f1dc
sw x3, 0(x2) # store 0x6fa3a7639e90f1dc in memory
flw f8, 0(x2) # load 0x6fa3a7639e90f1dc from memory into f8
la x2, scratch
li x3, 0xdaf824f01203f63a # load x3 with value 0xdaf824f01203f63a
sw x3, 0(x2) # store 0xdaf824f01203f63a in memory
flw f25, 0(x2) # load 0xdaf824f01203f63a from memory into f25
fnmsub.s f14, f19, f8, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xf8f3adcd4c6d6dea # load x3 with value 0xf8f3adcd4c6d6dea
sw x3, 0(x2) # store 0xf8f3adcd4c6d6dea in memory
flw f13, 0(x2) # load 0xf8f3adcd4c6d6dea from memory into f13
la x2, scratch
li x3, 0xb7a452f5e261723c # load x3 with value 0xb7a452f5e261723c
sw x3, 0(x2) # store 0xb7a452f5e261723c in memory
flw f26, 0(x2) # load 0xb7a452f5e261723c from memory into f26
fnmsub.s f16, f25, f13, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xd90c995a711aba9d # load x3 with value 0xd90c995a711aba9d
sw x3, 0(x2) # store 0xd90c995a711aba9d in memory
flw f19, 0(x2) # load 0xd90c995a711aba9d from memory into f19
la x2, scratch
li x3, 0x73bf423aa581d68c # load x3 with value 0x73bf423aa581d68c
sw x3, 0(x2) # store 0x73bf423aa581d68c in memory
flw f30, 0(x2) # load 0x73bf423aa581d68c from memory into f30
fnmsub.s f16, f11, f19, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xb1659ea05dc5ac4 # load x3 with value 0xb1659ea05dc5ac4
sw x3, 0(x2) # store 0xb1659ea05dc5ac4 in memory
flw f25, 0(x2) # load 0xb1659ea05dc5ac4 from memory into f25
la x2, scratch
li x3, 0x63e22e11f77b8392 # load x3 with value 0x63e22e11f77b8392
sw x3, 0(x2) # store 0x63e22e11f77b8392 in memory
flw f31, 0(x2) # load 0x63e22e11f77b8392 from memory into f31
fnmsub.s f12, f26, f25, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xedf036fff73ac54d # load x3 with value 0xedf036fff73ac54d
sw x3, 0(x2) # store 0xedf036fff73ac54d in memory
flw f6, 0(x2) # load 0xedf036fff73ac54d from memory into f6
la x2, scratch
li x3, 0xf8d63f08788a2436 # load x3 with value 0xf8d63f08788a2436
sw x3, 0(x2) # store 0xf8d63f08788a2436 in memory
flw f21, 0(x2) # load 0xf8d63f08788a2436 from memory into f21
fnmsub.s f31, f10, f6, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x4ae1c9c8f6235969 # load x3 with value 0x4ae1c9c8f6235969
sw x3, 0(x2) # store 0x4ae1c9c8f6235969 in memory
flw f8, 0(x2) # load 0x4ae1c9c8f6235969 from memory into f8
la x2, scratch
li x3, 0x47ca918d90a5ffae # load x3 with value 0x47ca918d90a5ffae
sw x3, 0(x2) # store 0x47ca918d90a5ffae in memory
flw f21, 0(x2) # load 0x47ca918d90a5ffae from memory into f21
fnmsub.s f18, f1, f8, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xf4623a6cd852aa22 # load x3 with value 0xf4623a6cd852aa22
sw x3, 0(x2) # store 0xf4623a6cd852aa22 in memory
flw f1, 0(x2) # load 0xf4623a6cd852aa22 from memory into f1
la x2, scratch
li x3, 0xce16dd1f35e8aa5d # load x3 with value 0xce16dd1f35e8aa5d
sw x3, 0(x2) # store 0xce16dd1f35e8aa5d in memory
flw f5, 0(x2) # load 0xce16dd1f35e8aa5d from memory into f5
fnmsub.s f12, f28, f1, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x58f05d95708ad128 # load x3 with value 0x58f05d95708ad128
sw x3, 0(x2) # store 0x58f05d95708ad128 in memory
flw f15, 0(x2) # load 0x58f05d95708ad128 from memory into f15
la x2, scratch
li x3, 0x943c76784f167457 # load x3 with value 0x943c76784f167457
sw x3, 0(x2) # store 0x943c76784f167457 in memory
flw f10, 0(x2) # load 0x943c76784f167457 from memory into f10
fnmsub.s f28, f25, f15, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x18ea3b8e42084133 # load x3 with value 0x18ea3b8e42084133
sw x3, 0(x2) # store 0x18ea3b8e42084133 in memory
flw f8, 0(x2) # load 0x18ea3b8e42084133 from memory into f8
la x2, scratch
li x3, 0x8a3dceb9d7dec8a3 # load x3 with value 0x8a3dceb9d7dec8a3
sw x3, 0(x2) # store 0x8a3dceb9d7dec8a3 in memory
flw f22, 0(x2) # load 0x8a3dceb9d7dec8a3 from memory into f22
fnmsub.s f10, f9, f8, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x7d056f3ed1729b3f # load x3 with value 0x7d056f3ed1729b3f
sw x3, 0(x2) # store 0x7d056f3ed1729b3f in memory
flw f24, 0(x2) # load 0x7d056f3ed1729b3f from memory into f24
la x2, scratch
li x3, 0xb1493b69b75e0b4e # load x3 with value 0xb1493b69b75e0b4e
sw x3, 0(x2) # store 0xb1493b69b75e0b4e in memory
flw f17, 0(x2) # load 0xb1493b69b75e0b4e from memory into f17
fnmsub.s f31, f18, f24, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x31f845b5a8e0f821 # load x3 with value 0x31f845b5a8e0f821
sw x3, 0(x2) # store 0x31f845b5a8e0f821 in memory
flw f9, 0(x2) # load 0x31f845b5a8e0f821 from memory into f9
la x2, scratch
li x3, 0xb0eb5b3678eb0a92 # load x3 with value 0xb0eb5b3678eb0a92
sw x3, 0(x2) # store 0xb0eb5b3678eb0a92 in memory
flw f18, 0(x2) # load 0xb0eb5b3678eb0a92 from memory into f18
fnmsub.s f5, f12, f9, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x284ceab1c38befe8 # load x3 with value 0x284ceab1c38befe8
sw x3, 0(x2) # store 0x284ceab1c38befe8 in memory
flw f16, 0(x2) # load 0x284ceab1c38befe8 from memory into f16
la x2, scratch
li x3, 0x45c522da50cce7df # load x3 with value 0x45c522da50cce7df
sw x3, 0(x2) # store 0x45c522da50cce7df in memory
flw f26, 0(x2) # load 0x45c522da50cce7df from memory into f26
fnmsub.s f31, f14, f16, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x2078e809199e5777 # load x3 with value 0x2078e809199e5777
sw x3, 0(x2) # store 0x2078e809199e5777 in memory
flw f20, 0(x2) # load 0x2078e809199e5777 from memory into f20
la x2, scratch
li x3, 0xa2ef7ad7d11b4e09 # load x3 with value 0xa2ef7ad7d11b4e09
sw x3, 0(x2) # store 0xa2ef7ad7d11b4e09 in memory
flw f27, 0(x2) # load 0xa2ef7ad7d11b4e09 from memory into f27
fnmsub.s f31, f3, f20, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xce2e6ac45850472d # load x3 with value 0xce2e6ac45850472d
sw x3, 0(x2) # store 0xce2e6ac45850472d in memory
flw f8, 0(x2) # load 0xce2e6ac45850472d from memory into f8
la x2, scratch
li x3, 0x69bacc4236a27bab # load x3 with value 0x69bacc4236a27bab
sw x3, 0(x2) # store 0x69bacc4236a27bab in memory
flw f15, 0(x2) # load 0x69bacc4236a27bab from memory into f15
fnmsub.s f25, f7, f8, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xb88a6d14015f3838 # load x3 with value 0xb88a6d14015f3838
sw x3, 0(x2) # store 0xb88a6d14015f3838 in memory
flw f17, 0(x2) # load 0xb88a6d14015f3838 from memory into f17
la x2, scratch
li x3, 0x183a7a66477faec3 # load x3 with value 0x183a7a66477faec3
sw x3, 0(x2) # store 0x183a7a66477faec3 in memory
flw f22, 0(x2) # load 0x183a7a66477faec3 from memory into f22
fnmsub.s f14, f11, f17, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x8591084be0b7d953 # load x3 with value 0x8591084be0b7d953
sw x3, 0(x2) # store 0x8591084be0b7d953 in memory
flw f22, 0(x2) # load 0x8591084be0b7d953 from memory into f22
la x2, scratch
li x3, 0x27d59dddadd81e6 # load x3 with value 0x27d59dddadd81e6
sw x3, 0(x2) # store 0x27d59dddadd81e6 in memory
flw f19, 0(x2) # load 0x27d59dddadd81e6 from memory into f19
fnmsub.s f29, f15, f22, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xb36bd6eeef0354c4 # load x3 with value 0xb36bd6eeef0354c4
sw x3, 0(x2) # store 0xb36bd6eeef0354c4 in memory
flw f3, 0(x2) # load 0xb36bd6eeef0354c4 from memory into f3
la x2, scratch
li x3, 0x67618795d425c4c4 # load x3 with value 0x67618795d425c4c4
sw x3, 0(x2) # store 0x67618795d425c4c4 in memory
flw f14, 0(x2) # load 0x67618795d425c4c4 from memory into f14
fnmsub.s f8, f18, f3, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x48f3ee99b12cc3f9 # load x3 with value 0x48f3ee99b12cc3f9
sw x3, 0(x2) # store 0x48f3ee99b12cc3f9 in memory
flw f15, 0(x2) # load 0x48f3ee99b12cc3f9 from memory into f15
la x2, scratch
li x3, 0x5ab6828dee53b2a5 # load x3 with value 0x5ab6828dee53b2a5
sw x3, 0(x2) # store 0x5ab6828dee53b2a5 in memory
flw f8, 0(x2) # load 0x5ab6828dee53b2a5 from memory into f8
fnmsub.s f5, f27, f15, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xa6cbeef528fe7950 # load x3 with value 0xa6cbeef528fe7950
sw x3, 0(x2) # store 0xa6cbeef528fe7950 in memory
flw f13, 0(x2) # load 0xa6cbeef528fe7950 from memory into f13
la x2, scratch
li x3, 0x5706161956881858 # load x3 with value 0x5706161956881858
sw x3, 0(x2) # store 0x5706161956881858 in memory
flw f21, 0(x2) # load 0x5706161956881858 from memory into f21
fnmsub.s f15, f30, f13, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x2479ccbe946f982 # load x3 with value 0x2479ccbe946f982
sw x3, 0(x2) # store 0x2479ccbe946f982 in memory
flw f21, 0(x2) # load 0x2479ccbe946f982 from memory into f21
la x2, scratch
li x3, 0x2bbf7d480e8eec44 # load x3 with value 0x2bbf7d480e8eec44
sw x3, 0(x2) # store 0x2bbf7d480e8eec44 in memory
flw f26, 0(x2) # load 0x2bbf7d480e8eec44 from memory into f26
fnmsub.s f11, f16, f21, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0xe54ca222ac41d878 # load x3 with value 0xe54ca222ac41d878
sw x3, 0(x2) # store 0xe54ca222ac41d878 in memory
flw f31, 0(x2) # load 0xe54ca222ac41d878 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xe6693255dfd5bc6d # load x3 with value 0xe6693255dfd5bc6d
sw x3, 0(x2) # store 0xe6693255dfd5bc6d in memory
flw f29, 0(x2) # load 0xe6693255dfd5bc6d from memory into f29
fnmsub.s f25, f31, f11, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x9643f15157b742ca # load x3 with value 0x9643f15157b742ca
sw x3, 0(x2) # store 0x9643f15157b742ca in memory
flw f24, 0(x2) # load 0x9643f15157b742ca from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xd69ba2fc0a85b215 # load x3 with value 0xd69ba2fc0a85b215
sw x3, 0(x2) # store 0xd69ba2fc0a85b215 in memory
flw f12, 0(x2) # load 0xd69ba2fc0a85b215 from memory into f12
fnmsub.s f17, f24, f11, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0xbbd6f14e0722c2bf # load x3 with value 0xbbd6f14e0722c2bf
sw x3, 0(x2) # store 0xbbd6f14e0722c2bf in memory
flw f26, 0(x2) # load 0xbbd6f14e0722c2bf from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x8b56b81654322459 # load x3 with value 0x8b56b81654322459
sw x3, 0(x2) # store 0x8b56b81654322459 in memory
flw f6, 0(x2) # load 0x8b56b81654322459 from memory into f6
fnmsub.s f11, f26, f8, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0x3345644de006f876 # load x3 with value 0x3345644de006f876
sw x3, 0(x2) # store 0x3345644de006f876 in memory
flw f6, 0(x2) # load 0x3345644de006f876 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x98a6559436245082 # load x3 with value 0x98a6559436245082
sw x3, 0(x2) # store 0x98a6559436245082 in memory
flw f31, 0(x2) # load 0x98a6559436245082 from memory into f31
fnmsub.s f5, f6, f25, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0x20dd84a47f4d3bb0 # load x3 with value 0x20dd84a47f4d3bb0
sw x3, 0(x2) # store 0x20dd84a47f4d3bb0 in memory
flw f27, 0(x2) # load 0x20dd84a47f4d3bb0 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x34b0ebcad1d3c85a # load x3 with value 0x34b0ebcad1d3c85a
sw x3, 0(x2) # store 0x34b0ebcad1d3c85a in memory
flw f21, 0(x2) # load 0x34b0ebcad1d3c85a from memory into f21
fnmsub.s f25, f27, f31, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0x9d66c858184bb716 # load x3 with value 0x9d66c858184bb716
sw x3, 0(x2) # store 0x9d66c858184bb716 in memory
flw f23, 0(x2) # load 0x9d66c858184bb716 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x31e999b3cc98ae4b # load x3 with value 0x31e999b3cc98ae4b
sw x3, 0(x2) # store 0x31e999b3cc98ae4b in memory
flw f8, 0(x2) # load 0x31e999b3cc98ae4b from memory into f8
fnmsub.s f25, f23, f11, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xa1883b863cf799b9 # load x3 with value 0xa1883b863cf799b9
sw x3, 0(x2) # store 0xa1883b863cf799b9 in memory
flw f22, 0(x2) # load 0xa1883b863cf799b9 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x8e514dec48788799 # load x3 with value 0x8e514dec48788799
sw x3, 0(x2) # store 0x8e514dec48788799 in memory
flw f18, 0(x2) # load 0x8e514dec48788799 from memory into f18
fnmsub.s f2, f22, f26, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0x9c3cd54a6822708e # load x3 with value 0x9c3cd54a6822708e
sw x3, 0(x2) # store 0x9c3cd54a6822708e in memory
flw f14, 0(x2) # load 0x9c3cd54a6822708e from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x94c8ce3c21c68b74 # load x3 with value 0x94c8ce3c21c68b74
sw x3, 0(x2) # store 0x94c8ce3c21c68b74 in memory
flw f9, 0(x2) # load 0x94c8ce3c21c68b74 from memory into f9
fnmsub.s f23, f14, f26, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0xae12acad572c7fcd # load x3 with value 0xae12acad572c7fcd
sw x3, 0(x2) # store 0xae12acad572c7fcd in memory
flw f31, 0(x2) # load 0xae12acad572c7fcd from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xc78817f3cda705cf # load x3 with value 0xc78817f3cda705cf
sw x3, 0(x2) # store 0xc78817f3cda705cf in memory
flw f28, 0(x2) # load 0xc78817f3cda705cf from memory into f28
fnmsub.s f5, f31, f2, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0xff5fcbd3b865a731 # load x3 with value 0xff5fcbd3b865a731
sw x3, 0(x2) # store 0xff5fcbd3b865a731 in memory
flw f5, 0(x2) # load 0xff5fcbd3b865a731 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xa629c3ba412cb132 # load x3 with value 0xa629c3ba412cb132
sw x3, 0(x2) # store 0xa629c3ba412cb132 in memory
flw f13, 0(x2) # load 0xa629c3ba412cb132 from memory into f13
fnmsub.s f12, f5, f24, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0x7f61dbd68c696826 # load x3 with value 0x7f61dbd68c696826
sw x3, 0(x2) # store 0x7f61dbd68c696826 in memory
flw f6, 0(x2) # load 0x7f61dbd68c696826 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x28a678193b5e97e5 # load x3 with value 0x28a678193b5e97e5
sw x3, 0(x2) # store 0x28a678193b5e97e5 in memory
flw f24, 0(x2) # load 0x28a678193b5e97e5 from memory into f24
fnmsub.s f7, f6, f1, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0xbcaec11fdc34250d # load x3 with value 0xbcaec11fdc34250d
sw x3, 0(x2) # store 0xbcaec11fdc34250d in memory
flw f26, 0(x2) # load 0xbcaec11fdc34250d from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xff29e0c2701454df # load x3 with value 0xff29e0c2701454df
sw x3, 0(x2) # store 0xff29e0c2701454df in memory
flw f6, 0(x2) # load 0xff29e0c2701454df from memory into f6
fnmsub.s f11, f26, f3, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0x39f09d75f38fd6 # load x3 with value 0x39f09d75f38fd6
sw x3, 0(x2) # store 0x39f09d75f38fd6 in memory
flw f24, 0(x2) # load 0x39f09d75f38fd6 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x2e5321cdb15b4d3b # load x3 with value 0x2e5321cdb15b4d3b
sw x3, 0(x2) # store 0x2e5321cdb15b4d3b in memory
flw f8, 0(x2) # load 0x2e5321cdb15b4d3b from memory into f8
fnmsub.s f13, f24, f27, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0xf5f2c713909f627f # load x3 with value 0xf5f2c713909f627f
sw x3, 0(x2) # store 0xf5f2c713909f627f in memory
flw f24, 0(x2) # load 0xf5f2c713909f627f from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x346d024aa4bd033e # load x3 with value 0x346d024aa4bd033e
sw x3, 0(x2) # store 0x346d024aa4bd033e in memory
flw f20, 0(x2) # load 0x346d024aa4bd033e from memory into f20
fnmsub.s f18, f24, f28, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0xf6f41a61293a3783 # load x3 with value 0xf6f41a61293a3783
sw x3, 0(x2) # store 0xf6f41a61293a3783 in memory
flw f28, 0(x2) # load 0xf6f41a61293a3783 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xc5140b05aaa3003f # load x3 with value 0xc5140b05aaa3003f
sw x3, 0(x2) # store 0xc5140b05aaa3003f in memory
flw f24, 0(x2) # load 0xc5140b05aaa3003f from memory into f24
fnmsub.s f17, f28, f25, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0xb996686706cff2ca # load x3 with value 0xb996686706cff2ca
sw x3, 0(x2) # store 0xb996686706cff2ca in memory
flw f10, 0(x2) # load 0xb996686706cff2ca from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x61509fdef0509013 # load x3 with value 0x61509fdef0509013
sw x3, 0(x2) # store 0x61509fdef0509013 in memory
flw f20, 0(x2) # load 0x61509fdef0509013 from memory into f20
fnmsub.s f14, f10, f6, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x9afd6ad294752c16 # load x3 with value 0x9afd6ad294752c16
sw x3, 0(x2) # store 0x9afd6ad294752c16 in memory
flw f10, 0(x2) # load 0x9afd6ad294752c16 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x6d9c60c4c76d5286 # load x3 with value 0x6d9c60c4c76d5286
sw x3, 0(x2) # store 0x6d9c60c4c76d5286 in memory
flw f1, 0(x2) # load 0x6d9c60c4c76d5286 from memory into f1
fnmsub.s f8, f10, f17, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0x4c1f63056d3b4ff8 # load x3 with value 0x4c1f63056d3b4ff8
sw x3, 0(x2) # store 0x4c1f63056d3b4ff8 in memory
flw f15, 0(x2) # load 0x4c1f63056d3b4ff8 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xf083adcf7f8180b # load x3 with value 0xf083adcf7f8180b
sw x3, 0(x2) # store 0xf083adcf7f8180b in memory
flw f28, 0(x2) # load 0xf083adcf7f8180b from memory into f28
fnmsub.s f30, f15, f26, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0x916ed9eacf1c89bd # load x3 with value 0x916ed9eacf1c89bd
sw x3, 0(x2) # store 0x916ed9eacf1c89bd in memory
flw f27, 0(x2) # load 0x916ed9eacf1c89bd from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x85e6d38a98d90bb1 # load x3 with value 0x85e6d38a98d90bb1
sw x3, 0(x2) # store 0x85e6d38a98d90bb1 in memory
flw f24, 0(x2) # load 0x85e6d38a98d90bb1 from memory into f24
fnmsub.s f21, f27, f28, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xfe39ac57c4554a8b # load x3 with value 0xfe39ac57c4554a8b
sw x3, 0(x2) # store 0xfe39ac57c4554a8b in memory
flw f16, 0(x2) # load 0xfe39ac57c4554a8b from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x294ed5fd5aaee46a # load x3 with value 0x294ed5fd5aaee46a
sw x3, 0(x2) # store 0x294ed5fd5aaee46a in memory
flw f8, 0(x2) # load 0x294ed5fd5aaee46a from memory into f8
fnmsub.s f1, f16, f9, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0x5fafcaa8e8282693 # load x3 with value 0x5fafcaa8e8282693
sw x3, 0(x2) # store 0x5fafcaa8e8282693 in memory
flw f1, 0(x2) # load 0x5fafcaa8e8282693 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xb0953b620212ba72 # load x3 with value 0xb0953b620212ba72
sw x3, 0(x2) # store 0xb0953b620212ba72 in memory
flw f31, 0(x2) # load 0xb0953b620212ba72 from memory into f31
fnmsub.s f20, f1, f10, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0x6c0d26930f4231d0 # load x3 with value 0x6c0d26930f4231d0
sw x3, 0(x2) # store 0x6c0d26930f4231d0 in memory
flw f10, 0(x2) # load 0x6c0d26930f4231d0 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xf0e70f56fb005d84 # load x3 with value 0xf0e70f56fb005d84
sw x3, 0(x2) # store 0xf0e70f56fb005d84 in memory
flw f13, 0(x2) # load 0xf0e70f56fb005d84 from memory into f13
fnmsub.s f12, f10, f5, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0xc4e3843dfcb03dca # load x3 with value 0xc4e3843dfcb03dca
sw x3, 0(x2) # store 0xc4e3843dfcb03dca in memory
flw f31, 0(x2) # load 0xc4e3843dfcb03dca from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x9384fa8ce6f0a106 # load x3 with value 0x9384fa8ce6f0a106
sw x3, 0(x2) # store 0x9384fa8ce6f0a106 in memory
flw f16, 0(x2) # load 0x9384fa8ce6f0a106 from memory into f16
fnmsub.s f2, f31, f17, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x548da1aba4e77056 # load x3 with value 0x548da1aba4e77056
sw x3, 0(x2) # store 0x548da1aba4e77056 in memory
flw f10, 0(x2) # load 0x548da1aba4e77056 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7d600945ea34bb15 # load x3 with value 0x7d600945ea34bb15
sw x3, 0(x2) # store 0x7d600945ea34bb15 in memory
flw f28, 0(x2) # load 0x7d600945ea34bb15 from memory into f28
fnmsub.s f1, f10, f12, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0xf672e20d6de23048 # load x3 with value 0xf672e20d6de23048
sw x3, 0(x2) # store 0xf672e20d6de23048 in memory
flw f17, 0(x2) # load 0xf672e20d6de23048 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x857a0bada936d32b # load x3 with value 0x857a0bada936d32b
sw x3, 0(x2) # store 0x857a0bada936d32b in memory
flw f24, 0(x2) # load 0x857a0bada936d32b from memory into f24
fnmsub.s f21, f17, f11, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0xa41349b9f06417db # load x3 with value 0xa41349b9f06417db
sw x3, 0(x2) # store 0xa41349b9f06417db in memory
flw f18, 0(x2) # load 0xa41349b9f06417db from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xeca74f1fced3b118 # load x3 with value 0xeca74f1fced3b118
sw x3, 0(x2) # store 0xeca74f1fced3b118 in memory
flw f2, 0(x2) # load 0xeca74f1fced3b118 from memory into f2
fnmsub.s f27, f18, f21, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0x1900561800bb01a5 # load x3 with value 0x1900561800bb01a5
sw x3, 0(x2) # store 0x1900561800bb01a5 in memory
flw f27, 0(x2) # load 0x1900561800bb01a5 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x21e0a2ca6881d296 # load x3 with value 0x21e0a2ca6881d296
sw x3, 0(x2) # store 0x21e0a2ca6881d296 in memory
flw f9, 0(x2) # load 0x21e0a2ca6881d296 from memory into f9
fnmsub.s f22, f27, f26, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0x71a1a8b16e3564aa # load x3 with value 0x71a1a8b16e3564aa
sw x3, 0(x2) # store 0x71a1a8b16e3564aa in memory
flw f11, 0(x2) # load 0x71a1a8b16e3564aa from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x5b438f66161a3346 # load x3 with value 0x5b438f66161a3346
sw x3, 0(x2) # store 0x5b438f66161a3346 in memory
flw f31, 0(x2) # load 0x5b438f66161a3346 from memory into f31
fnmsub.s f14, f11, f12, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xbab9c88d3ba561ef # load x3 with value 0xbab9c88d3ba561ef
sw x3, 0(x2) # store 0xbab9c88d3ba561ef in memory
flw f13, 0(x2) # load 0xbab9c88d3ba561ef from memory into f13
la x2, scratch
li x3, 0x92238b0c0739ffb7 # load x3 with value 0x92238b0c0739ffb7
sw x3, 0(x2) # store 0x92238b0c0739ffb7 in memory
flw f11, 0(x2) # load 0x92238b0c0739ffb7 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f19, f13, f11, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0xe323e36d2a3090f0 # load x3 with value 0xe323e36d2a3090f0
sw x3, 0(x2) # store 0xe323e36d2a3090f0 in memory
flw f20, 0(x2) # load 0xe323e36d2a3090f0 from memory into f20
la x2, scratch
li x3, 0xe8433f6bcf1cf51f # load x3 with value 0xe8433f6bcf1cf51f
sw x3, 0(x2) # store 0xe8433f6bcf1cf51f in memory
flw f11, 0(x2) # load 0xe8433f6bcf1cf51f from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fnmsub.s f17, f20, f11, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0xda63f0cf39a5e0da # load x3 with value 0xda63f0cf39a5e0da
sw x3, 0(x2) # store 0xda63f0cf39a5e0da in memory
flw f28, 0(x2) # load 0xda63f0cf39a5e0da from memory into f28
la x2, scratch
li x3, 0xb97b6d9bc39a5393 # load x3 with value 0xb97b6d9bc39a5393
sw x3, 0(x2) # store 0xb97b6d9bc39a5393 in memory
flw f24, 0(x2) # load 0xb97b6d9bc39a5393 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmsub.s f6, f28, f24, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x27752a4115ac8cd0 # load x3 with value 0x27752a4115ac8cd0
sw x3, 0(x2) # store 0x27752a4115ac8cd0 in memory
flw f16, 0(x2) # load 0x27752a4115ac8cd0 from memory into f16
la x2, scratch
li x3, 0xdb65ac934f3b07f7 # load x3 with value 0xdb65ac934f3b07f7
sw x3, 0(x2) # store 0xdb65ac934f3b07f7 in memory
flw f10, 0(x2) # load 0xdb65ac934f3b07f7 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fnmsub.s f2, f16, f10, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0x5dcb179d4bafa0ef # load x3 with value 0x5dcb179d4bafa0ef
sw x3, 0(x2) # store 0x5dcb179d4bafa0ef in memory
flw f14, 0(x2) # load 0x5dcb179d4bafa0ef from memory into f14
la x2, scratch
li x3, 0xba57dff054e59058 # load x3 with value 0xba57dff054e59058
sw x3, 0(x2) # store 0xba57dff054e59058 in memory
flw f13, 0(x2) # load 0xba57dff054e59058 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f24, f14, f13, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0xc23cce1d310891f1 # load x3 with value 0xc23cce1d310891f1
sw x3, 0(x2) # store 0xc23cce1d310891f1 in memory
flw f23, 0(x2) # load 0xc23cce1d310891f1 from memory into f23
la x2, scratch
li x3, 0x85edd1df3e92252b # load x3 with value 0x85edd1df3e92252b
sw x3, 0(x2) # store 0x85edd1df3e92252b in memory
flw f18, 0(x2) # load 0x85edd1df3e92252b from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmsub.s f27, f23, f18, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0x96a74d8617494bad # load x3 with value 0x96a74d8617494bad
sw x3, 0(x2) # store 0x96a74d8617494bad in memory
flw f14, 0(x2) # load 0x96a74d8617494bad from memory into f14
la x2, scratch
li x3, 0x30d9aeb29a9fbebb # load x3 with value 0x30d9aeb29a9fbebb
sw x3, 0(x2) # store 0x30d9aeb29a9fbebb in memory
flw f30, 0(x2) # load 0x30d9aeb29a9fbebb from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fnmsub.s f11, f14, f30, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0x78b165751c047836 # load x3 with value 0x78b165751c047836
sw x3, 0(x2) # store 0x78b165751c047836 in memory
flw f31, 0(x2) # load 0x78b165751c047836 from memory into f31
la x2, scratch
li x3, 0xc20db1f79ed9e8a2 # load x3 with value 0xc20db1f79ed9e8a2
sw x3, 0(x2) # store 0xc20db1f79ed9e8a2 in memory
flw f12, 0(x2) # load 0xc20db1f79ed9e8a2 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmsub.s f23, f31, f12, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x81af3c392e04603d # load x3 with value 0x81af3c392e04603d
sw x3, 0(x2) # store 0x81af3c392e04603d in memory
flw f10, 0(x2) # load 0x81af3c392e04603d from memory into f10
la x2, scratch
li x3, 0xeb0e6847149a1d39 # load x3 with value 0xeb0e6847149a1d39
sw x3, 0(x2) # store 0xeb0e6847149a1d39 in memory
flw f18, 0(x2) # load 0xeb0e6847149a1d39 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f20, f10, f18, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0xce21e65dc2460357 # load x3 with value 0xce21e65dc2460357
sw x3, 0(x2) # store 0xce21e65dc2460357 in memory
flw f13, 0(x2) # load 0xce21e65dc2460357 from memory into f13
la x2, scratch
li x3, 0xd596b00f7efb2054 # load x3 with value 0xd596b00f7efb2054
sw x3, 0(x2) # store 0xd596b00f7efb2054 in memory
flw f20, 0(x2) # load 0xd596b00f7efb2054 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f21, f13, f20, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x1e4eee643a03623b # load x3 with value 0x1e4eee643a03623b
sw x3, 0(x2) # store 0x1e4eee643a03623b in memory
flw f25, 0(x2) # load 0x1e4eee643a03623b from memory into f25
la x2, scratch
li x3, 0xa2db2e12aa4575ca # load x3 with value 0xa2db2e12aa4575ca
sw x3, 0(x2) # store 0xa2db2e12aa4575ca in memory
flw f11, 0(x2) # load 0xa2db2e12aa4575ca from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmsub.s f6, f25, f11, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0x9472bc77ec470f32 # load x3 with value 0x9472bc77ec470f32
sw x3, 0(x2) # store 0x9472bc77ec470f32 in memory
flw f2, 0(x2) # load 0x9472bc77ec470f32 from memory into f2
la x2, scratch
li x3, 0xdd11dfba37440e1c # load x3 with value 0xdd11dfba37440e1c
sw x3, 0(x2) # store 0xdd11dfba37440e1c in memory
flw f29, 0(x2) # load 0xdd11dfba37440e1c from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fnmsub.s f30, f2, f29, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xf2773157d136b21d # load x3 with value 0xf2773157d136b21d
sw x3, 0(x2) # store 0xf2773157d136b21d in memory
flw f5, 0(x2) # load 0xf2773157d136b21d from memory into f5
la x2, scratch
li x3, 0x728218ed5430c329 # load x3 with value 0x728218ed5430c329
sw x3, 0(x2) # store 0x728218ed5430c329 in memory
flw f27, 0(x2) # load 0x728218ed5430c329 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f3, f5, f27, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0xba6e3a1a2ce3a021 # load x3 with value 0xba6e3a1a2ce3a021
sw x3, 0(x2) # store 0xba6e3a1a2ce3a021 in memory
flw f14, 0(x2) # load 0xba6e3a1a2ce3a021 from memory into f14
la x2, scratch
li x3, 0xb57c5b58b88788a5 # load x3 with value 0xb57c5b58b88788a5
sw x3, 0(x2) # store 0xb57c5b58b88788a5 in memory
flw f1, 0(x2) # load 0xb57c5b58b88788a5 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmsub.s f25, f14, f1, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0xb7f1e62f5863777b # load x3 with value 0xb7f1e62f5863777b
sw x3, 0(x2) # store 0xb7f1e62f5863777b in memory
flw f20, 0(x2) # load 0xb7f1e62f5863777b from memory into f20
la x2, scratch
li x3, 0xa6361866fabd8d09 # load x3 with value 0xa6361866fabd8d09
sw x3, 0(x2) # store 0xa6361866fabd8d09 in memory
flw f13, 0(x2) # load 0xa6361866fabd8d09 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmsub.s f8, f20, f13, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0xd51097a4d8562bf6 # load x3 with value 0xd51097a4d8562bf6
sw x3, 0(x2) # store 0xd51097a4d8562bf6 in memory
flw f26, 0(x2) # load 0xd51097a4d8562bf6 from memory into f26
la x2, scratch
li x3, 0x62db6e2eb7060a37 # load x3 with value 0x62db6e2eb7060a37
sw x3, 0(x2) # store 0x62db6e2eb7060a37 in memory
flw f10, 0(x2) # load 0x62db6e2eb7060a37 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f20, f26, f10, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x8df884e777ffd2fb # load x3 with value 0x8df884e777ffd2fb
sw x3, 0(x2) # store 0x8df884e777ffd2fb in memory
flw f30, 0(x2) # load 0x8df884e777ffd2fb from memory into f30
la x2, scratch
li x3, 0x464a432b72d5570b # load x3 with value 0x464a432b72d5570b
sw x3, 0(x2) # store 0x464a432b72d5570b in memory
flw f25, 0(x2) # load 0x464a432b72d5570b from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmsub.s f9, f30, f25, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0xc0c45a1bbf4b8461 # load x3 with value 0xc0c45a1bbf4b8461
sw x3, 0(x2) # store 0xc0c45a1bbf4b8461 in memory
flw f29, 0(x2) # load 0xc0c45a1bbf4b8461 from memory into f29
la x2, scratch
li x3, 0x6cf66ab776192a35 # load x3 with value 0x6cf66ab776192a35
sw x3, 0(x2) # store 0x6cf66ab776192a35 in memory
flw f30, 0(x2) # load 0x6cf66ab776192a35 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f13, f29, f30, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0x454aa16b9b772dbe # load x3 with value 0x454aa16b9b772dbe
sw x3, 0(x2) # store 0x454aa16b9b772dbe in memory
flw f1, 0(x2) # load 0x454aa16b9b772dbe from memory into f1
la x2, scratch
li x3, 0x35daf8e871be6e1b # load x3 with value 0x35daf8e871be6e1b
sw x3, 0(x2) # store 0x35daf8e871be6e1b in memory
flw f13, 0(x2) # load 0x35daf8e871be6e1b from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fnmsub.s f16, f1, f13, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0x7ca484e30f170be # load x3 with value 0x7ca484e30f170be
sw x3, 0(x2) # store 0x7ca484e30f170be in memory
flw f22, 0(x2) # load 0x7ca484e30f170be from memory into f22
la x2, scratch
li x3, 0xc187fee85837dda4 # load x3 with value 0xc187fee85837dda4
sw x3, 0(x2) # store 0xc187fee85837dda4 in memory
flw f27, 0(x2) # load 0xc187fee85837dda4 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f30, f22, f27, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0xe651b1f25e553315 # load x3 with value 0xe651b1f25e553315
sw x3, 0(x2) # store 0xe651b1f25e553315 in memory
flw f17, 0(x2) # load 0xe651b1f25e553315 from memory into f17
la x2, scratch
li x3, 0x9b1cd1cb5b66d2fe # load x3 with value 0x9b1cd1cb5b66d2fe
sw x3, 0(x2) # store 0x9b1cd1cb5b66d2fe in memory
flw f18, 0(x2) # load 0x9b1cd1cb5b66d2fe from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f14, f17, f18, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x1d8ea6722e605ef8 # load x3 with value 0x1d8ea6722e605ef8
sw x3, 0(x2) # store 0x1d8ea6722e605ef8 in memory
flw f25, 0(x2) # load 0x1d8ea6722e605ef8 from memory into f25
la x2, scratch
li x3, 0xcf0d695fff61ec19 # load x3 with value 0xcf0d695fff61ec19
sw x3, 0(x2) # store 0xcf0d695fff61ec19 in memory
flw f5, 0(x2) # load 0xcf0d695fff61ec19 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmsub.s f29, f25, f5, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0x8e72946e0489c379 # load x3 with value 0x8e72946e0489c379
sw x3, 0(x2) # store 0x8e72946e0489c379 in memory
flw f6, 0(x2) # load 0x8e72946e0489c379 from memory into f6
la x2, scratch
li x3, 0x316787a4cd4e4044 # load x3 with value 0x316787a4cd4e4044
sw x3, 0(x2) # store 0x316787a4cd4e4044 in memory
flw f15, 0(x2) # load 0x316787a4cd4e4044 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fnmsub.s f20, f6, f15, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0x806f1c6b4ad0651c # load x3 with value 0x806f1c6b4ad0651c
sw x3, 0(x2) # store 0x806f1c6b4ad0651c in memory
flw f12, 0(x2) # load 0x806f1c6b4ad0651c from memory into f12
la x2, scratch
li x3, 0xe404840834d567bc # load x3 with value 0xe404840834d567bc
sw x3, 0(x2) # store 0xe404840834d567bc in memory
flw f5, 0(x2) # load 0xe404840834d567bc from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fnmsub.s f8, f12, f5, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x397fcfe0d76c7eb3 # load x3 with value 0x397fcfe0d76c7eb3
sw x3, 0(x2) # store 0x397fcfe0d76c7eb3 in memory
flw f13, 0(x2) # load 0x397fcfe0d76c7eb3 from memory into f13
la x2, scratch
li x3, 0x1e72145645c0ce08 # load x3 with value 0x1e72145645c0ce08
sw x3, 0(x2) # store 0x1e72145645c0ce08 in memory
flw f23, 0(x2) # load 0x1e72145645c0ce08 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f11, f13, f23, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0xa9b039b35a29dc61 # load x3 with value 0xa9b039b35a29dc61
sw x3, 0(x2) # store 0xa9b039b35a29dc61 in memory
flw f11, 0(x2) # load 0xa9b039b35a29dc61 from memory into f11
la x2, scratch
li x3, 0x8e634a57e5ee45c0 # load x3 with value 0x8e634a57e5ee45c0
sw x3, 0(x2) # store 0x8e634a57e5ee45c0 in memory
flw f15, 0(x2) # load 0x8e634a57e5ee45c0 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmsub.s f5, f11, f15, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x84176f4a7ca7aa47 # load x3 with value 0x84176f4a7ca7aa47
sw x3, 0(x2) # store 0x84176f4a7ca7aa47 in memory
flw f6, 0(x2) # load 0x84176f4a7ca7aa47 from memory into f6
la x2, scratch
li x3, 0xf8a7b6210ba12ffd # load x3 with value 0xf8a7b6210ba12ffd
sw x3, 0(x2) # store 0xf8a7b6210ba12ffd in memory
flw f29, 0(x2) # load 0xf8a7b6210ba12ffd from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f20, f6, f29, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x5c7afd57487c0656 # load x3 with value 0x5c7afd57487c0656
sw x3, 0(x2) # store 0x5c7afd57487c0656 in memory
flw f9, 0(x2) # load 0x5c7afd57487c0656 from memory into f9
la x2, scratch
li x3, 0x362b2ab6891bf5fb # load x3 with value 0x362b2ab6891bf5fb
sw x3, 0(x2) # store 0x362b2ab6891bf5fb in memory
flw f30, 0(x2) # load 0x362b2ab6891bf5fb from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f18, f9, f30, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0xd3c3c40e79e61fd8 # load x3 with value 0xd3c3c40e79e61fd8
sw x3, 0(x2) # store 0xd3c3c40e79e61fd8 in memory
flw f0, 0(x2) # load 0xd3c3c40e79e61fd8 from memory into f0
la x2, scratch
li x3, 0x95a3911b0692a631 # load x3 with value 0x95a3911b0692a631
sw x3, 0(x2) # store 0x95a3911b0692a631 in memory
flw f16, 0(x2) # load 0x95a3911b0692a631 from memory into f16
la x2, scratch
li x3, 0xc6af1a6190e0e51 # load x3 with value 0xc6af1a6190e0e51
sw x3, 0(x2) # store 0xc6af1a6190e0e51 in memory
flw f27, 0(x2) # load 0xc6af1a6190e0e51 from memory into f27
fnmsub.s f0, f0, f16, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0xc822a038ca1bbbc7 # load x3 with value 0xc822a038ca1bbbc7
sw x3, 0(x2) # store 0xc822a038ca1bbbc7 in memory
flw f1, 0(x2) # load 0xc822a038ca1bbbc7 from memory into f1
la x2, scratch
li x3, 0xc7e94359f5f049f1 # load x3 with value 0xc7e94359f5f049f1
sw x3, 0(x2) # store 0xc7e94359f5f049f1 in memory
flw f7, 0(x2) # load 0xc7e94359f5f049f1 from memory into f7
la x2, scratch
li x3, 0xdbcb940bf217c197 # load x3 with value 0xdbcb940bf217c197
sw x3, 0(x2) # store 0xdbcb940bf217c197 in memory
flw f28, 0(x2) # load 0xdbcb940bf217c197 from memory into f28
fnmsub.s f1, f1, f7, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x9905c28cad71b77e # load x3 with value 0x9905c28cad71b77e
sw x3, 0(x2) # store 0x9905c28cad71b77e in memory
flw f2, 0(x2) # load 0x9905c28cad71b77e from memory into f2
la x2, scratch
li x3, 0x4a38f8c8240bf1b # load x3 with value 0x4a38f8c8240bf1b
sw x3, 0(x2) # store 0x4a38f8c8240bf1b in memory
flw f27, 0(x2) # load 0x4a38f8c8240bf1b from memory into f27
la x2, scratch
li x3, 0x7b54715bd25e24be # load x3 with value 0x7b54715bd25e24be
sw x3, 0(x2) # store 0x7b54715bd25e24be in memory
flw f19, 0(x2) # load 0x7b54715bd25e24be from memory into f19
fnmsub.s f2, f2, f27, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x8fd35f792f20dfe3 # load x3 with value 0x8fd35f792f20dfe3
sw x3, 0(x2) # store 0x8fd35f792f20dfe3 in memory
flw f3, 0(x2) # load 0x8fd35f792f20dfe3 from memory into f3
la x2, scratch
li x3, 0xc82a3dbe303accbe # load x3 with value 0xc82a3dbe303accbe
sw x3, 0(x2) # store 0xc82a3dbe303accbe in memory
flw f16, 0(x2) # load 0xc82a3dbe303accbe from memory into f16
la x2, scratch
li x3, 0xcdd29eddefd74aa8 # load x3 with value 0xcdd29eddefd74aa8
sw x3, 0(x2) # store 0xcdd29eddefd74aa8 in memory
flw f23, 0(x2) # load 0xcdd29eddefd74aa8 from memory into f23
fnmsub.s f3, f3, f16, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x45aa30a4cecd1730 # load x3 with value 0x45aa30a4cecd1730
sw x3, 0(x2) # store 0x45aa30a4cecd1730 in memory
flw f4, 0(x2) # load 0x45aa30a4cecd1730 from memory into f4
la x2, scratch
li x3, 0xe8c6d245152df1eb # load x3 with value 0xe8c6d245152df1eb
sw x3, 0(x2) # store 0xe8c6d245152df1eb in memory
flw f19, 0(x2) # load 0xe8c6d245152df1eb from memory into f19
la x2, scratch
li x3, 0xb7d5636cc9b86 # load x3 with value 0xb7d5636cc9b86
sw x3, 0(x2) # store 0xb7d5636cc9b86 in memory
flw f6, 0(x2) # load 0xb7d5636cc9b86 from memory into f6
fnmsub.s f4, f4, f19, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbdf577e52d222a42 # load x3 with value 0xbdf577e52d222a42
sw x3, 0(x2) # store 0xbdf577e52d222a42 in memory
flw f5, 0(x2) # load 0xbdf577e52d222a42 from memory into f5
la x2, scratch
li x3, 0x5b2c1cb58cb71a5c # load x3 with value 0x5b2c1cb58cb71a5c
sw x3, 0(x2) # store 0x5b2c1cb58cb71a5c in memory
flw f4, 0(x2) # load 0x5b2c1cb58cb71a5c from memory into f4
la x2, scratch
li x3, 0x7ec49d6537eebc9c # load x3 with value 0x7ec49d6537eebc9c
sw x3, 0(x2) # store 0x7ec49d6537eebc9c in memory
flw f20, 0(x2) # load 0x7ec49d6537eebc9c from memory into f20
fnmsub.s f5, f5, f4, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x493e1c18af356560 # load x3 with value 0x493e1c18af356560
sw x3, 0(x2) # store 0x493e1c18af356560 in memory
flw f6, 0(x2) # load 0x493e1c18af356560 from memory into f6
la x2, scratch
li x3, 0x89db662c809bfff1 # load x3 with value 0x89db662c809bfff1
sw x3, 0(x2) # store 0x89db662c809bfff1 in memory
flw f20, 0(x2) # load 0x89db662c809bfff1 from memory into f20
la x2, scratch
li x3, 0xfc8758f3c96d0acb # load x3 with value 0xfc8758f3c96d0acb
sw x3, 0(x2) # store 0xfc8758f3c96d0acb in memory
flw f10, 0(x2) # load 0xfc8758f3c96d0acb from memory into f10
fnmsub.s f6, f6, f20, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8fde98e3da7c1b83 # load x3 with value 0x8fde98e3da7c1b83
sw x3, 0(x2) # store 0x8fde98e3da7c1b83 in memory
flw f7, 0(x2) # load 0x8fde98e3da7c1b83 from memory into f7
la x2, scratch
li x3, 0x22bf9413e9c3f31 # load x3 with value 0x22bf9413e9c3f31
sw x3, 0(x2) # store 0x22bf9413e9c3f31 in memory
flw f6, 0(x2) # load 0x22bf9413e9c3f31 from memory into f6
la x2, scratch
li x3, 0xb44312b3f0c6a0a2 # load x3 with value 0xb44312b3f0c6a0a2
sw x3, 0(x2) # store 0xb44312b3f0c6a0a2 in memory
flw f8, 0(x2) # load 0xb44312b3f0c6a0a2 from memory into f8
fnmsub.s f7, f7, f6, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x20ae12202cc67d18 # load x3 with value 0x20ae12202cc67d18
sw x3, 0(x2) # store 0x20ae12202cc67d18 in memory
flw f8, 0(x2) # load 0x20ae12202cc67d18 from memory into f8
la x2, scratch
li x3, 0x9851905dc4fadaf6 # load x3 with value 0x9851905dc4fadaf6
sw x3, 0(x2) # store 0x9851905dc4fadaf6 in memory
flw f2, 0(x2) # load 0x9851905dc4fadaf6 from memory into f2
la x2, scratch
li x3, 0x51dd7e78287b0d47 # load x3 with value 0x51dd7e78287b0d47
sw x3, 0(x2) # store 0x51dd7e78287b0d47 in memory
flw f5, 0(x2) # load 0x51dd7e78287b0d47 from memory into f5
fnmsub.s f8, f8, f2, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xcef8cd2ae941468f # load x3 with value 0xcef8cd2ae941468f
sw x3, 0(x2) # store 0xcef8cd2ae941468f in memory
flw f9, 0(x2) # load 0xcef8cd2ae941468f from memory into f9
la x2, scratch
li x3, 0xb3cb0fda53c7b31a # load x3 with value 0xb3cb0fda53c7b31a
sw x3, 0(x2) # store 0xb3cb0fda53c7b31a in memory
flw f28, 0(x2) # load 0xb3cb0fda53c7b31a from memory into f28
la x2, scratch
li x3, 0xcde8d4f660ce2e3b # load x3 with value 0xcde8d4f660ce2e3b
sw x3, 0(x2) # store 0xcde8d4f660ce2e3b in memory
flw f24, 0(x2) # load 0xcde8d4f660ce2e3b from memory into f24
fnmsub.s f9, f9, f28, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x8f4c2830113871c6 # load x3 with value 0x8f4c2830113871c6
sw x3, 0(x2) # store 0x8f4c2830113871c6 in memory
flw f10, 0(x2) # load 0x8f4c2830113871c6 from memory into f10
la x2, scratch
li x3, 0x915b33c35ae42339 # load x3 with value 0x915b33c35ae42339
sw x3, 0(x2) # store 0x915b33c35ae42339 in memory
flw f14, 0(x2) # load 0x915b33c35ae42339 from memory into f14
la x2, scratch
li x3, 0xc21fd6a81686008a # load x3 with value 0xc21fd6a81686008a
sw x3, 0(x2) # store 0xc21fd6a81686008a in memory
flw f22, 0(x2) # load 0xc21fd6a81686008a from memory into f22
fnmsub.s f10, f10, f14, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x115a02c67d044edf # load x3 with value 0x115a02c67d044edf
sw x3, 0(x2) # store 0x115a02c67d044edf in memory
flw f11, 0(x2) # load 0x115a02c67d044edf from memory into f11
la x2, scratch
li x3, 0xc2dd15d5b92d6011 # load x3 with value 0xc2dd15d5b92d6011
sw x3, 0(x2) # store 0xc2dd15d5b92d6011 in memory
flw f23, 0(x2) # load 0xc2dd15d5b92d6011 from memory into f23
la x2, scratch
li x3, 0x728f6fd44024afb0 # load x3 with value 0x728f6fd44024afb0
sw x3, 0(x2) # store 0x728f6fd44024afb0 in memory
flw f8, 0(x2) # load 0x728f6fd44024afb0 from memory into f8
fnmsub.s f11, f11, f23, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x8147f3bcbf16fad3 # load x3 with value 0x8147f3bcbf16fad3
sw x3, 0(x2) # store 0x8147f3bcbf16fad3 in memory
flw f12, 0(x2) # load 0x8147f3bcbf16fad3 from memory into f12
la x2, scratch
li x3, 0x3485989859950dac # load x3 with value 0x3485989859950dac
sw x3, 0(x2) # store 0x3485989859950dac in memory
flw f7, 0(x2) # load 0x3485989859950dac from memory into f7
la x2, scratch
li x3, 0x1d38dd8721624bcb # load x3 with value 0x1d38dd8721624bcb
sw x3, 0(x2) # store 0x1d38dd8721624bcb in memory
flw f5, 0(x2) # load 0x1d38dd8721624bcb from memory into f5
fnmsub.s f12, f12, f7, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x481ae12c3bda8a79 # load x3 with value 0x481ae12c3bda8a79
sw x3, 0(x2) # store 0x481ae12c3bda8a79 in memory
flw f13, 0(x2) # load 0x481ae12c3bda8a79 from memory into f13
la x2, scratch
li x3, 0x510e8a8f7ef82ae6 # load x3 with value 0x510e8a8f7ef82ae6
sw x3, 0(x2) # store 0x510e8a8f7ef82ae6 in memory
flw f28, 0(x2) # load 0x510e8a8f7ef82ae6 from memory into f28
la x2, scratch
li x3, 0x693727b1f3c48f1c # load x3 with value 0x693727b1f3c48f1c
sw x3, 0(x2) # store 0x693727b1f3c48f1c in memory
flw f22, 0(x2) # load 0x693727b1f3c48f1c from memory into f22
fnmsub.s f13, f13, f28, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0xdbd6eaa8678347df # load x3 with value 0xdbd6eaa8678347df
sw x3, 0(x2) # store 0xdbd6eaa8678347df in memory
flw f14, 0(x2) # load 0xdbd6eaa8678347df from memory into f14
la x2, scratch
li x3, 0xe234997785a92e4d # load x3 with value 0xe234997785a92e4d
sw x3, 0(x2) # store 0xe234997785a92e4d in memory
flw f28, 0(x2) # load 0xe234997785a92e4d from memory into f28
la x2, scratch
li x3, 0xe2e8789126bc895a # load x3 with value 0xe2e8789126bc895a
sw x3, 0(x2) # store 0xe2e8789126bc895a in memory
flw f22, 0(x2) # load 0xe2e8789126bc895a from memory into f22
fnmsub.s f14, f14, f28, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x13b732caa061f554 # load x3 with value 0x13b732caa061f554
sw x3, 0(x2) # store 0x13b732caa061f554 in memory
flw f15, 0(x2) # load 0x13b732caa061f554 from memory into f15
la x2, scratch
li x3, 0xe22d220e3160c378 # load x3 with value 0xe22d220e3160c378
sw x3, 0(x2) # store 0xe22d220e3160c378 in memory
flw f1, 0(x2) # load 0xe22d220e3160c378 from memory into f1
la x2, scratch
li x3, 0xa7326357a4719f45 # load x3 with value 0xa7326357a4719f45
sw x3, 0(x2) # store 0xa7326357a4719f45 in memory
flw f22, 0(x2) # load 0xa7326357a4719f45 from memory into f22
fnmsub.s f15, f15, f1, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x42ba714d78fc7f36 # load x3 with value 0x42ba714d78fc7f36
sw x3, 0(x2) # store 0x42ba714d78fc7f36 in memory
flw f16, 0(x2) # load 0x42ba714d78fc7f36 from memory into f16
la x2, scratch
li x3, 0x5b01968347d8d8de # load x3 with value 0x5b01968347d8d8de
sw x3, 0(x2) # store 0x5b01968347d8d8de in memory
flw f14, 0(x2) # load 0x5b01968347d8d8de from memory into f14
la x2, scratch
li x3, 0x699cf64019b9f9ad # load x3 with value 0x699cf64019b9f9ad
sw x3, 0(x2) # store 0x699cf64019b9f9ad in memory
flw f25, 0(x2) # load 0x699cf64019b9f9ad from memory into f25
fnmsub.s f16, f16, f14, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x731c5675043519b2 # load x3 with value 0x731c5675043519b2
sw x3, 0(x2) # store 0x731c5675043519b2 in memory
flw f17, 0(x2) # load 0x731c5675043519b2 from memory into f17
la x2, scratch
li x3, 0x1899858bdeab2a9e # load x3 with value 0x1899858bdeab2a9e
sw x3, 0(x2) # store 0x1899858bdeab2a9e in memory
flw f21, 0(x2) # load 0x1899858bdeab2a9e from memory into f21
la x2, scratch
li x3, 0x3bbfcec306306830 # load x3 with value 0x3bbfcec306306830
sw x3, 0(x2) # store 0x3bbfcec306306830 in memory
flw f20, 0(x2) # load 0x3bbfcec306306830 from memory into f20
fnmsub.s f17, f17, f21, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x3f709665991108ff # load x3 with value 0x3f709665991108ff
sw x3, 0(x2) # store 0x3f709665991108ff in memory
flw f18, 0(x2) # load 0x3f709665991108ff from memory into f18
la x2, scratch
li x3, 0x28fea30b0ff22852 # load x3 with value 0x28fea30b0ff22852
sw x3, 0(x2) # store 0x28fea30b0ff22852 in memory
flw f23, 0(x2) # load 0x28fea30b0ff22852 from memory into f23
la x2, scratch
li x3, 0x1f0a9c5de8f6a064 # load x3 with value 0x1f0a9c5de8f6a064
sw x3, 0(x2) # store 0x1f0a9c5de8f6a064 in memory
flw f17, 0(x2) # load 0x1f0a9c5de8f6a064 from memory into f17
fnmsub.s f18, f18, f23, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x111405df1c6a3cd7 # load x3 with value 0x111405df1c6a3cd7
sw x3, 0(x2) # store 0x111405df1c6a3cd7 in memory
flw f19, 0(x2) # load 0x111405df1c6a3cd7 from memory into f19
la x2, scratch
li x3, 0x52b445e532968ac8 # load x3 with value 0x52b445e532968ac8
sw x3, 0(x2) # store 0x52b445e532968ac8 in memory
flw f11, 0(x2) # load 0x52b445e532968ac8 from memory into f11
la x2, scratch
li x3, 0x9ccc75ed54b8b1c3 # load x3 with value 0x9ccc75ed54b8b1c3
sw x3, 0(x2) # store 0x9ccc75ed54b8b1c3 in memory
flw f21, 0(x2) # load 0x9ccc75ed54b8b1c3 from memory into f21
fnmsub.s f19, f19, f11, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x6c4fbcede6b7b4a2 # load x3 with value 0x6c4fbcede6b7b4a2
sw x3, 0(x2) # store 0x6c4fbcede6b7b4a2 in memory
flw f20, 0(x2) # load 0x6c4fbcede6b7b4a2 from memory into f20
la x2, scratch
li x3, 0x9e9aea48041ba17 # load x3 with value 0x9e9aea48041ba17
sw x3, 0(x2) # store 0x9e9aea48041ba17 in memory
flw f13, 0(x2) # load 0x9e9aea48041ba17 from memory into f13
la x2, scratch
li x3, 0xd318ad65a8994de # load x3 with value 0xd318ad65a8994de
sw x3, 0(x2) # store 0xd318ad65a8994de in memory
flw f22, 0(x2) # load 0xd318ad65a8994de from memory into f22
fnmsub.s f20, f20, f13, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0xae45ca191120d9aa # load x3 with value 0xae45ca191120d9aa
sw x3, 0(x2) # store 0xae45ca191120d9aa in memory
flw f21, 0(x2) # load 0xae45ca191120d9aa from memory into f21
la x2, scratch
li x3, 0xcaf30296c334e347 # load x3 with value 0xcaf30296c334e347
sw x3, 0(x2) # store 0xcaf30296c334e347 in memory
flw f7, 0(x2) # load 0xcaf30296c334e347 from memory into f7
la x2, scratch
li x3, 0x2b3d57ee4c80312b # load x3 with value 0x2b3d57ee4c80312b
sw x3, 0(x2) # store 0x2b3d57ee4c80312b in memory
flw f14, 0(x2) # load 0x2b3d57ee4c80312b from memory into f14
fnmsub.s f21, f21, f7, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0xc64f92148c5111d3 # load x3 with value 0xc64f92148c5111d3
sw x3, 0(x2) # store 0xc64f92148c5111d3 in memory
flw f22, 0(x2) # load 0xc64f92148c5111d3 from memory into f22
la x2, scratch
li x3, 0x395650bbcd9159ff # load x3 with value 0x395650bbcd9159ff
sw x3, 0(x2) # store 0x395650bbcd9159ff in memory
flw f27, 0(x2) # load 0x395650bbcd9159ff from memory into f27
la x2, scratch
li x3, 0x418701ffe942ba # load x3 with value 0x418701ffe942ba
sw x3, 0(x2) # store 0x418701ffe942ba in memory
flw f18, 0(x2) # load 0x418701ffe942ba from memory into f18
fnmsub.s f22, f22, f27, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x8fa75aa89f2e9b62 # load x3 with value 0x8fa75aa89f2e9b62
sw x3, 0(x2) # store 0x8fa75aa89f2e9b62 in memory
flw f23, 0(x2) # load 0x8fa75aa89f2e9b62 from memory into f23
la x2, scratch
li x3, 0x624e68599d84e48c # load x3 with value 0x624e68599d84e48c
sw x3, 0(x2) # store 0x624e68599d84e48c in memory
flw f31, 0(x2) # load 0x624e68599d84e48c from memory into f31
la x2, scratch
li x3, 0x7f631e7de80652eb # load x3 with value 0x7f631e7de80652eb
sw x3, 0(x2) # store 0x7f631e7de80652eb in memory
flw f3, 0(x2) # load 0x7f631e7de80652eb from memory into f3
fnmsub.s f23, f23, f31, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xd496cf76fb1dc314 # load x3 with value 0xd496cf76fb1dc314
sw x3, 0(x2) # store 0xd496cf76fb1dc314 in memory
flw f24, 0(x2) # load 0xd496cf76fb1dc314 from memory into f24
la x2, scratch
li x3, 0xef588279f0a6fe2c # load x3 with value 0xef588279f0a6fe2c
sw x3, 0(x2) # store 0xef588279f0a6fe2c in memory
flw f23, 0(x2) # load 0xef588279f0a6fe2c from memory into f23
la x2, scratch
li x3, 0x858ae4a1c500ed59 # load x3 with value 0x858ae4a1c500ed59
sw x3, 0(x2) # store 0x858ae4a1c500ed59 in memory
flw f22, 0(x2) # load 0x858ae4a1c500ed59 from memory into f22
fnmsub.s f24, f24, f23, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x7e960048e6d5da69 # load x3 with value 0x7e960048e6d5da69
sw x3, 0(x2) # store 0x7e960048e6d5da69 in memory
flw f25, 0(x2) # load 0x7e960048e6d5da69 from memory into f25
la x2, scratch
li x3, 0x64af0eed6093d22d # load x3 with value 0x64af0eed6093d22d
sw x3, 0(x2) # store 0x64af0eed6093d22d in memory
flw f26, 0(x2) # load 0x64af0eed6093d22d from memory into f26
la x2, scratch
li x3, 0x705747610281157f # load x3 with value 0x705747610281157f
sw x3, 0(x2) # store 0x705747610281157f in memory
flw f31, 0(x2) # load 0x705747610281157f from memory into f31
fnmsub.s f25, f25, f26, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x5232a04481c03b16 # load x3 with value 0x5232a04481c03b16
sw x3, 0(x2) # store 0x5232a04481c03b16 in memory
flw f26, 0(x2) # load 0x5232a04481c03b16 from memory into f26
la x2, scratch
li x3, 0xe917b7def455fbe7 # load x3 with value 0xe917b7def455fbe7
sw x3, 0(x2) # store 0xe917b7def455fbe7 in memory
flw f29, 0(x2) # load 0xe917b7def455fbe7 from memory into f29
la x2, scratch
li x3, 0x4da58108cb1874cd # load x3 with value 0x4da58108cb1874cd
sw x3, 0(x2) # store 0x4da58108cb1874cd in memory
flw f7, 0(x2) # load 0x4da58108cb1874cd from memory into f7
fnmsub.s f26, f26, f29, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x48d31f0752e19216 # load x3 with value 0x48d31f0752e19216
sw x3, 0(x2) # store 0x48d31f0752e19216 in memory
flw f27, 0(x2) # load 0x48d31f0752e19216 from memory into f27
la x2, scratch
li x3, 0xeeae3f6b64eb7a7e # load x3 with value 0xeeae3f6b64eb7a7e
sw x3, 0(x2) # store 0xeeae3f6b64eb7a7e in memory
flw f5, 0(x2) # load 0xeeae3f6b64eb7a7e from memory into f5
la x2, scratch
li x3, 0x72b3d8cc2deb8ac6 # load x3 with value 0x72b3d8cc2deb8ac6
sw x3, 0(x2) # store 0x72b3d8cc2deb8ac6 in memory
flw f15, 0(x2) # load 0x72b3d8cc2deb8ac6 from memory into f15
fnmsub.s f27, f27, f5, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x6d34f55b02246277 # load x3 with value 0x6d34f55b02246277
sw x3, 0(x2) # store 0x6d34f55b02246277 in memory
flw f28, 0(x2) # load 0x6d34f55b02246277 from memory into f28
la x2, scratch
li x3, 0xb5cfa329b2d42386 # load x3 with value 0xb5cfa329b2d42386
sw x3, 0(x2) # store 0xb5cfa329b2d42386 in memory
flw f28, 0(x2) # load 0xb5cfa329b2d42386 from memory into f28
la x2, scratch
li x3, 0x3f55300c37f4ad4f # load x3 with value 0x3f55300c37f4ad4f
sw x3, 0(x2) # store 0x3f55300c37f4ad4f in memory
flw f19, 0(x2) # load 0x3f55300c37f4ad4f from memory into f19
fnmsub.s f28, f28, f28, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x14ffe20c8bbd4fbb # load x3 with value 0x14ffe20c8bbd4fbb
sw x3, 0(x2) # store 0x14ffe20c8bbd4fbb in memory
flw f29, 0(x2) # load 0x14ffe20c8bbd4fbb from memory into f29
la x2, scratch
li x3, 0xdfd83540a6259c08 # load x3 with value 0xdfd83540a6259c08
sw x3, 0(x2) # store 0xdfd83540a6259c08 in memory
flw f5, 0(x2) # load 0xdfd83540a6259c08 from memory into f5
la x2, scratch
li x3, 0x9f7303a134c91cf7 # load x3 with value 0x9f7303a134c91cf7
sw x3, 0(x2) # store 0x9f7303a134c91cf7 in memory
flw f11, 0(x2) # load 0x9f7303a134c91cf7 from memory into f11
fnmsub.s f29, f29, f5, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0xcdd4ae92de25db83 # load x3 with value 0xcdd4ae92de25db83
sw x3, 0(x2) # store 0xcdd4ae92de25db83 in memory
flw f30, 0(x2) # load 0xcdd4ae92de25db83 from memory into f30
la x2, scratch
li x3, 0x995ee191cc4e6f47 # load x3 with value 0x995ee191cc4e6f47
sw x3, 0(x2) # store 0x995ee191cc4e6f47 in memory
flw f15, 0(x2) # load 0x995ee191cc4e6f47 from memory into f15
la x2, scratch
li x3, 0xddc4911f7d26a530 # load x3 with value 0xddc4911f7d26a530
sw x3, 0(x2) # store 0xddc4911f7d26a530 in memory
flw f9, 0(x2) # load 0xddc4911f7d26a530 from memory into f9
fnmsub.s f30, f30, f15, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x412664e2b4d57221 # load x3 with value 0x412664e2b4d57221
sw x3, 0(x2) # store 0x412664e2b4d57221 in memory
flw f31, 0(x2) # load 0x412664e2b4d57221 from memory into f31
la x2, scratch
li x3, 0x8c8756d413232053 # load x3 with value 0x8c8756d413232053
sw x3, 0(x2) # store 0x8c8756d413232053 in memory
flw f10, 0(x2) # load 0x8c8756d413232053 from memory into f10
la x2, scratch
li x3, 0x67d8b0d2983b4006 # load x3 with value 0x67d8b0d2983b4006
sw x3, 0(x2) # store 0x67d8b0d2983b4006 in memory
flw f16, 0(x2) # load 0x67d8b0d2983b4006 from memory into f16
fnmsub.s f31, f31, f10, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xfa999b7a48ebb06e # load x3 with value 0xfa999b7a48ebb06e
sw x3, 0(x2) # store 0xfa999b7a48ebb06e in memory
flw f23, 0(x2) # load 0xfa999b7a48ebb06e from memory into f23
la x2, scratch
li x3, 0xaf55014fa11211fa # load x3 with value 0xaf55014fa11211fa
sw x3, 0(x2) # store 0xaf55014fa11211fa in memory
flw f0, 0(x2) # load 0xaf55014fa11211fa from memory into f0
la x2, scratch
li x3, 0x22b39341afc6d5d # load x3 with value 0x22b39341afc6d5d
sw x3, 0(x2) # store 0x22b39341afc6d5d in memory
flw f5, 0(x2) # load 0x22b39341afc6d5d from memory into f5
fnmsub.s f0, f23, f0, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0xc6145235dd5cb645 # load x3 with value 0xc6145235dd5cb645
sw x3, 0(x2) # store 0xc6145235dd5cb645 in memory
flw f26, 0(x2) # load 0xc6145235dd5cb645 from memory into f26
la x2, scratch
li x3, 0x8428dd9652c0c886 # load x3 with value 0x8428dd9652c0c886
sw x3, 0(x2) # store 0x8428dd9652c0c886 in memory
flw f1, 0(x2) # load 0x8428dd9652c0c886 from memory into f1
la x2, scratch
li x3, 0x8f26cc712869c9ab # load x3 with value 0x8f26cc712869c9ab
sw x3, 0(x2) # store 0x8f26cc712869c9ab in memory
flw f8, 0(x2) # load 0x8f26cc712869c9ab from memory into f8
fnmsub.s f1, f26, f1, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x4893036938279cdf # load x3 with value 0x4893036938279cdf
sw x3, 0(x2) # store 0x4893036938279cdf in memory
flw f9, 0(x2) # load 0x4893036938279cdf from memory into f9
la x2, scratch
li x3, 0x55edf5985bc9cbdf # load x3 with value 0x55edf5985bc9cbdf
sw x3, 0(x2) # store 0x55edf5985bc9cbdf in memory
flw f2, 0(x2) # load 0x55edf5985bc9cbdf from memory into f2
la x2, scratch
li x3, 0xac4358e5287b59ca # load x3 with value 0xac4358e5287b59ca
sw x3, 0(x2) # store 0xac4358e5287b59ca in memory
flw f27, 0(x2) # load 0xac4358e5287b59ca from memory into f27
fnmsub.s f2, f9, f2, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x80fdcf2bd341419f # load x3 with value 0x80fdcf2bd341419f
sw x3, 0(x2) # store 0x80fdcf2bd341419f in memory
flw f20, 0(x2) # load 0x80fdcf2bd341419f from memory into f20
la x2, scratch
li x3, 0x5d9fbdddf39d4e1d # load x3 with value 0x5d9fbdddf39d4e1d
sw x3, 0(x2) # store 0x5d9fbdddf39d4e1d in memory
flw f3, 0(x2) # load 0x5d9fbdddf39d4e1d from memory into f3
la x2, scratch
li x3, 0xbd221abe7447d03b # load x3 with value 0xbd221abe7447d03b
sw x3, 0(x2) # store 0xbd221abe7447d03b in memory
flw f3, 0(x2) # load 0xbd221abe7447d03b from memory into f3
fnmsub.s f3, f20, f3, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd6fd6fb85e8493fa # load x3 with value 0xd6fd6fb85e8493fa
sw x3, 0(x2) # store 0xd6fd6fb85e8493fa in memory
flw f14, 0(x2) # load 0xd6fd6fb85e8493fa from memory into f14
la x2, scratch
li x3, 0xd1df0e1f3768287 # load x3 with value 0xd1df0e1f3768287
sw x3, 0(x2) # store 0xd1df0e1f3768287 in memory
flw f4, 0(x2) # load 0xd1df0e1f3768287 from memory into f4
la x2, scratch
li x3, 0x795ced43e2f07f4c # load x3 with value 0x795ced43e2f07f4c
sw x3, 0(x2) # store 0x795ced43e2f07f4c in memory
flw f16, 0(x2) # load 0x795ced43e2f07f4c from memory into f16
fnmsub.s f4, f14, f4, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x698d4ea97a375051 # load x3 with value 0x698d4ea97a375051
sw x3, 0(x2) # store 0x698d4ea97a375051 in memory
flw f12, 0(x2) # load 0x698d4ea97a375051 from memory into f12
la x2, scratch
li x3, 0xe8a2ee411d144c8f # load x3 with value 0xe8a2ee411d144c8f
sw x3, 0(x2) # store 0xe8a2ee411d144c8f in memory
flw f5, 0(x2) # load 0xe8a2ee411d144c8f from memory into f5
la x2, scratch
li x3, 0x28aa3d982acbfaba # load x3 with value 0x28aa3d982acbfaba
sw x3, 0(x2) # store 0x28aa3d982acbfaba in memory
flw f22, 0(x2) # load 0x28aa3d982acbfaba from memory into f22
fnmsub.s f5, f12, f5, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7f6e679e646e9448 # load x3 with value 0x7f6e679e646e9448
sw x3, 0(x2) # store 0x7f6e679e646e9448 in memory
flw f15, 0(x2) # load 0x7f6e679e646e9448 from memory into f15
la x2, scratch
li x3, 0x193019e7d5fdfbb5 # load x3 with value 0x193019e7d5fdfbb5
sw x3, 0(x2) # store 0x193019e7d5fdfbb5 in memory
flw f6, 0(x2) # load 0x193019e7d5fdfbb5 from memory into f6
la x2, scratch
li x3, 0x880bab752a6ddd26 # load x3 with value 0x880bab752a6ddd26
sw x3, 0(x2) # store 0x880bab752a6ddd26 in memory
flw f23, 0(x2) # load 0x880bab752a6ddd26 from memory into f23
fnmsub.s f6, f15, f6, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd2eaacd0baf11203 # load x3 with value 0xd2eaacd0baf11203
sw x3, 0(x2) # store 0xd2eaacd0baf11203 in memory
flw f8, 0(x2) # load 0xd2eaacd0baf11203 from memory into f8
la x2, scratch
li x3, 0x925673db24db8fda # load x3 with value 0x925673db24db8fda
sw x3, 0(x2) # store 0x925673db24db8fda in memory
flw f7, 0(x2) # load 0x925673db24db8fda from memory into f7
la x2, scratch
li x3, 0x7d43bcab6b0369a6 # load x3 with value 0x7d43bcab6b0369a6
sw x3, 0(x2) # store 0x7d43bcab6b0369a6 in memory
flw f11, 0(x2) # load 0x7d43bcab6b0369a6 from memory into f11
fnmsub.s f7, f8, f7, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x2f526015937be26c # load x3 with value 0x2f526015937be26c
sw x3, 0(x2) # store 0x2f526015937be26c in memory
flw f21, 0(x2) # load 0x2f526015937be26c from memory into f21
la x2, scratch
li x3, 0xea35f92f7f1ad857 # load x3 with value 0xea35f92f7f1ad857
sw x3, 0(x2) # store 0xea35f92f7f1ad857 in memory
flw f8, 0(x2) # load 0xea35f92f7f1ad857 from memory into f8
la x2, scratch
li x3, 0xee4b3ef2ff713352 # load x3 with value 0xee4b3ef2ff713352
sw x3, 0(x2) # store 0xee4b3ef2ff713352 in memory
flw f18, 0(x2) # load 0xee4b3ef2ff713352 from memory into f18
fnmsub.s f8, f21, f8, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x7aadb5b2373cbd31 # load x3 with value 0x7aadb5b2373cbd31
sw x3, 0(x2) # store 0x7aadb5b2373cbd31 in memory
flw f3, 0(x2) # load 0x7aadb5b2373cbd31 from memory into f3
la x2, scratch
li x3, 0x48718580c2c25627 # load x3 with value 0x48718580c2c25627
sw x3, 0(x2) # store 0x48718580c2c25627 in memory
flw f9, 0(x2) # load 0x48718580c2c25627 from memory into f9
la x2, scratch
li x3, 0x320731a06e8d3b30 # load x3 with value 0x320731a06e8d3b30
sw x3, 0(x2) # store 0x320731a06e8d3b30 in memory
flw f2, 0(x2) # load 0x320731a06e8d3b30 from memory into f2
fnmsub.s f9, f3, f9, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x749727cb75d21def # load x3 with value 0x749727cb75d21def
sw x3, 0(x2) # store 0x749727cb75d21def in memory
flw f17, 0(x2) # load 0x749727cb75d21def from memory into f17
la x2, scratch
li x3, 0xefb48a8399d8b5ac # load x3 with value 0xefb48a8399d8b5ac
sw x3, 0(x2) # store 0xefb48a8399d8b5ac in memory
flw f10, 0(x2) # load 0xefb48a8399d8b5ac from memory into f10
la x2, scratch
li x3, 0x738cb356bdf05863 # load x3 with value 0x738cb356bdf05863
sw x3, 0(x2) # store 0x738cb356bdf05863 in memory
flw f23, 0(x2) # load 0x738cb356bdf05863 from memory into f23
fnmsub.s f10, f17, f10, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0x4b6d798e08ea3b15 # load x3 with value 0x4b6d798e08ea3b15
sw x3, 0(x2) # store 0x4b6d798e08ea3b15 in memory
flw f15, 0(x2) # load 0x4b6d798e08ea3b15 from memory into f15
la x2, scratch
li x3, 0x59d99c5f1e174fb9 # load x3 with value 0x59d99c5f1e174fb9
sw x3, 0(x2) # store 0x59d99c5f1e174fb9 in memory
flw f11, 0(x2) # load 0x59d99c5f1e174fb9 from memory into f11
la x2, scratch
li x3, 0xa8be4717bb1764b3 # load x3 with value 0xa8be4717bb1764b3
sw x3, 0(x2) # store 0xa8be4717bb1764b3 in memory
flw f18, 0(x2) # load 0xa8be4717bb1764b3 from memory into f18
fnmsub.s f11, f15, f11, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0xae2d379368b207fd # load x3 with value 0xae2d379368b207fd
sw x3, 0(x2) # store 0xae2d379368b207fd in memory
flw f1, 0(x2) # load 0xae2d379368b207fd from memory into f1
la x2, scratch
li x3, 0xf39ccf2d2ddb7a9b # load x3 with value 0xf39ccf2d2ddb7a9b
sw x3, 0(x2) # store 0xf39ccf2d2ddb7a9b in memory
flw f12, 0(x2) # load 0xf39ccf2d2ddb7a9b from memory into f12
la x2, scratch
li x3, 0x5c036dd9b74c16ce # load x3 with value 0x5c036dd9b74c16ce
sw x3, 0(x2) # store 0x5c036dd9b74c16ce in memory
flw f28, 0(x2) # load 0x5c036dd9b74c16ce from memory into f28
fnmsub.s f12, f1, f12, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xe563054cbb1824ea # load x3 with value 0xe563054cbb1824ea
sw x3, 0(x2) # store 0xe563054cbb1824ea in memory
flw f11, 0(x2) # load 0xe563054cbb1824ea from memory into f11
la x2, scratch
li x3, 0x394c0fbc97089a0b # load x3 with value 0x394c0fbc97089a0b
sw x3, 0(x2) # store 0x394c0fbc97089a0b in memory
flw f13, 0(x2) # load 0x394c0fbc97089a0b from memory into f13
la x2, scratch
li x3, 0x658e387ba55796e3 # load x3 with value 0x658e387ba55796e3
sw x3, 0(x2) # store 0x658e387ba55796e3 in memory
flw f29, 0(x2) # load 0x658e387ba55796e3 from memory into f29
fnmsub.s f13, f11, f13, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xe692a0ed118c5abf # load x3 with value 0xe692a0ed118c5abf
sw x3, 0(x2) # store 0xe692a0ed118c5abf in memory
flw f31, 0(x2) # load 0xe692a0ed118c5abf from memory into f31
la x2, scratch
li x3, 0xcf7434c76b509038 # load x3 with value 0xcf7434c76b509038
sw x3, 0(x2) # store 0xcf7434c76b509038 in memory
flw f14, 0(x2) # load 0xcf7434c76b509038 from memory into f14
la x2, scratch
li x3, 0x2e4a674aa3bb20b0 # load x3 with value 0x2e4a674aa3bb20b0
sw x3, 0(x2) # store 0x2e4a674aa3bb20b0 in memory
flw f2, 0(x2) # load 0x2e4a674aa3bb20b0 from memory into f2
fnmsub.s f14, f31, f14, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0xd8997f5e806077ac # load x3 with value 0xd8997f5e806077ac
sw x3, 0(x2) # store 0xd8997f5e806077ac in memory
flw f24, 0(x2) # load 0xd8997f5e806077ac from memory into f24
la x2, scratch
li x3, 0x516ef5401229b78b # load x3 with value 0x516ef5401229b78b
sw x3, 0(x2) # store 0x516ef5401229b78b in memory
flw f15, 0(x2) # load 0x516ef5401229b78b from memory into f15
la x2, scratch
li x3, 0xd226a3e747e991ce # load x3 with value 0xd226a3e747e991ce
sw x3, 0(x2) # store 0xd226a3e747e991ce in memory
flw f22, 0(x2) # load 0xd226a3e747e991ce from memory into f22
fnmsub.s f15, f24, f15, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xdc4b8efa96b2d6b1 # load x3 with value 0xdc4b8efa96b2d6b1
sw x3, 0(x2) # store 0xdc4b8efa96b2d6b1 in memory
flw f11, 0(x2) # load 0xdc4b8efa96b2d6b1 from memory into f11
la x2, scratch
li x3, 0x547004ba2c05d10 # load x3 with value 0x547004ba2c05d10
sw x3, 0(x2) # store 0x547004ba2c05d10 in memory
flw f16, 0(x2) # load 0x547004ba2c05d10 from memory into f16
la x2, scratch
li x3, 0x80efa0c7d047548 # load x3 with value 0x80efa0c7d047548
sw x3, 0(x2) # store 0x80efa0c7d047548 in memory
flw f26, 0(x2) # load 0x80efa0c7d047548 from memory into f26
fnmsub.s f16, f11, f16, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xfeaf7391c44c97c1 # load x3 with value 0xfeaf7391c44c97c1
sw x3, 0(x2) # store 0xfeaf7391c44c97c1 in memory
flw f1, 0(x2) # load 0xfeaf7391c44c97c1 from memory into f1
la x2, scratch
li x3, 0x39c24d8f45915552 # load x3 with value 0x39c24d8f45915552
sw x3, 0(x2) # store 0x39c24d8f45915552 in memory
flw f17, 0(x2) # load 0x39c24d8f45915552 from memory into f17
la x2, scratch
li x3, 0x30e9b66e62c141fb # load x3 with value 0x30e9b66e62c141fb
sw x3, 0(x2) # store 0x30e9b66e62c141fb in memory
flw f16, 0(x2) # load 0x30e9b66e62c141fb from memory into f16
fnmsub.s f17, f1, f17, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xc876426f571459e5 # load x3 with value 0xc876426f571459e5
sw x3, 0(x2) # store 0xc876426f571459e5 in memory
flw f28, 0(x2) # load 0xc876426f571459e5 from memory into f28
la x2, scratch
li x3, 0xecc9a6e61516996c # load x3 with value 0xecc9a6e61516996c
sw x3, 0(x2) # store 0xecc9a6e61516996c in memory
flw f18, 0(x2) # load 0xecc9a6e61516996c from memory into f18
la x2, scratch
li x3, 0x8aa4655fb33c9769 # load x3 with value 0x8aa4655fb33c9769
sw x3, 0(x2) # store 0x8aa4655fb33c9769 in memory
flw f16, 0(x2) # load 0x8aa4655fb33c9769 from memory into f16
fnmsub.s f18, f28, f18, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x4d7673c886a8c3df # load x3 with value 0x4d7673c886a8c3df
sw x3, 0(x2) # store 0x4d7673c886a8c3df in memory
flw f2, 0(x2) # load 0x4d7673c886a8c3df from memory into f2
la x2, scratch
li x3, 0xdf18c1ff3834f6ce # load x3 with value 0xdf18c1ff3834f6ce
sw x3, 0(x2) # store 0xdf18c1ff3834f6ce in memory
flw f19, 0(x2) # load 0xdf18c1ff3834f6ce from memory into f19
la x2, scratch
li x3, 0xf5dca5137af82fff # load x3 with value 0xf5dca5137af82fff
sw x3, 0(x2) # store 0xf5dca5137af82fff in memory
flw f28, 0(x2) # load 0xf5dca5137af82fff from memory into f28
fnmsub.s f19, f2, f19, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xf44831ba0b7457f7 # load x3 with value 0xf44831ba0b7457f7
sw x3, 0(x2) # store 0xf44831ba0b7457f7 in memory
flw f26, 0(x2) # load 0xf44831ba0b7457f7 from memory into f26
la x2, scratch
li x3, 0x6ea9b7a27ba4b65f # load x3 with value 0x6ea9b7a27ba4b65f
sw x3, 0(x2) # store 0x6ea9b7a27ba4b65f in memory
flw f20, 0(x2) # load 0x6ea9b7a27ba4b65f from memory into f20
la x2, scratch
li x3, 0x9f60393d112bda18 # load x3 with value 0x9f60393d112bda18
sw x3, 0(x2) # store 0x9f60393d112bda18 in memory
flw f27, 0(x2) # load 0x9f60393d112bda18 from memory into f27
fnmsub.s f20, f26, f20, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xcbba29caa70b9f4 # load x3 with value 0xcbba29caa70b9f4
sw x3, 0(x2) # store 0xcbba29caa70b9f4 in memory
flw f21, 0(x2) # load 0xcbba29caa70b9f4 from memory into f21
la x2, scratch
li x3, 0xe188db73b2d1a56a # load x3 with value 0xe188db73b2d1a56a
sw x3, 0(x2) # store 0xe188db73b2d1a56a in memory
flw f21, 0(x2) # load 0xe188db73b2d1a56a from memory into f21
la x2, scratch
li x3, 0xdef7f98c6c60fc4a # load x3 with value 0xdef7f98c6c60fc4a
sw x3, 0(x2) # store 0xdef7f98c6c60fc4a in memory
flw f23, 0(x2) # load 0xdef7f98c6c60fc4a from memory into f23
fnmsub.s f21, f21, f21, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x7074615264ca1ae7 # load x3 with value 0x7074615264ca1ae7
sw x3, 0(x2) # store 0x7074615264ca1ae7 in memory
flw f25, 0(x2) # load 0x7074615264ca1ae7 from memory into f25
la x2, scratch
li x3, 0xa7bab799c8abe601 # load x3 with value 0xa7bab799c8abe601
sw x3, 0(x2) # store 0xa7bab799c8abe601 in memory
flw f22, 0(x2) # load 0xa7bab799c8abe601 from memory into f22
la x2, scratch
li x3, 0xb428294e7b208a8e # load x3 with value 0xb428294e7b208a8e
sw x3, 0(x2) # store 0xb428294e7b208a8e in memory
flw f27, 0(x2) # load 0xb428294e7b208a8e from memory into f27
fnmsub.s f22, f25, f22, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xafd723403a099a27 # load x3 with value 0xafd723403a099a27
sw x3, 0(x2) # store 0xafd723403a099a27 in memory
flw f2, 0(x2) # load 0xafd723403a099a27 from memory into f2
la x2, scratch
li x3, 0xb9b46b496ff023a8 # load x3 with value 0xb9b46b496ff023a8
sw x3, 0(x2) # store 0xb9b46b496ff023a8 in memory
flw f23, 0(x2) # load 0xb9b46b496ff023a8 from memory into f23
la x2, scratch
li x3, 0x819bb635a2836d37 # load x3 with value 0x819bb635a2836d37
sw x3, 0(x2) # store 0x819bb635a2836d37 in memory
flw f29, 0(x2) # load 0x819bb635a2836d37 from memory into f29
fnmsub.s f23, f2, f23, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xb9e978e123550984 # load x3 with value 0xb9e978e123550984
sw x3, 0(x2) # store 0xb9e978e123550984 in memory
flw f14, 0(x2) # load 0xb9e978e123550984 from memory into f14
la x2, scratch
li x3, 0x2ec44acea6246e11 # load x3 with value 0x2ec44acea6246e11
sw x3, 0(x2) # store 0x2ec44acea6246e11 in memory
flw f24, 0(x2) # load 0x2ec44acea6246e11 from memory into f24
la x2, scratch
li x3, 0x19232f2b785fc529 # load x3 with value 0x19232f2b785fc529
sw x3, 0(x2) # store 0x19232f2b785fc529 in memory
flw f7, 0(x2) # load 0x19232f2b785fc529 from memory into f7
fnmsub.s f24, f14, f24, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x6afe4d1b14bd412d # load x3 with value 0x6afe4d1b14bd412d
sw x3, 0(x2) # store 0x6afe4d1b14bd412d in memory
flw f29, 0(x2) # load 0x6afe4d1b14bd412d from memory into f29
la x2, scratch
li x3, 0x24ed6cbd604c31d2 # load x3 with value 0x24ed6cbd604c31d2
sw x3, 0(x2) # store 0x24ed6cbd604c31d2 in memory
flw f25, 0(x2) # load 0x24ed6cbd604c31d2 from memory into f25
la x2, scratch
li x3, 0x358cc097bdaa5ff4 # load x3 with value 0x358cc097bdaa5ff4
sw x3, 0(x2) # store 0x358cc097bdaa5ff4 in memory
flw f19, 0(x2) # load 0x358cc097bdaa5ff4 from memory into f19
fnmsub.s f25, f29, f25, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x4513bc01e80b973d # load x3 with value 0x4513bc01e80b973d
sw x3, 0(x2) # store 0x4513bc01e80b973d in memory
flw f26, 0(x2) # load 0x4513bc01e80b973d from memory into f26
la x2, scratch
li x3, 0x173642b663fe243 # load x3 with value 0x173642b663fe243
sw x3, 0(x2) # store 0x173642b663fe243 in memory
flw f26, 0(x2) # load 0x173642b663fe243 from memory into f26
la x2, scratch
li x3, 0x35776a796df693c3 # load x3 with value 0x35776a796df693c3
sw x3, 0(x2) # store 0x35776a796df693c3 in memory
flw f22, 0(x2) # load 0x35776a796df693c3 from memory into f22
fnmsub.s f26, f26, f26, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xd959e4e6f4d48d4e # load x3 with value 0xd959e4e6f4d48d4e
sw x3, 0(x2) # store 0xd959e4e6f4d48d4e in memory
flw f1, 0(x2) # load 0xd959e4e6f4d48d4e from memory into f1
la x2, scratch
li x3, 0xece59b465a09257f # load x3 with value 0xece59b465a09257f
sw x3, 0(x2) # store 0xece59b465a09257f in memory
flw f27, 0(x2) # load 0xece59b465a09257f from memory into f27
la x2, scratch
li x3, 0xd02226c4caf6716c # load x3 with value 0xd02226c4caf6716c
sw x3, 0(x2) # store 0xd02226c4caf6716c in memory
flw f26, 0(x2) # load 0xd02226c4caf6716c from memory into f26
fnmsub.s f27, f1, f27, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x688f097cfcf1329a # load x3 with value 0x688f097cfcf1329a
sw x3, 0(x2) # store 0x688f097cfcf1329a in memory
flw f21, 0(x2) # load 0x688f097cfcf1329a from memory into f21
la x2, scratch
li x3, 0x6ef37bd165a2d9cc # load x3 with value 0x6ef37bd165a2d9cc
sw x3, 0(x2) # store 0x6ef37bd165a2d9cc in memory
flw f28, 0(x2) # load 0x6ef37bd165a2d9cc from memory into f28
la x2, scratch
li x3, 0x6e7bf1457df7dd12 # load x3 with value 0x6e7bf1457df7dd12
sw x3, 0(x2) # store 0x6e7bf1457df7dd12 in memory
flw f13, 0(x2) # load 0x6e7bf1457df7dd12 from memory into f13
fnmsub.s f28, f21, f28, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xfbc7d5656d8089b # load x3 with value 0xfbc7d5656d8089b
sw x3, 0(x2) # store 0xfbc7d5656d8089b in memory
flw f19, 0(x2) # load 0xfbc7d5656d8089b from memory into f19
la x2, scratch
li x3, 0xd62e6deae50a7b56 # load x3 with value 0xd62e6deae50a7b56
sw x3, 0(x2) # store 0xd62e6deae50a7b56 in memory
flw f29, 0(x2) # load 0xd62e6deae50a7b56 from memory into f29
la x2, scratch
li x3, 0x765f79e9134a978a # load x3 with value 0x765f79e9134a978a
sw x3, 0(x2) # store 0x765f79e9134a978a in memory
flw f29, 0(x2) # load 0x765f79e9134a978a from memory into f29
fnmsub.s f29, f19, f29, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x9588ec05684e779a # load x3 with value 0x9588ec05684e779a
sw x3, 0(x2) # store 0x9588ec05684e779a in memory
flw f7, 0(x2) # load 0x9588ec05684e779a from memory into f7
la x2, scratch
li x3, 0x59f183dc5c2d3e1c # load x3 with value 0x59f183dc5c2d3e1c
sw x3, 0(x2) # store 0x59f183dc5c2d3e1c in memory
flw f30, 0(x2) # load 0x59f183dc5c2d3e1c from memory into f30
la x2, scratch
li x3, 0x650c402a9a20e10e # load x3 with value 0x650c402a9a20e10e
sw x3, 0(x2) # store 0x650c402a9a20e10e in memory
flw f15, 0(x2) # load 0x650c402a9a20e10e from memory into f15
fnmsub.s f30, f7, f30, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0xfe54fa4bbb2e3f60 # load x3 with value 0xfe54fa4bbb2e3f60
sw x3, 0(x2) # store 0xfe54fa4bbb2e3f60 in memory
flw f21, 0(x2) # load 0xfe54fa4bbb2e3f60 from memory into f21
la x2, scratch
li x3, 0xe63aa027c199c59 # load x3 with value 0xe63aa027c199c59
sw x3, 0(x2) # store 0xe63aa027c199c59 in memory
flw f31, 0(x2) # load 0xe63aa027c199c59 from memory into f31
la x2, scratch
li x3, 0xe49041d40701958f # load x3 with value 0xe49041d40701958f
sw x3, 0(x2) # store 0xe49041d40701958f in memory
flw f14, 0(x2) # load 0xe49041d40701958f from memory into f14
fnmsub.s f31, f21, f31, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0xa285b70766dd395f # load x3 with value 0xa285b70766dd395f
sw x3, 0(x2) # store 0xa285b70766dd395f in memory
flw f27, 0(x2) # load 0xa285b70766dd395f from memory into f27
la x2, scratch
li x3, 0x2ac815d0dc925a2 # load x3 with value 0x2ac815d0dc925a2
sw x3, 0(x2) # store 0x2ac815d0dc925a2 in memory
flw f18, 0(x2) # load 0x2ac815d0dc925a2 from memory into f18
la x2, scratch
li x3, 0x26758f5c6df562cf # load x3 with value 0x26758f5c6df562cf
sw x3, 0(x2) # store 0x26758f5c6df562cf in memory
flw f0, 0(x2) # load 0x26758f5c6df562cf from memory into f0
fnmsub.s f0, f27, f18, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x142f00c8adca1ab6 # load x3 with value 0x142f00c8adca1ab6
sw x3, 0(x2) # store 0x142f00c8adca1ab6 in memory
flw f11, 0(x2) # load 0x142f00c8adca1ab6 from memory into f11
la x2, scratch
li x3, 0x7161b7098ac6b3d6 # load x3 with value 0x7161b7098ac6b3d6
sw x3, 0(x2) # store 0x7161b7098ac6b3d6 in memory
flw f30, 0(x2) # load 0x7161b7098ac6b3d6 from memory into f30
la x2, scratch
li x3, 0x1e35f71a374af4cb # load x3 with value 0x1e35f71a374af4cb
sw x3, 0(x2) # store 0x1e35f71a374af4cb in memory
flw f1, 0(x2) # load 0x1e35f71a374af4cb from memory into f1
fnmsub.s f1, f11, f30, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0xd24c92aa4bd81c93 # load x3 with value 0xd24c92aa4bd81c93
sw x3, 0(x2) # store 0xd24c92aa4bd81c93 in memory
flw f28, 0(x2) # load 0xd24c92aa4bd81c93 from memory into f28
la x2, scratch
li x3, 0x3027800fc2b0741a # load x3 with value 0x3027800fc2b0741a
sw x3, 0(x2) # store 0x3027800fc2b0741a in memory
flw f19, 0(x2) # load 0x3027800fc2b0741a from memory into f19
la x2, scratch
li x3, 0x8e4b5997e88931dc # load x3 with value 0x8e4b5997e88931dc
sw x3, 0(x2) # store 0x8e4b5997e88931dc in memory
flw f2, 0(x2) # load 0x8e4b5997e88931dc from memory into f2
fnmsub.s f2, f28, f19, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x59e598692223b683 # load x3 with value 0x59e598692223b683
sw x3, 0(x2) # store 0x59e598692223b683 in memory
flw f27, 0(x2) # load 0x59e598692223b683 from memory into f27
la x2, scratch
li x3, 0xbc3b90be1314dc28 # load x3 with value 0xbc3b90be1314dc28
sw x3, 0(x2) # store 0xbc3b90be1314dc28 in memory
flw f19, 0(x2) # load 0xbc3b90be1314dc28 from memory into f19
la x2, scratch
li x3, 0xa411ed45ca5cc3be # load x3 with value 0xa411ed45ca5cc3be
sw x3, 0(x2) # store 0xa411ed45ca5cc3be in memory
flw f3, 0(x2) # load 0xa411ed45ca5cc3be from memory into f3
fnmsub.s f3, f27, f19, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2b7f80512d95c978 # load x3 with value 0x2b7f80512d95c978
sw x3, 0(x2) # store 0x2b7f80512d95c978 in memory
flw f15, 0(x2) # load 0x2b7f80512d95c978 from memory into f15
la x2, scratch
li x3, 0xa28396fd2ac17f68 # load x3 with value 0xa28396fd2ac17f68
sw x3, 0(x2) # store 0xa28396fd2ac17f68 in memory
flw f5, 0(x2) # load 0xa28396fd2ac17f68 from memory into f5
la x2, scratch
li x3, 0xdfa3fc296b6fbd5b # load x3 with value 0xdfa3fc296b6fbd5b
sw x3, 0(x2) # store 0xdfa3fc296b6fbd5b in memory
flw f4, 0(x2) # load 0xdfa3fc296b6fbd5b from memory into f4
fnmsub.s f4, f15, f5, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
la x2, scratch
li x3, 0xca044f3656e0614e # load x3 with value 0xca044f3656e0614e
sw x3, 0(x2) # store 0xca044f3656e0614e in memory
flw f27, 0(x2) # load 0xca044f3656e0614e from memory into f27
la x2, scratch
li x3, 0x38dd8e57ef2fa9df # load x3 with value 0x38dd8e57ef2fa9df
sw x3, 0(x2) # store 0x38dd8e57ef2fa9df in memory
flw f11, 0(x2) # load 0x38dd8e57ef2fa9df from memory into f11
la x2, scratch
li x3, 0x28b529b541e163bb # load x3 with value 0x28b529b541e163bb
sw x3, 0(x2) # store 0x28b529b541e163bb in memory
flw f5, 0(x2) # load 0x28b529b541e163bb from memory into f5
fnmsub.s f5, f27, f11, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb256299c536006cc # load x3 with value 0xb256299c536006cc
sw x3, 0(x2) # store 0xb256299c536006cc in memory
flw f30, 0(x2) # load 0xb256299c536006cc from memory into f30
la x2, scratch
li x3, 0x61aae8fd65000323 # load x3 with value 0x61aae8fd65000323
sw x3, 0(x2) # store 0x61aae8fd65000323 in memory
flw f21, 0(x2) # load 0x61aae8fd65000323 from memory into f21
la x2, scratch
li x3, 0xad285b7bdb2cd96e # load x3 with value 0xad285b7bdb2cd96e
sw x3, 0(x2) # store 0xad285b7bdb2cd96e in memory
flw f6, 0(x2) # load 0xad285b7bdb2cd96e from memory into f6
fnmsub.s f6, f30, f21, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa11a1f1bd2028c25 # load x3 with value 0xa11a1f1bd2028c25
sw x3, 0(x2) # store 0xa11a1f1bd2028c25 in memory
flw f15, 0(x2) # load 0xa11a1f1bd2028c25 from memory into f15
la x2, scratch
li x3, 0xe978e12b6a64919b # load x3 with value 0xe978e12b6a64919b
sw x3, 0(x2) # store 0xe978e12b6a64919b in memory
flw f25, 0(x2) # load 0xe978e12b6a64919b from memory into f25
la x2, scratch
li x3, 0x4f0a984b6a640cbe # load x3 with value 0x4f0a984b6a640cbe
sw x3, 0(x2) # store 0x4f0a984b6a640cbe in memory
flw f7, 0(x2) # load 0x4f0a984b6a640cbe from memory into f7
fnmsub.s f7, f15, f25, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x3165d4f3a076add0 # load x3 with value 0x3165d4f3a076add0
sw x3, 0(x2) # store 0x3165d4f3a076add0 in memory
flw f6, 0(x2) # load 0x3165d4f3a076add0 from memory into f6
la x2, scratch
li x3, 0x1d58078344f83eda # load x3 with value 0x1d58078344f83eda
sw x3, 0(x2) # store 0x1d58078344f83eda in memory
flw f10, 0(x2) # load 0x1d58078344f83eda from memory into f10
la x2, scratch
li x3, 0x6f5947ec02063206 # load x3 with value 0x6f5947ec02063206
sw x3, 0(x2) # store 0x6f5947ec02063206 in memory
flw f8, 0(x2) # load 0x6f5947ec02063206 from memory into f8
fnmsub.s f8, f6, f10, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x5e4c07c2d2d80a49 # load x3 with value 0x5e4c07c2d2d80a49
sw x3, 0(x2) # store 0x5e4c07c2d2d80a49 in memory
flw f24, 0(x2) # load 0x5e4c07c2d2d80a49 from memory into f24
la x2, scratch
li x3, 0xce6268c8b92a283f # load x3 with value 0xce6268c8b92a283f
sw x3, 0(x2) # store 0xce6268c8b92a283f in memory
flw f12, 0(x2) # load 0xce6268c8b92a283f from memory into f12
la x2, scratch
li x3, 0x7983348bfeef07f0 # load x3 with value 0x7983348bfeef07f0
sw x3, 0(x2) # store 0x7983348bfeef07f0 in memory
flw f9, 0(x2) # load 0x7983348bfeef07f0 from memory into f9
fnmsub.s f9, f24, f12, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0x88736b1f6515b893 # load x3 with value 0x88736b1f6515b893
sw x3, 0(x2) # store 0x88736b1f6515b893 in memory
flw f15, 0(x2) # load 0x88736b1f6515b893 from memory into f15
la x2, scratch
li x3, 0xf99929925c95e186 # load x3 with value 0xf99929925c95e186
sw x3, 0(x2) # store 0xf99929925c95e186 in memory
flw f19, 0(x2) # load 0xf99929925c95e186 from memory into f19
la x2, scratch
li x3, 0x7277fe10d8860cb6 # load x3 with value 0x7277fe10d8860cb6
sw x3, 0(x2) # store 0x7277fe10d8860cb6 in memory
flw f10, 0(x2) # load 0x7277fe10d8860cb6 from memory into f10
fnmsub.s f10, f15, f19, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0xf7ab36b2dbdfa795 # load x3 with value 0xf7ab36b2dbdfa795
sw x3, 0(x2) # store 0xf7ab36b2dbdfa795 in memory
flw f30, 0(x2) # load 0xf7ab36b2dbdfa795 from memory into f30
la x2, scratch
li x3, 0x2a983b63cbd82bbe # load x3 with value 0x2a983b63cbd82bbe
sw x3, 0(x2) # store 0x2a983b63cbd82bbe in memory
flw f11, 0(x2) # load 0x2a983b63cbd82bbe from memory into f11
la x2, scratch
li x3, 0x8de428f669a66bd9 # load x3 with value 0x8de428f669a66bd9
sw x3, 0(x2) # store 0x8de428f669a66bd9 in memory
flw f11, 0(x2) # load 0x8de428f669a66bd9 from memory into f11
fnmsub.s f11, f30, f11, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0xa8e3e7fa84b07d4a # load x3 with value 0xa8e3e7fa84b07d4a
sw x3, 0(x2) # store 0xa8e3e7fa84b07d4a in memory
flw f21, 0(x2) # load 0xa8e3e7fa84b07d4a from memory into f21
la x2, scratch
li x3, 0xfa83fb7da650156e # load x3 with value 0xfa83fb7da650156e
sw x3, 0(x2) # store 0xfa83fb7da650156e in memory
flw f31, 0(x2) # load 0xfa83fb7da650156e from memory into f31
la x2, scratch
li x3, 0x2af8626327bca675 # load x3 with value 0x2af8626327bca675
sw x3, 0(x2) # store 0x2af8626327bca675 in memory
flw f12, 0(x2) # load 0x2af8626327bca675 from memory into f12
fnmsub.s f12, f21, f31, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x7399d6f7b98cf4da # load x3 with value 0x7399d6f7b98cf4da
sw x3, 0(x2) # store 0x7399d6f7b98cf4da in memory
flw f27, 0(x2) # load 0x7399d6f7b98cf4da from memory into f27
la x2, scratch
li x3, 0x4721d4465a81d9ab # load x3 with value 0x4721d4465a81d9ab
sw x3, 0(x2) # store 0x4721d4465a81d9ab in memory
flw f3, 0(x2) # load 0x4721d4465a81d9ab from memory into f3
la x2, scratch
li x3, 0xb6abac47b5d977a5 # load x3 with value 0xb6abac47b5d977a5
sw x3, 0(x2) # store 0xb6abac47b5d977a5 in memory
flw f13, 0(x2) # load 0xb6abac47b5d977a5 from memory into f13
fnmsub.s f13, f27, f3, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xccc76c5f54238bb2 # load x3 with value 0xccc76c5f54238bb2
sw x3, 0(x2) # store 0xccc76c5f54238bb2 in memory
flw f14, 0(x2) # load 0xccc76c5f54238bb2 from memory into f14
la x2, scratch
li x3, 0x83c5d41179250ebd # load x3 with value 0x83c5d41179250ebd
sw x3, 0(x2) # store 0x83c5d41179250ebd in memory
flw f7, 0(x2) # load 0x83c5d41179250ebd from memory into f7
la x2, scratch
li x3, 0x54ea9a0500c66483 # load x3 with value 0x54ea9a0500c66483
sw x3, 0(x2) # store 0x54ea9a0500c66483 in memory
flw f14, 0(x2) # load 0x54ea9a0500c66483 from memory into f14
fnmsub.s f14, f14, f7, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x40ff50fe9cbaa62 # load x3 with value 0x40ff50fe9cbaa62
sw x3, 0(x2) # store 0x40ff50fe9cbaa62 in memory
flw f5, 0(x2) # load 0x40ff50fe9cbaa62 from memory into f5
la x2, scratch
li x3, 0x9c136c34c3316fee # load x3 with value 0x9c136c34c3316fee
sw x3, 0(x2) # store 0x9c136c34c3316fee in memory
flw f29, 0(x2) # load 0x9c136c34c3316fee from memory into f29
la x2, scratch
li x3, 0x4c1ab1be83e4e9a5 # load x3 with value 0x4c1ab1be83e4e9a5
sw x3, 0(x2) # store 0x4c1ab1be83e4e9a5 in memory
flw f15, 0(x2) # load 0x4c1ab1be83e4e9a5 from memory into f15
fnmsub.s f15, f5, f29, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x20aac67bfa6f80a7 # load x3 with value 0x20aac67bfa6f80a7
sw x3, 0(x2) # store 0x20aac67bfa6f80a7 in memory
flw f24, 0(x2) # load 0x20aac67bfa6f80a7 from memory into f24
la x2, scratch
li x3, 0x6a3ac26f339c98e2 # load x3 with value 0x6a3ac26f339c98e2
sw x3, 0(x2) # store 0x6a3ac26f339c98e2 in memory
flw f30, 0(x2) # load 0x6a3ac26f339c98e2 from memory into f30
la x2, scratch
li x3, 0xb60e20c6334f599c # load x3 with value 0xb60e20c6334f599c
sw x3, 0(x2) # store 0xb60e20c6334f599c in memory
flw f16, 0(x2) # load 0xb60e20c6334f599c from memory into f16
fnmsub.s f16, f24, f30, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0xa0b60517f1298a2e # load x3 with value 0xa0b60517f1298a2e
sw x3, 0(x2) # store 0xa0b60517f1298a2e in memory
flw f22, 0(x2) # load 0xa0b60517f1298a2e from memory into f22
la x2, scratch
li x3, 0x93aced70a5c9da92 # load x3 with value 0x93aced70a5c9da92
sw x3, 0(x2) # store 0x93aced70a5c9da92 in memory
flw f11, 0(x2) # load 0x93aced70a5c9da92 from memory into f11
la x2, scratch
li x3, 0x1fc9c804d728dd4c # load x3 with value 0x1fc9c804d728dd4c
sw x3, 0(x2) # store 0x1fc9c804d728dd4c in memory
flw f17, 0(x2) # load 0x1fc9c804d728dd4c from memory into f17
fnmsub.s f17, f22, f11, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0xb9c2b02b49c7948a # load x3 with value 0xb9c2b02b49c7948a
sw x3, 0(x2) # store 0xb9c2b02b49c7948a in memory
flw f5, 0(x2) # load 0xb9c2b02b49c7948a from memory into f5
la x2, scratch
li x3, 0x86d429f585d42d28 # load x3 with value 0x86d429f585d42d28
sw x3, 0(x2) # store 0x86d429f585d42d28 in memory
flw f20, 0(x2) # load 0x86d429f585d42d28 from memory into f20
la x2, scratch
li x3, 0x281e68a7139f2c63 # load x3 with value 0x281e68a7139f2c63
sw x3, 0(x2) # store 0x281e68a7139f2c63 in memory
flw f18, 0(x2) # load 0x281e68a7139f2c63 from memory into f18
fnmsub.s f18, f5, f20, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0xb4644fdf04977052 # load x3 with value 0xb4644fdf04977052
sw x3, 0(x2) # store 0xb4644fdf04977052 in memory
flw f1, 0(x2) # load 0xb4644fdf04977052 from memory into f1
la x2, scratch
li x3, 0x8cab7e11de6e0440 # load x3 with value 0x8cab7e11de6e0440
sw x3, 0(x2) # store 0x8cab7e11de6e0440 in memory
flw f28, 0(x2) # load 0x8cab7e11de6e0440 from memory into f28
la x2, scratch
li x3, 0xd6d6c25f3275f03c # load x3 with value 0xd6d6c25f3275f03c
sw x3, 0(x2) # store 0xd6d6c25f3275f03c in memory
flw f19, 0(x2) # load 0xd6d6c25f3275f03c from memory into f19
fnmsub.s f19, f1, f28, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x313f7338c71e71d2 # load x3 with value 0x313f7338c71e71d2
sw x3, 0(x2) # store 0x313f7338c71e71d2 in memory
flw f6, 0(x2) # load 0x313f7338c71e71d2 from memory into f6
la x2, scratch
li x3, 0x411dcb74b868c2c2 # load x3 with value 0x411dcb74b868c2c2
sw x3, 0(x2) # store 0x411dcb74b868c2c2 in memory
flw f8, 0(x2) # load 0x411dcb74b868c2c2 from memory into f8
la x2, scratch
li x3, 0x519be90b0aebbcb9 # load x3 with value 0x519be90b0aebbcb9
sw x3, 0(x2) # store 0x519be90b0aebbcb9 in memory
flw f20, 0(x2) # load 0x519be90b0aebbcb9 from memory into f20
fnmsub.s f20, f6, f8, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x8c8ca614f62a487b # load x3 with value 0x8c8ca614f62a487b
sw x3, 0(x2) # store 0x8c8ca614f62a487b in memory
flw f3, 0(x2) # load 0x8c8ca614f62a487b from memory into f3
la x2, scratch
li x3, 0x474a324453f11c96 # load x3 with value 0x474a324453f11c96
sw x3, 0(x2) # store 0x474a324453f11c96 in memory
flw f5, 0(x2) # load 0x474a324453f11c96 from memory into f5
la x2, scratch
li x3, 0x48b907b65f31da88 # load x3 with value 0x48b907b65f31da88
sw x3, 0(x2) # store 0x48b907b65f31da88 in memory
flw f21, 0(x2) # load 0x48b907b65f31da88 from memory into f21
fnmsub.s f21, f3, f5, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0xf7e5f7fe6b7681e1 # load x3 with value 0xf7e5f7fe6b7681e1
sw x3, 0(x2) # store 0xf7e5f7fe6b7681e1 in memory
flw f5, 0(x2) # load 0xf7e5f7fe6b7681e1 from memory into f5
la x2, scratch
li x3, 0xc887b4cc7126dc0e # load x3 with value 0xc887b4cc7126dc0e
sw x3, 0(x2) # store 0xc887b4cc7126dc0e in memory
flw f15, 0(x2) # load 0xc887b4cc7126dc0e from memory into f15
la x2, scratch
li x3, 0x8477978946f869f0 # load x3 with value 0x8477978946f869f0
sw x3, 0(x2) # store 0x8477978946f869f0 in memory
flw f22, 0(x2) # load 0x8477978946f869f0 from memory into f22
fnmsub.s f22, f5, f15, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0x85f6b6c432fcb480 # load x3 with value 0x85f6b6c432fcb480
sw x3, 0(x2) # store 0x85f6b6c432fcb480 in memory
flw f6, 0(x2) # load 0x85f6b6c432fcb480 from memory into f6
la x2, scratch
li x3, 0x71e8a3cbf0dcdae1 # load x3 with value 0x71e8a3cbf0dcdae1
sw x3, 0(x2) # store 0x71e8a3cbf0dcdae1 in memory
flw f17, 0(x2) # load 0x71e8a3cbf0dcdae1 from memory into f17
la x2, scratch
li x3, 0x2ff6ecbd47273084 # load x3 with value 0x2ff6ecbd47273084
sw x3, 0(x2) # store 0x2ff6ecbd47273084 in memory
flw f23, 0(x2) # load 0x2ff6ecbd47273084 from memory into f23
fnmsub.s f23, f6, f17, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0xd38e9562bc2abecb # load x3 with value 0xd38e9562bc2abecb
sw x3, 0(x2) # store 0xd38e9562bc2abecb in memory
flw f26, 0(x2) # load 0xd38e9562bc2abecb from memory into f26
la x2, scratch
li x3, 0x2c4d1666bdf85800 # load x3 with value 0x2c4d1666bdf85800
sw x3, 0(x2) # store 0x2c4d1666bdf85800 in memory
flw f6, 0(x2) # load 0x2c4d1666bdf85800 from memory into f6
la x2, scratch
li x3, 0x249a070d3fd73aa3 # load x3 with value 0x249a070d3fd73aa3
sw x3, 0(x2) # store 0x249a070d3fd73aa3 in memory
flw f24, 0(x2) # load 0x249a070d3fd73aa3 from memory into f24
fnmsub.s f24, f26, f6, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x396d14b98c9afa3c # load x3 with value 0x396d14b98c9afa3c
sw x3, 0(x2) # store 0x396d14b98c9afa3c in memory
flw f30, 0(x2) # load 0x396d14b98c9afa3c from memory into f30
la x2, scratch
li x3, 0x747e7b75c5204a22 # load x3 with value 0x747e7b75c5204a22
sw x3, 0(x2) # store 0x747e7b75c5204a22 in memory
flw f26, 0(x2) # load 0x747e7b75c5204a22 from memory into f26
la x2, scratch
li x3, 0xea091cbb606b0347 # load x3 with value 0xea091cbb606b0347
sw x3, 0(x2) # store 0xea091cbb606b0347 in memory
flw f25, 0(x2) # load 0xea091cbb606b0347 from memory into f25
fnmsub.s f25, f30, f26, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x8be4653adc3a9a7b # load x3 with value 0x8be4653adc3a9a7b
sw x3, 0(x2) # store 0x8be4653adc3a9a7b in memory
flw f10, 0(x2) # load 0x8be4653adc3a9a7b from memory into f10
la x2, scratch
li x3, 0xb99e07d0d24fe986 # load x3 with value 0xb99e07d0d24fe986
sw x3, 0(x2) # store 0xb99e07d0d24fe986 in memory
flw f2, 0(x2) # load 0xb99e07d0d24fe986 from memory into f2
la x2, scratch
li x3, 0xe16ea4acd29b0c18 # load x3 with value 0xe16ea4acd29b0c18
sw x3, 0(x2) # store 0xe16ea4acd29b0c18 in memory
flw f26, 0(x2) # load 0xe16ea4acd29b0c18 from memory into f26
fnmsub.s f26, f10, f2, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xc72694a9676ce2de # load x3 with value 0xc72694a9676ce2de
sw x3, 0(x2) # store 0xc72694a9676ce2de in memory
flw f30, 0(x2) # load 0xc72694a9676ce2de from memory into f30
la x2, scratch
li x3, 0xdba99db9d5454e42 # load x3 with value 0xdba99db9d5454e42
sw x3, 0(x2) # store 0xdba99db9d5454e42 in memory
flw f9, 0(x2) # load 0xdba99db9d5454e42 from memory into f9
la x2, scratch
li x3, 0xd5ea4c98ec85f1bf # load x3 with value 0xd5ea4c98ec85f1bf
sw x3, 0(x2) # store 0xd5ea4c98ec85f1bf in memory
flw f27, 0(x2) # load 0xd5ea4c98ec85f1bf from memory into f27
fnmsub.s f27, f30, f9, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x66222d252768154c # load x3 with value 0x66222d252768154c
sw x3, 0(x2) # store 0x66222d252768154c in memory
flw f20, 0(x2) # load 0x66222d252768154c from memory into f20
la x2, scratch
li x3, 0x2a406c201c93cd4e # load x3 with value 0x2a406c201c93cd4e
sw x3, 0(x2) # store 0x2a406c201c93cd4e in memory
flw f30, 0(x2) # load 0x2a406c201c93cd4e from memory into f30
la x2, scratch
li x3, 0xad87894b9e86ffe4 # load x3 with value 0xad87894b9e86ffe4
sw x3, 0(x2) # store 0xad87894b9e86ffe4 in memory
flw f28, 0(x2) # load 0xad87894b9e86ffe4 from memory into f28
fnmsub.s f28, f20, f30, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x6c12485fa36a7486 # load x3 with value 0x6c12485fa36a7486
sw x3, 0(x2) # store 0x6c12485fa36a7486 in memory
flw f28, 0(x2) # load 0x6c12485fa36a7486 from memory into f28
la x2, scratch
li x3, 0xd6e62f4c1780d6ce # load x3 with value 0xd6e62f4c1780d6ce
sw x3, 0(x2) # store 0xd6e62f4c1780d6ce in memory
flw f29, 0(x2) # load 0xd6e62f4c1780d6ce from memory into f29
la x2, scratch
li x3, 0x36b981c3d8992f # load x3 with value 0x36b981c3d8992f
sw x3, 0(x2) # store 0x36b981c3d8992f in memory
flw f29, 0(x2) # load 0x36b981c3d8992f from memory into f29
fnmsub.s f29, f28, f29, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0xac638ea08a1233ca # load x3 with value 0xac638ea08a1233ca
sw x3, 0(x2) # store 0xac638ea08a1233ca in memory
flw f16, 0(x2) # load 0xac638ea08a1233ca from memory into f16
la x2, scratch
li x3, 0xba6904ad7fd4eb3f # load x3 with value 0xba6904ad7fd4eb3f
sw x3, 0(x2) # store 0xba6904ad7fd4eb3f in memory
flw f22, 0(x2) # load 0xba6904ad7fd4eb3f from memory into f22
la x2, scratch
li x3, 0x54c6847a3437aeef # load x3 with value 0x54c6847a3437aeef
sw x3, 0(x2) # store 0x54c6847a3437aeef in memory
flw f30, 0(x2) # load 0x54c6847a3437aeef from memory into f30
fnmsub.s f30, f16, f22, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x787d3842f1801384 # load x3 with value 0x787d3842f1801384
sw x3, 0(x2) # store 0x787d3842f1801384 in memory
flw f11, 0(x2) # load 0x787d3842f1801384 from memory into f11
la x2, scratch
li x3, 0x68ab91cc508d38fa # load x3 with value 0x68ab91cc508d38fa
sw x3, 0(x2) # store 0x68ab91cc508d38fa in memory
flw f20, 0(x2) # load 0x68ab91cc508d38fa from memory into f20
la x2, scratch
li x3, 0x6a32dfad157669a2 # load x3 with value 0x6a32dfad157669a2
sw x3, 0(x2) # store 0x6a32dfad157669a2 in memory
flw f31, 0(x2) # load 0x6a32dfad157669a2 from memory into f31
fnmsub.s f31, f11, f20, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x2049189c6cee4cea # load x3 with value 0x2049189c6cee4cea
sw x3, 0(x2) # store 0x2049189c6cee4cea in memory
flw f24, 0(x2) # load 0x2049189c6cee4cea from memory into f24
la x2, scratch
li x3, 0x546328607a9cacb4 # load x3 with value 0x546328607a9cacb4
sw x3, 0(x2) # store 0x546328607a9cacb4 in memory
flw f25, 0(x2) # load 0x546328607a9cacb4 from memory into f25
la x2, scratch
li x3, 0x0000001f # load x3 with value 0x0000001f
sw x3, 0(x2) # store 0x0000001f in memory
flw f31, 0(x2) # load 0x0000001f from memory into f31
fnmsub.s f19, f24, f25, f31, dyn # perform operation
fnmsub.s f19, f24, f25, f31, rdn # perform operation
fnmsub.s f19, f24, f25, f31, rmm # perform operation
fnmsub.s f19, f24, f25, f31, rne # perform operation
fnmsub.s f19, f24, f25, f31, rtz # perform operation
fnmsub.s f19, f24, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x2a12a9940cf1834d # load x3 with value 0x2a12a9940cf1834d
sw x3, 0(x2) # store 0x2a12a9940cf1834d in memory
flw f25, 0(x2) # load 0x2a12a9940cf1834d from memory into f25
fnmsub.s f21, f8, f5, f25, dyn # perform operation
fnmsub.s f21, f8, f5, f25, rdn # perform operation
fnmsub.s f21, f8, f5, f25, rmm # perform operation
fnmsub.s f21, f8, f5, f25, rne # perform operation
fnmsub.s f21, f8, f5, f25, rtz # perform operation
fnmsub.s f21, f8, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f8, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x1c296216631bfee5 # load x3 with value 0x1c296216631bfee5
sw x3, 0(x2) # store 0x1c296216631bfee5 in memory
flw f28, 0(x2) # load 0x1c296216631bfee5 from memory into f28
fnmsub.s f17, f16, f10, f28, dyn # perform operation
fnmsub.s f17, f16, f10, f28, rdn # perform operation
fnmsub.s f17, f16, f10, f28, rmm # perform operation
fnmsub.s f17, f16, f10, f28, rne # perform operation
fnmsub.s f17, f16, f10, f28, rtz # perform operation
fnmsub.s f17, f16, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x4e2f853889d026a7 # load x3 with value 0x4e2f853889d026a7
sw x3, 0(x2) # store 0x4e2f853889d026a7 in memory
flw f2, 0(x2) # load 0x4e2f853889d026a7 from memory into f2
fnmsub.s f30, f26, f29, f2, dyn # perform operation
fnmsub.s f30, f26, f29, f2, rdn # perform operation
fnmsub.s f30, f26, f29, f2, rmm # perform operation
fnmsub.s f30, f26, f29, f2, rne # perform operation
fnmsub.s f30, f26, f29, f2, rtz # perform operation
fnmsub.s f30, f26, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xf2b964b29708a34a # load x3 with value 0xf2b964b29708a34a
sw x3, 0(x2) # store 0xf2b964b29708a34a in memory
flw f21, 0(x2) # load 0xf2b964b29708a34a from memory into f21
fnmsub.s f20, f14, f17, f21, dyn # perform operation
fnmsub.s f20, f14, f17, f21, rdn # perform operation
fnmsub.s f20, f14, f17, f21, rmm # perform operation
fnmsub.s f20, f14, f17, f21, rne # perform operation
fnmsub.s f20, f14, f17, f21, rtz # perform operation
fnmsub.s f20, f14, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x6c11a5b7f59af80e # load x3 with value 0x6c11a5b7f59af80e
sw x3, 0(x2) # store 0x6c11a5b7f59af80e in memory
flw f1, 0(x2) # load 0x6c11a5b7f59af80e from memory into f1
fnmsub.s f23, f13, f24, f1, dyn # perform operation
fnmsub.s f23, f13, f24, f1, rdn # perform operation
fnmsub.s f23, f13, f24, f1, rmm # perform operation
fnmsub.s f23, f13, f24, f1, rne # perform operation
fnmsub.s f23, f13, f24, f1, rtz # perform operation
fnmsub.s f23, f13, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xdfc55ca801beef97 # load x3 with value 0xdfc55ca801beef97
sw x3, 0(x2) # store 0xdfc55ca801beef97 in memory
flw f22, 0(x2) # load 0xdfc55ca801beef97 from memory into f22
fnmsub.s f29, f25, f16, f22, dyn # perform operation
fnmsub.s f29, f25, f16, f22, rdn # perform operation
fnmsub.s f29, f25, f16, f22, rmm # perform operation
fnmsub.s f29, f25, f16, f22, rne # perform operation
fnmsub.s f29, f25, f16, f22, rtz # perform operation
fnmsub.s f29, f25, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f25, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xfdaf172ba604a213 # load x3 with value 0xfdaf172ba604a213
sw x3, 0(x2) # store 0xfdaf172ba604a213 in memory
flw f1, 0(x2) # load 0xfdaf172ba604a213 from memory into f1
fnmsub.s f22, f2, f28, f1, dyn # perform operation
fnmsub.s f22, f2, f28, f1, rdn # perform operation
fnmsub.s f22, f2, f28, f1, rmm # perform operation
fnmsub.s f22, f2, f28, f1, rne # perform operation
fnmsub.s f22, f2, f28, f1, rtz # perform operation
fnmsub.s f22, f2, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xb4822107cd1f54b # load x3 with value 0xb4822107cd1f54b
sw x3, 0(x2) # store 0xb4822107cd1f54b in memory
flw f19, 0(x2) # load 0xb4822107cd1f54b from memory into f19
fnmsub.s f13, f21, f7, f19, dyn # perform operation
fnmsub.s f13, f21, f7, f19, rdn # perform operation
fnmsub.s f13, f21, f7, f19, rmm # perform operation
fnmsub.s f13, f21, f7, f19, rne # perform operation
fnmsub.s f13, f21, f7, f19, rtz # perform operation
fnmsub.s f13, f21, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x70c3fb747285bc3a # load x3 with value 0x70c3fb747285bc3a
sw x3, 0(x2) # store 0x70c3fb747285bc3a in memory
flw f13, 0(x2) # load 0x70c3fb747285bc3a from memory into f13
fnmsub.s f28, f12, f25, f13, dyn # perform operation
fnmsub.s f28, f12, f25, f13, rdn # perform operation
fnmsub.s f28, f12, f25, f13, rmm # perform operation
fnmsub.s f28, f12, f25, f13, rne # perform operation
fnmsub.s f28, f12, f25, f13, rtz # perform operation
fnmsub.s f28, f12, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x4ba5e393ac9dd78b # load x3 with value 0x4ba5e393ac9dd78b
sw x3, 0(x2) # store 0x4ba5e393ac9dd78b in memory
flw f17, 0(x2) # load 0x4ba5e393ac9dd78b from memory into f17
fnmsub.s f5, f18, f1, f17, dyn # perform operation
fnmsub.s f5, f18, f1, f17, rdn # perform operation
fnmsub.s f5, f18, f1, f17, rmm # perform operation
fnmsub.s f5, f18, f1, f17, rne # perform operation
fnmsub.s f5, f18, f1, f17, rtz # perform operation
fnmsub.s f5, f18, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x2521fb80d4180ab2 # load x3 with value 0x2521fb80d4180ab2
sw x3, 0(x2) # store 0x2521fb80d4180ab2 in memory
flw f18, 0(x2) # load 0x2521fb80d4180ab2 from memory into f18
fnmsub.s f22, f16, f24, f18, dyn # perform operation
fnmsub.s f22, f16, f24, f18, rdn # perform operation
fnmsub.s f22, f16, f24, f18, rmm # perform operation
fnmsub.s f22, f16, f24, f18, rne # perform operation
fnmsub.s f22, f16, f24, f18, rtz # perform operation
fnmsub.s f22, f16, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x901b88699fd34efb # load x3 with value 0x901b88699fd34efb
sw x3, 0(x2) # store 0x901b88699fd34efb in memory
flw f19, 0(x2) # load 0x901b88699fd34efb from memory into f19
fnmsub.s f21, f25, f5, f19, dyn # perform operation
fnmsub.s f21, f25, f5, f19, rdn # perform operation
fnmsub.s f21, f25, f5, f19, rmm # perform operation
fnmsub.s f21, f25, f5, f19, rne # perform operation
fnmsub.s f21, f25, f5, f19, rtz # perform operation
fnmsub.s f21, f25, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x465772db31ac483c # load x3 with value 0x465772db31ac483c
sw x3, 0(x2) # store 0x465772db31ac483c in memory
flw f17, 0(x2) # load 0x465772db31ac483c from memory into f17
fnmsub.s f25, f27, f2, f17, dyn # perform operation
fnmsub.s f25, f27, f2, f17, rdn # perform operation
fnmsub.s f25, f27, f2, f17, rmm # perform operation
fnmsub.s f25, f27, f2, f17, rne # perform operation
fnmsub.s f25, f27, f2, f17, rtz # perform operation
fnmsub.s f25, f27, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xce3c4749e6174169 # load x3 with value 0xce3c4749e6174169
sw x3, 0(x2) # store 0xce3c4749e6174169 in memory
flw f14, 0(x2) # load 0xce3c4749e6174169 from memory into f14
fnmsub.s f25, f29, f1, f14, dyn # perform operation
fnmsub.s f25, f29, f1, f14, rdn # perform operation
fnmsub.s f25, f29, f1, f14, rmm # perform operation
fnmsub.s f25, f29, f1, f14, rne # perform operation
fnmsub.s f25, f29, f1, f14, rtz # perform operation
fnmsub.s f25, f29, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x96f3e05114f7e41c # load x3 with value 0x96f3e05114f7e41c
sw x3, 0(x2) # store 0x96f3e05114f7e41c in memory
flw f19, 0(x2) # load 0x96f3e05114f7e41c from memory into f19
fnmsub.s f8, f29, f2, f19, dyn # perform operation
fnmsub.s f8, f29, f2, f19, rdn # perform operation
fnmsub.s f8, f29, f2, f19, rmm # perform operation
fnmsub.s f8, f29, f2, f19, rne # perform operation
fnmsub.s f8, f29, f2, f19, rtz # perform operation
fnmsub.s f8, f29, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x6b2c29088d5d3d5e # load x3 with value 0x6b2c29088d5d3d5e
sw x3, 0(x2) # store 0x6b2c29088d5d3d5e in memory
flw f11, 0(x2) # load 0x6b2c29088d5d3d5e from memory into f11
fnmsub.s f26, f8, f27, f11, dyn # perform operation
fnmsub.s f26, f8, f27, f11, rdn # perform operation
fnmsub.s f26, f8, f27, f11, rmm # perform operation
fnmsub.s f26, f8, f27, f11, rne # perform operation
fnmsub.s f26, f8, f27, f11, rtz # perform operation
fnmsub.s f26, f8, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xe6232140859c4cea # load x3 with value 0xe6232140859c4cea
sw x3, 0(x2) # store 0xe6232140859c4cea in memory
flw f23, 0(x2) # load 0xe6232140859c4cea from memory into f23
fnmsub.s f18, f9, f22, f23, dyn # perform operation
fnmsub.s f18, f9, f22, f23, rdn # perform operation
fnmsub.s f18, f9, f22, f23, rmm # perform operation
fnmsub.s f18, f9, f22, f23, rne # perform operation
fnmsub.s f18, f9, f22, f23, rtz # perform operation
fnmsub.s f18, f9, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xa239863f50e73e60 # load x3 with value 0xa239863f50e73e60
sw x3, 0(x2) # store 0xa239863f50e73e60 in memory
flw f23, 0(x2) # load 0xa239863f50e73e60 from memory into f23
fnmsub.s f14, f12, f18, f23, dyn # perform operation
fnmsub.s f14, f12, f18, f23, rdn # perform operation
fnmsub.s f14, f12, f18, f23, rmm # perform operation
fnmsub.s f14, f12, f18, f23, rne # perform operation
fnmsub.s f14, f12, f18, f23, rtz # perform operation
fnmsub.s f14, f12, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f12, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xea8aacc1eae7486c # load x3 with value 0xea8aacc1eae7486c
sw x3, 0(x2) # store 0xea8aacc1eae7486c in memory
flw f10, 0(x2) # load 0xea8aacc1eae7486c from memory into f10
fnmsub.s f6, f21, f30, f10, dyn # perform operation
fnmsub.s f6, f21, f30, f10, rdn # perform operation
fnmsub.s f6, f21, f30, f10, rmm # perform operation
fnmsub.s f6, f21, f30, f10, rne # perform operation
fnmsub.s f6, f21, f30, f10, rtz # perform operation
fnmsub.s f6, f21, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xedbc70199dd471e5 # load x3 with value 0xedbc70199dd471e5
sw x3, 0(x2) # store 0xedbc70199dd471e5 in memory
flw f31, 0(x2) # load 0xedbc70199dd471e5 from memory into f31
fnmsub.s f2, f19, f16, f31, dyn # perform operation
fnmsub.s f2, f19, f16, f31, rdn # perform operation
fnmsub.s f2, f19, f16, f31, rmm # perform operation
fnmsub.s f2, f19, f16, f31, rne # perform operation
fnmsub.s f2, f19, f16, f31, rtz # perform operation
fnmsub.s f2, f19, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xc94ee046071f12d6 # load x3 with value 0xc94ee046071f12d6
sw x3, 0(x2) # store 0xc94ee046071f12d6 in memory
flw f25, 0(x2) # load 0xc94ee046071f12d6 from memory into f25
fnmsub.s f31, f17, f22, f25, dyn # perform operation
fnmsub.s f31, f17, f22, f25, rdn # perform operation
fnmsub.s f31, f17, f22, f25, rmm # perform operation
fnmsub.s f31, f17, f22, f25, rne # perform operation
fnmsub.s f31, f17, f22, f25, rtz # perform operation
fnmsub.s f31, f17, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x62340b294c250037 # load x3 with value 0x62340b294c250037
sw x3, 0(x2) # store 0x62340b294c250037 in memory
flw f2, 0(x2) # load 0x62340b294c250037 from memory into f2
fnmsub.s f21, f13, f24, f2, dyn # perform operation
fnmsub.s f21, f13, f24, f2, rdn # perform operation
fnmsub.s f21, f13, f24, f2, rmm # perform operation
fnmsub.s f21, f13, f24, f2, rne # perform operation
fnmsub.s f21, f13, f24, f2, rtz # perform operation
fnmsub.s f21, f13, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x493affe1243103cd # load x3 with value 0x493affe1243103cd
sw x3, 0(x2) # store 0x493affe1243103cd in memory
flw f8, 0(x2) # load 0x493affe1243103cd from memory into f8
fnmsub.s f7, f2, f14, f8, dyn # perform operation
fnmsub.s f7, f2, f14, f8, rdn # perform operation
fnmsub.s f7, f2, f14, f8, rmm # perform operation
fnmsub.s f7, f2, f14, f8, rne # perform operation
fnmsub.s f7, f2, f14, f8, rtz # perform operation
fnmsub.s f7, f2, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f2, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x9cf189fe8947196e # load x3 with value 0x9cf189fe8947196e
sw x3, 0(x2) # store 0x9cf189fe8947196e in memory
flw f25, 0(x2) # load 0x9cf189fe8947196e from memory into f25
fnmsub.s f21, f16, f10, f25, dyn # perform operation
fnmsub.s f21, f16, f10, f25, rdn # perform operation
fnmsub.s f21, f16, f10, f25, rmm # perform operation
fnmsub.s f21, f16, f10, f25, rne # perform operation
fnmsub.s f21, f16, f10, f25, rtz # perform operation
fnmsub.s f21, f16, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xa38c5b38ff563a4e # load x3 with value 0xa38c5b38ff563a4e
sw x3, 0(x2) # store 0xa38c5b38ff563a4e in memory
flw f15, 0(x2) # load 0xa38c5b38ff563a4e from memory into f15
fnmsub.s f1, f30, f31, f15, dyn # perform operation
fnmsub.s f1, f30, f31, f15, rdn # perform operation
fnmsub.s f1, f30, f31, f15, rmm # perform operation
fnmsub.s f1, f30, f31, f15, rne # perform operation
fnmsub.s f1, f30, f31, f15, rtz # perform operation
fnmsub.s f1, f30, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f30, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x98d13778966e7031 # load x3 with value 0x98d13778966e7031
sw x3, 0(x2) # store 0x98d13778966e7031 in memory
flw f17, 0(x2) # load 0x98d13778966e7031 from memory into f17
fnmsub.s f13, f3, f15, f17, dyn # perform operation
fnmsub.s f13, f3, f15, f17, rdn # perform operation
fnmsub.s f13, f3, f15, f17, rmm # perform operation
fnmsub.s f13, f3, f15, f17, rne # perform operation
fnmsub.s f13, f3, f15, f17, rtz # perform operation
fnmsub.s f13, f3, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x1b983ff4acd439ee # load x3 with value 0x1b983ff4acd439ee
sw x3, 0(x2) # store 0x1b983ff4acd439ee in memory
flw f6, 0(x2) # load 0x1b983ff4acd439ee from memory into f6
fnmsub.s f12, f11, f3, f6, dyn # perform operation
fnmsub.s f12, f11, f3, f6, rdn # perform operation
fnmsub.s f12, f11, f3, f6, rmm # perform operation
fnmsub.s f12, f11, f3, f6, rne # perform operation
fnmsub.s f12, f11, f3, f6, rtz # perform operation
fnmsub.s f12, f11, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x3391648b0ce045cd # load x3 with value 0x3391648b0ce045cd
sw x3, 0(x2) # store 0x3391648b0ce045cd in memory
flw f28, 0(x2) # load 0x3391648b0ce045cd from memory into f28
fnmsub.s f5, f7, f12, f28, dyn # perform operation
fnmsub.s f5, f7, f12, f28, rdn # perform operation
fnmsub.s f5, f7, f12, f28, rmm # perform operation
fnmsub.s f5, f7, f12, f28, rne # perform operation
fnmsub.s f5, f7, f12, f28, rtz # perform operation
fnmsub.s f5, f7, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xd7950dc003c7c6c0 # load x3 with value 0xd7950dc003c7c6c0
sw x3, 0(x2) # store 0xd7950dc003c7c6c0 in memory
flw f1, 0(x2) # load 0xd7950dc003c7c6c0 from memory into f1
fnmsub.s f6, f9, f19, f1, dyn # perform operation
fnmsub.s f6, f9, f19, f1, rdn # perform operation
fnmsub.s f6, f9, f19, f1, rmm # perform operation
fnmsub.s f6, f9, f19, f1, rne # perform operation
fnmsub.s f6, f9, f19, f1, rtz # perform operation
fnmsub.s f6, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xb8a1f5ef8e10a6d3 # load x3 with value 0xb8a1f5ef8e10a6d3
sw x3, 0(x2) # store 0xb8a1f5ef8e10a6d3 in memory
flw f16, 0(x2) # load 0xb8a1f5ef8e10a6d3 from memory into f16
fnmsub.s f29, f9, f5, f16, dyn # perform operation
fnmsub.s f29, f9, f5, f16, rdn # perform operation
fnmsub.s f29, f9, f5, f16, rmm # perform operation
fnmsub.s f29, f9, f5, f16, rne # perform operation
fnmsub.s f29, f9, f5, f16, rtz # perform operation
fnmsub.s f29, f9, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f9, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f9, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f9, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f9, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f9, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x28a0f94f5c27602d # load x3 with value 0x28a0f94f5c27602d
sw x3, 0(x2) # store 0x28a0f94f5c27602d in memory
flw f2, 0(x2) # load 0x28a0f94f5c27602d from memory into f2
fnmsub.s f18, f27, f23, f2, dyn # perform operation
fnmsub.s f18, f27, f23, f2, rdn # perform operation
fnmsub.s f18, f27, f23, f2, rmm # perform operation
fnmsub.s f18, f27, f23, f2, rne # perform operation
fnmsub.s f18, f27, f23, f2, rtz # perform operation
fnmsub.s f18, f27, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xe2b9a6ae61fec91 # load x3 with value 0xe2b9a6ae61fec91
sw x3, 0(x2) # store 0xe2b9a6ae61fec91 in memory
flw f5, 0(x2) # load 0xe2b9a6ae61fec91 from memory into f5
fnmsub.s f29, f17, f10, f5, dyn # perform operation
fnmsub.s f29, f17, f10, f5, rdn # perform operation
fnmsub.s f29, f17, f10, f5, rmm # perform operation
fnmsub.s f29, f17, f10, f5, rne # perform operation
fnmsub.s f29, f17, f10, f5, rtz # perform operation
fnmsub.s f29, f17, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xce2f74e06c8e5703 # load x3 with value 0xce2f74e06c8e5703
sw x3, 0(x2) # store 0xce2f74e06c8e5703 in memory
flw f30, 0(x2) # load 0xce2f74e06c8e5703 from memory into f30
fnmsub.s f7, f12, f10, f30, dyn # perform operation
fnmsub.s f7, f12, f10, f30, rdn # perform operation
fnmsub.s f7, f12, f10, f30, rmm # perform operation
fnmsub.s f7, f12, f10, f30, rne # perform operation
fnmsub.s f7, f12, f10, f30, rtz # perform operation
fnmsub.s f7, f12, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x71b0b472fa348be8 # load x3 with value 0x71b0b472fa348be8
sw x3, 0(x2) # store 0x71b0b472fa348be8 in memory
flw f1, 0(x2) # load 0x71b0b472fa348be8 from memory into f1
fnmsub.s f10, f27, f19, f1, dyn # perform operation
fnmsub.s f10, f27, f19, f1, rdn # perform operation
fnmsub.s f10, f27, f19, f1, rmm # perform operation
fnmsub.s f10, f27, f19, f1, rne # perform operation
fnmsub.s f10, f27, f19, f1, rtz # perform operation
fnmsub.s f10, f27, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f27, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x2feb49731f290133 # load x3 with value 0x2feb49731f290133
sw x3, 0(x2) # store 0x2feb49731f290133 in memory
flw f24, 0(x2) # load 0x2feb49731f290133 from memory into f24
fnmsub.s f17, f31, f6, f24, dyn # perform operation
fnmsub.s f17, f31, f6, f24, rdn # perform operation
fnmsub.s f17, f31, f6, f24, rmm # perform operation
fnmsub.s f17, f31, f6, f24, rne # perform operation
fnmsub.s f17, f31, f6, f24, rtz # perform operation
fnmsub.s f17, f31, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xb78ed3306202eff5 # load x3 with value 0xb78ed3306202eff5
sw x3, 0(x2) # store 0xb78ed3306202eff5 in memory
flw f19, 0(x2) # load 0xb78ed3306202eff5 from memory into f19
fnmsub.s f27, f5, f8, f19, dyn # perform operation
fnmsub.s f27, f5, f8, f19, rdn # perform operation
fnmsub.s f27, f5, f8, f19, rmm # perform operation
fnmsub.s f27, f5, f8, f19, rne # perform operation
fnmsub.s f27, f5, f8, f19, rtz # perform operation
fnmsub.s f27, f5, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xfc7ac9f50cc091f8 # load x3 with value 0xfc7ac9f50cc091f8
sw x3, 0(x2) # store 0xfc7ac9f50cc091f8 in memory
flw f15, 0(x2) # load 0xfc7ac9f50cc091f8 from memory into f15
fnmsub.s f18, f12, f31, f15, dyn # perform operation
fnmsub.s f18, f12, f31, f15, rdn # perform operation
fnmsub.s f18, f12, f31, f15, rmm # perform operation
fnmsub.s f18, f12, f31, f15, rne # perform operation
fnmsub.s f18, f12, f31, f15, rtz # perform operation
fnmsub.s f18, f12, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x6e07020746dca48 # load x3 with value 0x6e07020746dca48
sw x3, 0(x2) # store 0x6e07020746dca48 in memory
flw f21, 0(x2) # load 0x6e07020746dca48 from memory into f21
fnmsub.s f27, f23, f5, f21, dyn # perform operation
fnmsub.s f27, f23, f5, f21, rdn # perform operation
fnmsub.s f27, f23, f5, f21, rmm # perform operation
fnmsub.s f27, f23, f5, f21, rne # perform operation
fnmsub.s f27, f23, f5, f21, rtz # perform operation
fnmsub.s f27, f23, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x19045e3746b22de7 # load x3 with value 0x19045e3746b22de7
sw x3, 0(x2) # store 0x19045e3746b22de7 in memory
flw f31, 0(x2) # load 0x19045e3746b22de7 from memory into f31
fnmsub.s f25, f24, f12, f31, dyn # perform operation
fnmsub.s f25, f24, f12, f31, rdn # perform operation
fnmsub.s f25, f24, f12, f31, rmm # perform operation
fnmsub.s f25, f24, f12, f31, rne # perform operation
fnmsub.s f25, f24, f12, f31, rtz # perform operation
fnmsub.s f25, f24, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f24, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xc85c1cd2ac71205e # load x3 with value 0xc85c1cd2ac71205e
sw x3, 0(x2) # store 0xc85c1cd2ac71205e in memory
flw f22, 0(x2) # load 0xc85c1cd2ac71205e from memory into f22
fnmsub.s f19, f26, f31, f22, dyn # perform operation
fnmsub.s f19, f26, f31, f22, rdn # perform operation
fnmsub.s f19, f26, f31, f22, rmm # perform operation
fnmsub.s f19, f26, f31, f22, rne # perform operation
fnmsub.s f19, f26, f31, f22, rtz # perform operation
fnmsub.s f19, f26, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f26, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xb1c3f6b4e8278677 # load x3 with value 0xb1c3f6b4e8278677
sw x3, 0(x2) # store 0xb1c3f6b4e8278677 in memory
flw f21, 0(x2) # load 0xb1c3f6b4e8278677 from memory into f21
fnmsub.s f23, f22, f6, f21, dyn # perform operation
fnmsub.s f23, f22, f6, f21, rdn # perform operation
fnmsub.s f23, f22, f6, f21, rmm # perform operation
fnmsub.s f23, f22, f6, f21, rne # perform operation
fnmsub.s f23, f22, f6, f21, rtz # perform operation
fnmsub.s f23, f22, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xe3f0db4f2df7d0a0 # load x3 with value 0xe3f0db4f2df7d0a0
sw x3, 0(x2) # store 0xe3f0db4f2df7d0a0 in memory
flw f18, 0(x2) # load 0xe3f0db4f2df7d0a0 from memory into f18
fnmsub.s f15, f5, f25, f18, dyn # perform operation
fnmsub.s f15, f5, f25, f18, rdn # perform operation
fnmsub.s f15, f5, f25, f18, rmm # perform operation
fnmsub.s f15, f5, f25, f18, rne # perform operation
fnmsub.s f15, f5, f25, f18, rtz # perform operation
fnmsub.s f15, f5, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xb68dd51d8fc2580d # load x3 with value 0xb68dd51d8fc2580d
sw x3, 0(x2) # store 0xb68dd51d8fc2580d in memory
flw f19, 0(x2) # load 0xb68dd51d8fc2580d from memory into f19
fnmsub.s f22, f30, f15, f19, dyn # perform operation
fnmsub.s f22, f30, f15, f19, rdn # perform operation
fnmsub.s f22, f30, f15, f19, rmm # perform operation
fnmsub.s f22, f30, f15, f19, rne # perform operation
fnmsub.s f22, f30, f15, f19, rtz # perform operation
fnmsub.s f22, f30, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7c8e19247231efdf # load x3 with value 0x7c8e19247231efdf
sw x3, 0(x2) # store 0x7c8e19247231efdf in memory
flw f26, 0(x2) # load 0x7c8e19247231efdf from memory into f26
fnmsub.s f7, f14, f13, f26, dyn # perform operation
fnmsub.s f7, f14, f13, f26, rdn # perform operation
fnmsub.s f7, f14, f13, f26, rmm # perform operation
fnmsub.s f7, f14, f13, f26, rne # perform operation
fnmsub.s f7, f14, f13, f26, rtz # perform operation
fnmsub.s f7, f14, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xff794a44a4c9ff1 # load x3 with value 0xff794a44a4c9ff1
sw x3, 0(x2) # store 0xff794a44a4c9ff1 in memory
flw f7, 0(x2) # load 0xff794a44a4c9ff1 from memory into f7
fnmsub.s f19, f13, f17, f7, dyn # perform operation
fnmsub.s f19, f13, f17, f7, rdn # perform operation
fnmsub.s f19, f13, f17, f7, rmm # perform operation
fnmsub.s f19, f13, f17, f7, rne # perform operation
fnmsub.s f19, f13, f17, f7, rtz # perform operation
fnmsub.s f19, f13, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x57a1a56b8bae75f2 # load x3 with value 0x57a1a56b8bae75f2
sw x3, 0(x2) # store 0x57a1a56b8bae75f2 in memory
flw f27, 0(x2) # load 0x57a1a56b8bae75f2 from memory into f27
fnmsub.s f25, f12, f8, f27, dyn # perform operation
fnmsub.s f25, f12, f8, f27, rdn # perform operation
fnmsub.s f25, f12, f8, f27, rmm # perform operation
fnmsub.s f25, f12, f8, f27, rne # perform operation
fnmsub.s f25, f12, f8, f27, rtz # perform operation
fnmsub.s f25, f12, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f12, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f12, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f12, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f12, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f12, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xe29e967c16e3f266 # load x3 with value 0xe29e967c16e3f266
sw x3, 0(x2) # store 0xe29e967c16e3f266 in memory
flw f18, 0(x2) # load 0xe29e967c16e3f266 from memory into f18
fnmsub.s f6, f5, f10, f18, dyn # perform operation
fnmsub.s f6, f5, f10, f18, rdn # perform operation
fnmsub.s f6, f5, f10, f18, rmm # perform operation
fnmsub.s f6, f5, f10, f18, rne # perform operation
fnmsub.s f6, f5, f10, f18, rtz # perform operation
fnmsub.s f6, f5, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x80f67233801405e3 # load x3 with value 0x80f67233801405e3
sw x3, 0(x2) # store 0x80f67233801405e3 in memory
flw f30, 0(x2) # load 0x80f67233801405e3 from memory into f30
fnmsub.s f8, f10, f2, f30, dyn # perform operation
fnmsub.s f8, f10, f2, f30, rdn # perform operation
fnmsub.s f8, f10, f2, f30, rmm # perform operation
fnmsub.s f8, f10, f2, f30, rne # perform operation
fnmsub.s f8, f10, f2, f30, rtz # perform operation
fnmsub.s f8, f10, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x8035902772bc6777 # load x3 with value 0x8035902772bc6777
sw x3, 0(x2) # store 0x8035902772bc6777 in memory
flw f28, 0(x2) # load 0x8035902772bc6777 from memory into f28
fnmsub.s f19, f1, f12, f28, dyn # perform operation
fnmsub.s f19, f1, f12, f28, rdn # perform operation
fnmsub.s f19, f1, f12, f28, rmm # perform operation
fnmsub.s f19, f1, f12, f28, rne # perform operation
fnmsub.s f19, f1, f12, f28, rtz # perform operation
fnmsub.s f19, f1, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x1b9b47a4ffff7e48 # load x3 with value 0x1b9b47a4ffff7e48
sw x3, 0(x2) # store 0x1b9b47a4ffff7e48 in memory
flw f21, 0(x2) # load 0x1b9b47a4ffff7e48 from memory into f21
fnmsub.s f20, f12, f8, f21, dyn # perform operation
fnmsub.s f20, f12, f8, f21, rdn # perform operation
fnmsub.s f20, f12, f8, f21, rmm # perform operation
fnmsub.s f20, f12, f8, f21, rne # perform operation
fnmsub.s f20, f12, f8, f21, rtz # perform operation
fnmsub.s f20, f12, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x623058c87f52e71b # load x3 with value 0x623058c87f52e71b
sw x3, 0(x2) # store 0x623058c87f52e71b in memory
flw f7, 0(x2) # load 0x623058c87f52e71b from memory into f7
fnmsub.s f22, f9, f10, f7, dyn # perform operation
fnmsub.s f22, f9, f10, f7, rdn # perform operation
fnmsub.s f22, f9, f10, f7, rmm # perform operation
fnmsub.s f22, f9, f10, f7, rne # perform operation
fnmsub.s f22, f9, f10, f7, rtz # perform operation
fnmsub.s f22, f9, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x300cb4f6966f2a9 # load x3 with value 0x300cb4f6966f2a9
sw x3, 0(x2) # store 0x300cb4f6966f2a9 in memory
flw f8, 0(x2) # load 0x300cb4f6966f2a9 from memory into f8
fnmsub.s f19, f16, f3, f8, dyn # perform operation
fnmsub.s f19, f16, f3, f8, rdn # perform operation
fnmsub.s f19, f16, f3, f8, rmm # perform operation
fnmsub.s f19, f16, f3, f8, rne # perform operation
fnmsub.s f19, f16, f3, f8, rtz # perform operation
fnmsub.s f19, f16, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xe4ac22e4995354b4 # load x3 with value 0xe4ac22e4995354b4
sw x3, 0(x2) # store 0xe4ac22e4995354b4 in memory
flw f24, 0(x2) # load 0xe4ac22e4995354b4 from memory into f24
fnmsub.s f6, f5, f14, f24, dyn # perform operation
fnmsub.s f6, f5, f14, f24, rdn # perform operation
fnmsub.s f6, f5, f14, f24, rmm # perform operation
fnmsub.s f6, f5, f14, f24, rne # perform operation
fnmsub.s f6, f5, f14, f24, rtz # perform operation
fnmsub.s f6, f5, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xad4e92d15d354bb # load x3 with value 0xad4e92d15d354bb
sw x3, 0(x2) # store 0xad4e92d15d354bb in memory
flw f6, 0(x2) # load 0xad4e92d15d354bb from memory into f6
fnmsub.s f15, f9, f16, f6, dyn # perform operation
fnmsub.s f15, f9, f16, f6, rdn # perform operation
fnmsub.s f15, f9, f16, f6, rmm # perform operation
fnmsub.s f15, f9, f16, f6, rne # perform operation
fnmsub.s f15, f9, f16, f6, rtz # perform operation
fnmsub.s f15, f9, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x70ae245285e84f53 # load x3 with value 0x70ae245285e84f53
sw x3, 0(x2) # store 0x70ae245285e84f53 in memory
flw f14, 0(x2) # load 0x70ae245285e84f53 from memory into f14
fnmsub.s f21, f23, f29, f14, dyn # perform operation
fnmsub.s f21, f23, f29, f14, rdn # perform operation
fnmsub.s f21, f23, f29, f14, rmm # perform operation
fnmsub.s f21, f23, f29, f14, rne # perform operation
fnmsub.s f21, f23, f29, f14, rtz # perform operation
fnmsub.s f21, f23, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xf2f1b01bbb76d907 # load x3 with value 0xf2f1b01bbb76d907
sw x3, 0(x2) # store 0xf2f1b01bbb76d907 in memory
flw f8, 0(x2) # load 0xf2f1b01bbb76d907 from memory into f8
fnmsub.s f21, f18, f11, f8, dyn # perform operation
fnmsub.s f21, f18, f11, f8, rdn # perform operation
fnmsub.s f21, f18, f11, f8, rmm # perform operation
fnmsub.s f21, f18, f11, f8, rne # perform operation
fnmsub.s f21, f18, f11, f8, rtz # perform operation
fnmsub.s f21, f18, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x73e2694e61ba9e23 # load x3 with value 0x73e2694e61ba9e23
sw x3, 0(x2) # store 0x73e2694e61ba9e23 in memory
flw f8, 0(x2) # load 0x73e2694e61ba9e23 from memory into f8
fnmsub.s f15, f31, f11, f8, dyn # perform operation
fnmsub.s f15, f31, f11, f8, rdn # perform operation
fnmsub.s f15, f31, f11, f8, rmm # perform operation
fnmsub.s f15, f31, f11, f8, rne # perform operation
fnmsub.s f15, f31, f11, f8, rtz # perform operation
fnmsub.s f15, f31, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xa159393bae0d8e4d # load x3 with value 0xa159393bae0d8e4d
sw x3, 0(x2) # store 0xa159393bae0d8e4d in memory
flw f31, 0(x2) # load 0xa159393bae0d8e4d from memory into f31
fnmsub.s f3, f12, f18, f31, dyn # perform operation
fnmsub.s f3, f12, f18, f31, rdn # perform operation
fnmsub.s f3, f12, f18, f31, rmm # perform operation
fnmsub.s f3, f12, f18, f31, rne # perform operation
fnmsub.s f3, f12, f18, f31, rtz # perform operation
fnmsub.s f3, f12, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f12, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xc974f5e35c15e390 # load x3 with value 0xc974f5e35c15e390
sw x3, 0(x2) # store 0xc974f5e35c15e390 in memory
flw f9, 0(x2) # load 0xc974f5e35c15e390 from memory into f9
fnmsub.s f13, f2, f1, f9, dyn # perform operation
fnmsub.s f13, f2, f1, f9, rdn # perform operation
fnmsub.s f13, f2, f1, f9, rmm # perform operation
fnmsub.s f13, f2, f1, f9, rne # perform operation
fnmsub.s f13, f2, f1, f9, rtz # perform operation
fnmsub.s f13, f2, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f2, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xd759ac9c752467c3 # load x3 with value 0xd759ac9c752467c3
sw x3, 0(x2) # store 0xd759ac9c752467c3 in memory
flw f6, 0(x2) # load 0xd759ac9c752467c3 from memory into f6
fnmsub.s f15, f2, f10, f6, dyn # perform operation
fnmsub.s f15, f2, f10, f6, rdn # perform operation
fnmsub.s f15, f2, f10, f6, rmm # perform operation
fnmsub.s f15, f2, f10, f6, rne # perform operation
fnmsub.s f15, f2, f10, f6, rtz # perform operation
fnmsub.s f15, f2, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xd5858a79ebea6356 # load x3 with value 0xd5858a79ebea6356
sw x3, 0(x2) # store 0xd5858a79ebea6356 in memory
flw f2, 0(x2) # load 0xd5858a79ebea6356 from memory into f2
fnmsub.s f9, f13, f5, f2, dyn # perform operation
fnmsub.s f9, f13, f5, f2, rdn # perform operation
fnmsub.s f9, f13, f5, f2, rmm # perform operation
fnmsub.s f9, f13, f5, f2, rne # perform operation
fnmsub.s f9, f13, f5, f2, rtz # perform operation
fnmsub.s f9, f13, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x507c82f42d77300e # load x3 with value 0x507c82f42d77300e
sw x3, 0(x2) # store 0x507c82f42d77300e in memory
flw f13, 0(x2) # load 0x507c82f42d77300e from memory into f13
fnmsub.s f22, f14, f9, f13, dyn # perform operation
fnmsub.s f22, f14, f9, f13, rdn # perform operation
fnmsub.s f22, f14, f9, f13, rmm # perform operation
fnmsub.s f22, f14, f9, f13, rne # perform operation
fnmsub.s f22, f14, f9, f13, rtz # perform operation
fnmsub.s f22, f14, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x2f48e28f0baec055 # load x3 with value 0x2f48e28f0baec055
sw x3, 0(x2) # store 0x2f48e28f0baec055 in memory
flw f25, 0(x2) # load 0x2f48e28f0baec055 from memory into f25
fnmsub.s f19, f9, f12, f25, dyn # perform operation
fnmsub.s f19, f9, f12, f25, rdn # perform operation
fnmsub.s f19, f9, f12, f25, rmm # perform operation
fnmsub.s f19, f9, f12, f25, rne # perform operation
fnmsub.s f19, f9, f12, f25, rtz # perform operation
fnmsub.s f19, f9, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f9, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x60a0218e660a8750 # load x3 with value 0x60a0218e660a8750
sw x3, 0(x2) # store 0x60a0218e660a8750 in memory
flw f13, 0(x2) # load 0x60a0218e660a8750 from memory into f13
fnmsub.s f26, f19, f21, f13, dyn # perform operation
fnmsub.s f26, f19, f21, f13, rdn # perform operation
fnmsub.s f26, f19, f21, f13, rmm # perform operation
fnmsub.s f26, f19, f21, f13, rne # perform operation
fnmsub.s f26, f19, f21, f13, rtz # perform operation
fnmsub.s f26, f19, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x63d7f9f7485d015f # load x3 with value 0x63d7f9f7485d015f
sw x3, 0(x2) # store 0x63d7f9f7485d015f in memory
flw f21, 0(x2) # load 0x63d7f9f7485d015f from memory into f21
fnmsub.s f23, f30, f7, f21, dyn # perform operation
fnmsub.s f23, f30, f7, f21, rdn # perform operation
fnmsub.s f23, f30, f7, f21, rmm # perform operation
fnmsub.s f23, f30, f7, f21, rne # perform operation
fnmsub.s f23, f30, f7, f21, rtz # perform operation
fnmsub.s f23, f30, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xc4a717a59a958888 # load x3 with value 0xc4a717a59a958888
sw x3, 0(x2) # store 0xc4a717a59a958888 in memory
flw f31, 0(x2) # load 0xc4a717a59a958888 from memory into f31
fnmsub.s f18, f21, f14, f31, dyn # perform operation
fnmsub.s f18, f21, f14, f31, rdn # perform operation
fnmsub.s f18, f21, f14, f31, rmm # perform operation
fnmsub.s f18, f21, f14, f31, rne # perform operation
fnmsub.s f18, f21, f14, f31, rtz # perform operation
fnmsub.s f18, f21, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xad9aada514a60dda # load x3 with value 0xad9aada514a60dda
sw x3, 0(x2) # store 0xad9aada514a60dda in memory
flw f28, 0(x2) # load 0xad9aada514a60dda from memory into f28
fnmsub.s f30, f12, f25, f28, dyn # perform operation
fnmsub.s f30, f12, f25, f28, rdn # perform operation
fnmsub.s f30, f12, f25, f28, rmm # perform operation
fnmsub.s f30, f12, f25, f28, rne # perform operation
fnmsub.s f30, f12, f25, f28, rtz # perform operation
fnmsub.s f30, f12, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xe47ab43c901a0de0 # load x3 with value 0xe47ab43c901a0de0
sw x3, 0(x2) # store 0xe47ab43c901a0de0 in memory
flw f1, 0(x2) # load 0xe47ab43c901a0de0 from memory into f1
fnmsub.s f16, f20, f21, f1, dyn # perform operation
fnmsub.s f16, f20, f21, f1, rdn # perform operation
fnmsub.s f16, f20, f21, f1, rmm # perform operation
fnmsub.s f16, f20, f21, f1, rne # perform operation
fnmsub.s f16, f20, f21, f1, rtz # perform operation
fnmsub.s f16, f20, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x18c4e39c45ede51e # load x3 with value 0x18c4e39c45ede51e
sw x3, 0(x2) # store 0x18c4e39c45ede51e in memory
flw f24, 0(x2) # load 0x18c4e39c45ede51e from memory into f24
fnmsub.s f10, f11, f23, f24, dyn # perform operation
fnmsub.s f10, f11, f23, f24, rdn # perform operation
fnmsub.s f10, f11, f23, f24, rmm # perform operation
fnmsub.s f10, f11, f23, f24, rne # perform operation
fnmsub.s f10, f11, f23, f24, rtz # perform operation
fnmsub.s f10, f11, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xde22487806b41de1 # load x3 with value 0xde22487806b41de1
sw x3, 0(x2) # store 0xde22487806b41de1 in memory
flw f9, 0(x2) # load 0xde22487806b41de1 from memory into f9
fnmsub.s f6, f27, f25, f9, dyn # perform operation
fnmsub.s f6, f27, f25, f9, rdn # perform operation
fnmsub.s f6, f27, f25, f9, rmm # perform operation
fnmsub.s f6, f27, f25, f9, rne # perform operation
fnmsub.s f6, f27, f25, f9, rtz # perform operation
fnmsub.s f6, f27, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f27, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0xb879718932517456 # load x3 with value 0xb879718932517456
sw x3, 0(x2) # store 0xb879718932517456 in memory
flw f13, 0(x2) # load 0xb879718932517456 from memory into f13
fnmsub.s f22, f5, f21, f13, dyn # perform operation
fnmsub.s f22, f5, f21, f13, rdn # perform operation
fnmsub.s f22, f5, f21, f13, rmm # perform operation
fnmsub.s f22, f5, f21, f13, rne # perform operation
fnmsub.s f22, f5, f21, f13, rtz # perform operation
fnmsub.s f22, f5, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xa4ff693d9a501880 # load x3 with value 0xa4ff693d9a501880
sw x3, 0(x2) # store 0xa4ff693d9a501880 in memory
flw f23, 0(x2) # load 0xa4ff693d9a501880 from memory into f23
fnmsub.s f31, f2, f24, f23, dyn # perform operation
fnmsub.s f31, f2, f24, f23, rdn # perform operation
fnmsub.s f31, f2, f24, f23, rmm # perform operation
fnmsub.s f31, f2, f24, f23, rne # perform operation
fnmsub.s f31, f2, f24, f23, rtz # perform operation
fnmsub.s f31, f2, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xac6c214fbc92998 # load x3 with value 0xac6c214fbc92998
sw x3, 0(x2) # store 0xac6c214fbc92998 in memory
flw f6, 0(x2) # load 0xac6c214fbc92998 from memory into f6
fnmsub.s f26, f10, f30, f6, dyn # perform operation
fnmsub.s f26, f10, f30, f6, rdn # perform operation
fnmsub.s f26, f10, f30, f6, rmm # perform operation
fnmsub.s f26, f10, f30, f6, rne # perform operation
fnmsub.s f26, f10, f30, f6, rtz # perform operation
fnmsub.s f26, f10, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f10, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xb16f9d984ba0795b # load x3 with value 0xb16f9d984ba0795b
sw x3, 0(x2) # store 0xb16f9d984ba0795b in memory
flw f13, 0(x2) # load 0xb16f9d984ba0795b from memory into f13
fnmsub.s f7, f28, f26, f13, dyn # perform operation
fnmsub.s f7, f28, f26, f13, rdn # perform operation
fnmsub.s f7, f28, f26, f13, rmm # perform operation
fnmsub.s f7, f28, f26, f13, rne # perform operation
fnmsub.s f7, f28, f26, f13, rtz # perform operation
fnmsub.s f7, f28, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xec9fea89bafc7b73 # load x3 with value 0xec9fea89bafc7b73
sw x3, 0(x2) # store 0xec9fea89bafc7b73 in memory
flw f6, 0(x2) # load 0xec9fea89bafc7b73 from memory into f6
fnmsub.s f19, f13, f31, f6, dyn # perform operation
fnmsub.s f19, f13, f31, f6, rdn # perform operation
fnmsub.s f19, f13, f31, f6, rmm # perform operation
fnmsub.s f19, f13, f31, f6, rne # perform operation
fnmsub.s f19, f13, f31, f6, rtz # perform operation
fnmsub.s f19, f13, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x5abaa4b6c68b3aeb # load x3 with value 0x5abaa4b6c68b3aeb
sw x3, 0(x2) # store 0x5abaa4b6c68b3aeb in memory
flw f16, 0(x2) # load 0x5abaa4b6c68b3aeb from memory into f16
fnmsub.s f14, f22, f27, f16, dyn # perform operation
fnmsub.s f14, f22, f27, f16, rdn # perform operation
fnmsub.s f14, f22, f27, f16, rmm # perform operation
fnmsub.s f14, f22, f27, f16, rne # perform operation
fnmsub.s f14, f22, f27, f16, rtz # perform operation
fnmsub.s f14, f22, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xff7016cf34113903 # load x3 with value 0xff7016cf34113903
sw x3, 0(x2) # store 0xff7016cf34113903 in memory
flw f28, 0(x2) # load 0xff7016cf34113903 from memory into f28
fnmsub.s f14, f24, f7, f28, dyn # perform operation
fnmsub.s f14, f24, f7, f28, rdn # perform operation
fnmsub.s f14, f24, f7, f28, rmm # perform operation
fnmsub.s f14, f24, f7, f28, rne # perform operation
fnmsub.s f14, f24, f7, f28, rtz # perform operation
fnmsub.s f14, f24, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f24, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f24, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f24, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f24, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f24, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xd12e565555410023 # load x3 with value 0xd12e565555410023
sw x3, 0(x2) # store 0xd12e565555410023 in memory
flw f29, 0(x2) # load 0xd12e565555410023 from memory into f29
fnmsub.s f27, f5, f24, f29, dyn # perform operation
fnmsub.s f27, f5, f24, f29, rdn # perform operation
fnmsub.s f27, f5, f24, f29, rmm # perform operation
fnmsub.s f27, f5, f24, f29, rne # perform operation
fnmsub.s f27, f5, f24, f29, rtz # perform operation
fnmsub.s f27, f5, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xc72d2f2fd5538531 # load x3 with value 0xc72d2f2fd5538531
sw x3, 0(x2) # store 0xc72d2f2fd5538531 in memory
flw f13, 0(x2) # load 0xc72d2f2fd5538531 from memory into f13
fnmsub.s f12, f22, f23, f13, dyn # perform operation
fnmsub.s f12, f22, f23, f13, rdn # perform operation
fnmsub.s f12, f22, f23, f13, rmm # perform operation
fnmsub.s f12, f22, f23, f13, rne # perform operation
fnmsub.s f12, f22, f23, f13, rtz # perform operation
fnmsub.s f12, f22, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x1b1f7feab5284a0a # load x3 with value 0x1b1f7feab5284a0a
sw x3, 0(x2) # store 0x1b1f7feab5284a0a in memory
flw f26, 0(x2) # load 0x1b1f7feab5284a0a from memory into f26
fnmsub.s f3, f21, f30, f26, dyn # perform operation
fnmsub.s f3, f21, f30, f26, rdn # perform operation
fnmsub.s f3, f21, f30, f26, rmm # perform operation
fnmsub.s f3, f21, f30, f26, rne # perform operation
fnmsub.s f3, f21, f30, f26, rtz # perform operation
fnmsub.s f3, f21, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xe459768e868eb9db # load x3 with value 0xe459768e868eb9db
sw x3, 0(x2) # store 0xe459768e868eb9db in memory
flw f27, 0(x2) # load 0xe459768e868eb9db from memory into f27
fnmsub.s f30, f29, f23, f27, dyn # perform operation
fnmsub.s f30, f29, f23, f27, rdn # perform operation
fnmsub.s f30, f29, f23, f27, rmm # perform operation
fnmsub.s f30, f29, f23, f27, rne # perform operation
fnmsub.s f30, f29, f23, f27, rtz # perform operation
fnmsub.s f30, f29, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f29, f23, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x540598967657f434 # load x3 with value 0x540598967657f434
sw x3, 0(x2) # store 0x540598967657f434 in memory
flw f3, 0(x2) # load 0x540598967657f434 from memory into f3
fnmsub.s f10, f13, f28, f3, dyn # perform operation
fnmsub.s f10, f13, f28, f3, rdn # perform operation
fnmsub.s f10, f13, f28, f3, rmm # perform operation
fnmsub.s f10, f13, f28, f3, rne # perform operation
fnmsub.s f10, f13, f28, f3, rtz # perform operation
fnmsub.s f10, f13, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x67f510d34d93fd # load x3 with value 0x67f510d34d93fd
sw x3, 0(x2) # store 0x67f510d34d93fd in memory
flw f27, 0(x2) # load 0x67f510d34d93fd from memory into f27
fnmsub.s f21, f11, f13, f27, dyn # perform operation
fnmsub.s f21, f11, f13, f27, rdn # perform operation
fnmsub.s f21, f11, f13, f27, rmm # perform operation
fnmsub.s f21, f11, f13, f27, rne # perform operation
fnmsub.s f21, f11, f13, f27, rtz # perform operation
fnmsub.s f21, f11, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0xc67ddef6754c1685 # load x3 with value 0xc67ddef6754c1685
sw x3, 0(x2) # store 0xc67ddef6754c1685 in memory
flw f7, 0(x2) # load 0xc67ddef6754c1685 from memory into f7
fnmsub.s f17, f31, f12, f7, dyn # perform operation
fnmsub.s f17, f31, f12, f7, rdn # perform operation
fnmsub.s f17, f31, f12, f7, rmm # perform operation
fnmsub.s f17, f31, f12, f7, rne # perform operation
fnmsub.s f17, f31, f12, f7, rtz # perform operation
fnmsub.s f17, f31, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x16d81c697ee583d8 # load x3 with value 0x16d81c697ee583d8
sw x3, 0(x2) # store 0x16d81c697ee583d8 in memory
flw f28, 0(x2) # load 0x16d81c697ee583d8 from memory into f28
fnmsub.s f16, f26, f5, f28, dyn # perform operation
fnmsub.s f16, f26, f5, f28, rdn # perform operation
fnmsub.s f16, f26, f5, f28, rmm # perform operation
fnmsub.s f16, f26, f5, f28, rne # perform operation
fnmsub.s f16, f26, f5, f28, rtz # perform operation
fnmsub.s f16, f26, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f26, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x7f2bd47d95d7c3c0 # load x3 with value 0x7f2bd47d95d7c3c0
sw x3, 0(x2) # store 0x7f2bd47d95d7c3c0 in memory
flw f11, 0(x2) # load 0x7f2bd47d95d7c3c0 from memory into f11
fnmsub.s f9, f13, f1, f11, dyn # perform operation
fnmsub.s f9, f13, f1, f11, rdn # perform operation
fnmsub.s f9, f13, f1, f11, rmm # perform operation
fnmsub.s f9, f13, f1, f11, rne # perform operation
fnmsub.s f9, f13, f1, f11, rtz # perform operation
fnmsub.s f9, f13, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x171bdadb2218593a # load x3 with value 0x171bdadb2218593a
sw x3, 0(x2) # store 0x171bdadb2218593a in memory
flw f22, 0(x2) # load 0x171bdadb2218593a from memory into f22
fnmsub.s f26, f19, f18, f22, dyn # perform operation
fnmsub.s f26, f19, f18, f22, rdn # perform operation
fnmsub.s f26, f19, f18, f22, rmm # perform operation
fnmsub.s f26, f19, f18, f22, rne # perform operation
fnmsub.s f26, f19, f18, f22, rtz # perform operation
fnmsub.s f26, f19, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xbba75fef531a3e4a # load x3 with value 0xbba75fef531a3e4a
sw x3, 0(x2) # store 0xbba75fef531a3e4a in memory
flw f19, 0(x2) # load 0xbba75fef531a3e4a from memory into f19
fnmsub.s f11, f6, f28, f19, dyn # perform operation
fnmsub.s f11, f6, f28, f19, rdn # perform operation
fnmsub.s f11, f6, f28, f19, rmm # perform operation
fnmsub.s f11, f6, f28, f19, rne # perform operation
fnmsub.s f11, f6, f28, f19, rtz # perform operation
fnmsub.s f11, f6, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xf2fb94e0da0b425c # load x3 with value 0xf2fb94e0da0b425c
sw x3, 0(x2) # store 0xf2fb94e0da0b425c in memory
flw f17, 0(x2) # load 0xf2fb94e0da0b425c from memory into f17
fnmsub.s f10, f8, f18, f17, dyn # perform operation
fnmsub.s f10, f8, f18, f17, rdn # perform operation
fnmsub.s f10, f8, f18, f17, rmm # perform operation
fnmsub.s f10, f8, f18, f17, rne # perform operation
fnmsub.s f10, f8, f18, f17, rtz # perform operation
fnmsub.s f10, f8, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f8, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x73f8ab5605fb2dc0 # load x3 with value 0x73f8ab5605fb2dc0
sw x3, 0(x2) # store 0x73f8ab5605fb2dc0 in memory
flw f27, 0(x2) # load 0x73f8ab5605fb2dc0 from memory into f27
fnmsub.s f1, f15, f29, f27, dyn # perform operation
fnmsub.s f1, f15, f29, f27, rdn # perform operation
fnmsub.s f1, f15, f29, f27, rmm # perform operation
fnmsub.s f1, f15, f29, f27, rne # perform operation
fnmsub.s f1, f15, f29, f27, rtz # perform operation
fnmsub.s f1, f15, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x56e383a149c768c4 # load x3 with value 0x56e383a149c768c4
sw x3, 0(x2) # store 0x56e383a149c768c4 in memory
flw f27, 0(x2) # load 0x56e383a149c768c4 from memory into f27
fnmsub.s f8, f17, f2, f27, dyn # perform operation
fnmsub.s f8, f17, f2, f27, rdn # perform operation
fnmsub.s f8, f17, f2, f27, rmm # perform operation
fnmsub.s f8, f17, f2, f27, rne # perform operation
fnmsub.s f8, f17, f2, f27, rtz # perform operation
fnmsub.s f8, f17, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xad63a8c58442e91b # load x3 with value 0xad63a8c58442e91b
sw x3, 0(x2) # store 0xad63a8c58442e91b in memory
flw f11, 0(x2) # load 0xad63a8c58442e91b from memory into f11
fnmsub.s f5, f7, f28, f11, dyn # perform operation
fnmsub.s f5, f7, f28, f11, rdn # perform operation
fnmsub.s f5, f7, f28, f11, rmm # perform operation
fnmsub.s f5, f7, f28, f11, rne # perform operation
fnmsub.s f5, f7, f28, f11, rtz # perform operation
fnmsub.s f5, f7, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x61489e92444360b0 # load x3 with value 0x61489e92444360b0
sw x3, 0(x2) # store 0x61489e92444360b0 in memory
flw f23, 0(x2) # load 0x61489e92444360b0 from memory into f23
fnmsub.s f13, f21, f19, f23, dyn # perform operation
fnmsub.s f13, f21, f19, f23, rdn # perform operation
fnmsub.s f13, f21, f19, f23, rmm # perform operation
fnmsub.s f13, f21, f19, f23, rne # perform operation
fnmsub.s f13, f21, f19, f23, rtz # perform operation
fnmsub.s f13, f21, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xc94281c23b872540 # load x3 with value 0xc94281c23b872540
sw x3, 0(x2) # store 0xc94281c23b872540 in memory
flw f22, 0(x2) # load 0xc94281c23b872540 from memory into f22
fnmsub.s f31, f18, f27, f22, dyn # perform operation
fnmsub.s f31, f18, f27, f22, rdn # perform operation
fnmsub.s f31, f18, f27, f22, rmm # perform operation
fnmsub.s f31, f18, f27, f22, rne # perform operation
fnmsub.s f31, f18, f27, f22, rtz # perform operation
fnmsub.s f31, f18, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x339fdb39102cd980 # load x3 with value 0x339fdb39102cd980
sw x3, 0(x2) # store 0x339fdb39102cd980 in memory
flw f17, 0(x2) # load 0x339fdb39102cd980 from memory into f17
fnmsub.s f10, f5, f20, f17, dyn # perform operation
fnmsub.s f10, f5, f20, f17, rdn # perform operation
fnmsub.s f10, f5, f20, f17, rmm # perform operation
fnmsub.s f10, f5, f20, f17, rne # perform operation
fnmsub.s f10, f5, f20, f17, rtz # perform operation
fnmsub.s f10, f5, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f5, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0xe21d7dedcc904cc0 # load x3 with value 0xe21d7dedcc904cc0
sw x3, 0(x2) # store 0xe21d7dedcc904cc0 in memory
flw f31, 0(x2) # load 0xe21d7dedcc904cc0 from memory into f31
fnmsub.s f9, f19, f15, f31, dyn # perform operation
fnmsub.s f9, f19, f15, f31, rdn # perform operation
fnmsub.s f9, f19, f15, f31, rmm # perform operation
fnmsub.s f9, f19, f15, f31, rne # perform operation
fnmsub.s f9, f19, f15, f31, rtz # perform operation
fnmsub.s f9, f19, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f19, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f19, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f19, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f19, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f19, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x6ff0ea52bbafba30 # load x3 with value 0x6ff0ea52bbafba30
sw x3, 0(x2) # store 0x6ff0ea52bbafba30 in memory
flw f29, 0(x2) # load 0x6ff0ea52bbafba30 from memory into f29
fnmsub.s f15, f27, f31, f29, dyn # perform operation
fnmsub.s f15, f27, f31, f29, rdn # perform operation
fnmsub.s f15, f27, f31, f29, rmm # perform operation
fnmsub.s f15, f27, f31, f29, rne # perform operation
fnmsub.s f15, f27, f31, f29, rtz # perform operation
fnmsub.s f15, f27, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x24fde781d02d1c53 # load x3 with value 0x24fde781d02d1c53
sw x3, 0(x2) # store 0x24fde781d02d1c53 in memory
flw f13, 0(x2) # load 0x24fde781d02d1c53 from memory into f13
fnmsub.s f12, f14, f30, f13, dyn # perform operation
fnmsub.s f12, f14, f30, f13, rdn # perform operation
fnmsub.s f12, f14, f30, f13, rmm # perform operation
fnmsub.s f12, f14, f30, f13, rne # perform operation
fnmsub.s f12, f14, f30, f13, rtz # perform operation
fnmsub.s f12, f14, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f14, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x2c0ffd2ee86e05b0 # load x3 with value 0x2c0ffd2ee86e05b0
sw x3, 0(x2) # store 0x2c0ffd2ee86e05b0 in memory
flw f3, 0(x2) # load 0x2c0ffd2ee86e05b0 from memory into f3
fnmsub.s f6, f14, f5, f3, dyn # perform operation
fnmsub.s f6, f14, f5, f3, rdn # perform operation
fnmsub.s f6, f14, f5, f3, rmm # perform operation
fnmsub.s f6, f14, f5, f3, rne # perform operation
fnmsub.s f6, f14, f5, f3, rtz # perform operation
fnmsub.s f6, f14, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x9c7a05a98300b0c7 # load x3 with value 0x9c7a05a98300b0c7
sw x3, 0(x2) # store 0x9c7a05a98300b0c7 in memory
flw f29, 0(x2) # load 0x9c7a05a98300b0c7 from memory into f29
fnmsub.s f16, f19, f12, f29, dyn # perform operation
fnmsub.s f16, f19, f12, f29, rdn # perform operation
fnmsub.s f16, f19, f12, f29, rmm # perform operation
fnmsub.s f16, f19, f12, f29, rne # perform operation
fnmsub.s f16, f19, f12, f29, rtz # perform operation
fnmsub.s f16, f19, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xa22c9dd70e44f47d # load x3 with value 0xa22c9dd70e44f47d
sw x3, 0(x2) # store 0xa22c9dd70e44f47d in memory
flw f11, 0(x2) # load 0xa22c9dd70e44f47d from memory into f11
fnmsub.s f14, f3, f18, f11, dyn # perform operation
fnmsub.s f14, f3, f18, f11, rdn # perform operation
fnmsub.s f14, f3, f18, f11, rmm # perform operation
fnmsub.s f14, f3, f18, f11, rne # perform operation
fnmsub.s f14, f3, f18, f11, rtz # perform operation
fnmsub.s f14, f3, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xca1f5b848b0679d0 # load x3 with value 0xca1f5b848b0679d0
sw x3, 0(x2) # store 0xca1f5b848b0679d0 in memory
flw f19, 0(x2) # load 0xca1f5b848b0679d0 from memory into f19
fnmsub.s f16, f15, f29, f19, dyn # perform operation
fnmsub.s f16, f15, f29, f19, rdn # perform operation
fnmsub.s f16, f15, f29, f19, rmm # perform operation
fnmsub.s f16, f15, f29, f19, rne # perform operation
fnmsub.s f16, f15, f29, f19, rtz # perform operation
fnmsub.s f16, f15, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x6f7b9c636514d4e2 # load x3 with value 0x6f7b9c636514d4e2
sw x3, 0(x2) # store 0x6f7b9c636514d4e2 in memory
flw f3, 0(x2) # load 0x6f7b9c636514d4e2 from memory into f3
fnmsub.s f21, f10, f25, f3, dyn # perform operation
fnmsub.s f21, f10, f25, f3, rdn # perform operation
fnmsub.s f21, f10, f25, f3, rmm # perform operation
fnmsub.s f21, f10, f25, f3, rne # perform operation
fnmsub.s f21, f10, f25, f3, rtz # perform operation
fnmsub.s f21, f10, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f10, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f10, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f10, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f10, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f10, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x71fff578cb3683e3 # load x3 with value 0x71fff578cb3683e3
sw x3, 0(x2) # store 0x71fff578cb3683e3 in memory
flw f21, 0(x2) # load 0x71fff578cb3683e3 from memory into f21
fnmsub.s f28, f6, f26, f21, dyn # perform operation
fnmsub.s f28, f6, f26, f21, rdn # perform operation
fnmsub.s f28, f6, f26, f21, rmm # perform operation
fnmsub.s f28, f6, f26, f21, rne # perform operation
fnmsub.s f28, f6, f26, f21, rtz # perform operation
fnmsub.s f28, f6, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f6, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xa80d9aace2794e09 # load x3 with value 0xa80d9aace2794e09
sw x3, 0(x2) # store 0xa80d9aace2794e09 in memory
flw f3, 0(x2) # load 0xa80d9aace2794e09 from memory into f3
fnmsub.s f29, f24, f23, f3, dyn # perform operation
fnmsub.s f29, f24, f23, f3, rdn # perform operation
fnmsub.s f29, f24, f23, f3, rmm # perform operation
fnmsub.s f29, f24, f23, f3, rne # perform operation
fnmsub.s f29, f24, f23, f3, rtz # perform operation
fnmsub.s f29, f24, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x7bdabb6fce76c982 # load x3 with value 0x7bdabb6fce76c982
sw x3, 0(x2) # store 0x7bdabb6fce76c982 in memory
flw f30, 0(x2) # load 0x7bdabb6fce76c982 from memory into f30
fnmsub.s f18, f14, f6, f30, dyn # perform operation
fnmsub.s f18, f14, f6, f30, rdn # perform operation
fnmsub.s f18, f14, f6, f30, rmm # perform operation
fnmsub.s f18, f14, f6, f30, rne # perform operation
fnmsub.s f18, f14, f6, f30, rtz # perform operation
fnmsub.s f18, f14, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f14, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x6c458e84c5b4ac8f # load x3 with value 0x6c458e84c5b4ac8f
sw x3, 0(x2) # store 0x6c458e84c5b4ac8f in memory
flw f15, 0(x2) # load 0x6c458e84c5b4ac8f from memory into f15
fnmsub.s f6, f19, f8, f15, dyn # perform operation
fnmsub.s f6, f19, f8, f15, rdn # perform operation
fnmsub.s f6, f19, f8, f15, rmm # perform operation
fnmsub.s f6, f19, f8, f15, rne # perform operation
fnmsub.s f6, f19, f8, f15, rtz # perform operation
fnmsub.s f6, f19, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f19, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x5669fd5ebe824938 # load x3 with value 0x5669fd5ebe824938
sw x3, 0(x2) # store 0x5669fd5ebe824938 in memory
flw f8, 0(x2) # load 0x5669fd5ebe824938 from memory into f8
fnmsub.s f24, f28, f23, f8, dyn # perform operation
fnmsub.s f24, f28, f23, f8, rdn # perform operation
fnmsub.s f24, f28, f23, f8, rmm # perform operation
fnmsub.s f24, f28, f23, f8, rne # perform operation
fnmsub.s f24, f28, f23, f8, rtz # perform operation
fnmsub.s f24, f28, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f28, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x2c39842f9cca2cc2 # load x3 with value 0x2c39842f9cca2cc2
sw x3, 0(x2) # store 0x2c39842f9cca2cc2 in memory
flw f25, 0(x2) # load 0x2c39842f9cca2cc2 from memory into f25
fnmsub.s f20, f3, f14, f25, dyn # perform operation
fnmsub.s f20, f3, f14, f25, rdn # perform operation
fnmsub.s f20, f3, f14, f25, rmm # perform operation
fnmsub.s f20, f3, f14, f25, rne # perform operation
fnmsub.s f20, f3, f14, f25, rtz # perform operation
fnmsub.s f20, f3, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x6079dee09e97dd14 # load x3 with value 0x6079dee09e97dd14
sw x3, 0(x2) # store 0x6079dee09e97dd14 in memory
flw f27, 0(x2) # load 0x6079dee09e97dd14 from memory into f27
fnmsub.s f8, f26, f23, f27, dyn # perform operation
fnmsub.s f8, f26, f23, f27, rdn # perform operation
fnmsub.s f8, f26, f23, f27, rmm # perform operation
fnmsub.s f8, f26, f23, f27, rne # perform operation
fnmsub.s f8, f26, f23, f27, rtz # perform operation
fnmsub.s f8, f26, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f23, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x33fe779afb714595 # load x3 with value 0x33fe779afb714595
sw x3, 0(x2) # store 0x33fe779afb714595 in memory
flw f24, 0(x2) # load 0x33fe779afb714595 from memory into f24
fnmsub.s f20, f2, f8, f24, dyn # perform operation
fnmsub.s f20, f2, f8, f24, rdn # perform operation
fnmsub.s f20, f2, f8, f24, rmm # perform operation
fnmsub.s f20, f2, f8, f24, rne # perform operation
fnmsub.s f20, f2, f8, f24, rtz # perform operation
fnmsub.s f20, f2, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x1a502d5ceda464d8 # load x3 with value 0x1a502d5ceda464d8
sw x3, 0(x2) # store 0x1a502d5ceda464d8 in memory
flw f7, 0(x2) # load 0x1a502d5ceda464d8 from memory into f7
fnmsub.s f20, f12, f24, f7, dyn # perform operation
fnmsub.s f20, f12, f24, f7, rdn # perform operation
fnmsub.s f20, f12, f24, f7, rmm # perform operation
fnmsub.s f20, f12, f24, f7, rne # perform operation
fnmsub.s f20, f12, f24, f7, rtz # perform operation
fnmsub.s f20, f12, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x93e0352ca0122b7f # load x3 with value 0x93e0352ca0122b7f
sw x3, 0(x2) # store 0x93e0352ca0122b7f in memory
flw f6, 0(x2) # load 0x93e0352ca0122b7f from memory into f6
fnmsub.s f10, f17, f31, f6, dyn # perform operation
fnmsub.s f10, f17, f31, f6, rdn # perform operation
fnmsub.s f10, f17, f31, f6, rmm # perform operation
fnmsub.s f10, f17, f31, f6, rne # perform operation
fnmsub.s f10, f17, f31, f6, rtz # perform operation
fnmsub.s f10, f17, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x8b383e7dcfee5894 # load x3 with value 0x8b383e7dcfee5894
sw x3, 0(x2) # store 0x8b383e7dcfee5894 in memory
flw f7, 0(x2) # load 0x8b383e7dcfee5894 from memory into f7
fnmsub.s f27, f6, f24, f7, dyn # perform operation
fnmsub.s f27, f6, f24, f7, rdn # perform operation
fnmsub.s f27, f6, f24, f7, rmm # perform operation
fnmsub.s f27, f6, f24, f7, rne # perform operation
fnmsub.s f27, f6, f24, f7, rtz # perform operation
fnmsub.s f27, f6, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x63f354de71c64a9d # load x3 with value 0x63f354de71c64a9d
sw x3, 0(x2) # store 0x63f354de71c64a9d in memory
flw f12, 0(x2) # load 0x63f354de71c64a9d from memory into f12
fnmsub.s f19, f27, f21, f12, dyn # perform operation
fnmsub.s f19, f27, f21, f12, rdn # perform operation
fnmsub.s f19, f27, f21, f12, rmm # perform operation
fnmsub.s f19, f27, f21, f12, rne # perform operation
fnmsub.s f19, f27, f21, f12, rtz # perform operation
fnmsub.s f19, f27, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x6c80044553048bb5 # load x3 with value 0x6c80044553048bb5
sw x3, 0(x2) # store 0x6c80044553048bb5 in memory
flw f15, 0(x2) # load 0x6c80044553048bb5 from memory into f15
fnmsub.s f24, f13, f7, f15, dyn # perform operation
fnmsub.s f24, f13, f7, f15, rdn # perform operation
fnmsub.s f24, f13, f7, f15, rmm # perform operation
fnmsub.s f24, f13, f7, f15, rne # perform operation
fnmsub.s f24, f13, f7, f15, rtz # perform operation
fnmsub.s f24, f13, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x35a65d8ce47299fb # load x3 with value 0x35a65d8ce47299fb
sw x3, 0(x2) # store 0x35a65d8ce47299fb in memory
flw f16, 0(x2) # load 0x35a65d8ce47299fb from memory into f16
fnmsub.s f21, f29, f1, f16, dyn # perform operation
fnmsub.s f21, f29, f1, f16, rdn # perform operation
fnmsub.s f21, f29, f1, f16, rmm # perform operation
fnmsub.s f21, f29, f1, f16, rne # perform operation
fnmsub.s f21, f29, f1, f16, rtz # perform operation
fnmsub.s f21, f29, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f29, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x2013e42d8b0223e1 # load x3 with value 0x2013e42d8b0223e1
sw x3, 0(x2) # store 0x2013e42d8b0223e1 in memory
flw f3, 0(x2) # load 0x2013e42d8b0223e1 from memory into f3
fnmsub.s f10, f24, f27, f3, dyn # perform operation
fnmsub.s f10, f24, f27, f3, rdn # perform operation
fnmsub.s f10, f24, f27, f3, rmm # perform operation
fnmsub.s f10, f24, f27, f3, rne # perform operation
fnmsub.s f10, f24, f27, f3, rtz # perform operation
fnmsub.s f10, f24, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xe0d1693e3c8901d3 # load x3 with value 0xe0d1693e3c8901d3
sw x3, 0(x2) # store 0xe0d1693e3c8901d3 in memory
flw f13, 0(x2) # load 0xe0d1693e3c8901d3 from memory into f13
fnmsub.s f23, f31, f28, f13, dyn # perform operation
fnmsub.s f23, f31, f28, f13, rdn # perform operation
fnmsub.s f23, f31, f28, f13, rmm # perform operation
fnmsub.s f23, f31, f28, f13, rne # perform operation
fnmsub.s f23, f31, f28, f13, rtz # perform operation
fnmsub.s f23, f31, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f31, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x259e62d631248dc0 # load x3 with value 0x259e62d631248dc0
sw x3, 0(x2) # store 0x259e62d631248dc0 in memory
flw f16, 0(x2) # load 0x259e62d631248dc0 from memory into f16
fnmsub.s f26, f17, f18, f16, dyn # perform operation
fnmsub.s f26, f17, f18, f16, rdn # perform operation
fnmsub.s f26, f17, f18, f16, rmm # perform operation
fnmsub.s f26, f17, f18, f16, rne # perform operation
fnmsub.s f26, f17, f18, f16, rtz # perform operation
fnmsub.s f26, f17, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x79f4e2ad15a2bc22 # load x3 with value 0x79f4e2ad15a2bc22
sw x3, 0(x2) # store 0x79f4e2ad15a2bc22 in memory
flw f20, 0(x2) # load 0x79f4e2ad15a2bc22 from memory into f20
fnmsub.s f14, f6, f8, f20, dyn # perform operation
fnmsub.s f14, f6, f8, f20, rdn # perform operation
fnmsub.s f14, f6, f8, f20, rmm # perform operation
fnmsub.s f14, f6, f8, f20, rne # perform operation
fnmsub.s f14, f6, f8, f20, rtz # perform operation
fnmsub.s f14, f6, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x22b1043d90bca128 # load x3 with value 0x22b1043d90bca128
sw x3, 0(x2) # store 0x22b1043d90bca128 in memory
flw f11, 0(x2) # load 0x22b1043d90bca128 from memory into f11
fnmsub.s f13, f22, f16, f11, dyn # perform operation
fnmsub.s f13, f22, f16, f11, rdn # perform operation
fnmsub.s f13, f22, f16, f11, rmm # perform operation
fnmsub.s f13, f22, f16, f11, rne # perform operation
fnmsub.s f13, f22, f16, f11, rtz # perform operation
fnmsub.s f13, f22, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x7a071497b14dc007 # load x3 with value 0x7a071497b14dc007
sw x3, 0(x2) # store 0x7a071497b14dc007 in memory
flw f23, 0(x2) # load 0x7a071497b14dc007 from memory into f23
fnmsub.s f16, f27, f5, f23, dyn # perform operation
fnmsub.s f16, f27, f5, f23, rdn # perform operation
fnmsub.s f16, f27, f5, f23, rmm # perform operation
fnmsub.s f16, f27, f5, f23, rne # perform operation
fnmsub.s f16, f27, f5, f23, rtz # perform operation
fnmsub.s f16, f27, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x6fa46a6bb369619 # load x3 with value 0x6fa46a6bb369619
sw x3, 0(x2) # store 0x6fa46a6bb369619 in memory
flw f19, 0(x2) # load 0x6fa46a6bb369619 from memory into f19
fnmsub.s f1, f27, f23, f19, dyn # perform operation
fnmsub.s f1, f27, f23, f19, rdn # perform operation
fnmsub.s f1, f27, f23, f19, rmm # perform operation
fnmsub.s f1, f27, f23, f19, rne # perform operation
fnmsub.s f1, f27, f23, f19, rtz # perform operation
fnmsub.s f1, f27, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xea81c8434c07bb32 # load x3 with value 0xea81c8434c07bb32
sw x3, 0(x2) # store 0xea81c8434c07bb32 in memory
flw f29, 0(x2) # load 0xea81c8434c07bb32 from memory into f29
fnmsub.s f17, f19, f16, f29, dyn # perform operation
fnmsub.s f17, f19, f16, f29, rdn # perform operation
fnmsub.s f17, f19, f16, f29, rmm # perform operation
fnmsub.s f17, f19, f16, f29, rne # perform operation
fnmsub.s f17, f19, f16, f29, rtz # perform operation
fnmsub.s f17, f19, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x2b7a3e9c621772bf # load x3 with value 0x2b7a3e9c621772bf
sw x3, 0(x2) # store 0x2b7a3e9c621772bf in memory
flw f2, 0(x2) # load 0x2b7a3e9c621772bf from memory into f2
fnmsub.s f3, f5, f15, f2, dyn # perform operation
fnmsub.s f3, f5, f15, f2, rdn # perform operation
fnmsub.s f3, f5, f15, f2, rmm # perform operation
fnmsub.s f3, f5, f15, f2, rne # perform operation
fnmsub.s f3, f5, f15, f2, rtz # perform operation
fnmsub.s f3, f5, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x1b058b3443799462 # load x3 with value 0x1b058b3443799462
sw x3, 0(x2) # store 0x1b058b3443799462 in memory
flw f28, 0(x2) # load 0x1b058b3443799462 from memory into f28
fnmsub.s f16, f7, f25, f28, dyn # perform operation
fnmsub.s f16, f7, f25, f28, rdn # perform operation
fnmsub.s f16, f7, f25, f28, rmm # perform operation
fnmsub.s f16, f7, f25, f28, rne # perform operation
fnmsub.s f16, f7, f25, f28, rtz # perform operation
fnmsub.s f16, f7, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f7, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x40f7371bb5c8934b # load x3 with value 0x40f7371bb5c8934b
sw x3, 0(x2) # store 0x40f7371bb5c8934b in memory
flw f15, 0(x2) # load 0x40f7371bb5c8934b from memory into f15
fnmsub.s f26, f8, f28, f15, dyn # perform operation
fnmsub.s f26, f8, f28, f15, rdn # perform operation
fnmsub.s f26, f8, f28, f15, rmm # perform operation
fnmsub.s f26, f8, f28, f15, rne # perform operation
fnmsub.s f26, f8, f28, f15, rtz # perform operation
fnmsub.s f26, f8, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x15a749331cb0ddb9 # load x3 with value 0x15a749331cb0ddb9
sw x3, 0(x2) # store 0x15a749331cb0ddb9 in memory
flw f9, 0(x2) # load 0x15a749331cb0ddb9 from memory into f9
fnmsub.s f15, f14, f21, f9, dyn # perform operation
fnmsub.s f15, f14, f21, f9, rdn # perform operation
fnmsub.s f15, f14, f21, f9, rmm # perform operation
fnmsub.s f15, f14, f21, f9, rne # perform operation
fnmsub.s f15, f14, f21, f9, rtz # perform operation
fnmsub.s f15, f14, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x8a16ef2c27a9d0be # load x3 with value 0x8a16ef2c27a9d0be
sw x3, 0(x2) # store 0x8a16ef2c27a9d0be in memory
flw f14, 0(x2) # load 0x8a16ef2c27a9d0be from memory into f14
fnmsub.s f12, f6, f17, f14, dyn # perform operation
fnmsub.s f12, f6, f17, f14, rdn # perform operation
fnmsub.s f12, f6, f17, f14, rmm # perform operation
fnmsub.s f12, f6, f17, f14, rne # perform operation
fnmsub.s f12, f6, f17, f14, rtz # perform operation
fnmsub.s f12, f6, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f6, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0xdc4042e131b362b2 # load x3 with value 0xdc4042e131b362b2
sw x3, 0(x2) # store 0xdc4042e131b362b2 in memory
flw f21, 0(x2) # load 0xdc4042e131b362b2 from memory into f21
fnmsub.s f22, f3, f9, f21, dyn # perform operation
fnmsub.s f22, f3, f9, f21, rdn # perform operation
fnmsub.s f22, f3, f9, f21, rmm # perform operation
fnmsub.s f22, f3, f9, f21, rne # perform operation
fnmsub.s f22, f3, f9, f21, rtz # perform operation
fnmsub.s f22, f3, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x5bb66498db6ca433 # load x3 with value 0x5bb66498db6ca433
sw x3, 0(x2) # store 0x5bb66498db6ca433 in memory
flw f15, 0(x2) # load 0x5bb66498db6ca433 from memory into f15
fnmsub.s f28, f21, f17, f15, dyn # perform operation
fnmsub.s f28, f21, f17, f15, rdn # perform operation
fnmsub.s f28, f21, f17, f15, rmm # perform operation
fnmsub.s f28, f21, f17, f15, rne # perform operation
fnmsub.s f28, f21, f17, f15, rtz # perform operation
fnmsub.s f28, f21, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f21, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f21, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xdf962613dd2cbf7f # load x3 with value 0xdf962613dd2cbf7f
sw x3, 0(x2) # store 0xdf962613dd2cbf7f in memory
flw f18, 0(x2) # load 0xdf962613dd2cbf7f from memory into f18
fnmsub.s f12, f24, f20, f18, dyn # perform operation
fnmsub.s f12, f24, f20, f18, rdn # perform operation
fnmsub.s f12, f24, f20, f18, rmm # perform operation
fnmsub.s f12, f24, f20, f18, rne # perform operation
fnmsub.s f12, f24, f20, f18, rtz # perform operation
fnmsub.s f12, f24, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xe45652b027c111b4 # load x3 with value 0xe45652b027c111b4
sw x3, 0(x2) # store 0xe45652b027c111b4 in memory
flw f20, 0(x2) # load 0xe45652b027c111b4 from memory into f20
fnmsub.s f6, f29, f27, f20, dyn # perform operation
fnmsub.s f6, f29, f27, f20, rdn # perform operation
fnmsub.s f6, f29, f27, f20, rmm # perform operation
fnmsub.s f6, f29, f27, f20, rne # perform operation
fnmsub.s f6, f29, f27, f20, rtz # perform operation
fnmsub.s f6, f29, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x11544cf618c5fa5d # load x3 with value 0x11544cf618c5fa5d
sw x3, 0(x2) # store 0x11544cf618c5fa5d in memory
flw f9, 0(x2) # load 0x11544cf618c5fa5d from memory into f9
fnmsub.s f14, f3, f18, f9, dyn # perform operation
fnmsub.s f14, f3, f18, f9, rdn # perform operation
fnmsub.s f14, f3, f18, f9, rmm # perform operation
fnmsub.s f14, f3, f18, f9, rne # perform operation
fnmsub.s f14, f3, f18, f9, rtz # perform operation
fnmsub.s f14, f3, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0xf05b16b9a8351d9b # load x3 with value 0xf05b16b9a8351d9b
sw x3, 0(x2) # store 0xf05b16b9a8351d9b in memory
flw f2, 0(x2) # load 0xf05b16b9a8351d9b from memory into f2
fnmsub.s f26, f30, f14, f2, dyn # perform operation
fnmsub.s f26, f30, f14, f2, rdn # perform operation
fnmsub.s f26, f30, f14, f2, rmm # perform operation
fnmsub.s f26, f30, f14, f2, rne # perform operation
fnmsub.s f26, f30, f14, f2, rtz # perform operation
fnmsub.s f26, f30, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x9260f66530009f02 # load x3 with value 0x9260f66530009f02
sw x3, 0(x2) # store 0x9260f66530009f02 in memory
flw f21, 0(x2) # load 0x9260f66530009f02 from memory into f21
fnmsub.s f20, f12, f16, f21, dyn # perform operation
fnmsub.s f20, f12, f16, f21, rdn # perform operation
fnmsub.s f20, f12, f16, f21, rmm # perform operation
fnmsub.s f20, f12, f16, f21, rne # perform operation
fnmsub.s f20, f12, f16, f21, rtz # perform operation
fnmsub.s f20, f12, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x1e3a03c4ffbc7fd9 # load x3 with value 0x1e3a03c4ffbc7fd9
sw x3, 0(x2) # store 0x1e3a03c4ffbc7fd9 in memory
flw f17, 0(x2) # load 0x1e3a03c4ffbc7fd9 from memory into f17
fnmsub.s f14, f11, f24, f17, dyn # perform operation
fnmsub.s f14, f11, f24, f17, rdn # perform operation
fnmsub.s f14, f11, f24, f17, rmm # perform operation
fnmsub.s f14, f11, f24, f17, rne # perform operation
fnmsub.s f14, f11, f24, f17, rtz # perform operation
fnmsub.s f14, f11, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f11, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f11, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f11, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f11, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f11, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x2b9dfd52532da979 # load x3 with value 0x2b9dfd52532da979
sw x3, 0(x2) # store 0x2b9dfd52532da979 in memory
flw f28, 0(x2) # load 0x2b9dfd52532da979 from memory into f28
fnmsub.s f14, f17, f23, f28, dyn # perform operation
fnmsub.s f14, f17, f23, f28, rdn # perform operation
fnmsub.s f14, f17, f23, f28, rmm # perform operation
fnmsub.s f14, f17, f23, f28, rne # perform operation
fnmsub.s f14, f17, f23, f28, rtz # perform operation
fnmsub.s f14, f17, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x54e9b1ad73fabd29 # load x3 with value 0x54e9b1ad73fabd29
sw x3, 0(x2) # store 0x54e9b1ad73fabd29 in memory
flw f3, 0(x2) # load 0x54e9b1ad73fabd29 from memory into f3
fnmsub.s f24, f21, f28, f3, dyn # perform operation
fnmsub.s f24, f21, f28, f3, rdn # perform operation
fnmsub.s f24, f21, f28, f3, rmm # perform operation
fnmsub.s f24, f21, f28, f3, rne # perform operation
fnmsub.s f24, f21, f28, f3, rtz # perform operation
fnmsub.s f24, f21, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x263bcab07b8bc905 # load x3 with value 0x263bcab07b8bc905
sw x3, 0(x2) # store 0x263bcab07b8bc905 in memory
flw f30, 0(x2) # load 0x263bcab07b8bc905 from memory into f30
fnmsub.s f6, f21, f8, f30, dyn # perform operation
fnmsub.s f6, f21, f8, f30, rdn # perform operation
fnmsub.s f6, f21, f8, f30, rmm # perform operation
fnmsub.s f6, f21, f8, f30, rne # perform operation
fnmsub.s f6, f21, f8, f30, rtz # perform operation
fnmsub.s f6, f21, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x9433720a7aa1a584 # load x3 with value 0x9433720a7aa1a584
sw x3, 0(x2) # store 0x9433720a7aa1a584 in memory
flw f5, 0(x2) # load 0x9433720a7aa1a584 from memory into f5
fnmsub.s f27, f3, f9, f5, dyn # perform operation
fnmsub.s f27, f3, f9, f5, rdn # perform operation
fnmsub.s f27, f3, f9, f5, rmm # perform operation
fnmsub.s f27, f3, f9, f5, rne # perform operation
fnmsub.s f27, f3, f9, f5, rtz # perform operation
fnmsub.s f27, f3, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0xfd2414524f1baf28 # load x3 with value 0xfd2414524f1baf28
sw x3, 0(x2) # store 0xfd2414524f1baf28 in memory
flw f11, 0(x2) # load 0xfd2414524f1baf28 from memory into f11
fnmsub.s f5, f22, f26, f11, dyn # perform operation
fnmsub.s f5, f22, f26, f11, rdn # perform operation
fnmsub.s f5, f22, f26, f11, rmm # perform operation
fnmsub.s f5, f22, f26, f11, rne # perform operation
fnmsub.s f5, f22, f26, f11, rtz # perform operation
fnmsub.s f5, f22, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x767200969d1c1d6b # load x3 with value 0x767200969d1c1d6b
sw x3, 0(x2) # store 0x767200969d1c1d6b in memory
flw f11, 0(x2) # load 0x767200969d1c1d6b from memory into f11
fnmsub.s f14, f23, f29, f11, dyn # perform operation
fnmsub.s f14, f23, f29, f11, rdn # perform operation
fnmsub.s f14, f23, f29, f11, rmm # perform operation
fnmsub.s f14, f23, f29, f11, rne # perform operation
fnmsub.s f14, f23, f29, f11, rtz # perform operation
fnmsub.s f14, f23, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x9fb47e137fe1cc85 # load x3 with value 0x9fb47e137fe1cc85
sw x3, 0(x2) # store 0x9fb47e137fe1cc85 in memory
flw f22, 0(x2) # load 0x9fb47e137fe1cc85 from memory into f22
fnmsub.s f25, f15, f6, f22, dyn # perform operation
fnmsub.s f25, f15, f6, f22, rdn # perform operation
fnmsub.s f25, f15, f6, f22, rmm # perform operation
fnmsub.s f25, f15, f6, f22, rne # perform operation
fnmsub.s f25, f15, f6, f22, rtz # perform operation
fnmsub.s f25, f15, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x2352e9d1500c960f # load x3 with value 0x2352e9d1500c960f
sw x3, 0(x2) # store 0x2352e9d1500c960f in memory
flw f15, 0(x2) # load 0x2352e9d1500c960f from memory into f15
fnmsub.s f20, f31, f25, f15, dyn # perform operation
fnmsub.s f20, f31, f25, f15, rdn # perform operation
fnmsub.s f20, f31, f25, f15, rmm # perform operation
fnmsub.s f20, f31, f25, f15, rne # perform operation
fnmsub.s f20, f31, f25, f15, rtz # perform operation
fnmsub.s f20, f31, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x1d66d1559f523c61 # load x3 with value 0x1d66d1559f523c61
sw x3, 0(x2) # store 0x1d66d1559f523c61 in memory
flw f11, 0(x2) # load 0x1d66d1559f523c61 from memory into f11
fnmsub.s f21, f27, f26, f11, dyn # perform operation
fnmsub.s f21, f27, f26, f11, rdn # perform operation
fnmsub.s f21, f27, f26, f11, rmm # perform operation
fnmsub.s f21, f27, f26, f11, rne # perform operation
fnmsub.s f21, f27, f26, f11, rtz # perform operation
fnmsub.s f21, f27, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0xf14d05c154256ad2 # load x3 with value 0xf14d05c154256ad2
sw x3, 0(x2) # store 0xf14d05c154256ad2 in memory
flw f11, 0(x2) # load 0xf14d05c154256ad2 from memory into f11
fnmsub.s f27, f14, f5, f11, dyn # perform operation
fnmsub.s f27, f14, f5, f11, rdn # perform operation
fnmsub.s f27, f14, f5, f11, rmm # perform operation
fnmsub.s f27, f14, f5, f11, rne # perform operation
fnmsub.s f27, f14, f5, f11, rtz # perform operation
fnmsub.s f27, f14, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f14, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xaeb32df96a7dec66 # load x3 with value 0xaeb32df96a7dec66
sw x3, 0(x2) # store 0xaeb32df96a7dec66 in memory
flw f24, 0(x2) # load 0xaeb32df96a7dec66 from memory into f24
fnmsub.s f18, f15, f2, f24, dyn # perform operation
fnmsub.s f18, f15, f2, f24, rdn # perform operation
fnmsub.s f18, f15, f2, f24, rmm # perform operation
fnmsub.s f18, f15, f2, f24, rne # perform operation
fnmsub.s f18, f15, f2, f24, rtz # perform operation
fnmsub.s f18, f15, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x9b7676968fd71398 # load x3 with value 0x9b7676968fd71398
sw x3, 0(x2) # store 0x9b7676968fd71398 in memory
flw f20, 0(x2) # load 0x9b7676968fd71398 from memory into f20
fnmsub.s f10, f5, f24, f20, dyn # perform operation
fnmsub.s f10, f5, f24, f20, rdn # perform operation
fnmsub.s f10, f5, f24, f20, rmm # perform operation
fnmsub.s f10, f5, f24, f20, rne # perform operation
fnmsub.s f10, f5, f24, f20, rtz # perform operation
fnmsub.s f10, f5, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f5, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x22b01349244e1b14 # load x3 with value 0x22b01349244e1b14
sw x3, 0(x2) # store 0x22b01349244e1b14 in memory
flw f16, 0(x2) # load 0x22b01349244e1b14 from memory into f16
fnmsub.s f27, f24, f28, f16, dyn # perform operation
fnmsub.s f27, f24, f28, f16, rdn # perform operation
fnmsub.s f27, f24, f28, f16, rmm # perform operation
fnmsub.s f27, f24, f28, f16, rne # perform operation
fnmsub.s f27, f24, f28, f16, rtz # perform operation
fnmsub.s f27, f24, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x5940e2131f2d53ac # load x3 with value 0x5940e2131f2d53ac
sw x3, 0(x2) # store 0x5940e2131f2d53ac in memory
flw f3, 0(x2) # load 0x5940e2131f2d53ac from memory into f3
fnmsub.s f14, f11, f21, f3, dyn # perform operation
fnmsub.s f14, f11, f21, f3, rdn # perform operation
fnmsub.s f14, f11, f21, f3, rmm # perform operation
fnmsub.s f14, f11, f21, f3, rne # perform operation
fnmsub.s f14, f11, f21, f3, rtz # perform operation
fnmsub.s f14, f11, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f11, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x324ae777d22c065e # load x3 with value 0x324ae777d22c065e
sw x3, 0(x2) # store 0x324ae777d22c065e in memory
flw f21, 0(x2) # load 0x324ae777d22c065e from memory into f21
fnmsub.s f24, f11, f1, f21, dyn # perform operation
fnmsub.s f24, f11, f1, f21, rdn # perform operation
fnmsub.s f24, f11, f1, f21, rmm # perform operation
fnmsub.s f24, f11, f1, f21, rne # perform operation
fnmsub.s f24, f11, f1, f21, rtz # perform operation
fnmsub.s f24, f11, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x503b06439e908767 # load x3 with value 0x503b06439e908767
sw x3, 0(x2) # store 0x503b06439e908767 in memory
flw f10, 0(x2) # load 0x503b06439e908767 from memory into f10
fnmsub.s f26, f23, f22, f10, dyn # perform operation
fnmsub.s f26, f23, f22, f10, rdn # perform operation
fnmsub.s f26, f23, f22, f10, rmm # perform operation
fnmsub.s f26, f23, f22, f10, rne # perform operation
fnmsub.s f26, f23, f22, f10, rtz # perform operation
fnmsub.s f26, f23, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xb18603413b1c5e55 # load x3 with value 0xb18603413b1c5e55
sw x3, 0(x2) # store 0xb18603413b1c5e55 in memory
flw f10, 0(x2) # load 0xb18603413b1c5e55 from memory into f10
fnmsub.s f2, f19, f12, f10, dyn # perform operation
fnmsub.s f2, f19, f12, f10, rdn # perform operation
fnmsub.s f2, f19, f12, f10, rmm # perform operation
fnmsub.s f2, f19, f12, f10, rne # perform operation
fnmsub.s f2, f19, f12, f10, rtz # perform operation
fnmsub.s f2, f19, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x5b4dda4fea959814 # load x3 with value 0x5b4dda4fea959814
sw x3, 0(x2) # store 0x5b4dda4fea959814 in memory
flw f11, 0(x2) # load 0x5b4dda4fea959814 from memory into f11
fnmsub.s f26, f28, f20, f11, dyn # perform operation
fnmsub.s f26, f28, f20, f11, rdn # perform operation
fnmsub.s f26, f28, f20, f11, rmm # perform operation
fnmsub.s f26, f28, f20, f11, rne # perform operation
fnmsub.s f26, f28, f20, f11, rtz # perform operation
fnmsub.s f26, f28, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x645431e7af9598ac # load x3 with value 0x645431e7af9598ac
sw x3, 0(x2) # store 0x645431e7af9598ac in memory
flw f12, 0(x2) # load 0x645431e7af9598ac from memory into f12
fnmsub.s f18, f25, f31, f12, dyn # perform operation
fnmsub.s f18, f25, f31, f12, rdn # perform operation
fnmsub.s f18, f25, f31, f12, rmm # perform operation
fnmsub.s f18, f25, f31, f12, rne # perform operation
fnmsub.s f18, f25, f31, f12, rtz # perform operation
fnmsub.s f18, f25, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xae7de45e6a0dc14b # load x3 with value 0xae7de45e6a0dc14b
sw x3, 0(x2) # store 0xae7de45e6a0dc14b in memory
flw f14, 0(x2) # load 0xae7de45e6a0dc14b from memory into f14
fnmsub.s f22, f21, f11, f14, dyn # perform operation
fnmsub.s f22, f21, f11, f14, rdn # perform operation
fnmsub.s f22, f21, f11, f14, rmm # perform operation
fnmsub.s f22, f21, f11, f14, rne # perform operation
fnmsub.s f22, f21, f11, f14, rtz # perform operation
fnmsub.s f22, f21, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x24bf4036cfb4babf # load x3 with value 0x24bf4036cfb4babf
sw x3, 0(x2) # store 0x24bf4036cfb4babf in memory
flw f22, 0(x2) # load 0x24bf4036cfb4babf from memory into f22
fnmsub.s f27, f13, f25, f22, dyn # perform operation
fnmsub.s f27, f13, f25, f22, rdn # perform operation
fnmsub.s f27, f13, f25, f22, rmm # perform operation
fnmsub.s f27, f13, f25, f22, rne # perform operation
fnmsub.s f27, f13, f25, f22, rtz # perform operation
fnmsub.s f27, f13, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x58492949923843c # load x3 with value 0x58492949923843c
sw x3, 0(x2) # store 0x58492949923843c in memory
flw f22, 0(x2) # load 0x58492949923843c from memory into f22
fnmsub.s f21, f20, f19, f22, dyn # perform operation
fnmsub.s f21, f20, f19, f22, rdn # perform operation
fnmsub.s f21, f20, f19, f22, rmm # perform operation
fnmsub.s f21, f20, f19, f22, rne # perform operation
fnmsub.s f21, f20, f19, f22, rtz # perform operation
fnmsub.s f21, f20, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f20, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x1439452ed0785cce # load x3 with value 0x1439452ed0785cce
sw x3, 0(x2) # store 0x1439452ed0785cce in memory
flw f25, 0(x2) # load 0x1439452ed0785cce from memory into f25
fnmsub.s f18, f6, f24, f25, dyn # perform operation
fnmsub.s f18, f6, f24, f25, rdn # perform operation
fnmsub.s f18, f6, f24, f25, rmm # perform operation
fnmsub.s f18, f6, f24, f25, rne # perform operation
fnmsub.s f18, f6, f24, f25, rtz # perform operation
fnmsub.s f18, f6, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xaf35b1dc2cb9d568 # load x3 with value 0xaf35b1dc2cb9d568
sw x3, 0(x2) # store 0xaf35b1dc2cb9d568 in memory
flw f25, 0(x2) # load 0xaf35b1dc2cb9d568 from memory into f25
fnmsub.s f22, f19, f3, f25, dyn # perform operation
fnmsub.s f22, f19, f3, f25, rdn # perform operation
fnmsub.s f22, f19, f3, f25, rmm # perform operation
fnmsub.s f22, f19, f3, f25, rne # perform operation
fnmsub.s f22, f19, f3, f25, rtz # perform operation
fnmsub.s f22, f19, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xeb0226e347653104 # load x3 with value 0xeb0226e347653104
sw x3, 0(x2) # store 0xeb0226e347653104 in memory
flw f2, 0(x2) # load 0xeb0226e347653104 from memory into f2
fnmsub.s f22, f10, f19, f2, dyn # perform operation
fnmsub.s f22, f10, f19, f2, rdn # perform operation
fnmsub.s f22, f10, f19, f2, rmm # perform operation
fnmsub.s f22, f10, f19, f2, rne # perform operation
fnmsub.s f22, f10, f19, f2, rtz # perform operation
fnmsub.s f22, f10, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xbc04244c8d12c679 # load x3 with value 0xbc04244c8d12c679
sw x3, 0(x2) # store 0xbc04244c8d12c679 in memory
flw f16, 0(x2) # load 0xbc04244c8d12c679 from memory into f16
fnmsub.s f6, f17, f15, f16, dyn # perform operation
fnmsub.s f6, f17, f15, f16, rdn # perform operation
fnmsub.s f6, f17, f15, f16, rmm # perform operation
fnmsub.s f6, f17, f15, f16, rne # perform operation
fnmsub.s f6, f17, f15, f16, rtz # perform operation
fnmsub.s f6, f17, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x2b6ada73be7be7c9 # load x3 with value 0x2b6ada73be7be7c9
sw x3, 0(x2) # store 0x2b6ada73be7be7c9 in memory
flw f20, 0(x2) # load 0x2b6ada73be7be7c9 from memory into f20
fnmsub.s f5, f16, f7, f20, dyn # perform operation
fnmsub.s f5, f16, f7, f20, rdn # perform operation
fnmsub.s f5, f16, f7, f20, rmm # perform operation
fnmsub.s f5, f16, f7, f20, rne # perform operation
fnmsub.s f5, f16, f7, f20, rtz # perform operation
fnmsub.s f5, f16, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f16, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f16, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f16, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f16, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f16, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x747eb2bdcaccdca5 # load x3 with value 0x747eb2bdcaccdca5
sw x3, 0(x2) # store 0x747eb2bdcaccdca5 in memory
flw f6, 0(x2) # load 0x747eb2bdcaccdca5 from memory into f6
fnmsub.s f16, f28, f12, f6, dyn # perform operation
fnmsub.s f16, f28, f12, f6, rdn # perform operation
fnmsub.s f16, f28, f12, f6, rmm # perform operation
fnmsub.s f16, f28, f12, f6, rne # perform operation
fnmsub.s f16, f28, f12, f6, rtz # perform operation
fnmsub.s f16, f28, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x4ad6d9dc46dc220c # load x3 with value 0x4ad6d9dc46dc220c
sw x3, 0(x2) # store 0x4ad6d9dc46dc220c in memory
flw f30, 0(x2) # load 0x4ad6d9dc46dc220c from memory into f30
fnmsub.s f3, f17, f29, f30, dyn # perform operation
fnmsub.s f3, f17, f29, f30, rdn # perform operation
fnmsub.s f3, f17, f29, f30, rmm # perform operation
fnmsub.s f3, f17, f29, f30, rne # perform operation
fnmsub.s f3, f17, f29, f30, rtz # perform operation
fnmsub.s f3, f17, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x2d6a932fa39a51d1 # load x3 with value 0x2d6a932fa39a51d1
sw x3, 0(x2) # store 0x2d6a932fa39a51d1 in memory
flw f28, 0(x2) # load 0x2d6a932fa39a51d1 from memory into f28
fnmsub.s f11, f10, f30, f28, dyn # perform operation
fnmsub.s f11, f10, f30, f28, rdn # perform operation
fnmsub.s f11, f10, f30, f28, rmm # perform operation
fnmsub.s f11, f10, f30, f28, rne # perform operation
fnmsub.s f11, f10, f30, f28, rtz # perform operation
fnmsub.s f11, f10, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x2fd2190a1c06bf4c # load x3 with value 0x2fd2190a1c06bf4c
sw x3, 0(x2) # store 0x2fd2190a1c06bf4c in memory
flw f14, 0(x2) # load 0x2fd2190a1c06bf4c from memory into f14
fnmsub.s f8, f25, f17, f14, dyn # perform operation
fnmsub.s f8, f25, f17, f14, rdn # perform operation
fnmsub.s f8, f25, f17, f14, rmm # perform operation
fnmsub.s f8, f25, f17, f14, rne # perform operation
fnmsub.s f8, f25, f17, f14, rtz # perform operation
fnmsub.s f8, f25, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xd23c0c08bc9b861e # load x3 with value 0xd23c0c08bc9b861e
sw x3, 0(x2) # store 0xd23c0c08bc9b861e in memory
flw f21, 0(x2) # load 0xd23c0c08bc9b861e from memory into f21
fnmsub.s f26, f25, f10, f21, dyn # perform operation
fnmsub.s f26, f25, f10, f21, rdn # perform operation
fnmsub.s f26, f25, f10, f21, rmm # perform operation
fnmsub.s f26, f25, f10, f21, rne # perform operation
fnmsub.s f26, f25, f10, f21, rtz # perform operation
fnmsub.s f26, f25, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xcd073d8e9b435179 # load x3 with value 0xcd073d8e9b435179
sw x3, 0(x2) # store 0xcd073d8e9b435179 in memory
flw f1, 0(x2) # load 0xcd073d8e9b435179 from memory into f1
fnmsub.s f10, f21, f25, f1, dyn # perform operation
fnmsub.s f10, f21, f25, f1, rdn # perform operation
fnmsub.s f10, f21, f25, f1, rmm # perform operation
fnmsub.s f10, f21, f25, f1, rne # perform operation
fnmsub.s f10, f21, f25, f1, rtz # perform operation
fnmsub.s f10, f21, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x1e62161dcb064cb5 # load x3 with value 0x1e62161dcb064cb5
sw x3, 0(x2) # store 0x1e62161dcb064cb5 in memory
flw f17, 0(x2) # load 0x1e62161dcb064cb5 from memory into f17
fnmsub.s f28, f8, f16, f17, dyn # perform operation
fnmsub.s f28, f8, f16, f17, rdn # perform operation
fnmsub.s f28, f8, f16, f17, rmm # perform operation
fnmsub.s f28, f8, f16, f17, rne # perform operation
fnmsub.s f28, f8, f16, f17, rtz # perform operation
fnmsub.s f28, f8, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x32940dc5a62663fc # load x3 with value 0x32940dc5a62663fc
sw x3, 0(x2) # store 0x32940dc5a62663fc in memory
flw f6, 0(x2) # load 0x32940dc5a62663fc from memory into f6
fnmsub.s f27, f1, f5, f6, dyn # perform operation
fnmsub.s f27, f1, f5, f6, rdn # perform operation
fnmsub.s f27, f1, f5, f6, rmm # perform operation
fnmsub.s f27, f1, f5, f6, rne # perform operation
fnmsub.s f27, f1, f5, f6, rtz # perform operation
fnmsub.s f27, f1, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x21f7f5e7743ecb63 # load x3 with value 0x21f7f5e7743ecb63
sw x3, 0(x2) # store 0x21f7f5e7743ecb63 in memory
flw f5, 0(x2) # load 0x21f7f5e7743ecb63 from memory into f5
fnmsub.s f31, f3, f2, f5, dyn # perform operation
fnmsub.s f31, f3, f2, f5, rdn # perform operation
fnmsub.s f31, f3, f2, f5, rmm # perform operation
fnmsub.s f31, f3, f2, f5, rne # perform operation
fnmsub.s f31, f3, f2, f5, rtz # perform operation
fnmsub.s f31, f3, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f3, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x783c3e9869cd136f # load x3 with value 0x783c3e9869cd136f
sw x3, 0(x2) # store 0x783c3e9869cd136f in memory
flw f1, 0(x2) # load 0x783c3e9869cd136f from memory into f1
fnmsub.s f2, f27, f7, f1, dyn # perform operation
fnmsub.s f2, f27, f7, f1, rdn # perform operation
fnmsub.s f2, f27, f7, f1, rmm # perform operation
fnmsub.s f2, f27, f7, f1, rne # perform operation
fnmsub.s f2, f27, f7, f1, rtz # perform operation
fnmsub.s f2, f27, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xf9cdbc03f298d91f # load x3 with value 0xf9cdbc03f298d91f
sw x3, 0(x2) # store 0xf9cdbc03f298d91f in memory
flw f27, 0(x2) # load 0xf9cdbc03f298d91f from memory into f27
fnmsub.s f2, f8, f26, f27, dyn # perform operation
fnmsub.s f2, f8, f26, f27, rdn # perform operation
fnmsub.s f2, f8, f26, f27, rmm # perform operation
fnmsub.s f2, f8, f26, f27, rne # perform operation
fnmsub.s f2, f8, f26, f27, rtz # perform operation
fnmsub.s f2, f8, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xbad89742a2e5970 # load x3 with value 0xbad89742a2e5970
sw x3, 0(x2) # store 0xbad89742a2e5970 in memory
flw f1, 0(x2) # load 0xbad89742a2e5970 from memory into f1
fnmsub.s f19, f18, f10, f1, dyn # perform operation
fnmsub.s f19, f18, f10, f1, rdn # perform operation
fnmsub.s f19, f18, f10, f1, rmm # perform operation
fnmsub.s f19, f18, f10, f1, rne # perform operation
fnmsub.s f19, f18, f10, f1, rtz # perform operation
fnmsub.s f19, f18, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x7598724e87370b54 # load x3 with value 0x7598724e87370b54
sw x3, 0(x2) # store 0x7598724e87370b54 in memory
flw f21, 0(x2) # load 0x7598724e87370b54 from memory into f21
fnmsub.s f26, f13, f15, f21, dyn # perform operation
fnmsub.s f26, f13, f15, f21, rdn # perform operation
fnmsub.s f26, f13, f15, f21, rmm # perform operation
fnmsub.s f26, f13, f15, f21, rne # perform operation
fnmsub.s f26, f13, f15, f21, rtz # perform operation
fnmsub.s f26, f13, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xaef5ea4ca081235c # load x3 with value 0xaef5ea4ca081235c
sw x3, 0(x2) # store 0xaef5ea4ca081235c in memory
flw f2, 0(x2) # load 0xaef5ea4ca081235c from memory into f2
fnmsub.s f16, f27, f29, f2, dyn # perform operation
fnmsub.s f16, f27, f29, f2, rdn # perform operation
fnmsub.s f16, f27, f29, f2, rmm # perform operation
fnmsub.s f16, f27, f29, f2, rne # perform operation
fnmsub.s f16, f27, f29, f2, rtz # perform operation
fnmsub.s f16, f27, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x647715df637a23d7 # load x3 with value 0x647715df637a23d7
sw x3, 0(x2) # store 0x647715df637a23d7 in memory
flw f9, 0(x2) # load 0x647715df637a23d7 from memory into f9
fnmsub.s f28, f14, f11, f9, dyn # perform operation
fnmsub.s f28, f14, f11, f9, rdn # perform operation
fnmsub.s f28, f14, f11, f9, rmm # perform operation
fnmsub.s f28, f14, f11, f9, rne # perform operation
fnmsub.s f28, f14, f11, f9, rtz # perform operation
fnmsub.s f28, f14, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f14, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xd79cb8d2082928af # load x3 with value 0xd79cb8d2082928af
sw x3, 0(x2) # store 0xd79cb8d2082928af in memory
flw f29, 0(x2) # load 0xd79cb8d2082928af from memory into f29
fnmsub.s f8, f17, f27, f29, dyn # perform operation
fnmsub.s f8, f17, f27, f29, rdn # perform operation
fnmsub.s f8, f17, f27, f29, rmm # perform operation
fnmsub.s f8, f17, f27, f29, rne # perform operation
fnmsub.s f8, f17, f27, f29, rtz # perform operation
fnmsub.s f8, f17, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x8552421077a5674b # load x3 with value 0x8552421077a5674b
sw x3, 0(x2) # store 0x8552421077a5674b in memory
flw f24, 0(x2) # load 0x8552421077a5674b from memory into f24
fnmsub.s f18, f14, f2, f24, dyn # perform operation
fnmsub.s f18, f14, f2, f24, rdn # perform operation
fnmsub.s f18, f14, f2, f24, rmm # perform operation
fnmsub.s f18, f14, f2, f24, rne # perform operation
fnmsub.s f18, f14, f2, f24, rtz # perform operation
fnmsub.s f18, f14, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f14, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f14, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f14, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f14, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f14, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x8f6133bcd512ceea # load x3 with value 0x8f6133bcd512ceea
sw x3, 0(x2) # store 0x8f6133bcd512ceea in memory
flw f30, 0(x2) # load 0x8f6133bcd512ceea from memory into f30
fnmsub.s f7, f22, f9, f30, dyn # perform operation
fnmsub.s f7, f22, f9, f30, rdn # perform operation
fnmsub.s f7, f22, f9, f30, rmm # perform operation
fnmsub.s f7, f22, f9, f30, rne # perform operation
fnmsub.s f7, f22, f9, f30, rtz # perform operation
fnmsub.s f7, f22, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x91e7a17fdb9ebff5 # load x3 with value 0x91e7a17fdb9ebff5
sw x3, 0(x2) # store 0x91e7a17fdb9ebff5 in memory
flw f25, 0(x2) # load 0x91e7a17fdb9ebff5 from memory into f25
fnmsub.s f18, f6, f13, f25, dyn # perform operation
fnmsub.s f18, f6, f13, f25, rdn # perform operation
fnmsub.s f18, f6, f13, f25, rmm # perform operation
fnmsub.s f18, f6, f13, f25, rne # perform operation
fnmsub.s f18, f6, f13, f25, rtz # perform operation
fnmsub.s f18, f6, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xf4742e69119c34b2 # load x3 with value 0xf4742e69119c34b2
sw x3, 0(x2) # store 0xf4742e69119c34b2 in memory
flw f24, 0(x2) # load 0xf4742e69119c34b2 from memory into f24
fnmsub.s f7, f11, f27, f24, dyn # perform operation
fnmsub.s f7, f11, f27, f24, rdn # perform operation
fnmsub.s f7, f11, f27, f24, rmm # perform operation
fnmsub.s f7, f11, f27, f24, rne # perform operation
fnmsub.s f7, f11, f27, f24, rtz # perform operation
fnmsub.s f7, f11, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xf8ed28facc848b89 # load x3 with value 0xf8ed28facc848b89
sw x3, 0(x2) # store 0xf8ed28facc848b89 in memory
flw f25, 0(x2) # load 0xf8ed28facc848b89 from memory into f25
fnmsub.s f5, f8, f6, f25, dyn # perform operation
fnmsub.s f5, f8, f6, f25, rdn # perform operation
fnmsub.s f5, f8, f6, f25, rmm # perform operation
fnmsub.s f5, f8, f6, f25, rne # perform operation
fnmsub.s f5, f8, f6, f25, rtz # perform operation
fnmsub.s f5, f8, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x10f26232c81ccf1b # load x3 with value 0x10f26232c81ccf1b
sw x3, 0(x2) # store 0x10f26232c81ccf1b in memory
flw f28, 0(x2) # load 0x10f26232c81ccf1b from memory into f28
fnmsub.s f11, f8, f25, f28, dyn # perform operation
fnmsub.s f11, f8, f25, f28, rdn # perform operation
fnmsub.s f11, f8, f25, f28, rmm # perform operation
fnmsub.s f11, f8, f25, f28, rne # perform operation
fnmsub.s f11, f8, f25, f28, rtz # perform operation
fnmsub.s f11, f8, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xd34d4e502838e237 # load x3 with value 0xd34d4e502838e237
sw x3, 0(x2) # store 0xd34d4e502838e237 in memory
flw f27, 0(x2) # load 0xd34d4e502838e237 from memory into f27
fnmsub.s f14, f16, f25, f27, dyn # perform operation
fnmsub.s f14, f16, f25, f27, rdn # perform operation
fnmsub.s f14, f16, f25, f27, rmm # perform operation
fnmsub.s f14, f16, f25, f27, rne # perform operation
fnmsub.s f14, f16, f25, f27, rtz # perform operation
fnmsub.s f14, f16, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x4490b54e66a693c1 # load x3 with value 0x4490b54e66a693c1
sw x3, 0(x2) # store 0x4490b54e66a693c1 in memory
flw f29, 0(x2) # load 0x4490b54e66a693c1 from memory into f29
fnmsub.s f15, f21, f23, f29, dyn # perform operation
fnmsub.s f15, f21, f23, f29, rdn # perform operation
fnmsub.s f15, f21, f23, f29, rmm # perform operation
fnmsub.s f15, f21, f23, f29, rne # perform operation
fnmsub.s f15, f21, f23, f29, rtz # perform operation
fnmsub.s f15, f21, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x8cd472297dd7ca9b # load x3 with value 0x8cd472297dd7ca9b
sw x3, 0(x2) # store 0x8cd472297dd7ca9b in memory
flw f17, 0(x2) # load 0x8cd472297dd7ca9b from memory into f17
fnmsub.s f27, f30, f13, f17, dyn # perform operation
fnmsub.s f27, f30, f13, f17, rdn # perform operation
fnmsub.s f27, f30, f13, f17, rmm # perform operation
fnmsub.s f27, f30, f13, f17, rne # perform operation
fnmsub.s f27, f30, f13, f17, rtz # perform operation
fnmsub.s f27, f30, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f30, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x763f3f177ffd3de6 # load x3 with value 0x763f3f177ffd3de6
sw x3, 0(x2) # store 0x763f3f177ffd3de6 in memory
flw f17, 0(x2) # load 0x763f3f177ffd3de6 from memory into f17
fnmsub.s f27, f5, f16, f17, dyn # perform operation
fnmsub.s f27, f5, f16, f17, rdn # perform operation
fnmsub.s f27, f5, f16, f17, rmm # perform operation
fnmsub.s f27, f5, f16, f17, rne # perform operation
fnmsub.s f27, f5, f16, f17, rtz # perform operation
fnmsub.s f27, f5, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x61b28e35f1994f95 # load x3 with value 0x61b28e35f1994f95
sw x3, 0(x2) # store 0x61b28e35f1994f95 in memory
flw f25, 0(x2) # load 0x61b28e35f1994f95 from memory into f25
fnmsub.s f18, f27, f22, f25, dyn # perform operation
fnmsub.s f18, f27, f22, f25, rdn # perform operation
fnmsub.s f18, f27, f22, f25, rmm # perform operation
fnmsub.s f18, f27, f22, f25, rne # perform operation
fnmsub.s f18, f27, f22, f25, rtz # perform operation
fnmsub.s f18, f27, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xeaa017bda6d10132 # load x3 with value 0xeaa017bda6d10132
sw x3, 0(x2) # store 0xeaa017bda6d10132 in memory
flw f24, 0(x2) # load 0xeaa017bda6d10132 from memory into f24
fnmsub.s f30, f29, f13, f24, dyn # perform operation
fnmsub.s f30, f29, f13, f24, rdn # perform operation
fnmsub.s f30, f29, f13, f24, rmm # perform operation
fnmsub.s f30, f29, f13, f24, rne # perform operation
fnmsub.s f30, f29, f13, f24, rtz # perform operation
fnmsub.s f30, f29, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f29, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x9b2efb272fe3a720 # load x3 with value 0x9b2efb272fe3a720
sw x3, 0(x2) # store 0x9b2efb272fe3a720 in memory
flw f10, 0(x2) # load 0x9b2efb272fe3a720 from memory into f10
fnmsub.s f8, f12, f21, f10, dyn # perform operation
fnmsub.s f8, f12, f21, f10, rdn # perform operation
fnmsub.s f8, f12, f21, f10, rmm # perform operation
fnmsub.s f8, f12, f21, f10, rne # perform operation
fnmsub.s f8, f12, f21, f10, rtz # perform operation
fnmsub.s f8, f12, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f12, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x996ed54ee7268f5b # load x3 with value 0x996ed54ee7268f5b
sw x3, 0(x2) # store 0x996ed54ee7268f5b in memory
flw f29, 0(x2) # load 0x996ed54ee7268f5b from memory into f29
fnmsub.s f3, f6, f13, f29, dyn # perform operation
fnmsub.s f3, f6, f13, f29, rdn # perform operation
fnmsub.s f3, f6, f13, f29, rmm # perform operation
fnmsub.s f3, f6, f13, f29, rne # perform operation
fnmsub.s f3, f6, f13, f29, rtz # perform operation
fnmsub.s f3, f6, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x8387834fbf5d774b # load x3 with value 0x8387834fbf5d774b
sw x3, 0(x2) # store 0x8387834fbf5d774b in memory
flw f30, 0(x2) # load 0x8387834fbf5d774b from memory into f30
fnmsub.s f9, f25, f24, f30, dyn # perform operation
fnmsub.s f9, f25, f24, f30, rdn # perform operation
fnmsub.s f9, f25, f24, f30, rmm # perform operation
fnmsub.s f9, f25, f24, f30, rne # perform operation
fnmsub.s f9, f25, f24, f30, rtz # perform operation
fnmsub.s f9, f25, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xbb935bf3b140ad55 # load x3 with value 0xbb935bf3b140ad55
sw x3, 0(x2) # store 0xbb935bf3b140ad55 in memory
flw f5, 0(x2) # load 0xbb935bf3b140ad55 from memory into f5
fnmsub.s f3, f27, f1, f5, dyn # perform operation
fnmsub.s f3, f27, f1, f5, rdn # perform operation
fnmsub.s f3, f27, f1, f5, rmm # perform operation
fnmsub.s f3, f27, f1, f5, rne # perform operation
fnmsub.s f3, f27, f1, f5, rtz # perform operation
fnmsub.s f3, f27, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f1, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xa463baaae0b3a4ba # load x3 with value 0xa463baaae0b3a4ba
sw x3, 0(x2) # store 0xa463baaae0b3a4ba in memory
flw f7, 0(x2) # load 0xa463baaae0b3a4ba from memory into f7
fnmsub.s f30, f28, f27, f7, dyn # perform operation
fnmsub.s f30, f28, f27, f7, rdn # perform operation
fnmsub.s f30, f28, f27, f7, rmm # perform operation
fnmsub.s f30, f28, f27, f7, rne # perform operation
fnmsub.s f30, f28, f27, f7, rtz # perform operation
fnmsub.s f30, f28, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xb93071d97f1e98e # load x3 with value 0xb93071d97f1e98e
sw x3, 0(x2) # store 0xb93071d97f1e98e in memory
flw f15, 0(x2) # load 0xb93071d97f1e98e from memory into f15
fnmsub.s f9, f3, f18, f15, dyn # perform operation
fnmsub.s f9, f3, f18, f15, rdn # perform operation
fnmsub.s f9, f3, f18, f15, rmm # perform operation
fnmsub.s f9, f3, f18, f15, rne # perform operation
fnmsub.s f9, f3, f18, f15, rtz # perform operation
fnmsub.s f9, f3, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f3, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x8f1a64fcdc98a29 # load x3 with value 0x8f1a64fcdc98a29
sw x3, 0(x2) # store 0x8f1a64fcdc98a29 in memory
flw f23, 0(x2) # load 0x8f1a64fcdc98a29 from memory into f23
fnmsub.s f24, f8, f9, f23, dyn # perform operation
fnmsub.s f24, f8, f9, f23, rdn # perform operation
fnmsub.s f24, f8, f9, f23, rmm # perform operation
fnmsub.s f24, f8, f9, f23, rne # perform operation
fnmsub.s f24, f8, f9, f23, rtz # perform operation
fnmsub.s f24, f8, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f8, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f8, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f8, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f8, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f8, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x9d4b2aace72310e # load x3 with value 0x9d4b2aace72310e
sw x3, 0(x2) # store 0x9d4b2aace72310e in memory
flw f6, 0(x2) # load 0x9d4b2aace72310e from memory into f6
fnmsub.s f13, f20, f22, f6, dyn # perform operation
fnmsub.s f13, f20, f22, f6, rdn # perform operation
fnmsub.s f13, f20, f22, f6, rmm # perform operation
fnmsub.s f13, f20, f22, f6, rne # perform operation
fnmsub.s f13, f20, f22, f6, rtz # perform operation
fnmsub.s f13, f20, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xb59771ccd2fb11b3 # load x3 with value 0xb59771ccd2fb11b3
sw x3, 0(x2) # store 0xb59771ccd2fb11b3 in memory
flw f2, 0(x2) # load 0xb59771ccd2fb11b3 from memory into f2
fnmsub.s f12, f7, f10, f2, dyn # perform operation
fnmsub.s f12, f7, f10, f2, rdn # perform operation
fnmsub.s f12, f7, f10, f2, rmm # perform operation
fnmsub.s f12, f7, f10, f2, rne # perform operation
fnmsub.s f12, f7, f10, f2, rtz # perform operation
fnmsub.s f12, f7, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xcbc5c04cb8fb188f # load x3 with value 0xcbc5c04cb8fb188f
sw x3, 0(x2) # store 0xcbc5c04cb8fb188f in memory
flw f9, 0(x2) # load 0xcbc5c04cb8fb188f from memory into f9
fnmsub.s f26, f22, f27, f9, dyn # perform operation
fnmsub.s f26, f22, f27, f9, rdn # perform operation
fnmsub.s f26, f22, f27, f9, rmm # perform operation
fnmsub.s f26, f22, f27, f9, rne # perform operation
fnmsub.s f26, f22, f27, f9, rtz # perform operation
fnmsub.s f26, f22, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f22, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x84dd69112a8bbf46 # load x3 with value 0x84dd69112a8bbf46
sw x3, 0(x2) # store 0x84dd69112a8bbf46 in memory
flw f25, 0(x2) # load 0x84dd69112a8bbf46 from memory into f25
fnmsub.s f22, f17, f16, f25, dyn # perform operation
fnmsub.s f22, f17, f16, f25, rdn # perform operation
fnmsub.s f22, f17, f16, f25, rmm # perform operation
fnmsub.s f22, f17, f16, f25, rne # perform operation
fnmsub.s f22, f17, f16, f25, rtz # perform operation
fnmsub.s f22, f17, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xc219ea3fda52a448 # load x3 with value 0xc219ea3fda52a448
sw x3, 0(x2) # store 0xc219ea3fda52a448 in memory
flw f5, 0(x2) # load 0xc219ea3fda52a448 from memory into f5
fnmsub.s f22, f13, f25, f5, dyn # perform operation
fnmsub.s f22, f13, f25, f5, rdn # perform operation
fnmsub.s f22, f13, f25, f5, rmm # perform operation
fnmsub.s f22, f13, f25, f5, rne # perform operation
fnmsub.s f22, f13, f25, f5, rtz # perform operation
fnmsub.s f22, f13, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x6e4d556f80a8a108 # load x3 with value 0x6e4d556f80a8a108
sw x3, 0(x2) # store 0x6e4d556f80a8a108 in memory
flw f23, 0(x2) # load 0x6e4d556f80a8a108 from memory into f23
fnmsub.s f30, f18, f7, f23, dyn # perform operation
fnmsub.s f30, f18, f7, f23, rdn # perform operation
fnmsub.s f30, f18, f7, f23, rmm # perform operation
fnmsub.s f30, f18, f7, f23, rne # perform operation
fnmsub.s f30, f18, f7, f23, rtz # perform operation
fnmsub.s f30, f18, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x4f6e79a71509ffc9 # load x3 with value 0x4f6e79a71509ffc9
sw x3, 0(x2) # store 0x4f6e79a71509ffc9 in memory
flw f2, 0(x2) # load 0x4f6e79a71509ffc9 from memory into f2
fnmsub.s f30, f19, f10, f2, dyn # perform operation
fnmsub.s f30, f19, f10, f2, rdn # perform operation
fnmsub.s f30, f19, f10, f2, rmm # perform operation
fnmsub.s f30, f19, f10, f2, rne # perform operation
fnmsub.s f30, f19, f10, f2, rtz # perform operation
fnmsub.s f30, f19, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xbf5ae083e31f0b # load x3 with value 0xbf5ae083e31f0b
sw x3, 0(x2) # store 0xbf5ae083e31f0b in memory
flw f17, 0(x2) # load 0xbf5ae083e31f0b from memory into f17
fnmsub.s f25, f28, f1, f17, dyn # perform operation
fnmsub.s f25, f28, f1, f17, rdn # perform operation
fnmsub.s f25, f28, f1, f17, rmm # perform operation
fnmsub.s f25, f28, f1, f17, rne # perform operation
fnmsub.s f25, f28, f1, f17, rtz # perform operation
fnmsub.s f25, f28, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f28, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x1b82ab711bf5606c # load x3 with value 0x1b82ab711bf5606c
sw x3, 0(x2) # store 0x1b82ab711bf5606c in memory
flw f25, 0(x2) # load 0x1b82ab711bf5606c from memory into f25
fnmsub.s f21, f3, f26, f25, dyn # perform operation
fnmsub.s f21, f3, f26, f25, rdn # perform operation
fnmsub.s f21, f3, f26, f25, rmm # perform operation
fnmsub.s f21, f3, f26, f25, rne # perform operation
fnmsub.s f21, f3, f26, f25, rtz # perform operation
fnmsub.s f21, f3, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x8a07f7ef4bc2a11f # load x3 with value 0x8a07f7ef4bc2a11f
sw x3, 0(x2) # store 0x8a07f7ef4bc2a11f in memory
flw f12, 0(x2) # load 0x8a07f7ef4bc2a11f from memory into f12
fnmsub.s f20, f14, f13, f12, dyn # perform operation
fnmsub.s f20, f14, f13, f12, rdn # perform operation
fnmsub.s f20, f14, f13, f12, rmm # perform operation
fnmsub.s f20, f14, f13, f12, rne # perform operation
fnmsub.s f20, f14, f13, f12, rtz # perform operation
fnmsub.s f20, f14, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x2f06fec0b7bbc89 # load x3 with value 0x2f06fec0b7bbc89
sw x3, 0(x2) # store 0x2f06fec0b7bbc89 in memory
flw f21, 0(x2) # load 0x2f06fec0b7bbc89 from memory into f21
fnmsub.s f2, f5, f6, f21, dyn # perform operation
fnmsub.s f2, f5, f6, f21, rdn # perform operation
fnmsub.s f2, f5, f6, f21, rmm # perform operation
fnmsub.s f2, f5, f6, f21, rne # perform operation
fnmsub.s f2, f5, f6, f21, rtz # perform operation
fnmsub.s f2, f5, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x991e1f56bace7b2b # load x3 with value 0x991e1f56bace7b2b
sw x3, 0(x2) # store 0x991e1f56bace7b2b in memory
flw f22, 0(x2) # load 0x991e1f56bace7b2b from memory into f22
fnmsub.s f31, f16, f12, f22, dyn # perform operation
fnmsub.s f31, f16, f12, f22, rdn # perform operation
fnmsub.s f31, f16, f12, f22, rmm # perform operation
fnmsub.s f31, f16, f12, f22, rne # perform operation
fnmsub.s f31, f16, f12, f22, rtz # perform operation
fnmsub.s f31, f16, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x8c63a4c2890b5a16 # load x3 with value 0x8c63a4c2890b5a16
sw x3, 0(x2) # store 0x8c63a4c2890b5a16 in memory
flw f28, 0(x2) # load 0x8c63a4c2890b5a16 from memory into f28
fnmsub.s f2, f23, f8, f28, dyn # perform operation
fnmsub.s f2, f23, f8, f28, rdn # perform operation
fnmsub.s f2, f23, f8, f28, rmm # perform operation
fnmsub.s f2, f23, f8, f28, rne # perform operation
fnmsub.s f2, f23, f8, f28, rtz # perform operation
fnmsub.s f2, f23, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xfc2fc25e4e7a80ec # load x3 with value 0xfc2fc25e4e7a80ec
sw x3, 0(x2) # store 0xfc2fc25e4e7a80ec in memory
flw f25, 0(x2) # load 0xfc2fc25e4e7a80ec from memory into f25
fnmsub.s f15, f24, f23, f25, dyn # perform operation
fnmsub.s f15, f24, f23, f25, rdn # perform operation
fnmsub.s f15, f24, f23, f25, rmm # perform operation
fnmsub.s f15, f24, f23, f25, rne # perform operation
fnmsub.s f15, f24, f23, f25, rtz # perform operation
fnmsub.s f15, f24, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f24, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xddd86fd2d02261bd # load x3 with value 0xddd86fd2d02261bd
sw x3, 0(x2) # store 0xddd86fd2d02261bd in memory
flw f22, 0(x2) # load 0xddd86fd2d02261bd from memory into f22
fnmsub.s f28, f17, f6, f22, dyn # perform operation
fnmsub.s f28, f17, f6, f22, rdn # perform operation
fnmsub.s f28, f17, f6, f22, rmm # perform operation
fnmsub.s f28, f17, f6, f22, rne # perform operation
fnmsub.s f28, f17, f6, f22, rtz # perform operation
fnmsub.s f28, f17, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f17, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x12340d6e5d82ef9c # load x3 with value 0x12340d6e5d82ef9c
sw x3, 0(x2) # store 0x12340d6e5d82ef9c in memory
flw f26, 0(x2) # load 0x12340d6e5d82ef9c from memory into f26
fnmsub.s f2, f20, f25, f26, dyn # perform operation
fnmsub.s f2, f20, f25, f26, rdn # perform operation
fnmsub.s f2, f20, f25, f26, rmm # perform operation
fnmsub.s f2, f20, f25, f26, rne # perform operation
fnmsub.s f2, f20, f25, f26, rtz # perform operation
fnmsub.s f2, f20, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f20, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x41c3f4c6ed12cbdc # load x3 with value 0x41c3f4c6ed12cbdc
sw x3, 0(x2) # store 0x41c3f4c6ed12cbdc in memory
flw f30, 0(x2) # load 0x41c3f4c6ed12cbdc from memory into f30
fnmsub.s f31, f22, f10, f30, dyn # perform operation
fnmsub.s f31, f22, f10, f30, rdn # perform operation
fnmsub.s f31, f22, f10, f30, rmm # perform operation
fnmsub.s f31, f22, f10, f30, rne # perform operation
fnmsub.s f31, f22, f10, f30, rtz # perform operation
fnmsub.s f31, f22, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x39dd12fcf9e2c1d9 # load x3 with value 0x39dd12fcf9e2c1d9
sw x3, 0(x2) # store 0x39dd12fcf9e2c1d9 in memory
flw f22, 0(x2) # load 0x39dd12fcf9e2c1d9 from memory into f22
fnmsub.s f2, f21, f15, f22, dyn # perform operation
fnmsub.s f2, f21, f15, f22, rdn # perform operation
fnmsub.s f2, f21, f15, f22, rmm # perform operation
fnmsub.s f2, f21, f15, f22, rne # perform operation
fnmsub.s f2, f21, f15, f22, rtz # perform operation
fnmsub.s f2, f21, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x924f9d48c136e216 # load x3 with value 0x924f9d48c136e216
sw x3, 0(x2) # store 0x924f9d48c136e216 in memory
flw f20, 0(x2) # load 0x924f9d48c136e216 from memory into f20
fnmsub.s f13, f16, f26, f20, dyn # perform operation
fnmsub.s f13, f16, f26, f20, rdn # perform operation
fnmsub.s f13, f16, f26, f20, rmm # perform operation
fnmsub.s f13, f16, f26, f20, rne # perform operation
fnmsub.s f13, f16, f26, f20, rtz # perform operation
fnmsub.s f13, f16, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x5defd56d4f0f979d # load x3 with value 0x5defd56d4f0f979d
sw x3, 0(x2) # store 0x5defd56d4f0f979d in memory
flw f11, 0(x2) # load 0x5defd56d4f0f979d from memory into f11
fnmsub.s f30, f24, f3, f11, dyn # perform operation
fnmsub.s f30, f24, f3, f11, rdn # perform operation
fnmsub.s f30, f24, f3, f11, rmm # perform operation
fnmsub.s f30, f24, f3, f11, rne # perform operation
fnmsub.s f30, f24, f3, f11, rtz # perform operation
fnmsub.s f30, f24, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x17968f4d16648bcb # load x3 with value 0x17968f4d16648bcb
sw x3, 0(x2) # store 0x17968f4d16648bcb in memory
flw f14, 0(x2) # load 0x17968f4d16648bcb from memory into f14
fnmsub.s f24, f11, f25, f14, dyn # perform operation
fnmsub.s f24, f11, f25, f14, rdn # perform operation
fnmsub.s f24, f11, f25, f14, rmm # perform operation
fnmsub.s f24, f11, f25, f14, rne # perform operation
fnmsub.s f24, f11, f25, f14, rtz # perform operation
fnmsub.s f24, f11, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x913b9793e38dd918 # load x3 with value 0x913b9793e38dd918
sw x3, 0(x2) # store 0x913b9793e38dd918 in memory
flw f21, 0(x2) # load 0x913b9793e38dd918 from memory into f21
fnmsub.s f8, f31, f10, f21, dyn # perform operation
fnmsub.s f8, f31, f10, f21, rdn # perform operation
fnmsub.s f8, f31, f10, f21, rmm # perform operation
fnmsub.s f8, f31, f10, f21, rne # perform operation
fnmsub.s f8, f31, f10, f21, rtz # perform operation
fnmsub.s f8, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xb8b7a777fffbb6ba # load x3 with value 0xb8b7a777fffbb6ba
sw x3, 0(x2) # store 0xb8b7a777fffbb6ba in memory
flw f7, 0(x2) # load 0xb8b7a777fffbb6ba from memory into f7
fnmsub.s f13, f17, f2, f7, dyn # perform operation
fnmsub.s f13, f17, f2, f7, rdn # perform operation
fnmsub.s f13, f17, f2, f7, rmm # perform operation
fnmsub.s f13, f17, f2, f7, rne # perform operation
fnmsub.s f13, f17, f2, f7, rtz # perform operation
fnmsub.s f13, f17, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xecdfda97d9fde2ec # load x3 with value 0xecdfda97d9fde2ec
sw x3, 0(x2) # store 0xecdfda97d9fde2ec in memory
flw f29, 0(x2) # load 0xecdfda97d9fde2ec from memory into f29
fnmsub.s f16, f24, f7, f29, dyn # perform operation
fnmsub.s f16, f24, f7, f29, rdn # perform operation
fnmsub.s f16, f24, f7, f29, rmm # perform operation
fnmsub.s f16, f24, f7, f29, rne # perform operation
fnmsub.s f16, f24, f7, f29, rtz # perform operation
fnmsub.s f16, f24, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xc9b5a6992658bdd1 # load x3 with value 0xc9b5a6992658bdd1
sw x3, 0(x2) # store 0xc9b5a6992658bdd1 in memory
flw f30, 0(x2) # load 0xc9b5a6992658bdd1 from memory into f30
fnmsub.s f6, f11, f9, f30, dyn # perform operation
fnmsub.s f6, f11, f9, f30, rdn # perform operation
fnmsub.s f6, f11, f9, f30, rmm # perform operation
fnmsub.s f6, f11, f9, f30, rne # perform operation
fnmsub.s f6, f11, f9, f30, rtz # perform operation
fnmsub.s f6, f11, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x77d7b887441f886 # load x3 with value 0x77d7b887441f886
sw x3, 0(x2) # store 0x77d7b887441f886 in memory
flw f22, 0(x2) # load 0x77d7b887441f886 from memory into f22
fnmsub.s f2, f26, f7, f22, dyn # perform operation
fnmsub.s f2, f26, f7, f22, rdn # perform operation
fnmsub.s f2, f26, f7, f22, rmm # perform operation
fnmsub.s f2, f26, f7, f22, rne # perform operation
fnmsub.s f2, f26, f7, f22, rtz # perform operation
fnmsub.s f2, f26, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x65d1444de0415d12 # load x3 with value 0x65d1444de0415d12
sw x3, 0(x2) # store 0x65d1444de0415d12 in memory
flw f25, 0(x2) # load 0x65d1444de0415d12 from memory into f25
fnmsub.s f15, f20, f2, f25, dyn # perform operation
fnmsub.s f15, f20, f2, f25, rdn # perform operation
fnmsub.s f15, f20, f2, f25, rmm # perform operation
fnmsub.s f15, f20, f2, f25, rne # perform operation
fnmsub.s f15, f20, f2, f25, rtz # perform operation
fnmsub.s f15, f20, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f20, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f20, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f20, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f20, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f20, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xbd02b67935c364f2 # load x3 with value 0xbd02b67935c364f2
sw x3, 0(x2) # store 0xbd02b67935c364f2 in memory
flw f3, 0(x2) # load 0xbd02b67935c364f2 from memory into f3
fnmsub.s f18, f11, f8, f3, dyn # perform operation
fnmsub.s f18, f11, f8, f3, rdn # perform operation
fnmsub.s f18, f11, f8, f3, rmm # perform operation
fnmsub.s f18, f11, f8, f3, rne # perform operation
fnmsub.s f18, f11, f8, f3, rtz # perform operation
fnmsub.s f18, f11, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x60feb4c440eb63ef # load x3 with value 0x60feb4c440eb63ef
sw x3, 0(x2) # store 0x60feb4c440eb63ef in memory
flw f12, 0(x2) # load 0x60feb4c440eb63ef from memory into f12
fnmsub.s f21, f16, f13, f12, dyn # perform operation
fnmsub.s f21, f16, f13, f12, rdn # perform operation
fnmsub.s f21, f16, f13, f12, rmm # perform operation
fnmsub.s f21, f16, f13, f12, rne # perform operation
fnmsub.s f21, f16, f13, f12, rtz # perform operation
fnmsub.s f21, f16, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xd63b045d5e619e3b # load x3 with value 0xd63b045d5e619e3b
sw x3, 0(x2) # store 0xd63b045d5e619e3b in memory
flw f29, 0(x2) # load 0xd63b045d5e619e3b from memory into f29
fnmsub.s f27, f2, f11, f29, dyn # perform operation
fnmsub.s f27, f2, f11, f29, rdn # perform operation
fnmsub.s f27, f2, f11, f29, rmm # perform operation
fnmsub.s f27, f2, f11, f29, rne # perform operation
fnmsub.s f27, f2, f11, f29, rtz # perform operation
fnmsub.s f27, f2, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x829de3062098922e # load x3 with value 0x829de3062098922e
sw x3, 0(x2) # store 0x829de3062098922e in memory
flw f12, 0(x2) # load 0x829de3062098922e from memory into f12
fnmsub.s f7, f8, f15, f12, dyn # perform operation
fnmsub.s f7, f8, f15, f12, rdn # perform operation
fnmsub.s f7, f8, f15, f12, rmm # perform operation
fnmsub.s f7, f8, f15, f12, rne # perform operation
fnmsub.s f7, f8, f15, f12, rtz # perform operation
fnmsub.s f7, f8, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x20af28c8354a86ee # load x3 with value 0x20af28c8354a86ee
sw x3, 0(x2) # store 0x20af28c8354a86ee in memory
flw f26, 0(x2) # load 0x20af28c8354a86ee from memory into f26
fnmsub.s f7, f22, f13, f26, dyn # perform operation
fnmsub.s f7, f22, f13, f26, rdn # perform operation
fnmsub.s f7, f22, f13, f26, rmm # perform operation
fnmsub.s f7, f22, f13, f26, rne # perform operation
fnmsub.s f7, f22, f13, f26, rtz # perform operation
fnmsub.s f7, f22, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xcb5ae396e13aba6 # load x3 with value 0xcb5ae396e13aba6
sw x3, 0(x2) # store 0xcb5ae396e13aba6 in memory
flw f15, 0(x2) # load 0xcb5ae396e13aba6 from memory into f15
fnmsub.s f30, f18, f2, f15, dyn # perform operation
fnmsub.s f30, f18, f2, f15, rdn # perform operation
fnmsub.s f30, f18, f2, f15, rmm # perform operation
fnmsub.s f30, f18, f2, f15, rne # perform operation
fnmsub.s f30, f18, f2, f15, rtz # perform operation
fnmsub.s f30, f18, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x709e61a3898fafdb # load x3 with value 0x709e61a3898fafdb
sw x3, 0(x2) # store 0x709e61a3898fafdb in memory
flw f7, 0(x2) # load 0x709e61a3898fafdb from memory into f7
fnmsub.s f15, f30, f14, f7, dyn # perform operation
fnmsub.s f15, f30, f14, f7, rdn # perform operation
fnmsub.s f15, f30, f14, f7, rmm # perform operation
fnmsub.s f15, f30, f14, f7, rne # perform operation
fnmsub.s f15, f30, f14, f7, rtz # perform operation
fnmsub.s f15, f30, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xb92e349c66226390 # load x3 with value 0xb92e349c66226390
sw x3, 0(x2) # store 0xb92e349c66226390 in memory
flw f25, 0(x2) # load 0xb92e349c66226390 from memory into f25
fnmsub.s f18, f10, f16, f25, dyn # perform operation
fnmsub.s f18, f10, f16, f25, rdn # perform operation
fnmsub.s f18, f10, f16, f25, rmm # perform operation
fnmsub.s f18, f10, f16, f25, rne # perform operation
fnmsub.s f18, f10, f16, f25, rtz # perform operation
fnmsub.s f18, f10, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x9fd203ab7c0becd0 # load x3 with value 0x9fd203ab7c0becd0
sw x3, 0(x2) # store 0x9fd203ab7c0becd0 in memory
flw f14, 0(x2) # load 0x9fd203ab7c0becd0 from memory into f14
fnmsub.s f24, f7, f17, f14, dyn # perform operation
fnmsub.s f24, f7, f17, f14, rdn # perform operation
fnmsub.s f24, f7, f17, f14, rmm # perform operation
fnmsub.s f24, f7, f17, f14, rne # perform operation
fnmsub.s f24, f7, f17, f14, rtz # perform operation
fnmsub.s f24, f7, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xdc3f3053b1dc9510 # load x3 with value 0xdc3f3053b1dc9510
sw x3, 0(x2) # store 0xdc3f3053b1dc9510 in memory
flw f3, 0(x2) # load 0xdc3f3053b1dc9510 from memory into f3
fnmsub.s f6, f15, f19, f3, dyn # perform operation
fnmsub.s f6, f15, f19, f3, rdn # perform operation
fnmsub.s f6, f15, f19, f3, rmm # perform operation
fnmsub.s f6, f15, f19, f3, rne # perform operation
fnmsub.s f6, f15, f19, f3, rtz # perform operation
fnmsub.s f6, f15, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xce4fce746ba900fc # load x3 with value 0xce4fce746ba900fc
sw x3, 0(x2) # store 0xce4fce746ba900fc in memory
flw f25, 0(x2) # load 0xce4fce746ba900fc from memory into f25
fnmsub.s f13, f28, f23, f25, dyn # perform operation
fnmsub.s f13, f28, f23, f25, rdn # perform operation
fnmsub.s f13, f28, f23, f25, rmm # perform operation
fnmsub.s f13, f28, f23, f25, rne # perform operation
fnmsub.s f13, f28, f23, f25, rtz # perform operation
fnmsub.s f13, f28, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xd3edf35b1d30f0b # load x3 with value 0xd3edf35b1d30f0b
sw x3, 0(x2) # store 0xd3edf35b1d30f0b in memory
flw f20, 0(x2) # load 0xd3edf35b1d30f0b from memory into f20
fnmsub.s f8, f24, f9, f20, dyn # perform operation
fnmsub.s f8, f24, f9, f20, rdn # perform operation
fnmsub.s f8, f24, f9, f20, rmm # perform operation
fnmsub.s f8, f24, f9, f20, rne # perform operation
fnmsub.s f8, f24, f9, f20, rtz # perform operation
fnmsub.s f8, f24, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xd85116abb1d51af0 # load x3 with value 0xd85116abb1d51af0
sw x3, 0(x2) # store 0xd85116abb1d51af0 in memory
flw f29, 0(x2) # load 0xd85116abb1d51af0 from memory into f29
fnmsub.s f24, f15, f31, f29, dyn # perform operation
fnmsub.s f24, f15, f31, f29, rdn # perform operation
fnmsub.s f24, f15, f31, f29, rmm # perform operation
fnmsub.s f24, f15, f31, f29, rne # perform operation
fnmsub.s f24, f15, f31, f29, rtz # perform operation
fnmsub.s f24, f15, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x7719944440090eff # load x3 with value 0x7719944440090eff
sw x3, 0(x2) # store 0x7719944440090eff in memory
flw f20, 0(x2) # load 0x7719944440090eff from memory into f20
fnmsub.s f22, f6, f21, f20, dyn # perform operation
fnmsub.s f22, f6, f21, f20, rdn # perform operation
fnmsub.s f22, f6, f21, f20, rmm # perform operation
fnmsub.s f22, f6, f21, f20, rne # perform operation
fnmsub.s f22, f6, f21, f20, rtz # perform operation
fnmsub.s f22, f6, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x95e0eb2633b789e8 # load x3 with value 0x95e0eb2633b789e8
sw x3, 0(x2) # store 0x95e0eb2633b789e8 in memory
flw f9, 0(x2) # load 0x95e0eb2633b789e8 from memory into f9
fnmsub.s f23, f3, f2, f9, dyn # perform operation
fnmsub.s f23, f3, f2, f9, rdn # perform operation
fnmsub.s f23, f3, f2, f9, rmm # perform operation
fnmsub.s f23, f3, f2, f9, rne # perform operation
fnmsub.s f23, f3, f2, f9, rtz # perform operation
fnmsub.s f23, f3, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f3, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f3, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f3, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f3, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f3, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x73a3c5964d319f33 # load x3 with value 0x73a3c5964d319f33
sw x3, 0(x2) # store 0x73a3c5964d319f33 in memory
flw f10, 0(x2) # load 0x73a3c5964d319f33 from memory into f10
fnmsub.s f2, f25, f29, f10, dyn # perform operation
fnmsub.s f2, f25, f29, f10, rdn # perform operation
fnmsub.s f2, f25, f29, f10, rmm # perform operation
fnmsub.s f2, f25, f29, f10, rne # perform operation
fnmsub.s f2, f25, f29, f10, rtz # perform operation
fnmsub.s f2, f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xbade920c9310e3be # load x3 with value 0xbade920c9310e3be
sw x3, 0(x2) # store 0xbade920c9310e3be in memory
flw f24, 0(x2) # load 0xbade920c9310e3be from memory into f24
fnmsub.s f5, f18, f17, f24, dyn # perform operation
fnmsub.s f5, f18, f17, f24, rdn # perform operation
fnmsub.s f5, f18, f17, f24, rmm # perform operation
fnmsub.s f5, f18, f17, f24, rne # perform operation
fnmsub.s f5, f18, f17, f24, rtz # perform operation
fnmsub.s f5, f18, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x11b474a7e01dba92 # load x3 with value 0x11b474a7e01dba92
sw x3, 0(x2) # store 0x11b474a7e01dba92 in memory
flw f3, 0(x2) # load 0x11b474a7e01dba92 from memory into f3
fnmsub.s f18, f31, f10, f3, dyn # perform operation
fnmsub.s f18, f31, f10, f3, rdn # perform operation
fnmsub.s f18, f31, f10, f3, rmm # perform operation
fnmsub.s f18, f31, f10, f3, rne # perform operation
fnmsub.s f18, f31, f10, f3, rtz # perform operation
fnmsub.s f18, f31, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f31, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x4e016b61da4ea50a # load x3 with value 0x4e016b61da4ea50a
sw x3, 0(x2) # store 0x4e016b61da4ea50a in memory
flw f31, 0(x2) # load 0x4e016b61da4ea50a from memory into f31
fnmsub.s f7, f3, f1, f31, dyn # perform operation
fnmsub.s f7, f3, f1, f31, rdn # perform operation
fnmsub.s f7, f3, f1, f31, rmm # perform operation
fnmsub.s f7, f3, f1, f31, rne # perform operation
fnmsub.s f7, f3, f1, f31, rtz # perform operation
fnmsub.s f7, f3, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f3, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x56fc7c10c7440dfd # load x3 with value 0x56fc7c10c7440dfd
sw x3, 0(x2) # store 0x56fc7c10c7440dfd in memory
flw f2, 0(x2) # load 0x56fc7c10c7440dfd from memory into f2
fnmsub.s f1, f17, f11, f2, dyn # perform operation
fnmsub.s f1, f17, f11, f2, rdn # perform operation
fnmsub.s f1, f17, f11, f2, rmm # perform operation
fnmsub.s f1, f17, f11, f2, rne # perform operation
fnmsub.s f1, f17, f11, f2, rtz # perform operation
fnmsub.s f1, f17, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f17, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f17, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f17, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f17, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f17, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x13289764ef5312fd # load x3 with value 0x13289764ef5312fd
sw x3, 0(x2) # store 0x13289764ef5312fd in memory
flw f14, 0(x2) # load 0x13289764ef5312fd from memory into f14
fnmsub.s f27, f24, f9, f14, dyn # perform operation
fnmsub.s f27, f24, f9, f14, rdn # perform operation
fnmsub.s f27, f24, f9, f14, rmm # perform operation
fnmsub.s f27, f24, f9, f14, rne # perform operation
fnmsub.s f27, f24, f9, f14, rtz # perform operation
fnmsub.s f27, f24, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x829ee2e818ec4558 # load x3 with value 0x829ee2e818ec4558
sw x3, 0(x2) # store 0x829ee2e818ec4558 in memory
flw f22, 0(x2) # load 0x829ee2e818ec4558 from memory into f22
fnmsub.s f19, f14, f5, f22, dyn # perform operation
fnmsub.s f19, f14, f5, f22, rdn # perform operation
fnmsub.s f19, f14, f5, f22, rmm # perform operation
fnmsub.s f19, f14, f5, f22, rne # perform operation
fnmsub.s f19, f14, f5, f22, rtz # perform operation
fnmsub.s f19, f14, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xc44c6d44a487853 # load x3 with value 0xc44c6d44a487853
sw x3, 0(x2) # store 0xc44c6d44a487853 in memory
flw f20, 0(x2) # load 0xc44c6d44a487853 from memory into f20
fnmsub.s f15, f1, f21, f20, dyn # perform operation
fnmsub.s f15, f1, f21, f20, rdn # perform operation
fnmsub.s f15, f1, f21, f20, rmm # perform operation
fnmsub.s f15, f1, f21, f20, rne # perform operation
fnmsub.s f15, f1, f21, f20, rtz # perform operation
fnmsub.s f15, f1, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x6cd860055b7d13bc # load x3 with value 0x6cd860055b7d13bc
sw x3, 0(x2) # store 0x6cd860055b7d13bc in memory
flw f5, 0(x2) # load 0x6cd860055b7d13bc from memory into f5
fnmsub.s f17, f11, f9, f5, dyn # perform operation
fnmsub.s f17, f11, f9, f5, rdn # perform operation
fnmsub.s f17, f11, f9, f5, rmm # perform operation
fnmsub.s f17, f11, f9, f5, rne # perform operation
fnmsub.s f17, f11, f9, f5, rtz # perform operation
fnmsub.s f17, f11, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x39c484d5df98b5b2 # load x3 with value 0x39c484d5df98b5b2
sw x3, 0(x2) # store 0x39c484d5df98b5b2 in memory
flw f5, 0(x2) # load 0x39c484d5df98b5b2 from memory into f5
fnmsub.s f10, f20, f6, f5, dyn # perform operation
fnmsub.s f10, f20, f6, f5, rdn # perform operation
fnmsub.s f10, f20, f6, f5, rmm # perform operation
fnmsub.s f10, f20, f6, f5, rne # perform operation
fnmsub.s f10, f20, f6, f5, rtz # perform operation
fnmsub.s f10, f20, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xe19d13ba809097e6 # load x3 with value 0xe19d13ba809097e6
sw x3, 0(x2) # store 0xe19d13ba809097e6 in memory
flw f9, 0(x2) # load 0xe19d13ba809097e6 from memory into f9
fnmsub.s f24, f13, f12, f9, dyn # perform operation
fnmsub.s f24, f13, f12, f9, rdn # perform operation
fnmsub.s f24, f13, f12, f9, rmm # perform operation
fnmsub.s f24, f13, f12, f9, rne # perform operation
fnmsub.s f24, f13, f12, f9, rtz # perform operation
fnmsub.s f24, f13, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xa96945e1584ad177 # load x3 with value 0xa96945e1584ad177
sw x3, 0(x2) # store 0xa96945e1584ad177 in memory
flw f3, 0(x2) # load 0xa96945e1584ad177 from memory into f3
fnmsub.s f23, f8, f6, f3, dyn # perform operation
fnmsub.s f23, f8, f6, f3, rdn # perform operation
fnmsub.s f23, f8, f6, f3, rmm # perform operation
fnmsub.s f23, f8, f6, f3, rne # perform operation
fnmsub.s f23, f8, f6, f3, rtz # perform operation
fnmsub.s f23, f8, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x89b22e91f17c754b # load x3 with value 0x89b22e91f17c754b
sw x3, 0(x2) # store 0x89b22e91f17c754b in memory
flw f21, 0(x2) # load 0x89b22e91f17c754b from memory into f21
fnmsub.s f2, f1, f18, f21, dyn # perform operation
fnmsub.s f2, f1, f18, f21, rdn # perform operation
fnmsub.s f2, f1, f18, f21, rmm # perform operation
fnmsub.s f2, f1, f18, f21, rne # perform operation
fnmsub.s f2, f1, f18, f21, rtz # perform operation
fnmsub.s f2, f1, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x10c7d437dc39a4ab # load x3 with value 0x10c7d437dc39a4ab
sw x3, 0(x2) # store 0x10c7d437dc39a4ab in memory
flw f3, 0(x2) # load 0x10c7d437dc39a4ab from memory into f3
fnmsub.s f14, f24, f15, f3, dyn # perform operation
fnmsub.s f14, f24, f15, f3, rdn # perform operation
fnmsub.s f14, f24, f15, f3, rmm # perform operation
fnmsub.s f14, f24, f15, f3, rne # perform operation
fnmsub.s f14, f24, f15, f3, rtz # perform operation
fnmsub.s f14, f24, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f24, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x5d5ba831e2012728 # load x3 with value 0x5d5ba831e2012728
sw x3, 0(x2) # store 0x5d5ba831e2012728 in memory
flw f26, 0(x2) # load 0x5d5ba831e2012728 from memory into f26
fnmsub.s f10, f15, f29, f26, dyn # perform operation
fnmsub.s f10, f15, f29, f26, rdn # perform operation
fnmsub.s f10, f15, f29, f26, rmm # perform operation
fnmsub.s f10, f15, f29, f26, rne # perform operation
fnmsub.s f10, f15, f29, f26, rtz # perform operation
fnmsub.s f10, f15, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xadd6e431e1c043c3 # load x3 with value 0xadd6e431e1c043c3
sw x3, 0(x2) # store 0xadd6e431e1c043c3 in memory
flw f26, 0(x2) # load 0xadd6e431e1c043c3 from memory into f26
fnmsub.s f11, f16, f15, f26, dyn # perform operation
fnmsub.s f11, f16, f15, f26, rdn # perform operation
fnmsub.s f11, f16, f15, f26, rmm # perform operation
fnmsub.s f11, f16, f15, f26, rne # perform operation
fnmsub.s f11, f16, f15, f26, rtz # perform operation
fnmsub.s f11, f16, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x4489c399a5377ca5 # load x3 with value 0x4489c399a5377ca5
sw x3, 0(x2) # store 0x4489c399a5377ca5 in memory
flw f23, 0(x2) # load 0x4489c399a5377ca5 from memory into f23
fnmsub.s f24, f26, f1, f23, dyn # perform operation
fnmsub.s f24, f26, f1, f23, rdn # perform operation
fnmsub.s f24, f26, f1, f23, rmm # perform operation
fnmsub.s f24, f26, f1, f23, rne # perform operation
fnmsub.s f24, f26, f1, f23, rtz # perform operation
fnmsub.s f24, f26, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f26, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f26, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f26, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f26, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f26, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xf2fe38d899bdbb10 # load x3 with value 0xf2fe38d899bdbb10
sw x3, 0(x2) # store 0xf2fe38d899bdbb10 in memory
flw f17, 0(x2) # load 0xf2fe38d899bdbb10 from memory into f17
fnmsub.s f12, f14, f10, f17, dyn # perform operation
fnmsub.s f12, f14, f10, f17, rdn # perform operation
fnmsub.s f12, f14, f10, f17, rmm # perform operation
fnmsub.s f12, f14, f10, f17, rne # perform operation
fnmsub.s f12, f14, f10, f17, rtz # perform operation
fnmsub.s f12, f14, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f14, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x78ad6add09856e20 # load x3 with value 0x78ad6add09856e20
sw x3, 0(x2) # store 0x78ad6add09856e20 in memory
flw f23, 0(x2) # load 0x78ad6add09856e20 from memory into f23
fnmsub.s f18, f30, f1, f23, dyn # perform operation
fnmsub.s f18, f30, f1, f23, rdn # perform operation
fnmsub.s f18, f30, f1, f23, rmm # perform operation
fnmsub.s f18, f30, f1, f23, rne # perform operation
fnmsub.s f18, f30, f1, f23, rtz # perform operation
fnmsub.s f18, f30, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xa902b621b1df7073 # load x3 with value 0xa902b621b1df7073
sw x3, 0(x2) # store 0xa902b621b1df7073 in memory
flw f31, 0(x2) # load 0xa902b621b1df7073 from memory into f31
fnmsub.s f28, f15, f24, f31, dyn # perform operation
fnmsub.s f28, f15, f24, f31, rdn # perform operation
fnmsub.s f28, f15, f24, f31, rmm # perform operation
fnmsub.s f28, f15, f24, f31, rne # perform operation
fnmsub.s f28, f15, f24, f31, rtz # perform operation
fnmsub.s f28, f15, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x2b73a4aea39b7a20 # load x3 with value 0x2b73a4aea39b7a20
sw x3, 0(x2) # store 0x2b73a4aea39b7a20 in memory
flw f19, 0(x2) # load 0x2b73a4aea39b7a20 from memory into f19
fnmsub.s f17, f30, f21, f19, dyn # perform operation
fnmsub.s f17, f30, f21, f19, rdn # perform operation
fnmsub.s f17, f30, f21, f19, rmm # perform operation
fnmsub.s f17, f30, f21, f19, rne # perform operation
fnmsub.s f17, f30, f21, f19, rtz # perform operation
fnmsub.s f17, f30, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f30, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x913bfd678535da61 # load x3 with value 0x913bfd678535da61
sw x3, 0(x2) # store 0x913bfd678535da61 in memory
flw f23, 0(x2) # load 0x913bfd678535da61 from memory into f23
fnmsub.s f8, f7, f11, f23, dyn # perform operation
fnmsub.s f8, f7, f11, f23, rdn # perform operation
fnmsub.s f8, f7, f11, f23, rmm # perform operation
fnmsub.s f8, f7, f11, f23, rne # perform operation
fnmsub.s f8, f7, f11, f23, rtz # perform operation
fnmsub.s f8, f7, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xb1d8bf2e56b00eef # load x3 with value 0xb1d8bf2e56b00eef
sw x3, 0(x2) # store 0xb1d8bf2e56b00eef in memory
flw f29, 0(x2) # load 0xb1d8bf2e56b00eef from memory into f29
fnmsub.s f13, f17, f10, f29, dyn # perform operation
fnmsub.s f13, f17, f10, f29, rdn # perform operation
fnmsub.s f13, f17, f10, f29, rmm # perform operation
fnmsub.s f13, f17, f10, f29, rne # perform operation
fnmsub.s f13, f17, f10, f29, rtz # perform operation
fnmsub.s f13, f17, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x900e7783c9f871cc # load x3 with value 0x900e7783c9f871cc
sw x3, 0(x2) # store 0x900e7783c9f871cc in memory
flw f24, 0(x2) # load 0x900e7783c9f871cc from memory into f24
fnmsub.s f9, f13, f28, f24, dyn # perform operation
fnmsub.s f9, f13, f28, f24, rdn # perform operation
fnmsub.s f9, f13, f28, f24, rmm # perform operation
fnmsub.s f9, f13, f28, f24, rne # perform operation
fnmsub.s f9, f13, f28, f24, rtz # perform operation
fnmsub.s f9, f13, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xdaf7ae6735179ac5 # load x3 with value 0xdaf7ae6735179ac5
sw x3, 0(x2) # store 0xdaf7ae6735179ac5 in memory
flw f14, 0(x2) # load 0xdaf7ae6735179ac5 from memory into f14
fnmsub.s f13, f30, f6, f14, dyn # perform operation
fnmsub.s f13, f30, f6, f14, rdn # perform operation
fnmsub.s f13, f30, f6, f14, rmm # perform operation
fnmsub.s f13, f30, f6, f14, rne # perform operation
fnmsub.s f13, f30, f6, f14, rtz # perform operation
fnmsub.s f13, f30, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f30, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xc82fb1f978ad3e3c # load x3 with value 0xc82fb1f978ad3e3c
sw x3, 0(x2) # store 0xc82fb1f978ad3e3c in memory
flw f31, 0(x2) # load 0xc82fb1f978ad3e3c from memory into f31
fnmsub.s f2, f24, f19, f31, dyn # perform operation
fnmsub.s f2, f24, f19, f31, rdn # perform operation
fnmsub.s f2, f24, f19, f31, rmm # perform operation
fnmsub.s f2, f24, f19, f31, rne # perform operation
fnmsub.s f2, f24, f19, f31, rtz # perform operation
fnmsub.s f2, f24, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x560641abc35fcdb # load x3 with value 0x560641abc35fcdb
sw x3, 0(x2) # store 0x560641abc35fcdb in memory
flw f1, 0(x2) # load 0x560641abc35fcdb from memory into f1
fnmsub.s f19, f31, f21, f1, dyn # perform operation
fnmsub.s f19, f31, f21, f1, rdn # perform operation
fnmsub.s f19, f31, f21, f1, rmm # perform operation
fnmsub.s f19, f31, f21, f1, rne # perform operation
fnmsub.s f19, f31, f21, f1, rtz # perform operation
fnmsub.s f19, f31, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x20fa509e6ea01d44 # load x3 with value 0x20fa509e6ea01d44
sw x3, 0(x2) # store 0x20fa509e6ea01d44 in memory
flw f16, 0(x2) # load 0x20fa509e6ea01d44 from memory into f16
fnmsub.s f8, f12, f31, f16, dyn # perform operation
fnmsub.s f8, f12, f31, f16, rdn # perform operation
fnmsub.s f8, f12, f31, f16, rmm # perform operation
fnmsub.s f8, f12, f31, f16, rne # perform operation
fnmsub.s f8, f12, f31, f16, rtz # perform operation
fnmsub.s f8, f12, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f12, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x48d8c5cbe3951dd2 # load x3 with value 0x48d8c5cbe3951dd2
sw x3, 0(x2) # store 0x48d8c5cbe3951dd2 in memory
flw f13, 0(x2) # load 0x48d8c5cbe3951dd2 from memory into f13
fnmsub.s f12, f2, f27, f13, dyn # perform operation
fnmsub.s f12, f2, f27, f13, rdn # perform operation
fnmsub.s f12, f2, f27, f13, rmm # perform operation
fnmsub.s f12, f2, f27, f13, rne # perform operation
fnmsub.s f12, f2, f27, f13, rtz # perform operation
fnmsub.s f12, f2, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xf386ba56aa6b2b8f # load x3 with value 0xf386ba56aa6b2b8f
sw x3, 0(x2) # store 0xf386ba56aa6b2b8f in memory
flw f1, 0(x2) # load 0xf386ba56aa6b2b8f from memory into f1
fnmsub.s f12, f11, f25, f1, dyn # perform operation
fnmsub.s f12, f11, f25, f1, rdn # perform operation
fnmsub.s f12, f11, f25, f1, rmm # perform operation
fnmsub.s f12, f11, f25, f1, rne # perform operation
fnmsub.s f12, f11, f25, f1, rtz # perform operation
fnmsub.s f12, f11, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x149a5b1205812ebf # load x3 with value 0x149a5b1205812ebf
sw x3, 0(x2) # store 0x149a5b1205812ebf in memory
flw f24, 0(x2) # load 0x149a5b1205812ebf from memory into f24
fnmsub.s f20, f17, f22, f24, dyn # perform operation
fnmsub.s f20, f17, f22, f24, rdn # perform operation
fnmsub.s f20, f17, f22, f24, rmm # perform operation
fnmsub.s f20, f17, f22, f24, rne # perform operation
fnmsub.s f20, f17, f22, f24, rtz # perform operation
fnmsub.s f20, f17, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f17, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f17, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f17, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f17, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f17, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x97deeec3f261062f # load x3 with value 0x97deeec3f261062f
sw x3, 0(x2) # store 0x97deeec3f261062f in memory
flw f29, 0(x2) # load 0x97deeec3f261062f from memory into f29
fnmsub.s f18, f2, f8, f29, dyn # perform operation
fnmsub.s f18, f2, f8, f29, rdn # perform operation
fnmsub.s f18, f2, f8, f29, rmm # perform operation
fnmsub.s f18, f2, f8, f29, rne # perform operation
fnmsub.s f18, f2, f8, f29, rtz # perform operation
fnmsub.s f18, f2, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x4088373f2118237 # load x3 with value 0x4088373f2118237
sw x3, 0(x2) # store 0x4088373f2118237 in memory
flw f30, 0(x2) # load 0x4088373f2118237 from memory into f30
fnmsub.s f16, f17, f5, f30, dyn # perform operation
fnmsub.s f16, f17, f5, f30, rdn # perform operation
fnmsub.s f16, f17, f5, f30, rmm # perform operation
fnmsub.s f16, f17, f5, f30, rne # perform operation
fnmsub.s f16, f17, f5, f30, rtz # perform operation
fnmsub.s f16, f17, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xc217f4807f3747f4 # load x3 with value 0xc217f4807f3747f4
sw x3, 0(x2) # store 0xc217f4807f3747f4 in memory
flw f3, 0(x2) # load 0xc217f4807f3747f4 from memory into f3
fnmsub.s f7, f14, f25, f3, dyn # perform operation
fnmsub.s f7, f14, f25, f3, rdn # perform operation
fnmsub.s f7, f14, f25, f3, rmm # perform operation
fnmsub.s f7, f14, f25, f3, rne # perform operation
fnmsub.s f7, f14, f25, f3, rtz # perform operation
fnmsub.s f7, f14, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x6f1fc4ed51e7658a # load x3 with value 0x6f1fc4ed51e7658a
sw x3, 0(x2) # store 0x6f1fc4ed51e7658a in memory
flw f8, 0(x2) # load 0x6f1fc4ed51e7658a from memory into f8
fnmsub.s f5, f7, f18, f8, dyn # perform operation
fnmsub.s f5, f7, f18, f8, rdn # perform operation
fnmsub.s f5, f7, f18, f8, rmm # perform operation
fnmsub.s f5, f7, f18, f8, rne # perform operation
fnmsub.s f5, f7, f18, f8, rtz # perform operation
fnmsub.s f5, f7, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x1d9266ae8392e9e # load x3 with value 0x1d9266ae8392e9e
sw x3, 0(x2) # store 0x1d9266ae8392e9e in memory
flw f24, 0(x2) # load 0x1d9266ae8392e9e from memory into f24
fnmsub.s f21, f15, f2, f24, dyn # perform operation
fnmsub.s f21, f15, f2, f24, rdn # perform operation
fnmsub.s f21, f15, f2, f24, rmm # perform operation
fnmsub.s f21, f15, f2, f24, rne # perform operation
fnmsub.s f21, f15, f2, f24, rtz # perform operation
fnmsub.s f21, f15, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x6b9bd1e708c707a4 # load x3 with value 0x6b9bd1e708c707a4
sw x3, 0(x2) # store 0x6b9bd1e708c707a4 in memory
flw f3, 0(x2) # load 0x6b9bd1e708c707a4 from memory into f3
fnmsub.s f9, f30, f8, f3, dyn # perform operation
fnmsub.s f9, f30, f8, f3, rdn # perform operation
fnmsub.s f9, f30, f8, f3, rmm # perform operation
fnmsub.s f9, f30, f8, f3, rne # perform operation
fnmsub.s f9, f30, f8, f3, rtz # perform operation
fnmsub.s f9, f30, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x1aaf7908b5f1dd27 # load x3 with value 0x1aaf7908b5f1dd27
sw x3, 0(x2) # store 0x1aaf7908b5f1dd27 in memory
flw f15, 0(x2) # load 0x1aaf7908b5f1dd27 from memory into f15
fnmsub.s f8, f9, f20, f15, dyn # perform operation
fnmsub.s f8, f9, f20, f15, rdn # perform operation
fnmsub.s f8, f9, f20, f15, rmm # perform operation
fnmsub.s f8, f9, f20, f15, rne # perform operation
fnmsub.s f8, f9, f20, f15, rtz # perform operation
fnmsub.s f8, f9, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x2bd82645f67f43c1 # load x3 with value 0x2bd82645f67f43c1
sw x3, 0(x2) # store 0x2bd82645f67f43c1 in memory
flw f13, 0(x2) # load 0x2bd82645f67f43c1 from memory into f13
fnmsub.s f25, f7, f19, f13, dyn # perform operation
fnmsub.s f25, f7, f19, f13, rdn # perform operation
fnmsub.s f25, f7, f19, f13, rmm # perform operation
fnmsub.s f25, f7, f19, f13, rne # perform operation
fnmsub.s f25, f7, f19, f13, rtz # perform operation
fnmsub.s f25, f7, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xfa83c7f75615dce6 # load x3 with value 0xfa83c7f75615dce6
sw x3, 0(x2) # store 0xfa83c7f75615dce6 in memory
flw f9, 0(x2) # load 0xfa83c7f75615dce6 from memory into f9
fnmsub.s f23, f5, f10, f9, dyn # perform operation
fnmsub.s f23, f5, f10, f9, rdn # perform operation
fnmsub.s f23, f5, f10, f9, rmm # perform operation
fnmsub.s f23, f5, f10, f9, rne # perform operation
fnmsub.s f23, f5, f10, f9, rtz # perform operation
fnmsub.s f23, f5, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f10, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x64322b5af318291e # load x3 with value 0x64322b5af318291e
sw x3, 0(x2) # store 0x64322b5af318291e in memory
flw f19, 0(x2) # load 0x64322b5af318291e from memory into f19
fnmsub.s f26, f9, f6, f19, dyn # perform operation
fnmsub.s f26, f9, f6, f19, rdn # perform operation
fnmsub.s f26, f9, f6, f19, rmm # perform operation
fnmsub.s f26, f9, f6, f19, rne # perform operation
fnmsub.s f26, f9, f6, f19, rtz # perform operation
fnmsub.s f26, f9, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xb468bc0a9b1ae12a # load x3 with value 0xb468bc0a9b1ae12a
sw x3, 0(x2) # store 0xb468bc0a9b1ae12a in memory
flw f20, 0(x2) # load 0xb468bc0a9b1ae12a from memory into f20
fnmsub.s f24, f12, f1, f20, dyn # perform operation
fnmsub.s f24, f12, f1, f20, rdn # perform operation
fnmsub.s f24, f12, f1, f20, rmm # perform operation
fnmsub.s f24, f12, f1, f20, rne # perform operation
fnmsub.s f24, f12, f1, f20, rtz # perform operation
fnmsub.s f24, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x29c0806ea2fc00dc # load x3 with value 0x29c0806ea2fc00dc
sw x3, 0(x2) # store 0x29c0806ea2fc00dc in memory
flw f24, 0(x2) # load 0x29c0806ea2fc00dc from memory into f24
fnmsub.s f6, f12, f17, f24, dyn # perform operation
fnmsub.s f6, f12, f17, f24, rdn # perform operation
fnmsub.s f6, f12, f17, f24, rmm # perform operation
fnmsub.s f6, f12, f17, f24, rne # perform operation
fnmsub.s f6, f12, f17, f24, rtz # perform operation
fnmsub.s f6, f12, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f12, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x3c2503e5f2276ced # load x3 with value 0x3c2503e5f2276ced
sw x3, 0(x2) # store 0x3c2503e5f2276ced in memory
flw f21, 0(x2) # load 0x3c2503e5f2276ced from memory into f21
fnmsub.s f23, f12, f18, f21, dyn # perform operation
fnmsub.s f23, f12, f18, f21, rdn # perform operation
fnmsub.s f23, f12, f18, f21, rmm # perform operation
fnmsub.s f23, f12, f18, f21, rne # perform operation
fnmsub.s f23, f12, f18, f21, rtz # perform operation
fnmsub.s f23, f12, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x349bd47a186b268e # load x3 with value 0x349bd47a186b268e
sw x3, 0(x2) # store 0x349bd47a186b268e in memory
flw f18, 0(x2) # load 0x349bd47a186b268e from memory into f18
fnmsub.s f15, f17, f20, f18, dyn # perform operation
fnmsub.s f15, f17, f20, f18, rdn # perform operation
fnmsub.s f15, f17, f20, f18, rmm # perform operation
fnmsub.s f15, f17, f20, f18, rne # perform operation
fnmsub.s f15, f17, f20, f18, rtz # perform operation
fnmsub.s f15, f17, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x8fc03523aeecb9f8 # load x3 with value 0x8fc03523aeecb9f8
sw x3, 0(x2) # store 0x8fc03523aeecb9f8 in memory
flw f29, 0(x2) # load 0x8fc03523aeecb9f8 from memory into f29
fnmsub.s f20, f19, f13, f29, dyn # perform operation
fnmsub.s f20, f19, f13, f29, rdn # perform operation
fnmsub.s f20, f19, f13, f29, rmm # perform operation
fnmsub.s f20, f19, f13, f29, rne # perform operation
fnmsub.s f20, f19, f13, f29, rtz # perform operation
fnmsub.s f20, f19, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x105b38be2d5cb79a # load x3 with value 0x105b38be2d5cb79a
sw x3, 0(x2) # store 0x105b38be2d5cb79a in memory
flw f11, 0(x2) # load 0x105b38be2d5cb79a from memory into f11
fnmsub.s f21, f18, f1, f11, dyn # perform operation
fnmsub.s f21, f18, f1, f11, rdn # perform operation
fnmsub.s f21, f18, f1, f11, rmm # perform operation
fnmsub.s f21, f18, f1, f11, rne # perform operation
fnmsub.s f21, f18, f1, f11, rtz # perform operation
fnmsub.s f21, f18, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x1938de4f65021374 # load x3 with value 0x1938de4f65021374
sw x3, 0(x2) # store 0x1938de4f65021374 in memory
flw f14, 0(x2) # load 0x1938de4f65021374 from memory into f14
fnmsub.s f26, f27, f28, f14, dyn # perform operation
fnmsub.s f26, f27, f28, f14, rdn # perform operation
fnmsub.s f26, f27, f28, f14, rmm # perform operation
fnmsub.s f26, f27, f28, f14, rne # perform operation
fnmsub.s f26, f27, f28, f14, rtz # perform operation
fnmsub.s f26, f27, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f28, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xfe525bf23f7ee7d0 # load x3 with value 0xfe525bf23f7ee7d0
sw x3, 0(x2) # store 0xfe525bf23f7ee7d0 in memory
flw f3, 0(x2) # load 0xfe525bf23f7ee7d0 from memory into f3
fnmsub.s f29, f25, f21, f3, dyn # perform operation
fnmsub.s f29, f25, f21, f3, rdn # perform operation
fnmsub.s f29, f25, f21, f3, rmm # perform operation
fnmsub.s f29, f25, f21, f3, rne # perform operation
fnmsub.s f29, f25, f21, f3, rtz # perform operation
fnmsub.s f29, f25, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f25, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x7dccaf4b4af5cdae # load x3 with value 0x7dccaf4b4af5cdae
sw x3, 0(x2) # store 0x7dccaf4b4af5cdae in memory
flw f16, 0(x2) # load 0x7dccaf4b4af5cdae from memory into f16
fnmsub.s f5, f27, f19, f16, dyn # perform operation
fnmsub.s f5, f27, f19, f16, rdn # perform operation
fnmsub.s f5, f27, f19, f16, rmm # perform operation
fnmsub.s f5, f27, f19, f16, rne # perform operation
fnmsub.s f5, f27, f19, f16, rtz # perform operation
fnmsub.s f5, f27, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xc7017de679563995 # load x3 with value 0xc7017de679563995
sw x3, 0(x2) # store 0xc7017de679563995 in memory
flw f1, 0(x2) # load 0xc7017de679563995 from memory into f1
fnmsub.s f31, f11, f18, f1, dyn # perform operation
fnmsub.s f31, f11, f18, f1, rdn # perform operation
fnmsub.s f31, f11, f18, f1, rmm # perform operation
fnmsub.s f31, f11, f18, f1, rne # perform operation
fnmsub.s f31, f11, f18, f1, rtz # perform operation
fnmsub.s f31, f11, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xa71be5427cabf81f # load x3 with value 0xa71be5427cabf81f
sw x3, 0(x2) # store 0xa71be5427cabf81f in memory
flw f28, 0(x2) # load 0xa71be5427cabf81f from memory into f28
fnmsub.s f30, f16, f25, f28, dyn # perform operation
fnmsub.s f30, f16, f25, f28, rdn # perform operation
fnmsub.s f30, f16, f25, f28, rmm # perform operation
fnmsub.s f30, f16, f25, f28, rne # perform operation
fnmsub.s f30, f16, f25, f28, rtz # perform operation
fnmsub.s f30, f16, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x3ae4a700760b06d1 # load x3 with value 0x3ae4a700760b06d1
sw x3, 0(x2) # store 0x3ae4a700760b06d1 in memory
flw f7, 0(x2) # load 0x3ae4a700760b06d1 from memory into f7
fnmsub.s f25, f27, f24, f7, dyn # perform operation
fnmsub.s f25, f27, f24, f7, rdn # perform operation
fnmsub.s f25, f27, f24, f7, rmm # perform operation
fnmsub.s f25, f27, f24, f7, rne # perform operation
fnmsub.s f25, f27, f24, f7, rtz # perform operation
fnmsub.s f25, f27, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x4bf74015636c2e1a # load x3 with value 0x4bf74015636c2e1a
sw x3, 0(x2) # store 0x4bf74015636c2e1a in memory
flw f24, 0(x2) # load 0x4bf74015636c2e1a from memory into f24
fnmsub.s f29, f17, f6, f24, dyn # perform operation
fnmsub.s f29, f17, f6, f24, rdn # perform operation
fnmsub.s f29, f17, f6, f24, rmm # perform operation
fnmsub.s f29, f17, f6, f24, rne # perform operation
fnmsub.s f29, f17, f6, f24, rtz # perform operation
fnmsub.s f29, f17, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xd0273152291ab807 # load x3 with value 0xd0273152291ab807
sw x3, 0(x2) # store 0xd0273152291ab807 in memory
flw f26, 0(x2) # load 0xd0273152291ab807 from memory into f26
fnmsub.s f15, f17, f9, f26, dyn # perform operation
fnmsub.s f15, f17, f9, f26, rdn # perform operation
fnmsub.s f15, f17, f9, f26, rmm # perform operation
fnmsub.s f15, f17, f9, f26, rne # perform operation
fnmsub.s f15, f17, f9, f26, rtz # perform operation
fnmsub.s f15, f17, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xd3b8c1610f9f48 # load x3 with value 0xd3b8c1610f9f48
sw x3, 0(x2) # store 0xd3b8c1610f9f48 in memory
flw f29, 0(x2) # load 0xd3b8c1610f9f48 from memory into f29
fnmsub.s f5, f18, f9, f29, dyn # perform operation
fnmsub.s f5, f18, f9, f29, rdn # perform operation
fnmsub.s f5, f18, f9, f29, rmm # perform operation
fnmsub.s f5, f18, f9, f29, rne # perform operation
fnmsub.s f5, f18, f9, f29, rtz # perform operation
fnmsub.s f5, f18, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x8771bf0eb777fa8f # load x3 with value 0x8771bf0eb777fa8f
sw x3, 0(x2) # store 0x8771bf0eb777fa8f in memory
flw f13, 0(x2) # load 0x8771bf0eb777fa8f from memory into f13
fnmsub.s f17, f24, f11, f13, dyn # perform operation
fnmsub.s f17, f24, f11, f13, rdn # perform operation
fnmsub.s f17, f24, f11, f13, rmm # perform operation
fnmsub.s f17, f24, f11, f13, rne # perform operation
fnmsub.s f17, f24, f11, f13, rtz # perform operation
fnmsub.s f17, f24, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xaea8639492e849ec # load x3 with value 0xaea8639492e849ec
sw x3, 0(x2) # store 0xaea8639492e849ec in memory
flw f1, 0(x2) # load 0xaea8639492e849ec from memory into f1
fnmsub.s f12, f29, f11, f1, dyn # perform operation
fnmsub.s f12, f29, f11, f1, rdn # perform operation
fnmsub.s f12, f29, f11, f1, rmm # perform operation
fnmsub.s f12, f29, f11, f1, rne # perform operation
fnmsub.s f12, f29, f11, f1, rtz # perform operation
fnmsub.s f12, f29, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x9a7a2857480c58c7 # load x3 with value 0x9a7a2857480c58c7
sw x3, 0(x2) # store 0x9a7a2857480c58c7 in memory
flw f3, 0(x2) # load 0x9a7a2857480c58c7 from memory into f3
fnmsub.s f2, f27, f21, f3, dyn # perform operation
fnmsub.s f2, f27, f21, f3, rdn # perform operation
fnmsub.s f2, f27, f21, f3, rmm # perform operation
fnmsub.s f2, f27, f21, f3, rne # perform operation
fnmsub.s f2, f27, f21, f3, rtz # perform operation
fnmsub.s f2, f27, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x98125a971cd03f7d # load x3 with value 0x98125a971cd03f7d
sw x3, 0(x2) # store 0x98125a971cd03f7d in memory
flw f29, 0(x2) # load 0x98125a971cd03f7d from memory into f29
fnmsub.s f28, f24, f22, f29, dyn # perform operation
fnmsub.s f28, f24, f22, f29, rdn # perform operation
fnmsub.s f28, f24, f22, f29, rmm # perform operation
fnmsub.s f28, f24, f22, f29, rne # perform operation
fnmsub.s f28, f24, f22, f29, rtz # perform operation
fnmsub.s f28, f24, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x4cf76c7ff439298c # load x3 with value 0x4cf76c7ff439298c
sw x3, 0(x2) # store 0x4cf76c7ff439298c in memory
flw f8, 0(x2) # load 0x4cf76c7ff439298c from memory into f8
fnmsub.s f20, f14, f9, f8, dyn # perform operation
fnmsub.s f20, f14, f9, f8, rdn # perform operation
fnmsub.s f20, f14, f9, f8, rmm # perform operation
fnmsub.s f20, f14, f9, f8, rne # perform operation
fnmsub.s f20, f14, f9, f8, rtz # perform operation
fnmsub.s f20, f14, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x521e638c8ca194b1 # load x3 with value 0x521e638c8ca194b1
sw x3, 0(x2) # store 0x521e638c8ca194b1 in memory
flw f11, 0(x2) # load 0x521e638c8ca194b1 from memory into f11
fnmsub.s f22, f6, f13, f11, dyn # perform operation
fnmsub.s f22, f6, f13, f11, rdn # perform operation
fnmsub.s f22, f6, f13, f11, rmm # perform operation
fnmsub.s f22, f6, f13, f11, rne # perform operation
fnmsub.s f22, f6, f13, f11, rtz # perform operation
fnmsub.s f22, f6, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xe8dcfbf0415fbf9a # load x3 with value 0xe8dcfbf0415fbf9a
sw x3, 0(x2) # store 0xe8dcfbf0415fbf9a in memory
flw f23, 0(x2) # load 0xe8dcfbf0415fbf9a from memory into f23
fnmsub.s f26, f14, f29, f23, dyn # perform operation
fnmsub.s f26, f14, f29, f23, rdn # perform operation
fnmsub.s f26, f14, f29, f23, rmm # perform operation
fnmsub.s f26, f14, f29, f23, rne # perform operation
fnmsub.s f26, f14, f29, f23, rtz # perform operation
fnmsub.s f26, f14, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x2405dfde0f7048f2 # load x3 with value 0x2405dfde0f7048f2
sw x3, 0(x2) # store 0x2405dfde0f7048f2 in memory
flw f6, 0(x2) # load 0x2405dfde0f7048f2 from memory into f6
fnmsub.s f23, f22, f2, f6, dyn # perform operation
fnmsub.s f23, f22, f2, f6, rdn # perform operation
fnmsub.s f23, f22, f2, f6, rmm # perform operation
fnmsub.s f23, f22, f2, f6, rne # perform operation
fnmsub.s f23, f22, f2, f6, rtz # perform operation
fnmsub.s f23, f22, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x5f1b76c590c14234 # load x3 with value 0x5f1b76c590c14234
sw x3, 0(x2) # store 0x5f1b76c590c14234 in memory
flw f9, 0(x2) # load 0x5f1b76c590c14234 from memory into f9
fnmsub.s f17, f28, f27, f9, dyn # perform operation
fnmsub.s f17, f28, f27, f9, rdn # perform operation
fnmsub.s f17, f28, f27, f9, rmm # perform operation
fnmsub.s f17, f28, f27, f9, rne # perform operation
fnmsub.s f17, f28, f27, f9, rtz # perform operation
fnmsub.s f17, f28, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x82036f1b5978bfb2 # load x3 with value 0x82036f1b5978bfb2
sw x3, 0(x2) # store 0x82036f1b5978bfb2 in memory
flw f1, 0(x2) # load 0x82036f1b5978bfb2 from memory into f1
fnmsub.s f19, f28, f12, f1, dyn # perform operation
fnmsub.s f19, f28, f12, f1, rdn # perform operation
fnmsub.s f19, f28, f12, f1, rmm # perform operation
fnmsub.s f19, f28, f12, f1, rne # perform operation
fnmsub.s f19, f28, f12, f1, rtz # perform operation
fnmsub.s f19, f28, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x7fa91111e5c8da5b # load x3 with value 0x7fa91111e5c8da5b
sw x3, 0(x2) # store 0x7fa91111e5c8da5b in memory
flw f10, 0(x2) # load 0x7fa91111e5c8da5b from memory into f10
fnmsub.s f21, f22, f6, f10, dyn # perform operation
fnmsub.s f21, f22, f6, f10, rdn # perform operation
fnmsub.s f21, f22, f6, f10, rmm # perform operation
fnmsub.s f21, f22, f6, f10, rne # perform operation
fnmsub.s f21, f22, f6, f10, rtz # perform operation
fnmsub.s f21, f22, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xdb6f9dd6cff7dea6 # load x3 with value 0xdb6f9dd6cff7dea6
sw x3, 0(x2) # store 0xdb6f9dd6cff7dea6 in memory
flw f16, 0(x2) # load 0xdb6f9dd6cff7dea6 from memory into f16
fnmsub.s f25, f7, f31, f16, dyn # perform operation
fnmsub.s f25, f7, f31, f16, rdn # perform operation
fnmsub.s f25, f7, f31, f16, rmm # perform operation
fnmsub.s f25, f7, f31, f16, rne # perform operation
fnmsub.s f25, f7, f31, f16, rtz # perform operation
fnmsub.s f25, f7, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x1f3197221f743a95 # load x3 with value 0x1f3197221f743a95
sw x3, 0(x2) # store 0x1f3197221f743a95 in memory
flw f10, 0(x2) # load 0x1f3197221f743a95 from memory into f10
fnmsub.s f11, f16, f23, f10, dyn # perform operation
fnmsub.s f11, f16, f23, f10, rdn # perform operation
fnmsub.s f11, f16, f23, f10, rmm # perform operation
fnmsub.s f11, f16, f23, f10, rne # perform operation
fnmsub.s f11, f16, f23, f10, rtz # perform operation
fnmsub.s f11, f16, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xa3648544bc9c4290 # load x3 with value 0xa3648544bc9c4290
sw x3, 0(x2) # store 0xa3648544bc9c4290 in memory
flw f11, 0(x2) # load 0xa3648544bc9c4290 from memory into f11
fnmsub.s f6, f27, f14, f11, dyn # perform operation
fnmsub.s f6, f27, f14, f11, rdn # perform operation
fnmsub.s f6, f27, f14, f11, rmm # perform operation
fnmsub.s f6, f27, f14, f11, rne # perform operation
fnmsub.s f6, f27, f14, f11, rtz # perform operation
fnmsub.s f6, f27, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f27, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x829603df5348dfcf # load x3 with value 0x829603df5348dfcf
sw x3, 0(x2) # store 0x829603df5348dfcf in memory
flw f28, 0(x2) # load 0x829603df5348dfcf from memory into f28
fnmsub.s f5, f20, f3, f28, dyn # perform operation
fnmsub.s f5, f20, f3, f28, rdn # perform operation
fnmsub.s f5, f20, f3, f28, rmm # perform operation
fnmsub.s f5, f20, f3, f28, rne # perform operation
fnmsub.s f5, f20, f3, f28, rtz # perform operation
fnmsub.s f5, f20, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xc664c83902fe3bdf # load x3 with value 0xc664c83902fe3bdf
sw x3, 0(x2) # store 0xc664c83902fe3bdf in memory
flw f6, 0(x2) # load 0xc664c83902fe3bdf from memory into f6
fnmsub.s f24, f29, f25, f6, dyn # perform operation
fnmsub.s f24, f29, f25, f6, rdn # perform operation
fnmsub.s f24, f29, f25, f6, rmm # perform operation
fnmsub.s f24, f29, f25, f6, rne # perform operation
fnmsub.s f24, f29, f25, f6, rtz # perform operation
fnmsub.s f24, f29, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f29, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x4448537bba06debd # load x3 with value 0x4448537bba06debd
sw x3, 0(x2) # store 0x4448537bba06debd in memory
flw f29, 0(x2) # load 0x4448537bba06debd from memory into f29
fnmsub.s f10, f21, f9, f29, dyn # perform operation
fnmsub.s f10, f21, f9, f29, rdn # perform operation
fnmsub.s f10, f21, f9, f29, rmm # perform operation
fnmsub.s f10, f21, f9, f29, rne # perform operation
fnmsub.s f10, f21, f9, f29, rtz # perform operation
fnmsub.s f10, f21, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xe394b9239c099a0 # load x3 with value 0xe394b9239c099a0
sw x3, 0(x2) # store 0xe394b9239c099a0 in memory
flw f27, 0(x2) # load 0xe394b9239c099a0 from memory into f27
fnmsub.s f1, f13, f29, f27, dyn # perform operation
fnmsub.s f1, f13, f29, f27, rdn # perform operation
fnmsub.s f1, f13, f29, f27, rmm # perform operation
fnmsub.s f1, f13, f29, f27, rne # perform operation
fnmsub.s f1, f13, f29, f27, rtz # perform operation
fnmsub.s f1, f13, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f13, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x11ed52d4b7a4773e # load x3 with value 0x11ed52d4b7a4773e
sw x3, 0(x2) # store 0x11ed52d4b7a4773e in memory
flw f2, 0(x2) # load 0x11ed52d4b7a4773e from memory into f2
fnmsub.s f23, f27, f10, f2, dyn # perform operation
fnmsub.s f23, f27, f10, f2, rdn # perform operation
fnmsub.s f23, f27, f10, f2, rmm # perform operation
fnmsub.s f23, f27, f10, f2, rne # perform operation
fnmsub.s f23, f27, f10, f2, rtz # perform operation
fnmsub.s f23, f27, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xd4bbae8a6878d587 # load x3 with value 0xd4bbae8a6878d587
sw x3, 0(x2) # store 0xd4bbae8a6878d587 in memory
flw f2, 0(x2) # load 0xd4bbae8a6878d587 from memory into f2
fnmsub.s f1, f6, f8, f2, dyn # perform operation
fnmsub.s f1, f6, f8, f2, rdn # perform operation
fnmsub.s f1, f6, f8, f2, rmm # perform operation
fnmsub.s f1, f6, f8, f2, rne # perform operation
fnmsub.s f1, f6, f8, f2, rtz # perform operation
fnmsub.s f1, f6, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xbcc5d6b13d3ecb7e # load x3 with value 0xbcc5d6b13d3ecb7e
sw x3, 0(x2) # store 0xbcc5d6b13d3ecb7e in memory
flw f20, 0(x2) # load 0xbcc5d6b13d3ecb7e from memory into f20
fnmsub.s f3, f11, f9, f20, dyn # perform operation
fnmsub.s f3, f11, f9, f20, rdn # perform operation
fnmsub.s f3, f11, f9, f20, rmm # perform operation
fnmsub.s f3, f11, f9, f20, rne # perform operation
fnmsub.s f3, f11, f9, f20, rtz # perform operation
fnmsub.s f3, f11, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xa6b51b757cb936c7 # load x3 with value 0xa6b51b757cb936c7
sw x3, 0(x2) # store 0xa6b51b757cb936c7 in memory
flw f5, 0(x2) # load 0xa6b51b757cb936c7 from memory into f5
fnmsub.s f7, f29, f10, f5, dyn # perform operation
fnmsub.s f7, f29, f10, f5, rdn # perform operation
fnmsub.s f7, f29, f10, f5, rmm # perform operation
fnmsub.s f7, f29, f10, f5, rne # perform operation
fnmsub.s f7, f29, f10, f5, rtz # perform operation
fnmsub.s f7, f29, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xe25d91b575a0b474 # load x3 with value 0xe25d91b575a0b474
sw x3, 0(x2) # store 0xe25d91b575a0b474 in memory
flw f12, 0(x2) # load 0xe25d91b575a0b474 from memory into f12
fnmsub.s f16, f15, f25, f12, dyn # perform operation
fnmsub.s f16, f15, f25, f12, rdn # perform operation
fnmsub.s f16, f15, f25, f12, rmm # perform operation
fnmsub.s f16, f15, f25, f12, rne # perform operation
fnmsub.s f16, f15, f25, f12, rtz # perform operation
fnmsub.s f16, f15, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x884c9633fbae43a # load x3 with value 0x884c9633fbae43a
sw x3, 0(x2) # store 0x884c9633fbae43a in memory
flw f27, 0(x2) # load 0x884c9633fbae43a from memory into f27
fnmsub.s f29, f19, f13, f27, dyn # perform operation
fnmsub.s f29, f19, f13, f27, rdn # perform operation
fnmsub.s f29, f19, f13, f27, rmm # perform operation
fnmsub.s f29, f19, f13, f27, rne # perform operation
fnmsub.s f29, f19, f13, f27, rtz # perform operation
fnmsub.s f29, f19, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xeca57b4bb74636bf # load x3 with value 0xeca57b4bb74636bf
sw x3, 0(x2) # store 0xeca57b4bb74636bf in memory
flw f12, 0(x2) # load 0xeca57b4bb74636bf from memory into f12
fnmsub.s f11, f30, f31, f12, dyn # perform operation
fnmsub.s f11, f30, f31, f12, rdn # perform operation
fnmsub.s f11, f30, f31, f12, rmm # perform operation
fnmsub.s f11, f30, f31, f12, rne # perform operation
fnmsub.s f11, f30, f31, f12, rtz # perform operation
fnmsub.s f11, f30, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xba0c07a92fe6cc93 # load x3 with value 0xba0c07a92fe6cc93
sw x3, 0(x2) # store 0xba0c07a92fe6cc93 in memory
flw f25, 0(x2) # load 0xba0c07a92fe6cc93 from memory into f25
fnmsub.s f6, f9, f7, f25, dyn # perform operation
fnmsub.s f6, f9, f7, f25, rdn # perform operation
fnmsub.s f6, f9, f7, f25, rmm # perform operation
fnmsub.s f6, f9, f7, f25, rne # perform operation
fnmsub.s f6, f9, f7, f25, rtz # perform operation
fnmsub.s f6, f9, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xbf0bae03110fbf38 # load x3 with value 0xbf0bae03110fbf38
sw x3, 0(x2) # store 0xbf0bae03110fbf38 in memory
flw f14, 0(x2) # load 0xbf0bae03110fbf38 from memory into f14
fnmsub.s f6, f30, f12, f14, dyn # perform operation
fnmsub.s f6, f30, f12, f14, rdn # perform operation
fnmsub.s f6, f30, f12, f14, rmm # perform operation
fnmsub.s f6, f30, f12, f14, rne # perform operation
fnmsub.s f6, f30, f12, f14, rtz # perform operation
fnmsub.s f6, f30, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x798a294992d105eb # load x3 with value 0x798a294992d105eb
sw x3, 0(x2) # store 0x798a294992d105eb in memory
flw f2, 0(x2) # load 0x798a294992d105eb from memory into f2
fnmsub.s f11, f7, f17, f2, dyn # perform operation
fnmsub.s f11, f7, f17, f2, rdn # perform operation
fnmsub.s f11, f7, f17, f2, rmm # perform operation
fnmsub.s f11, f7, f17, f2, rne # perform operation
fnmsub.s f11, f7, f17, f2, rtz # perform operation
fnmsub.s f11, f7, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f7, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xe68b95b8ed451c7a # load x3 with value 0xe68b95b8ed451c7a
sw x3, 0(x2) # store 0xe68b95b8ed451c7a in memory
flw f17, 0(x2) # load 0xe68b95b8ed451c7a from memory into f17
fnmsub.s f15, f7, f22, f17, dyn # perform operation
fnmsub.s f15, f7, f22, f17, rdn # perform operation
fnmsub.s f15, f7, f22, f17, rmm # perform operation
fnmsub.s f15, f7, f22, f17, rne # perform operation
fnmsub.s f15, f7, f22, f17, rtz # perform operation
fnmsub.s f15, f7, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x6095c2e8cb105635 # load x3 with value 0x6095c2e8cb105635
sw x3, 0(x2) # store 0x6095c2e8cb105635 in memory
flw f20, 0(x2) # load 0x6095c2e8cb105635 from memory into f20
fnmsub.s f7, f11, f31, f20, dyn # perform operation
fnmsub.s f7, f11, f31, f20, rdn # perform operation
fnmsub.s f7, f11, f31, f20, rmm # perform operation
fnmsub.s f7, f11, f31, f20, rne # perform operation
fnmsub.s f7, f11, f31, f20, rtz # perform operation
fnmsub.s f7, f11, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x53afb5dd7a0a1b2f # load x3 with value 0x53afb5dd7a0a1b2f
sw x3, 0(x2) # store 0x53afb5dd7a0a1b2f in memory
flw f20, 0(x2) # load 0x53afb5dd7a0a1b2f from memory into f20
fnmsub.s f28, f2, f17, f20, dyn # perform operation
fnmsub.s f28, f2, f17, f20, rdn # perform operation
fnmsub.s f28, f2, f17, f20, rmm # perform operation
fnmsub.s f28, f2, f17, f20, rne # perform operation
fnmsub.s f28, f2, f17, f20, rtz # perform operation
fnmsub.s f28, f2, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f2, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xe40ff8b76bceb238 # load x3 with value 0xe40ff8b76bceb238
sw x3, 0(x2) # store 0xe40ff8b76bceb238 in memory
flw f14, 0(x2) # load 0xe40ff8b76bceb238 from memory into f14
fnmsub.s f8, f19, f22, f14, dyn # perform operation
fnmsub.s f8, f19, f22, f14, rdn # perform operation
fnmsub.s f8, f19, f22, f14, rmm # perform operation
fnmsub.s f8, f19, f22, f14, rne # perform operation
fnmsub.s f8, f19, f22, f14, rtz # perform operation
fnmsub.s f8, f19, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f19, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xf722806270acf99c # load x3 with value 0xf722806270acf99c
sw x3, 0(x2) # store 0xf722806270acf99c in memory
flw f20, 0(x2) # load 0xf722806270acf99c from memory into f20
fnmsub.s f12, f21, f19, f20, dyn # perform operation
fnmsub.s f12, f21, f19, f20, rdn # perform operation
fnmsub.s f12, f21, f19, f20, rmm # perform operation
fnmsub.s f12, f21, f19, f20, rne # perform operation
fnmsub.s f12, f21, f19, f20, rtz # perform operation
fnmsub.s f12, f21, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xa76d4b13fb3ea2d5 # load x3 with value 0xa76d4b13fb3ea2d5
sw x3, 0(x2) # store 0xa76d4b13fb3ea2d5 in memory
flw f23, 0(x2) # load 0xa76d4b13fb3ea2d5 from memory into f23
fnmsub.s f11, f22, f8, f23, dyn # perform operation
fnmsub.s f11, f22, f8, f23, rdn # perform operation
fnmsub.s f11, f22, f8, f23, rmm # perform operation
fnmsub.s f11, f22, f8, f23, rne # perform operation
fnmsub.s f11, f22, f8, f23, rtz # perform operation
fnmsub.s f11, f22, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x86a78fe7962d5683 # load x3 with value 0x86a78fe7962d5683
sw x3, 0(x2) # store 0x86a78fe7962d5683 in memory
flw f12, 0(x2) # load 0x86a78fe7962d5683 from memory into f12
fnmsub.s f14, f17, f10, f12, dyn # perform operation
fnmsub.s f14, f17, f10, f12, rdn # perform operation
fnmsub.s f14, f17, f10, f12, rmm # perform operation
fnmsub.s f14, f17, f10, f12, rne # perform operation
fnmsub.s f14, f17, f10, f12, rtz # perform operation
fnmsub.s f14, f17, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x6bc6962a8810ba29 # load x3 with value 0x6bc6962a8810ba29
sw x3, 0(x2) # store 0x6bc6962a8810ba29 in memory
flw f19, 0(x2) # load 0x6bc6962a8810ba29 from memory into f19
fnmsub.s f9, f27, f15, f19, dyn # perform operation
fnmsub.s f9, f27, f15, f19, rdn # perform operation
fnmsub.s f9, f27, f15, f19, rmm # perform operation
fnmsub.s f9, f27, f15, f19, rne # perform operation
fnmsub.s f9, f27, f15, f19, rtz # perform operation
fnmsub.s f9, f27, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x4ca0bbf75fb6df05 # load x3 with value 0x4ca0bbf75fb6df05
sw x3, 0(x2) # store 0x4ca0bbf75fb6df05 in memory
flw f20, 0(x2) # load 0x4ca0bbf75fb6df05 from memory into f20
fnmsub.s f1, f25, f28, f20, dyn # perform operation
fnmsub.s f1, f25, f28, f20, rdn # perform operation
fnmsub.s f1, f25, f28, f20, rmm # perform operation
fnmsub.s f1, f25, f28, f20, rne # perform operation
fnmsub.s f1, f25, f28, f20, rtz # perform operation
fnmsub.s f1, f25, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x5f0302a0a52ed332 # load x3 with value 0x5f0302a0a52ed332
sw x3, 0(x2) # store 0x5f0302a0a52ed332 in memory
flw f26, 0(x2) # load 0x5f0302a0a52ed332 from memory into f26
fnmsub.s f2, f29, f18, f26, dyn # perform operation
fnmsub.s f2, f29, f18, f26, rdn # perform operation
fnmsub.s f2, f29, f18, f26, rmm # perform operation
fnmsub.s f2, f29, f18, f26, rne # perform operation
fnmsub.s f2, f29, f18, f26, rtz # perform operation
fnmsub.s f2, f29, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x275770f811ca48a0 # load x3 with value 0x275770f811ca48a0
sw x3, 0(x2) # store 0x275770f811ca48a0 in memory
flw f21, 0(x2) # load 0x275770f811ca48a0 from memory into f21
fnmsub.s f9, f14, f13, f21, dyn # perform operation
fnmsub.s f9, f14, f13, f21, rdn # perform operation
fnmsub.s f9, f14, f13, f21, rmm # perform operation
fnmsub.s f9, f14, f13, f21, rne # perform operation
fnmsub.s f9, f14, f13, f21, rtz # perform operation
fnmsub.s f9, f14, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f14, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f14, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f14, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f14, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f14, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x722187c6855d2775 # load x3 with value 0x722187c6855d2775
sw x3, 0(x2) # store 0x722187c6855d2775 in memory
flw f28, 0(x2) # load 0x722187c6855d2775 from memory into f28
fnmsub.s f21, f18, f29, f28, dyn # perform operation
fnmsub.s f21, f18, f29, f28, rdn # perform operation
fnmsub.s f21, f18, f29, f28, rmm # perform operation
fnmsub.s f21, f18, f29, f28, rne # perform operation
fnmsub.s f21, f18, f29, f28, rtz # perform operation
fnmsub.s f21, f18, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xde377d9cf69c30cb # load x3 with value 0xde377d9cf69c30cb
sw x3, 0(x2) # store 0xde377d9cf69c30cb in memory
flw f18, 0(x2) # load 0xde377d9cf69c30cb from memory into f18
fnmsub.s f9, f10, f27, f18, dyn # perform operation
fnmsub.s f9, f10, f27, f18, rdn # perform operation
fnmsub.s f9, f10, f27, f18, rmm # perform operation
fnmsub.s f9, f10, f27, f18, rne # perform operation
fnmsub.s f9, f10, f27, f18, rtz # perform operation
fnmsub.s f9, f10, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x3372b9d248bef1e0 # load x3 with value 0x3372b9d248bef1e0
sw x3, 0(x2) # store 0x3372b9d248bef1e0 in memory
flw f11, 0(x2) # load 0x3372b9d248bef1e0 from memory into f11
fnmsub.s f2, f24, f5, f11, dyn # perform operation
fnmsub.s f2, f24, f5, f11, rdn # perform operation
fnmsub.s f2, f24, f5, f11, rmm # perform operation
fnmsub.s f2, f24, f5, f11, rne # perform operation
fnmsub.s f2, f24, f5, f11, rtz # perform operation
fnmsub.s f2, f24, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xe344d2d2772ddcb # load x3 with value 0xe344d2d2772ddcb
sw x3, 0(x2) # store 0xe344d2d2772ddcb in memory
flw f5, 0(x2) # load 0xe344d2d2772ddcb from memory into f5
fnmsub.s f21, f30, f25, f5, dyn # perform operation
fnmsub.s f21, f30, f25, f5, rdn # perform operation
fnmsub.s f21, f30, f25, f5, rmm # perform operation
fnmsub.s f21, f30, f25, f5, rne # perform operation
fnmsub.s f21, f30, f25, f5, rtz # perform operation
fnmsub.s f21, f30, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x19547b3f0b2c01f4 # load x3 with value 0x19547b3f0b2c01f4
sw x3, 0(x2) # store 0x19547b3f0b2c01f4 in memory
flw f16, 0(x2) # load 0x19547b3f0b2c01f4 from memory into f16
fnmsub.s f6, f28, f22, f16, dyn # perform operation
fnmsub.s f6, f28, f22, f16, rdn # perform operation
fnmsub.s f6, f28, f22, f16, rmm # perform operation
fnmsub.s f6, f28, f22, f16, rne # perform operation
fnmsub.s f6, f28, f22, f16, rtz # perform operation
fnmsub.s f6, f28, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xb5db8b1dc3231cad # load x3 with value 0xb5db8b1dc3231cad
sw x3, 0(x2) # store 0xb5db8b1dc3231cad in memory
flw f24, 0(x2) # load 0xb5db8b1dc3231cad from memory into f24
fnmsub.s f3, f20, f5, f24, dyn # perform operation
fnmsub.s f3, f20, f5, f24, rdn # perform operation
fnmsub.s f3, f20, f5, f24, rmm # perform operation
fnmsub.s f3, f20, f5, f24, rne # perform operation
fnmsub.s f3, f20, f5, f24, rtz # perform operation
fnmsub.s f3, f20, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f20, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x71518526e08557da # load x3 with value 0x71518526e08557da
sw x3, 0(x2) # store 0x71518526e08557da in memory
flw f27, 0(x2) # load 0x71518526e08557da from memory into f27
fnmsub.s f7, f22, f16, f27, dyn # perform operation
fnmsub.s f7, f22, f16, f27, rdn # perform operation
fnmsub.s f7, f22, f16, f27, rmm # perform operation
fnmsub.s f7, f22, f16, f27, rne # perform operation
fnmsub.s f7, f22, f16, f27, rtz # perform operation
fnmsub.s f7, f22, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x789dc7e06a6bc0e0 # load x3 with value 0x789dc7e06a6bc0e0
sw x3, 0(x2) # store 0x789dc7e06a6bc0e0 in memory
flw f28, 0(x2) # load 0x789dc7e06a6bc0e0 from memory into f28
fnmsub.s f30, f10, f11, f28, dyn # perform operation
fnmsub.s f30, f10, f11, f28, rdn # perform operation
fnmsub.s f30, f10, f11, f28, rmm # perform operation
fnmsub.s f30, f10, f11, f28, rne # perform operation
fnmsub.s f30, f10, f11, f28, rtz # perform operation
fnmsub.s f30, f10, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f10, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xd8e9850e01b2fc10 # load x3 with value 0xd8e9850e01b2fc10
sw x3, 0(x2) # store 0xd8e9850e01b2fc10 in memory
flw f13, 0(x2) # load 0xd8e9850e01b2fc10 from memory into f13
fnmsub.s f22, f21, f2, f13, dyn # perform operation
fnmsub.s f22, f21, f2, f13, rdn # perform operation
fnmsub.s f22, f21, f2, f13, rmm # perform operation
fnmsub.s f22, f21, f2, f13, rne # perform operation
fnmsub.s f22, f21, f2, f13, rtz # perform operation
fnmsub.s f22, f21, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x14be8873fac5faf0 # load x3 with value 0x14be8873fac5faf0
sw x3, 0(x2) # store 0x14be8873fac5faf0 in memory
flw f5, 0(x2) # load 0x14be8873fac5faf0 from memory into f5
fnmsub.s f6, f10, f19, f5, dyn # perform operation
fnmsub.s f6, f10, f19, f5, rdn # perform operation
fnmsub.s f6, f10, f19, f5, rmm # perform operation
fnmsub.s f6, f10, f19, f5, rne # perform operation
fnmsub.s f6, f10, f19, f5, rtz # perform operation
fnmsub.s f6, f10, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f10, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f10, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f10, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f10, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f10, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x33c47987ddde92d1 # load x3 with value 0x33c47987ddde92d1
sw x3, 0(x2) # store 0x33c47987ddde92d1 in memory
flw f22, 0(x2) # load 0x33c47987ddde92d1 from memory into f22
fnmsub.s f3, f6, f7, f22, dyn # perform operation
fnmsub.s f3, f6, f7, f22, rdn # perform operation
fnmsub.s f3, f6, f7, f22, rmm # perform operation
fnmsub.s f3, f6, f7, f22, rne # perform operation
fnmsub.s f3, f6, f7, f22, rtz # perform operation
fnmsub.s f3, f6, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x3c41cbc8467f184a # load x3 with value 0x3c41cbc8467f184a
sw x3, 0(x2) # store 0x3c41cbc8467f184a in memory
flw f25, 0(x2) # load 0x3c41cbc8467f184a from memory into f25
fnmsub.s f14, f1, f27, f25, dyn # perform operation
fnmsub.s f14, f1, f27, f25, rdn # perform operation
fnmsub.s f14, f1, f27, f25, rmm # perform operation
fnmsub.s f14, f1, f27, f25, rne # perform operation
fnmsub.s f14, f1, f27, f25, rtz # perform operation
fnmsub.s f14, f1, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f1, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xa6ea60d7eebf7e10 # load x3 with value 0xa6ea60d7eebf7e10
sw x3, 0(x2) # store 0xa6ea60d7eebf7e10 in memory
flw f17, 0(x2) # load 0xa6ea60d7eebf7e10 from memory into f17
fnmsub.s f1, f28, f31, f17, dyn # perform operation
fnmsub.s f1, f28, f31, f17, rdn # perform operation
fnmsub.s f1, f28, f31, f17, rmm # perform operation
fnmsub.s f1, f28, f31, f17, rne # perform operation
fnmsub.s f1, f28, f31, f17, rtz # perform operation
fnmsub.s f1, f28, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f28, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f28, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f28, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f28, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f28, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x24c8f7d37c73e9c # load x3 with value 0x24c8f7d37c73e9c
sw x3, 0(x2) # store 0x24c8f7d37c73e9c in memory
flw f19, 0(x2) # load 0x24c8f7d37c73e9c from memory into f19
fnmsub.s f5, f21, f11, f19, dyn # perform operation
fnmsub.s f5, f21, f11, f19, rdn # perform operation
fnmsub.s f5, f21, f11, f19, rmm # perform operation
fnmsub.s f5, f21, f11, f19, rne # perform operation
fnmsub.s f5, f21, f11, f19, rtz # perform operation
fnmsub.s f5, f21, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x6cdb8155141f0a12 # load x3 with value 0x6cdb8155141f0a12
sw x3, 0(x2) # store 0x6cdb8155141f0a12 in memory
flw f3, 0(x2) # load 0x6cdb8155141f0a12 from memory into f3
fnmsub.s f1, f31, f10, f3, dyn # perform operation
fnmsub.s f1, f31, f10, f3, rdn # perform operation
fnmsub.s f1, f31, f10, f3, rmm # perform operation
fnmsub.s f1, f31, f10, f3, rne # perform operation
fnmsub.s f1, f31, f10, f3, rtz # perform operation
fnmsub.s f1, f31, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x2dc3aec59e2026a4 # load x3 with value 0x2dc3aec59e2026a4
sw x3, 0(x2) # store 0x2dc3aec59e2026a4 in memory
flw f7, 0(x2) # load 0x2dc3aec59e2026a4 from memory into f7
fnmsub.s f30, f20, f3, f7, dyn # perform operation
fnmsub.s f30, f20, f3, f7, rdn # perform operation
fnmsub.s f30, f20, f3, f7, rmm # perform operation
fnmsub.s f30, f20, f3, f7, rne # perform operation
fnmsub.s f30, f20, f3, f7, rtz # perform operation
fnmsub.s f30, f20, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x8d84212088d4686f # load x3 with value 0x8d84212088d4686f
sw x3, 0(x2) # store 0x8d84212088d4686f in memory
flw f18, 0(x2) # load 0x8d84212088d4686f from memory into f18
fnmsub.s f12, f13, f28, f18, dyn # perform operation
fnmsub.s f12, f13, f28, f18, rdn # perform operation
fnmsub.s f12, f13, f28, f18, rmm # perform operation
fnmsub.s f12, f13, f28, f18, rne # perform operation
fnmsub.s f12, f13, f28, f18, rtz # perform operation
fnmsub.s f12, f13, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f13, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xaa7eb3fc67766b39 # load x3 with value 0xaa7eb3fc67766b39
sw x3, 0(x2) # store 0xaa7eb3fc67766b39 in memory
flw f19, 0(x2) # load 0xaa7eb3fc67766b39 from memory into f19
fnmsub.s f29, f14, f26, f19, dyn # perform operation
fnmsub.s f29, f14, f26, f19, rdn # perform operation
fnmsub.s f29, f14, f26, f19, rmm # perform operation
fnmsub.s f29, f14, f26, f19, rne # perform operation
fnmsub.s f29, f14, f26, f19, rtz # perform operation
fnmsub.s f29, f14, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x7fab8aab812fe828 # load x3 with value 0x7fab8aab812fe828
sw x3, 0(x2) # store 0x7fab8aab812fe828 in memory
flw f2, 0(x2) # load 0x7fab8aab812fe828 from memory into f2
fnmsub.s f31, f23, f18, f2, dyn # perform operation
fnmsub.s f31, f23, f18, f2, rdn # perform operation
fnmsub.s f31, f23, f18, f2, rmm # perform operation
fnmsub.s f31, f23, f18, f2, rne # perform operation
fnmsub.s f31, f23, f18, f2, rtz # perform operation
fnmsub.s f31, f23, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x153e5032e3483c4b # load x3 with value 0x153e5032e3483c4b
sw x3, 0(x2) # store 0x153e5032e3483c4b in memory
flw f23, 0(x2) # load 0x153e5032e3483c4b from memory into f23
fnmsub.s f20, f5, f19, f23, dyn # perform operation
fnmsub.s f20, f5, f19, f23, rdn # perform operation
fnmsub.s f20, f5, f19, f23, rmm # perform operation
fnmsub.s f20, f5, f19, f23, rne # perform operation
fnmsub.s f20, f5, f19, f23, rtz # perform operation
fnmsub.s f20, f5, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x5b326a0e425918f4 # load x3 with value 0x5b326a0e425918f4
sw x3, 0(x2) # store 0x5b326a0e425918f4 in memory
flw f17, 0(x2) # load 0x5b326a0e425918f4 from memory into f17
fnmsub.s f11, f16, f24, f17, dyn # perform operation
fnmsub.s f11, f16, f24, f17, rdn # perform operation
fnmsub.s f11, f16, f24, f17, rmm # perform operation
fnmsub.s f11, f16, f24, f17, rne # perform operation
fnmsub.s f11, f16, f24, f17, rtz # perform operation
fnmsub.s f11, f16, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x9f95c2e64fb2b7e6 # load x3 with value 0x9f95c2e64fb2b7e6
sw x3, 0(x2) # store 0x9f95c2e64fb2b7e6 in memory
flw f9, 0(x2) # load 0x9f95c2e64fb2b7e6 from memory into f9
fnmsub.s f8, f29, f23, f9, dyn # perform operation
fnmsub.s f8, f29, f23, f9, rdn # perform operation
fnmsub.s f8, f29, f23, f9, rmm # perform operation
fnmsub.s f8, f29, f23, f9, rne # perform operation
fnmsub.s f8, f29, f23, f9, rtz # perform operation
fnmsub.s f8, f29, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xbf18e6ebc8467b5e # load x3 with value 0xbf18e6ebc8467b5e
sw x3, 0(x2) # store 0xbf18e6ebc8467b5e in memory
flw f18, 0(x2) # load 0xbf18e6ebc8467b5e from memory into f18
fnmsub.s f14, f13, f9, f18, dyn # perform operation
fnmsub.s f14, f13, f9, f18, rdn # perform operation
fnmsub.s f14, f13, f9, f18, rmm # perform operation
fnmsub.s f14, f13, f9, f18, rne # perform operation
fnmsub.s f14, f13, f9, f18, rtz # perform operation
fnmsub.s f14, f13, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x8b9830a5f1dd4779 # load x3 with value 0x8b9830a5f1dd4779
sw x3, 0(x2) # store 0x8b9830a5f1dd4779 in memory
flw f19, 0(x2) # load 0x8b9830a5f1dd4779 from memory into f19
fnmsub.s f13, f15, f12, f19, dyn # perform operation
fnmsub.s f13, f15, f12, f19, rdn # perform operation
fnmsub.s f13, f15, f12, f19, rmm # perform operation
fnmsub.s f13, f15, f12, f19, rne # perform operation
fnmsub.s f13, f15, f12, f19, rtz # perform operation
fnmsub.s f13, f15, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f15, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f15, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f15, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f15, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f15, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x318c6bbfc811572e # load x3 with value 0x318c6bbfc811572e
sw x3, 0(x2) # store 0x318c6bbfc811572e in memory
flw f10, 0(x2) # load 0x318c6bbfc811572e from memory into f10
fnmsub.s f25, f29, f7, f10, dyn # perform operation
fnmsub.s f25, f29, f7, f10, rdn # perform operation
fnmsub.s f25, f29, f7, f10, rmm # perform operation
fnmsub.s f25, f29, f7, f10, rne # perform operation
fnmsub.s f25, f29, f7, f10, rtz # perform operation
fnmsub.s f25, f29, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0xebf797cca0f9810e # load x3 with value 0xebf797cca0f9810e
sw x3, 0(x2) # store 0xebf797cca0f9810e in memory
flw f10, 0(x2) # load 0xebf797cca0f9810e from memory into f10
fnmsub.s f18, f11, f15, f10, dyn # perform operation
fnmsub.s f18, f11, f15, f10, rdn # perform operation
fnmsub.s f18, f11, f15, f10, rmm # perform operation
fnmsub.s f18, f11, f15, f10, rne # perform operation
fnmsub.s f18, f11, f15, f10, rtz # perform operation
fnmsub.s f18, f11, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x945878e2b523e109 # load x3 with value 0x945878e2b523e109
sw x3, 0(x2) # store 0x945878e2b523e109 in memory
flw f22, 0(x2) # load 0x945878e2b523e109 from memory into f22
fnmsub.s f6, f13, f29, f22, dyn # perform operation
fnmsub.s f6, f13, f29, f22, rdn # perform operation
fnmsub.s f6, f13, f29, f22, rmm # perform operation
fnmsub.s f6, f13, f29, f22, rne # perform operation
fnmsub.s f6, f13, f29, f22, rtz # perform operation
fnmsub.s f6, f13, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x1597d5113cdb717d # load x3 with value 0x1597d5113cdb717d
sw x3, 0(x2) # store 0x1597d5113cdb717d in memory
flw f19, 0(x2) # load 0x1597d5113cdb717d from memory into f19
fnmsub.s f13, f8, f11, f19, dyn # perform operation
fnmsub.s f13, f8, f11, f19, rdn # perform operation
fnmsub.s f13, f8, f11, f19, rmm # perform operation
fnmsub.s f13, f8, f11, f19, rne # perform operation
fnmsub.s f13, f8, f11, f19, rtz # perform operation
fnmsub.s f13, f8, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x8395c05517a4f3b0 # load x3 with value 0x8395c05517a4f3b0
sw x3, 0(x2) # store 0x8395c05517a4f3b0 in memory
flw f15, 0(x2) # load 0x8395c05517a4f3b0 from memory into f15
fnmsub.s f30, f5, f24, f15, dyn # perform operation
fnmsub.s f30, f5, f24, f15, rdn # perform operation
fnmsub.s f30, f5, f24, f15, rmm # perform operation
fnmsub.s f30, f5, f24, f15, rne # perform operation
fnmsub.s f30, f5, f24, f15, rtz # perform operation
fnmsub.s f30, f5, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f5, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x7d7605646ed6a7db # load x3 with value 0x7d7605646ed6a7db
sw x3, 0(x2) # store 0x7d7605646ed6a7db in memory
flw f19, 0(x2) # load 0x7d7605646ed6a7db from memory into f19
fnmsub.s f17, f25, f9, f19, dyn # perform operation
fnmsub.s f17, f25, f9, f19, rdn # perform operation
fnmsub.s f17, f25, f9, f19, rmm # perform operation
fnmsub.s f17, f25, f9, f19, rne # perform operation
fnmsub.s f17, f25, f9, f19, rtz # perform operation
fnmsub.s f17, f25, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f25, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x320c9c30e860ed22 # load x3 with value 0x320c9c30e860ed22
sw x3, 0(x2) # store 0x320c9c30e860ed22 in memory
flw f28, 0(x2) # load 0x320c9c30e860ed22 from memory into f28
fnmsub.s f29, f18, f19, f28, dyn # perform operation
fnmsub.s f29, f18, f19, f28, rdn # perform operation
fnmsub.s f29, f18, f19, f28, rmm # perform operation
fnmsub.s f29, f18, f19, f28, rne # perform operation
fnmsub.s f29, f18, f19, f28, rtz # perform operation
fnmsub.s f29, f18, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x8895a157b5a94d89 # load x3 with value 0x8895a157b5a94d89
sw x3, 0(x2) # store 0x8895a157b5a94d89 in memory
flw f31, 0(x2) # load 0x8895a157b5a94d89 from memory into f31
fnmsub.s f6, f20, f3, f31, dyn # perform operation
fnmsub.s f6, f20, f3, f31, rdn # perform operation
fnmsub.s f6, f20, f3, f31, rmm # perform operation
fnmsub.s f6, f20, f3, f31, rne # perform operation
fnmsub.s f6, f20, f3, f31, rtz # perform operation
fnmsub.s f6, f20, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xbdd6a9c411571150 # load x3 with value 0xbdd6a9c411571150
sw x3, 0(x2) # store 0xbdd6a9c411571150 in memory
flw f5, 0(x2) # load 0xbdd6a9c411571150 from memory into f5
fnmsub.s f3, f12, f25, f5, dyn # perform operation
fnmsub.s f3, f12, f25, f5, rdn # perform operation
fnmsub.s f3, f12, f25, f5, rmm # perform operation
fnmsub.s f3, f12, f25, f5, rne # perform operation
fnmsub.s f3, f12, f25, f5, rtz # perform operation
fnmsub.s f3, f12, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f12, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f12, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f12, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f12, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f12, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xead5acf082d1188 # load x3 with value 0xead5acf082d1188
sw x3, 0(x2) # store 0xead5acf082d1188 in memory
flw f5, 0(x2) # load 0xead5acf082d1188 from memory into f5
fnmsub.s f11, f23, f3, f5, dyn # perform operation
fnmsub.s f11, f23, f3, f5, rdn # perform operation
fnmsub.s f11, f23, f3, f5, rmm # perform operation
fnmsub.s f11, f23, f3, f5, rne # perform operation
fnmsub.s f11, f23, f3, f5, rtz # perform operation
fnmsub.s f11, f23, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x6106139a49b07161 # load x3 with value 0x6106139a49b07161
sw x3, 0(x2) # store 0x6106139a49b07161 in memory
flw f7, 0(x2) # load 0x6106139a49b07161 from memory into f7
fnmsub.s f10, f12, f27, f7, dyn # perform operation
fnmsub.s f10, f12, f27, f7, rdn # perform operation
fnmsub.s f10, f12, f27, f7, rmm # perform operation
fnmsub.s f10, f12, f27, f7, rne # perform operation
fnmsub.s f10, f12, f27, f7, rtz # perform operation
fnmsub.s f10, f12, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f12, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x3da34f9c732207a4 # load x3 with value 0x3da34f9c732207a4
sw x3, 0(x2) # store 0x3da34f9c732207a4 in memory
flw f16, 0(x2) # load 0x3da34f9c732207a4 from memory into f16
fnmsub.s f31, f8, f18, f16, dyn # perform operation
fnmsub.s f31, f8, f18, f16, rdn # perform operation
fnmsub.s f31, f8, f18, f16, rmm # perform operation
fnmsub.s f31, f8, f18, f16, rne # perform operation
fnmsub.s f31, f8, f18, f16, rtz # perform operation
fnmsub.s f31, f8, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f8, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xcb643ea6ac044d51 # load x3 with value 0xcb643ea6ac044d51
sw x3, 0(x2) # store 0xcb643ea6ac044d51 in memory
flw f29, 0(x2) # load 0xcb643ea6ac044d51 from memory into f29
fnmsub.s f3, f7, f17, f29, dyn # perform operation
fnmsub.s f3, f7, f17, f29, rdn # perform operation
fnmsub.s f3, f7, f17, f29, rmm # perform operation
fnmsub.s f3, f7, f17, f29, rne # perform operation
fnmsub.s f3, f7, f17, f29, rtz # perform operation
fnmsub.s f3, f7, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x29ad5ebed7c2ffad # load x3 with value 0x29ad5ebed7c2ffad
sw x3, 0(x2) # store 0x29ad5ebed7c2ffad in memory
flw f7, 0(x2) # load 0x29ad5ebed7c2ffad from memory into f7
fnmsub.s f13, f5, f24, f7, dyn # perform operation
fnmsub.s f13, f5, f24, f7, rdn # perform operation
fnmsub.s f13, f5, f24, f7, rmm # perform operation
fnmsub.s f13, f5, f24, f7, rne # perform operation
fnmsub.s f13, f5, f24, f7, rtz # perform operation
fnmsub.s f13, f5, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f5, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xd8bd53ea9c24cd4a # load x3 with value 0xd8bd53ea9c24cd4a
sw x3, 0(x2) # store 0xd8bd53ea9c24cd4a in memory
flw f15, 0(x2) # load 0xd8bd53ea9c24cd4a from memory into f15
fnmsub.s f13, f3, f23, f15, dyn # perform operation
fnmsub.s f13, f3, f23, f15, rdn # perform operation
fnmsub.s f13, f3, f23, f15, rmm # perform operation
fnmsub.s f13, f3, f23, f15, rne # perform operation
fnmsub.s f13, f3, f23, f15, rtz # perform operation
fnmsub.s f13, f3, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x3d040486c3a576a0 # load x3 with value 0x3d040486c3a576a0
sw x3, 0(x2) # store 0x3d040486c3a576a0 in memory
flw f5, 0(x2) # load 0x3d040486c3a576a0 from memory into f5
fnmsub.s f21, f23, f24, f5, dyn # perform operation
fnmsub.s f21, f23, f24, f5, rdn # perform operation
fnmsub.s f21, f23, f24, f5, rmm # perform operation
fnmsub.s f21, f23, f24, f5, rne # perform operation
fnmsub.s f21, f23, f24, f5, rtz # perform operation
fnmsub.s f21, f23, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x6caed3c7b1c20cbc # load x3 with value 0x6caed3c7b1c20cbc
sw x3, 0(x2) # store 0x6caed3c7b1c20cbc in memory
flw f27, 0(x2) # load 0x6caed3c7b1c20cbc from memory into f27
fnmsub.s f30, f24, f16, f27, dyn # perform operation
fnmsub.s f30, f24, f16, f27, rdn # perform operation
fnmsub.s f30, f24, f16, f27, rmm # perform operation
fnmsub.s f30, f24, f16, f27, rne # perform operation
fnmsub.s f30, f24, f16, f27, rtz # perform operation
fnmsub.s f30, f24, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xf68483bf5dec36ba # load x3 with value 0xf68483bf5dec36ba
sw x3, 0(x2) # store 0xf68483bf5dec36ba in memory
flw f1, 0(x2) # load 0xf68483bf5dec36ba from memory into f1
fnmsub.s f24, f30, f3, f1, dyn # perform operation
fnmsub.s f24, f30, f3, f1, rdn # perform operation
fnmsub.s f24, f30, f3, f1, rmm # perform operation
fnmsub.s f24, f30, f3, f1, rne # perform operation
fnmsub.s f24, f30, f3, f1, rtz # perform operation
fnmsub.s f24, f30, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x7f09c0f99b09a7a7 # load x3 with value 0x7f09c0f99b09a7a7
sw x3, 0(x2) # store 0x7f09c0f99b09a7a7 in memory
flw f27, 0(x2) # load 0x7f09c0f99b09a7a7 from memory into f27
fnmsub.s f21, f25, f5, f27, dyn # perform operation
fnmsub.s f21, f25, f5, f27, rdn # perform operation
fnmsub.s f21, f25, f5, f27, rmm # perform operation
fnmsub.s f21, f25, f5, f27, rne # perform operation
fnmsub.s f21, f25, f5, f27, rtz # perform operation
fnmsub.s f21, f25, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x7910a992a999d049 # load x3 with value 0x7910a992a999d049
sw x3, 0(x2) # store 0x7910a992a999d049 in memory
flw f27, 0(x2) # load 0x7910a992a999d049 from memory into f27
fnmsub.s f21, f16, f25, f27, dyn # perform operation
fnmsub.s f21, f16, f25, f27, rdn # perform operation
fnmsub.s f21, f16, f25, f27, rmm # perform operation
fnmsub.s f21, f16, f25, f27, rne # perform operation
fnmsub.s f21, f16, f25, f27, rtz # perform operation
fnmsub.s f21, f16, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xed74ff6b65f62bcc # load x3 with value 0xed74ff6b65f62bcc
sw x3, 0(x2) # store 0xed74ff6b65f62bcc in memory
flw f12, 0(x2) # load 0xed74ff6b65f62bcc from memory into f12
fnmsub.s f8, f25, f21, f12, dyn # perform operation
fnmsub.s f8, f25, f21, f12, rdn # perform operation
fnmsub.s f8, f25, f21, f12, rmm # perform operation
fnmsub.s f8, f25, f21, f12, rne # perform operation
fnmsub.s f8, f25, f21, f12, rtz # perform operation
fnmsub.s f8, f25, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x5f7cff0354a3cc18 # load x3 with value 0x5f7cff0354a3cc18
sw x3, 0(x2) # store 0x5f7cff0354a3cc18 in memory
flw f13, 0(x2) # load 0x5f7cff0354a3cc18 from memory into f13
fnmsub.s f22, f10, f23, f13, dyn # perform operation
fnmsub.s f22, f10, f23, f13, rdn # perform operation
fnmsub.s f22, f10, f23, f13, rmm # perform operation
fnmsub.s f22, f10, f23, f13, rne # perform operation
fnmsub.s f22, f10, f23, f13, rtz # perform operation
fnmsub.s f22, f10, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x1b056730887afc8f # load x3 with value 0x1b056730887afc8f
sw x3, 0(x2) # store 0x1b056730887afc8f in memory
flw f2, 0(x2) # load 0x1b056730887afc8f from memory into f2
fnmsub.s f23, f26, f25, f2, dyn # perform operation
fnmsub.s f23, f26, f25, f2, rdn # perform operation
fnmsub.s f23, f26, f25, f2, rmm # perform operation
fnmsub.s f23, f26, f25, f2, rne # perform operation
fnmsub.s f23, f26, f25, f2, rtz # perform operation
fnmsub.s f23, f26, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xec4964c32277ac6f # load x3 with value 0xec4964c32277ac6f
sw x3, 0(x2) # store 0xec4964c32277ac6f in memory
flw f24, 0(x2) # load 0xec4964c32277ac6f from memory into f24
fnmsub.s f14, f28, f20, f24, dyn # perform operation
fnmsub.s f14, f28, f20, f24, rdn # perform operation
fnmsub.s f14, f28, f20, f24, rmm # perform operation
fnmsub.s f14, f28, f20, f24, rne # perform operation
fnmsub.s f14, f28, f20, f24, rtz # perform operation
fnmsub.s f14, f28, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f28, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x4d77639096d3b39f # load x3 with value 0x4d77639096d3b39f
sw x3, 0(x2) # store 0x4d77639096d3b39f in memory
flw f22, 0(x2) # load 0x4d77639096d3b39f from memory into f22
fnmsub.s f10, f24, f19, f22, dyn # perform operation
fnmsub.s f10, f24, f19, f22, rdn # perform operation
fnmsub.s f10, f24, f19, f22, rmm # perform operation
fnmsub.s f10, f24, f19, f22, rne # perform operation
fnmsub.s f10, f24, f19, f22, rtz # perform operation
fnmsub.s f10, f24, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x368b014e819e6291 # load x3 with value 0x368b014e819e6291
sw x3, 0(x2) # store 0x368b014e819e6291 in memory
flw f2, 0(x2) # load 0x368b014e819e6291 from memory into f2
fnmsub.s f10, f19, f15, f2, dyn # perform operation
fnmsub.s f10, f19, f15, f2, rdn # perform operation
fnmsub.s f10, f19, f15, f2, rmm # perform operation
fnmsub.s f10, f19, f15, f2, rne # perform operation
fnmsub.s f10, f19, f15, f2, rtz # perform operation
fnmsub.s f10, f19, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xe38374052ccacc62 # load x3 with value 0xe38374052ccacc62
sw x3, 0(x2) # store 0xe38374052ccacc62 in memory
flw f25, 0(x2) # load 0xe38374052ccacc62 from memory into f25
fnmsub.s f27, f31, f12, f25, dyn # perform operation
fnmsub.s f27, f31, f12, f25, rdn # perform operation
fnmsub.s f27, f31, f12, f25, rmm # perform operation
fnmsub.s f27, f31, f12, f25, rne # perform operation
fnmsub.s f27, f31, f12, f25, rtz # perform operation
fnmsub.s f27, f31, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f31, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xd4ad6a445a604050 # load x3 with value 0xd4ad6a445a604050
sw x3, 0(x2) # store 0xd4ad6a445a604050 in memory
flw f1, 0(x2) # load 0xd4ad6a445a604050 from memory into f1
fnmsub.s f23, f17, f7, f1, dyn # perform operation
fnmsub.s f23, f17, f7, f1, rdn # perform operation
fnmsub.s f23, f17, f7, f1, rmm # perform operation
fnmsub.s f23, f17, f7, f1, rne # perform operation
fnmsub.s f23, f17, f7, f1, rtz # perform operation
fnmsub.s f23, f17, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x89c04e4da34b8d1b # load x3 with value 0x89c04e4da34b8d1b
sw x3, 0(x2) # store 0x89c04e4da34b8d1b in memory
flw f17, 0(x2) # load 0x89c04e4da34b8d1b from memory into f17
fnmsub.s f23, f14, f11, f17, dyn # perform operation
fnmsub.s f23, f14, f11, f17, rdn # perform operation
fnmsub.s f23, f14, f11, f17, rmm # perform operation
fnmsub.s f23, f14, f11, f17, rne # perform operation
fnmsub.s f23, f14, f11, f17, rtz # perform operation
fnmsub.s f23, f14, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x415094d719425561 # load x3 with value 0x415094d719425561
sw x3, 0(x2) # store 0x415094d719425561 in memory
flw f31, 0(x2) # load 0x415094d719425561 from memory into f31
fnmsub.s f29, f18, f27, f31, dyn # perform operation
fnmsub.s f29, f18, f27, f31, rdn # perform operation
fnmsub.s f29, f18, f27, f31, rmm # perform operation
fnmsub.s f29, f18, f27, f31, rne # perform operation
fnmsub.s f29, f18, f27, f31, rtz # perform operation
fnmsub.s f29, f18, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x884dd7d4d6ba995b # load x3 with value 0x884dd7d4d6ba995b
sw x3, 0(x2) # store 0x884dd7d4d6ba995b in memory
flw f27, 0(x2) # load 0x884dd7d4d6ba995b from memory into f27
fnmsub.s f30, f6, f20, f27, dyn # perform operation
fnmsub.s f30, f6, f20, f27, rdn # perform operation
fnmsub.s f30, f6, f20, f27, rmm # perform operation
fnmsub.s f30, f6, f20, f27, rne # perform operation
fnmsub.s f30, f6, f20, f27, rtz # perform operation
fnmsub.s f30, f6, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xea811b31aac9d5fa # load x3 with value 0xea811b31aac9d5fa
sw x3, 0(x2) # store 0xea811b31aac9d5fa in memory
flw f22, 0(x2) # load 0xea811b31aac9d5fa from memory into f22
fnmsub.s f7, f14, f24, f22, dyn # perform operation
fnmsub.s f7, f14, f24, f22, rdn # perform operation
fnmsub.s f7, f14, f24, f22, rmm # perform operation
fnmsub.s f7, f14, f24, f22, rne # perform operation
fnmsub.s f7, f14, f24, f22, rtz # perform operation
fnmsub.s f7, f14, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x81ebb7bd333f7c46 # load x3 with value 0x81ebb7bd333f7c46
sw x3, 0(x2) # store 0x81ebb7bd333f7c46 in memory
flw f27, 0(x2) # load 0x81ebb7bd333f7c46 from memory into f27
fnmsub.s f8, f28, f10, f27, dyn # perform operation
fnmsub.s f8, f28, f10, f27, rdn # perform operation
fnmsub.s f8, f28, f10, f27, rmm # perform operation
fnmsub.s f8, f28, f10, f27, rne # perform operation
fnmsub.s f8, f28, f10, f27, rtz # perform operation
fnmsub.s f8, f28, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x5e01ad6015b86edf # load x3 with value 0x5e01ad6015b86edf
sw x3, 0(x2) # store 0x5e01ad6015b86edf in memory
flw f24, 0(x2) # load 0x5e01ad6015b86edf from memory into f24
fnmsub.s f7, f1, f29, f24, dyn # perform operation
fnmsub.s f7, f1, f29, f24, rdn # perform operation
fnmsub.s f7, f1, f29, f24, rmm # perform operation
fnmsub.s f7, f1, f29, f24, rne # perform operation
fnmsub.s f7, f1, f29, f24, rtz # perform operation
fnmsub.s f7, f1, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xa5a584fc74fc62a7 # load x3 with value 0xa5a584fc74fc62a7
sw x3, 0(x2) # store 0xa5a584fc74fc62a7 in memory
flw f10, 0(x2) # load 0xa5a584fc74fc62a7 from memory into f10
fnmsub.s f9, f12, f24, f10, dyn # perform operation
fnmsub.s f9, f12, f24, f10, rdn # perform operation
fnmsub.s f9, f12, f24, f10, rmm # perform operation
fnmsub.s f9, f12, f24, f10, rne # perform operation
fnmsub.s f9, f12, f24, f10, rtz # perform operation
fnmsub.s f9, f12, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x5a12c7fc598fca85 # load x3 with value 0x5a12c7fc598fca85
sw x3, 0(x2) # store 0x5a12c7fc598fca85 in memory
flw f8, 0(x2) # load 0x5a12c7fc598fca85 from memory into f8
fnmsub.s f26, f14, f11, f8, dyn # perform operation
fnmsub.s f26, f14, f11, f8, rdn # perform operation
fnmsub.s f26, f14, f11, f8, rmm # perform operation
fnmsub.s f26, f14, f11, f8, rne # perform operation
fnmsub.s f26, f14, f11, f8, rtz # perform operation
fnmsub.s f26, f14, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xdc3e079ae2649d1b # load x3 with value 0xdc3e079ae2649d1b
sw x3, 0(x2) # store 0xdc3e079ae2649d1b in memory
flw f10, 0(x2) # load 0xdc3e079ae2649d1b from memory into f10
fnmsub.s f17, f11, f6, f10, dyn # perform operation
fnmsub.s f17, f11, f6, f10, rdn # perform operation
fnmsub.s f17, f11, f6, f10, rmm # perform operation
fnmsub.s f17, f11, f6, f10, rne # perform operation
fnmsub.s f17, f11, f6, f10, rtz # perform operation
fnmsub.s f17, f11, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0xab8c1bf50f796dcf # load x3 with value 0xab8c1bf50f796dcf
sw x3, 0(x2) # store 0xab8c1bf50f796dcf in memory
flw f22, 0(x2) # load 0xab8c1bf50f796dcf from memory into f22
fnmsub.s f12, f18, f16, f22, dyn # perform operation
fnmsub.s f12, f18, f16, f22, rdn # perform operation
fnmsub.s f12, f18, f16, f22, rmm # perform operation
fnmsub.s f12, f18, f16, f22, rne # perform operation
fnmsub.s f12, f18, f16, f22, rtz # perform operation
fnmsub.s f12, f18, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x8907ffb761a0755e # load x3 with value 0x8907ffb761a0755e
sw x3, 0(x2) # store 0x8907ffb761a0755e in memory
flw f2, 0(x2) # load 0x8907ffb761a0755e from memory into f2
fnmsub.s f26, f8, f17, f2, dyn # perform operation
fnmsub.s f26, f8, f17, f2, rdn # perform operation
fnmsub.s f26, f8, f17, f2, rmm # perform operation
fnmsub.s f26, f8, f17, f2, rne # perform operation
fnmsub.s f26, f8, f17, f2, rtz # perform operation
fnmsub.s f26, f8, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0xa046b3af9153b6b2 # load x3 with value 0xa046b3af9153b6b2
sw x3, 0(x2) # store 0xa046b3af9153b6b2 in memory
flw f2, 0(x2) # load 0xa046b3af9153b6b2 from memory into f2
fnmsub.s f28, f31, f12, f2, dyn # perform operation
fnmsub.s f28, f31, f12, f2, rdn # perform operation
fnmsub.s f28, f31, f12, f2, rmm # perform operation
fnmsub.s f28, f31, f12, f2, rne # perform operation
fnmsub.s f28, f31, f12, f2, rtz # perform operation
fnmsub.s f28, f31, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x3e6c8e90dde9246e # load x3 with value 0x3e6c8e90dde9246e
sw x3, 0(x2) # store 0x3e6c8e90dde9246e in memory
flw f18, 0(x2) # load 0x3e6c8e90dde9246e from memory into f18
fnmsub.s f29, f12, f15, f18, dyn # perform operation
fnmsub.s f29, f12, f15, f18, rdn # perform operation
fnmsub.s f29, f12, f15, f18, rmm # perform operation
fnmsub.s f29, f12, f15, f18, rne # perform operation
fnmsub.s f29, f12, f15, f18, rtz # perform operation
fnmsub.s f29, f12, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f12, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x4c6e3e66d6095356 # load x3 with value 0x4c6e3e66d6095356
sw x3, 0(x2) # store 0x4c6e3e66d6095356 in memory
flw f12, 0(x2) # load 0x4c6e3e66d6095356 from memory into f12
fnmsub.s f17, f14, f19, f12, dyn # perform operation
fnmsub.s f17, f14, f19, f12, rdn # perform operation
fnmsub.s f17, f14, f19, f12, rmm # perform operation
fnmsub.s f17, f14, f19, f12, rne # perform operation
fnmsub.s f17, f14, f19, f12, rtz # perform operation
fnmsub.s f17, f14, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x541a7cbbc4e08698 # load x3 with value 0x541a7cbbc4e08698
sw x3, 0(x2) # store 0x541a7cbbc4e08698 in memory
flw f29, 0(x2) # load 0x541a7cbbc4e08698 from memory into f29
fnmsub.s f6, f18, f19, f29, dyn # perform operation
fnmsub.s f6, f18, f19, f29, rdn # perform operation
fnmsub.s f6, f18, f19, f29, rmm # perform operation
fnmsub.s f6, f18, f19, f29, rne # perform operation
fnmsub.s f6, f18, f19, f29, rtz # perform operation
fnmsub.s f6, f18, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f18, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x69731e85f5012820 # load x3 with value 0x69731e85f5012820
sw x3, 0(x2) # store 0x69731e85f5012820 in memory
flw f13, 0(x2) # load 0x69731e85f5012820 from memory into f13
fnmsub.s f3, f21, f29, f13, dyn # perform operation
fnmsub.s f3, f21, f29, f13, rdn # perform operation
fnmsub.s f3, f21, f29, f13, rmm # perform operation
fnmsub.s f3, f21, f29, f13, rne # perform operation
fnmsub.s f3, f21, f29, f13, rtz # perform operation
fnmsub.s f3, f21, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x94a091d14282d032 # load x3 with value 0x94a091d14282d032
sw x3, 0(x2) # store 0x94a091d14282d032 in memory
flw f21, 0(x2) # load 0x94a091d14282d032 from memory into f21
fnmsub.s f17, f14, f15, f21, dyn # perform operation
fnmsub.s f17, f14, f15, f21, rdn # perform operation
fnmsub.s f17, f14, f15, f21, rmm # perform operation
fnmsub.s f17, f14, f15, f21, rne # perform operation
fnmsub.s f17, f14, f15, f21, rtz # perform operation
fnmsub.s f17, f14, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x2eada2c7447fedfb # load x3 with value 0x2eada2c7447fedfb
sw x3, 0(x2) # store 0x2eada2c7447fedfb in memory
flw f3, 0(x2) # load 0x2eada2c7447fedfb from memory into f3
fnmsub.s f13, f19, f30, f3, dyn # perform operation
fnmsub.s f13, f19, f30, f3, rdn # perform operation
fnmsub.s f13, f19, f30, f3, rmm # perform operation
fnmsub.s f13, f19, f30, f3, rne # perform operation
fnmsub.s f13, f19, f30, f3, rtz # perform operation
fnmsub.s f13, f19, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x8d4d1340591f7f05 # load x3 with value 0x8d4d1340591f7f05
sw x3, 0(x2) # store 0x8d4d1340591f7f05 in memory
flw f16, 0(x2) # load 0x8d4d1340591f7f05 from memory into f16
fnmsub.s f6, f8, f30, f16, dyn # perform operation
fnmsub.s f6, f8, f30, f16, rdn # perform operation
fnmsub.s f6, f8, f30, f16, rmm # perform operation
fnmsub.s f6, f8, f30, f16, rne # perform operation
fnmsub.s f6, f8, f30, f16, rtz # perform operation
fnmsub.s f6, f8, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f8, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f8, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f8, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f8, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f8, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xd03e8fe91ca2ce68 # load x3 with value 0xd03e8fe91ca2ce68
sw x3, 0(x2) # store 0xd03e8fe91ca2ce68 in memory
flw f16, 0(x2) # load 0xd03e8fe91ca2ce68 from memory into f16
fnmsub.s f2, f5, f17, f16, dyn # perform operation
fnmsub.s f2, f5, f17, f16, rdn # perform operation
fnmsub.s f2, f5, f17, f16, rmm # perform operation
fnmsub.s f2, f5, f17, f16, rne # perform operation
fnmsub.s f2, f5, f17, f16, rtz # perform operation
fnmsub.s f2, f5, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xc08c611cd5819e # load x3 with value 0xc08c611cd5819e
sw x3, 0(x2) # store 0xc08c611cd5819e in memory
flw f13, 0(x2) # load 0xc08c611cd5819e from memory into f13
fnmsub.s f20, f2, f27, f13, dyn # perform operation
fnmsub.s f20, f2, f27, f13, rdn # perform operation
fnmsub.s f20, f2, f27, f13, rmm # perform operation
fnmsub.s f20, f2, f27, f13, rne # perform operation
fnmsub.s f20, f2, f27, f13, rtz # perform operation
fnmsub.s f20, f2, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x4300c621c40836a6 # load x3 with value 0x4300c621c40836a6
sw x3, 0(x2) # store 0x4300c621c40836a6 in memory
flw f23, 0(x2) # load 0x4300c621c40836a6 from memory into f23
fnmsub.s f15, f25, f21, f23, dyn # perform operation
fnmsub.s f15, f25, f21, f23, rdn # perform operation
fnmsub.s f15, f25, f21, f23, rmm # perform operation
fnmsub.s f15, f25, f21, f23, rne # perform operation
fnmsub.s f15, f25, f21, f23, rtz # perform operation
fnmsub.s f15, f25, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x23a88ea966d623dd # load x3 with value 0x23a88ea966d623dd
sw x3, 0(x2) # store 0x23a88ea966d623dd in memory
flw f24, 0(x2) # load 0x23a88ea966d623dd from memory into f24
fnmsub.s f12, f28, f16, f24, dyn # perform operation
fnmsub.s f12, f28, f16, f24, rdn # perform operation
fnmsub.s f12, f28, f16, f24, rmm # perform operation
fnmsub.s f12, f28, f16, f24, rne # perform operation
fnmsub.s f12, f28, f16, f24, rtz # perform operation
fnmsub.s f12, f28, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xe0121117442cd33d # load x3 with value 0xe0121117442cd33d
sw x3, 0(x2) # store 0xe0121117442cd33d in memory
flw f18, 0(x2) # load 0xe0121117442cd33d from memory into f18
fnmsub.s f9, f10, f24, f18, dyn # perform operation
fnmsub.s f9, f10, f24, f18, rdn # perform operation
fnmsub.s f9, f10, f24, f18, rmm # perform operation
fnmsub.s f9, f10, f24, f18, rne # perform operation
fnmsub.s f9, f10, f24, f18, rtz # perform operation
fnmsub.s f9, f10, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x75aa3d806f49fc32 # load x3 with value 0x75aa3d806f49fc32
sw x3, 0(x2) # store 0x75aa3d806f49fc32 in memory
flw f14, 0(x2) # load 0x75aa3d806f49fc32 from memory into f14
fnmsub.s f17, f3, f7, f14, dyn # perform operation
fnmsub.s f17, f3, f7, f14, rdn # perform operation
fnmsub.s f17, f3, f7, f14, rmm # perform operation
fnmsub.s f17, f3, f7, f14, rne # perform operation
fnmsub.s f17, f3, f7, f14, rtz # perform operation
fnmsub.s f17, f3, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x508e05d159c9801e # load x3 with value 0x508e05d159c9801e
sw x3, 0(x2) # store 0x508e05d159c9801e in memory
flw f17, 0(x2) # load 0x508e05d159c9801e from memory into f17
fnmsub.s f8, f23, f9, f17, dyn # perform operation
fnmsub.s f8, f23, f9, f17, rdn # perform operation
fnmsub.s f8, f23, f9, f17, rmm # perform operation
fnmsub.s f8, f23, f9, f17, rne # perform operation
fnmsub.s f8, f23, f9, f17, rtz # perform operation
fnmsub.s f8, f23, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x1c7fcf10f1d06bd0 # load x3 with value 0x1c7fcf10f1d06bd0
sw x3, 0(x2) # store 0x1c7fcf10f1d06bd0 in memory
flw f3, 0(x2) # load 0x1c7fcf10f1d06bd0 from memory into f3
fnmsub.s f24, f2, f23, f3, dyn # perform operation
fnmsub.s f24, f2, f23, f3, rdn # perform operation
fnmsub.s f24, f2, f23, f3, rmm # perform operation
fnmsub.s f24, f2, f23, f3, rne # perform operation
fnmsub.s f24, f2, f23, f3, rtz # perform operation
fnmsub.s f24, f2, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x4715701b5fb97b18 # load x3 with value 0x4715701b5fb97b18
sw x3, 0(x2) # store 0x4715701b5fb97b18 in memory
flw f25, 0(x2) # load 0x4715701b5fb97b18 from memory into f25
fnmsub.s f19, f22, f18, f25, dyn # perform operation
fnmsub.s f19, f22, f18, f25, rdn # perform operation
fnmsub.s f19, f22, f18, f25, rmm # perform operation
fnmsub.s f19, f22, f18, f25, rne # perform operation
fnmsub.s f19, f22, f18, f25, rtz # perform operation
fnmsub.s f19, f22, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f22, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xcfae7c3edc2d6187 # load x3 with value 0xcfae7c3edc2d6187
sw x3, 0(x2) # store 0xcfae7c3edc2d6187 in memory
flw f6, 0(x2) # load 0xcfae7c3edc2d6187 from memory into f6
fnmsub.s f11, f29, f8, f6, dyn # perform operation
fnmsub.s f11, f29, f8, f6, rdn # perform operation
fnmsub.s f11, f29, f8, f6, rmm # perform operation
fnmsub.s f11, f29, f8, f6, rne # perform operation
fnmsub.s f11, f29, f8, f6, rtz # perform operation
fnmsub.s f11, f29, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f29, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x83a818b07a269a97 # load x3 with value 0x83a818b07a269a97
sw x3, 0(x2) # store 0x83a818b07a269a97 in memory
flw f28, 0(x2) # load 0x83a818b07a269a97 from memory into f28
fnmsub.s f10, f17, f23, f28, dyn # perform operation
fnmsub.s f10, f17, f23, f28, rdn # perform operation
fnmsub.s f10, f17, f23, f28, rmm # perform operation
fnmsub.s f10, f17, f23, f28, rne # perform operation
fnmsub.s f10, f17, f23, f28, rtz # perform operation
fnmsub.s f10, f17, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xeff8f71021835186 # load x3 with value 0xeff8f71021835186
sw x3, 0(x2) # store 0xeff8f71021835186 in memory
flw f31, 0(x2) # load 0xeff8f71021835186 from memory into f31
fnmsub.s f11, f28, f17, f31, dyn # perform operation
fnmsub.s f11, f28, f17, f31, rdn # perform operation
fnmsub.s f11, f28, f17, f31, rmm # perform operation
fnmsub.s f11, f28, f17, f31, rne # perform operation
fnmsub.s f11, f28, f17, f31, rtz # perform operation
fnmsub.s f11, f28, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x75672062adce5d91 # load x3 with value 0x75672062adce5d91
sw x3, 0(x2) # store 0x75672062adce5d91 in memory
flw f30, 0(x2) # load 0x75672062adce5d91 from memory into f30
fnmsub.s f7, f15, f17, f30, dyn # perform operation
fnmsub.s f7, f15, f17, f30, rdn # perform operation
fnmsub.s f7, f15, f17, f30, rmm # perform operation
fnmsub.s f7, f15, f17, f30, rne # perform operation
fnmsub.s f7, f15, f17, f30, rtz # perform operation
fnmsub.s f7, f15, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x9a0980381035fe31 # load x3 with value 0x9a0980381035fe31
sw x3, 0(x2) # store 0x9a0980381035fe31 in memory
flw f5, 0(x2) # load 0x9a0980381035fe31 from memory into f5
fnmsub.s f22, f25, f11, f5, dyn # perform operation
fnmsub.s f22, f25, f11, f5, rdn # perform operation
fnmsub.s f22, f25, f11, f5, rmm # perform operation
fnmsub.s f22, f25, f11, f5, rne # perform operation
fnmsub.s f22, f25, f11, f5, rtz # perform operation
fnmsub.s f22, f25, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xacbc3651d75a9d47 # load x3 with value 0xacbc3651d75a9d47
sw x3, 0(x2) # store 0xacbc3651d75a9d47 in memory
flw f21, 0(x2) # load 0xacbc3651d75a9d47 from memory into f21
fnmsub.s f18, f10, f8, f21, dyn # perform operation
fnmsub.s f18, f10, f8, f21, rdn # perform operation
fnmsub.s f18, f10, f8, f21, rmm # perform operation
fnmsub.s f18, f10, f8, f21, rne # perform operation
fnmsub.s f18, f10, f8, f21, rtz # perform operation
fnmsub.s f18, f10, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x90dfe1cd281c70f3 # load x3 with value 0x90dfe1cd281c70f3
sw x3, 0(x2) # store 0x90dfe1cd281c70f3 in memory
flw f19, 0(x2) # load 0x90dfe1cd281c70f3 from memory into f19
fnmsub.s f12, f29, f26, f19, dyn # perform operation
fnmsub.s f12, f29, f26, f19, rdn # perform operation
fnmsub.s f12, f29, f26, f19, rmm # perform operation
fnmsub.s f12, f29, f26, f19, rne # perform operation
fnmsub.s f12, f29, f26, f19, rtz # perform operation
fnmsub.s f12, f29, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xa05634c19b5a457 # load x3 with value 0xa05634c19b5a457
sw x3, 0(x2) # store 0xa05634c19b5a457 in memory
flw f7, 0(x2) # load 0xa05634c19b5a457 from memory into f7
fnmsub.s f6, f18, f17, f7, dyn # perform operation
fnmsub.s f6, f18, f17, f7, rdn # perform operation
fnmsub.s f6, f18, f17, f7, rmm # perform operation
fnmsub.s f6, f18, f17, f7, rne # perform operation
fnmsub.s f6, f18, f17, f7, rtz # perform operation
fnmsub.s f6, f18, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f18, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x47cfc91ea8ef85ba # load x3 with value 0x47cfc91ea8ef85ba
sw x3, 0(x2) # store 0x47cfc91ea8ef85ba in memory
flw f20, 0(x2) # load 0x47cfc91ea8ef85ba from memory into f20
fnmsub.s f5, f29, f18, f20, dyn # perform operation
fnmsub.s f5, f29, f18, f20, rdn # perform operation
fnmsub.s f5, f29, f18, f20, rmm # perform operation
fnmsub.s f5, f29, f18, f20, rne # perform operation
fnmsub.s f5, f29, f18, f20, rtz # perform operation
fnmsub.s f5, f29, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x20846acc324aa543 # load x3 with value 0x20846acc324aa543
sw x3, 0(x2) # store 0x20846acc324aa543 in memory
flw f28, 0(x2) # load 0x20846acc324aa543 from memory into f28
fnmsub.s f10, f22, f23, f28, dyn # perform operation
fnmsub.s f10, f22, f23, f28, rdn # perform operation
fnmsub.s f10, f22, f23, f28, rmm # perform operation
fnmsub.s f10, f22, f23, f28, rne # perform operation
fnmsub.s f10, f22, f23, f28, rtz # perform operation
fnmsub.s f10, f22, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x6799f52bc72f45d1 # load x3 with value 0x6799f52bc72f45d1
sw x3, 0(x2) # store 0x6799f52bc72f45d1 in memory
flw f3, 0(x2) # load 0x6799f52bc72f45d1 from memory into f3
fnmsub.s f21, f26, f30, f3, dyn # perform operation
fnmsub.s f21, f26, f30, f3, rdn # perform operation
fnmsub.s f21, f26, f30, f3, rmm # perform operation
fnmsub.s f21, f26, f30, f3, rne # perform operation
fnmsub.s f21, f26, f30, f3, rtz # perform operation
fnmsub.s f21, f26, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f26, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xd1d4f03cac168aef # load x3 with value 0xd1d4f03cac168aef
sw x3, 0(x2) # store 0xd1d4f03cac168aef in memory
flw f14, 0(x2) # load 0xd1d4f03cac168aef from memory into f14
fnmsub.s f16, f9, f27, f14, dyn # perform operation
fnmsub.s f16, f9, f27, f14, rdn # perform operation
fnmsub.s f16, f9, f27, f14, rmm # perform operation
fnmsub.s f16, f9, f27, f14, rne # perform operation
fnmsub.s f16, f9, f27, f14, rtz # perform operation
fnmsub.s f16, f9, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f9, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f9, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f9, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f9, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f9, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x1b008b57298ff29e # load x3 with value 0x1b008b57298ff29e
sw x3, 0(x2) # store 0x1b008b57298ff29e in memory
flw f10, 0(x2) # load 0x1b008b57298ff29e from memory into f10
fnmsub.s f12, f15, f26, f10, dyn # perform operation
fnmsub.s f12, f15, f26, f10, rdn # perform operation
fnmsub.s f12, f15, f26, f10, rmm # perform operation
fnmsub.s f12, f15, f26, f10, rne # perform operation
fnmsub.s f12, f15, f26, f10, rtz # perform operation
fnmsub.s f12, f15, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x53a244699527635a # load x3 with value 0x53a244699527635a
sw x3, 0(x2) # store 0x53a244699527635a in memory
flw f24, 0(x2) # load 0x53a244699527635a from memory into f24
fnmsub.s f28, f20, f14, f24, dyn # perform operation
fnmsub.s f28, f20, f14, f24, rdn # perform operation
fnmsub.s f28, f20, f14, f24, rmm # perform operation
fnmsub.s f28, f20, f14, f24, rne # perform operation
fnmsub.s f28, f20, f14, f24, rtz # perform operation
fnmsub.s f28, f20, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f20, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x8c69560aeb9a6bc4 # load x3 with value 0x8c69560aeb9a6bc4
sw x3, 0(x2) # store 0x8c69560aeb9a6bc4 in memory
flw f19, 0(x2) # load 0x8c69560aeb9a6bc4 from memory into f19
fnmsub.s f21, f13, f2, f19, dyn # perform operation
fnmsub.s f21, f13, f2, f19, rdn # perform operation
fnmsub.s f21, f13, f2, f19, rmm # perform operation
fnmsub.s f21, f13, f2, f19, rne # perform operation
fnmsub.s f21, f13, f2, f19, rtz # perform operation
fnmsub.s f21, f13, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xf8c47d8f5d97fa34 # load x3 with value 0xf8c47d8f5d97fa34
sw x3, 0(x2) # store 0xf8c47d8f5d97fa34 in memory
flw f18, 0(x2) # load 0xf8c47d8f5d97fa34 from memory into f18
fnmsub.s f11, f27, f2, f18, dyn # perform operation
fnmsub.s f11, f27, f2, f18, rdn # perform operation
fnmsub.s f11, f27, f2, f18, rmm # perform operation
fnmsub.s f11, f27, f2, f18, rne # perform operation
fnmsub.s f11, f27, f2, f18, rtz # perform operation
fnmsub.s f11, f27, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x1338bc486c3449fd # load x3 with value 0x1338bc486c3449fd
sw x3, 0(x2) # store 0x1338bc486c3449fd in memory
flw f20, 0(x2) # load 0x1338bc486c3449fd from memory into f20
fnmsub.s f6, f15, f27, f20, dyn # perform operation
fnmsub.s f6, f15, f27, f20, rdn # perform operation
fnmsub.s f6, f15, f27, f20, rmm # perform operation
fnmsub.s f6, f15, f27, f20, rne # perform operation
fnmsub.s f6, f15, f27, f20, rtz # perform operation
fnmsub.s f6, f15, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xf9e0831bdd5625b9 # load x3 with value 0xf9e0831bdd5625b9
sw x3, 0(x2) # store 0xf9e0831bdd5625b9 in memory
flw f24, 0(x2) # load 0xf9e0831bdd5625b9 from memory into f24
fnmsub.s f27, f21, f30, f24, dyn # perform operation
fnmsub.s f27, f21, f30, f24, rdn # perform operation
fnmsub.s f27, f21, f30, f24, rmm # perform operation
fnmsub.s f27, f21, f30, f24, rne # perform operation
fnmsub.s f27, f21, f30, f24, rtz # perform operation
fnmsub.s f27, f21, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x6a93162b3b540954 # load x3 with value 0x6a93162b3b540954
sw x3, 0(x2) # store 0x6a93162b3b540954 in memory
flw f29, 0(x2) # load 0x6a93162b3b540954 from memory into f29
fnmsub.s f12, f1, f19, f29, dyn # perform operation
fnmsub.s f12, f1, f19, f29, rdn # perform operation
fnmsub.s f12, f1, f19, f29, rmm # perform operation
fnmsub.s f12, f1, f19, f29, rne # perform operation
fnmsub.s f12, f1, f19, f29, rtz # perform operation
fnmsub.s f12, f1, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xf7f85237cdf8d338 # load x3 with value 0xf7f85237cdf8d338
sw x3, 0(x2) # store 0xf7f85237cdf8d338 in memory
flw f13, 0(x2) # load 0xf7f85237cdf8d338 from memory into f13
fnmsub.s f10, f21, f9, f13, dyn # perform operation
fnmsub.s f10, f21, f9, f13, rdn # perform operation
fnmsub.s f10, f21, f9, f13, rmm # perform operation
fnmsub.s f10, f21, f9, f13, rne # perform operation
fnmsub.s f10, f21, f9, f13, rtz # perform operation
fnmsub.s f10, f21, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x58a41a89e9259980 # load x3 with value 0x58a41a89e9259980
sw x3, 0(x2) # store 0x58a41a89e9259980 in memory
flw f21, 0(x2) # load 0x58a41a89e9259980 from memory into f21
fnmsub.s f6, f24, f16, f21, dyn # perform operation
fnmsub.s f6, f24, f16, f21, rdn # perform operation
fnmsub.s f6, f24, f16, f21, rmm # perform operation
fnmsub.s f6, f24, f16, f21, rne # perform operation
fnmsub.s f6, f24, f16, f21, rtz # perform operation
fnmsub.s f6, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xaed1c7c8904a4808 # load x3 with value 0xaed1c7c8904a4808
sw x3, 0(x2) # store 0xaed1c7c8904a4808 in memory
flw f8, 0(x2) # load 0xaed1c7c8904a4808 from memory into f8
fnmsub.s f24, f30, f25, f8, dyn # perform operation
fnmsub.s f24, f30, f25, f8, rdn # perform operation
fnmsub.s f24, f30, f25, f8, rmm # perform operation
fnmsub.s f24, f30, f25, f8, rne # perform operation
fnmsub.s f24, f30, f25, f8, rtz # perform operation
fnmsub.s f24, f30, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xe2a9698fbabe1b1f # load x3 with value 0xe2a9698fbabe1b1f
sw x3, 0(x2) # store 0xe2a9698fbabe1b1f in memory
flw f13, 0(x2) # load 0xe2a9698fbabe1b1f from memory into f13
fnmsub.s f21, f2, f25, f13, dyn # perform operation
fnmsub.s f21, f2, f25, f13, rdn # perform operation
fnmsub.s f21, f2, f25, f13, rmm # perform operation
fnmsub.s f21, f2, f25, f13, rne # perform operation
fnmsub.s f21, f2, f25, f13, rtz # perform operation
fnmsub.s f21, f2, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xc68356e7900aedd3 # load x3 with value 0xc68356e7900aedd3
sw x3, 0(x2) # store 0xc68356e7900aedd3 in memory
flw f2, 0(x2) # load 0xc68356e7900aedd3 from memory into f2
fnmsub.s f26, f13, f16, f2, dyn # perform operation
fnmsub.s f26, f13, f16, f2, rdn # perform operation
fnmsub.s f26, f13, f16, f2, rmm # perform operation
fnmsub.s f26, f13, f16, f2, rne # perform operation
fnmsub.s f26, f13, f16, f2, rtz # perform operation
fnmsub.s f26, f13, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xe7f5c46628337beb # load x3 with value 0xe7f5c46628337beb
sw x3, 0(x2) # store 0xe7f5c46628337beb in memory
flw f13, 0(x2) # load 0xe7f5c46628337beb from memory into f13
fnmsub.s f16, f29, f14, f13, dyn # perform operation
fnmsub.s f16, f29, f14, f13, rdn # perform operation
fnmsub.s f16, f29, f14, f13, rmm # perform operation
fnmsub.s f16, f29, f14, f13, rne # perform operation
fnmsub.s f16, f29, f14, f13, rtz # perform operation
fnmsub.s f16, f29, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f29, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xdbc86580cda2c791 # load x3 with value 0xdbc86580cda2c791
sw x3, 0(x2) # store 0xdbc86580cda2c791 in memory
flw f15, 0(x2) # load 0xdbc86580cda2c791 from memory into f15
fnmsub.s f2, f5, f19, f15, dyn # perform operation
fnmsub.s f2, f5, f19, f15, rdn # perform operation
fnmsub.s f2, f5, f19, f15, rmm # perform operation
fnmsub.s f2, f5, f19, f15, rne # perform operation
fnmsub.s f2, f5, f19, f15, rtz # perform operation
fnmsub.s f2, f5, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xcd27dd113905ea58 # load x3 with value 0xcd27dd113905ea58
sw x3, 0(x2) # store 0xcd27dd113905ea58 in memory
flw f23, 0(x2) # load 0xcd27dd113905ea58 from memory into f23
fnmsub.s f6, f15, f8, f23, dyn # perform operation
fnmsub.s f6, f15, f8, f23, rdn # perform operation
fnmsub.s f6, f15, f8, f23, rmm # perform operation
fnmsub.s f6, f15, f8, f23, rne # perform operation
fnmsub.s f6, f15, f8, f23, rtz # perform operation
fnmsub.s f6, f15, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x8543ce96a11cec08 # load x3 with value 0x8543ce96a11cec08
sw x3, 0(x2) # store 0x8543ce96a11cec08 in memory
flw f27, 0(x2) # load 0x8543ce96a11cec08 from memory into f27
fnmsub.s f22, f31, f9, f27, dyn # perform operation
fnmsub.s f22, f31, f9, f27, rdn # perform operation
fnmsub.s f22, f31, f9, f27, rmm # perform operation
fnmsub.s f22, f31, f9, f27, rne # perform operation
fnmsub.s f22, f31, f9, f27, rtz # perform operation
fnmsub.s f22, f31, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x10a9a1d3732544bf # load x3 with value 0x10a9a1d3732544bf
sw x3, 0(x2) # store 0x10a9a1d3732544bf in memory
flw f6, 0(x2) # load 0x10a9a1d3732544bf from memory into f6
fnmsub.s f20, f11, f28, f6, dyn # perform operation
fnmsub.s f20, f11, f28, f6, rdn # perform operation
fnmsub.s f20, f11, f28, f6, rmm # perform operation
fnmsub.s f20, f11, f28, f6, rne # perform operation
fnmsub.s f20, f11, f28, f6, rtz # perform operation
fnmsub.s f20, f11, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xfddf80c19363cb92 # load x3 with value 0xfddf80c19363cb92
sw x3, 0(x2) # store 0xfddf80c19363cb92 in memory
flw f15, 0(x2) # load 0xfddf80c19363cb92 from memory into f15
fnmsub.s f28, f23, f7, f15, dyn # perform operation
fnmsub.s f28, f23, f7, f15, rdn # perform operation
fnmsub.s f28, f23, f7, f15, rmm # perform operation
fnmsub.s f28, f23, f7, f15, rne # perform operation
fnmsub.s f28, f23, f7, f15, rtz # perform operation
fnmsub.s f28, f23, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xab190240a54e1ce3 # load x3 with value 0xab190240a54e1ce3
sw x3, 0(x2) # store 0xab190240a54e1ce3 in memory
flw f23, 0(x2) # load 0xab190240a54e1ce3 from memory into f23
fnmsub.s f18, f16, f24, f23, dyn # perform operation
fnmsub.s f18, f16, f24, f23, rdn # perform operation
fnmsub.s f18, f16, f24, f23, rmm # perform operation
fnmsub.s f18, f16, f24, f23, rne # perform operation
fnmsub.s f18, f16, f24, f23, rtz # perform operation
fnmsub.s f18, f16, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xf9780d2fc77f1f0a # load x3 with value 0xf9780d2fc77f1f0a
sw x3, 0(x2) # store 0xf9780d2fc77f1f0a in memory
flw f10, 0(x2) # load 0xf9780d2fc77f1f0a from memory into f10
fnmsub.s f21, f18, f11, f10, dyn # perform operation
fnmsub.s f21, f18, f11, f10, rdn # perform operation
fnmsub.s f21, f18, f11, f10, rmm # perform operation
fnmsub.s f21, f18, f11, f10, rne # perform operation
fnmsub.s f21, f18, f11, f10, rtz # perform operation
fnmsub.s f21, f18, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x3ba7175a0c902683 # load x3 with value 0x3ba7175a0c902683
sw x3, 0(x2) # store 0x3ba7175a0c902683 in memory
flw f16, 0(x2) # load 0x3ba7175a0c902683 from memory into f16
fnmsub.s f28, f14, f20, f16, dyn # perform operation
fnmsub.s f28, f14, f20, f16, rdn # perform operation
fnmsub.s f28, f14, f20, f16, rmm # perform operation
fnmsub.s f28, f14, f20, f16, rne # perform operation
fnmsub.s f28, f14, f20, f16, rtz # perform operation
fnmsub.s f28, f14, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f14, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x7320141ff7b7df08 # load x3 with value 0x7320141ff7b7df08
sw x3, 0(x2) # store 0x7320141ff7b7df08 in memory
flw f31, 0(x2) # load 0x7320141ff7b7df08 from memory into f31
fnmsub.s f28, f11, f17, f31, dyn # perform operation
fnmsub.s f28, f11, f17, f31, rdn # perform operation
fnmsub.s f28, f11, f17, f31, rmm # perform operation
fnmsub.s f28, f11, f17, f31, rne # perform operation
fnmsub.s f28, f11, f17, f31, rtz # perform operation
fnmsub.s f28, f11, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x6da1db9306a23efb # load x3 with value 0x6da1db9306a23efb
sw x3, 0(x2) # store 0x6da1db9306a23efb in memory
flw f30, 0(x2) # load 0x6da1db9306a23efb from memory into f30
fnmsub.s f2, f12, f26, f30, dyn # perform operation
fnmsub.s f2, f12, f26, f30, rdn # perform operation
fnmsub.s f2, f12, f26, f30, rmm # perform operation
fnmsub.s f2, f12, f26, f30, rne # perform operation
fnmsub.s f2, f12, f26, f30, rtz # perform operation
fnmsub.s f2, f12, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f12, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f12, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f12, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f12, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f12, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x990ebf8f4a092df0 # load x3 with value 0x990ebf8f4a092df0
sw x3, 0(x2) # store 0x990ebf8f4a092df0 in memory
flw f17, 0(x2) # load 0x990ebf8f4a092df0 from memory into f17
fnmsub.s f8, f5, f25, f17, dyn # perform operation
fnmsub.s f8, f5, f25, f17, rdn # perform operation
fnmsub.s f8, f5, f25, f17, rmm # perform operation
fnmsub.s f8, f5, f25, f17, rne # perform operation
fnmsub.s f8, f5, f25, f17, rtz # perform operation
fnmsub.s f8, f5, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f5, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x32400396dd7d0543 # load x3 with value 0x32400396dd7d0543
sw x3, 0(x2) # store 0x32400396dd7d0543 in memory
flw f9, 0(x2) # load 0x32400396dd7d0543 from memory into f9
fnmsub.s f5, f10, f28, f9, dyn # perform operation
fnmsub.s f5, f10, f28, f9, rdn # perform operation
fnmsub.s f5, f10, f28, f9, rmm # perform operation
fnmsub.s f5, f10, f28, f9, rne # perform operation
fnmsub.s f5, f10, f28, f9, rtz # perform operation
fnmsub.s f5, f10, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xf55ee1b280fe79c1 # load x3 with value 0xf55ee1b280fe79c1
sw x3, 0(x2) # store 0xf55ee1b280fe79c1 in memory
flw f2, 0(x2) # load 0xf55ee1b280fe79c1 from memory into f2
fnmsub.s f19, f25, f22, f2, dyn # perform operation
fnmsub.s f19, f25, f22, f2, rdn # perform operation
fnmsub.s f19, f25, f22, f2, rmm # perform operation
fnmsub.s f19, f25, f22, f2, rne # perform operation
fnmsub.s f19, f25, f22, f2, rtz # perform operation
fnmsub.s f19, f25, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x41610f088c485fb3 # load x3 with value 0x41610f088c485fb3
sw x3, 0(x2) # store 0x41610f088c485fb3 in memory
flw f12, 0(x2) # load 0x41610f088c485fb3 from memory into f12
fnmsub.s f11, f6, f10, f12, dyn # perform operation
fnmsub.s f11, f6, f10, f12, rdn # perform operation
fnmsub.s f11, f6, f10, f12, rmm # perform operation
fnmsub.s f11, f6, f10, f12, rne # perform operation
fnmsub.s f11, f6, f10, f12, rtz # perform operation
fnmsub.s f11, f6, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xfbe149468585e68c # load x3 with value 0xfbe149468585e68c
sw x3, 0(x2) # store 0xfbe149468585e68c in memory
flw f20, 0(x2) # load 0xfbe149468585e68c from memory into f20
fnmsub.s f26, f8, f28, f20, dyn # perform operation
fnmsub.s f26, f8, f28, f20, rdn # perform operation
fnmsub.s f26, f8, f28, f20, rmm # perform operation
fnmsub.s f26, f8, f28, f20, rne # perform operation
fnmsub.s f26, f8, f28, f20, rtz # perform operation
fnmsub.s f26, f8, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x35dd7fece17f16bb # load x3 with value 0x35dd7fece17f16bb
sw x3, 0(x2) # store 0x35dd7fece17f16bb in memory
flw f20, 0(x2) # load 0x35dd7fece17f16bb from memory into f20
fnmsub.s f13, f28, f24, f20, dyn # perform operation
fnmsub.s f13, f28, f24, f20, rdn # perform operation
fnmsub.s f13, f28, f24, f20, rmm # perform operation
fnmsub.s f13, f28, f24, f20, rne # perform operation
fnmsub.s f13, f28, f24, f20, rtz # perform operation
fnmsub.s f13, f28, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xc9b4e477d2534443 # load x3 with value 0xc9b4e477d2534443
sw x3, 0(x2) # store 0xc9b4e477d2534443 in memory
flw f31, 0(x2) # load 0xc9b4e477d2534443 from memory into f31
fnmsub.s f22, f15, f11, f31, dyn # perform operation
fnmsub.s f22, f15, f11, f31, rdn # perform operation
fnmsub.s f22, f15, f11, f31, rmm # perform operation
fnmsub.s f22, f15, f11, f31, rne # perform operation
fnmsub.s f22, f15, f11, f31, rtz # perform operation
fnmsub.s f22, f15, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x8cd823cdc4f60250 # load x3 with value 0x8cd823cdc4f60250
sw x3, 0(x2) # store 0x8cd823cdc4f60250 in memory
flw f18, 0(x2) # load 0x8cd823cdc4f60250 from memory into f18
fnmsub.s f6, f22, f12, f18, dyn # perform operation
fnmsub.s f6, f22, f12, f18, rdn # perform operation
fnmsub.s f6, f22, f12, f18, rmm # perform operation
fnmsub.s f6, f22, f12, f18, rne # perform operation
fnmsub.s f6, f22, f12, f18, rtz # perform operation
fnmsub.s f6, f22, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f22, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x42ebc9e2bbb56f6 # load x3 with value 0x42ebc9e2bbb56f6
sw x3, 0(x2) # store 0x42ebc9e2bbb56f6 in memory
flw f8, 0(x2) # load 0x42ebc9e2bbb56f6 from memory into f8
fnmsub.s f3, f11, f1, f8, dyn # perform operation
fnmsub.s f3, f11, f1, f8, rdn # perform operation
fnmsub.s f3, f11, f1, f8, rmm # perform operation
fnmsub.s f3, f11, f1, f8, rne # perform operation
fnmsub.s f3, f11, f1, f8, rtz # perform operation
fnmsub.s f3, f11, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x36a54665e125ded5 # load x3 with value 0x36a54665e125ded5
sw x3, 0(x2) # store 0x36a54665e125ded5 in memory
flw f27, 0(x2) # load 0x36a54665e125ded5 from memory into f27
fnmsub.s f15, f21, f2, f27, dyn # perform operation
fnmsub.s f15, f21, f2, f27, rdn # perform operation
fnmsub.s f15, f21, f2, f27, rmm # perform operation
fnmsub.s f15, f21, f2, f27, rne # perform operation
fnmsub.s f15, f21, f2, f27, rtz # perform operation
fnmsub.s f15, f21, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x2ce2cfd3c2f30365 # load x3 with value 0x2ce2cfd3c2f30365
sw x3, 0(x2) # store 0x2ce2cfd3c2f30365 in memory
flw f25, 0(x2) # load 0x2ce2cfd3c2f30365 from memory into f25
fnmsub.s f29, f14, f19, f25, dyn # perform operation
fnmsub.s f29, f14, f19, f25, rdn # perform operation
fnmsub.s f29, f14, f19, f25, rmm # perform operation
fnmsub.s f29, f14, f19, f25, rne # perform operation
fnmsub.s f29, f14, f19, f25, rtz # perform operation
fnmsub.s f29, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x59b01f8e576a0b1b # load x3 with value 0x59b01f8e576a0b1b
sw x3, 0(x2) # store 0x59b01f8e576a0b1b in memory
flw f19, 0(x2) # load 0x59b01f8e576a0b1b from memory into f19
fnmsub.s f11, f2, f8, f19, dyn # perform operation
fnmsub.s f11, f2, f8, f19, rdn # perform operation
fnmsub.s f11, f2, f8, f19, rmm # perform operation
fnmsub.s f11, f2, f8, f19, rne # perform operation
fnmsub.s f11, f2, f8, f19, rtz # perform operation
fnmsub.s f11, f2, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xe9357e6b5f8dc9e9 # load x3 with value 0xe9357e6b5f8dc9e9
sw x3, 0(x2) # store 0xe9357e6b5f8dc9e9 in memory
flw f2, 0(x2) # load 0xe9357e6b5f8dc9e9 from memory into f2
fnmsub.s f17, f23, f20, f2, dyn # perform operation
fnmsub.s f17, f23, f20, f2, rdn # perform operation
fnmsub.s f17, f23, f20, f2, rmm # perform operation
fnmsub.s f17, f23, f20, f2, rne # perform operation
fnmsub.s f17, f23, f20, f2, rtz # perform operation
fnmsub.s f17, f23, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f23, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x4559227d6bcdf55a # load x3 with value 0x4559227d6bcdf55a
sw x3, 0(x2) # store 0x4559227d6bcdf55a in memory
flw f16, 0(x2) # load 0x4559227d6bcdf55a from memory into f16
fnmsub.s f25, f5, f8, f16, dyn # perform operation
fnmsub.s f25, f5, f8, f16, rdn # perform operation
fnmsub.s f25, f5, f8, f16, rmm # perform operation
fnmsub.s f25, f5, f8, f16, rne # perform operation
fnmsub.s f25, f5, f8, f16, rtz # perform operation
fnmsub.s f25, f5, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f5, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f5, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f5, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f5, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f5, f8, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x3296c387225fa5b1 # load x3 with value 0x3296c387225fa5b1
sw x3, 0(x2) # store 0x3296c387225fa5b1 in memory
flw f2, 0(x2) # load 0x3296c387225fa5b1 from memory into f2
fnmsub.s f18, f10, f26, f2, dyn # perform operation
fnmsub.s f18, f10, f26, f2, rdn # perform operation
fnmsub.s f18, f10, f26, f2, rmm # perform operation
fnmsub.s f18, f10, f26, f2, rne # perform operation
fnmsub.s f18, f10, f26, f2, rtz # perform operation
fnmsub.s f18, f10, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x76b57dfe984b8fa6 # load x3 with value 0x76b57dfe984b8fa6
sw x3, 0(x2) # store 0x76b57dfe984b8fa6 in memory
flw f21, 0(x2) # load 0x76b57dfe984b8fa6 from memory into f21
fnmsub.s f1, f7, f20, f21, dyn # perform operation
fnmsub.s f1, f7, f20, f21, rdn # perform operation
fnmsub.s f1, f7, f20, f21, rmm # perform operation
fnmsub.s f1, f7, f20, f21, rne # perform operation
fnmsub.s f1, f7, f20, f21, rtz # perform operation
fnmsub.s f1, f7, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f7, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f7, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f7, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f7, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f7, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xb8318cbe063495be # load x3 with value 0xb8318cbe063495be
sw x3, 0(x2) # store 0xb8318cbe063495be in memory
flw f28, 0(x2) # load 0xb8318cbe063495be from memory into f28
fnmsub.s f15, f27, f29, f28, dyn # perform operation
fnmsub.s f15, f27, f29, f28, rdn # perform operation
fnmsub.s f15, f27, f29, f28, rmm # perform operation
fnmsub.s f15, f27, f29, f28, rne # perform operation
fnmsub.s f15, f27, f29, f28, rtz # perform operation
fnmsub.s f15, f27, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x921bc33f5f8f5d02 # load x3 with value 0x921bc33f5f8f5d02
sw x3, 0(x2) # store 0x921bc33f5f8f5d02 in memory
flw f7, 0(x2) # load 0x921bc33f5f8f5d02 from memory into f7
fnmsub.s f26, f23, f24, f7, dyn # perform operation
fnmsub.s f26, f23, f24, f7, rdn # perform operation
fnmsub.s f26, f23, f24, f7, rmm # perform operation
fnmsub.s f26, f23, f24, f7, rne # perform operation
fnmsub.s f26, f23, f24, f7, rtz # perform operation
fnmsub.s f26, f23, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x318ff9e7e1ae9b95 # load x3 with value 0x318ff9e7e1ae9b95
sw x3, 0(x2) # store 0x318ff9e7e1ae9b95 in memory
flw f9, 0(x2) # load 0x318ff9e7e1ae9b95 from memory into f9
fnmsub.s f10, f16, f30, f9, dyn # perform operation
fnmsub.s f10, f16, f30, f9, rdn # perform operation
fnmsub.s f10, f16, f30, f9, rmm # perform operation
fnmsub.s f10, f16, f30, f9, rne # perform operation
fnmsub.s f10, f16, f30, f9, rtz # perform operation
fnmsub.s f10, f16, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x36e139a241084f06 # load x3 with value 0x36e139a241084f06
sw x3, 0(x2) # store 0x36e139a241084f06 in memory
flw f30, 0(x2) # load 0x36e139a241084f06 from memory into f30
fnmsub.s f5, f22, f14, f30, dyn # perform operation
fnmsub.s f5, f22, f14, f30, rdn # perform operation
fnmsub.s f5, f22, f14, f30, rmm # perform operation
fnmsub.s f5, f22, f14, f30, rne # perform operation
fnmsub.s f5, f22, f14, f30, rtz # perform operation
fnmsub.s f5, f22, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xb1c453cb519d11f3 # load x3 with value 0xb1c453cb519d11f3
sw x3, 0(x2) # store 0xb1c453cb519d11f3 in memory
flw f2, 0(x2) # load 0xb1c453cb519d11f3 from memory into f2
fnmsub.s f16, f30, f9, f2, dyn # perform operation
fnmsub.s f16, f30, f9, f2, rdn # perform operation
fnmsub.s f16, f30, f9, f2, rmm # perform operation
fnmsub.s f16, f30, f9, f2, rne # perform operation
fnmsub.s f16, f30, f9, f2, rtz # perform operation
fnmsub.s f16, f30, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f30, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x6d139de2895e705 # load x3 with value 0x6d139de2895e705
sw x3, 0(x2) # store 0x6d139de2895e705 in memory
flw f6, 0(x2) # load 0x6d139de2895e705 from memory into f6
fnmsub.s f3, f22, f23, f6, dyn # perform operation
fnmsub.s f3, f22, f23, f6, rdn # perform operation
fnmsub.s f3, f22, f23, f6, rmm # perform operation
fnmsub.s f3, f22, f23, f6, rne # perform operation
fnmsub.s f3, f22, f23, f6, rtz # perform operation
fnmsub.s f3, f22, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x10312e5f5038741f # load x3 with value 0x10312e5f5038741f
sw x3, 0(x2) # store 0x10312e5f5038741f in memory
flw f2, 0(x2) # load 0x10312e5f5038741f from memory into f2
fnmsub.s f14, f17, f15, f2, dyn # perform operation
fnmsub.s f14, f17, f15, f2, rdn # perform operation
fnmsub.s f14, f17, f15, f2, rmm # perform operation
fnmsub.s f14, f17, f15, f2, rne # perform operation
fnmsub.s f14, f17, f15, f2, rtz # perform operation
fnmsub.s f14, f17, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x290264bbf3dc1598 # load x3 with value 0x290264bbf3dc1598
sw x3, 0(x2) # store 0x290264bbf3dc1598 in memory
flw f24, 0(x2) # load 0x290264bbf3dc1598 from memory into f24
fnmsub.s f22, f10, f9, f24, dyn # perform operation
fnmsub.s f22, f10, f9, f24, rdn # perform operation
fnmsub.s f22, f10, f9, f24, rmm # perform operation
fnmsub.s f22, f10, f9, f24, rne # perform operation
fnmsub.s f22, f10, f9, f24, rtz # perform operation
fnmsub.s f22, f10, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xb1234af971912f88 # load x3 with value 0xb1234af971912f88
sw x3, 0(x2) # store 0xb1234af971912f88 in memory
flw f20, 0(x2) # load 0xb1234af971912f88 from memory into f20
fnmsub.s f18, f15, f29, f20, dyn # perform operation
fnmsub.s f18, f15, f29, f20, rdn # perform operation
fnmsub.s f18, f15, f29, f20, rmm # perform operation
fnmsub.s f18, f15, f29, f20, rne # perform operation
fnmsub.s f18, f15, f29, f20, rtz # perform operation
fnmsub.s f18, f15, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x1bf2dd79e6e43d19 # load x3 with value 0x1bf2dd79e6e43d19
sw x3, 0(x2) # store 0x1bf2dd79e6e43d19 in memory
flw f15, 0(x2) # load 0x1bf2dd79e6e43d19 from memory into f15
fnmsub.s f6, f18, f5, f15, dyn # perform operation
fnmsub.s f6, f18, f5, f15, rdn # perform operation
fnmsub.s f6, f18, f5, f15, rmm # perform operation
fnmsub.s f6, f18, f5, f15, rne # perform operation
fnmsub.s f6, f18, f5, f15, rtz # perform operation
fnmsub.s f6, f18, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f18, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x84db2d97d67887bc # load x3 with value 0x84db2d97d67887bc
sw x3, 0(x2) # store 0x84db2d97d67887bc in memory
flw f10, 0(x2) # load 0x84db2d97d67887bc from memory into f10
fnmsub.s f17, f19, f22, f10, dyn # perform operation
fnmsub.s f17, f19, f22, f10, rdn # perform operation
fnmsub.s f17, f19, f22, f10, rmm # perform operation
fnmsub.s f17, f19, f22, f10, rne # perform operation
fnmsub.s f17, f19, f22, f10, rtz # perform operation
fnmsub.s f17, f19, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xd7ef52ce528c86e # load x3 with value 0xd7ef52ce528c86e
sw x3, 0(x2) # store 0xd7ef52ce528c86e in memory
flw f7, 0(x2) # load 0xd7ef52ce528c86e from memory into f7
fnmsub.s f2, f20, f8, f7, dyn # perform operation
fnmsub.s f2, f20, f8, f7, rdn # perform operation
fnmsub.s f2, f20, f8, f7, rmm # perform operation
fnmsub.s f2, f20, f8, f7, rne # perform operation
fnmsub.s f2, f20, f8, f7, rtz # perform operation
fnmsub.s f2, f20, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f20, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x7b0dc317031b526 # load x3 with value 0x7b0dc317031b526
sw x3, 0(x2) # store 0x7b0dc317031b526 in memory
flw f23, 0(x2) # load 0x7b0dc317031b526 from memory into f23
fnmsub.s f13, f27, f1, f23, dyn # perform operation
fnmsub.s f13, f27, f1, f23, rdn # perform operation
fnmsub.s f13, f27, f1, f23, rmm # perform operation
fnmsub.s f13, f27, f1, f23, rne # perform operation
fnmsub.s f13, f27, f1, f23, rtz # perform operation
fnmsub.s f13, f27, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x227079ae5d89c41f # load x3 with value 0x227079ae5d89c41f
sw x3, 0(x2) # store 0x227079ae5d89c41f in memory
flw f11, 0(x2) # load 0x227079ae5d89c41f from memory into f11
fnmsub.s f5, f18, f6, f11, dyn # perform operation
fnmsub.s f5, f18, f6, f11, rdn # perform operation
fnmsub.s f5, f18, f6, f11, rmm # perform operation
fnmsub.s f5, f18, f6, f11, rne # perform operation
fnmsub.s f5, f18, f6, f11, rtz # perform operation
fnmsub.s f5, f18, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x192d57698ffe7963 # load x3 with value 0x192d57698ffe7963
sw x3, 0(x2) # store 0x192d57698ffe7963 in memory
flw f30, 0(x2) # load 0x192d57698ffe7963 from memory into f30
fnmsub.s f8, f26, f18, f30, dyn # perform operation
fnmsub.s f8, f26, f18, f30, rdn # perform operation
fnmsub.s f8, f26, f18, f30, rmm # perform operation
fnmsub.s f8, f26, f18, f30, rne # perform operation
fnmsub.s f8, f26, f18, f30, rtz # perform operation
fnmsub.s f8, f26, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xa4b4252a36588edd # load x3 with value 0xa4b4252a36588edd
sw x3, 0(x2) # store 0xa4b4252a36588edd in memory
flw f12, 0(x2) # load 0xa4b4252a36588edd from memory into f12
fnmsub.s f1, f20, f7, f12, dyn # perform operation
fnmsub.s f1, f20, f7, f12, rdn # perform operation
fnmsub.s f1, f20, f7, f12, rmm # perform operation
fnmsub.s f1, f20, f7, f12, rne # perform operation
fnmsub.s f1, f20, f7, f12, rtz # perform operation
fnmsub.s f1, f20, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xf3f2d8c07afb957b # load x3 with value 0xf3f2d8c07afb957b
sw x3, 0(x2) # store 0xf3f2d8c07afb957b in memory
flw f8, 0(x2) # load 0xf3f2d8c07afb957b from memory into f8
fnmsub.s f25, f24, f10, f8, dyn # perform operation
fnmsub.s f25, f24, f10, f8, rdn # perform operation
fnmsub.s f25, f24, f10, f8, rmm # perform operation
fnmsub.s f25, f24, f10, f8, rne # perform operation
fnmsub.s f25, f24, f10, f8, rtz # perform operation
fnmsub.s f25, f24, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f24, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x39f8e0233c6d515f # load x3 with value 0x39f8e0233c6d515f
sw x3, 0(x2) # store 0x39f8e0233c6d515f in memory
flw f30, 0(x2) # load 0x39f8e0233c6d515f from memory into f30
fnmsub.s f19, f3, f15, f30, dyn # perform operation
fnmsub.s f19, f3, f15, f30, rdn # perform operation
fnmsub.s f19, f3, f15, f30, rmm # perform operation
fnmsub.s f19, f3, f15, f30, rne # perform operation
fnmsub.s f19, f3, f15, f30, rtz # perform operation
fnmsub.s f19, f3, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x68474453b2e7117 # load x3 with value 0x68474453b2e7117
sw x3, 0(x2) # store 0x68474453b2e7117 in memory
flw f2, 0(x2) # load 0x68474453b2e7117 from memory into f2
fnmsub.s f12, f26, f27, f2, dyn # perform operation
fnmsub.s f12, f26, f27, f2, rdn # perform operation
fnmsub.s f12, f26, f27, f2, rmm # perform operation
fnmsub.s f12, f26, f27, f2, rne # perform operation
fnmsub.s f12, f26, f27, f2, rtz # perform operation
fnmsub.s f12, f26, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x1dd5597f1ad77896 # load x3 with value 0x1dd5597f1ad77896
sw x3, 0(x2) # store 0x1dd5597f1ad77896 in memory
flw f6, 0(x2) # load 0x1dd5597f1ad77896 from memory into f6
fnmsub.s f11, f22, f10, f6, dyn # perform operation
fnmsub.s f11, f22, f10, f6, rdn # perform operation
fnmsub.s f11, f22, f10, f6, rmm # perform operation
fnmsub.s f11, f22, f10, f6, rne # perform operation
fnmsub.s f11, f22, f10, f6, rtz # perform operation
fnmsub.s f11, f22, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x6f7f098106ce1acb # load x3 with value 0x6f7f098106ce1acb
sw x3, 0(x2) # store 0x6f7f098106ce1acb in memory
flw f26, 0(x2) # load 0x6f7f098106ce1acb from memory into f26
fnmsub.s f8, f16, f19, f26, dyn # perform operation
fnmsub.s f8, f16, f19, f26, rdn # perform operation
fnmsub.s f8, f16, f19, f26, rmm # perform operation
fnmsub.s f8, f16, f19, f26, rne # perform operation
fnmsub.s f8, f16, f19, f26, rtz # perform operation
fnmsub.s f8, f16, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x28677c01e04c2e38 # load x3 with value 0x28677c01e04c2e38
sw x3, 0(x2) # store 0x28677c01e04c2e38 in memory
flw f3, 0(x2) # load 0x28677c01e04c2e38 from memory into f3
fnmsub.s f7, f24, f21, f3, dyn # perform operation
fnmsub.s f7, f24, f21, f3, rdn # perform operation
fnmsub.s f7, f24, f21, f3, rmm # perform operation
fnmsub.s f7, f24, f21, f3, rne # perform operation
fnmsub.s f7, f24, f21, f3, rtz # perform operation
fnmsub.s f7, f24, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f24, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xe861d5fd653b04e3 # load x3 with value 0xe861d5fd653b04e3
sw x3, 0(x2) # store 0xe861d5fd653b04e3 in memory
flw f29, 0(x2) # load 0xe861d5fd653b04e3 from memory into f29
fnmsub.s f30, f18, f14, f29, dyn # perform operation
fnmsub.s f30, f18, f14, f29, rdn # perform operation
fnmsub.s f30, f18, f14, f29, rmm # perform operation
fnmsub.s f30, f18, f14, f29, rne # perform operation
fnmsub.s f30, f18, f14, f29, rtz # perform operation
fnmsub.s f30, f18, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x4286169ae784c2d8 # load x3 with value 0x4286169ae784c2d8
sw x3, 0(x2) # store 0x4286169ae784c2d8 in memory
flw f30, 0(x2) # load 0x4286169ae784c2d8 from memory into f30
fnmsub.s f6, f15, f22, f30, dyn # perform operation
fnmsub.s f6, f15, f22, f30, rdn # perform operation
fnmsub.s f6, f15, f22, f30, rmm # perform operation
fnmsub.s f6, f15, f22, f30, rne # perform operation
fnmsub.s f6, f15, f22, f30, rtz # perform operation
fnmsub.s f6, f15, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xb39a7239eeefe8f4 # load x3 with value 0xb39a7239eeefe8f4
sw x3, 0(x2) # store 0xb39a7239eeefe8f4 in memory
flw f7, 0(x2) # load 0xb39a7239eeefe8f4 from memory into f7
fnmsub.s f25, f23, f17, f7, dyn # perform operation
fnmsub.s f25, f23, f17, f7, rdn # perform operation
fnmsub.s f25, f23, f17, f7, rmm # perform operation
fnmsub.s f25, f23, f17, f7, rne # perform operation
fnmsub.s f25, f23, f17, f7, rtz # perform operation
fnmsub.s f25, f23, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xe75cbc6e0ef36d35 # load x3 with value 0xe75cbc6e0ef36d35
sw x3, 0(x2) # store 0xe75cbc6e0ef36d35 in memory
flw f2, 0(x2) # load 0xe75cbc6e0ef36d35 from memory into f2
fnmsub.s f16, f1, f27, f2, dyn # perform operation
fnmsub.s f16, f1, f27, f2, rdn # perform operation
fnmsub.s f16, f1, f27, f2, rmm # perform operation
fnmsub.s f16, f1, f27, f2, rne # perform operation
fnmsub.s f16, f1, f27, f2, rtz # perform operation
fnmsub.s f16, f1, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x6d80d513a731deeb # load x3 with value 0x6d80d513a731deeb
sw x3, 0(x2) # store 0x6d80d513a731deeb in memory
flw f28, 0(x2) # load 0x6d80d513a731deeb from memory into f28
fnmsub.s f5, f22, f2, f28, dyn # perform operation
fnmsub.s f5, f22, f2, f28, rdn # perform operation
fnmsub.s f5, f22, f2, f28, rmm # perform operation
fnmsub.s f5, f22, f2, f28, rne # perform operation
fnmsub.s f5, f22, f2, f28, rtz # perform operation
fnmsub.s f5, f22, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xec54b4ae037c8139 # load x3 with value 0xec54b4ae037c8139
sw x3, 0(x2) # store 0xec54b4ae037c8139 in memory
flw f30, 0(x2) # load 0xec54b4ae037c8139 from memory into f30
fnmsub.s f19, f5, f15, f30, dyn # perform operation
fnmsub.s f19, f5, f15, f30, rdn # perform operation
fnmsub.s f19, f5, f15, f30, rmm # perform operation
fnmsub.s f19, f5, f15, f30, rne # perform operation
fnmsub.s f19, f5, f15, f30, rtz # perform operation
fnmsub.s f19, f5, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x5db75bca4182afef # load x3 with value 0x5db75bca4182afef
sw x3, 0(x2) # store 0x5db75bca4182afef in memory
flw f14, 0(x2) # load 0x5db75bca4182afef from memory into f14
fnmsub.s f19, f17, f30, f14, dyn # perform operation
fnmsub.s f19, f17, f30, f14, rdn # perform operation
fnmsub.s f19, f17, f30, f14, rmm # perform operation
fnmsub.s f19, f17, f30, f14, rne # perform operation
fnmsub.s f19, f17, f30, f14, rtz # perform operation
fnmsub.s f19, f17, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0xada34572e1f07547 # load x3 with value 0xada34572e1f07547
sw x3, 0(x2) # store 0xada34572e1f07547 in memory
flw f14, 0(x2) # load 0xada34572e1f07547 from memory into f14
fnmsub.s f2, f18, f26, f14, dyn # perform operation
fnmsub.s f2, f18, f26, f14, rdn # perform operation
fnmsub.s f2, f18, f26, f14, rmm # perform operation
fnmsub.s f2, f18, f26, f14, rne # perform operation
fnmsub.s f2, f18, f26, f14, rtz # perform operation
fnmsub.s f2, f18, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xacb53a2e5257806d # load x3 with value 0xacb53a2e5257806d
sw x3, 0(x2) # store 0xacb53a2e5257806d in memory
flw f10, 0(x2) # load 0xacb53a2e5257806d from memory into f10
fnmsub.s f16, f7, f12, f10, dyn # perform operation
fnmsub.s f16, f7, f12, f10, rdn # perform operation
fnmsub.s f16, f7, f12, f10, rmm # perform operation
fnmsub.s f16, f7, f12, f10, rne # perform operation
fnmsub.s f16, f7, f12, f10, rtz # perform operation
fnmsub.s f16, f7, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f7, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x135699b894e05621 # load x3 with value 0x135699b894e05621
sw x3, 0(x2) # store 0x135699b894e05621 in memory
flw f1, 0(x2) # load 0x135699b894e05621 from memory into f1
fnmsub.s f28, f16, f31, f1, dyn # perform operation
fnmsub.s f28, f16, f31, f1, rdn # perform operation
fnmsub.s f28, f16, f31, f1, rmm # perform operation
fnmsub.s f28, f16, f31, f1, rne # perform operation
fnmsub.s f28, f16, f31, f1, rtz # perform operation
fnmsub.s f28, f16, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x82201ba7af9e460f # load x3 with value 0x82201ba7af9e460f
sw x3, 0(x2) # store 0x82201ba7af9e460f in memory
flw f27, 0(x2) # load 0x82201ba7af9e460f from memory into f27
fnmsub.s f13, f10, f7, f27, dyn # perform operation
fnmsub.s f13, f10, f7, f27, rdn # perform operation
fnmsub.s f13, f10, f7, f27, rmm # perform operation
fnmsub.s f13, f10, f7, f27, rne # perform operation
fnmsub.s f13, f10, f7, f27, rtz # perform operation
fnmsub.s f13, f10, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f10, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x770cccdf919613f2 # load x3 with value 0x770cccdf919613f2
sw x3, 0(x2) # store 0x770cccdf919613f2 in memory
flw f26, 0(x2) # load 0x770cccdf919613f2 from memory into f26
fnmsub.s f11, f13, f5, f26, dyn # perform operation
fnmsub.s f11, f13, f5, f26, rdn # perform operation
fnmsub.s f11, f13, f5, f26, rmm # perform operation
fnmsub.s f11, f13, f5, f26, rne # perform operation
fnmsub.s f11, f13, f5, f26, rtz # perform operation
fnmsub.s f11, f13, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x6fd87b713c72db0a # load x3 with value 0x6fd87b713c72db0a
sw x3, 0(x2) # store 0x6fd87b713c72db0a in memory
flw f9, 0(x2) # load 0x6fd87b713c72db0a from memory into f9
fnmsub.s f22, f1, f28, f9, dyn # perform operation
fnmsub.s f22, f1, f28, f9, rdn # perform operation
fnmsub.s f22, f1, f28, f9, rmm # perform operation
fnmsub.s f22, f1, f28, f9, rne # perform operation
fnmsub.s f22, f1, f28, f9, rtz # perform operation
fnmsub.s f22, f1, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x208444cffe67353e # load x3 with value 0x208444cffe67353e
sw x3, 0(x2) # store 0x208444cffe67353e in memory
flw f16, 0(x2) # load 0x208444cffe67353e from memory into f16
fnmsub.s f23, f2, f31, f16, dyn # perform operation
fnmsub.s f23, f2, f31, f16, rdn # perform operation
fnmsub.s f23, f2, f31, f16, rmm # perform operation
fnmsub.s f23, f2, f31, f16, rne # perform operation
fnmsub.s f23, f2, f31, f16, rtz # perform operation
fnmsub.s f23, f2, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f2, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f2, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f2, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f2, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f2, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xd00d0b928a9f2400 # load x3 with value 0xd00d0b928a9f2400
sw x3, 0(x2) # store 0xd00d0b928a9f2400 in memory
flw f2, 0(x2) # load 0xd00d0b928a9f2400 from memory into f2
fnmsub.s f5, f12, f16, f2, dyn # perform operation
fnmsub.s f5, f12, f16, f2, rdn # perform operation
fnmsub.s f5, f12, f16, f2, rmm # perform operation
fnmsub.s f5, f12, f16, f2, rne # perform operation
fnmsub.s f5, f12, f16, f2, rtz # perform operation
fnmsub.s f5, f12, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x2b63eebcee32b7cb # load x3 with value 0x2b63eebcee32b7cb
sw x3, 0(x2) # store 0x2b63eebcee32b7cb in memory
flw f30, 0(x2) # load 0x2b63eebcee32b7cb from memory into f30
fnmsub.s f14, f16, f27, f30, dyn # perform operation
fnmsub.s f14, f16, f27, f30, rdn # perform operation
fnmsub.s f14, f16, f27, f30, rmm # perform operation
fnmsub.s f14, f16, f27, f30, rne # perform operation
fnmsub.s f14, f16, f27, f30, rtz # perform operation
fnmsub.s f14, f16, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xbbb5c0811f029081 # load x3 with value 0xbbb5c0811f029081
sw x3, 0(x2) # store 0xbbb5c0811f029081 in memory
flw f12, 0(x2) # load 0xbbb5c0811f029081 from memory into f12
fnmsub.s f5, f9, f8, f12, dyn # perform operation
fnmsub.s f5, f9, f8, f12, rdn # perform operation
fnmsub.s f5, f9, f8, f12, rmm # perform operation
fnmsub.s f5, f9, f8, f12, rne # perform operation
fnmsub.s f5, f9, f8, f12, rtz # perform operation
fnmsub.s f5, f9, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x2390da743d8dc5b2 # load x3 with value 0x2390da743d8dc5b2
sw x3, 0(x2) # store 0x2390da743d8dc5b2 in memory
flw f5, 0(x2) # load 0x2390da743d8dc5b2 from memory into f5
fnmsub.s f15, f26, f31, f5, dyn # perform operation
fnmsub.s f15, f26, f31, f5, rdn # perform operation
fnmsub.s f15, f26, f31, f5, rmm # perform operation
fnmsub.s f15, f26, f31, f5, rne # perform operation
fnmsub.s f15, f26, f31, f5, rtz # perform operation
fnmsub.s f15, f26, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x91a7633c1472165e # load x3 with value 0x91a7633c1472165e
sw x3, 0(x2) # store 0x91a7633c1472165e in memory
flw f23, 0(x2) # load 0x91a7633c1472165e from memory into f23
fnmsub.s f1, f15, f27, f23, dyn # perform operation
fnmsub.s f1, f15, f27, f23, rdn # perform operation
fnmsub.s f1, f15, f27, f23, rmm # perform operation
fnmsub.s f1, f15, f27, f23, rne # perform operation
fnmsub.s f1, f15, f27, f23, rtz # perform operation
fnmsub.s f1, f15, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x9eea7a205dfb91f5 # load x3 with value 0x9eea7a205dfb91f5
sw x3, 0(x2) # store 0x9eea7a205dfb91f5 in memory
flw f16, 0(x2) # load 0x9eea7a205dfb91f5 from memory into f16
fnmsub.s f23, f13, f6, f16, dyn # perform operation
fnmsub.s f23, f13, f6, f16, rdn # perform operation
fnmsub.s f23, f13, f6, f16, rmm # perform operation
fnmsub.s f23, f13, f6, f16, rne # perform operation
fnmsub.s f23, f13, f6, f16, rtz # perform operation
fnmsub.s f23, f13, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0xd55f5eeb40279fdf # load x3 with value 0xd55f5eeb40279fdf
sw x3, 0(x2) # store 0xd55f5eeb40279fdf in memory
flw f26, 0(x2) # load 0xd55f5eeb40279fdf from memory into f26
fnmsub.s f18, f6, f30, f26, dyn # perform operation
fnmsub.s f18, f6, f30, f26, rdn # perform operation
fnmsub.s f18, f6, f30, f26, rmm # perform operation
fnmsub.s f18, f6, f30, f26, rne # perform operation
fnmsub.s f18, f6, f30, f26, rtz # perform operation
fnmsub.s f18, f6, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x1c4fadcf7eeb6487 # load x3 with value 0x1c4fadcf7eeb6487
sw x3, 0(x2) # store 0x1c4fadcf7eeb6487 in memory
flw f27, 0(x2) # load 0x1c4fadcf7eeb6487 from memory into f27
fnmsub.s f21, f6, f11, f27, dyn # perform operation
fnmsub.s f21, f6, f11, f27, rdn # perform operation
fnmsub.s f21, f6, f11, f27, rmm # perform operation
fnmsub.s f21, f6, f11, f27, rne # perform operation
fnmsub.s f21, f6, f11, f27, rtz # perform operation
fnmsub.s f21, f6, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f6, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xfabec5b767fbe786 # load x3 with value 0xfabec5b767fbe786
sw x3, 0(x2) # store 0xfabec5b767fbe786 in memory
flw f13, 0(x2) # load 0xfabec5b767fbe786 from memory into f13
fnmsub.s f28, f21, f27, f13, dyn # perform operation
fnmsub.s f28, f21, f27, f13, rdn # perform operation
fnmsub.s f28, f21, f27, f13, rmm # perform operation
fnmsub.s f28, f21, f27, f13, rne # perform operation
fnmsub.s f28, f21, f27, f13, rtz # perform operation
fnmsub.s f28, f21, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f21, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x2d1f589809c662f # load x3 with value 0x2d1f589809c662f
sw x3, 0(x2) # store 0x2d1f589809c662f in memory
flw f21, 0(x2) # load 0x2d1f589809c662f from memory into f21
fnmsub.s f3, f16, f15, f21, dyn # perform operation
fnmsub.s f3, f16, f15, f21, rdn # perform operation
fnmsub.s f3, f16, f15, f21, rmm # perform operation
fnmsub.s f3, f16, f15, f21, rne # perform operation
fnmsub.s f3, f16, f15, f21, rtz # perform operation
fnmsub.s f3, f16, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xba52255a77673b47 # load x3 with value 0xba52255a77673b47
sw x3, 0(x2) # store 0xba52255a77673b47 in memory
flw f29, 0(x2) # load 0xba52255a77673b47 from memory into f29
fnmsub.s f17, f2, f13, f29, dyn # perform operation
fnmsub.s f17, f2, f13, f29, rdn # perform operation
fnmsub.s f17, f2, f13, f29, rmm # perform operation
fnmsub.s f17, f2, f13, f29, rne # perform operation
fnmsub.s f17, f2, f13, f29, rtz # perform operation
fnmsub.s f17, f2, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f2, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f2, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f2, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f2, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f2, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xc02b8816696018ab # load x3 with value 0xc02b8816696018ab
sw x3, 0(x2) # store 0xc02b8816696018ab in memory
flw f2, 0(x2) # load 0xc02b8816696018ab from memory into f2
fnmsub.s f30, f25, f10, f2, dyn # perform operation
fnmsub.s f30, f25, f10, f2, rdn # perform operation
fnmsub.s f30, f25, f10, f2, rmm # perform operation
fnmsub.s f30, f25, f10, f2, rne # perform operation
fnmsub.s f30, f25, f10, f2, rtz # perform operation
fnmsub.s f30, f25, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x4f8e2cc52e131aec # load x3 with value 0x4f8e2cc52e131aec
sw x3, 0(x2) # store 0x4f8e2cc52e131aec in memory
flw f26, 0(x2) # load 0x4f8e2cc52e131aec from memory into f26
fnmsub.s f5, f1, f3, f26, dyn # perform operation
fnmsub.s f5, f1, f3, f26, rdn # perform operation
fnmsub.s f5, f1, f3, f26, rmm # perform operation
fnmsub.s f5, f1, f3, f26, rne # perform operation
fnmsub.s f5, f1, f3, f26, rtz # perform operation
fnmsub.s f5, f1, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f1, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x913e25a02cad9aca # load x3 with value 0x913e25a02cad9aca
sw x3, 0(x2) # store 0x913e25a02cad9aca in memory
flw f8, 0(x2) # load 0x913e25a02cad9aca from memory into f8
fnmsub.s f12, f5, f27, f8, dyn # perform operation
fnmsub.s f12, f5, f27, f8, rdn # perform operation
fnmsub.s f12, f5, f27, f8, rmm # perform operation
fnmsub.s f12, f5, f27, f8, rne # perform operation
fnmsub.s f12, f5, f27, f8, rtz # perform operation
fnmsub.s f12, f5, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x66b7bd169e73dfb3 # load x3 with value 0x66b7bd169e73dfb3
sw x3, 0(x2) # store 0x66b7bd169e73dfb3 in memory
flw f28, 0(x2) # load 0x66b7bd169e73dfb3 from memory into f28
fnmsub.s f27, f29, f9, f28, dyn # perform operation
fnmsub.s f27, f29, f9, f28, rdn # perform operation
fnmsub.s f27, f29, f9, f28, rmm # perform operation
fnmsub.s f27, f29, f9, f28, rne # perform operation
fnmsub.s f27, f29, f9, f28, rtz # perform operation
fnmsub.s f27, f29, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f29, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x19383a140ac4d1d8 # load x3 with value 0x19383a140ac4d1d8
sw x3, 0(x2) # store 0x19383a140ac4d1d8 in memory
flw f30, 0(x2) # load 0x19383a140ac4d1d8 from memory into f30
fnmsub.s f27, f7, f22, f30, dyn # perform operation
fnmsub.s f27, f7, f22, f30, rdn # perform operation
fnmsub.s f27, f7, f22, f30, rmm # perform operation
fnmsub.s f27, f7, f22, f30, rne # perform operation
fnmsub.s f27, f7, f22, f30, rtz # perform operation
fnmsub.s f27, f7, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x65443c12df477874 # load x3 with value 0x65443c12df477874
sw x3, 0(x2) # store 0x65443c12df477874 in memory
flw f29, 0(x2) # load 0x65443c12df477874 from memory into f29
fnmsub.s f2, f12, f1, f29, dyn # perform operation
fnmsub.s f2, f12, f1, f29, rdn # perform operation
fnmsub.s f2, f12, f1, f29, rmm # perform operation
fnmsub.s f2, f12, f1, f29, rne # perform operation
fnmsub.s f2, f12, f1, f29, rtz # perform operation
fnmsub.s f2, f12, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f12, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x93f16048c3c8bc7e # load x3 with value 0x93f16048c3c8bc7e
sw x3, 0(x2) # store 0x93f16048c3c8bc7e in memory
flw f27, 0(x2) # load 0x93f16048c3c8bc7e from memory into f27
fnmsub.s f26, f9, f14, f27, dyn # perform operation
fnmsub.s f26, f9, f14, f27, rdn # perform operation
fnmsub.s f26, f9, f14, f27, rmm # perform operation
fnmsub.s f26, f9, f14, f27, rne # perform operation
fnmsub.s f26, f9, f14, f27, rtz # perform operation
fnmsub.s f26, f9, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x9716338c4d1424f7 # load x3 with value 0x9716338c4d1424f7
sw x3, 0(x2) # store 0x9716338c4d1424f7 in memory
flw f14, 0(x2) # load 0x9716338c4d1424f7 from memory into f14
fnmsub.s f25, f15, f10, f14, dyn # perform operation
fnmsub.s f25, f15, f10, f14, rdn # perform operation
fnmsub.s f25, f15, f10, f14, rmm # perform operation
fnmsub.s f25, f15, f10, f14, rne # perform operation
fnmsub.s f25, f15, f10, f14, rtz # perform operation
fnmsub.s f25, f15, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x57265bd0308cd2e6 # load x3 with value 0x57265bd0308cd2e6
sw x3, 0(x2) # store 0x57265bd0308cd2e6 in memory
flw f22, 0(x2) # load 0x57265bd0308cd2e6 from memory into f22
fnmsub.s f12, f21, f10, f22, dyn # perform operation
fnmsub.s f12, f21, f10, f22, rdn # perform operation
fnmsub.s f12, f21, f10, f22, rmm # perform operation
fnmsub.s f12, f21, f10, f22, rne # perform operation
fnmsub.s f12, f21, f10, f22, rtz # perform operation
fnmsub.s f12, f21, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xd250ea96014da1a6 # load x3 with value 0xd250ea96014da1a6
sw x3, 0(x2) # store 0xd250ea96014da1a6 in memory
flw f7, 0(x2) # load 0xd250ea96014da1a6 from memory into f7
fnmsub.s f18, f22, f20, f7, dyn # perform operation
fnmsub.s f18, f22, f20, f7, rdn # perform operation
fnmsub.s f18, f22, f20, f7, rmm # perform operation
fnmsub.s f18, f22, f20, f7, rne # perform operation
fnmsub.s f18, f22, f20, f7, rtz # perform operation
fnmsub.s f18, f22, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xe9673a29b2ab90f9 # load x3 with value 0xe9673a29b2ab90f9
sw x3, 0(x2) # store 0xe9673a29b2ab90f9 in memory
flw f3, 0(x2) # load 0xe9673a29b2ab90f9 from memory into f3
fnmsub.s f16, f27, f7, f3, dyn # perform operation
fnmsub.s f16, f27, f7, f3, rdn # perform operation
fnmsub.s f16, f27, f7, f3, rmm # perform operation
fnmsub.s f16, f27, f7, f3, rne # perform operation
fnmsub.s f16, f27, f7, f3, rtz # perform operation
fnmsub.s f16, f27, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x780c4bb488463b08 # load x3 with value 0x780c4bb488463b08
sw x3, 0(x2) # store 0x780c4bb488463b08 in memory
flw f23, 0(x2) # load 0x780c4bb488463b08 from memory into f23
fnmsub.s f7, f8, f29, f23, dyn # perform operation
fnmsub.s f7, f8, f29, f23, rdn # perform operation
fnmsub.s f7, f8, f29, f23, rmm # perform operation
fnmsub.s f7, f8, f29, f23, rne # perform operation
fnmsub.s f7, f8, f29, f23, rtz # perform operation
fnmsub.s f7, f8, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x2ba0987467f9a6ca # load x3 with value 0x2ba0987467f9a6ca
sw x3, 0(x2) # store 0x2ba0987467f9a6ca in memory
flw f30, 0(x2) # load 0x2ba0987467f9a6ca from memory into f30
fnmsub.s f23, f11, f16, f30, dyn # perform operation
fnmsub.s f23, f11, f16, f30, rdn # perform operation
fnmsub.s f23, f11, f16, f30, rmm # perform operation
fnmsub.s f23, f11, f16, f30, rne # perform operation
fnmsub.s f23, f11, f16, f30, rtz # perform operation
fnmsub.s f23, f11, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x2f3b530bc2a1b2f3 # load x3 with value 0x2f3b530bc2a1b2f3
sw x3, 0(x2) # store 0x2f3b530bc2a1b2f3 in memory
flw f19, 0(x2) # load 0x2f3b530bc2a1b2f3 from memory into f19
fnmsub.s f13, f11, f17, f19, dyn # perform operation
fnmsub.s f13, f11, f17, f19, rdn # perform operation
fnmsub.s f13, f11, f17, f19, rmm # perform operation
fnmsub.s f13, f11, f17, f19, rne # perform operation
fnmsub.s f13, f11, f17, f19, rtz # perform operation
fnmsub.s f13, f11, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f11, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x82d05db2c7f06d3b # load x3 with value 0x82d05db2c7f06d3b
sw x3, 0(x2) # store 0x82d05db2c7f06d3b in memory
flw f6, 0(x2) # load 0x82d05db2c7f06d3b from memory into f6
fnmsub.s f10, f27, f29, f6, dyn # perform operation
fnmsub.s f10, f27, f29, f6, rdn # perform operation
fnmsub.s f10, f27, f29, f6, rmm # perform operation
fnmsub.s f10, f27, f29, f6, rne # perform operation
fnmsub.s f10, f27, f29, f6, rtz # perform operation
fnmsub.s f10, f27, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f27, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0xe72c762a379f4635 # load x3 with value 0xe72c762a379f4635
sw x3, 0(x2) # store 0xe72c762a379f4635 in memory
flw f28, 0(x2) # load 0xe72c762a379f4635 from memory into f28
fnmsub.s f27, f11, f10, f28, dyn # perform operation
fnmsub.s f27, f11, f10, f28, rdn # perform operation
fnmsub.s f27, f11, f10, f28, rmm # perform operation
fnmsub.s f27, f11, f10, f28, rne # perform operation
fnmsub.s f27, f11, f10, f28, rtz # perform operation
fnmsub.s f27, f11, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x46a086d7e403f9fb # load x3 with value 0x46a086d7e403f9fb
sw x3, 0(x2) # store 0x46a086d7e403f9fb in memory
flw f22, 0(x2) # load 0x46a086d7e403f9fb from memory into f22
fnmsub.s f23, f25, f12, f22, dyn # perform operation
fnmsub.s f23, f25, f12, f22, rdn # perform operation
fnmsub.s f23, f25, f12, f22, rmm # perform operation
fnmsub.s f23, f25, f12, f22, rne # perform operation
fnmsub.s f23, f25, f12, f22, rtz # perform operation
fnmsub.s f23, f25, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x82a388aefa4cba5c # load x3 with value 0x82a388aefa4cba5c
sw x3, 0(x2) # store 0x82a388aefa4cba5c in memory
flw f20, 0(x2) # load 0x82a388aefa4cba5c from memory into f20
fnmsub.s f22, f8, f9, f20, dyn # perform operation
fnmsub.s f22, f8, f9, f20, rdn # perform operation
fnmsub.s f22, f8, f9, f20, rmm # perform operation
fnmsub.s f22, f8, f9, f20, rne # perform operation
fnmsub.s f22, f8, f9, f20, rtz # perform operation
fnmsub.s f22, f8, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f8, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x36cb51d70602ba7f # load x3 with value 0x36cb51d70602ba7f
sw x3, 0(x2) # store 0x36cb51d70602ba7f in memory
flw f30, 0(x2) # load 0x36cb51d70602ba7f from memory into f30
fnmsub.s f19, f20, f15, f30, dyn # perform operation
fnmsub.s f19, f20, f15, f30, rdn # perform operation
fnmsub.s f19, f20, f15, f30, rmm # perform operation
fnmsub.s f19, f20, f15, f30, rne # perform operation
fnmsub.s f19, f20, f15, f30, rtz # perform operation
fnmsub.s f19, f20, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f20, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xc40afcf61d94ad06 # load x3 with value 0xc40afcf61d94ad06
sw x3, 0(x2) # store 0xc40afcf61d94ad06 in memory
flw f19, 0(x2) # load 0xc40afcf61d94ad06 from memory into f19
fnmsub.s f9, f1, f18, f19, dyn # perform operation
fnmsub.s f9, f1, f18, f19, rdn # perform operation
fnmsub.s f9, f1, f18, f19, rmm # perform operation
fnmsub.s f9, f1, f18, f19, rne # perform operation
fnmsub.s f9, f1, f18, f19, rtz # perform operation
fnmsub.s f9, f1, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xb6edbc1a86a3b41d # load x3 with value 0xb6edbc1a86a3b41d
sw x3, 0(x2) # store 0xb6edbc1a86a3b41d in memory
flw f15, 0(x2) # load 0xb6edbc1a86a3b41d from memory into f15
fnmsub.s f7, f22, f17, f15, dyn # perform operation
fnmsub.s f7, f22, f17, f15, rdn # perform operation
fnmsub.s f7, f22, f17, f15, rmm # perform operation
fnmsub.s f7, f22, f17, f15, rne # perform operation
fnmsub.s f7, f22, f17, f15, rtz # perform operation
fnmsub.s f7, f22, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x4fc9bb883038f7 # load x3 with value 0x4fc9bb883038f7
sw x3, 0(x2) # store 0x4fc9bb883038f7 in memory
flw f25, 0(x2) # load 0x4fc9bb883038f7 from memory into f25
fnmsub.s f2, f17, f1, f25, dyn # perform operation
fnmsub.s f2, f17, f1, f25, rdn # perform operation
fnmsub.s f2, f17, f1, f25, rmm # perform operation
fnmsub.s f2, f17, f1, f25, rne # perform operation
fnmsub.s f2, f17, f1, f25, rtz # perform operation
fnmsub.s f2, f17, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x76983c2cec5c2343 # load x3 with value 0x76983c2cec5c2343
sw x3, 0(x2) # store 0x76983c2cec5c2343 in memory
flw f3, 0(x2) # load 0x76983c2cec5c2343 from memory into f3
fnmsub.s f24, f10, f26, f3, dyn # perform operation
fnmsub.s f24, f10, f26, f3, rdn # perform operation
fnmsub.s f24, f10, f26, f3, rmm # perform operation
fnmsub.s f24, f10, f26, f3, rne # perform operation
fnmsub.s f24, f10, f26, f3, rtz # perform operation
fnmsub.s f24, f10, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x4d7c62710f1533a5 # load x3 with value 0x4d7c62710f1533a5
sw x3, 0(x2) # store 0x4d7c62710f1533a5 in memory
flw f30, 0(x2) # load 0x4d7c62710f1533a5 from memory into f30
fnmsub.s f20, f21, f12, f30, dyn # perform operation
fnmsub.s f20, f21, f12, f30, rdn # perform operation
fnmsub.s f20, f21, f12, f30, rmm # perform operation
fnmsub.s f20, f21, f12, f30, rne # perform operation
fnmsub.s f20, f21, f12, f30, rtz # perform operation
fnmsub.s f20, f21, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x9cb6d6a2339a4c15 # load x3 with value 0x9cb6d6a2339a4c15
sw x3, 0(x2) # store 0x9cb6d6a2339a4c15 in memory
flw f23, 0(x2) # load 0x9cb6d6a2339a4c15 from memory into f23
fnmsub.s f5, f29, f27, f23, dyn # perform operation
fnmsub.s f5, f29, f27, f23, rdn # perform operation
fnmsub.s f5, f29, f27, f23, rmm # perform operation
fnmsub.s f5, f29, f27, f23, rne # perform operation
fnmsub.s f5, f29, f27, f23, rtz # perform operation
fnmsub.s f5, f29, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x8908ba0258e8b537 # load x3 with value 0x8908ba0258e8b537
sw x3, 0(x2) # store 0x8908ba0258e8b537 in memory
flw f7, 0(x2) # load 0x8908ba0258e8b537 from memory into f7
fnmsub.s f14, f6, f28, f7, dyn # perform operation
fnmsub.s f14, f6, f28, f7, rdn # perform operation
fnmsub.s f14, f6, f28, f7, rmm # perform operation
fnmsub.s f14, f6, f28, f7, rne # perform operation
fnmsub.s f14, f6, f28, f7, rtz # perform operation
fnmsub.s f14, f6, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x1a7e88a91d1af548 # load x3 with value 0x1a7e88a91d1af548
sw x3, 0(x2) # store 0x1a7e88a91d1af548 in memory
flw f28, 0(x2) # load 0x1a7e88a91d1af548 from memory into f28
fnmsub.s f19, f6, f20, f28, dyn # perform operation
fnmsub.s f19, f6, f20, f28, rdn # perform operation
fnmsub.s f19, f6, f20, f28, rmm # perform operation
fnmsub.s f19, f6, f20, f28, rne # perform operation
fnmsub.s f19, f6, f20, f28, rtz # perform operation
fnmsub.s f19, f6, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xbf721594ba2422f3 # load x3 with value 0xbf721594ba2422f3
sw x3, 0(x2) # store 0xbf721594ba2422f3 in memory
flw f24, 0(x2) # load 0xbf721594ba2422f3 from memory into f24
fnmsub.s f21, f27, f7, f24, dyn # perform operation
fnmsub.s f21, f27, f7, f24, rdn # perform operation
fnmsub.s f21, f27, f7, f24, rmm # perform operation
fnmsub.s f21, f27, f7, f24, rne # perform operation
fnmsub.s f21, f27, f7, f24, rtz # perform operation
fnmsub.s f21, f27, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xe638279217758c54 # load x3 with value 0xe638279217758c54
sw x3, 0(x2) # store 0xe638279217758c54 in memory
flw f31, 0(x2) # load 0xe638279217758c54 from memory into f31
fnmsub.s f5, f30, f22, f31, dyn # perform operation
fnmsub.s f5, f30, f22, f31, rdn # perform operation
fnmsub.s f5, f30, f22, f31, rmm # perform operation
fnmsub.s f5, f30, f22, f31, rne # perform operation
fnmsub.s f5, f30, f22, f31, rtz # perform operation
fnmsub.s f5, f30, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f30, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x7b466523c4c964a0 # load x3 with value 0x7b466523c4c964a0
sw x3, 0(x2) # store 0x7b466523c4c964a0 in memory
flw f6, 0(x2) # load 0x7b466523c4c964a0 from memory into f6
fnmsub.s f7, f24, f22, f6, dyn # perform operation
fnmsub.s f7, f24, f22, f6, rdn # perform operation
fnmsub.s f7, f24, f22, f6, rmm # perform operation
fnmsub.s f7, f24, f22, f6, rne # perform operation
fnmsub.s f7, f24, f22, f6, rtz # perform operation
fnmsub.s f7, f24, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f24, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f24, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f24, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f24, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f24, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x87520c948c829033 # load x3 with value 0x87520c948c829033
sw x3, 0(x2) # store 0x87520c948c829033 in memory
flw f15, 0(x2) # load 0x87520c948c829033 from memory into f15
fnmsub.s f26, f2, f20, f15, dyn # perform operation
fnmsub.s f26, f2, f20, f15, rdn # perform operation
fnmsub.s f26, f2, f20, f15, rmm # perform operation
fnmsub.s f26, f2, f20, f15, rne # perform operation
fnmsub.s f26, f2, f20, f15, rtz # perform operation
fnmsub.s f26, f2, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x2f2c9f4c349414c # load x3 with value 0x2f2c9f4c349414c
sw x3, 0(x2) # store 0x2f2c9f4c349414c in memory
flw f19, 0(x2) # load 0x2f2c9f4c349414c from memory into f19
fnmsub.s f20, f10, f27, f19, dyn # perform operation
fnmsub.s f20, f10, f27, f19, rdn # perform operation
fnmsub.s f20, f10, f27, f19, rmm # perform operation
fnmsub.s f20, f10, f27, f19, rne # perform operation
fnmsub.s f20, f10, f27, f19, rtz # perform operation
fnmsub.s f20, f10, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f10, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x3f3ed1459e063050 # load x3 with value 0x3f3ed1459e063050
sw x3, 0(x2) # store 0x3f3ed1459e063050 in memory
flw f27, 0(x2) # load 0x3f3ed1459e063050 from memory into f27
fnmsub.s f6, f15, f2, f27, dyn # perform operation
fnmsub.s f6, f15, f2, f27, rdn # perform operation
fnmsub.s f6, f15, f2, f27, rmm # perform operation
fnmsub.s f6, f15, f2, f27, rne # perform operation
fnmsub.s f6, f15, f2, f27, rtz # perform operation
fnmsub.s f6, f15, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xd34b47337b43bfde # load x3 with value 0xd34b47337b43bfde
sw x3, 0(x2) # store 0xd34b47337b43bfde in memory
flw f15, 0(x2) # load 0xd34b47337b43bfde from memory into f15
fnmsub.s f20, f2, f16, f15, dyn # perform operation
fnmsub.s f20, f2, f16, f15, rdn # perform operation
fnmsub.s f20, f2, f16, f15, rmm # perform operation
fnmsub.s f20, f2, f16, f15, rne # perform operation
fnmsub.s f20, f2, f16, f15, rtz # perform operation
fnmsub.s f20, f2, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xf94249bdf4490df9 # load x3 with value 0xf94249bdf4490df9
sw x3, 0(x2) # store 0xf94249bdf4490df9 in memory
flw f9, 0(x2) # load 0xf94249bdf4490df9 from memory into f9
fnmsub.s f5, f3, f12, f9, dyn # perform operation
fnmsub.s f5, f3, f12, f9, rdn # perform operation
fnmsub.s f5, f3, f12, f9, rmm # perform operation
fnmsub.s f5, f3, f12, f9, rne # perform operation
fnmsub.s f5, f3, f12, f9, rtz # perform operation
fnmsub.s f5, f3, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xc91b7936156f4164 # load x3 with value 0xc91b7936156f4164
sw x3, 0(x2) # store 0xc91b7936156f4164 in memory
flw f25, 0(x2) # load 0xc91b7936156f4164 from memory into f25
fnmsub.s f26, f23, f14, f25, dyn # perform operation
fnmsub.s f26, f23, f14, f25, rdn # perform operation
fnmsub.s f26, f23, f14, f25, rmm # perform operation
fnmsub.s f26, f23, f14, f25, rne # perform operation
fnmsub.s f26, f23, f14, f25, rtz # perform operation
fnmsub.s f26, f23, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xfc73d3b4c9dd478 # load x3 with value 0xfc73d3b4c9dd478
sw x3, 0(x2) # store 0xfc73d3b4c9dd478 in memory
flw f5, 0(x2) # load 0xfc73d3b4c9dd478 from memory into f5
fnmsub.s f25, f3, f7, f5, dyn # perform operation
fnmsub.s f25, f3, f7, f5, rdn # perform operation
fnmsub.s f25, f3, f7, f5, rmm # perform operation
fnmsub.s f25, f3, f7, f5, rne # perform operation
fnmsub.s f25, f3, f7, f5, rtz # perform operation
fnmsub.s f25, f3, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x50f1a98b7317c9b6 # load x3 with value 0x50f1a98b7317c9b6
sw x3, 0(x2) # store 0x50f1a98b7317c9b6 in memory
flw f9, 0(x2) # load 0x50f1a98b7317c9b6 from memory into f9
fnmsub.s f23, f13, f31, f9, dyn # perform operation
fnmsub.s f23, f13, f31, f9, rdn # perform operation
fnmsub.s f23, f13, f31, f9, rmm # perform operation
fnmsub.s f23, f13, f31, f9, rne # perform operation
fnmsub.s f23, f13, f31, f9, rtz # perform operation
fnmsub.s f23, f13, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xe407405cafab7e81 # load x3 with value 0xe407405cafab7e81
sw x3, 0(x2) # store 0xe407405cafab7e81 in memory
flw f24, 0(x2) # load 0xe407405cafab7e81 from memory into f24
fnmsub.s f16, f20, f19, f24, dyn # perform operation
fnmsub.s f16, f20, f19, f24, rdn # perform operation
fnmsub.s f16, f20, f19, f24, rmm # perform operation
fnmsub.s f16, f20, f19, f24, rne # perform operation
fnmsub.s f16, f20, f19, f24, rtz # perform operation
fnmsub.s f16, f20, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xe1b1149dd90983f3 # load x3 with value 0xe1b1149dd90983f3
sw x3, 0(x2) # store 0xe1b1149dd90983f3 in memory
flw f2, 0(x2) # load 0xe1b1149dd90983f3 from memory into f2
fnmsub.s f28, f26, f11, f2, dyn # perform operation
fnmsub.s f28, f26, f11, f2, rdn # perform operation
fnmsub.s f28, f26, f11, f2, rmm # perform operation
fnmsub.s f28, f26, f11, f2, rne # perform operation
fnmsub.s f28, f26, f11, f2, rtz # perform operation
fnmsub.s f28, f26, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x171d889dd38e5397 # load x3 with value 0x171d889dd38e5397
sw x3, 0(x2) # store 0x171d889dd38e5397 in memory
flw f21, 0(x2) # load 0x171d889dd38e5397 from memory into f21
fnmsub.s f22, f6, f7, f21, dyn # perform operation
fnmsub.s f22, f6, f7, f21, rdn # perform operation
fnmsub.s f22, f6, f7, f21, rmm # perform operation
fnmsub.s f22, f6, f7, f21, rne # perform operation
fnmsub.s f22, f6, f7, f21, rtz # perform operation
fnmsub.s f22, f6, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xd5f0c3b3a46b5091 # load x3 with value 0xd5f0c3b3a46b5091
sw x3, 0(x2) # store 0xd5f0c3b3a46b5091 in memory
flw f11, 0(x2) # load 0xd5f0c3b3a46b5091 from memory into f11
fnmsub.s f10, f29, f13, f11, dyn # perform operation
fnmsub.s f10, f29, f13, f11, rdn # perform operation
fnmsub.s f10, f29, f13, f11, rmm # perform operation
fnmsub.s f10, f29, f13, f11, rne # perform operation
fnmsub.s f10, f29, f13, f11, rtz # perform operation
fnmsub.s f10, f29, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x743da65a93277fbc # load x3 with value 0x743da65a93277fbc
sw x3, 0(x2) # store 0x743da65a93277fbc in memory
flw f7, 0(x2) # load 0x743da65a93277fbc from memory into f7
fnmsub.s f23, f26, f21, f7, dyn # perform operation
fnmsub.s f23, f26, f21, f7, rdn # perform operation
fnmsub.s f23, f26, f21, f7, rmm # perform operation
fnmsub.s f23, f26, f21, f7, rne # perform operation
fnmsub.s f23, f26, f21, f7, rtz # perform operation
fnmsub.s f23, f26, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x5c116fb54b4e134a # load x3 with value 0x5c116fb54b4e134a
sw x3, 0(x2) # store 0x5c116fb54b4e134a in memory
flw f3, 0(x2) # load 0x5c116fb54b4e134a from memory into f3
fnmsub.s f27, f12, f11, f3, dyn # perform operation
fnmsub.s f27, f12, f11, f3, rdn # perform operation
fnmsub.s f27, f12, f11, f3, rmm # perform operation
fnmsub.s f27, f12, f11, f3, rne # perform operation
fnmsub.s f27, f12, f11, f3, rtz # perform operation
fnmsub.s f27, f12, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x23d49fd9a45df097 # load x3 with value 0x23d49fd9a45df097
sw x3, 0(x2) # store 0x23d49fd9a45df097 in memory
flw f12, 0(x2) # load 0x23d49fd9a45df097 from memory into f12
fnmsub.s f13, f18, f26, f12, dyn # perform operation
fnmsub.s f13, f18, f26, f12, rdn # perform operation
fnmsub.s f13, f18, f26, f12, rmm # perform operation
fnmsub.s f13, f18, f26, f12, rne # perform operation
fnmsub.s f13, f18, f26, f12, rtz # perform operation
fnmsub.s f13, f18, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x505287a8b1e75b9 # load x3 with value 0x505287a8b1e75b9
sw x3, 0(x2) # store 0x505287a8b1e75b9 in memory
flw f29, 0(x2) # load 0x505287a8b1e75b9 from memory into f29
fnmsub.s f17, f19, f1, f29, dyn # perform operation
fnmsub.s f17, f19, f1, f29, rdn # perform operation
fnmsub.s f17, f19, f1, f29, rmm # perform operation
fnmsub.s f17, f19, f1, f29, rne # perform operation
fnmsub.s f17, f19, f1, f29, rtz # perform operation
fnmsub.s f17, f19, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xb7a4d2f41d1128ed # load x3 with value 0xb7a4d2f41d1128ed
sw x3, 0(x2) # store 0xb7a4d2f41d1128ed in memory
flw f1, 0(x2) # load 0xb7a4d2f41d1128ed from memory into f1
fnmsub.s f13, f17, f8, f1, dyn # perform operation
fnmsub.s f13, f17, f8, f1, rdn # perform operation
fnmsub.s f13, f17, f8, f1, rmm # perform operation
fnmsub.s f13, f17, f8, f1, rne # perform operation
fnmsub.s f13, f17, f8, f1, rtz # perform operation
fnmsub.s f13, f17, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x1283fa2b687033c1 # load x3 with value 0x1283fa2b687033c1
sw x3, 0(x2) # store 0x1283fa2b687033c1 in memory
flw f2, 0(x2) # load 0x1283fa2b687033c1 from memory into f2
fnmsub.s f22, f1, f31, f2, dyn # perform operation
fnmsub.s f22, f1, f31, f2, rdn # perform operation
fnmsub.s f22, f1, f31, f2, rmm # perform operation
fnmsub.s f22, f1, f31, f2, rne # perform operation
fnmsub.s f22, f1, f31, f2, rtz # perform operation
fnmsub.s f22, f1, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x867d011d76c3d5a5 # load x3 with value 0x867d011d76c3d5a5
sw x3, 0(x2) # store 0x867d011d76c3d5a5 in memory
flw f10, 0(x2) # load 0x867d011d76c3d5a5 from memory into f10
fnmsub.s f25, f2, f9, f10, dyn # perform operation
fnmsub.s f25, f2, f9, f10, rdn # perform operation
fnmsub.s f25, f2, f9, f10, rmm # perform operation
fnmsub.s f25, f2, f9, f10, rne # perform operation
fnmsub.s f25, f2, f9, f10, rtz # perform operation
fnmsub.s f25, f2, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f2, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xa7538230fc319512 # load x3 with value 0xa7538230fc319512
sw x3, 0(x2) # store 0xa7538230fc319512 in memory
flw f13, 0(x2) # load 0xa7538230fc319512 from memory into f13
fnmsub.s f14, f23, f1, f13, dyn # perform operation
fnmsub.s f14, f23, f1, f13, rdn # perform operation
fnmsub.s f14, f23, f1, f13, rmm # perform operation
fnmsub.s f14, f23, f1, f13, rne # perform operation
fnmsub.s f14, f23, f1, f13, rtz # perform operation
fnmsub.s f14, f23, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x7118f8ae7b0524e5 # load x3 with value 0x7118f8ae7b0524e5
sw x3, 0(x2) # store 0x7118f8ae7b0524e5 in memory
flw f18, 0(x2) # load 0x7118f8ae7b0524e5 from memory into f18
fnmsub.s f15, f28, f24, f18, dyn # perform operation
fnmsub.s f15, f28, f24, f18, rdn # perform operation
fnmsub.s f15, f28, f24, f18, rmm # perform operation
fnmsub.s f15, f28, f24, f18, rne # perform operation
fnmsub.s f15, f28, f24, f18, rtz # perform operation
fnmsub.s f15, f28, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f28, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x3631a60fd1b5975d # load x3 with value 0x3631a60fd1b5975d
sw x3, 0(x2) # store 0x3631a60fd1b5975d in memory
flw f21, 0(x2) # load 0x3631a60fd1b5975d from memory into f21
fnmsub.s f15, f6, f22, f21, dyn # perform operation
fnmsub.s f15, f6, f22, f21, rdn # perform operation
fnmsub.s f15, f6, f22, f21, rmm # perform operation
fnmsub.s f15, f6, f22, f21, rne # perform operation
fnmsub.s f15, f6, f22, f21, rtz # perform operation
fnmsub.s f15, f6, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xf9b30b4c494dab9c # load x3 with value 0xf9b30b4c494dab9c
sw x3, 0(x2) # store 0xf9b30b4c494dab9c in memory
flw f16, 0(x2) # load 0xf9b30b4c494dab9c from memory into f16
fnmsub.s f7, f10, f24, f16, dyn # perform operation
fnmsub.s f7, f10, f24, f16, rdn # perform operation
fnmsub.s f7, f10, f24, f16, rmm # perform operation
fnmsub.s f7, f10, f24, f16, rne # perform operation
fnmsub.s f7, f10, f24, f16, rtz # perform operation
fnmsub.s f7, f10, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x99bee5f1a94aa48f # load x3 with value 0x99bee5f1a94aa48f
sw x3, 0(x2) # store 0x99bee5f1a94aa48f in memory
flw f6, 0(x2) # load 0x99bee5f1a94aa48f from memory into f6
fnmsub.s f20, f19, f7, f6, dyn # perform operation
fnmsub.s f20, f19, f7, f6, rdn # perform operation
fnmsub.s f20, f19, f7, f6, rmm # perform operation
fnmsub.s f20, f19, f7, f6, rne # perform operation
fnmsub.s f20, f19, f7, f6, rtz # perform operation
fnmsub.s f20, f19, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xf688c76efb269bde # load x3 with value 0xf688c76efb269bde
sw x3, 0(x2) # store 0xf688c76efb269bde in memory
flw f14, 0(x2) # load 0xf688c76efb269bde from memory into f14
fnmsub.s f19, f5, f21, f14, dyn # perform operation
fnmsub.s f19, f5, f21, f14, rdn # perform operation
fnmsub.s f19, f5, f21, f14, rmm # perform operation
fnmsub.s f19, f5, f21, f14, rne # perform operation
fnmsub.s f19, f5, f21, f14, rtz # perform operation
fnmsub.s f19, f5, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x6f1233e2404f1602 # load x3 with value 0x6f1233e2404f1602
sw x3, 0(x2) # store 0x6f1233e2404f1602 in memory
flw f12, 0(x2) # load 0x6f1233e2404f1602 from memory into f12
fnmsub.s f22, f10, f26, f12, dyn # perform operation
fnmsub.s f22, f10, f26, f12, rdn # perform operation
fnmsub.s f22, f10, f26, f12, rmm # perform operation
fnmsub.s f22, f10, f26, f12, rne # perform operation
fnmsub.s f22, f10, f26, f12, rtz # perform operation
fnmsub.s f22, f10, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x72ae36c6d60f45f0 # load x3 with value 0x72ae36c6d60f45f0
sw x3, 0(x2) # store 0x72ae36c6d60f45f0 in memory
flw f11, 0(x2) # load 0x72ae36c6d60f45f0 from memory into f11
fnmsub.s f9, f22, f7, f11, dyn # perform operation
fnmsub.s f9, f22, f7, f11, rdn # perform operation
fnmsub.s f9, f22, f7, f11, rmm # perform operation
fnmsub.s f9, f22, f7, f11, rne # perform operation
fnmsub.s f9, f22, f7, f11, rtz # perform operation
fnmsub.s f9, f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xb4ddb0b64d52e210 # load x3 with value 0xb4ddb0b64d52e210
sw x3, 0(x2) # store 0xb4ddb0b64d52e210 in memory
flw f31, 0(x2) # load 0xb4ddb0b64d52e210 from memory into f31
fnmsub.s f26, f24, f18, f31, dyn # perform operation
fnmsub.s f26, f24, f18, f31, rdn # perform operation
fnmsub.s f26, f24, f18, f31, rmm # perform operation
fnmsub.s f26, f24, f18, f31, rne # perform operation
fnmsub.s f26, f24, f18, f31, rtz # perform operation
fnmsub.s f26, f24, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xfe4ba824f2b9d8c4 # load x3 with value 0xfe4ba824f2b9d8c4
sw x3, 0(x2) # store 0xfe4ba824f2b9d8c4 in memory
flw f26, 0(x2) # load 0xfe4ba824f2b9d8c4 from memory into f26
fnmsub.s f31, f25, f19, f26, dyn # perform operation
fnmsub.s f31, f25, f19, f26, rdn # perform operation
fnmsub.s f31, f25, f19, f26, rmm # perform operation
fnmsub.s f31, f25, f19, f26, rne # perform operation
fnmsub.s f31, f25, f19, f26, rtz # perform operation
fnmsub.s f31, f25, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x39e653dd01a85c11 # load x3 with value 0x39e653dd01a85c11
sw x3, 0(x2) # store 0x39e653dd01a85c11 in memory
flw f14, 0(x2) # load 0x39e653dd01a85c11 from memory into f14
fnmsub.s f11, f22, f25, f14, dyn # perform operation
fnmsub.s f11, f22, f25, f14, rdn # perform operation
fnmsub.s f11, f22, f25, f14, rmm # perform operation
fnmsub.s f11, f22, f25, f14, rne # perform operation
fnmsub.s f11, f22, f25, f14, rtz # perform operation
fnmsub.s f11, f22, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xe5edeed5735e838a # load x3 with value 0xe5edeed5735e838a
sw x3, 0(x2) # store 0xe5edeed5735e838a in memory
flw f12, 0(x2) # load 0xe5edeed5735e838a from memory into f12
fnmsub.s f27, f16, f3, f12, dyn # perform operation
fnmsub.s f27, f16, f3, f12, rdn # perform operation
fnmsub.s f27, f16, f3, f12, rmm # perform operation
fnmsub.s f27, f16, f3, f12, rne # perform operation
fnmsub.s f27, f16, f3, f12, rtz # perform operation
fnmsub.s f27, f16, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x1b46be21004e0666 # load x3 with value 0x1b46be21004e0666
sw x3, 0(x2) # store 0x1b46be21004e0666 in memory
flw f29, 0(x2) # load 0x1b46be21004e0666 from memory into f29
fnmsub.s f15, f27, f18, f29, dyn # perform operation
fnmsub.s f15, f27, f18, f29, rdn # perform operation
fnmsub.s f15, f27, f18, f29, rmm # perform operation
fnmsub.s f15, f27, f18, f29, rne # perform operation
fnmsub.s f15, f27, f18, f29, rtz # perform operation
fnmsub.s f15, f27, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xc4549a5c0e5b7063 # load x3 with value 0xc4549a5c0e5b7063
sw x3, 0(x2) # store 0xc4549a5c0e5b7063 in memory
flw f13, 0(x2) # load 0xc4549a5c0e5b7063 from memory into f13
fnmsub.s f17, f11, f2, f13, dyn # perform operation
fnmsub.s f17, f11, f2, f13, rdn # perform operation
fnmsub.s f17, f11, f2, f13, rmm # perform operation
fnmsub.s f17, f11, f2, f13, rne # perform operation
fnmsub.s f17, f11, f2, f13, rtz # perform operation
fnmsub.s f17, f11, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x8f17e6caf7a3d2ca # load x3 with value 0x8f17e6caf7a3d2ca
sw x3, 0(x2) # store 0x8f17e6caf7a3d2ca in memory
flw f1, 0(x2) # load 0x8f17e6caf7a3d2ca from memory into f1
fnmsub.s f9, f17, f27, f1, dyn # perform operation
fnmsub.s f9, f17, f27, f1, rdn # perform operation
fnmsub.s f9, f17, f27, f1, rmm # perform operation
fnmsub.s f9, f17, f27, f1, rne # perform operation
fnmsub.s f9, f17, f27, f1, rtz # perform operation
fnmsub.s f9, f17, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x1212d218b0648074 # load x3 with value 0x1212d218b0648074
sw x3, 0(x2) # store 0x1212d218b0648074 in memory
flw f29, 0(x2) # load 0x1212d218b0648074 from memory into f29
fnmsub.s f22, f1, f11, f29, dyn # perform operation
fnmsub.s f22, f1, f11, f29, rdn # perform operation
fnmsub.s f22, f1, f11, f29, rmm # perform operation
fnmsub.s f22, f1, f11, f29, rne # perform operation
fnmsub.s f22, f1, f11, f29, rtz # perform operation
fnmsub.s f22, f1, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xc1c535ef97bbbde1 # load x3 with value 0xc1c535ef97bbbde1
sw x3, 0(x2) # store 0xc1c535ef97bbbde1 in memory
flw f20, 0(x2) # load 0xc1c535ef97bbbde1 from memory into f20
fnmsub.s f7, f28, f18, f20, dyn # perform operation
fnmsub.s f7, f28, f18, f20, rdn # perform operation
fnmsub.s f7, f28, f18, f20, rmm # perform operation
fnmsub.s f7, f28, f18, f20, rne # perform operation
fnmsub.s f7, f28, f18, f20, rtz # perform operation
fnmsub.s f7, f28, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x7c52bff144e1ff2e # load x3 with value 0x7c52bff144e1ff2e
sw x3, 0(x2) # store 0x7c52bff144e1ff2e in memory
flw f12, 0(x2) # load 0x7c52bff144e1ff2e from memory into f12
fnmsub.s f9, f14, f23, f12, dyn # perform operation
fnmsub.s f9, f14, f23, f12, rdn # perform operation
fnmsub.s f9, f14, f23, f12, rmm # perform operation
fnmsub.s f9, f14, f23, f12, rne # perform operation
fnmsub.s f9, f14, f23, f12, rtz # perform operation
fnmsub.s f9, f14, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f14, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f14, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f14, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f14, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f14, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xe04bb31adc3ed1f5 # load x3 with value 0xe04bb31adc3ed1f5
sw x3, 0(x2) # store 0xe04bb31adc3ed1f5 in memory
flw f11, 0(x2) # load 0xe04bb31adc3ed1f5 from memory into f11
fnmsub.s f25, f21, f14, f11, dyn # perform operation
fnmsub.s f25, f21, f14, f11, rdn # perform operation
fnmsub.s f25, f21, f14, f11, rmm # perform operation
fnmsub.s f25, f21, f14, f11, rne # perform operation
fnmsub.s f25, f21, f14, f11, rtz # perform operation
fnmsub.s f25, f21, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x3da65319b5e2940d # load x3 with value 0x3da65319b5e2940d
sw x3, 0(x2) # store 0x3da65319b5e2940d in memory
flw f14, 0(x2) # load 0x3da65319b5e2940d from memory into f14
fnmsub.s f23, f31, f7, f14, dyn # perform operation
fnmsub.s f23, f31, f7, f14, rdn # perform operation
fnmsub.s f23, f31, f7, f14, rmm # perform operation
fnmsub.s f23, f31, f7, f14, rne # perform operation
fnmsub.s f23, f31, f7, f14, rtz # perform operation
fnmsub.s f23, f31, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f31, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x40cb763a67540df2 # load x3 with value 0x40cb763a67540df2
sw x3, 0(x2) # store 0x40cb763a67540df2 in memory
flw f24, 0(x2) # load 0x40cb763a67540df2 from memory into f24
fnmsub.s f13, f19, f11, f24, dyn # perform operation
fnmsub.s f13, f19, f11, f24, rdn # perform operation
fnmsub.s f13, f19, f11, f24, rmm # perform operation
fnmsub.s f13, f19, f11, f24, rne # perform operation
fnmsub.s f13, f19, f11, f24, rtz # perform operation
fnmsub.s f13, f19, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x70ff71fe8ca42102 # load x3 with value 0x70ff71fe8ca42102
sw x3, 0(x2) # store 0x70ff71fe8ca42102 in memory
flw f14, 0(x2) # load 0x70ff71fe8ca42102 from memory into f14
fnmsub.s f5, f6, f25, f14, dyn # perform operation
fnmsub.s f5, f6, f25, f14, rdn # perform operation
fnmsub.s f5, f6, f25, f14, rmm # perform operation
fnmsub.s f5, f6, f25, f14, rne # perform operation
fnmsub.s f5, f6, f25, f14, rtz # perform operation
fnmsub.s f5, f6, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x87db8ae085a40255 # load x3 with value 0x87db8ae085a40255
sw x3, 0(x2) # store 0x87db8ae085a40255 in memory
flw f5, 0(x2) # load 0x87db8ae085a40255 from memory into f5
fnmsub.s f7, f28, f2, f5, dyn # perform operation
fnmsub.s f7, f28, f2, f5, rdn # perform operation
fnmsub.s f7, f28, f2, f5, rmm # perform operation
fnmsub.s f7, f28, f2, f5, rne # perform operation
fnmsub.s f7, f28, f2, f5, rtz # perform operation
fnmsub.s f7, f28, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x29dbf2ec4f0fc6d3 # load x3 with value 0x29dbf2ec4f0fc6d3
sw x3, 0(x2) # store 0x29dbf2ec4f0fc6d3 in memory
flw f31, 0(x2) # load 0x29dbf2ec4f0fc6d3 from memory into f31
fnmsub.s f8, f17, f27, f31, dyn # perform operation
fnmsub.s f8, f17, f27, f31, rdn # perform operation
fnmsub.s f8, f17, f27, f31, rmm # perform operation
fnmsub.s f8, f17, f27, f31, rne # perform operation
fnmsub.s f8, f17, f27, f31, rtz # perform operation
fnmsub.s f8, f17, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xdf8f0c1e4c5dd0c9 # load x3 with value 0xdf8f0c1e4c5dd0c9
sw x3, 0(x2) # store 0xdf8f0c1e4c5dd0c9 in memory
flw f1, 0(x2) # load 0xdf8f0c1e4c5dd0c9 from memory into f1
fnmsub.s f17, f15, f22, f1, dyn # perform operation
fnmsub.s f17, f15, f22, f1, rdn # perform operation
fnmsub.s f17, f15, f22, f1, rmm # perform operation
fnmsub.s f17, f15, f22, f1, rne # perform operation
fnmsub.s f17, f15, f22, f1, rtz # perform operation
fnmsub.s f17, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f15, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xab972d7dfd5b2702 # load x3 with value 0xab972d7dfd5b2702
sw x3, 0(x2) # store 0xab972d7dfd5b2702 in memory
flw f26, 0(x2) # load 0xab972d7dfd5b2702 from memory into f26
fnmsub.s f24, f18, f3, f26, dyn # perform operation
fnmsub.s f24, f18, f3, f26, rdn # perform operation
fnmsub.s f24, f18, f3, f26, rmm # perform operation
fnmsub.s f24, f18, f3, f26, rne # perform operation
fnmsub.s f24, f18, f3, f26, rtz # perform operation
fnmsub.s f24, f18, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f18, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f18, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f18, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f18, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f18, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xbaf8593a33806f5f # load x3 with value 0xbaf8593a33806f5f
sw x3, 0(x2) # store 0xbaf8593a33806f5f in memory
flw f28, 0(x2) # load 0xbaf8593a33806f5f from memory into f28
fnmsub.s f3, f16, f19, f28, dyn # perform operation
fnmsub.s f3, f16, f19, f28, rdn # perform operation
fnmsub.s f3, f16, f19, f28, rmm # perform operation
fnmsub.s f3, f16, f19, f28, rne # perform operation
fnmsub.s f3, f16, f19, f28, rtz # perform operation
fnmsub.s f3, f16, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x3859d64f718103a4 # load x3 with value 0x3859d64f718103a4
sw x3, 0(x2) # store 0x3859d64f718103a4 in memory
flw f18, 0(x2) # load 0x3859d64f718103a4 from memory into f18
fnmsub.s f9, f23, f15, f18, dyn # perform operation
fnmsub.s f9, f23, f15, f18, rdn # perform operation
fnmsub.s f9, f23, f15, f18, rmm # perform operation
fnmsub.s f9, f23, f15, f18, rne # perform operation
fnmsub.s f9, f23, f15, f18, rtz # perform operation
fnmsub.s f9, f23, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x73430e2935928c41 # load x3 with value 0x73430e2935928c41
sw x3, 0(x2) # store 0x73430e2935928c41 in memory
flw f27, 0(x2) # load 0x73430e2935928c41 from memory into f27
fnmsub.s f12, f16, f24, f27, dyn # perform operation
fnmsub.s f12, f16, f24, f27, rdn # perform operation
fnmsub.s f12, f16, f24, f27, rmm # perform operation
fnmsub.s f12, f16, f24, f27, rne # perform operation
fnmsub.s f12, f16, f24, f27, rtz # perform operation
fnmsub.s f12, f16, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xc8736832091653e7 # load x3 with value 0xc8736832091653e7
sw x3, 0(x2) # store 0xc8736832091653e7 in memory
flw f26, 0(x2) # load 0xc8736832091653e7 from memory into f26
fnmsub.s f7, f3, f12, f26, dyn # perform operation
fnmsub.s f7, f3, f12, f26, rdn # perform operation
fnmsub.s f7, f3, f12, f26, rmm # perform operation
fnmsub.s f7, f3, f12, f26, rne # perform operation
fnmsub.s f7, f3, f12, f26, rtz # perform operation
fnmsub.s f7, f3, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f3, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x2cbb6907938000f7 # load x3 with value 0x2cbb6907938000f7
sw x3, 0(x2) # store 0x2cbb6907938000f7 in memory
flw f21, 0(x2) # load 0x2cbb6907938000f7 from memory into f21
fnmsub.s f26, f24, f31, f21, dyn # perform operation
fnmsub.s f26, f24, f31, f21, rdn # perform operation
fnmsub.s f26, f24, f31, f21, rmm # perform operation
fnmsub.s f26, f24, f31, f21, rne # perform operation
fnmsub.s f26, f24, f31, f21, rtz # perform operation
fnmsub.s f26, f24, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x41a7c26c3b064637 # load x3 with value 0x41a7c26c3b064637
sw x3, 0(x2) # store 0x41a7c26c3b064637 in memory
flw f25, 0(x2) # load 0x41a7c26c3b064637 from memory into f25
fnmsub.s f28, f15, f17, f25, dyn # perform operation
fnmsub.s f28, f15, f17, f25, rdn # perform operation
fnmsub.s f28, f15, f17, f25, rmm # perform operation
fnmsub.s f28, f15, f17, f25, rne # perform operation
fnmsub.s f28, f15, f17, f25, rtz # perform operation
fnmsub.s f28, f15, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xcee44d3c26175917 # load x3 with value 0xcee44d3c26175917
sw x3, 0(x2) # store 0xcee44d3c26175917 in memory
flw f25, 0(x2) # load 0xcee44d3c26175917 from memory into f25
fnmsub.s f14, f30, f18, f25, dyn # perform operation
fnmsub.s f14, f30, f18, f25, rdn # perform operation
fnmsub.s f14, f30, f18, f25, rmm # perform operation
fnmsub.s f14, f30, f18, f25, rne # perform operation
fnmsub.s f14, f30, f18, f25, rtz # perform operation
fnmsub.s f14, f30, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xa58100f530afb725 # load x3 with value 0xa58100f530afb725
sw x3, 0(x2) # store 0xa58100f530afb725 in memory
flw f20, 0(x2) # load 0xa58100f530afb725 from memory into f20
fnmsub.s f15, f11, f25, f20, dyn # perform operation
fnmsub.s f15, f11, f25, f20, rdn # perform operation
fnmsub.s f15, f11, f25, f20, rmm # perform operation
fnmsub.s f15, f11, f25, f20, rne # perform operation
fnmsub.s f15, f11, f25, f20, rtz # perform operation
fnmsub.s f15, f11, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x666fa680869855fe # load x3 with value 0x666fa680869855fe
sw x3, 0(x2) # store 0x666fa680869855fe in memory
flw f22, 0(x2) # load 0x666fa680869855fe from memory into f22
fnmsub.s f10, f28, f15, f22, dyn # perform operation
fnmsub.s f10, f28, f15, f22, rdn # perform operation
fnmsub.s f10, f28, f15, f22, rmm # perform operation
fnmsub.s f10, f28, f15, f22, rne # perform operation
fnmsub.s f10, f28, f15, f22, rtz # perform operation
fnmsub.s f10, f28, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f28, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x999b2d839bb1cb0d # load x3 with value 0x999b2d839bb1cb0d
sw x3, 0(x2) # store 0x999b2d839bb1cb0d in memory
flw f23, 0(x2) # load 0x999b2d839bb1cb0d from memory into f23
fnmsub.s f22, f25, f31, f23, dyn # perform operation
fnmsub.s f22, f25, f31, f23, rdn # perform operation
fnmsub.s f22, f25, f31, f23, rmm # perform operation
fnmsub.s f22, f25, f31, f23, rne # perform operation
fnmsub.s f22, f25, f31, f23, rtz # perform operation
fnmsub.s f22, f25, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x4641e98908bcd6c # load x3 with value 0x4641e98908bcd6c
sw x3, 0(x2) # store 0x4641e98908bcd6c in memory
flw f19, 0(x2) # load 0x4641e98908bcd6c from memory into f19
fnmsub.s f20, f27, f26, f19, dyn # perform operation
fnmsub.s f20, f27, f26, f19, rdn # perform operation
fnmsub.s f20, f27, f26, f19, rmm # perform operation
fnmsub.s f20, f27, f26, f19, rne # perform operation
fnmsub.s f20, f27, f26, f19, rtz # perform operation
fnmsub.s f20, f27, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x56f860f74ea0ee13 # load x3 with value 0x56f860f74ea0ee13
sw x3, 0(x2) # store 0x56f860f74ea0ee13 in memory
flw f23, 0(x2) # load 0x56f860f74ea0ee13 from memory into f23
fnmsub.s f30, f13, f26, f23, dyn # perform operation
fnmsub.s f30, f13, f26, f23, rdn # perform operation
fnmsub.s f30, f13, f26, f23, rmm # perform operation
fnmsub.s f30, f13, f26, f23, rne # perform operation
fnmsub.s f30, f13, f26, f23, rtz # perform operation
fnmsub.s f30, f13, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xf5902d813c4880b6 # load x3 with value 0xf5902d813c4880b6
sw x3, 0(x2) # store 0xf5902d813c4880b6 in memory
flw f3, 0(x2) # load 0xf5902d813c4880b6 from memory into f3
fnmsub.s f13, f27, f29, f3, dyn # perform operation
fnmsub.s f13, f27, f29, f3, rdn # perform operation
fnmsub.s f13, f27, f29, f3, rmm # perform operation
fnmsub.s f13, f27, f29, f3, rne # perform operation
fnmsub.s f13, f27, f29, f3, rtz # perform operation
fnmsub.s f13, f27, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x1d9000b9b3317e81 # load x3 with value 0x1d9000b9b3317e81
sw x3, 0(x2) # store 0x1d9000b9b3317e81 in memory
flw f15, 0(x2) # load 0x1d9000b9b3317e81 from memory into f15
fnmsub.s f6, f14, f16, f15, dyn # perform operation
fnmsub.s f6, f14, f16, f15, rdn # perform operation
fnmsub.s f6, f14, f16, f15, rmm # perform operation
fnmsub.s f6, f14, f16, f15, rne # perform operation
fnmsub.s f6, f14, f16, f15, rtz # perform operation
fnmsub.s f6, f14, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x6879d204a0a1d554 # load x3 with value 0x6879d204a0a1d554
sw x3, 0(x2) # store 0x6879d204a0a1d554 in memory
flw f2, 0(x2) # load 0x6879d204a0a1d554 from memory into f2
fnmsub.s f20, f9, f6, f2, dyn # perform operation
fnmsub.s f20, f9, f6, f2, rdn # perform operation
fnmsub.s f20, f9, f6, f2, rmm # perform operation
fnmsub.s f20, f9, f6, f2, rne # perform operation
fnmsub.s f20, f9, f6, f2, rtz # perform operation
fnmsub.s f20, f9, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f9, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x12ac783649a33210 # load x3 with value 0x12ac783649a33210
sw x3, 0(x2) # store 0x12ac783649a33210 in memory
flw f1, 0(x2) # load 0x12ac783649a33210 from memory into f1
fnmsub.s f12, f11, f13, f1, dyn # perform operation
fnmsub.s f12, f11, f13, f1, rdn # perform operation
fnmsub.s f12, f11, f13, f1, rmm # perform operation
fnmsub.s f12, f11, f13, f1, rne # perform operation
fnmsub.s f12, f11, f13, f1, rtz # perform operation
fnmsub.s f12, f11, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x2eeafe4d7f07908f # load x3 with value 0x2eeafe4d7f07908f
sw x3, 0(x2) # store 0x2eeafe4d7f07908f in memory
flw f22, 0(x2) # load 0x2eeafe4d7f07908f from memory into f22
fnmsub.s f8, f11, f12, f22, dyn # perform operation
fnmsub.s f8, f11, f12, f22, rdn # perform operation
fnmsub.s f8, f11, f12, f22, rmm # perform operation
fnmsub.s f8, f11, f12, f22, rne # perform operation
fnmsub.s f8, f11, f12, f22, rtz # perform operation
fnmsub.s f8, f11, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x39d29d63e95fcb21 # load x3 with value 0x39d29d63e95fcb21
sw x3, 0(x2) # store 0x39d29d63e95fcb21 in memory
flw f1, 0(x2) # load 0x39d29d63e95fcb21 from memory into f1
fnmsub.s f28, f27, f19, f1, dyn # perform operation
fnmsub.s f28, f27, f19, f1, rdn # perform operation
fnmsub.s f28, f27, f19, f1, rmm # perform operation
fnmsub.s f28, f27, f19, f1, rne # perform operation
fnmsub.s f28, f27, f19, f1, rtz # perform operation
fnmsub.s f28, f27, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x4d4215a9a1318605 # load x3 with value 0x4d4215a9a1318605
sw x3, 0(x2) # store 0x4d4215a9a1318605 in memory
flw f8, 0(x2) # load 0x4d4215a9a1318605 from memory into f8
fnmsub.s f15, f12, f19, f8, dyn # perform operation
fnmsub.s f15, f12, f19, f8, rdn # perform operation
fnmsub.s f15, f12, f19, f8, rmm # perform operation
fnmsub.s f15, f12, f19, f8, rne # perform operation
fnmsub.s f15, f12, f19, f8, rtz # perform operation
fnmsub.s f15, f12, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7c7f2cdc9adefa45 # load x3 with value 0x7c7f2cdc9adefa45
sw x3, 0(x2) # store 0x7c7f2cdc9adefa45 in memory
flw f21, 0(x2) # load 0x7c7f2cdc9adefa45 from memory into f21
fnmsub.s f5, f12, f14, f21, dyn # perform operation
fnmsub.s f5, f12, f14, f21, rdn # perform operation
fnmsub.s f5, f12, f14, f21, rmm # perform operation
fnmsub.s f5, f12, f14, f21, rne # perform operation
fnmsub.s f5, f12, f14, f21, rtz # perform operation
fnmsub.s f5, f12, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x47f305b177194439 # load x3 with value 0x47f305b177194439
sw x3, 0(x2) # store 0x47f305b177194439 in memory
flw f3, 0(x2) # load 0x47f305b177194439 from memory into f3
fnmsub.s f27, f23, f7, f3, dyn # perform operation
fnmsub.s f27, f23, f7, f3, rdn # perform operation
fnmsub.s f27, f23, f7, f3, rmm # perform operation
fnmsub.s f27, f23, f7, f3, rne # perform operation
fnmsub.s f27, f23, f7, f3, rtz # perform operation
fnmsub.s f27, f23, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xc4fc9e3a8d402f32 # load x3 with value 0xc4fc9e3a8d402f32
sw x3, 0(x2) # store 0xc4fc9e3a8d402f32 in memory
flw f15, 0(x2) # load 0xc4fc9e3a8d402f32 from memory into f15
fnmsub.s f8, f29, f20, f15, dyn # perform operation
fnmsub.s f8, f29, f20, f15, rdn # perform operation
fnmsub.s f8, f29, f20, f15, rmm # perform operation
fnmsub.s f8, f29, f20, f15, rne # perform operation
fnmsub.s f8, f29, f20, f15, rtz # perform operation
fnmsub.s f8, f29, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x7c2907a4af1820db # load x3 with value 0x7c2907a4af1820db
sw x3, 0(x2) # store 0x7c2907a4af1820db in memory
flw f9, 0(x2) # load 0x7c2907a4af1820db from memory into f9
fnmsub.s f18, f11, f2, f9, dyn # perform operation
fnmsub.s f18, f11, f2, f9, rdn # perform operation
fnmsub.s f18, f11, f2, f9, rmm # perform operation
fnmsub.s f18, f11, f2, f9, rne # perform operation
fnmsub.s f18, f11, f2, f9, rtz # perform operation
fnmsub.s f18, f11, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x9a74f676a0c9f7c6 # load x3 with value 0x9a74f676a0c9f7c6
sw x3, 0(x2) # store 0x9a74f676a0c9f7c6 in memory
flw f5, 0(x2) # load 0x9a74f676a0c9f7c6 from memory into f5
fnmsub.s f3, f10, f14, f5, dyn # perform operation
fnmsub.s f3, f10, f14, f5, rdn # perform operation
fnmsub.s f3, f10, f14, f5, rmm # perform operation
fnmsub.s f3, f10, f14, f5, rne # perform operation
fnmsub.s f3, f10, f14, f5, rtz # perform operation
fnmsub.s f3, f10, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f10, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f10, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f10, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f10, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f10, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xe0e860e542ee6f46 # load x3 with value 0xe0e860e542ee6f46
sw x3, 0(x2) # store 0xe0e860e542ee6f46 in memory
flw f15, 0(x2) # load 0xe0e860e542ee6f46 from memory into f15
fnmsub.s f12, f2, f25, f15, dyn # perform operation
fnmsub.s f12, f2, f25, f15, rdn # perform operation
fnmsub.s f12, f2, f25, f15, rmm # perform operation
fnmsub.s f12, f2, f25, f15, rne # perform operation
fnmsub.s f12, f2, f25, f15, rtz # perform operation
fnmsub.s f12, f2, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x32ddc1960107ff35 # load x3 with value 0x32ddc1960107ff35
sw x3, 0(x2) # store 0x32ddc1960107ff35 in memory
flw f5, 0(x2) # load 0x32ddc1960107ff35 from memory into f5
fnmsub.s f20, f30, f18, f5, dyn # perform operation
fnmsub.s f20, f30, f18, f5, rdn # perform operation
fnmsub.s f20, f30, f18, f5, rmm # perform operation
fnmsub.s f20, f30, f18, f5, rne # perform operation
fnmsub.s f20, f30, f18, f5, rtz # perform operation
fnmsub.s f20, f30, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xbae614bf3a64c5f6 # load x3 with value 0xbae614bf3a64c5f6
sw x3, 0(x2) # store 0xbae614bf3a64c5f6 in memory
flw f17, 0(x2) # load 0xbae614bf3a64c5f6 from memory into f17
fnmsub.s f7, f22, f15, f17, dyn # perform operation
fnmsub.s f7, f22, f15, f17, rdn # perform operation
fnmsub.s f7, f22, f15, f17, rmm # perform operation
fnmsub.s f7, f22, f15, f17, rne # perform operation
fnmsub.s f7, f22, f15, f17, rtz # perform operation
fnmsub.s f7, f22, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x202099cedba7b67c # load x3 with value 0x202099cedba7b67c
sw x3, 0(x2) # store 0x202099cedba7b67c in memory
flw f20, 0(x2) # load 0x202099cedba7b67c from memory into f20
fnmsub.s f3, f5, f26, f20, dyn # perform operation
fnmsub.s f3, f5, f26, f20, rdn # perform operation
fnmsub.s f3, f5, f26, f20, rmm # perform operation
fnmsub.s f3, f5, f26, f20, rne # perform operation
fnmsub.s f3, f5, f26, f20, rtz # perform operation
fnmsub.s f3, f5, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xe7b040ddf8a3f054 # load x3 with value 0xe7b040ddf8a3f054
sw x3, 0(x2) # store 0xe7b040ddf8a3f054 in memory
flw f21, 0(x2) # load 0xe7b040ddf8a3f054 from memory into f21
fnmsub.s f14, f22, f1, f21, dyn # perform operation
fnmsub.s f14, f22, f1, f21, rdn # perform operation
fnmsub.s f14, f22, f1, f21, rmm # perform operation
fnmsub.s f14, f22, f1, f21, rne # perform operation
fnmsub.s f14, f22, f1, f21, rtz # perform operation
fnmsub.s f14, f22, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x858f8dec037a079d # load x3 with value 0x858f8dec037a079d
sw x3, 0(x2) # store 0x858f8dec037a079d in memory
flw f28, 0(x2) # load 0x858f8dec037a079d from memory into f28
fnmsub.s f17, f22, f5, f28, dyn # perform operation
fnmsub.s f17, f22, f5, f28, rdn # perform operation
fnmsub.s f17, f22, f5, f28, rmm # perform operation
fnmsub.s f17, f22, f5, f28, rne # perform operation
fnmsub.s f17, f22, f5, f28, rtz # perform operation
fnmsub.s f17, f22, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x524cd1b042a0b6d1 # load x3 with value 0x524cd1b042a0b6d1
sw x3, 0(x2) # store 0x524cd1b042a0b6d1 in memory
flw f16, 0(x2) # load 0x524cd1b042a0b6d1 from memory into f16
fnmsub.s f3, f20, f2, f16, dyn # perform operation
fnmsub.s f3, f20, f2, f16, rdn # perform operation
fnmsub.s f3, f20, f2, f16, rmm # perform operation
fnmsub.s f3, f20, f2, f16, rne # perform operation
fnmsub.s f3, f20, f2, f16, rtz # perform operation
fnmsub.s f3, f20, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f20, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f20, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f20, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f20, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f20, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xf01633ec06cc09ed # load x3 with value 0xf01633ec06cc09ed
sw x3, 0(x2) # store 0xf01633ec06cc09ed in memory
flw f30, 0(x2) # load 0xf01633ec06cc09ed from memory into f30
fnmsub.s f8, f6, f21, f30, dyn # perform operation
fnmsub.s f8, f6, f21, f30, rdn # perform operation
fnmsub.s f8, f6, f21, f30, rmm # perform operation
fnmsub.s f8, f6, f21, f30, rne # perform operation
fnmsub.s f8, f6, f21, f30, rtz # perform operation
fnmsub.s f8, f6, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x25ea76ffe0619912 # load x3 with value 0x25ea76ffe0619912
sw x3, 0(x2) # store 0x25ea76ffe0619912 in memory
flw f23, 0(x2) # load 0x25ea76ffe0619912 from memory into f23
fnmsub.s f8, f24, f19, f23, dyn # perform operation
fnmsub.s f8, f24, f19, f23, rdn # perform operation
fnmsub.s f8, f24, f19, f23, rmm # perform operation
fnmsub.s f8, f24, f19, f23, rne # perform operation
fnmsub.s f8, f24, f19, f23, rtz # perform operation
fnmsub.s f8, f24, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xcb18d67581087fa4 # load x3 with value 0xcb18d67581087fa4
sw x3, 0(x2) # store 0xcb18d67581087fa4 in memory
flw f26, 0(x2) # load 0xcb18d67581087fa4 from memory into f26
fnmsub.s f3, f16, f8, f26, dyn # perform operation
fnmsub.s f3, f16, f8, f26, rdn # perform operation
fnmsub.s f3, f16, f8, f26, rmm # perform operation
fnmsub.s f3, f16, f8, f26, rne # perform operation
fnmsub.s f3, f16, f8, f26, rtz # perform operation
fnmsub.s f3, f16, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xa2a241915345bc91 # load x3 with value 0xa2a241915345bc91
sw x3, 0(x2) # store 0xa2a241915345bc91 in memory
flw f20, 0(x2) # load 0xa2a241915345bc91 from memory into f20
fnmsub.s f18, f28, f27, f20, dyn # perform operation
fnmsub.s f18, f28, f27, f20, rdn # perform operation
fnmsub.s f18, f28, f27, f20, rmm # perform operation
fnmsub.s f18, f28, f27, f20, rne # perform operation
fnmsub.s f18, f28, f27, f20, rtz # perform operation
fnmsub.s f18, f28, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f28, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xd57d24f5d445d548 # load x3 with value 0xd57d24f5d445d548
sw x3, 0(x2) # store 0xd57d24f5d445d548 in memory
flw f10, 0(x2) # load 0xd57d24f5d445d548 from memory into f10
fnmsub.s f6, f16, f30, f10, dyn # perform operation
fnmsub.s f6, f16, f30, f10, rdn # perform operation
fnmsub.s f6, f16, f30, f10, rmm # perform operation
fnmsub.s f6, f16, f30, f10, rne # perform operation
fnmsub.s f6, f16, f30, f10, rtz # perform operation
fnmsub.s f6, f16, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x6c453ec50c4c0e9c # load x3 with value 0x6c453ec50c4c0e9c
sw x3, 0(x2) # store 0x6c453ec50c4c0e9c in memory
flw f13, 0(x2) # load 0x6c453ec50c4c0e9c from memory into f13
fnmsub.s f22, f5, f8, f13, dyn # perform operation
fnmsub.s f22, f5, f8, f13, rdn # perform operation
fnmsub.s f22, f5, f8, f13, rmm # perform operation
fnmsub.s f22, f5, f8, f13, rne # perform operation
fnmsub.s f22, f5, f8, f13, rtz # perform operation
fnmsub.s f22, f5, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xdec98b88fb96bd87 # load x3 with value 0xdec98b88fb96bd87
sw x3, 0(x2) # store 0xdec98b88fb96bd87 in memory
flw f30, 0(x2) # load 0xdec98b88fb96bd87 from memory into f30
fnmsub.s f20, f25, f7, f30, dyn # perform operation
fnmsub.s f20, f25, f7, f30, rdn # perform operation
fnmsub.s f20, f25, f7, f30, rmm # perform operation
fnmsub.s f20, f25, f7, f30, rne # perform operation
fnmsub.s f20, f25, f7, f30, rtz # perform operation
fnmsub.s f20, f25, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xb2e12bb6c71070fb # load x3 with value 0xb2e12bb6c71070fb
sw x3, 0(x2) # store 0xb2e12bb6c71070fb in memory
flw f21, 0(x2) # load 0xb2e12bb6c71070fb from memory into f21
fnmsub.s f29, f23, f14, f21, dyn # perform operation
fnmsub.s f29, f23, f14, f21, rdn # perform operation
fnmsub.s f29, f23, f14, f21, rmm # perform operation
fnmsub.s f29, f23, f14, f21, rne # perform operation
fnmsub.s f29, f23, f14, f21, rtz # perform operation
fnmsub.s f29, f23, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x9226e7502f4c4792 # load x3 with value 0x9226e7502f4c4792
sw x3, 0(x2) # store 0x9226e7502f4c4792 in memory
flw f17, 0(x2) # load 0x9226e7502f4c4792 from memory into f17
fnmsub.s f8, f9, f6, f17, dyn # perform operation
fnmsub.s f8, f9, f6, f17, rdn # perform operation
fnmsub.s f8, f9, f6, f17, rmm # perform operation
fnmsub.s f8, f9, f6, f17, rne # perform operation
fnmsub.s f8, f9, f6, f17, rtz # perform operation
fnmsub.s f8, f9, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x202d46d3cea0736b # load x3 with value 0x202d46d3cea0736b
sw x3, 0(x2) # store 0x202d46d3cea0736b in memory
flw f19, 0(x2) # load 0x202d46d3cea0736b from memory into f19
fnmsub.s f31, f9, f21, f19, dyn # perform operation
fnmsub.s f31, f9, f21, f19, rdn # perform operation
fnmsub.s f31, f9, f21, f19, rmm # perform operation
fnmsub.s f31, f9, f21, f19, rne # perform operation
fnmsub.s f31, f9, f21, f19, rtz # perform operation
fnmsub.s f31, f9, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x88a746ad18108a20 # load x3 with value 0x88a746ad18108a20
sw x3, 0(x2) # store 0x88a746ad18108a20 in memory
flw f1, 0(x2) # load 0x88a746ad18108a20 from memory into f1
fnmsub.s f23, f26, f18, f1, dyn # perform operation
fnmsub.s f23, f26, f18, f1, rdn # perform operation
fnmsub.s f23, f26, f18, f1, rmm # perform operation
fnmsub.s f23, f26, f18, f1, rne # perform operation
fnmsub.s f23, f26, f18, f1, rtz # perform operation
fnmsub.s f23, f26, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x4f8b6fbae9898609 # load x3 with value 0x4f8b6fbae9898609
sw x3, 0(x2) # store 0x4f8b6fbae9898609 in memory
flw f23, 0(x2) # load 0x4f8b6fbae9898609 from memory into f23
fnmsub.s f16, f11, f22, f23, dyn # perform operation
fnmsub.s f16, f11, f22, f23, rdn # perform operation
fnmsub.s f16, f11, f22, f23, rmm # perform operation
fnmsub.s f16, f11, f22, f23, rne # perform operation
fnmsub.s f16, f11, f22, f23, rtz # perform operation
fnmsub.s f16, f11, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f11, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f11, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f11, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f11, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f11, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x9db325a4acf1defa # load x3 with value 0x9db325a4acf1defa
sw x3, 0(x2) # store 0x9db325a4acf1defa in memory
flw f5, 0(x2) # load 0x9db325a4acf1defa from memory into f5
fnmsub.s f29, f2, f14, f5, dyn # perform operation
fnmsub.s f29, f2, f14, f5, rdn # perform operation
fnmsub.s f29, f2, f14, f5, rmm # perform operation
fnmsub.s f29, f2, f14, f5, rne # perform operation
fnmsub.s f29, f2, f14, f5, rtz # perform operation
fnmsub.s f29, f2, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x539fc6c1866af416 # load x3 with value 0x539fc6c1866af416
sw x3, 0(x2) # store 0x539fc6c1866af416 in memory
flw f7, 0(x2) # load 0x539fc6c1866af416 from memory into f7
fnmsub.s f14, f8, f26, f7, dyn # perform operation
fnmsub.s f14, f8, f26, f7, rdn # perform operation
fnmsub.s f14, f8, f26, f7, rmm # perform operation
fnmsub.s f14, f8, f26, f7, rne # perform operation
fnmsub.s f14, f8, f26, f7, rtz # perform operation
fnmsub.s f14, f8, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xd3b318e21248fb77 # load x3 with value 0xd3b318e21248fb77
sw x3, 0(x2) # store 0xd3b318e21248fb77 in memory
flw f3, 0(x2) # load 0xd3b318e21248fb77 from memory into f3
fnmsub.s f27, f8, f24, f3, dyn # perform operation
fnmsub.s f27, f8, f24, f3, rdn # perform operation
fnmsub.s f27, f8, f24, f3, rmm # perform operation
fnmsub.s f27, f8, f24, f3, rne # perform operation
fnmsub.s f27, f8, f24, f3, rtz # perform operation
fnmsub.s f27, f8, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0xc45878c62118708e # load x3 with value 0xc45878c62118708e
sw x3, 0(x2) # store 0xc45878c62118708e in memory
flw f26, 0(x2) # load 0xc45878c62118708e from memory into f26
fnmsub.s f22, f30, f27, f26, dyn # perform operation
fnmsub.s f22, f30, f27, f26, rdn # perform operation
fnmsub.s f22, f30, f27, f26, rmm # perform operation
fnmsub.s f22, f30, f27, f26, rne # perform operation
fnmsub.s f22, f30, f27, f26, rtz # perform operation
fnmsub.s f22, f30, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xe9f4e617ba61ee02 # load x3 with value 0xe9f4e617ba61ee02
sw x3, 0(x2) # store 0xe9f4e617ba61ee02 in memory
flw f17, 0(x2) # load 0xe9f4e617ba61ee02 from memory into f17
fnmsub.s f19, f28, f13, f17, dyn # perform operation
fnmsub.s f19, f28, f13, f17, rdn # perform operation
fnmsub.s f19, f28, f13, f17, rmm # perform operation
fnmsub.s f19, f28, f13, f17, rne # perform operation
fnmsub.s f19, f28, f13, f17, rtz # perform operation
fnmsub.s f19, f28, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0xbd4b19a260981758 # load x3 with value 0xbd4b19a260981758
sw x3, 0(x2) # store 0xbd4b19a260981758 in memory
flw f17, 0(x2) # load 0xbd4b19a260981758 from memory into f17
fnmsub.s f15, f13, f20, f17, dyn # perform operation
fnmsub.s f15, f13, f20, f17, rdn # perform operation
fnmsub.s f15, f13, f20, f17, rmm # perform operation
fnmsub.s f15, f13, f20, f17, rne # perform operation
fnmsub.s f15, f13, f20, f17, rtz # perform operation
fnmsub.s f15, f13, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f13, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f13, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f13, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f13, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f13, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x9048550148e4b33d # load x3 with value 0x9048550148e4b33d
sw x3, 0(x2) # store 0x9048550148e4b33d in memory
flw f28, 0(x2) # load 0x9048550148e4b33d from memory into f28
fnmsub.s f13, f6, f8, f28, dyn # perform operation
fnmsub.s f13, f6, f8, f28, rdn # perform operation
fnmsub.s f13, f6, f8, f28, rmm # perform operation
fnmsub.s f13, f6, f8, f28, rne # perform operation
fnmsub.s f13, f6, f8, f28, rtz # perform operation
fnmsub.s f13, f6, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f6, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0xbbad240cf7e178f0 # load x3 with value 0xbbad240cf7e178f0
sw x3, 0(x2) # store 0xbbad240cf7e178f0 in memory
flw f15, 0(x2) # load 0xbbad240cf7e178f0 from memory into f15
fnmsub.s f2, f5, f20, f15, dyn # perform operation
fnmsub.s f2, f5, f20, f15, rdn # perform operation
fnmsub.s f2, f5, f20, f15, rmm # perform operation
fnmsub.s f2, f5, f20, f15, rne # perform operation
fnmsub.s f2, f5, f20, f15, rtz # perform operation
fnmsub.s f2, f5, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xdf2997838e4880e6 # load x3 with value 0xdf2997838e4880e6
sw x3, 0(x2) # store 0xdf2997838e4880e6 in memory
flw f21, 0(x2) # load 0xdf2997838e4880e6 from memory into f21
fnmsub.s f14, f8, f22, f21, dyn # perform operation
fnmsub.s f14, f8, f22, f21, rdn # perform operation
fnmsub.s f14, f8, f22, f21, rmm # perform operation
fnmsub.s f14, f8, f22, f21, rne # perform operation
fnmsub.s f14, f8, f22, f21, rtz # perform operation
fnmsub.s f14, f8, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xf27efaa29fda8e6c # load x3 with value 0xf27efaa29fda8e6c
sw x3, 0(x2) # store 0xf27efaa29fda8e6c in memory
flw f25, 0(x2) # load 0xf27efaa29fda8e6c from memory into f25
fnmsub.s f11, f29, f18, f25, dyn # perform operation
fnmsub.s f11, f29, f18, f25, rdn # perform operation
fnmsub.s f11, f29, f18, f25, rmm # perform operation
fnmsub.s f11, f29, f18, f25, rne # perform operation
fnmsub.s f11, f29, f18, f25, rtz # perform operation
fnmsub.s f11, f29, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f29, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x9825b3c4438f835e # load x3 with value 0x9825b3c4438f835e
sw x3, 0(x2) # store 0x9825b3c4438f835e in memory
flw f18, 0(x2) # load 0x9825b3c4438f835e from memory into f18
fnmsub.s f27, f10, f30, f18, dyn # perform operation
fnmsub.s f27, f10, f30, f18, rdn # perform operation
fnmsub.s f27, f10, f30, f18, rmm # perform operation
fnmsub.s f27, f10, f30, f18, rne # perform operation
fnmsub.s f27, f10, f30, f18, rtz # perform operation
fnmsub.s f27, f10, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f10, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f10, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f10, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f10, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f10, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x86a0799aaefa97f # load x3 with value 0x86a0799aaefa97f
sw x3, 0(x2) # store 0x86a0799aaefa97f in memory
flw f8, 0(x2) # load 0x86a0799aaefa97f from memory into f8
fnmsub.s f1, f26, f15, f8, dyn # perform operation
fnmsub.s f1, f26, f15, f8, rdn # perform operation
fnmsub.s f1, f26, f15, f8, rmm # perform operation
fnmsub.s f1, f26, f15, f8, rne # perform operation
fnmsub.s f1, f26, f15, f8, rtz # perform operation
fnmsub.s f1, f26, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x3e1249cf565651a7 # load x3 with value 0x3e1249cf565651a7
sw x3, 0(x2) # store 0x3e1249cf565651a7 in memory
flw f22, 0(x2) # load 0x3e1249cf565651a7 from memory into f22
fnmsub.s f5, f24, f31, f22, dyn # perform operation
fnmsub.s f5, f24, f31, f22, rdn # perform operation
fnmsub.s f5, f24, f31, f22, rmm # perform operation
fnmsub.s f5, f24, f31, f22, rne # perform operation
fnmsub.s f5, f24, f31, f22, rtz # perform operation
fnmsub.s f5, f24, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x7289190e6e656bfe # load x3 with value 0x7289190e6e656bfe
sw x3, 0(x2) # store 0x7289190e6e656bfe in memory
flw f11, 0(x2) # load 0x7289190e6e656bfe from memory into f11
fnmsub.s f23, f13, f9, f11, dyn # perform operation
fnmsub.s f23, f13, f9, f11, rdn # perform operation
fnmsub.s f23, f13, f9, f11, rmm # perform operation
fnmsub.s f23, f13, f9, f11, rne # perform operation
fnmsub.s f23, f13, f9, f11, rtz # perform operation
fnmsub.s f23, f13, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xab40eec3c8bb4fad # load x3 with value 0xab40eec3c8bb4fad
sw x3, 0(x2) # store 0xab40eec3c8bb4fad in memory
flw f20, 0(x2) # load 0xab40eec3c8bb4fad from memory into f20
fnmsub.s f25, f18, f6, f20, dyn # perform operation
fnmsub.s f25, f18, f6, f20, rdn # perform operation
fnmsub.s f25, f18, f6, f20, rmm # perform operation
fnmsub.s f25, f18, f6, f20, rne # perform operation
fnmsub.s f25, f18, f6, f20, rtz # perform operation
fnmsub.s f25, f18, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x94fb8bdb998ff25 # load x3 with value 0x94fb8bdb998ff25
sw x3, 0(x2) # store 0x94fb8bdb998ff25 in memory
flw f18, 0(x2) # load 0x94fb8bdb998ff25 from memory into f18
fnmsub.s f10, f30, f1, f18, dyn # perform operation
fnmsub.s f10, f30, f1, f18, rdn # perform operation
fnmsub.s f10, f30, f1, f18, rmm # perform operation
fnmsub.s f10, f30, f1, f18, rne # perform operation
fnmsub.s f10, f30, f1, f18, rtz # perform operation
fnmsub.s f10, f30, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f30, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f30, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f30, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f30, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f30, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x526ed804da08c512 # load x3 with value 0x526ed804da08c512
sw x3, 0(x2) # store 0x526ed804da08c512 in memory
flw f29, 0(x2) # load 0x526ed804da08c512 from memory into f29
fnmsub.s f7, f25, f11, f29, dyn # perform operation
fnmsub.s f7, f25, f11, f29, rdn # perform operation
fnmsub.s f7, f25, f11, f29, rmm # perform operation
fnmsub.s f7, f25, f11, f29, rne # perform operation
fnmsub.s f7, f25, f11, f29, rtz # perform operation
fnmsub.s f7, f25, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f25, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x5273fab7630f0f3b # load x3 with value 0x5273fab7630f0f3b
sw x3, 0(x2) # store 0x5273fab7630f0f3b in memory
flw f7, 0(x2) # load 0x5273fab7630f0f3b from memory into f7
fnmsub.s f14, f26, f21, f7, dyn # perform operation
fnmsub.s f14, f26, f21, f7, rdn # perform operation
fnmsub.s f14, f26, f21, f7, rmm # perform operation
fnmsub.s f14, f26, f21, f7, rne # perform operation
fnmsub.s f14, f26, f21, f7, rtz # perform operation
fnmsub.s f14, f26, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x40ba4b3024849e16 # load x3 with value 0x40ba4b3024849e16
sw x3, 0(x2) # store 0x40ba4b3024849e16 in memory
flw f17, 0(x2) # load 0x40ba4b3024849e16 from memory into f17
fnmsub.s f3, f8, f7, f17, dyn # perform operation
fnmsub.s f3, f8, f7, f17, rdn # perform operation
fnmsub.s f3, f8, f7, f17, rmm # perform operation
fnmsub.s f3, f8, f7, f17, rne # perform operation
fnmsub.s f3, f8, f7, f17, rtz # perform operation
fnmsub.s f3, f8, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f8, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xb86fb0138720f63f # load x3 with value 0xb86fb0138720f63f
sw x3, 0(x2) # store 0xb86fb0138720f63f in memory
flw f21, 0(x2) # load 0xb86fb0138720f63f from memory into f21
fnmsub.s f27, f11, f5, f21, dyn # perform operation
fnmsub.s f27, f11, f5, f21, rdn # perform operation
fnmsub.s f27, f11, f5, f21, rmm # perform operation
fnmsub.s f27, f11, f5, f21, rne # perform operation
fnmsub.s f27, f11, f5, f21, rtz # perform operation
fnmsub.s f27, f11, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x3680c747896e93bd # load x3 with value 0x3680c747896e93bd
sw x3, 0(x2) # store 0x3680c747896e93bd in memory
flw f22, 0(x2) # load 0x3680c747896e93bd from memory into f22
fnmsub.s f26, f27, f28, f22, dyn # perform operation
fnmsub.s f26, f27, f28, f22, rdn # perform operation
fnmsub.s f26, f27, f28, f22, rmm # perform operation
fnmsub.s f26, f27, f28, f22, rne # perform operation
fnmsub.s f26, f27, f28, f22, rtz # perform operation
fnmsub.s f26, f27, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x929ddbbcd9184e82 # load x3 with value 0x929ddbbcd9184e82
sw x3, 0(x2) # store 0x929ddbbcd9184e82 in memory
flw f16, 0(x2) # load 0x929ddbbcd9184e82 from memory into f16
fnmsub.s f15, f7, f19, f16, dyn # perform operation
fnmsub.s f15, f7, f19, f16, rdn # perform operation
fnmsub.s f15, f7, f19, f16, rmm # perform operation
fnmsub.s f15, f7, f19, f16, rne # perform operation
fnmsub.s f15, f7, f19, f16, rtz # perform operation
fnmsub.s f15, f7, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x3660705821c5a932 # load x3 with value 0x3660705821c5a932
sw x3, 0(x2) # store 0x3660705821c5a932 in memory
flw f30, 0(x2) # load 0x3660705821c5a932 from memory into f30
fnmsub.s f5, f6, f9, f30, dyn # perform operation
fnmsub.s f5, f6, f9, f30, rdn # perform operation
fnmsub.s f5, f6, f9, f30, rmm # perform operation
fnmsub.s f5, f6, f9, f30, rne # perform operation
fnmsub.s f5, f6, f9, f30, rtz # perform operation
fnmsub.s f5, f6, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x387f4c09ec721a93 # load x3 with value 0x387f4c09ec721a93
sw x3, 0(x2) # store 0x387f4c09ec721a93 in memory
flw f7, 0(x2) # load 0x387f4c09ec721a93 from memory into f7
fnmsub.s f12, f20, f13, f7, dyn # perform operation
fnmsub.s f12, f20, f13, f7, rdn # perform operation
fnmsub.s f12, f20, f13, f7, rmm # perform operation
fnmsub.s f12, f20, f13, f7, rne # perform operation
fnmsub.s f12, f20, f13, f7, rtz # perform operation
fnmsub.s f12, f20, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f20, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f20, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f20, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f20, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f20, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xa9d2e6c9ebacedb1 # load x3 with value 0xa9d2e6c9ebacedb1
sw x3, 0(x2) # store 0xa9d2e6c9ebacedb1 in memory
flw f9, 0(x2) # load 0xa9d2e6c9ebacedb1 from memory into f9
fnmsub.s f24, f6, f22, f9, dyn # perform operation
fnmsub.s f24, f6, f22, f9, rdn # perform operation
fnmsub.s f24, f6, f22, f9, rmm # perform operation
fnmsub.s f24, f6, f22, f9, rne # perform operation
fnmsub.s f24, f6, f22, f9, rtz # perform operation
fnmsub.s f24, f6, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f6, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x6f554cede05f5815 # load x3 with value 0x6f554cede05f5815
sw x3, 0(x2) # store 0x6f554cede05f5815 in memory
flw f24, 0(x2) # load 0x6f554cede05f5815 from memory into f24
fnmsub.s f6, f25, f19, f24, dyn # perform operation
fnmsub.s f6, f25, f19, f24, rdn # perform operation
fnmsub.s f6, f25, f19, f24, rmm # perform operation
fnmsub.s f6, f25, f19, f24, rne # perform operation
fnmsub.s f6, f25, f19, f24, rtz # perform operation
fnmsub.s f6, f25, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f25, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f25, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f25, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f25, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f25, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0xc89c1f1928399d10 # load x3 with value 0xc89c1f1928399d10
sw x3, 0(x2) # store 0xc89c1f1928399d10 in memory
flw f25, 0(x2) # load 0xc89c1f1928399d10 from memory into f25
fnmsub.s f16, f6, f14, f25, dyn # perform operation
fnmsub.s f16, f6, f14, f25, rdn # perform operation
fnmsub.s f16, f6, f14, f25, rmm # perform operation
fnmsub.s f16, f6, f14, f25, rne # perform operation
fnmsub.s f16, f6, f14, f25, rtz # perform operation
fnmsub.s f16, f6, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x421d588320766062 # load x3 with value 0x421d588320766062
sw x3, 0(x2) # store 0x421d588320766062 in memory
flw f29, 0(x2) # load 0x421d588320766062 from memory into f29
fnmsub.s f26, f19, f5, f29, dyn # perform operation
fnmsub.s f26, f19, f5, f29, rdn # perform operation
fnmsub.s f26, f19, f5, f29, rmm # perform operation
fnmsub.s f26, f19, f5, f29, rne # perform operation
fnmsub.s f26, f19, f5, f29, rtz # perform operation
fnmsub.s f26, f19, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x2260c181506b819b # load x3 with value 0x2260c181506b819b
sw x3, 0(x2) # store 0x2260c181506b819b in memory
flw f6, 0(x2) # load 0x2260c181506b819b from memory into f6
fnmsub.s f24, f2, f17, f6, dyn # perform operation
fnmsub.s f24, f2, f17, f6, rdn # perform operation
fnmsub.s f24, f2, f17, f6, rmm # perform operation
fnmsub.s f24, f2, f17, f6, rne # perform operation
fnmsub.s f24, f2, f17, f6, rtz # perform operation
fnmsub.s f24, f2, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x4afa09d672f4c0f4 # load x3 with value 0x4afa09d672f4c0f4
sw x3, 0(x2) # store 0x4afa09d672f4c0f4 in memory
flw f5, 0(x2) # load 0x4afa09d672f4c0f4 from memory into f5
fnmsub.s f6, f15, f3, f5, dyn # perform operation
fnmsub.s f6, f15, f3, f5, rdn # perform operation
fnmsub.s f6, f15, f3, f5, rmm # perform operation
fnmsub.s f6, f15, f3, f5, rne # perform operation
fnmsub.s f6, f15, f3, f5, rtz # perform operation
fnmsub.s f6, f15, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xb096251d7c6eea2c # load x3 with value 0xb096251d7c6eea2c
sw x3, 0(x2) # store 0xb096251d7c6eea2c in memory
flw f29, 0(x2) # load 0xb096251d7c6eea2c from memory into f29
fnmsub.s f19, f10, f3, f29, dyn # perform operation
fnmsub.s f19, f10, f3, f29, rdn # perform operation
fnmsub.s f19, f10, f3, f29, rmm # perform operation
fnmsub.s f19, f10, f3, f29, rne # perform operation
fnmsub.s f19, f10, f3, f29, rtz # perform operation
fnmsub.s f19, f10, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f10, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xa3f9d3199f9c2e7 # load x3 with value 0xa3f9d3199f9c2e7
sw x3, 0(x2) # store 0xa3f9d3199f9c2e7 in memory
flw f5, 0(x2) # load 0xa3f9d3199f9c2e7 from memory into f5
fnmsub.s f6, f30, f8, f5, dyn # perform operation
fnmsub.s f6, f30, f8, f5, rdn # perform operation
fnmsub.s f6, f30, f8, f5, rmm # perform operation
fnmsub.s f6, f30, f8, f5, rne # perform operation
fnmsub.s f6, f30, f8, f5, rtz # perform operation
fnmsub.s f6, f30, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x70d78cff2ad05e55 # load x3 with value 0x70d78cff2ad05e55
sw x3, 0(x2) # store 0x70d78cff2ad05e55 in memory
flw f17, 0(x2) # load 0x70d78cff2ad05e55 from memory into f17
fnmsub.s f5, f14, f24, f17, dyn # perform operation
fnmsub.s f5, f14, f24, f17, rdn # perform operation
fnmsub.s f5, f14, f24, f17, rmm # perform operation
fnmsub.s f5, f14, f24, f17, rne # perform operation
fnmsub.s f5, f14, f24, f17, rtz # perform operation
fnmsub.s f5, f14, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x562230b85067eb3d # load x3 with value 0x562230b85067eb3d
sw x3, 0(x2) # store 0x562230b85067eb3d in memory
flw f27, 0(x2) # load 0x562230b85067eb3d from memory into f27
fnmsub.s f2, f21, f3, f27, dyn # perform operation
fnmsub.s f2, f21, f3, f27, rdn # perform operation
fnmsub.s f2, f21, f3, f27, rmm # perform operation
fnmsub.s f2, f21, f3, f27, rne # perform operation
fnmsub.s f2, f21, f3, f27, rtz # perform operation
fnmsub.s f2, f21, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x56bf3c76cf9f2634 # load x3 with value 0x56bf3c76cf9f2634
sw x3, 0(x2) # store 0x56bf3c76cf9f2634 in memory
flw f23, 0(x2) # load 0x56bf3c76cf9f2634 from memory into f23
fnmsub.s f10, f1, f22, f23, dyn # perform operation
fnmsub.s f10, f1, f22, f23, rdn # perform operation
fnmsub.s f10, f1, f22, f23, rmm # perform operation
fnmsub.s f10, f1, f22, f23, rne # perform operation
fnmsub.s f10, f1, f22, f23, rtz # perform operation
fnmsub.s f10, f1, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xe4a37455ef96bfab # load x3 with value 0xe4a37455ef96bfab
sw x3, 0(x2) # store 0xe4a37455ef96bfab in memory
flw f30, 0(x2) # load 0xe4a37455ef96bfab from memory into f30
fnmsub.s f3, f10, f11, f30, dyn # perform operation
fnmsub.s f3, f10, f11, f30, rdn # perform operation
fnmsub.s f3, f10, f11, f30, rmm # perform operation
fnmsub.s f3, f10, f11, f30, rne # perform operation
fnmsub.s f3, f10, f11, f30, rtz # perform operation
fnmsub.s f3, f10, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f10, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f10, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f10, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f10, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f10, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xbe0a62618cd4da82 # load x3 with value 0xbe0a62618cd4da82
sw x3, 0(x2) # store 0xbe0a62618cd4da82 in memory
flw f2, 0(x2) # load 0xbe0a62618cd4da82 from memory into f2
fnmsub.s f30, f25, f10, f2, dyn # perform operation
fnmsub.s f30, f25, f10, f2, rdn # perform operation
fnmsub.s f30, f25, f10, f2, rmm # perform operation
fnmsub.s f30, f25, f10, f2, rne # perform operation
fnmsub.s f30, f25, f10, f2, rtz # perform operation
fnmsub.s f30, f25, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xf62ab641ede3092 # load x3 with value 0xf62ab641ede3092
sw x3, 0(x2) # store 0xf62ab641ede3092 in memory
flw f19, 0(x2) # load 0xf62ab641ede3092 from memory into f19
fnmsub.s f13, f2, f24, f19, dyn # perform operation
fnmsub.s f13, f2, f24, f19, rdn # perform operation
fnmsub.s f13, f2, f24, f19, rmm # perform operation
fnmsub.s f13, f2, f24, f19, rne # perform operation
fnmsub.s f13, f2, f24, f19, rtz # perform operation
fnmsub.s f13, f2, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f2, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xb61adfa4d37fb429 # load x3 with value 0xb61adfa4d37fb429
sw x3, 0(x2) # store 0xb61adfa4d37fb429 in memory
flw f21, 0(x2) # load 0xb61adfa4d37fb429 from memory into f21
fnmsub.s f16, f8, f6, f21, dyn # perform operation
fnmsub.s f16, f8, f6, f21, rdn # perform operation
fnmsub.s f16, f8, f6, f21, rmm # perform operation
fnmsub.s f16, f8, f6, f21, rne # perform operation
fnmsub.s f16, f8, f6, f21, rtz # perform operation
fnmsub.s f16, f8, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xbc61ed010f3e38fa # load x3 with value 0xbc61ed010f3e38fa
sw x3, 0(x2) # store 0xbc61ed010f3e38fa in memory
flw f21, 0(x2) # load 0xbc61ed010f3e38fa from memory into f21
fnmsub.s f27, f11, f29, f21, dyn # perform operation
fnmsub.s f27, f11, f29, f21, rdn # perform operation
fnmsub.s f27, f11, f29, f21, rmm # perform operation
fnmsub.s f27, f11, f29, f21, rne # perform operation
fnmsub.s f27, f11, f29, f21, rtz # perform operation
fnmsub.s f27, f11, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0xc51b617196ddfef7 # load x3 with value 0xc51b617196ddfef7
sw x3, 0(x2) # store 0xc51b617196ddfef7 in memory
flw f16, 0(x2) # load 0xc51b617196ddfef7 from memory into f16
fnmsub.s f24, f5, f29, f16, dyn # perform operation
fnmsub.s f24, f5, f29, f16, rdn # perform operation
fnmsub.s f24, f5, f29, f16, rmm # perform operation
fnmsub.s f24, f5, f29, f16, rne # perform operation
fnmsub.s f24, f5, f29, f16, rtz # perform operation
fnmsub.s f24, f5, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f5, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x9c4ca23fcaf00f09 # load x3 with value 0x9c4ca23fcaf00f09
sw x3, 0(x2) # store 0x9c4ca23fcaf00f09 in memory
flw f14, 0(x2) # load 0x9c4ca23fcaf00f09 from memory into f14
fnmsub.s f25, f17, f24, f14, dyn # perform operation
fnmsub.s f25, f17, f24, f14, rdn # perform operation
fnmsub.s f25, f17, f24, f14, rmm # perform operation
fnmsub.s f25, f17, f24, f14, rne # perform operation
fnmsub.s f25, f17, f24, f14, rtz # perform operation
fnmsub.s f25, f17, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f17, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x4dbd4f37e1b4da9c # load x3 with value 0x4dbd4f37e1b4da9c
sw x3, 0(x2) # store 0x4dbd4f37e1b4da9c in memory
flw f9, 0(x2) # load 0x4dbd4f37e1b4da9c from memory into f9
fnmsub.s f6, f13, f22, f9, dyn # perform operation
fnmsub.s f6, f13, f22, f9, rdn # perform operation
fnmsub.s f6, f13, f22, f9, rmm # perform operation
fnmsub.s f6, f13, f22, f9, rne # perform operation
fnmsub.s f6, f13, f22, f9, rtz # perform operation
fnmsub.s f6, f13, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xe896a9ade3f90672 # load x3 with value 0xe896a9ade3f90672
sw x3, 0(x2) # store 0xe896a9ade3f90672 in memory
flw f14, 0(x2) # load 0xe896a9ade3f90672 from memory into f14
fnmsub.s f28, f22, f11, f14, dyn # perform operation
fnmsub.s f28, f22, f11, f14, rdn # perform operation
fnmsub.s f28, f22, f11, f14, rmm # perform operation
fnmsub.s f28, f22, f11, f14, rne # perform operation
fnmsub.s f28, f22, f11, f14, rtz # perform operation
fnmsub.s f28, f22, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f22, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f22, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f22, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f22, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f22, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x36aa3c6dff47744 # load x3 with value 0x36aa3c6dff47744
sw x3, 0(x2) # store 0x36aa3c6dff47744 in memory
flw f25, 0(x2) # load 0x36aa3c6dff47744 from memory into f25
fnmsub.s f20, f9, f19, f25, dyn # perform operation
fnmsub.s f20, f9, f19, f25, rdn # perform operation
fnmsub.s f20, f9, f19, f25, rmm # perform operation
fnmsub.s f20, f9, f19, f25, rne # perform operation
fnmsub.s f20, f9, f19, f25, rtz # perform operation
fnmsub.s f20, f9, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f9, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xe8dbaf8afd7a08ef # load x3 with value 0xe8dbaf8afd7a08ef
sw x3, 0(x2) # store 0xe8dbaf8afd7a08ef in memory
flw f25, 0(x2) # load 0xe8dbaf8afd7a08ef from memory into f25
fnmsub.s f20, f18, f10, f25, dyn # perform operation
fnmsub.s f20, f18, f10, f25, rdn # perform operation
fnmsub.s f20, f18, f10, f25, rmm # perform operation
fnmsub.s f20, f18, f10, f25, rne # perform operation
fnmsub.s f20, f18, f10, f25, rtz # perform operation
fnmsub.s f20, f18, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x75140d8baf6e132e # load x3 with value 0x75140d8baf6e132e
sw x3, 0(x2) # store 0x75140d8baf6e132e in memory
flw f11, 0(x2) # load 0x75140d8baf6e132e from memory into f11
fnmsub.s f10, f30, f22, f11, dyn # perform operation
fnmsub.s f10, f30, f22, f11, rdn # perform operation
fnmsub.s f10, f30, f22, f11, rmm # perform operation
fnmsub.s f10, f30, f22, f11, rne # perform operation
fnmsub.s f10, f30, f22, f11, rtz # perform operation
fnmsub.s f10, f30, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f30, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x935f541677d52936 # load x3 with value 0x935f541677d52936
sw x3, 0(x2) # store 0x935f541677d52936 in memory
flw f19, 0(x2) # load 0x935f541677d52936 from memory into f19
fnmsub.s f9, f30, f24, f19, dyn # perform operation
fnmsub.s f9, f30, f24, f19, rdn # perform operation
fnmsub.s f9, f30, f24, f19, rmm # perform operation
fnmsub.s f9, f30, f24, f19, rne # perform operation
fnmsub.s f9, f30, f24, f19, rtz # perform operation
fnmsub.s f9, f30, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x9f24e7a3fc652724 # load x3 with value 0x9f24e7a3fc652724
sw x3, 0(x2) # store 0x9f24e7a3fc652724 in memory
flw f5, 0(x2) # load 0x9f24e7a3fc652724 from memory into f5
fnmsub.s f11, f18, f3, f5, dyn # perform operation
fnmsub.s f11, f18, f3, f5, rdn # perform operation
fnmsub.s f11, f18, f3, f5, rmm # perform operation
fnmsub.s f11, f18, f3, f5, rne # perform operation
fnmsub.s f11, f18, f3, f5, rtz # perform operation
fnmsub.s f11, f18, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f18, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x52f322804ac59156 # load x3 with value 0x52f322804ac59156
sw x3, 0(x2) # store 0x52f322804ac59156 in memory
flw f12, 0(x2) # load 0x52f322804ac59156 from memory into f12
fnmsub.s f13, f17, f6, f12, dyn # perform operation
fnmsub.s f13, f17, f6, f12, rdn # perform operation
fnmsub.s f13, f17, f6, f12, rmm # perform operation
fnmsub.s f13, f17, f6, f12, rne # perform operation
fnmsub.s f13, f17, f6, f12, rtz # perform operation
fnmsub.s f13, f17, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x20bd95b28f0c5d32 # load x3 with value 0x20bd95b28f0c5d32
sw x3, 0(x2) # store 0x20bd95b28f0c5d32 in memory
flw f24, 0(x2) # load 0x20bd95b28f0c5d32 from memory into f24
fnmsub.s f11, f5, f20, f24, dyn # perform operation
fnmsub.s f11, f5, f20, f24, rdn # perform operation
fnmsub.s f11, f5, f20, f24, rmm # perform operation
fnmsub.s f11, f5, f20, f24, rne # perform operation
fnmsub.s f11, f5, f20, f24, rtz # perform operation
fnmsub.s f11, f5, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f5, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x126fa8284669ab7a # load x3 with value 0x126fa8284669ab7a
sw x3, 0(x2) # store 0x126fa8284669ab7a in memory
flw f25, 0(x2) # load 0x126fa8284669ab7a from memory into f25
fnmsub.s f2, f31, f30, f25, dyn # perform operation
fnmsub.s f2, f31, f30, f25, rdn # perform operation
fnmsub.s f2, f31, f30, f25, rmm # perform operation
fnmsub.s f2, f31, f30, f25, rne # perform operation
fnmsub.s f2, f31, f30, f25, rtz # perform operation
fnmsub.s f2, f31, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x7cf9c7a207c3e659 # load x3 with value 0x7cf9c7a207c3e659
sw x3, 0(x2) # store 0x7cf9c7a207c3e659 in memory
flw f5, 0(x2) # load 0x7cf9c7a207c3e659 from memory into f5
fnmsub.s f15, f16, f14, f5, dyn # perform operation
fnmsub.s f15, f16, f14, f5, rdn # perform operation
fnmsub.s f15, f16, f14, f5, rmm # perform operation
fnmsub.s f15, f16, f14, f5, rne # perform operation
fnmsub.s f15, f16, f14, f5, rtz # perform operation
fnmsub.s f15, f16, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x1ad6962058613e64 # load x3 with value 0x1ad6962058613e64
sw x3, 0(x2) # store 0x1ad6962058613e64 in memory
flw f24, 0(x2) # load 0x1ad6962058613e64 from memory into f24
fnmsub.s f20, f7, f27, f24, dyn # perform operation
fnmsub.s f20, f7, f27, f24, rdn # perform operation
fnmsub.s f20, f7, f27, f24, rmm # perform operation
fnmsub.s f20, f7, f27, f24, rne # perform operation
fnmsub.s f20, f7, f27, f24, rtz # perform operation
fnmsub.s f20, f7, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f7, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xc456dd3d785437bb # load x3 with value 0xc456dd3d785437bb
sw x3, 0(x2) # store 0xc456dd3d785437bb in memory
flw f2, 0(x2) # load 0xc456dd3d785437bb from memory into f2
fnmsub.s f10, f11, f20, f2, dyn # perform operation
fnmsub.s f10, f11, f20, f2, rdn # perform operation
fnmsub.s f10, f11, f20, f2, rmm # perform operation
fnmsub.s f10, f11, f20, f2, rne # perform operation
fnmsub.s f10, f11, f20, f2, rtz # perform operation
fnmsub.s f10, f11, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x20ab6bb3ac94af84 # load x3 with value 0x20ab6bb3ac94af84
sw x3, 0(x2) # store 0x20ab6bb3ac94af84 in memory
flw f30, 0(x2) # load 0x20ab6bb3ac94af84 from memory into f30
fnmsub.s f18, f16, f3, f30, dyn # perform operation
fnmsub.s f18, f16, f3, f30, rdn # perform operation
fnmsub.s f18, f16, f3, f30, rmm # perform operation
fnmsub.s f18, f16, f3, f30, rne # perform operation
fnmsub.s f18, f16, f3, f30, rtz # perform operation
fnmsub.s f18, f16, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x15c701dc2d1b9d0a # load x3 with value 0x15c701dc2d1b9d0a
sw x3, 0(x2) # store 0x15c701dc2d1b9d0a in memory
flw f17, 0(x2) # load 0x15c701dc2d1b9d0a from memory into f17
fnmsub.s f8, f13, f14, f17, dyn # perform operation
fnmsub.s f8, f13, f14, f17, rdn # perform operation
fnmsub.s f8, f13, f14, f17, rmm # perform operation
fnmsub.s f8, f13, f14, f17, rne # perform operation
fnmsub.s f8, f13, f14, f17, rtz # perform operation
fnmsub.s f8, f13, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f13, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0xb4f66d0f8273be05 # load x3 with value 0xb4f66d0f8273be05
sw x3, 0(x2) # store 0xb4f66d0f8273be05 in memory
flw f16, 0(x2) # load 0xb4f66d0f8273be05 from memory into f16
fnmsub.s f19, f18, f27, f16, dyn # perform operation
fnmsub.s f19, f18, f27, f16, rdn # perform operation
fnmsub.s f19, f18, f27, f16, rmm # perform operation
fnmsub.s f19, f18, f27, f16, rne # perform operation
fnmsub.s f19, f18, f27, f16, rtz # perform operation
fnmsub.s f19, f18, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xcf35642e3492987a # load x3 with value 0xcf35642e3492987a
sw x3, 0(x2) # store 0xcf35642e3492987a in memory
flw f25, 0(x2) # load 0xcf35642e3492987a from memory into f25
fnmsub.s f7, f9, f13, f25, dyn # perform operation
fnmsub.s f7, f9, f13, f25, rdn # perform operation
fnmsub.s f7, f9, f13, f25, rmm # perform operation
fnmsub.s f7, f9, f13, f25, rne # perform operation
fnmsub.s f7, f9, f13, f25, rtz # perform operation
fnmsub.s f7, f9, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f9, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x52d112c66f42591a # load x3 with value 0x52d112c66f42591a
sw x3, 0(x2) # store 0x52d112c66f42591a in memory
flw f19, 0(x2) # load 0x52d112c66f42591a from memory into f19
fnmsub.s f31, f22, f10, f19, dyn # perform operation
fnmsub.s f31, f22, f10, f19, rdn # perform operation
fnmsub.s f31, f22, f10, f19, rmm # perform operation
fnmsub.s f31, f22, f10, f19, rne # perform operation
fnmsub.s f31, f22, f10, f19, rtz # perform operation
fnmsub.s f31, f22, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x113b7e42b24979ed # load x3 with value 0x113b7e42b24979ed
sw x3, 0(x2) # store 0x113b7e42b24979ed in memory
flw f30, 0(x2) # load 0x113b7e42b24979ed from memory into f30
fnmsub.s f15, f31, f28, f30, dyn # perform operation
fnmsub.s f15, f31, f28, f30, rdn # perform operation
fnmsub.s f15, f31, f28, f30, rmm # perform operation
fnmsub.s f15, f31, f28, f30, rne # perform operation
fnmsub.s f15, f31, f28, f30, rtz # perform operation
fnmsub.s f15, f31, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x95dfe42938bd75c2 # load x3 with value 0x95dfe42938bd75c2
sw x3, 0(x2) # store 0x95dfe42938bd75c2 in memory
flw f25, 0(x2) # load 0x95dfe42938bd75c2 from memory into f25
fnmsub.s f8, f14, f15, f25, dyn # perform operation
fnmsub.s f8, f14, f15, f25, rdn # perform operation
fnmsub.s f8, f14, f15, f25, rmm # perform operation
fnmsub.s f8, f14, f15, f25, rne # perform operation
fnmsub.s f8, f14, f15, f25, rtz # perform operation
fnmsub.s f8, f14, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x57ac8a774c0941bf # load x3 with value 0x57ac8a774c0941bf
sw x3, 0(x2) # store 0x57ac8a774c0941bf in memory
flw f17, 0(x2) # load 0x57ac8a774c0941bf from memory into f17
fnmsub.s f30, f8, f10, f17, dyn # perform operation
fnmsub.s f30, f8, f10, f17, rdn # perform operation
fnmsub.s f30, f8, f10, f17, rmm # perform operation
fnmsub.s f30, f8, f10, f17, rne # perform operation
fnmsub.s f30, f8, f10, f17, rtz # perform operation
fnmsub.s f30, f8, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7b8759cb07cac399 # load x3 with value 0x7b8759cb07cac399
sw x3, 0(x2) # store 0x7b8759cb07cac399 in memory
flw f1, 0(x2) # load 0x7b8759cb07cac399 from memory into f1
fnmsub.s f24, f3, f26, f1, dyn # perform operation
fnmsub.s f24, f3, f26, f1, rdn # perform operation
fnmsub.s f24, f3, f26, f1, rmm # perform operation
fnmsub.s f24, f3, f26, f1, rne # perform operation
fnmsub.s f24, f3, f26, f1, rtz # perform operation
fnmsub.s f24, f3, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f3, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x37515fc07bd9b308 # load x3 with value 0x37515fc07bd9b308
sw x3, 0(x2) # store 0x37515fc07bd9b308 in memory
flw f7, 0(x2) # load 0x37515fc07bd9b308 from memory into f7
fnmsub.s f26, f20, f27, f7, dyn # perform operation
fnmsub.s f26, f20, f27, f7, rdn # perform operation
fnmsub.s f26, f20, f27, f7, rmm # perform operation
fnmsub.s f26, f20, f27, f7, rne # perform operation
fnmsub.s f26, f20, f27, f7, rtz # perform operation
fnmsub.s f26, f20, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xa14d9d78fd2ad088 # load x3 with value 0xa14d9d78fd2ad088
sw x3, 0(x2) # store 0xa14d9d78fd2ad088 in memory
flw f25, 0(x2) # load 0xa14d9d78fd2ad088 from memory into f25
fnmsub.s f28, f29, f23, f25, dyn # perform operation
fnmsub.s f28, f29, f23, f25, rdn # perform operation
fnmsub.s f28, f29, f23, f25, rmm # perform operation
fnmsub.s f28, f29, f23, f25, rne # perform operation
fnmsub.s f28, f29, f23, f25, rtz # perform operation
fnmsub.s f28, f29, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f29, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x6a03ff5a14f3d823 # load x3 with value 0x6a03ff5a14f3d823
sw x3, 0(x2) # store 0x6a03ff5a14f3d823 in memory
flw f30, 0(x2) # load 0x6a03ff5a14f3d823 from memory into f30
fnmsub.s f7, f10, f15, f30, dyn # perform operation
fnmsub.s f7, f10, f15, f30, rdn # perform operation
fnmsub.s f7, f10, f15, f30, rmm # perform operation
fnmsub.s f7, f10, f15, f30, rne # perform operation
fnmsub.s f7, f10, f15, f30, rtz # perform operation
fnmsub.s f7, f10, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x8ba35133bbd60f52 # load x3 with value 0x8ba35133bbd60f52
sw x3, 0(x2) # store 0x8ba35133bbd60f52 in memory
flw f10, 0(x2) # load 0x8ba35133bbd60f52 from memory into f10
fnmsub.s f12, f31, f26, f10, dyn # perform operation
fnmsub.s f12, f31, f26, f10, rdn # perform operation
fnmsub.s f12, f31, f26, f10, rmm # perform operation
fnmsub.s f12, f31, f26, f10, rne # perform operation
fnmsub.s f12, f31, f26, f10, rtz # perform operation
fnmsub.s f12, f31, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xcf71c7b0c9acdd96 # load x3 with value 0xcf71c7b0c9acdd96
sw x3, 0(x2) # store 0xcf71c7b0c9acdd96 in memory
flw f29, 0(x2) # load 0xcf71c7b0c9acdd96 from memory into f29
fnmsub.s f1, f5, f15, f29, dyn # perform operation
fnmsub.s f1, f5, f15, f29, rdn # perform operation
fnmsub.s f1, f5, f15, f29, rmm # perform operation
fnmsub.s f1, f5, f15, f29, rne # perform operation
fnmsub.s f1, f5, f15, f29, rtz # perform operation
fnmsub.s f1, f5, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x7bf7494484550994 # load x3 with value 0x7bf7494484550994
sw x3, 0(x2) # store 0x7bf7494484550994 in memory
flw f15, 0(x2) # load 0x7bf7494484550994 from memory into f15
fnmsub.s f9, f1, f11, f15, dyn # perform operation
fnmsub.s f9, f1, f11, f15, rdn # perform operation
fnmsub.s f9, f1, f11, f15, rmm # perform operation
fnmsub.s f9, f1, f11, f15, rne # perform operation
fnmsub.s f9, f1, f11, f15, rtz # perform operation
fnmsub.s f9, f1, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x2d88f383e9ba556a # load x3 with value 0x2d88f383e9ba556a
sw x3, 0(x2) # store 0x2d88f383e9ba556a in memory
flw f12, 0(x2) # load 0x2d88f383e9ba556a from memory into f12
fnmsub.s f10, f9, f20, f12, dyn # perform operation
fnmsub.s f10, f9, f20, f12, rdn # perform operation
fnmsub.s f10, f9, f20, f12, rmm # perform operation
fnmsub.s f10, f9, f20, f12, rne # perform operation
fnmsub.s f10, f9, f20, f12, rtz # perform operation
fnmsub.s f10, f9, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xc1f0772fc1bacc20 # load x3 with value 0xc1f0772fc1bacc20
sw x3, 0(x2) # store 0xc1f0772fc1bacc20 in memory
flw f19, 0(x2) # load 0xc1f0772fc1bacc20 from memory into f19
fnmsub.s f13, f12, f27, f19, dyn # perform operation
fnmsub.s f13, f12, f27, f19, rdn # perform operation
fnmsub.s f13, f12, f27, f19, rmm # perform operation
fnmsub.s f13, f12, f27, f19, rne # perform operation
fnmsub.s f13, f12, f27, f19, rtz # perform operation
fnmsub.s f13, f12, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f12, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x9bcf089556643466 # load x3 with value 0x9bcf089556643466
sw x3, 0(x2) # store 0x9bcf089556643466 in memory
flw f20, 0(x2) # load 0x9bcf089556643466 from memory into f20
fnmsub.s f16, f5, f26, f20, dyn # perform operation
fnmsub.s f16, f5, f26, f20, rdn # perform operation
fnmsub.s f16, f5, f26, f20, rmm # perform operation
fnmsub.s f16, f5, f26, f20, rne # perform operation
fnmsub.s f16, f5, f26, f20, rtz # perform operation
fnmsub.s f16, f5, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x742bb136b2e340b8 # load x3 with value 0x742bb136b2e340b8
sw x3, 0(x2) # store 0x742bb136b2e340b8 in memory
flw f8, 0(x2) # load 0x742bb136b2e340b8 from memory into f8
fnmsub.s f25, f26, f5, f8, dyn # perform operation
fnmsub.s f25, f26, f5, f8, rdn # perform operation
fnmsub.s f25, f26, f5, f8, rmm # perform operation
fnmsub.s f25, f26, f5, f8, rne # perform operation
fnmsub.s f25, f26, f5, f8, rtz # perform operation
fnmsub.s f25, f26, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xd5139a0a7e96f29e # load x3 with value 0xd5139a0a7e96f29e
sw x3, 0(x2) # store 0xd5139a0a7e96f29e in memory
flw f3, 0(x2) # load 0xd5139a0a7e96f29e from memory into f3
fnmsub.s f13, f21, f30, f3, dyn # perform operation
fnmsub.s f13, f21, f30, f3, rdn # perform operation
fnmsub.s f13, f21, f30, f3, rmm # perform operation
fnmsub.s f13, f21, f30, f3, rne # perform operation
fnmsub.s f13, f21, f30, f3, rtz # perform operation
fnmsub.s f13, f21, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xe34122dea942e3b7 # load x3 with value 0xe34122dea942e3b7
sw x3, 0(x2) # store 0xe34122dea942e3b7 in memory
flw f22, 0(x2) # load 0xe34122dea942e3b7 from memory into f22
fnmsub.s f14, f25, f11, f22, dyn # perform operation
fnmsub.s f14, f25, f11, f22, rdn # perform operation
fnmsub.s f14, f25, f11, f22, rmm # perform operation
fnmsub.s f14, f25, f11, f22, rne # perform operation
fnmsub.s f14, f25, f11, f22, rtz # perform operation
fnmsub.s f14, f25, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xe6d1d1317ac7e28c # load x3 with value 0xe6d1d1317ac7e28c
sw x3, 0(x2) # store 0xe6d1d1317ac7e28c in memory
flw f15, 0(x2) # load 0xe6d1d1317ac7e28c from memory into f15
fnmsub.s f20, f29, f19, f15, dyn # perform operation
fnmsub.s f20, f29, f19, f15, rdn # perform operation
fnmsub.s f20, f29, f19, f15, rmm # perform operation
fnmsub.s f20, f29, f19, f15, rne # perform operation
fnmsub.s f20, f29, f19, f15, rtz # perform operation
fnmsub.s f20, f29, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x6028de85339a75f2 # load x3 with value 0x6028de85339a75f2
sw x3, 0(x2) # store 0x6028de85339a75f2 in memory
flw f14, 0(x2) # load 0x6028de85339a75f2 from memory into f14
fnmsub.s f11, f12, f10, f14, dyn # perform operation
fnmsub.s f11, f12, f10, f14, rdn # perform operation
fnmsub.s f11, f12, f10, f14, rmm # perform operation
fnmsub.s f11, f12, f10, f14, rne # perform operation
fnmsub.s f11, f12, f10, f14, rtz # perform operation
fnmsub.s f11, f12, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xa8cd6088c2c55c5c # load x3 with value 0xa8cd6088c2c55c5c
sw x3, 0(x2) # store 0xa8cd6088c2c55c5c in memory
flw f30, 0(x2) # load 0xa8cd6088c2c55c5c from memory into f30
fnmsub.s f31, f5, f1, f30, dyn # perform operation
fnmsub.s f31, f5, f1, f30, rdn # perform operation
fnmsub.s f31, f5, f1, f30, rmm # perform operation
fnmsub.s f31, f5, f1, f30, rne # perform operation
fnmsub.s f31, f5, f1, f30, rtz # perform operation
fnmsub.s f31, f5, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x6f91ecd46887e781 # load x3 with value 0x6f91ecd46887e781
sw x3, 0(x2) # store 0x6f91ecd46887e781 in memory
flw f22, 0(x2) # load 0x6f91ecd46887e781 from memory into f22
fnmsub.s f19, f24, f3, f22, dyn # perform operation
fnmsub.s f19, f24, f3, f22, rdn # perform operation
fnmsub.s f19, f24, f3, f22, rmm # perform operation
fnmsub.s f19, f24, f3, f22, rne # perform operation
fnmsub.s f19, f24, f3, f22, rtz # perform operation
fnmsub.s f19, f24, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x184cbf333f814d9 # load x3 with value 0x184cbf333f814d9
sw x3, 0(x2) # store 0x184cbf333f814d9 in memory
flw f13, 0(x2) # load 0x184cbf333f814d9 from memory into f13
fnmsub.s f21, f10, f27, f13, dyn # perform operation
fnmsub.s f21, f10, f27, f13, rdn # perform operation
fnmsub.s f21, f10, f27, f13, rmm # perform operation
fnmsub.s f21, f10, f27, f13, rne # perform operation
fnmsub.s f21, f10, f27, f13, rtz # perform operation
fnmsub.s f21, f10, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f10, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x1df8a0302cb2da48 # load x3 with value 0x1df8a0302cb2da48
sw x3, 0(x2) # store 0x1df8a0302cb2da48 in memory
flw f9, 0(x2) # load 0x1df8a0302cb2da48 from memory into f9
fnmsub.s f25, f16, f3, f9, dyn # perform operation
fnmsub.s f25, f16, f3, f9, rdn # perform operation
fnmsub.s f25, f16, f3, f9, rmm # perform operation
fnmsub.s f25, f16, f3, f9, rne # perform operation
fnmsub.s f25, f16, f3, f9, rtz # perform operation
fnmsub.s f25, f16, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x50baeae7d7f85994 # load x3 with value 0x50baeae7d7f85994
sw x3, 0(x2) # store 0x50baeae7d7f85994 in memory
flw f8, 0(x2) # load 0x50baeae7d7f85994 from memory into f8
fnmsub.s f16, f23, f27, f8, dyn # perform operation
fnmsub.s f16, f23, f27, f8, rdn # perform operation
fnmsub.s f16, f23, f27, f8, rmm # perform operation
fnmsub.s f16, f23, f27, f8, rne # perform operation
fnmsub.s f16, f23, f27, f8, rtz # perform operation
fnmsub.s f16, f23, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f23, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f23, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f23, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f23, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f23, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xb0f4af0a19d2f3a2 # load x3 with value 0xb0f4af0a19d2f3a2
sw x3, 0(x2) # store 0xb0f4af0a19d2f3a2 in memory
flw f18, 0(x2) # load 0xb0f4af0a19d2f3a2 from memory into f18
fnmsub.s f30, f3, f15, f18, dyn # perform operation
fnmsub.s f30, f3, f15, f18, rdn # perform operation
fnmsub.s f30, f3, f15, f18, rmm # perform operation
fnmsub.s f30, f3, f15, f18, rne # perform operation
fnmsub.s f30, f3, f15, f18, rtz # perform operation
fnmsub.s f30, f3, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0xa64a64fdb314ed71 # load x3 with value 0xa64a64fdb314ed71
sw x3, 0(x2) # store 0xa64a64fdb314ed71 in memory
flw f7, 0(x2) # load 0xa64a64fdb314ed71 from memory into f7
fnmsub.s f12, f26, f31, f7, dyn # perform operation
fnmsub.s f12, f26, f31, f7, rdn # perform operation
fnmsub.s f12, f26, f31, f7, rmm # perform operation
fnmsub.s f12, f26, f31, f7, rne # perform operation
fnmsub.s f12, f26, f31, f7, rtz # perform operation
fnmsub.s f12, f26, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xae0e40abebd0325a # load x3 with value 0xae0e40abebd0325a
sw x3, 0(x2) # store 0xae0e40abebd0325a in memory
flw f26, 0(x2) # load 0xae0e40abebd0325a from memory into f26
fnmsub.s f2, f8, f22, f26, dyn # perform operation
fnmsub.s f2, f8, f22, f26, rdn # perform operation
fnmsub.s f2, f8, f22, f26, rmm # perform operation
fnmsub.s f2, f8, f22, f26, rne # perform operation
fnmsub.s f2, f8, f22, f26, rtz # perform operation
fnmsub.s f2, f8, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x53e19009fa8ec68e # load x3 with value 0x53e19009fa8ec68e
sw x3, 0(x2) # store 0x53e19009fa8ec68e in memory
flw f26, 0(x2) # load 0x53e19009fa8ec68e from memory into f26
fnmsub.s f28, f25, f31, f26, dyn # perform operation
fnmsub.s f28, f25, f31, f26, rdn # perform operation
fnmsub.s f28, f25, f31, f26, rmm # perform operation
fnmsub.s f28, f25, f31, f26, rne # perform operation
fnmsub.s f28, f25, f31, f26, rtz # perform operation
fnmsub.s f28, f25, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x8aaec57b9d3467cd # load x3 with value 0x8aaec57b9d3467cd
sw x3, 0(x2) # store 0x8aaec57b9d3467cd in memory
flw f26, 0(x2) # load 0x8aaec57b9d3467cd from memory into f26
fnmsub.s f9, f13, f28, f26, dyn # perform operation
fnmsub.s f9, f13, f28, f26, rdn # perform operation
fnmsub.s f9, f13, f28, f26, rmm # perform operation
fnmsub.s f9, f13, f28, f26, rne # perform operation
fnmsub.s f9, f13, f28, f26, rtz # perform operation
fnmsub.s f9, f13, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x60784cbb137c7e9 # load x3 with value 0x60784cbb137c7e9
sw x3, 0(x2) # store 0x60784cbb137c7e9 in memory
flw f26, 0(x2) # load 0x60784cbb137c7e9 from memory into f26
fnmsub.s f16, f18, f28, f26, dyn # perform operation
fnmsub.s f16, f18, f28, f26, rdn # perform operation
fnmsub.s f16, f18, f28, f26, rmm # perform operation
fnmsub.s f16, f18, f28, f26, rne # perform operation
fnmsub.s f16, f18, f28, f26, rtz # perform operation
fnmsub.s f16, f18, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f18, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x49ac7e26e63a2c76 # load x3 with value 0x49ac7e26e63a2c76
sw x3, 0(x2) # store 0x49ac7e26e63a2c76 in memory
flw f2, 0(x2) # load 0x49ac7e26e63a2c76 from memory into f2
fnmsub.s f27, f31, f3, f2, dyn # perform operation
fnmsub.s f27, f31, f3, f2, rdn # perform operation
fnmsub.s f27, f31, f3, f2, rmm # perform operation
fnmsub.s f27, f31, f3, f2, rne # perform operation
fnmsub.s f27, f31, f3, f2, rtz # perform operation
fnmsub.s f27, f31, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f31, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f31, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f31, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f31, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f31, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x95cb0f0b1e01b27a # load x3 with value 0x95cb0f0b1e01b27a
sw x3, 0(x2) # store 0x95cb0f0b1e01b27a in memory
flw f5, 0(x2) # load 0x95cb0f0b1e01b27a from memory into f5
fnmsub.s f8, f14, f6, f5, dyn # perform operation
fnmsub.s f8, f14, f6, f5, rdn # perform operation
fnmsub.s f8, f14, f6, f5, rmm # perform operation
fnmsub.s f8, f14, f6, f5, rne # perform operation
fnmsub.s f8, f14, f6, f5, rtz # perform operation
fnmsub.s f8, f14, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0xe0ab42f17379b569 # load x3 with value 0xe0ab42f17379b569
sw x3, 0(x2) # store 0xe0ab42f17379b569 in memory
flw f3, 0(x2) # load 0xe0ab42f17379b569 from memory into f3
fnmsub.s f11, f21, f24, f3, dyn # perform operation
fnmsub.s f11, f21, f24, f3, rdn # perform operation
fnmsub.s f11, f21, f24, f3, rmm # perform operation
fnmsub.s f11, f21, f24, f3, rne # perform operation
fnmsub.s f11, f21, f24, f3, rtz # perform operation
fnmsub.s f11, f21, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x44068dae91fc0925 # load x3 with value 0x44068dae91fc0925
sw x3, 0(x2) # store 0x44068dae91fc0925 in memory
flw f1, 0(x2) # load 0x44068dae91fc0925 from memory into f1
fnmsub.s f16, f20, f25, f1, dyn # perform operation
fnmsub.s f16, f20, f25, f1, rdn # perform operation
fnmsub.s f16, f20, f25, f1, rmm # perform operation
fnmsub.s f16, f20, f25, f1, rne # perform operation
fnmsub.s f16, f20, f25, f1, rtz # perform operation
fnmsub.s f16, f20, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x77431a7d1e6ec93f # load x3 with value 0x77431a7d1e6ec93f
sw x3, 0(x2) # store 0x77431a7d1e6ec93f in memory
flw f25, 0(x2) # load 0x77431a7d1e6ec93f from memory into f25
fnmsub.s f12, f2, f24, f25, dyn # perform operation
fnmsub.s f12, f2, f24, f25, rdn # perform operation
fnmsub.s f12, f2, f24, f25, rmm # perform operation
fnmsub.s f12, f2, f24, f25, rne # perform operation
fnmsub.s f12, f2, f24, f25, rtz # perform operation
fnmsub.s f12, f2, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xc0a5656c53ae897b # load x3 with value 0xc0a5656c53ae897b
sw x3, 0(x2) # store 0xc0a5656c53ae897b in memory
flw f24, 0(x2) # load 0xc0a5656c53ae897b from memory into f24
fnmsub.s f15, f18, f7, f24, dyn # perform operation
fnmsub.s f15, f18, f7, f24, rdn # perform operation
fnmsub.s f15, f18, f7, f24, rmm # perform operation
fnmsub.s f15, f18, f7, f24, rne # perform operation
fnmsub.s f15, f18, f7, f24, rtz # perform operation
fnmsub.s f15, f18, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x7f67e71a0f6edfe2 # load x3 with value 0x7f67e71a0f6edfe2
sw x3, 0(x2) # store 0x7f67e71a0f6edfe2 in memory
flw f30, 0(x2) # load 0x7f67e71a0f6edfe2 from memory into f30
fnmsub.s f17, f6, f25, f30, dyn # perform operation
fnmsub.s f17, f6, f25, f30, rdn # perform operation
fnmsub.s f17, f6, f25, f30, rmm # perform operation
fnmsub.s f17, f6, f25, f30, rne # perform operation
fnmsub.s f17, f6, f25, f30, rtz # perform operation
fnmsub.s f17, f6, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x70d57ff1499c2e5e # load x3 with value 0x70d57ff1499c2e5e
sw x3, 0(x2) # store 0x70d57ff1499c2e5e in memory
flw f18, 0(x2) # load 0x70d57ff1499c2e5e from memory into f18
fnmsub.s f25, f29, f12, f18, dyn # perform operation
fnmsub.s f25, f29, f12, f18, rdn # perform operation
fnmsub.s f25, f29, f12, f18, rmm # perform operation
fnmsub.s f25, f29, f12, f18, rne # perform operation
fnmsub.s f25, f29, f12, f18, rtz # perform operation
fnmsub.s f25, f29, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0xcc28b1ae76537772 # load x3 with value 0xcc28b1ae76537772
sw x3, 0(x2) # store 0xcc28b1ae76537772 in memory
flw f13, 0(x2) # load 0xcc28b1ae76537772 from memory into f13
fnmsub.s f28, f10, f29, f13, dyn # perform operation
fnmsub.s f28, f10, f29, f13, rdn # perform operation
fnmsub.s f28, f10, f29, f13, rmm # perform operation
fnmsub.s f28, f10, f29, f13, rne # perform operation
fnmsub.s f28, f10, f29, f13, rtz # perform operation
fnmsub.s f28, f10, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x273cb4e29fa74687 # load x3 with value 0x273cb4e29fa74687
sw x3, 0(x2) # store 0x273cb4e29fa74687 in memory
flw f11, 0(x2) # load 0x273cb4e29fa74687 from memory into f11
fnmsub.s f27, f25, f8, f11, dyn # perform operation
fnmsub.s f27, f25, f8, f11, rdn # perform operation
fnmsub.s f27, f25, f8, f11, rmm # perform operation
fnmsub.s f27, f25, f8, f11, rne # perform operation
fnmsub.s f27, f25, f8, f11, rtz # perform operation
fnmsub.s f27, f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f25, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xc71ec0c4c2d8f13e # load x3 with value 0xc71ec0c4c2d8f13e
sw x3, 0(x2) # store 0xc71ec0c4c2d8f13e in memory
flw f24, 0(x2) # load 0xc71ec0c4c2d8f13e from memory into f24
fnmsub.s f25, f31, f14, f24, dyn # perform operation
fnmsub.s f25, f31, f14, f24, rdn # perform operation
fnmsub.s f25, f31, f14, f24, rmm # perform operation
fnmsub.s f25, f31, f14, f24, rne # perform operation
fnmsub.s f25, f31, f14, f24, rtz # perform operation
fnmsub.s f25, f31, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x89ada88a713d12d3 # load x3 with value 0x89ada88a713d12d3
sw x3, 0(x2) # store 0x89ada88a713d12d3 in memory
flw f1, 0(x2) # load 0x89ada88a713d12d3 from memory into f1
fnmsub.s f21, f29, f22, f1, dyn # perform operation
fnmsub.s f21, f29, f22, f1, rdn # perform operation
fnmsub.s f21, f29, f22, f1, rmm # perform operation
fnmsub.s f21, f29, f22, f1, rne # perform operation
fnmsub.s f21, f29, f22, f1, rtz # perform operation
fnmsub.s f21, f29, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f29, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xf0421d9684af89ba # load x3 with value 0xf0421d9684af89ba
sw x3, 0(x2) # store 0xf0421d9684af89ba in memory
flw f3, 0(x2) # load 0xf0421d9684af89ba from memory into f3
fnmsub.s f2, f26, f11, f3, dyn # perform operation
fnmsub.s f2, f26, f11, f3, rdn # perform operation
fnmsub.s f2, f26, f11, f3, rmm # perform operation
fnmsub.s f2, f26, f11, f3, rne # perform operation
fnmsub.s f2, f26, f11, f3, rtz # perform operation
fnmsub.s f2, f26, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x5c3e2167a21c8c6c # load x3 with value 0x5c3e2167a21c8c6c
sw x3, 0(x2) # store 0x5c3e2167a21c8c6c in memory
flw f25, 0(x2) # load 0x5c3e2167a21c8c6c from memory into f25
fnmsub.s f10, f12, f18, f25, dyn # perform operation
fnmsub.s f10, f12, f18, f25, rdn # perform operation
fnmsub.s f10, f12, f18, f25, rmm # perform operation
fnmsub.s f10, f12, f18, f25, rne # perform operation
fnmsub.s f10, f12, f18, f25, rtz # perform operation
fnmsub.s f10, f12, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f12, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f12, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f12, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f12, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f12, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x53166a0189766f4e # load x3 with value 0x53166a0189766f4e
sw x3, 0(x2) # store 0x53166a0189766f4e in memory
flw f3, 0(x2) # load 0x53166a0189766f4e from memory into f3
fnmsub.s f13, f23, f2, f3, dyn # perform operation
fnmsub.s f13, f23, f2, f3, rdn # perform operation
fnmsub.s f13, f23, f2, f3, rmm # perform operation
fnmsub.s f13, f23, f2, f3, rne # perform operation
fnmsub.s f13, f23, f2, f3, rtz # perform operation
fnmsub.s f13, f23, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xc491143dc2fa4506 # load x3 with value 0xc491143dc2fa4506
sw x3, 0(x2) # store 0xc491143dc2fa4506 in memory
flw f8, 0(x2) # load 0xc491143dc2fa4506 from memory into f8
fnmsub.s f24, f23, f31, f8, dyn # perform operation
fnmsub.s f24, f23, f31, f8, rdn # perform operation
fnmsub.s f24, f23, f31, f8, rmm # perform operation
fnmsub.s f24, f23, f31, f8, rne # perform operation
fnmsub.s f24, f23, f31, f8, rtz # perform operation
fnmsub.s f24, f23, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x12d963088e6e407 # load x3 with value 0x12d963088e6e407
sw x3, 0(x2) # store 0x12d963088e6e407 in memory
flw f30, 0(x2) # load 0x12d963088e6e407 from memory into f30
fnmsub.s f29, f15, f6, f30, dyn # perform operation
fnmsub.s f29, f15, f6, f30, rdn # perform operation
fnmsub.s f29, f15, f6, f30, rmm # perform operation
fnmsub.s f29, f15, f6, f30, rne # perform operation
fnmsub.s f29, f15, f6, f30, rtz # perform operation
fnmsub.s f29, f15, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xd15833b8a8e12368 # load x3 with value 0xd15833b8a8e12368
sw x3, 0(x2) # store 0xd15833b8a8e12368 in memory
flw f25, 0(x2) # load 0xd15833b8a8e12368 from memory into f25
fnmsub.s f1, f11, f28, f25, dyn # perform operation
fnmsub.s f1, f11, f28, f25, rdn # perform operation
fnmsub.s f1, f11, f28, f25, rmm # perform operation
fnmsub.s f1, f11, f28, f25, rne # perform operation
fnmsub.s f1, f11, f28, f25, rtz # perform operation
fnmsub.s f1, f11, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x6bc60eef03a3f1 # load x3 with value 0x6bc60eef03a3f1
sw x3, 0(x2) # store 0x6bc60eef03a3f1 in memory
flw f7, 0(x2) # load 0x6bc60eef03a3f1 from memory into f7
fnmsub.s f15, f5, f19, f7, dyn # perform operation
fnmsub.s f15, f5, f19, f7, rdn # perform operation
fnmsub.s f15, f5, f19, f7, rmm # perform operation
fnmsub.s f15, f5, f19, f7, rne # perform operation
fnmsub.s f15, f5, f19, f7, rtz # perform operation
fnmsub.s f15, f5, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x9dec10c7fb5ed0ba # load x3 with value 0x9dec10c7fb5ed0ba
sw x3, 0(x2) # store 0x9dec10c7fb5ed0ba in memory
flw f28, 0(x2) # load 0x9dec10c7fb5ed0ba from memory into f28
fnmsub.s f27, f18, f7, f28, dyn # perform operation
fnmsub.s f27, f18, f7, f28, rdn # perform operation
fnmsub.s f27, f18, f7, f28, rmm # perform operation
fnmsub.s f27, f18, f7, f28, rne # perform operation
fnmsub.s f27, f18, f7, f28, rtz # perform operation
fnmsub.s f27, f18, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x3108ba8ee7c4d76c # load x3 with value 0x3108ba8ee7c4d76c
sw x3, 0(x2) # store 0x3108ba8ee7c4d76c in memory
flw f23, 0(x2) # load 0x3108ba8ee7c4d76c from memory into f23
fnmsub.s f9, f18, f17, f23, dyn # perform operation
fnmsub.s f9, f18, f17, f23, rdn # perform operation
fnmsub.s f9, f18, f17, f23, rmm # perform operation
fnmsub.s f9, f18, f17, f23, rne # perform operation
fnmsub.s f9, f18, f17, f23, rtz # perform operation
fnmsub.s f9, f18, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f18, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x4b8356074b39eb12 # load x3 with value 0x4b8356074b39eb12
sw x3, 0(x2) # store 0x4b8356074b39eb12 in memory
flw f14, 0(x2) # load 0x4b8356074b39eb12 from memory into f14
fnmsub.s f17, f21, f5, f14, dyn # perform operation
fnmsub.s f17, f21, f5, f14, rdn # perform operation
fnmsub.s f17, f21, f5, f14, rmm # perform operation
fnmsub.s f17, f21, f5, f14, rne # perform operation
fnmsub.s f17, f21, f5, f14, rtz # perform operation
fnmsub.s f17, f21, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x418d023ddfbd7384 # load x3 with value 0x418d023ddfbd7384
sw x3, 0(x2) # store 0x418d023ddfbd7384 in memory
flw f26, 0(x2) # load 0x418d023ddfbd7384 from memory into f26
fnmsub.s f31, f2, f16, f26, dyn # perform operation
fnmsub.s f31, f2, f16, f26, rdn # perform operation
fnmsub.s f31, f2, f16, f26, rmm # perform operation
fnmsub.s f31, f2, f16, f26, rne # perform operation
fnmsub.s f31, f2, f16, f26, rtz # perform operation
fnmsub.s f31, f2, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xa67bf6c9f0028f55 # load x3 with value 0xa67bf6c9f0028f55
sw x3, 0(x2) # store 0xa67bf6c9f0028f55 in memory
flw f3, 0(x2) # load 0xa67bf6c9f0028f55 from memory into f3
fnmsub.s f24, f17, f16, f3, dyn # perform operation
fnmsub.s f24, f17, f16, f3, rdn # perform operation
fnmsub.s f24, f17, f16, f3, rmm # perform operation
fnmsub.s f24, f17, f16, f3, rne # perform operation
fnmsub.s f24, f17, f16, f3, rtz # perform operation
fnmsub.s f24, f17, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f17, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xe314ea84442a3c91 # load x3 with value 0xe314ea84442a3c91
sw x3, 0(x2) # store 0xe314ea84442a3c91 in memory
flw f19, 0(x2) # load 0xe314ea84442a3c91 from memory into f19
fnmsub.s f14, f17, f26, f19, dyn # perform operation
fnmsub.s f14, f17, f26, f19, rdn # perform operation
fnmsub.s f14, f17, f26, f19, rmm # perform operation
fnmsub.s f14, f17, f26, f19, rne # perform operation
fnmsub.s f14, f17, f26, f19, rtz # perform operation
fnmsub.s f14, f17, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xab872025a832d65f # load x3 with value 0xab872025a832d65f
sw x3, 0(x2) # store 0xab872025a832d65f in memory
flw f2, 0(x2) # load 0xab872025a832d65f from memory into f2
fnmsub.s f22, f31, f19, f2, dyn # perform operation
fnmsub.s f22, f31, f19, f2, rdn # perform operation
fnmsub.s f22, f31, f19, f2, rmm # perform operation
fnmsub.s f22, f31, f19, f2, rne # perform operation
fnmsub.s f22, f31, f19, f2, rtz # perform operation
fnmsub.s f22, f31, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x581224ef6089559d # load x3 with value 0x581224ef6089559d
sw x3, 0(x2) # store 0x581224ef6089559d in memory
flw f6, 0(x2) # load 0x581224ef6089559d from memory into f6
fnmsub.s f23, f17, f19, f6, dyn # perform operation
fnmsub.s f23, f17, f19, f6, rdn # perform operation
fnmsub.s f23, f17, f19, f6, rmm # perform operation
fnmsub.s f23, f17, f19, f6, rne # perform operation
fnmsub.s f23, f17, f19, f6, rtz # perform operation
fnmsub.s f23, f17, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xf66795804514f48e # load x3 with value 0xf66795804514f48e
sw x3, 0(x2) # store 0xf66795804514f48e in memory
flw f19, 0(x2) # load 0xf66795804514f48e from memory into f19
fnmsub.s f21, f23, f25, f19, dyn # perform operation
fnmsub.s f21, f23, f25, f19, rdn # perform operation
fnmsub.s f21, f23, f25, f19, rmm # perform operation
fnmsub.s f21, f23, f25, f19, rne # perform operation
fnmsub.s f21, f23, f25, f19, rtz # perform operation
fnmsub.s f21, f23, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xe9bae72ebfccc540 # load x3 with value 0xe9bae72ebfccc540
sw x3, 0(x2) # store 0xe9bae72ebfccc540 in memory
flw f28, 0(x2) # load 0xe9bae72ebfccc540 from memory into f28
fnmsub.s f25, f27, f16, f28, dyn # perform operation
fnmsub.s f25, f27, f16, f28, rdn # perform operation
fnmsub.s f25, f27, f16, f28, rmm # perform operation
fnmsub.s f25, f27, f16, f28, rne # perform operation
fnmsub.s f25, f27, f16, f28, rtz # perform operation
fnmsub.s f25, f27, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xb514a539070150ce # load x3 with value 0xb514a539070150ce
sw x3, 0(x2) # store 0xb514a539070150ce in memory
flw f21, 0(x2) # load 0xb514a539070150ce from memory into f21
fnmsub.s f18, f7, f12, f21, dyn # perform operation
fnmsub.s f18, f7, f12, f21, rdn # perform operation
fnmsub.s f18, f7, f12, f21, rmm # perform operation
fnmsub.s f18, f7, f12, f21, rne # perform operation
fnmsub.s f18, f7, f12, f21, rtz # perform operation
fnmsub.s f18, f7, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x51f249341851962e # load x3 with value 0x51f249341851962e
sw x3, 0(x2) # store 0x51f249341851962e in memory
flw f11, 0(x2) # load 0x51f249341851962e from memory into f11
fnmsub.s f5, f30, f2, f11, dyn # perform operation
fnmsub.s f5, f30, f2, f11, rdn # perform operation
fnmsub.s f5, f30, f2, f11, rmm # perform operation
fnmsub.s f5, f30, f2, f11, rne # perform operation
fnmsub.s f5, f30, f2, f11, rtz # perform operation
fnmsub.s f5, f30, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f30, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x19897230e2b7d05f # load x3 with value 0x19897230e2b7d05f
sw x3, 0(x2) # store 0x19897230e2b7d05f in memory
flw f31, 0(x2) # load 0x19897230e2b7d05f from memory into f31
fnmsub.s f20, f3, f22, f31, dyn # perform operation
fnmsub.s f20, f3, f22, f31, rdn # perform operation
fnmsub.s f20, f3, f22, f31, rmm # perform operation
fnmsub.s f20, f3, f22, f31, rne # perform operation
fnmsub.s f20, f3, f22, f31, rtz # perform operation
fnmsub.s f20, f3, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x2691609363c4281f # load x3 with value 0x2691609363c4281f
sw x3, 0(x2) # store 0x2691609363c4281f in memory
flw f18, 0(x2) # load 0x2691609363c4281f from memory into f18
fnmsub.s f23, f24, f20, f18, dyn # perform operation
fnmsub.s f23, f24, f20, f18, rdn # perform operation
fnmsub.s f23, f24, f20, f18, rmm # perform operation
fnmsub.s f23, f24, f20, f18, rne # perform operation
fnmsub.s f23, f24, f20, f18, rtz # perform operation
fnmsub.s f23, f24, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xace5e9ab7abe02be # load x3 with value 0xace5e9ab7abe02be
sw x3, 0(x2) # store 0xace5e9ab7abe02be in memory
flw f31, 0(x2) # load 0xace5e9ab7abe02be from memory into f31
fnmsub.s f14, f18, f19, f31, dyn # perform operation
fnmsub.s f14, f18, f19, f31, rdn # perform operation
fnmsub.s f14, f18, f19, f31, rmm # perform operation
fnmsub.s f14, f18, f19, f31, rne # perform operation
fnmsub.s f14, f18, f19, f31, rtz # perform operation
fnmsub.s f14, f18, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f18, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x8278002fbfd82852 # load x3 with value 0x8278002fbfd82852
sw x3, 0(x2) # store 0x8278002fbfd82852 in memory
flw f2, 0(x2) # load 0x8278002fbfd82852 from memory into f2
fnmsub.s f27, f3, f10, f2, dyn # perform operation
fnmsub.s f27, f3, f10, f2, rdn # perform operation
fnmsub.s f27, f3, f10, f2, rmm # perform operation
fnmsub.s f27, f3, f10, f2, rne # perform operation
fnmsub.s f27, f3, f10, f2, rtz # perform operation
fnmsub.s f27, f3, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x57e335367b6f3290 # load x3 with value 0x57e335367b6f3290
sw x3, 0(x2) # store 0x57e335367b6f3290 in memory
flw f22, 0(x2) # load 0x57e335367b6f3290 from memory into f22
fnmsub.s f12, f23, f25, f22, dyn # perform operation
fnmsub.s f12, f23, f25, f22, rdn # perform operation
fnmsub.s f12, f23, f25, f22, rmm # perform operation
fnmsub.s f12, f23, f25, f22, rne # perform operation
fnmsub.s f12, f23, f25, f22, rtz # perform operation
fnmsub.s f12, f23, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f23, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x9fcc58dc1523036a # load x3 with value 0x9fcc58dc1523036a
sw x3, 0(x2) # store 0x9fcc58dc1523036a in memory
flw f28, 0(x2) # load 0x9fcc58dc1523036a from memory into f28
fnmsub.s f25, f27, f6, f28, dyn # perform operation
fnmsub.s f25, f27, f6, f28, rdn # perform operation
fnmsub.s f25, f27, f6, f28, rmm # perform operation
fnmsub.s f25, f27, f6, f28, rne # perform operation
fnmsub.s f25, f27, f6, f28, rtz # perform operation
fnmsub.s f25, f27, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x3ad24e35b7d97f # load x3 with value 0x3ad24e35b7d97f
sw x3, 0(x2) # store 0x3ad24e35b7d97f in memory
flw f28, 0(x2) # load 0x3ad24e35b7d97f from memory into f28
fnmsub.s f27, f29, f31, f28, dyn # perform operation
fnmsub.s f27, f29, f31, f28, rdn # perform operation
fnmsub.s f27, f29, f31, f28, rmm # perform operation
fnmsub.s f27, f29, f31, f28, rne # perform operation
fnmsub.s f27, f29, f31, f28, rtz # perform operation
fnmsub.s f27, f29, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f29, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x7e6feadbdc27c025 # load x3 with value 0x7e6feadbdc27c025
sw x3, 0(x2) # store 0x7e6feadbdc27c025 in memory
flw f15, 0(x2) # load 0x7e6feadbdc27c025 from memory into f15
fnmsub.s f12, f5, f24, f15, dyn # perform operation
fnmsub.s f12, f5, f24, f15, rdn # perform operation
fnmsub.s f12, f5, f24, f15, rmm # perform operation
fnmsub.s f12, f5, f24, f15, rne # perform operation
fnmsub.s f12, f5, f24, f15, rtz # perform operation
fnmsub.s f12, f5, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xc5136a0722f8611 # load x3 with value 0xc5136a0722f8611
sw x3, 0(x2) # store 0xc5136a0722f8611 in memory
flw f18, 0(x2) # load 0xc5136a0722f8611 from memory into f18
fnmsub.s f6, f13, f11, f18, dyn # perform operation
fnmsub.s f6, f13, f11, f18, rdn # perform operation
fnmsub.s f6, f13, f11, f18, rmm # perform operation
fnmsub.s f6, f13, f11, f18, rne # perform operation
fnmsub.s f6, f13, f11, f18, rtz # perform operation
fnmsub.s f6, f13, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x142a913706f1fc75 # load x3 with value 0x142a913706f1fc75
sw x3, 0(x2) # store 0x142a913706f1fc75 in memory
flw f15, 0(x2) # load 0x142a913706f1fc75 from memory into f15
fnmsub.s f19, f29, f26, f15, dyn # perform operation
fnmsub.s f19, f29, f26, f15, rdn # perform operation
fnmsub.s f19, f29, f26, f15, rmm # perform operation
fnmsub.s f19, f29, f26, f15, rne # perform operation
fnmsub.s f19, f29, f26, f15, rtz # perform operation
fnmsub.s f19, f29, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xe4f873460efa4845 # load x3 with value 0xe4f873460efa4845
sw x3, 0(x2) # store 0xe4f873460efa4845 in memory
flw f17, 0(x2) # load 0xe4f873460efa4845 from memory into f17
fnmsub.s f16, f15, f12, f17, dyn # perform operation
fnmsub.s f16, f15, f12, f17, rdn # perform operation
fnmsub.s f16, f15, f12, f17, rmm # perform operation
fnmsub.s f16, f15, f12, f17, rne # perform operation
fnmsub.s f16, f15, f12, f17, rtz # perform operation
fnmsub.s f16, f15, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x1132fec4f8a4aa72 # load x3 with value 0x1132fec4f8a4aa72
sw x3, 0(x2) # store 0x1132fec4f8a4aa72 in memory
flw f13, 0(x2) # load 0x1132fec4f8a4aa72 from memory into f13
fnmsub.s f27, f10, f5, f13, dyn # perform operation
fnmsub.s f27, f10, f5, f13, rdn # perform operation
fnmsub.s f27, f10, f5, f13, rmm # perform operation
fnmsub.s f27, f10, f5, f13, rne # perform operation
fnmsub.s f27, f10, f5, f13, rtz # perform operation
fnmsub.s f27, f10, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f10, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x2fe8248164fea582 # load x3 with value 0x2fe8248164fea582
sw x3, 0(x2) # store 0x2fe8248164fea582 in memory
flw f28, 0(x2) # load 0x2fe8248164fea582 from memory into f28
fnmsub.s f30, f7, f13, f28, dyn # perform operation
fnmsub.s f30, f7, f13, f28, rdn # perform operation
fnmsub.s f30, f7, f13, f28, rmm # perform operation
fnmsub.s f30, f7, f13, f28, rne # perform operation
fnmsub.s f30, f7, f13, f28, rtz # perform operation
fnmsub.s f30, f7, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x85514c69b093b3fb # load x3 with value 0x85514c69b093b3fb
sw x3, 0(x2) # store 0x85514c69b093b3fb in memory
flw f22, 0(x2) # load 0x85514c69b093b3fb from memory into f22
fnmsub.s f27, f2, f25, f22, dyn # perform operation
fnmsub.s f27, f2, f25, f22, rdn # perform operation
fnmsub.s f27, f2, f25, f22, rmm # perform operation
fnmsub.s f27, f2, f25, f22, rne # perform operation
fnmsub.s f27, f2, f25, f22, rtz # perform operation
fnmsub.s f27, f2, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x85a021dbb2f13ed4 # load x3 with value 0x85a021dbb2f13ed4
sw x3, 0(x2) # store 0x85a021dbb2f13ed4 in memory
flw f16, 0(x2) # load 0x85a021dbb2f13ed4 from memory into f16
fnmsub.s f13, f19, f28, f16, dyn # perform operation
fnmsub.s f13, f19, f28, f16, rdn # perform operation
fnmsub.s f13, f19, f28, f16, rmm # perform operation
fnmsub.s f13, f19, f28, f16, rne # perform operation
fnmsub.s f13, f19, f28, f16, rtz # perform operation
fnmsub.s f13, f19, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x581209fde8c9f735 # load x3 with value 0x581209fde8c9f735
sw x3, 0(x2) # store 0x581209fde8c9f735 in memory
flw f28, 0(x2) # load 0x581209fde8c9f735 from memory into f28
fnmsub.s f19, f3, f18, f28, dyn # perform operation
fnmsub.s f19, f3, f18, f28, rdn # perform operation
fnmsub.s f19, f3, f18, f28, rmm # perform operation
fnmsub.s f19, f3, f18, f28, rne # perform operation
fnmsub.s f19, f3, f18, f28, rtz # perform operation
fnmsub.s f19, f3, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x4ddd6346c7e4f7a3 # load x3 with value 0x4ddd6346c7e4f7a3
sw x3, 0(x2) # store 0x4ddd6346c7e4f7a3 in memory
flw f7, 0(x2) # load 0x4ddd6346c7e4f7a3 from memory into f7
fnmsub.s f25, f27, f24, f7, dyn # perform operation
fnmsub.s f25, f27, f24, f7, rdn # perform operation
fnmsub.s f25, f27, f24, f7, rmm # perform operation
fnmsub.s f25, f27, f24, f7, rne # perform operation
fnmsub.s f25, f27, f24, f7, rtz # perform operation
fnmsub.s f25, f27, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0xc85f56a90a5a81d5 # load x3 with value 0xc85f56a90a5a81d5
sw x3, 0(x2) # store 0xc85f56a90a5a81d5 in memory
flw f1, 0(x2) # load 0xc85f56a90a5a81d5 from memory into f1
fnmsub.s f13, f16, f17, f1, dyn # perform operation
fnmsub.s f13, f16, f17, f1, rdn # perform operation
fnmsub.s f13, f16, f17, f1, rmm # perform operation
fnmsub.s f13, f16, f17, f1, rne # perform operation
fnmsub.s f13, f16, f17, f1, rtz # perform operation
fnmsub.s f13, f16, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x1863bbcd8448229d # load x3 with value 0x1863bbcd8448229d
sw x3, 0(x2) # store 0x1863bbcd8448229d in memory
flw f21, 0(x2) # load 0x1863bbcd8448229d from memory into f21
fnmsub.s f7, f28, f16, f21, dyn # perform operation
fnmsub.s f7, f28, f16, f21, rdn # perform operation
fnmsub.s f7, f28, f16, f21, rmm # perform operation
fnmsub.s f7, f28, f16, f21, rne # perform operation
fnmsub.s f7, f28, f16, f21, rtz # perform operation
fnmsub.s f7, f28, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x234b14805d9b3888 # load x3 with value 0x234b14805d9b3888
sw x3, 0(x2) # store 0x234b14805d9b3888 in memory
flw f16, 0(x2) # load 0x234b14805d9b3888 from memory into f16
fnmsub.s f3, f1, f17, f16, dyn # perform operation
fnmsub.s f3, f1, f17, f16, rdn # perform operation
fnmsub.s f3, f1, f17, f16, rmm # perform operation
fnmsub.s f3, f1, f17, f16, rne # perform operation
fnmsub.s f3, f1, f17, f16, rtz # perform operation
fnmsub.s f3, f1, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x5583545c53ec4d90 # load x3 with value 0x5583545c53ec4d90
sw x3, 0(x2) # store 0x5583545c53ec4d90 in memory
flw f23, 0(x2) # load 0x5583545c53ec4d90 from memory into f23
fnmsub.s f27, f17, f7, f23, dyn # perform operation
fnmsub.s f27, f17, f7, f23, rdn # perform operation
fnmsub.s f27, f17, f7, f23, rmm # perform operation
fnmsub.s f27, f17, f7, f23, rne # perform operation
fnmsub.s f27, f17, f7, f23, rtz # perform operation
fnmsub.s f27, f17, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f17, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f17, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f17, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f17, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f17, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xe68d13b4485660e4 # load x3 with value 0xe68d13b4485660e4
sw x3, 0(x2) # store 0xe68d13b4485660e4 in memory
flw f23, 0(x2) # load 0xe68d13b4485660e4 from memory into f23
fnmsub.s f18, f9, f15, f23, dyn # perform operation
fnmsub.s f18, f9, f15, f23, rdn # perform operation
fnmsub.s f18, f9, f15, f23, rmm # perform operation
fnmsub.s f18, f9, f15, f23, rne # perform operation
fnmsub.s f18, f9, f15, f23, rtz # perform operation
fnmsub.s f18, f9, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x373f84d1cf886381 # load x3 with value 0x373f84d1cf886381
sw x3, 0(x2) # store 0x373f84d1cf886381 in memory
flw f27, 0(x2) # load 0x373f84d1cf886381 from memory into f27
fnmsub.s f2, f31, f25, f27, dyn # perform operation
fnmsub.s f2, f31, f25, f27, rdn # perform operation
fnmsub.s f2, f31, f25, f27, rmm # perform operation
fnmsub.s f2, f31, f25, f27, rne # perform operation
fnmsub.s f2, f31, f25, f27, rtz # perform operation
fnmsub.s f2, f31, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x9722f49d7e1c2569 # load x3 with value 0x9722f49d7e1c2569
sw x3, 0(x2) # store 0x9722f49d7e1c2569 in memory
flw f27, 0(x2) # load 0x9722f49d7e1c2569 from memory into f27
fnmsub.s f20, f22, f24, f27, dyn # perform operation
fnmsub.s f20, f22, f24, f27, rdn # perform operation
fnmsub.s f20, f22, f24, f27, rmm # perform operation
fnmsub.s f20, f22, f24, f27, rne # perform operation
fnmsub.s f20, f22, f24, f27, rtz # perform operation
fnmsub.s f20, f22, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x2985b934a391541c # load x3 with value 0x2985b934a391541c
sw x3, 0(x2) # store 0x2985b934a391541c in memory
flw f3, 0(x2) # load 0x2985b934a391541c from memory into f3
fnmsub.s f1, f26, f10, f3, dyn # perform operation
fnmsub.s f1, f26, f10, f3, rdn # perform operation
fnmsub.s f1, f26, f10, f3, rmm # perform operation
fnmsub.s f1, f26, f10, f3, rne # perform operation
fnmsub.s f1, f26, f10, f3, rtz # perform operation
fnmsub.s f1, f26, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xafb8a48202534eeb # load x3 with value 0xafb8a48202534eeb
sw x3, 0(x2) # store 0xafb8a48202534eeb in memory
flw f26, 0(x2) # load 0xafb8a48202534eeb from memory into f26
fnmsub.s f5, f17, f13, f26, dyn # perform operation
fnmsub.s f5, f17, f13, f26, rdn # perform operation
fnmsub.s f5, f17, f13, f26, rmm # perform operation
fnmsub.s f5, f17, f13, f26, rne # perform operation
fnmsub.s f5, f17, f13, f26, rtz # perform operation
fnmsub.s f5, f17, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f17, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x99635f1050f5e2a8 # load x3 with value 0x99635f1050f5e2a8
sw x3, 0(x2) # store 0x99635f1050f5e2a8 in memory
flw f21, 0(x2) # load 0x99635f1050f5e2a8 from memory into f21
fnmsub.s f3, f28, f1, f21, dyn # perform operation
fnmsub.s f3, f28, f1, f21, rdn # perform operation
fnmsub.s f3, f28, f1, f21, rmm # perform operation
fnmsub.s f3, f28, f1, f21, rne # perform operation
fnmsub.s f3, f28, f1, f21, rtz # perform operation
fnmsub.s f3, f28, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f28, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f28, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f28, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f28, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f28, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x47334c80648e6566 # load x3 with value 0x47334c80648e6566
sw x3, 0(x2) # store 0x47334c80648e6566 in memory
flw f6, 0(x2) # load 0x47334c80648e6566 from memory into f6
fnmsub.s f8, f29, f28, f6, dyn # perform operation
fnmsub.s f8, f29, f28, f6, rdn # perform operation
fnmsub.s f8, f29, f28, f6, rmm # perform operation
fnmsub.s f8, f29, f28, f6, rne # perform operation
fnmsub.s f8, f29, f28, f6, rtz # perform operation
fnmsub.s f8, f29, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x68ec71a1ee3f250c # load x3 with value 0x68ec71a1ee3f250c
sw x3, 0(x2) # store 0x68ec71a1ee3f250c in memory
flw f26, 0(x2) # load 0x68ec71a1ee3f250c from memory into f26
fnmsub.s f29, f5, f22, f26, dyn # perform operation
fnmsub.s f29, f5, f22, f26, rdn # perform operation
fnmsub.s f29, f5, f22, f26, rmm # perform operation
fnmsub.s f29, f5, f22, f26, rne # perform operation
fnmsub.s f29, f5, f22, f26, rtz # perform operation
fnmsub.s f29, f5, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xd44d8dc2b34f970c # load x3 with value 0xd44d8dc2b34f970c
sw x3, 0(x2) # store 0xd44d8dc2b34f970c in memory
flw f18, 0(x2) # load 0xd44d8dc2b34f970c from memory into f18
fnmsub.s f9, f8, f1, f18, dyn # perform operation
fnmsub.s f9, f8, f1, f18, rdn # perform operation
fnmsub.s f9, f8, f1, f18, rmm # perform operation
fnmsub.s f9, f8, f1, f18, rne # perform operation
fnmsub.s f9, f8, f1, f18, rtz # perform operation
fnmsub.s f9, f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x26f8a7587666a650 # load x3 with value 0x26f8a7587666a650
sw x3, 0(x2) # store 0x26f8a7587666a650 in memory
flw f22, 0(x2) # load 0x26f8a7587666a650 from memory into f22
fnmsub.s f26, f8, f20, f22, dyn # perform operation
fnmsub.s f26, f8, f20, f22, rdn # perform operation
fnmsub.s f26, f8, f20, f22, rmm # perform operation
fnmsub.s f26, f8, f20, f22, rne # perform operation
fnmsub.s f26, f8, f20, f22, rtz # perform operation
fnmsub.s f26, f8, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x6fd4fd1a9937d4d8 # load x3 with value 0x6fd4fd1a9937d4d8
sw x3, 0(x2) # store 0x6fd4fd1a9937d4d8 in memory
flw f14, 0(x2) # load 0x6fd4fd1a9937d4d8 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f15, f25, f14, f17, dyn # perform operation
fnmsub.s f15, f25, f14, f17, rdn # perform operation
fnmsub.s f15, f25, f14, f17, rmm # perform operation
fnmsub.s f15, f25, f14, f17, rne # perform operation
fnmsub.s f15, f25, f14, f17, rtz # perform operation
fnmsub.s f15, f25, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xcf88e9e457e8101a # load x3 with value 0xcf88e9e457e8101a
sw x3, 0(x2) # store 0xcf88e9e457e8101a in memory
flw f6, 0(x2) # load 0xcf88e9e457e8101a from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmsub.s f10, f9, f6, f21, dyn # perform operation
fnmsub.s f10, f9, f6, f21, rdn # perform operation
fnmsub.s f10, f9, f6, f21, rmm # perform operation
fnmsub.s f10, f9, f6, f21, rne # perform operation
fnmsub.s f10, f9, f6, f21, rtz # perform operation
fnmsub.s f10, f9, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x65e978d3f312bb9d # load x3 with value 0x65e978d3f312bb9d
sw x3, 0(x2) # store 0x65e978d3f312bb9d in memory
flw f17, 0(x2) # load 0x65e978d3f312bb9d from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmsub.s f31, f26, f17, f10, dyn # perform operation
fnmsub.s f31, f26, f17, f10, rdn # perform operation
fnmsub.s f31, f26, f17, f10, rmm # perform operation
fnmsub.s f31, f26, f17, f10, rne # perform operation
fnmsub.s f31, f26, f17, f10, rtz # perform operation
fnmsub.s f31, f26, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x284f9232c905df3d # load x3 with value 0x284f9232c905df3d
sw x3, 0(x2) # store 0x284f9232c905df3d in memory
flw f23, 0(x2) # load 0x284f9232c905df3d from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f3, f7, f23, f18, dyn # perform operation
fnmsub.s f3, f7, f23, f18, rdn # perform operation
fnmsub.s f3, f7, f23, f18, rmm # perform operation
fnmsub.s f3, f7, f23, f18, rne # perform operation
fnmsub.s f3, f7, f23, f18, rtz # perform operation
fnmsub.s f3, f7, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x29e7ddfd8875bdf5 # load x3 with value 0x29e7ddfd8875bdf5
sw x3, 0(x2) # store 0x29e7ddfd8875bdf5 in memory
flw f16, 0(x2) # load 0x29e7ddfd8875bdf5 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmsub.s f10, f15, f16, f2, dyn # perform operation
fnmsub.s f10, f15, f16, f2, rdn # perform operation
fnmsub.s f10, f15, f16, f2, rmm # perform operation
fnmsub.s f10, f15, f16, f2, rne # perform operation
fnmsub.s f10, f15, f16, f2, rtz # perform operation
fnmsub.s f10, f15, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x88c39beefa1f903d # load x3 with value 0x88c39beefa1f903d
sw x3, 0(x2) # store 0x88c39beefa1f903d in memory
flw f15, 0(x2) # load 0x88c39beefa1f903d from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f9, f3, f15, f6, dyn # perform operation
fnmsub.s f9, f3, f15, f6, rdn # perform operation
fnmsub.s f9, f3, f15, f6, rmm # perform operation
fnmsub.s f9, f3, f15, f6, rne # perform operation
fnmsub.s f9, f3, f15, f6, rtz # perform operation
fnmsub.s f9, f3, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f3, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f3, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f3, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f3, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f3, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xe2dab26b5bdf519f # load x3 with value 0xe2dab26b5bdf519f
sw x3, 0(x2) # store 0xe2dab26b5bdf519f in memory
flw f9, 0(x2) # load 0xe2dab26b5bdf519f from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmsub.s f25, f11, f9, f20, dyn # perform operation
fnmsub.s f25, f11, f9, f20, rdn # perform operation
fnmsub.s f25, f11, f9, f20, rmm # perform operation
fnmsub.s f25, f11, f9, f20, rne # perform operation
fnmsub.s f25, f11, f9, f20, rtz # perform operation
fnmsub.s f25, f11, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x955bf1f67cff5e71 # load x3 with value 0x955bf1f67cff5e71
sw x3, 0(x2) # store 0x955bf1f67cff5e71 in memory
flw f1, 0(x2) # load 0x955bf1f67cff5e71 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmsub.s f14, f6, f1, f3, dyn # perform operation
fnmsub.s f14, f6, f1, f3, rdn # perform operation
fnmsub.s f14, f6, f1, f3, rmm # perform operation
fnmsub.s f14, f6, f1, f3, rne # perform operation
fnmsub.s f14, f6, f1, f3, rtz # perform operation
fnmsub.s f14, f6, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xe78a1a379322cd60 # load x3 with value 0xe78a1a379322cd60
sw x3, 0(x2) # store 0xe78a1a379322cd60 in memory
flw f31, 0(x2) # load 0xe78a1a379322cd60 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f7, f20, f31, f6, dyn # perform operation
fnmsub.s f7, f20, f31, f6, rdn # perform operation
fnmsub.s f7, f20, f31, f6, rmm # perform operation
fnmsub.s f7, f20, f31, f6, rne # perform operation
fnmsub.s f7, f20, f31, f6, rtz # perform operation
fnmsub.s f7, f20, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x3b5a2542728669e8 # load x3 with value 0x3b5a2542728669e8
sw x3, 0(x2) # store 0x3b5a2542728669e8 in memory
flw f6, 0(x2) # load 0x3b5a2542728669e8 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fnmsub.s f2, f5, f6, f8, dyn # perform operation
fnmsub.s f2, f5, f6, f8, rdn # perform operation
fnmsub.s f2, f5, f6, f8, rmm # perform operation
fnmsub.s f2, f5, f6, f8, rne # perform operation
fnmsub.s f2, f5, f6, f8, rtz # perform operation
fnmsub.s f2, f5, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x42bc99265f3f498c # load x3 with value 0x42bc99265f3f498c
sw x3, 0(x2) # store 0x42bc99265f3f498c in memory
flw f19, 0(x2) # load 0x42bc99265f3f498c from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fnmsub.s f9, f23, f19, f26, dyn # perform operation
fnmsub.s f9, f23, f19, f26, rdn # perform operation
fnmsub.s f9, f23, f19, f26, rmm # perform operation
fnmsub.s f9, f23, f19, f26, rne # perform operation
fnmsub.s f9, f23, f19, f26, rtz # perform operation
fnmsub.s f9, f23, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x347a0d564b24337f # load x3 with value 0x347a0d564b24337f
sw x3, 0(x2) # store 0x347a0d564b24337f in memory
flw f28, 0(x2) # load 0x347a0d564b24337f from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmsub.s f31, f7, f28, f10, dyn # perform operation
fnmsub.s f31, f7, f28, f10, rdn # perform operation
fnmsub.s f31, f7, f28, f10, rmm # perform operation
fnmsub.s f31, f7, f28, f10, rne # perform operation
fnmsub.s f31, f7, f28, f10, rtz # perform operation
fnmsub.s f31, f7, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f7, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xd46e38299260316 # load x3 with value 0xd46e38299260316
sw x3, 0(x2) # store 0xd46e38299260316 in memory
flw f10, 0(x2) # load 0xd46e38299260316 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmsub.s f25, f31, f10, f9, dyn # perform operation
fnmsub.s f25, f31, f10, f9, rdn # perform operation
fnmsub.s f25, f31, f10, f9, rmm # perform operation
fnmsub.s f25, f31, f10, f9, rne # perform operation
fnmsub.s f25, f31, f10, f9, rtz # perform operation
fnmsub.s f25, f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xb53476af8371556b # load x3 with value 0xb53476af8371556b
sw x3, 0(x2) # store 0xb53476af8371556b in memory
flw f30, 0(x2) # load 0xb53476af8371556b from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmsub.s f27, f3, f30, f12, dyn # perform operation
fnmsub.s f27, f3, f30, f12, rdn # perform operation
fnmsub.s f27, f3, f30, f12, rmm # perform operation
fnmsub.s f27, f3, f30, f12, rne # perform operation
fnmsub.s f27, f3, f30, f12, rtz # perform operation
fnmsub.s f27, f3, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x2a7d3ba713edce9b # load x3 with value 0x2a7d3ba713edce9b
sw x3, 0(x2) # store 0x2a7d3ba713edce9b in memory
flw f2, 0(x2) # load 0x2a7d3ba713edce9b from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmsub.s f1, f13, f2, f28, dyn # perform operation
fnmsub.s f1, f13, f2, f28, rdn # perform operation
fnmsub.s f1, f13, f2, f28, rmm # perform operation
fnmsub.s f1, f13, f2, f28, rne # perform operation
fnmsub.s f1, f13, f2, f28, rtz # perform operation
fnmsub.s f1, f13, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f13, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f13, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f13, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f13, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f13, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x913416fbcfbccfab # load x3 with value 0x913416fbcfbccfab
sw x3, 0(x2) # store 0x913416fbcfbccfab in memory
flw f21, 0(x2) # load 0x913416fbcfbccfab from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f29, f30, f21, f8, dyn # perform operation
fnmsub.s f29, f30, f21, f8, rdn # perform operation
fnmsub.s f29, f30, f21, f8, rmm # perform operation
fnmsub.s f29, f30, f21, f8, rne # perform operation
fnmsub.s f29, f30, f21, f8, rtz # perform operation
fnmsub.s f29, f30, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x4506df7b7145004e # load x3 with value 0x4506df7b7145004e
sw x3, 0(x2) # store 0x4506df7b7145004e in memory
flw f26, 0(x2) # load 0x4506df7b7145004e from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f1, f31, f26, f12, dyn # perform operation
fnmsub.s f1, f31, f26, f12, rdn # perform operation
fnmsub.s f1, f31, f26, f12, rmm # perform operation
fnmsub.s f1, f31, f26, f12, rne # perform operation
fnmsub.s f1, f31, f26, f12, rtz # perform operation
fnmsub.s f1, f31, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x6d4804ff40e93fbe # load x3 with value 0x6d4804ff40e93fbe
sw x3, 0(x2) # store 0x6d4804ff40e93fbe in memory
flw f18, 0(x2) # load 0x6d4804ff40e93fbe from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmsub.s f16, f1, f18, f7, dyn # perform operation
fnmsub.s f16, f1, f18, f7, rdn # perform operation
fnmsub.s f16, f1, f18, f7, rmm # perform operation
fnmsub.s f16, f1, f18, f7, rne # perform operation
fnmsub.s f16, f1, f18, f7, rtz # perform operation
fnmsub.s f16, f1, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xb52e49bd69e1db82 # load x3 with value 0xb52e49bd69e1db82
sw x3, 0(x2) # store 0xb52e49bd69e1db82 in memory
flw f17, 0(x2) # load 0xb52e49bd69e1db82 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmsub.s f16, f1, f17, f2, dyn # perform operation
fnmsub.s f16, f1, f17, f2, rdn # perform operation
fnmsub.s f16, f1, f17, f2, rmm # perform operation
fnmsub.s f16, f1, f17, f2, rne # perform operation
fnmsub.s f16, f1, f17, f2, rtz # perform operation
fnmsub.s f16, f1, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xe7520c19ba214efd # load x3 with value 0xe7520c19ba214efd
sw x3, 0(x2) # store 0xe7520c19ba214efd in memory
flw f29, 0(x2) # load 0xe7520c19ba214efd from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f31, f24, f29, f17, dyn # perform operation
fnmsub.s f31, f24, f29, f17, rdn # perform operation
fnmsub.s f31, f24, f29, f17, rmm # perform operation
fnmsub.s f31, f24, f29, f17, rne # perform operation
fnmsub.s f31, f24, f29, f17, rtz # perform operation
fnmsub.s f31, f24, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xb5c615ceeeff5957 # load x3 with value 0xb5c615ceeeff5957
sw x3, 0(x2) # store 0xb5c615ceeeff5957 in memory
flw f2, 0(x2) # load 0xb5c615ceeeff5957 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fnmsub.s f7, f8, f2, f30, dyn # perform operation
fnmsub.s f7, f8, f2, f30, rdn # perform operation
fnmsub.s f7, f8, f2, f30, rmm # perform operation
fnmsub.s f7, f8, f2, f30, rne # perform operation
fnmsub.s f7, f8, f2, f30, rtz # perform operation
fnmsub.s f7, f8, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xb599a3fc27b53138 # load x3 with value 0xb599a3fc27b53138
sw x3, 0(x2) # store 0xb599a3fc27b53138 in memory
flw f15, 0(x2) # load 0xb599a3fc27b53138 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmsub.s f9, f25, f15, f7, dyn # perform operation
fnmsub.s f9, f25, f15, f7, rdn # perform operation
fnmsub.s f9, f25, f15, f7, rmm # perform operation
fnmsub.s f9, f25, f15, f7, rne # perform operation
fnmsub.s f9, f25, f15, f7, rtz # perform operation
fnmsub.s f9, f25, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x9fe17d61485b2e09 # load x3 with value 0x9fe17d61485b2e09
sw x3, 0(x2) # store 0x9fe17d61485b2e09 in memory
flw f20, 0(x2) # load 0x9fe17d61485b2e09 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmsub.s f25, f8, f20, f15, dyn # perform operation
fnmsub.s f25, f8, f20, f15, rdn # perform operation
fnmsub.s f25, f8, f20, f15, rmm # perform operation
fnmsub.s f25, f8, f20, f15, rne # perform operation
fnmsub.s f25, f8, f20, f15, rtz # perform operation
fnmsub.s f25, f8, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f8, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x91ba1f4a91dfbd1d # load x3 with value 0x91ba1f4a91dfbd1d
sw x3, 0(x2) # store 0x91ba1f4a91dfbd1d in memory
flw f18, 0(x2) # load 0x91ba1f4a91dfbd1d from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmsub.s f15, f29, f18, f28, dyn # perform operation
fnmsub.s f15, f29, f18, f28, rdn # perform operation
fnmsub.s f15, f29, f18, f28, rmm # perform operation
fnmsub.s f15, f29, f18, f28, rne # perform operation
fnmsub.s f15, f29, f18, f28, rtz # perform operation
fnmsub.s f15, f29, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xb51130a7b24ab121 # load x3 with value 0xb51130a7b24ab121
sw x3, 0(x2) # store 0xb51130a7b24ab121 in memory
flw f21, 0(x2) # load 0xb51130a7b24ab121 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmsub.s f23, f31, f21, f12, dyn # perform operation
fnmsub.s f23, f31, f21, f12, rdn # perform operation
fnmsub.s f23, f31, f21, f12, rmm # perform operation
fnmsub.s f23, f31, f21, f12, rne # perform operation
fnmsub.s f23, f31, f21, f12, rtz # perform operation
fnmsub.s f23, f31, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f31, f21, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x9a2b26abbbea2e4e # load x3 with value 0x9a2b26abbbea2e4e
sw x3, 0(x2) # store 0x9a2b26abbbea2e4e in memory
flw f3, 0(x2) # load 0x9a2b26abbbea2e4e from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmsub.s f9, f11, f3, f14, dyn # perform operation
fnmsub.s f9, f11, f3, f14, rdn # perform operation
fnmsub.s f9, f11, f3, f14, rmm # perform operation
fnmsub.s f9, f11, f3, f14, rne # perform operation
fnmsub.s f9, f11, f3, f14, rtz # perform operation
fnmsub.s f9, f11, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f11, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f11, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x30f46cf78b239f21 # load x3 with value 0x30f46cf78b239f21
sw x3, 0(x2) # store 0x30f46cf78b239f21 in memory
flw f22, 0(x2) # load 0x30f46cf78b239f21 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fnmsub.s f16, f14, f22, f12, dyn # perform operation
fnmsub.s f16, f14, f22, f12, rdn # perform operation
fnmsub.s f16, f14, f22, f12, rmm # perform operation
fnmsub.s f16, f14, f22, f12, rne # perform operation
fnmsub.s f16, f14, f22, f12, rtz # perform operation
fnmsub.s f16, f14, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xf8e867cb8e42a5c1 # load x3 with value 0xf8e867cb8e42a5c1
sw x3, 0(x2) # store 0xf8e867cb8e42a5c1 in memory
flw f23, 0(x2) # load 0xf8e867cb8e42a5c1 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fnmsub.s f25, f31, f23, f6, dyn # perform operation
fnmsub.s f25, f31, f23, f6, rdn # perform operation
fnmsub.s f25, f31, f23, f6, rmm # perform operation
fnmsub.s f25, f31, f23, f6, rne # perform operation
fnmsub.s f25, f31, f23, f6, rtz # perform operation
fnmsub.s f25, f31, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xe09fbdf62949d107 # load x3 with value 0xe09fbdf62949d107
sw x3, 0(x2) # store 0xe09fbdf62949d107 in memory
flw f9, 0(x2) # load 0xe09fbdf62949d107 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmsub.s f22, f17, f9, f18, dyn # perform operation
fnmsub.s f22, f17, f9, f18, rdn # perform operation
fnmsub.s f22, f17, f9, f18, rmm # perform operation
fnmsub.s f22, f17, f9, f18, rne # perform operation
fnmsub.s f22, f17, f9, f18, rtz # perform operation
fnmsub.s f22, f17, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x9e911ee4255ec53b # load x3 with value 0x9e911ee4255ec53b
sw x3, 0(x2) # store 0x9e911ee4255ec53b in memory
flw f28, 0(x2) # load 0x9e911ee4255ec53b from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmsub.s f6, f17, f28, f8, dyn # perform operation
fnmsub.s f6, f17, f28, f8, rdn # perform operation
fnmsub.s f6, f17, f28, f8, rmm # perform operation
fnmsub.s f6, f17, f28, f8, rne # perform operation
fnmsub.s f6, f17, f28, f8, rtz # perform operation
fnmsub.s f6, f17, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x6171a56b0ec63156 # load x3 with value 0x6171a56b0ec63156
sw x3, 0(x2) # store 0x6171a56b0ec63156 in memory
flw f21, 0(x2) # load 0x6171a56b0ec63156 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fnmsub.s f16, f27, f21, f11, dyn # perform operation
fnmsub.s f16, f27, f21, f11, rdn # perform operation
fnmsub.s f16, f27, f21, f11, rmm # perform operation
fnmsub.s f16, f27, f21, f11, rne # perform operation
fnmsub.s f16, f27, f21, f11, rtz # perform operation
fnmsub.s f16, f27, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x91fb2c613f124361 # load x3 with value 0x91fb2c613f124361
sw x3, 0(x2) # store 0x91fb2c613f124361 in memory
flw f13, 0(x2) # load 0x91fb2c613f124361 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmsub.s f15, f19, f13, f21, dyn # perform operation
fnmsub.s f15, f19, f13, f21, rdn # perform operation
fnmsub.s f15, f19, f13, f21, rmm # perform operation
fnmsub.s f15, f19, f13, f21, rne # perform operation
fnmsub.s f15, f19, f13, f21, rtz # perform operation
fnmsub.s f15, f19, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x58fa8dd2bff9bc39 # load x3 with value 0x58fa8dd2bff9bc39
sw x3, 0(x2) # store 0x58fa8dd2bff9bc39 in memory
flw f16, 0(x2) # load 0x58fa8dd2bff9bc39 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmsub.s f26, f28, f16, f8, dyn # perform operation
fnmsub.s f26, f28, f16, f8, rdn # perform operation
fnmsub.s f26, f28, f16, f8, rmm # perform operation
fnmsub.s f26, f28, f16, f8, rne # perform operation
fnmsub.s f26, f28, f16, f8, rtz # perform operation
fnmsub.s f26, f28, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xafaaf4f998851402 # load x3 with value 0xafaaf4f998851402
sw x3, 0(x2) # store 0xafaaf4f998851402 in memory
flw f20, 0(x2) # load 0xafaaf4f998851402 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmsub.s f3, f31, f20, f19, dyn # perform operation
fnmsub.s f3, f31, f20, f19, rdn # perform operation
fnmsub.s f3, f31, f20, f19, rmm # perform operation
fnmsub.s f3, f31, f20, f19, rne # perform operation
fnmsub.s f3, f31, f20, f19, rtz # perform operation
fnmsub.s f3, f31, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x7e27f8c44cf2a1be # load x3 with value 0x7e27f8c44cf2a1be
sw x3, 0(x2) # store 0x7e27f8c44cf2a1be in memory
flw f13, 0(x2) # load 0x7e27f8c44cf2a1be from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmsub.s f7, f19, f13, f30, dyn # perform operation
fnmsub.s f7, f19, f13, f30, rdn # perform operation
fnmsub.s f7, f19, f13, f30, rmm # perform operation
fnmsub.s f7, f19, f13, f30, rne # perform operation
fnmsub.s f7, f19, f13, f30, rtz # perform operation
fnmsub.s f7, f19, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x662851915c3e9be4 # load x3 with value 0x662851915c3e9be4
sw x3, 0(x2) # store 0x662851915c3e9be4 in memory
flw f31, 0(x2) # load 0x662851915c3e9be4 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f16, f3, f31, f28, dyn # perform operation
fnmsub.s f16, f3, f31, f28, rdn # perform operation
fnmsub.s f16, f3, f31, f28, rmm # perform operation
fnmsub.s f16, f3, f31, f28, rne # perform operation
fnmsub.s f16, f3, f31, f28, rtz # perform operation
fnmsub.s f16, f3, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f3, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xc34e3b52048183bf # load x3 with value 0xc34e3b52048183bf
sw x3, 0(x2) # store 0xc34e3b52048183bf in memory
flw f31, 0(x2) # load 0xc34e3b52048183bf from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fnmsub.s f17, f11, f31, f20, dyn # perform operation
fnmsub.s f17, f11, f31, f20, rdn # perform operation
fnmsub.s f17, f11, f31, f20, rmm # perform operation
fnmsub.s f17, f11, f31, f20, rne # perform operation
fnmsub.s f17, f11, f31, f20, rtz # perform operation
fnmsub.s f17, f11, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xbe9c658e0b8346a7 # load x3 with value 0xbe9c658e0b8346a7
sw x3, 0(x2) # store 0xbe9c658e0b8346a7 in memory
flw f20, 0(x2) # load 0xbe9c658e0b8346a7 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f2, f27, f20, f13, dyn # perform operation
fnmsub.s f2, f27, f20, f13, rdn # perform operation
fnmsub.s f2, f27, f20, f13, rmm # perform operation
fnmsub.s f2, f27, f20, f13, rne # perform operation
fnmsub.s f2, f27, f20, f13, rtz # perform operation
fnmsub.s f2, f27, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x31afc2a73d9fc155 # load x3 with value 0x31afc2a73d9fc155
sw x3, 0(x2) # store 0x31afc2a73d9fc155 in memory
flw f27, 0(x2) # load 0x31afc2a73d9fc155 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f30, f3, f27, f18, dyn # perform operation
fnmsub.s f30, f3, f27, f18, rdn # perform operation
fnmsub.s f30, f3, f27, f18, rmm # perform operation
fnmsub.s f30, f3, f27, f18, rne # perform operation
fnmsub.s f30, f3, f27, f18, rtz # perform operation
fnmsub.s f30, f3, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x5a5dbff478bcbe78 # load x3 with value 0x5a5dbff478bcbe78
sw x3, 0(x2) # store 0x5a5dbff478bcbe78 in memory
flw f1, 0(x2) # load 0x5a5dbff478bcbe78 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmsub.s f5, f23, f1, f16, dyn # perform operation
fnmsub.s f5, f23, f1, f16, rdn # perform operation
fnmsub.s f5, f23, f1, f16, rmm # perform operation
fnmsub.s f5, f23, f1, f16, rne # perform operation
fnmsub.s f5, f23, f1, f16, rtz # perform operation
fnmsub.s f5, f23, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f23, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f23, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f23, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f23, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f23, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xb6b36c79499cec8a # load x3 with value 0xb6b36c79499cec8a
sw x3, 0(x2) # store 0xb6b36c79499cec8a in memory
flw f5, 0(x2) # load 0xb6b36c79499cec8a from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmsub.s f29, f27, f5, f23, dyn # perform operation
fnmsub.s f29, f27, f5, f23, rdn # perform operation
fnmsub.s f29, f27, f5, f23, rmm # perform operation
fnmsub.s f29, f27, f5, f23, rne # perform operation
fnmsub.s f29, f27, f5, f23, rtz # perform operation
fnmsub.s f29, f27, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xe58388286832b02a # load x3 with value 0xe58388286832b02a
sw x3, 0(x2) # store 0xe58388286832b02a in memory
flw f30, 0(x2) # load 0xe58388286832b02a from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmsub.s f24, f26, f30, f18, dyn # perform operation
fnmsub.s f24, f26, f30, f18, rdn # perform operation
fnmsub.s f24, f26, f30, f18, rmm # perform operation
fnmsub.s f24, f26, f30, f18, rne # perform operation
fnmsub.s f24, f26, f30, f18, rtz # perform operation
fnmsub.s f24, f26, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f26, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xdf1f2222123de792 # load x3 with value 0xdf1f2222123de792
sw x3, 0(x2) # store 0xdf1f2222123de792 in memory
flw f15, 0(x2) # load 0xdf1f2222123de792 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f20, f23, f15, f9, dyn # perform operation
fnmsub.s f20, f23, f15, f9, rdn # perform operation
fnmsub.s f20, f23, f15, f9, rmm # perform operation
fnmsub.s f20, f23, f15, f9, rne # perform operation
fnmsub.s f20, f23, f15, f9, rtz # perform operation
fnmsub.s f20, f23, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x20133cee01bbc83a # load x3 with value 0x20133cee01bbc83a
sw x3, 0(x2) # store 0x20133cee01bbc83a in memory
flw f2, 0(x2) # load 0x20133cee01bbc83a from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fnmsub.s f27, f28, f2, f3, dyn # perform operation
fnmsub.s f27, f28, f2, f3, rdn # perform operation
fnmsub.s f27, f28, f2, f3, rmm # perform operation
fnmsub.s f27, f28, f2, f3, rne # perform operation
fnmsub.s f27, f28, f2, f3, rtz # perform operation
fnmsub.s f27, f28, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xb7d9c3a57a28e983 # load x3 with value 0xb7d9c3a57a28e983
sw x3, 0(x2) # store 0xb7d9c3a57a28e983 in memory
flw f12, 0(x2) # load 0xb7d9c3a57a28e983 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f8, f3, f12, f28, dyn # perform operation
fnmsub.s f8, f3, f12, f28, rdn # perform operation
fnmsub.s f8, f3, f12, f28, rmm # perform operation
fnmsub.s f8, f3, f12, f28, rne # perform operation
fnmsub.s f8, f3, f12, f28, rtz # perform operation
fnmsub.s f8, f3, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f3, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x3782ee0be4162ae7 # load x3 with value 0x3782ee0be4162ae7
sw x3, 0(x2) # store 0x3782ee0be4162ae7 in memory
flw f8, 0(x2) # load 0x3782ee0be4162ae7 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmsub.s f21, f31, f8, f11, dyn # perform operation
fnmsub.s f21, f31, f8, f11, rdn # perform operation
fnmsub.s f21, f31, f8, f11, rmm # perform operation
fnmsub.s f21, f31, f8, f11, rne # perform operation
fnmsub.s f21, f31, f8, f11, rtz # perform operation
fnmsub.s f21, f31, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f31, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x4f2ada974c651a50 # load x3 with value 0x4f2ada974c651a50
sw x3, 0(x2) # store 0x4f2ada974c651a50 in memory
flw f24, 0(x2) # load 0x4f2ada974c651a50 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmsub.s f20, f23, f24, f28, dyn # perform operation
fnmsub.s f20, f23, f24, f28, rdn # perform operation
fnmsub.s f20, f23, f24, f28, rmm # perform operation
fnmsub.s f20, f23, f24, f28, rne # perform operation
fnmsub.s f20, f23, f24, f28, rtz # perform operation
fnmsub.s f20, f23, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x166ae57e0cb9d658 # load x3 with value 0x166ae57e0cb9d658
sw x3, 0(x2) # store 0x166ae57e0cb9d658 in memory
flw f27, 0(x2) # load 0x166ae57e0cb9d658 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f18, f12, f27, f24, dyn # perform operation
fnmsub.s f18, f12, f27, f24, rdn # perform operation
fnmsub.s f18, f12, f27, f24, rmm # perform operation
fnmsub.s f18, f12, f27, f24, rne # perform operation
fnmsub.s f18, f12, f27, f24, rtz # perform operation
fnmsub.s f18, f12, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xc13efa4f814f91f8 # load x3 with value 0xc13efa4f814f91f8
sw x3, 0(x2) # store 0xc13efa4f814f91f8 in memory
flw f10, 0(x2) # load 0xc13efa4f814f91f8 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmsub.s f15, f23, f10, f25, dyn # perform operation
fnmsub.s f15, f23, f10, f25, rdn # perform operation
fnmsub.s f15, f23, f10, f25, rmm # perform operation
fnmsub.s f15, f23, f10, f25, rne # perform operation
fnmsub.s f15, f23, f10, f25, rtz # perform operation
fnmsub.s f15, f23, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x46348ef6f28ac3b4 # load x3 with value 0x46348ef6f28ac3b4
sw x3, 0(x2) # store 0x46348ef6f28ac3b4 in memory
flw f29, 0(x2) # load 0x46348ef6f28ac3b4 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f31, f12, f29, f9, dyn # perform operation
fnmsub.s f31, f12, f29, f9, rdn # perform operation
fnmsub.s f31, f12, f29, f9, rmm # perform operation
fnmsub.s f31, f12, f29, f9, rne # perform operation
fnmsub.s f31, f12, f29, f9, rtz # perform operation
fnmsub.s f31, f12, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f12, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f12, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f12, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f12, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f12, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x2288471121ea0628 # load x3 with value 0x2288471121ea0628
sw x3, 0(x2) # store 0x2288471121ea0628 in memory
flw f26, 0(x2) # load 0x2288471121ea0628 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmsub.s f15, f6, f26, f5, dyn # perform operation
fnmsub.s f15, f6, f26, f5, rdn # perform operation
fnmsub.s f15, f6, f26, f5, rmm # perform operation
fnmsub.s f15, f6, f26, f5, rne # perform operation
fnmsub.s f15, f6, f26, f5, rtz # perform operation
fnmsub.s f15, f6, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x647e64d44a2792ee # load x3 with value 0x647e64d44a2792ee
sw x3, 0(x2) # store 0x647e64d44a2792ee in memory
flw f5, 0(x2) # load 0x647e64d44a2792ee from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f29, f2, f5, f1, dyn # perform operation
fnmsub.s f29, f2, f5, f1, rdn # perform operation
fnmsub.s f29, f2, f5, f1, rmm # perform operation
fnmsub.s f29, f2, f5, f1, rne # perform operation
fnmsub.s f29, f2, f5, f1, rtz # perform operation
fnmsub.s f29, f2, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xc3a3cf31364cfd97 # load x3 with value 0xc3a3cf31364cfd97
sw x3, 0(x2) # store 0xc3a3cf31364cfd97 in memory
flw f9, 0(x2) # load 0xc3a3cf31364cfd97 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f2, f19, f9, f22, dyn # perform operation
fnmsub.s f2, f19, f9, f22, rdn # perform operation
fnmsub.s f2, f19, f9, f22, rmm # perform operation
fnmsub.s f2, f19, f9, f22, rne # perform operation
fnmsub.s f2, f19, f9, f22, rtz # perform operation
fnmsub.s f2, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f9, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x407c7056c63b8030 # load x3 with value 0x407c7056c63b8030
sw x3, 0(x2) # store 0x407c7056c63b8030 in memory
flw f28, 0(x2) # load 0x407c7056c63b8030 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fnmsub.s f22, f7, f28, f10, dyn # perform operation
fnmsub.s f22, f7, f28, f10, rdn # perform operation
fnmsub.s f22, f7, f28, f10, rmm # perform operation
fnmsub.s f22, f7, f28, f10, rne # perform operation
fnmsub.s f22, f7, f28, f10, rtz # perform operation
fnmsub.s f22, f7, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xe73a38d7f444a2d # load x3 with value 0xe73a38d7f444a2d
sw x3, 0(x2) # store 0xe73a38d7f444a2d in memory
flw f24, 0(x2) # load 0xe73a38d7f444a2d from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f22, f21, f24, f1, dyn # perform operation
fnmsub.s f22, f21, f24, f1, rdn # perform operation
fnmsub.s f22, f21, f24, f1, rmm # perform operation
fnmsub.s f22, f21, f24, f1, rne # perform operation
fnmsub.s f22, f21, f24, f1, rtz # perform operation
fnmsub.s f22, f21, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xe553ed1a12ba8407 # load x3 with value 0xe553ed1a12ba8407
sw x3, 0(x2) # store 0xe553ed1a12ba8407 in memory
flw f9, 0(x2) # load 0xe553ed1a12ba8407 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fnmsub.s f3, f26, f9, f6, dyn # perform operation
fnmsub.s f3, f26, f9, f6, rdn # perform operation
fnmsub.s f3, f26, f9, f6, rmm # perform operation
fnmsub.s f3, f26, f9, f6, rne # perform operation
fnmsub.s f3, f26, f9, f6, rtz # perform operation
fnmsub.s f3, f26, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x557dfa600c4bf42a # load x3 with value 0x557dfa600c4bf42a
sw x3, 0(x2) # store 0x557dfa600c4bf42a in memory
flw f2, 0(x2) # load 0x557dfa600c4bf42a from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f17, f27, f2, f13, dyn # perform operation
fnmsub.s f17, f27, f2, f13, rdn # perform operation
fnmsub.s f17, f27, f2, f13, rmm # perform operation
fnmsub.s f17, f27, f2, f13, rne # perform operation
fnmsub.s f17, f27, f2, f13, rtz # perform operation
fnmsub.s f17, f27, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x551ce9b4f6996fe # load x3 with value 0x551ce9b4f6996fe
sw x3, 0(x2) # store 0x551ce9b4f6996fe in memory
flw f12, 0(x2) # load 0x551ce9b4f6996fe from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f30, f27, f12, f17, dyn # perform operation
fnmsub.s f30, f27, f12, f17, rdn # perform operation
fnmsub.s f30, f27, f12, f17, rmm # perform operation
fnmsub.s f30, f27, f12, f17, rne # perform operation
fnmsub.s f30, f27, f12, f17, rtz # perform operation
fnmsub.s f30, f27, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f27, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x643deaa2823874d7 # load x3 with value 0x643deaa2823874d7
sw x3, 0(x2) # store 0x643deaa2823874d7 in memory
flw f16, 0(x2) # load 0x643deaa2823874d7 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmsub.s f3, f29, f16, f20, dyn # perform operation
fnmsub.s f3, f29, f16, f20, rdn # perform operation
fnmsub.s f3, f29, f16, f20, rmm # perform operation
fnmsub.s f3, f29, f16, f20, rne # perform operation
fnmsub.s f3, f29, f16, f20, rtz # perform operation
fnmsub.s f3, f29, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x165eaed028399c7a # load x3 with value 0x165eaed028399c7a
sw x3, 0(x2) # store 0x165eaed028399c7a in memory
flw f31, 0(x2) # load 0x165eaed028399c7a from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fnmsub.s f8, f1, f31, f20, dyn # perform operation
fnmsub.s f8, f1, f31, f20, rdn # perform operation
fnmsub.s f8, f1, f31, f20, rmm # perform operation
fnmsub.s f8, f1, f31, f20, rne # perform operation
fnmsub.s f8, f1, f31, f20, rtz # perform operation
fnmsub.s f8, f1, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x5f24619d863db23f # load x3 with value 0x5f24619d863db23f
sw x3, 0(x2) # store 0x5f24619d863db23f in memory
flw f16, 0(x2) # load 0x5f24619d863db23f from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmsub.s f6, f29, f16, f26, dyn # perform operation
fnmsub.s f6, f29, f16, f26, rdn # perform operation
fnmsub.s f6, f29, f16, f26, rmm # perform operation
fnmsub.s f6, f29, f16, f26, rne # perform operation
fnmsub.s f6, f29, f16, f26, rtz # perform operation
fnmsub.s f6, f29, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x6b776c558fa05525 # load x3 with value 0x6b776c558fa05525
sw x3, 0(x2) # store 0x6b776c558fa05525 in memory
flw f28, 0(x2) # load 0x6b776c558fa05525 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmsub.s f30, f20, f28, f31, dyn # perform operation
fnmsub.s f30, f20, f28, f31, rdn # perform operation
fnmsub.s f30, f20, f28, f31, rmm # perform operation
fnmsub.s f30, f20, f28, f31, rne # perform operation
fnmsub.s f30, f20, f28, f31, rtz # perform operation
fnmsub.s f30, f20, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x1583a93cd4e20443 # load x3 with value 0x1583a93cd4e20443
sw x3, 0(x2) # store 0x1583a93cd4e20443 in memory
flw f13, 0(x2) # load 0x1583a93cd4e20443 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f27, f21, f13, f11, dyn # perform operation
fnmsub.s f27, f21, f13, f11, rdn # perform operation
fnmsub.s f27, f21, f13, f11, rmm # perform operation
fnmsub.s f27, f21, f13, f11, rne # perform operation
fnmsub.s f27, f21, f13, f11, rtz # perform operation
fnmsub.s f27, f21, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f13, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xb4deac794359111b # load x3 with value 0xb4deac794359111b
sw x3, 0(x2) # store 0xb4deac794359111b in memory
flw f5, 0(x2) # load 0xb4deac794359111b from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmsub.s f1, f20, f5, f26, dyn # perform operation
fnmsub.s f1, f20, f5, f26, rdn # perform operation
fnmsub.s f1, f20, f5, f26, rmm # perform operation
fnmsub.s f1, f20, f5, f26, rne # perform operation
fnmsub.s f1, f20, f5, f26, rtz # perform operation
fnmsub.s f1, f20, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x514d173a5ce07e4c # load x3 with value 0x514d173a5ce07e4c
sw x3, 0(x2) # store 0x514d173a5ce07e4c in memory
flw f23, 0(x2) # load 0x514d173a5ce07e4c from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmsub.s f26, f16, f23, f17, dyn # perform operation
fnmsub.s f26, f16, f23, f17, rdn # perform operation
fnmsub.s f26, f16, f23, f17, rmm # perform operation
fnmsub.s f26, f16, f23, f17, rne # perform operation
fnmsub.s f26, f16, f23, f17, rtz # perform operation
fnmsub.s f26, f16, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f16, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x9f045d6f3dafa048 # load x3 with value 0x9f045d6f3dafa048
sw x3, 0(x2) # store 0x9f045d6f3dafa048 in memory
flw f7, 0(x2) # load 0x9f045d6f3dafa048 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmsub.s f26, f20, f7, f23, dyn # perform operation
fnmsub.s f26, f20, f7, f23, rdn # perform operation
fnmsub.s f26, f20, f7, f23, rmm # perform operation
fnmsub.s f26, f20, f7, f23, rne # perform operation
fnmsub.s f26, f20, f7, f23, rtz # perform operation
fnmsub.s f26, f20, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x2b60fdd914c0a3 # load x3 with value 0x2b60fdd914c0a3
sw x3, 0(x2) # store 0x2b60fdd914c0a3 in memory
flw f9, 0(x2) # load 0x2b60fdd914c0a3 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmsub.s f20, f1, f9, f29, dyn # perform operation
fnmsub.s f20, f1, f9, f29, rdn # perform operation
fnmsub.s f20, f1, f9, f29, rmm # perform operation
fnmsub.s f20, f1, f9, f29, rne # perform operation
fnmsub.s f20, f1, f9, f29, rtz # perform operation
fnmsub.s f20, f1, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f1, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f1, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f1, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f1, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f1, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xa7a4ad3f3f489a27 # load x3 with value 0xa7a4ad3f3f489a27
sw x3, 0(x2) # store 0xa7a4ad3f3f489a27 in memory
flw f1, 0(x2) # load 0xa7a4ad3f3f489a27 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmsub.s f23, f13, f1, f8, dyn # perform operation
fnmsub.s f23, f13, f1, f8, rdn # perform operation
fnmsub.s f23, f13, f1, f8, rmm # perform operation
fnmsub.s f23, f13, f1, f8, rne # perform operation
fnmsub.s f23, f13, f1, f8, rtz # perform operation
fnmsub.s f23, f13, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x8f8c0fb86ba55b29 # load x3 with value 0x8f8c0fb86ba55b29
sw x3, 0(x2) # store 0x8f8c0fb86ba55b29 in memory
flw f29, 0(x2) # load 0x8f8c0fb86ba55b29 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmsub.s f19, f18, f29, f20, dyn # perform operation
fnmsub.s f19, f18, f29, f20, rdn # perform operation
fnmsub.s f19, f18, f29, f20, rmm # perform operation
fnmsub.s f19, f18, f29, f20, rne # perform operation
fnmsub.s f19, f18, f29, f20, rtz # perform operation
fnmsub.s f19, f18, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xf0df81816f0cc2ff # load x3 with value 0xf0df81816f0cc2ff
sw x3, 0(x2) # store 0xf0df81816f0cc2ff in memory
flw f16, 0(x2) # load 0xf0df81816f0cc2ff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmsub.s f21, f7, f16, f12, dyn # perform operation
fnmsub.s f21, f7, f16, f12, rdn # perform operation
fnmsub.s f21, f7, f16, f12, rmm # perform operation
fnmsub.s f21, f7, f16, f12, rne # perform operation
fnmsub.s f21, f7, f16, f12, rtz # perform operation
fnmsub.s f21, f7, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x79677b84988cc994 # load x3 with value 0x79677b84988cc994
sw x3, 0(x2) # store 0x79677b84988cc994 in memory
flw f20, 0(x2) # load 0x79677b84988cc994 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fnmsub.s f7, f16, f20, f23, dyn # perform operation
fnmsub.s f7, f16, f20, f23, rdn # perform operation
fnmsub.s f7, f16, f20, f23, rmm # perform operation
fnmsub.s f7, f16, f20, f23, rne # perform operation
fnmsub.s f7, f16, f20, f23, rtz # perform operation
fnmsub.s f7, f16, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x43ec07dc2c2f1f4a # load x3 with value 0x43ec07dc2c2f1f4a
sw x3, 0(x2) # store 0x43ec07dc2c2f1f4a in memory
flw f31, 0(x2) # load 0x43ec07dc2c2f1f4a from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f22, f29, f31, f8, dyn # perform operation
fnmsub.s f22, f29, f31, f8, rdn # perform operation
fnmsub.s f22, f29, f31, f8, rmm # perform operation
fnmsub.s f22, f29, f31, f8, rne # perform operation
fnmsub.s f22, f29, f31, f8, rtz # perform operation
fnmsub.s f22, f29, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xce84feac67031765 # load x3 with value 0xce84feac67031765
sw x3, 0(x2) # store 0xce84feac67031765 in memory
flw f26, 0(x2) # load 0xce84feac67031765 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f9, f2, f26, f12, dyn # perform operation
fnmsub.s f9, f2, f26, f12, rdn # perform operation
fnmsub.s f9, f2, f26, f12, rmm # perform operation
fnmsub.s f9, f2, f26, f12, rne # perform operation
fnmsub.s f9, f2, f26, f12, rtz # perform operation
fnmsub.s f9, f2, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x5a61c9ae923d9645 # load x3 with value 0x5a61c9ae923d9645
sw x3, 0(x2) # store 0x5a61c9ae923d9645 in memory
flw f26, 0(x2) # load 0x5a61c9ae923d9645 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fnmsub.s f24, f10, f26, f16, dyn # perform operation
fnmsub.s f24, f10, f26, f16, rdn # perform operation
fnmsub.s f24, f10, f26, f16, rmm # perform operation
fnmsub.s f24, f10, f26, f16, rne # perform operation
fnmsub.s f24, f10, f26, f16, rtz # perform operation
fnmsub.s f24, f10, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0xd53dc1188b4a675b # load x3 with value 0xd53dc1188b4a675b
sw x3, 0(x2) # store 0xd53dc1188b4a675b in memory
flw f9, 0(x2) # load 0xd53dc1188b4a675b from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmsub.s f8, f15, f9, f11, dyn # perform operation
fnmsub.s f8, f15, f9, f11, rdn # perform operation
fnmsub.s f8, f15, f9, f11, rmm # perform operation
fnmsub.s f8, f15, f9, f11, rne # perform operation
fnmsub.s f8, f15, f9, f11, rtz # perform operation
fnmsub.s f8, f15, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f9, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x8dc4d320dc67db97 # load x3 with value 0x8dc4d320dc67db97
sw x3, 0(x2) # store 0x8dc4d320dc67db97 in memory
flw f6, 0(x2) # load 0x8dc4d320dc67db97 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f3, f21, f6, f9, dyn # perform operation
fnmsub.s f3, f21, f6, f9, rdn # perform operation
fnmsub.s f3, f21, f6, f9, rmm # perform operation
fnmsub.s f3, f21, f6, f9, rne # perform operation
fnmsub.s f3, f21, f6, f9, rtz # perform operation
fnmsub.s f3, f21, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xa8092b95cd205f5 # load x3 with value 0xa8092b95cd205f5
sw x3, 0(x2) # store 0xa8092b95cd205f5 in memory
flw f16, 0(x2) # load 0xa8092b95cd205f5 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmsub.s f25, f27, f16, f28, dyn # perform operation
fnmsub.s f25, f27, f16, f28, rdn # perform operation
fnmsub.s f25, f27, f16, f28, rmm # perform operation
fnmsub.s f25, f27, f16, f28, rne # perform operation
fnmsub.s f25, f27, f16, f28, rtz # perform operation
fnmsub.s f25, f27, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x5de7cdc95db5c905 # load x3 with value 0x5de7cdc95db5c905
sw x3, 0(x2) # store 0x5de7cdc95db5c905 in memory
flw f31, 0(x2) # load 0x5de7cdc95db5c905 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmsub.s f11, f17, f31, f14, dyn # perform operation
fnmsub.s f11, f17, f31, f14, rdn # perform operation
fnmsub.s f11, f17, f31, f14, rmm # perform operation
fnmsub.s f11, f17, f31, f14, rne # perform operation
fnmsub.s f11, f17, f31, f14, rtz # perform operation
fnmsub.s f11, f17, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x78b42ecc6f8862da # load x3 with value 0x78b42ecc6f8862da
sw x3, 0(x2) # store 0x78b42ecc6f8862da in memory
flw f20, 0(x2) # load 0x78b42ecc6f8862da from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmsub.s f2, f7, f20, f13, dyn # perform operation
fnmsub.s f2, f7, f20, f13, rdn # perform operation
fnmsub.s f2, f7, f20, f13, rmm # perform operation
fnmsub.s f2, f7, f20, f13, rne # perform operation
fnmsub.s f2, f7, f20, f13, rtz # perform operation
fnmsub.s f2, f7, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x8bec75a14ba02a48 # load x3 with value 0x8bec75a14ba02a48
sw x3, 0(x2) # store 0x8bec75a14ba02a48 in memory
flw f22, 0(x2) # load 0x8bec75a14ba02a48 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmsub.s f21, f17, f22, f18, dyn # perform operation
fnmsub.s f21, f17, f22, f18, rdn # perform operation
fnmsub.s f21, f17, f22, f18, rmm # perform operation
fnmsub.s f21, f17, f22, f18, rne # perform operation
fnmsub.s f21, f17, f22, f18, rtz # perform operation
fnmsub.s f21, f17, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f17, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f17, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f17, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f17, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f17, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x9a9f84cb671498a # load x3 with value 0x9a9f84cb671498a
sw x3, 0(x2) # store 0x9a9f84cb671498a in memory
flw f8, 0(x2) # load 0x9a9f84cb671498a from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmsub.s f18, f1, f8, f25, dyn # perform operation
fnmsub.s f18, f1, f8, f25, rdn # perform operation
fnmsub.s f18, f1, f8, f25, rmm # perform operation
fnmsub.s f18, f1, f8, f25, rne # perform operation
fnmsub.s f18, f1, f8, f25, rtz # perform operation
fnmsub.s f18, f1, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xc7f621a12e46f7e # load x3 with value 0xc7f621a12e46f7e
sw x3, 0(x2) # store 0xc7f621a12e46f7e in memory
flw f14, 0(x2) # load 0xc7f621a12e46f7e from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fnmsub.s f26, f24, f14, f12, dyn # perform operation
fnmsub.s f26, f24, f14, f12, rdn # perform operation
fnmsub.s f26, f24, f14, f12, rmm # perform operation
fnmsub.s f26, f24, f14, f12, rne # perform operation
fnmsub.s f26, f24, f14, f12, rtz # perform operation
fnmsub.s f26, f24, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xb6a58bd5d204ee2f # load x3 with value 0xb6a58bd5d204ee2f
sw x3, 0(x2) # store 0xb6a58bd5d204ee2f in memory
flw f23, 0(x2) # load 0xb6a58bd5d204ee2f from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fnmsub.s f6, f30, f23, f22, dyn # perform operation
fnmsub.s f6, f30, f23, f22, rdn # perform operation
fnmsub.s f6, f30, f23, f22, rmm # perform operation
fnmsub.s f6, f30, f23, f22, rne # perform operation
fnmsub.s f6, f30, f23, f22, rtz # perform operation
fnmsub.s f6, f30, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xeb147f921f99a56d # load x3 with value 0xeb147f921f99a56d
sw x3, 0(x2) # store 0xeb147f921f99a56d in memory
flw f21, 0(x2) # load 0xeb147f921f99a56d from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmsub.s f7, f20, f21, f8, dyn # perform operation
fnmsub.s f7, f20, f21, f8, rdn # perform operation
fnmsub.s f7, f20, f21, f8, rmm # perform operation
fnmsub.s f7, f20, f21, f8, rne # perform operation
fnmsub.s f7, f20, f21, f8, rtz # perform operation
fnmsub.s f7, f20, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xa77d073f73fe032 # load x3 with value 0xa77d073f73fe032
sw x3, 0(x2) # store 0xa77d073f73fe032 in memory
flw f28, 0(x2) # load 0xa77d073f73fe032 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmsub.s f15, f12, f28, f26, dyn # perform operation
fnmsub.s f15, f12, f28, f26, rdn # perform operation
fnmsub.s f15, f12, f28, f26, rmm # perform operation
fnmsub.s f15, f12, f28, f26, rne # perform operation
fnmsub.s f15, f12, f28, f26, rtz # perform operation
fnmsub.s f15, f12, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x4879efff479aa884 # load x3 with value 0x4879efff479aa884
sw x3, 0(x2) # store 0x4879efff479aa884 in memory
flw f29, 0(x2) # load 0x4879efff479aa884 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f31, f23, f29, f1, dyn # perform operation
fnmsub.s f31, f23, f29, f1, rdn # perform operation
fnmsub.s f31, f23, f29, f1, rmm # perform operation
fnmsub.s f31, f23, f29, f1, rne # perform operation
fnmsub.s f31, f23, f29, f1, rtz # perform operation
fnmsub.s f31, f23, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xfc970b813bb4d02e # load x3 with value 0xfc970b813bb4d02e
sw x3, 0(x2) # store 0xfc970b813bb4d02e in memory
flw f31, 0(x2) # load 0xfc970b813bb4d02e from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmsub.s f22, f19, f31, f5, dyn # perform operation
fnmsub.s f22, f19, f31, f5, rdn # perform operation
fnmsub.s f22, f19, f31, f5, rmm # perform operation
fnmsub.s f22, f19, f31, f5, rne # perform operation
fnmsub.s f22, f19, f31, f5, rtz # perform operation
fnmsub.s f22, f19, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x8bbb66fff7458b0c # load x3 with value 0x8bbb66fff7458b0c
sw x3, 0(x2) # store 0x8bbb66fff7458b0c in memory
flw f30, 0(x2) # load 0x8bbb66fff7458b0c from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f28, f2, f30, f18, dyn # perform operation
fnmsub.s f28, f2, f30, f18, rdn # perform operation
fnmsub.s f28, f2, f30, f18, rmm # perform operation
fnmsub.s f28, f2, f30, f18, rne # perform operation
fnmsub.s f28, f2, f30, f18, rtz # perform operation
fnmsub.s f28, f2, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f2, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f2, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f2, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f2, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f2, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x3dc67e5520c9f37f # load x3 with value 0x3dc67e5520c9f37f
sw x3, 0(x2) # store 0x3dc67e5520c9f37f in memory
flw f27, 0(x2) # load 0x3dc67e5520c9f37f from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmsub.s f17, f7, f27, f16, dyn # perform operation
fnmsub.s f17, f7, f27, f16, rdn # perform operation
fnmsub.s f17, f7, f27, f16, rmm # perform operation
fnmsub.s f17, f7, f27, f16, rne # perform operation
fnmsub.s f17, f7, f27, f16, rtz # perform operation
fnmsub.s f17, f7, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x3c647e8b43cc02b8 # load x3 with value 0x3c647e8b43cc02b8
sw x3, 0(x2) # store 0x3c647e8b43cc02b8 in memory
flw f14, 0(x2) # load 0x3c647e8b43cc02b8 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmsub.s f7, f24, f14, f26, dyn # perform operation
fnmsub.s f7, f24, f14, f26, rdn # perform operation
fnmsub.s f7, f24, f14, f26, rmm # perform operation
fnmsub.s f7, f24, f14, f26, rne # perform operation
fnmsub.s f7, f24, f14, f26, rtz # perform operation
fnmsub.s f7, f24, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f24, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f24, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f24, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f24, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f24, f14, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xeb2ab7d920562f2b # load x3 with value 0xeb2ab7d920562f2b
sw x3, 0(x2) # store 0xeb2ab7d920562f2b in memory
flw f16, 0(x2) # load 0xeb2ab7d920562f2b from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmsub.s f31, f6, f16, f8, dyn # perform operation
fnmsub.s f31, f6, f16, f8, rdn # perform operation
fnmsub.s f31, f6, f16, f8, rmm # perform operation
fnmsub.s f31, f6, f16, f8, rne # perform operation
fnmsub.s f31, f6, f16, f8, rtz # perform operation
fnmsub.s f31, f6, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xb8e67d4380f70d91 # load x3 with value 0xb8e67d4380f70d91
sw x3, 0(x2) # store 0xb8e67d4380f70d91 in memory
flw f14, 0(x2) # load 0xb8e67d4380f70d91 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f5, f11, f14, f30, dyn # perform operation
fnmsub.s f5, f11, f14, f30, rdn # perform operation
fnmsub.s f5, f11, f14, f30, rmm # perform operation
fnmsub.s f5, f11, f14, f30, rne # perform operation
fnmsub.s f5, f11, f14, f30, rtz # perform operation
fnmsub.s f5, f11, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f14, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x63cb747739271f5d # load x3 with value 0x63cb747739271f5d
sw x3, 0(x2) # store 0x63cb747739271f5d in memory
flw f25, 0(x2) # load 0x63cb747739271f5d from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f15, f7, f25, f3, dyn # perform operation
fnmsub.s f15, f7, f25, f3, rdn # perform operation
fnmsub.s f15, f7, f25, f3, rmm # perform operation
fnmsub.s f15, f7, f25, f3, rne # perform operation
fnmsub.s f15, f7, f25, f3, rtz # perform operation
fnmsub.s f15, f7, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xdc07a6cabdce1158 # load x3 with value 0xdc07a6cabdce1158
sw x3, 0(x2) # store 0xdc07a6cabdce1158 in memory
flw f10, 0(x2) # load 0xdc07a6cabdce1158 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmsub.s f2, f6, f10, f19, dyn # perform operation
fnmsub.s f2, f6, f10, f19, rdn # perform operation
fnmsub.s f2, f6, f10, f19, rmm # perform operation
fnmsub.s f2, f6, f10, f19, rne # perform operation
fnmsub.s f2, f6, f10, f19, rtz # perform operation
fnmsub.s f2, f6, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f6, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xffba8cf3cf130eae # load x3 with value 0xffba8cf3cf130eae
sw x3, 0(x2) # store 0xffba8cf3cf130eae in memory
flw f12, 0(x2) # load 0xffba8cf3cf130eae from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
fnmsub.s f7, f6, f12, f13, dyn # perform operation
fnmsub.s f7, f6, f12, f13, rdn # perform operation
fnmsub.s f7, f6, f12, f13, rmm # perform operation
fnmsub.s f7, f6, f12, f13, rne # perform operation
fnmsub.s f7, f6, f12, f13, rtz # perform operation
fnmsub.s f7, f6, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x23582dddb87602c1 # load x3 with value 0x23582dddb87602c1
sw x3, 0(x2) # store 0x23582dddb87602c1 in memory
flw f8, 0(x2) # load 0x23582dddb87602c1 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmsub.s f20, f11, f8, f16, dyn # perform operation
fnmsub.s f20, f11, f8, f16, rdn # perform operation
fnmsub.s f20, f11, f8, f16, rmm # perform operation
fnmsub.s f20, f11, f8, f16, rne # perform operation
fnmsub.s f20, f11, f8, f16, rtz # perform operation
fnmsub.s f20, f11, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x4ae85b4dffea07ee # load x3 with value 0x4ae85b4dffea07ee
sw x3, 0(x2) # store 0x4ae85b4dffea07ee in memory
flw f16, 0(x2) # load 0x4ae85b4dffea07ee from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f24, f20, f16, f3, dyn # perform operation
fnmsub.s f24, f20, f16, f3, rdn # perform operation
fnmsub.s f24, f20, f16, f3, rmm # perform operation
fnmsub.s f24, f20, f16, f3, rne # perform operation
fnmsub.s f24, f20, f16, f3, rtz # perform operation
fnmsub.s f24, f20, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f20, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x46da95143bffc7a6 # load x3 with value 0x46da95143bffc7a6
sw x3, 0(x2) # store 0x46da95143bffc7a6 in memory
flw f15, 0(x2) # load 0x46da95143bffc7a6 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmsub.s f1, f27, f15, f25, dyn # perform operation
fnmsub.s f1, f27, f15, f25, rdn # perform operation
fnmsub.s f1, f27, f15, f25, rmm # perform operation
fnmsub.s f1, f27, f15, f25, rne # perform operation
fnmsub.s f1, f27, f15, f25, rtz # perform operation
fnmsub.s f1, f27, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xc57605aa05a7e1af # load x3 with value 0xc57605aa05a7e1af
sw x3, 0(x2) # store 0xc57605aa05a7e1af in memory
flw f13, 0(x2) # load 0xc57605aa05a7e1af from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f7, f27, f13, f18, dyn # perform operation
fnmsub.s f7, f27, f13, f18, rdn # perform operation
fnmsub.s f7, f27, f13, f18, rmm # perform operation
fnmsub.s f7, f27, f13, f18, rne # perform operation
fnmsub.s f7, f27, f13, f18, rtz # perform operation
fnmsub.s f7, f27, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x95e1476af0567e4 # load x3 with value 0x95e1476af0567e4
sw x3, 0(x2) # store 0x95e1476af0567e4 in memory
flw f22, 0(x2) # load 0x95e1476af0567e4 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f21, f25, f22, f28, dyn # perform operation
fnmsub.s f21, f25, f22, f28, rdn # perform operation
fnmsub.s f21, f25, f22, f28, rmm # perform operation
fnmsub.s f21, f25, f22, f28, rne # perform operation
fnmsub.s f21, f25, f22, f28, rtz # perform operation
fnmsub.s f21, f25, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x26b9f9bb96798e4e # load x3 with value 0x26b9f9bb96798e4e
sw x3, 0(x2) # store 0x26b9f9bb96798e4e in memory
flw f24, 0(x2) # load 0x26b9f9bb96798e4e from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fnmsub.s f10, f22, f24, f13, dyn # perform operation
fnmsub.s f10, f22, f24, f13, rdn # perform operation
fnmsub.s f10, f22, f24, f13, rmm # perform operation
fnmsub.s f10, f22, f24, f13, rne # perform operation
fnmsub.s f10, f22, f24, f13, rtz # perform operation
fnmsub.s f10, f22, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x29b79d4d55c0017d # load x3 with value 0x29b79d4d55c0017d
sw x3, 0(x2) # store 0x29b79d4d55c0017d in memory
flw f24, 0(x2) # load 0x29b79d4d55c0017d from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmsub.s f25, f14, f24, f30, dyn # perform operation
fnmsub.s f25, f14, f24, f30, rdn # perform operation
fnmsub.s f25, f14, f24, f30, rmm # perform operation
fnmsub.s f25, f14, f24, f30, rne # perform operation
fnmsub.s f25, f14, f24, f30, rtz # perform operation
fnmsub.s f25, f14, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f14, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f14, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f14, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f14, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f14, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xa89786768bb3ee0c # load x3 with value 0xa89786768bb3ee0c
sw x3, 0(x2) # store 0xa89786768bb3ee0c in memory
flw f28, 0(x2) # load 0xa89786768bb3ee0c from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fnmsub.s f24, f30, f28, f27, dyn # perform operation
fnmsub.s f24, f30, f28, f27, rdn # perform operation
fnmsub.s f24, f30, f28, f27, rmm # perform operation
fnmsub.s f24, f30, f28, f27, rne # perform operation
fnmsub.s f24, f30, f28, f27, rtz # perform operation
fnmsub.s f24, f30, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x448b97e628b7d89a # load x3 with value 0x448b97e628b7d89a
sw x3, 0(x2) # store 0x448b97e628b7d89a in memory
flw f14, 0(x2) # load 0x448b97e628b7d89a from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fnmsub.s f27, f20, f14, f23, dyn # perform operation
fnmsub.s f27, f20, f14, f23, rdn # perform operation
fnmsub.s f27, f20, f14, f23, rmm # perform operation
fnmsub.s f27, f20, f14, f23, rne # perform operation
fnmsub.s f27, f20, f14, f23, rtz # perform operation
fnmsub.s f27, f20, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x122f24fdacd18492 # load x3 with value 0x122f24fdacd18492
sw x3, 0(x2) # store 0x122f24fdacd18492 in memory
flw f6, 0(x2) # load 0x122f24fdacd18492 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmsub.s f25, f31, f6, f27, dyn # perform operation
fnmsub.s f25, f31, f6, f27, rdn # perform operation
fnmsub.s f25, f31, f6, f27, rmm # perform operation
fnmsub.s f25, f31, f6, f27, rne # perform operation
fnmsub.s f25, f31, f6, f27, rtz # perform operation
fnmsub.s f25, f31, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0xd7bd1a23a13e8b27 # load x3 with value 0xd7bd1a23a13e8b27
sw x3, 0(x2) # store 0xd7bd1a23a13e8b27 in memory
flw f8, 0(x2) # load 0xd7bd1a23a13e8b27 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fnmsub.s f22, f9, f8, f13, dyn # perform operation
fnmsub.s f22, f9, f8, f13, rdn # perform operation
fnmsub.s f22, f9, f8, f13, rmm # perform operation
fnmsub.s f22, f9, f8, f13, rne # perform operation
fnmsub.s f22, f9, f8, f13, rtz # perform operation
fnmsub.s f22, f9, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x74ab656b479bf0a8 # load x3 with value 0x74ab656b479bf0a8
sw x3, 0(x2) # store 0x74ab656b479bf0a8 in memory
flw f11, 0(x2) # load 0x74ab656b479bf0a8 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmsub.s f9, f8, f11, f31, dyn # perform operation
fnmsub.s f9, f8, f11, f31, rdn # perform operation
fnmsub.s f9, f8, f11, f31, rmm # perform operation
fnmsub.s f9, f8, f11, f31, rne # perform operation
fnmsub.s f9, f8, f11, f31, rtz # perform operation
fnmsub.s f9, f8, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x105d9d16d801a440 # load x3 with value 0x105d9d16d801a440
sw x3, 0(x2) # store 0x105d9d16d801a440 in memory
flw f2, 0(x2) # load 0x105d9d16d801a440 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmsub.s f27, f13, f2, f21, dyn # perform operation
fnmsub.s f27, f13, f2, f21, rdn # perform operation
fnmsub.s f27, f13, f2, f21, rmm # perform operation
fnmsub.s f27, f13, f2, f21, rne # perform operation
fnmsub.s f27, f13, f2, f21, rtz # perform operation
fnmsub.s f27, f13, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x2b140faa695b0652 # load x3 with value 0x2b140faa695b0652
sw x3, 0(x2) # store 0x2b140faa695b0652 in memory
flw f25, 0(x2) # load 0x2b140faa695b0652 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmsub.s f26, f5, f25, f11, dyn # perform operation
fnmsub.s f26, f5, f25, f11, rdn # perform operation
fnmsub.s f26, f5, f25, f11, rmm # perform operation
fnmsub.s f26, f5, f25, f11, rne # perform operation
fnmsub.s f26, f5, f25, f11, rtz # perform operation
fnmsub.s f26, f5, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x4d53695fce3fa747 # load x3 with value 0x4d53695fce3fa747
sw x3, 0(x2) # store 0x4d53695fce3fa747 in memory
flw f24, 0(x2) # load 0x4d53695fce3fa747 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
fnmsub.s f13, f23, f24, f19, dyn # perform operation
fnmsub.s f13, f23, f24, f19, rdn # perform operation
fnmsub.s f13, f23, f24, f19, rmm # perform operation
fnmsub.s f13, f23, f24, f19, rne # perform operation
fnmsub.s f13, f23, f24, f19, rtz # perform operation
fnmsub.s f13, f23, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f24, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xa9c3a6965601b68 # load x3 with value 0xa9c3a6965601b68
sw x3, 0(x2) # store 0xa9c3a6965601b68 in memory
flw f31, 0(x2) # load 0xa9c3a6965601b68 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f29, f8, f31, f20, dyn # perform operation
fnmsub.s f29, f8, f31, f20, rdn # perform operation
fnmsub.s f29, f8, f31, f20, rmm # perform operation
fnmsub.s f29, f8, f31, f20, rne # perform operation
fnmsub.s f29, f8, f31, f20, rtz # perform operation
fnmsub.s f29, f8, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xe0f99f0aedc1090f # load x3 with value 0xe0f99f0aedc1090f
sw x3, 0(x2) # store 0xe0f99f0aedc1090f in memory
flw f2, 0(x2) # load 0xe0f99f0aedc1090f from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fnmsub.s f27, f16, f2, f5, dyn # perform operation
fnmsub.s f27, f16, f2, f5, rdn # perform operation
fnmsub.s f27, f16, f2, f5, rmm # perform operation
fnmsub.s f27, f16, f2, f5, rne # perform operation
fnmsub.s f27, f16, f2, f5, rtz # perform operation
fnmsub.s f27, f16, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x29bc18557cad8d4c # load x3 with value 0x29bc18557cad8d4c
sw x3, 0(x2) # store 0x29bc18557cad8d4c in memory
flw f28, 0(x2) # load 0x29bc18557cad8d4c from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f6, f1, f28, f25, dyn # perform operation
fnmsub.s f6, f1, f28, f25, rdn # perform operation
fnmsub.s f6, f1, f28, f25, rmm # perform operation
fnmsub.s f6, f1, f28, f25, rne # perform operation
fnmsub.s f6, f1, f28, f25, rtz # perform operation
fnmsub.s f6, f1, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xdc1ff7a305728e5b # load x3 with value 0xdc1ff7a305728e5b
sw x3, 0(x2) # store 0xdc1ff7a305728e5b in memory
flw f30, 0(x2) # load 0xdc1ff7a305728e5b from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmsub.s f23, f25, f30, f12, dyn # perform operation
fnmsub.s f23, f25, f30, f12, rdn # perform operation
fnmsub.s f23, f25, f30, f12, rmm # perform operation
fnmsub.s f23, f25, f30, f12, rne # perform operation
fnmsub.s f23, f25, f30, f12, rtz # perform operation
fnmsub.s f23, f25, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xd589d460acf43ee9 # load x3 with value 0xd589d460acf43ee9
sw x3, 0(x2) # store 0xd589d460acf43ee9 in memory
flw f20, 0(x2) # load 0xd589d460acf43ee9 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmsub.s f19, f10, f20, f3, dyn # perform operation
fnmsub.s f19, f10, f20, f3, rdn # perform operation
fnmsub.s f19, f10, f20, f3, rmm # perform operation
fnmsub.s f19, f10, f20, f3, rne # perform operation
fnmsub.s f19, f10, f20, f3, rtz # perform operation
fnmsub.s f19, f10, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f10, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xd0b42a23f09cb881 # load x3 with value 0xd0b42a23f09cb881
sw x3, 0(x2) # store 0xd0b42a23f09cb881 in memory
flw f9, 0(x2) # load 0xd0b42a23f09cb881 from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f2, f21, f9, f18, dyn # perform operation
fnmsub.s f2, f21, f9, f18, rdn # perform operation
fnmsub.s f2, f21, f9, f18, rmm # perform operation
fnmsub.s f2, f21, f9, f18, rne # perform operation
fnmsub.s f2, f21, f9, f18, rtz # perform operation
fnmsub.s f2, f21, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x6138f025005fb4a # load x3 with value 0x6138f025005fb4a
sw x3, 0(x2) # store 0x6138f025005fb4a in memory
flw f19, 0(x2) # load 0x6138f025005fb4a from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmsub.s f12, f16, f19, f28, dyn # perform operation
fnmsub.s f12, f16, f19, f28, rdn # perform operation
fnmsub.s f12, f16, f19, f28, rmm # perform operation
fnmsub.s f12, f16, f19, f28, rne # perform operation
fnmsub.s f12, f16, f19, f28, rtz # perform operation
fnmsub.s f12, f16, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x27966dd9f82fd070 # load x3 with value 0x27966dd9f82fd070
sw x3, 0(x2) # store 0x27966dd9f82fd070 in memory
flw f10, 0(x2) # load 0x27966dd9f82fd070 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f27, f20, f10, f1, dyn # perform operation
fnmsub.s f27, f20, f10, f1, rdn # perform operation
fnmsub.s f27, f20, f10, f1, rmm # perform operation
fnmsub.s f27, f20, f10, f1, rne # perform operation
fnmsub.s f27, f20, f10, f1, rtz # perform operation
fnmsub.s f27, f20, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xceb72649afafc1d6 # load x3 with value 0xceb72649afafc1d6
sw x3, 0(x2) # store 0xceb72649afafc1d6 in memory
flw f1, 0(x2) # load 0xceb72649afafc1d6 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmsub.s f26, f15, f1, f28, dyn # perform operation
fnmsub.s f26, f15, f1, f28, rdn # perform operation
fnmsub.s f26, f15, f1, f28, rmm # perform operation
fnmsub.s f26, f15, f1, f28, rne # perform operation
fnmsub.s f26, f15, f1, f28, rtz # perform operation
fnmsub.s f26, f15, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f15, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x7190abd7c2bd2c1c # load x3 with value 0x7190abd7c2bd2c1c
sw x3, 0(x2) # store 0x7190abd7c2bd2c1c in memory
flw f10, 0(x2) # load 0x7190abd7c2bd2c1c from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f15, f5, f10, f28, dyn # perform operation
fnmsub.s f15, f5, f10, f28, rdn # perform operation
fnmsub.s f15, f5, f10, f28, rmm # perform operation
fnmsub.s f15, f5, f10, f28, rne # perform operation
fnmsub.s f15, f5, f10, f28, rtz # perform operation
fnmsub.s f15, f5, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x85f4a1c7a4556996 # load x3 with value 0x85f4a1c7a4556996
sw x3, 0(x2) # store 0x85f4a1c7a4556996 in memory
flw f10, 0(x2) # load 0x85f4a1c7a4556996 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f2, f30, f10, f26, dyn # perform operation
fnmsub.s f2, f30, f10, f26, rdn # perform operation
fnmsub.s f2, f30, f10, f26, rmm # perform operation
fnmsub.s f2, f30, f10, f26, rne # perform operation
fnmsub.s f2, f30, f10, f26, rtz # perform operation
fnmsub.s f2, f30, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f10, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xcd55af2d1abbeec5 # load x3 with value 0xcd55af2d1abbeec5
sw x3, 0(x2) # store 0xcd55af2d1abbeec5 in memory
flw f7, 0(x2) # load 0xcd55af2d1abbeec5 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f11, f8, f7, f12, dyn # perform operation
fnmsub.s f11, f8, f7, f12, rdn # perform operation
fnmsub.s f11, f8, f7, f12, rmm # perform operation
fnmsub.s f11, f8, f7, f12, rne # perform operation
fnmsub.s f11, f8, f7, f12, rtz # perform operation
fnmsub.s f11, f8, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x51153f18f36ca7c7 # load x3 with value 0x51153f18f36ca7c7
sw x3, 0(x2) # store 0x51153f18f36ca7c7 in memory
flw f7, 0(x2) # load 0x51153f18f36ca7c7 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmsub.s f14, f26, f7, f8, dyn # perform operation
fnmsub.s f14, f26, f7, f8, rdn # perform operation
fnmsub.s f14, f26, f7, f8, rmm # perform operation
fnmsub.s f14, f26, f7, f8, rne # perform operation
fnmsub.s f14, f26, f7, f8, rtz # perform operation
fnmsub.s f14, f26, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x5659bdcbf6fe2fd5 # load x3 with value 0x5659bdcbf6fe2fd5
sw x3, 0(x2) # store 0x5659bdcbf6fe2fd5 in memory
flw f6, 0(x2) # load 0x5659bdcbf6fe2fd5 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f17, f3, f6, f26, dyn # perform operation
fnmsub.s f17, f3, f6, f26, rdn # perform operation
fnmsub.s f17, f3, f6, f26, rmm # perform operation
fnmsub.s f17, f3, f6, f26, rne # perform operation
fnmsub.s f17, f3, f6, f26, rtz # perform operation
fnmsub.s f17, f3, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xaa94d38d8e97239 # load x3 with value 0xaa94d38d8e97239
sw x3, 0(x2) # store 0xaa94d38d8e97239 in memory
flw f25, 0(x2) # load 0xaa94d38d8e97239 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmsub.s f27, f1, f25, f30, dyn # perform operation
fnmsub.s f27, f1, f25, f30, rdn # perform operation
fnmsub.s f27, f1, f25, f30, rmm # perform operation
fnmsub.s f27, f1, f25, f30, rne # perform operation
fnmsub.s f27, f1, f25, f30, rtz # perform operation
fnmsub.s f27, f1, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xbff97cfee54c90f9 # load x3 with value 0xbff97cfee54c90f9
sw x3, 0(x2) # store 0xbff97cfee54c90f9 in memory
flw f14, 0(x2) # load 0xbff97cfee54c90f9 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmsub.s f22, f24, f14, f16, dyn # perform operation
fnmsub.s f22, f24, f14, f16, rdn # perform operation
fnmsub.s f22, f24, f14, f16, rmm # perform operation
fnmsub.s f22, f24, f14, f16, rne # perform operation
fnmsub.s f22, f24, f14, f16, rtz # perform operation
fnmsub.s f22, f24, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xf25f148a1103dfb4 # load x3 with value 0xf25f148a1103dfb4
sw x3, 0(x2) # store 0xf25f148a1103dfb4 in memory
flw f1, 0(x2) # load 0xf25f148a1103dfb4 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fnmsub.s f20, f14, f1, f22, dyn # perform operation
fnmsub.s f20, f14, f1, f22, rdn # perform operation
fnmsub.s f20, f14, f1, f22, rmm # perform operation
fnmsub.s f20, f14, f1, f22, rne # perform operation
fnmsub.s f20, f14, f1, f22, rtz # perform operation
fnmsub.s f20, f14, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xe0486039d527990b # load x3 with value 0xe0486039d527990b
sw x3, 0(x2) # store 0xe0486039d527990b in memory
flw f16, 0(x2) # load 0xe0486039d527990b from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmsub.s f26, f25, f16, f12, dyn # perform operation
fnmsub.s f26, f25, f16, f12, rdn # perform operation
fnmsub.s f26, f25, f16, f12, rmm # perform operation
fnmsub.s f26, f25, f16, f12, rne # perform operation
fnmsub.s f26, f25, f16, f12, rtz # perform operation
fnmsub.s f26, f25, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x71c7ffb57f52709c # load x3 with value 0x71c7ffb57f52709c
sw x3, 0(x2) # store 0x71c7ffb57f52709c in memory
flw f24, 0(x2) # load 0x71c7ffb57f52709c from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f22, f2, f24, f29, dyn # perform operation
fnmsub.s f22, f2, f24, f29, rdn # perform operation
fnmsub.s f22, f2, f24, f29, rmm # perform operation
fnmsub.s f22, f2, f24, f29, rne # perform operation
fnmsub.s f22, f2, f24, f29, rtz # perform operation
fnmsub.s f22, f2, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x405efddde3c13d54 # load x3 with value 0x405efddde3c13d54
sw x3, 0(x2) # store 0x405efddde3c13d54 in memory
flw f27, 0(x2) # load 0x405efddde3c13d54 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fnmsub.s f29, f7, f27, f16, dyn # perform operation
fnmsub.s f29, f7, f27, f16, rdn # perform operation
fnmsub.s f29, f7, f27, f16, rmm # perform operation
fnmsub.s f29, f7, f27, f16, rne # perform operation
fnmsub.s f29, f7, f27, f16, rtz # perform operation
fnmsub.s f29, f7, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x631a648415bf1ad0 # load x3 with value 0x631a648415bf1ad0
sw x3, 0(x2) # store 0x631a648415bf1ad0 in memory
flw f1, 0(x2) # load 0x631a648415bf1ad0 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f20, f30, f1, f9, dyn # perform operation
fnmsub.s f20, f30, f1, f9, rdn # perform operation
fnmsub.s f20, f30, f1, f9, rmm # perform operation
fnmsub.s f20, f30, f1, f9, rne # perform operation
fnmsub.s f20, f30, f1, f9, rtz # perform operation
fnmsub.s f20, f30, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x28c50604925ff944 # load x3 with value 0x28c50604925ff944
sw x3, 0(x2) # store 0x28c50604925ff944 in memory
flw f21, 0(x2) # load 0x28c50604925ff944 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmsub.s f22, f17, f21, f7, dyn # perform operation
fnmsub.s f22, f17, f21, f7, rdn # perform operation
fnmsub.s f22, f17, f21, f7, rmm # perform operation
fnmsub.s f22, f17, f21, f7, rne # perform operation
fnmsub.s f22, f17, f21, f7, rtz # perform operation
fnmsub.s f22, f17, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x2c97e2bb5df04f92 # load x3 with value 0x2c97e2bb5df04f92
sw x3, 0(x2) # store 0x2c97e2bb5df04f92 in memory
flw f20, 0(x2) # load 0x2c97e2bb5df04f92 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmsub.s f22, f26, f20, f5, dyn # perform operation
fnmsub.s f22, f26, f20, f5, rdn # perform operation
fnmsub.s f22, f26, f20, f5, rmm # perform operation
fnmsub.s f22, f26, f20, f5, rne # perform operation
fnmsub.s f22, f26, f20, f5, rtz # perform operation
fnmsub.s f22, f26, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f26, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x82dd696314d36e2f # load x3 with value 0x82dd696314d36e2f
sw x3, 0(x2) # store 0x82dd696314d36e2f in memory
flw f10, 0(x2) # load 0x82dd696314d36e2f from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmsub.s f21, f19, f10, f5, dyn # perform operation
fnmsub.s f21, f19, f10, f5, rdn # perform operation
fnmsub.s f21, f19, f10, f5, rmm # perform operation
fnmsub.s f21, f19, f10, f5, rne # perform operation
fnmsub.s f21, f19, f10, f5, rtz # perform operation
fnmsub.s f21, f19, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f19, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f19, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f19, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f19, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f19, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xc28f5c1a3af0ca84 # load x3 with value 0xc28f5c1a3af0ca84
sw x3, 0(x2) # store 0xc28f5c1a3af0ca84 in memory
flw f29, 0(x2) # load 0xc28f5c1a3af0ca84 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fnmsub.s f19, f30, f29, f16, dyn # perform operation
fnmsub.s f19, f30, f29, f16, rdn # perform operation
fnmsub.s f19, f30, f29, f16, rmm # perform operation
fnmsub.s f19, f30, f29, f16, rne # perform operation
fnmsub.s f19, f30, f29, f16, rtz # perform operation
fnmsub.s f19, f30, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xe8e774b950b03ea # load x3 with value 0xe8e774b950b03ea
sw x3, 0(x2) # store 0xe8e774b950b03ea in memory
flw f28, 0(x2) # load 0xe8e774b950b03ea from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f31, f24, f28, f27, dyn # perform operation
fnmsub.s f31, f24, f28, f27, rdn # perform operation
fnmsub.s f31, f24, f28, f27, rmm # perform operation
fnmsub.s f31, f24, f28, f27, rne # perform operation
fnmsub.s f31, f24, f28, f27, rtz # perform operation
fnmsub.s f31, f24, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x549c9fcee29d9081 # load x3 with value 0x549c9fcee29d9081
sw x3, 0(x2) # store 0x549c9fcee29d9081 in memory
flw f25, 0(x2) # load 0x549c9fcee29d9081 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmsub.s f10, f17, f25, f1, dyn # perform operation
fnmsub.s f10, f17, f25, f1, rdn # perform operation
fnmsub.s f10, f17, f25, f1, rmm # perform operation
fnmsub.s f10, f17, f25, f1, rne # perform operation
fnmsub.s f10, f17, f25, f1, rtz # perform operation
fnmsub.s f10, f17, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x1ecee1e8c26952a8 # load x3 with value 0x1ecee1e8c26952a8
sw x3, 0(x2) # store 0x1ecee1e8c26952a8 in memory
flw f13, 0(x2) # load 0x1ecee1e8c26952a8 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmsub.s f31, f26, f13, f22, dyn # perform operation
fnmsub.s f31, f26, f13, f22, rdn # perform operation
fnmsub.s f31, f26, f13, f22, rmm # perform operation
fnmsub.s f31, f26, f13, f22, rne # perform operation
fnmsub.s f31, f26, f13, f22, rtz # perform operation
fnmsub.s f31, f26, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x9f6bb02e91a752a5 # load x3 with value 0x9f6bb02e91a752a5
sw x3, 0(x2) # store 0x9f6bb02e91a752a5 in memory
flw f26, 0(x2) # load 0x9f6bb02e91a752a5 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmsub.s f25, f19, f26, f5, dyn # perform operation
fnmsub.s f25, f19, f26, f5, rdn # perform operation
fnmsub.s f25, f19, f26, f5, rmm # perform operation
fnmsub.s f25, f19, f26, f5, rne # perform operation
fnmsub.s f25, f19, f26, f5, rtz # perform operation
fnmsub.s f25, f19, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f19, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x70c8293a30376346 # load x3 with value 0x70c8293a30376346
sw x3, 0(x2) # store 0x70c8293a30376346 in memory
flw f2, 0(x2) # load 0x70c8293a30376346 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmsub.s f13, f7, f2, f21, dyn # perform operation
fnmsub.s f13, f7, f2, f21, rdn # perform operation
fnmsub.s f13, f7, f2, f21, rmm # perform operation
fnmsub.s f13, f7, f2, f21, rne # perform operation
fnmsub.s f13, f7, f2, f21, rtz # perform operation
fnmsub.s f13, f7, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f7, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xe4cdc82f4f5b8baa # load x3 with value 0xe4cdc82f4f5b8baa
sw x3, 0(x2) # store 0xe4cdc82f4f5b8baa in memory
flw f25, 0(x2) # load 0xe4cdc82f4f5b8baa from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f2, f7, f25, f30, dyn # perform operation
fnmsub.s f2, f7, f25, f30, rdn # perform operation
fnmsub.s f2, f7, f25, f30, rmm # perform operation
fnmsub.s f2, f7, f25, f30, rne # perform operation
fnmsub.s f2, f7, f25, f30, rtz # perform operation
fnmsub.s f2, f7, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x79427fada637024d # load x3 with value 0x79427fada637024d
sw x3, 0(x2) # store 0x79427fada637024d in memory
flw f19, 0(x2) # load 0x79427fada637024d from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmsub.s f18, f3, f19, f14, dyn # perform operation
fnmsub.s f18, f3, f19, f14, rdn # perform operation
fnmsub.s f18, f3, f19, f14, rmm # perform operation
fnmsub.s f18, f3, f19, f14, rne # perform operation
fnmsub.s f18, f3, f19, f14, rtz # perform operation
fnmsub.s f18, f3, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xc371b92e1d87070f # load x3 with value 0xc371b92e1d87070f
sw x3, 0(x2) # store 0xc371b92e1d87070f in memory
flw f16, 0(x2) # load 0xc371b92e1d87070f from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmsub.s f1, f6, f16, f7, dyn # perform operation
fnmsub.s f1, f6, f16, f7, rdn # perform operation
fnmsub.s f1, f6, f16, f7, rmm # perform operation
fnmsub.s f1, f6, f16, f7, rne # perform operation
fnmsub.s f1, f6, f16, f7, rtz # perform operation
fnmsub.s f1, f6, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xe61c263a645976d4 # load x3 with value 0xe61c263a645976d4
sw x3, 0(x2) # store 0xe61c263a645976d4 in memory
flw f26, 0(x2) # load 0xe61c263a645976d4 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fnmsub.s f8, f23, f26, f30, dyn # perform operation
fnmsub.s f8, f23, f26, f30, rdn # perform operation
fnmsub.s f8, f23, f26, f30, rmm # perform operation
fnmsub.s f8, f23, f26, f30, rne # perform operation
fnmsub.s f8, f23, f26, f30, rtz # perform operation
fnmsub.s f8, f23, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x5dabee9227f15ce8 # load x3 with value 0x5dabee9227f15ce8
sw x3, 0(x2) # store 0x5dabee9227f15ce8 in memory
flw f19, 0(x2) # load 0x5dabee9227f15ce8 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmsub.s f20, f27, f19, f15, dyn # perform operation
fnmsub.s f20, f27, f19, f15, rdn # perform operation
fnmsub.s f20, f27, f19, f15, rmm # perform operation
fnmsub.s f20, f27, f19, f15, rne # perform operation
fnmsub.s f20, f27, f19, f15, rtz # perform operation
fnmsub.s f20, f27, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x36f28c5189501de1 # load x3 with value 0x36f28c5189501de1
sw x3, 0(x2) # store 0x36f28c5189501de1 in memory
flw f23, 0(x2) # load 0x36f28c5189501de1 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmsub.s f31, f2, f23, f13, dyn # perform operation
fnmsub.s f31, f2, f23, f13, rdn # perform operation
fnmsub.s f31, f2, f23, f13, rmm # perform operation
fnmsub.s f31, f2, f23, f13, rne # perform operation
fnmsub.s f31, f2, f23, f13, rtz # perform operation
fnmsub.s f31, f2, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x864ff6ea09a5a50b # load x3 with value 0x864ff6ea09a5a50b
sw x3, 0(x2) # store 0x864ff6ea09a5a50b in memory
flw f18, 0(x2) # load 0x864ff6ea09a5a50b from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmsub.s f27, f21, f18, f1, dyn # perform operation
fnmsub.s f27, f21, f18, f1, rdn # perform operation
fnmsub.s f27, f21, f18, f1, rmm # perform operation
fnmsub.s f27, f21, f18, f1, rne # perform operation
fnmsub.s f27, f21, f18, f1, rtz # perform operation
fnmsub.s f27, f21, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xe06f9fb20dec57ec # load x3 with value 0xe06f9fb20dec57ec
sw x3, 0(x2) # store 0xe06f9fb20dec57ec in memory
flw f3, 0(x2) # load 0xe06f9fb20dec57ec from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmsub.s f13, f18, f3, f22, dyn # perform operation
fnmsub.s f13, f18, f3, f22, rdn # perform operation
fnmsub.s f13, f18, f3, f22, rmm # perform operation
fnmsub.s f13, f18, f3, f22, rne # perform operation
fnmsub.s f13, f18, f3, f22, rtz # perform operation
fnmsub.s f13, f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xb14d58d71a94b395 # load x3 with value 0xb14d58d71a94b395
sw x3, 0(x2) # store 0xb14d58d71a94b395 in memory
flw f28, 0(x2) # load 0xb14d58d71a94b395 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmsub.s f17, f11, f28, f7, dyn # perform operation
fnmsub.s f17, f11, f28, f7, rdn # perform operation
fnmsub.s f17, f11, f28, f7, rmm # perform operation
fnmsub.s f17, f11, f28, f7, rne # perform operation
fnmsub.s f17, f11, f28, f7, rtz # perform operation
fnmsub.s f17, f11, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xfe9479a3537d7851 # load x3 with value 0xfe9479a3537d7851
sw x3, 0(x2) # store 0xfe9479a3537d7851 in memory
flw f27, 0(x2) # load 0xfe9479a3537d7851 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f19, f17, f27, f22, dyn # perform operation
fnmsub.s f19, f17, f27, f22, rdn # perform operation
fnmsub.s f19, f17, f27, f22, rmm # perform operation
fnmsub.s f19, f17, f27, f22, rne # perform operation
fnmsub.s f19, f17, f27, f22, rtz # perform operation
fnmsub.s f19, f17, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0xd2bb3365ec9cadb2 # load x3 with value 0xd2bb3365ec9cadb2
sw x3, 0(x2) # store 0xd2bb3365ec9cadb2 in memory
flw f17, 0(x2) # load 0xd2bb3365ec9cadb2 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f2, f30, f17, f7, dyn # perform operation
fnmsub.s f2, f30, f17, f7, rdn # perform operation
fnmsub.s f2, f30, f17, f7, rmm # perform operation
fnmsub.s f2, f30, f17, f7, rne # perform operation
fnmsub.s f2, f30, f17, f7, rtz # perform operation
fnmsub.s f2, f30, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xd1097f3b960e59fe # load x3 with value 0xd1097f3b960e59fe
sw x3, 0(x2) # store 0xd1097f3b960e59fe in memory
flw f10, 0(x2) # load 0xd1097f3b960e59fe from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f16, f8, f10, f9, dyn # perform operation
fnmsub.s f16, f8, f10, f9, rdn # perform operation
fnmsub.s f16, f8, f10, f9, rmm # perform operation
fnmsub.s f16, f8, f10, f9, rne # perform operation
fnmsub.s f16, f8, f10, f9, rtz # perform operation
fnmsub.s f16, f8, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xf7dc5c8b93e7704b # load x3 with value 0xf7dc5c8b93e7704b
sw x3, 0(x2) # store 0xf7dc5c8b93e7704b in memory
flw f5, 0(x2) # load 0xf7dc5c8b93e7704b from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f22, f7, f5, f10, dyn # perform operation
fnmsub.s f22, f7, f5, f10, rdn # perform operation
fnmsub.s f22, f7, f5, f10, rmm # perform operation
fnmsub.s f22, f7, f5, f10, rne # perform operation
fnmsub.s f22, f7, f5, f10, rtz # perform operation
fnmsub.s f22, f7, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0xb2b0ce87d8f7c27b # load x3 with value 0xb2b0ce87d8f7c27b
sw x3, 0(x2) # store 0xb2b0ce87d8f7c27b in memory
flw f2, 0(x2) # load 0xb2b0ce87d8f7c27b from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmsub.s f22, f13, f2, f16, dyn # perform operation
fnmsub.s f22, f13, f2, f16, rdn # perform operation
fnmsub.s f22, f13, f2, f16, rmm # perform operation
fnmsub.s f22, f13, f2, f16, rne # perform operation
fnmsub.s f22, f13, f2, f16, rtz # perform operation
fnmsub.s f22, f13, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x3bac681109bcf77f # load x3 with value 0x3bac681109bcf77f
sw x3, 0(x2) # store 0x3bac681109bcf77f in memory
flw f7, 0(x2) # load 0x3bac681109bcf77f from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmsub.s f22, f12, f7, f21, dyn # perform operation
fnmsub.s f22, f12, f7, f21, rdn # perform operation
fnmsub.s f22, f12, f7, f21, rmm # perform operation
fnmsub.s f22, f12, f7, f21, rne # perform operation
fnmsub.s f22, f12, f7, f21, rtz # perform operation
fnmsub.s f22, f12, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x4eba46a247c577b7 # load x3 with value 0x4eba46a247c577b7
sw x3, 0(x2) # store 0x4eba46a247c577b7 in memory
flw f31, 0(x2) # load 0x4eba46a247c577b7 from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fnmsub.s f20, f25, f31, f15, dyn # perform operation
fnmsub.s f20, f25, f31, f15, rdn # perform operation
fnmsub.s f20, f25, f31, f15, rmm # perform operation
fnmsub.s f20, f25, f31, f15, rne # perform operation
fnmsub.s f20, f25, f31, f15, rtz # perform operation
fnmsub.s f20, f25, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f31, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x9f8c2b398da8715c # load x3 with value 0x9f8c2b398da8715c
sw x3, 0(x2) # store 0x9f8c2b398da8715c in memory
flw f8, 0(x2) # load 0x9f8c2b398da8715c from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f15, f3, f8, f17, dyn # perform operation
fnmsub.s f15, f3, f8, f17, rdn # perform operation
fnmsub.s f15, f3, f8, f17, rmm # perform operation
fnmsub.s f15, f3, f8, f17, rne # perform operation
fnmsub.s f15, f3, f8, f17, rtz # perform operation
fnmsub.s f15, f3, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x2e62b6fc54684ad8 # load x3 with value 0x2e62b6fc54684ad8
sw x3, 0(x2) # store 0x2e62b6fc54684ad8 in memory
flw f29, 0(x2) # load 0x2e62b6fc54684ad8 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f18, f9, f29, f24, dyn # perform operation
fnmsub.s f18, f9, f29, f24, rdn # perform operation
fnmsub.s f18, f9, f29, f24, rmm # perform operation
fnmsub.s f18, f9, f29, f24, rne # perform operation
fnmsub.s f18, f9, f29, f24, rtz # perform operation
fnmsub.s f18, f9, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0xd6151138fd306f70 # load x3 with value 0xd6151138fd306f70
sw x3, 0(x2) # store 0xd6151138fd306f70 in memory
flw f9, 0(x2) # load 0xd6151138fd306f70 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f14, f19, f9, f12, dyn # perform operation
fnmsub.s f14, f19, f9, f12, rdn # perform operation
fnmsub.s f14, f19, f9, f12, rmm # perform operation
fnmsub.s f14, f19, f9, f12, rne # perform operation
fnmsub.s f14, f19, f9, f12, rtz # perform operation
fnmsub.s f14, f19, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f9, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x46b7fd3209ece50a # load x3 with value 0x46b7fd3209ece50a
sw x3, 0(x2) # store 0x46b7fd3209ece50a in memory
flw f23, 0(x2) # load 0x46b7fd3209ece50a from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f24, f21, f23, f17, dyn # perform operation
fnmsub.s f24, f21, f23, f17, rdn # perform operation
fnmsub.s f24, f21, f23, f17, rmm # perform operation
fnmsub.s f24, f21, f23, f17, rne # perform operation
fnmsub.s f24, f21, f23, f17, rtz # perform operation
fnmsub.s f24, f21, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x43825a64cfad1f7c # load x3 with value 0x43825a64cfad1f7c
sw x3, 0(x2) # store 0x43825a64cfad1f7c in memory
flw f19, 0(x2) # load 0x43825a64cfad1f7c from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmsub.s f13, f17, f19, f24, dyn # perform operation
fnmsub.s f13, f17, f19, f24, rdn # perform operation
fnmsub.s f13, f17, f19, f24, rmm # perform operation
fnmsub.s f13, f17, f19, f24, rne # perform operation
fnmsub.s f13, f17, f19, f24, rtz # perform operation
fnmsub.s f13, f17, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x6dc56f2bd85a2d12 # load x3 with value 0x6dc56f2bd85a2d12
sw x3, 0(x2) # store 0x6dc56f2bd85a2d12 in memory
flw f5, 0(x2) # load 0x6dc56f2bd85a2d12 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f2, f19, f5, f20, dyn # perform operation
fnmsub.s f2, f19, f5, f20, rdn # perform operation
fnmsub.s f2, f19, f5, f20, rmm # perform operation
fnmsub.s f2, f19, f5, f20, rne # perform operation
fnmsub.s f2, f19, f5, f20, rtz # perform operation
fnmsub.s f2, f19, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x96fac80034f187bf # load x3 with value 0x96fac80034f187bf
sw x3, 0(x2) # store 0x96fac80034f187bf in memory
flw f18, 0(x2) # load 0x96fac80034f187bf from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fnmsub.s f8, f23, f18, f21, dyn # perform operation
fnmsub.s f8, f23, f18, f21, rdn # perform operation
fnmsub.s f8, f23, f18, f21, rmm # perform operation
fnmsub.s f8, f23, f18, f21, rne # perform operation
fnmsub.s f8, f23, f18, f21, rtz # perform operation
fnmsub.s f8, f23, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xd8aa625f412ce1e8 # load x3 with value 0xd8aa625f412ce1e8
sw x3, 0(x2) # store 0xd8aa625f412ce1e8 in memory
flw f8, 0(x2) # load 0xd8aa625f412ce1e8 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmsub.s f12, f15, f8, f2, dyn # perform operation
fnmsub.s f12, f15, f8, f2, rdn # perform operation
fnmsub.s f12, f15, f8, f2, rmm # perform operation
fnmsub.s f12, f15, f8, f2, rne # perform operation
fnmsub.s f12, f15, f8, f2, rtz # perform operation
fnmsub.s f12, f15, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x9f07b95a0c7594aa # load x3 with value 0x9f07b95a0c7594aa
sw x3, 0(x2) # store 0x9f07b95a0c7594aa in memory
flw f16, 0(x2) # load 0x9f07b95a0c7594aa from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmsub.s f26, f9, f16, f13, dyn # perform operation
fnmsub.s f26, f9, f16, f13, rdn # perform operation
fnmsub.s f26, f9, f16, f13, rmm # perform operation
fnmsub.s f26, f9, f16, f13, rne # perform operation
fnmsub.s f26, f9, f16, f13, rtz # perform operation
fnmsub.s f26, f9, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xb744e14a9571855b # load x3 with value 0xb744e14a9571855b
sw x3, 0(x2) # store 0xb744e14a9571855b in memory
flw f8, 0(x2) # load 0xb744e14a9571855b from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fnmsub.s f20, f18, f8, f3, dyn # perform operation
fnmsub.s f20, f18, f8, f3, rdn # perform operation
fnmsub.s f20, f18, f8, f3, rmm # perform operation
fnmsub.s f20, f18, f8, f3, rne # perform operation
fnmsub.s f20, f18, f8, f3, rtz # perform operation
fnmsub.s f20, f18, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f8, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x90ef8e1c7695b1cc # load x3 with value 0x90ef8e1c7695b1cc
sw x3, 0(x2) # store 0x90ef8e1c7695b1cc in memory
flw f14, 0(x2) # load 0x90ef8e1c7695b1cc from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmsub.s f10, f20, f14, f5, dyn # perform operation
fnmsub.s f10, f20, f14, f5, rdn # perform operation
fnmsub.s f10, f20, f14, f5, rmm # perform operation
fnmsub.s f10, f20, f14, f5, rne # perform operation
fnmsub.s f10, f20, f14, f5, rtz # perform operation
fnmsub.s f10, f20, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x720590e0a9fdda40 # load x3 with value 0x720590e0a9fdda40
sw x3, 0(x2) # store 0x720590e0a9fdda40 in memory
flw f20, 0(x2) # load 0x720590e0a9fdda40 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f29, f31, f20, f23, dyn # perform operation
fnmsub.s f29, f31, f20, f23, rdn # perform operation
fnmsub.s f29, f31, f20, f23, rmm # perform operation
fnmsub.s f29, f31, f20, f23, rne # perform operation
fnmsub.s f29, f31, f20, f23, rtz # perform operation
fnmsub.s f29, f31, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x878a106bae55d938 # load x3 with value 0x878a106bae55d938
sw x3, 0(x2) # store 0x878a106bae55d938 in memory
flw f31, 0(x2) # load 0x878a106bae55d938 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fnmsub.s f19, f12, f31, f23, dyn # perform operation
fnmsub.s f19, f12, f31, f23, rdn # perform operation
fnmsub.s f19, f12, f31, f23, rmm # perform operation
fnmsub.s f19, f12, f31, f23, rne # perform operation
fnmsub.s f19, f12, f31, f23, rtz # perform operation
fnmsub.s f19, f12, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x67a41c434b5a0396 # load x3 with value 0x67a41c434b5a0396
sw x3, 0(x2) # store 0x67a41c434b5a0396 in memory
flw f16, 0(x2) # load 0x67a41c434b5a0396 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmsub.s f27, f6, f16, f29, dyn # perform operation
fnmsub.s f27, f6, f16, f29, rdn # perform operation
fnmsub.s f27, f6, f16, f29, rmm # perform operation
fnmsub.s f27, f6, f16, f29, rne # perform operation
fnmsub.s f27, f6, f16, f29, rtz # perform operation
fnmsub.s f27, f6, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xd944a9673d209afd # load x3 with value 0xd944a9673d209afd
sw x3, 0(x2) # store 0xd944a9673d209afd in memory
flw f10, 0(x2) # load 0xd944a9673d209afd from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fnmsub.s f5, f22, f10, f28, dyn # perform operation
fnmsub.s f5, f22, f10, f28, rdn # perform operation
fnmsub.s f5, f22, f10, f28, rmm # perform operation
fnmsub.s f5, f22, f10, f28, rne # perform operation
fnmsub.s f5, f22, f10, f28, rtz # perform operation
fnmsub.s f5, f22, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xd10981860c95c7dc # load x3 with value 0xd10981860c95c7dc
sw x3, 0(x2) # store 0xd10981860c95c7dc in memory
flw f12, 0(x2) # load 0xd10981860c95c7dc from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f1, f23, f12, f18, dyn # perform operation
fnmsub.s f1, f23, f12, f18, rdn # perform operation
fnmsub.s f1, f23, f12, f18, rmm # perform operation
fnmsub.s f1, f23, f12, f18, rne # perform operation
fnmsub.s f1, f23, f12, f18, rtz # perform operation
fnmsub.s f1, f23, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f23, f12, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xe449feff473dcc6a # load x3 with value 0xe449feff473dcc6a
sw x3, 0(x2) # store 0xe449feff473dcc6a in memory
flw f20, 0(x2) # load 0xe449feff473dcc6a from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fnmsub.s f29, f18, f20, f25, dyn # perform operation
fnmsub.s f29, f18, f20, f25, rdn # perform operation
fnmsub.s f29, f18, f20, f25, rmm # perform operation
fnmsub.s f29, f18, f20, f25, rne # perform operation
fnmsub.s f29, f18, f20, f25, rtz # perform operation
fnmsub.s f29, f18, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x76394c15fea161a5 # load x3 with value 0x76394c15fea161a5
sw x3, 0(x2) # store 0x76394c15fea161a5 in memory
flw f17, 0(x2) # load 0x76394c15fea161a5 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmsub.s f15, f1, f17, f25, dyn # perform operation
fnmsub.s f15, f1, f17, f25, rdn # perform operation
fnmsub.s f15, f1, f17, f25, rmm # perform operation
fnmsub.s f15, f1, f17, f25, rne # perform operation
fnmsub.s f15, f1, f17, f25, rtz # perform operation
fnmsub.s f15, f1, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xb93816f1c4316d88 # load x3 with value 0xb93816f1c4316d88
sw x3, 0(x2) # store 0xb93816f1c4316d88 in memory
flw f2, 0(x2) # load 0xb93816f1c4316d88 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmsub.s f6, f15, f2, f13, dyn # perform operation
fnmsub.s f6, f15, f2, f13, rdn # perform operation
fnmsub.s f6, f15, f2, f13, rmm # perform operation
fnmsub.s f6, f15, f2, f13, rne # perform operation
fnmsub.s f6, f15, f2, f13, rtz # perform operation
fnmsub.s f6, f15, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xf42e2343a08ed86e # load x3 with value 0xf42e2343a08ed86e
sw x3, 0(x2) # store 0xf42e2343a08ed86e in memory
flw f23, 0(x2) # load 0xf42e2343a08ed86e from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmsub.s f19, f10, f23, f9, dyn # perform operation
fnmsub.s f19, f10, f23, f9, rdn # perform operation
fnmsub.s f19, f10, f23, f9, rmm # perform operation
fnmsub.s f19, f10, f23, f9, rne # perform operation
fnmsub.s f19, f10, f23, f9, rtz # perform operation
fnmsub.s f19, f10, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f10, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x9595adb461ae531b # load x3 with value 0x9595adb461ae531b
sw x3, 0(x2) # store 0x9595adb461ae531b in memory
flw f2, 0(x2) # load 0x9595adb461ae531b from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmsub.s f17, f20, f2, f27, dyn # perform operation
fnmsub.s f17, f20, f2, f27, rdn # perform operation
fnmsub.s f17, f20, f2, f27, rmm # perform operation
fnmsub.s f17, f20, f2, f27, rne # perform operation
fnmsub.s f17, f20, f2, f27, rtz # perform operation
fnmsub.s f17, f20, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xdab08b29ef60791f # load x3 with value 0xdab08b29ef60791f
sw x3, 0(x2) # store 0xdab08b29ef60791f in memory
flw f27, 0(x2) # load 0xdab08b29ef60791f from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmsub.s f17, f22, f27, f10, dyn # perform operation
fnmsub.s f17, f22, f27, f10, rdn # perform operation
fnmsub.s f17, f22, f27, f10, rmm # perform operation
fnmsub.s f17, f22, f27, f10, rne # perform operation
fnmsub.s f17, f22, f27, f10, rtz # perform operation
fnmsub.s f17, f22, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x23865007ced8a9e1 # load x3 with value 0x23865007ced8a9e1
sw x3, 0(x2) # store 0x23865007ced8a9e1 in memory
flw f20, 0(x2) # load 0x23865007ced8a9e1 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmsub.s f22, f29, f20, f21, dyn # perform operation
fnmsub.s f22, f29, f20, f21, rdn # perform operation
fnmsub.s f22, f29, f20, f21, rmm # perform operation
fnmsub.s f22, f29, f20, f21, rne # perform operation
fnmsub.s f22, f29, f20, f21, rtz # perform operation
fnmsub.s f22, f29, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xbbe1710deffc1945 # load x3 with value 0xbbe1710deffc1945
sw x3, 0(x2) # store 0xbbe1710deffc1945 in memory
flw f13, 0(x2) # load 0xbbe1710deffc1945 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fnmsub.s f7, f17, f13, f12, dyn # perform operation
fnmsub.s f7, f17, f13, f12, rdn # perform operation
fnmsub.s f7, f17, f13, f12, rmm # perform operation
fnmsub.s f7, f17, f13, f12, rne # perform operation
fnmsub.s f7, f17, f13, f12, rtz # perform operation
fnmsub.s f7, f17, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x2243da957b2ee47e # load x3 with value 0x2243da957b2ee47e
sw x3, 0(x2) # store 0x2243da957b2ee47e in memory
flw f12, 0(x2) # load 0x2243da957b2ee47e from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmsub.s f29, f20, f12, f15, dyn # perform operation
fnmsub.s f29, f20, f12, f15, rdn # perform operation
fnmsub.s f29, f20, f12, f15, rmm # perform operation
fnmsub.s f29, f20, f12, f15, rne # perform operation
fnmsub.s f29, f20, f12, f15, rtz # perform operation
fnmsub.s f29, f20, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f20, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x2802ebdab72d2d3f # load x3 with value 0x2802ebdab72d2d3f
sw x3, 0(x2) # store 0x2802ebdab72d2d3f in memory
flw f10, 0(x2) # load 0x2802ebdab72d2d3f from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmsub.s f2, f26, f10, f14, dyn # perform operation
fnmsub.s f2, f26, f10, f14, rdn # perform operation
fnmsub.s f2, f26, f10, f14, rmm # perform operation
fnmsub.s f2, f26, f10, f14, rne # perform operation
fnmsub.s f2, f26, f10, f14, rtz # perform operation
fnmsub.s f2, f26, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xafd1491d81639a82 # load x3 with value 0xafd1491d81639a82
sw x3, 0(x2) # store 0xafd1491d81639a82 in memory
flw f29, 0(x2) # load 0xafd1491d81639a82 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmsub.s f19, f18, f29, f21, dyn # perform operation
fnmsub.s f19, f18, f29, f21, rdn # perform operation
fnmsub.s f19, f18, f29, f21, rmm # perform operation
fnmsub.s f19, f18, f29, f21, rne # perform operation
fnmsub.s f19, f18, f29, f21, rtz # perform operation
fnmsub.s f19, f18, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x6bab83213335a24e # load x3 with value 0x6bab83213335a24e
sw x3, 0(x2) # store 0x6bab83213335a24e in memory
flw f27, 0(x2) # load 0x6bab83213335a24e from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f18, f29, f27, f20, dyn # perform operation
fnmsub.s f18, f29, f27, f20, rdn # perform operation
fnmsub.s f18, f29, f27, f20, rmm # perform operation
fnmsub.s f18, f29, f27, f20, rne # perform operation
fnmsub.s f18, f29, f27, f20, rtz # perform operation
fnmsub.s f18, f29, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x571ca64dc0250144 # load x3 with value 0x571ca64dc0250144
sw x3, 0(x2) # store 0x571ca64dc0250144 in memory
flw f28, 0(x2) # load 0x571ca64dc0250144 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmsub.s f22, f16, f28, f11, dyn # perform operation
fnmsub.s f22, f16, f28, f11, rdn # perform operation
fnmsub.s f22, f16, f28, f11, rmm # perform operation
fnmsub.s f22, f16, f28, f11, rne # perform operation
fnmsub.s f22, f16, f28, f11, rtz # perform operation
fnmsub.s f22, f16, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x4f33d6f3da3aeb85 # load x3 with value 0x4f33d6f3da3aeb85
sw x3, 0(x2) # store 0x4f33d6f3da3aeb85 in memory
flw f17, 0(x2) # load 0x4f33d6f3da3aeb85 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f10, f12, f17, f25, dyn # perform operation
fnmsub.s f10, f12, f17, f25, rdn # perform operation
fnmsub.s f10, f12, f17, f25, rmm # perform operation
fnmsub.s f10, f12, f17, f25, rne # perform operation
fnmsub.s f10, f12, f17, f25, rtz # perform operation
fnmsub.s f10, f12, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f12, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x196014b70ca4ffa3 # load x3 with value 0x196014b70ca4ffa3
sw x3, 0(x2) # store 0x196014b70ca4ffa3 in memory
flw f16, 0(x2) # load 0x196014b70ca4ffa3 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmsub.s f21, f12, f16, f8, dyn # perform operation
fnmsub.s f21, f12, f16, f8, rdn # perform operation
fnmsub.s f21, f12, f16, f8, rmm # perform operation
fnmsub.s f21, f12, f16, f8, rne # perform operation
fnmsub.s f21, f12, f16, f8, rtz # perform operation
fnmsub.s f21, f12, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x86513132753d409e # load x3 with value 0x86513132753d409e
sw x3, 0(x2) # store 0x86513132753d409e in memory
flw f9, 0(x2) # load 0x86513132753d409e from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmsub.s f27, f8, f9, f28, dyn # perform operation
fnmsub.s f27, f8, f9, f28, rdn # perform operation
fnmsub.s f27, f8, f9, f28, rmm # perform operation
fnmsub.s f27, f8, f9, f28, rne # perform operation
fnmsub.s f27, f8, f9, f28, rtz # perform operation
fnmsub.s f27, f8, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x43aef6392a8f8632 # load x3 with value 0x43aef6392a8f8632
sw x3, 0(x2) # store 0x43aef6392a8f8632 in memory
flw f21, 0(x2) # load 0x43aef6392a8f8632 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fnmsub.s f3, f13, f21, f31, dyn # perform operation
fnmsub.s f3, f13, f21, f31, rdn # perform operation
fnmsub.s f3, f13, f21, f31, rmm # perform operation
fnmsub.s f3, f13, f21, f31, rne # perform operation
fnmsub.s f3, f13, f21, f31, rtz # perform operation
fnmsub.s f3, f13, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xfee4d3ba2cc09573 # load x3 with value 0xfee4d3ba2cc09573
sw x3, 0(x2) # store 0xfee4d3ba2cc09573 in memory
flw f21, 0(x2) # load 0xfee4d3ba2cc09573 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmsub.s f19, f18, f21, f14, dyn # perform operation
fnmsub.s f19, f18, f21, f14, rdn # perform operation
fnmsub.s f19, f18, f21, f14, rmm # perform operation
fnmsub.s f19, f18, f21, f14, rne # perform operation
fnmsub.s f19, f18, f21, f14, rtz # perform operation
fnmsub.s f19, f18, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x83d49e69e11ef5d8 # load x3 with value 0x83d49e69e11ef5d8
sw x3, 0(x2) # store 0x83d49e69e11ef5d8 in memory
flw f5, 0(x2) # load 0x83d49e69e11ef5d8 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmsub.s f18, f19, f5, f31, dyn # perform operation
fnmsub.s f18, f19, f5, f31, rdn # perform operation
fnmsub.s f18, f19, f5, f31, rmm # perform operation
fnmsub.s f18, f19, f5, f31, rne # perform operation
fnmsub.s f18, f19, f5, f31, rtz # perform operation
fnmsub.s f18, f19, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x7066ac96bff963d1 # load x3 with value 0x7066ac96bff963d1
sw x3, 0(x2) # store 0x7066ac96bff963d1 in memory
flw f25, 0(x2) # load 0x7066ac96bff963d1 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f15, f22, f25, f27, dyn # perform operation
fnmsub.s f15, f22, f25, f27, rdn # perform operation
fnmsub.s f15, f22, f25, f27, rmm # perform operation
fnmsub.s f15, f22, f25, f27, rne # perform operation
fnmsub.s f15, f22, f25, f27, rtz # perform operation
fnmsub.s f15, f22, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f22, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f22, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f22, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f22, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f22, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0xc7e3bc3e3248188a # load x3 with value 0xc7e3bc3e3248188a
sw x3, 0(x2) # store 0xc7e3bc3e3248188a in memory
flw f8, 0(x2) # load 0xc7e3bc3e3248188a from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f2, f16, f8, f22, dyn # perform operation
fnmsub.s f2, f16, f8, f22, rdn # perform operation
fnmsub.s f2, f16, f8, f22, rmm # perform operation
fnmsub.s f2, f16, f8, f22, rne # perform operation
fnmsub.s f2, f16, f8, f22, rtz # perform operation
fnmsub.s f2, f16, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f16, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xfe85711148976753 # load x3 with value 0xfe85711148976753
sw x3, 0(x2) # store 0xfe85711148976753 in memory
flw f5, 0(x2) # load 0xfe85711148976753 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmsub.s f2, f18, f5, f14, dyn # perform operation
fnmsub.s f2, f18, f5, f14, rdn # perform operation
fnmsub.s f2, f18, f5, f14, rmm # perform operation
fnmsub.s f2, f18, f5, f14, rne # perform operation
fnmsub.s f2, f18, f5, f14, rtz # perform operation
fnmsub.s f2, f18, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xbd06175896bd425 # load x3 with value 0xbd06175896bd425
sw x3, 0(x2) # store 0xbd06175896bd425 in memory
flw f29, 0(x2) # load 0xbd06175896bd425 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fnmsub.s f26, f17, f29, f12, dyn # perform operation
fnmsub.s f26, f17, f29, f12, rdn # perform operation
fnmsub.s f26, f17, f29, f12, rmm # perform operation
fnmsub.s f26, f17, f29, f12, rne # perform operation
fnmsub.s f26, f17, f29, f12, rtz # perform operation
fnmsub.s f26, f17, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0xea143b768969b42a # load x3 with value 0xea143b768969b42a
sw x3, 0(x2) # store 0xea143b768969b42a in memory
flw f15, 0(x2) # load 0xea143b768969b42a from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fnmsub.s f8, f20, f15, f2, dyn # perform operation
fnmsub.s f8, f20, f15, f2, rdn # perform operation
fnmsub.s f8, f20, f15, f2, rmm # perform operation
fnmsub.s f8, f20, f15, f2, rne # perform operation
fnmsub.s f8, f20, f15, f2, rtz # perform operation
fnmsub.s f8, f20, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x3a654daf96af6f98 # load x3 with value 0x3a654daf96af6f98
sw x3, 0(x2) # store 0x3a654daf96af6f98 in memory
flw f23, 0(x2) # load 0x3a654daf96af6f98 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f8, f14, f23, f30, dyn # perform operation
fnmsub.s f8, f14, f23, f30, rdn # perform operation
fnmsub.s f8, f14, f23, f30, rmm # perform operation
fnmsub.s f8, f14, f23, f30, rne # perform operation
fnmsub.s f8, f14, f23, f30, rtz # perform operation
fnmsub.s f8, f14, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0xe889b239fccd3788 # load x3 with value 0xe889b239fccd3788
sw x3, 0(x2) # store 0xe889b239fccd3788 in memory
flw f17, 0(x2) # load 0xe889b239fccd3788 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmsub.s f20, f5, f17, f28, dyn # perform operation
fnmsub.s f20, f5, f17, f28, rdn # perform operation
fnmsub.s f20, f5, f17, f28, rmm # perform operation
fnmsub.s f20, f5, f17, f28, rne # perform operation
fnmsub.s f20, f5, f17, f28, rtz # perform operation
fnmsub.s f20, f5, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x228855896e2f1aef # load x3 with value 0x228855896e2f1aef
sw x3, 0(x2) # store 0x228855896e2f1aef in memory
flw f23, 0(x2) # load 0x228855896e2f1aef from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmsub.s f28, f26, f23, f16, dyn # perform operation
fnmsub.s f28, f26, f23, f16, rdn # perform operation
fnmsub.s f28, f26, f23, f16, rmm # perform operation
fnmsub.s f28, f26, f23, f16, rne # perform operation
fnmsub.s f28, f26, f23, f16, rtz # perform operation
fnmsub.s f28, f26, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0xb5f541a37f5234f9 # load x3 with value 0xb5f541a37f5234f9
sw x3, 0(x2) # store 0xb5f541a37f5234f9 in memory
flw f5, 0(x2) # load 0xb5f541a37f5234f9 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fnmsub.s f7, f13, f5, f3, dyn # perform operation
fnmsub.s f7, f13, f5, f3, rdn # perform operation
fnmsub.s f7, f13, f5, f3, rmm # perform operation
fnmsub.s f7, f13, f5, f3, rne # perform operation
fnmsub.s f7, f13, f5, f3, rtz # perform operation
fnmsub.s f7, f13, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f13, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x41173ee216c02155 # load x3 with value 0x41173ee216c02155
sw x3, 0(x2) # store 0x41173ee216c02155 in memory
flw f1, 0(x2) # load 0x41173ee216c02155 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmsub.s f3, f19, f1, f22, dyn # perform operation
fnmsub.s f3, f19, f1, f22, rdn # perform operation
fnmsub.s f3, f19, f1, f22, rmm # perform operation
fnmsub.s f3, f19, f1, f22, rne # perform operation
fnmsub.s f3, f19, f1, f22, rtz # perform operation
fnmsub.s f3, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xd174251a26890537 # load x3 with value 0xd174251a26890537
sw x3, 0(x2) # store 0xd174251a26890537 in memory
flw f6, 0(x2) # load 0xd174251a26890537 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f2, f18, f6, f11, dyn # perform operation
fnmsub.s f2, f18, f6, f11, rdn # perform operation
fnmsub.s f2, f18, f6, f11, rmm # perform operation
fnmsub.s f2, f18, f6, f11, rne # perform operation
fnmsub.s f2, f18, f6, f11, rtz # perform operation
fnmsub.s f2, f18, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xe7d21d90b85e6472 # load x3 with value 0xe7d21d90b85e6472
sw x3, 0(x2) # store 0xe7d21d90b85e6472 in memory
flw f29, 0(x2) # load 0xe7d21d90b85e6472 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmsub.s f6, f1, f29, f26, dyn # perform operation
fnmsub.s f6, f1, f29, f26, rdn # perform operation
fnmsub.s f6, f1, f29, f26, rmm # perform operation
fnmsub.s f6, f1, f29, f26, rne # perform operation
fnmsub.s f6, f1, f29, f26, rtz # perform operation
fnmsub.s f6, f1, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xe95c1b3bea3f5566 # load x3 with value 0xe95c1b3bea3f5566
sw x3, 0(x2) # store 0xe95c1b3bea3f5566 in memory
flw f11, 0(x2) # load 0xe95c1b3bea3f5566 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmsub.s f12, f7, f11, f20, dyn # perform operation
fnmsub.s f12, f7, f11, f20, rdn # perform operation
fnmsub.s f12, f7, f11, f20, rmm # perform operation
fnmsub.s f12, f7, f11, f20, rne # perform operation
fnmsub.s f12, f7, f11, f20, rtz # perform operation
fnmsub.s f12, f7, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xc1bcaf1fd41012c5 # load x3 with value 0xc1bcaf1fd41012c5
sw x3, 0(x2) # store 0xc1bcaf1fd41012c5 in memory
flw f28, 0(x2) # load 0xc1bcaf1fd41012c5 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fnmsub.s f17, f8, f28, f20, dyn # perform operation
fnmsub.s f17, f8, f28, f20, rdn # perform operation
fnmsub.s f17, f8, f28, f20, rmm # perform operation
fnmsub.s f17, f8, f28, f20, rne # perform operation
fnmsub.s f17, f8, f28, f20, rtz # perform operation
fnmsub.s f17, f8, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f8, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x1e54a630be858455 # load x3 with value 0x1e54a630be858455
sw x3, 0(x2) # store 0x1e54a630be858455 in memory
flw f1, 0(x2) # load 0x1e54a630be858455 from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmsub.s f20, f17, f1, f31, dyn # perform operation
fnmsub.s f20, f17, f1, f31, rdn # perform operation
fnmsub.s f20, f17, f1, f31, rmm # perform operation
fnmsub.s f20, f17, f1, f31, rne # perform operation
fnmsub.s f20, f17, f1, f31, rtz # perform operation
fnmsub.s f20, f17, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f17, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xc18c8e3322ff1b79 # load x3 with value 0xc18c8e3322ff1b79
sw x3, 0(x2) # store 0xc18c8e3322ff1b79 in memory
flw f21, 0(x2) # load 0xc18c8e3322ff1b79 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f24, f8, f21, f14, dyn # perform operation
fnmsub.s f24, f8, f21, f14, rdn # perform operation
fnmsub.s f24, f8, f21, f14, rmm # perform operation
fnmsub.s f24, f8, f21, f14, rne # perform operation
fnmsub.s f24, f8, f21, f14, rtz # perform operation
fnmsub.s f24, f8, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f8, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xd59411561c8eb15d # load x3 with value 0xd59411561c8eb15d
sw x3, 0(x2) # store 0xd59411561c8eb15d in memory
flw f15, 0(x2) # load 0xd59411561c8eb15d from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f13, f22, f15, f9, dyn # perform operation
fnmsub.s f13, f22, f15, f9, rdn # perform operation
fnmsub.s f13, f22, f15, f9, rmm # perform operation
fnmsub.s f13, f22, f15, f9, rne # perform operation
fnmsub.s f13, f22, f15, f9, rtz # perform operation
fnmsub.s f13, f22, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x4efc6b8c03efc092 # load x3 with value 0x4efc6b8c03efc092
sw x3, 0(x2) # store 0x4efc6b8c03efc092 in memory
flw f16, 0(x2) # load 0x4efc6b8c03efc092 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmsub.s f20, f15, f16, f30, dyn # perform operation
fnmsub.s f20, f15, f16, f30, rdn # perform operation
fnmsub.s f20, f15, f16, f30, rmm # perform operation
fnmsub.s f20, f15, f16, f30, rne # perform operation
fnmsub.s f20, f15, f16, f30, rtz # perform operation
fnmsub.s f20, f15, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xebfb59c3c58343e6 # load x3 with value 0xebfb59c3c58343e6
sw x3, 0(x2) # store 0xebfb59c3c58343e6 in memory
flw f6, 0(x2) # load 0xebfb59c3c58343e6 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmsub.s f20, f12, f6, f2, dyn # perform operation
fnmsub.s f20, f12, f6, f2, rdn # perform operation
fnmsub.s f20, f12, f6, f2, rmm # perform operation
fnmsub.s f20, f12, f6, f2, rne # perform operation
fnmsub.s f20, f12, f6, f2, rtz # perform operation
fnmsub.s f20, f12, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x59eb46ac959f8158 # load x3 with value 0x59eb46ac959f8158
sw x3, 0(x2) # store 0x59eb46ac959f8158 in memory
flw f3, 0(x2) # load 0x59eb46ac959f8158 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmsub.s f22, f13, f3, f15, dyn # perform operation
fnmsub.s f22, f13, f3, f15, rdn # perform operation
fnmsub.s f22, f13, f3, f15, rmm # perform operation
fnmsub.s f22, f13, f3, f15, rne # perform operation
fnmsub.s f22, f13, f3, f15, rtz # perform operation
fnmsub.s f22, f13, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x36d4b8fd36e16f58 # load x3 with value 0x36d4b8fd36e16f58
sw x3, 0(x2) # store 0x36d4b8fd36e16f58 in memory
flw f12, 0(x2) # load 0x36d4b8fd36e16f58 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f16, f2, f12, f23, dyn # perform operation
fnmsub.s f16, f2, f12, f23, rdn # perform operation
fnmsub.s f16, f2, f12, f23, rmm # perform operation
fnmsub.s f16, f2, f12, f23, rne # perform operation
fnmsub.s f16, f2, f12, f23, rtz # perform operation
fnmsub.s f16, f2, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xf06489e60302c53 # load x3 with value 0xf06489e60302c53
sw x3, 0(x2) # store 0xf06489e60302c53 in memory
flw f1, 0(x2) # load 0xf06489e60302c53 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmsub.s f22, f28, f1, f18, dyn # perform operation
fnmsub.s f22, f28, f1, f18, rdn # perform operation
fnmsub.s f22, f28, f1, f18, rmm # perform operation
fnmsub.s f22, f28, f1, f18, rne # perform operation
fnmsub.s f22, f28, f1, f18, rtz # perform operation
fnmsub.s f22, f28, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f28, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x76c0e96f92cbeab4 # load x3 with value 0x76c0e96f92cbeab4
sw x3, 0(x2) # store 0x76c0e96f92cbeab4 in memory
flw f26, 0(x2) # load 0x76c0e96f92cbeab4 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmsub.s f28, f8, f26, f30, dyn # perform operation
fnmsub.s f28, f8, f26, f30, rdn # perform operation
fnmsub.s f28, f8, f26, f30, rmm # perform operation
fnmsub.s f28, f8, f26, f30, rne # perform operation
fnmsub.s f28, f8, f26, f30, rtz # perform operation
fnmsub.s f28, f8, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x74f5c40caf7cc312 # load x3 with value 0x74f5c40caf7cc312
sw x3, 0(x2) # store 0x74f5c40caf7cc312 in memory
flw f8, 0(x2) # load 0x74f5c40caf7cc312 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f20, f17, f8, f12, dyn # perform operation
fnmsub.s f20, f17, f8, f12, rdn # perform operation
fnmsub.s f20, f17, f8, f12, rmm # perform operation
fnmsub.s f20, f17, f8, f12, rne # perform operation
fnmsub.s f20, f17, f8, f12, rtz # perform operation
fnmsub.s f20, f17, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f17, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f17, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f17, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f17, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f17, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x27d801a84189f499 # load x3 with value 0x27d801a84189f499
sw x3, 0(x2) # store 0x27d801a84189f499 in memory
flw f22, 0(x2) # load 0x27d801a84189f499 from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fnmsub.s f1, f20, f22, f10, dyn # perform operation
fnmsub.s f1, f20, f22, f10, rdn # perform operation
fnmsub.s f1, f20, f22, f10, rmm # perform operation
fnmsub.s f1, f20, f22, f10, rne # perform operation
fnmsub.s f1, f20, f22, f10, rtz # perform operation
fnmsub.s f1, f20, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x64b3633f9151be50 # load x3 with value 0x64b3633f9151be50
sw x3, 0(x2) # store 0x64b3633f9151be50 in memory
flw f28, 0(x2) # load 0x64b3633f9151be50 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmsub.s f5, f29, f28, f3, dyn # perform operation
fnmsub.s f5, f29, f28, f3, rdn # perform operation
fnmsub.s f5, f29, f28, f3, rmm # perform operation
fnmsub.s f5, f29, f28, f3, rne # perform operation
fnmsub.s f5, f29, f28, f3, rtz # perform operation
fnmsub.s f5, f29, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f28, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x48156fa7382ad979 # load x3 with value 0x48156fa7382ad979
sw x3, 0(x2) # store 0x48156fa7382ad979 in memory
flw f22, 0(x2) # load 0x48156fa7382ad979 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f14, f5, f22, f24, dyn # perform operation
fnmsub.s f14, f5, f22, f24, rdn # perform operation
fnmsub.s f14, f5, f22, f24, rmm # perform operation
fnmsub.s f14, f5, f22, f24, rne # perform operation
fnmsub.s f14, f5, f22, f24, rtz # perform operation
fnmsub.s f14, f5, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xe2ce35faf674d2f8 # load x3 with value 0xe2ce35faf674d2f8
sw x3, 0(x2) # store 0xe2ce35faf674d2f8 in memory
flw f26, 0(x2) # load 0xe2ce35faf674d2f8 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmsub.s f1, f29, f26, f15, dyn # perform operation
fnmsub.s f1, f29, f26, f15, rdn # perform operation
fnmsub.s f1, f29, f26, f15, rmm # perform operation
fnmsub.s f1, f29, f26, f15, rne # perform operation
fnmsub.s f1, f29, f26, f15, rtz # perform operation
fnmsub.s f1, f29, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f29, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x3fda45befe2a0fd0 # load x3 with value 0x3fda45befe2a0fd0
sw x3, 0(x2) # store 0x3fda45befe2a0fd0 in memory
flw f18, 0(x2) # load 0x3fda45befe2a0fd0 from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmsub.s f15, f3, f18, f21, dyn # perform operation
fnmsub.s f15, f3, f18, f21, rdn # perform operation
fnmsub.s f15, f3, f18, f21, rmm # perform operation
fnmsub.s f15, f3, f18, f21, rne # perform operation
fnmsub.s f15, f3, f18, f21, rtz # perform operation
fnmsub.s f15, f3, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xd4affe056efd24f0 # load x3 with value 0xd4affe056efd24f0
sw x3, 0(x2) # store 0xd4affe056efd24f0 in memory
flw f25, 0(x2) # load 0xd4affe056efd24f0 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmsub.s f8, f9, f25, f6, dyn # perform operation
fnmsub.s f8, f9, f25, f6, rdn # perform operation
fnmsub.s f8, f9, f25, f6, rmm # perform operation
fnmsub.s f8, f9, f25, f6, rne # perform operation
fnmsub.s f8, f9, f25, f6, rtz # perform operation
fnmsub.s f8, f9, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x1db6a8a08fc2ad89 # load x3 with value 0x1db6a8a08fc2ad89
sw x3, 0(x2) # store 0x1db6a8a08fc2ad89 in memory
flw f25, 0(x2) # load 0x1db6a8a08fc2ad89 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fnmsub.s f15, f18, f25, f17, dyn # perform operation
fnmsub.s f15, f18, f25, f17, rdn # perform operation
fnmsub.s f15, f18, f25, f17, rmm # perform operation
fnmsub.s f15, f18, f25, f17, rne # perform operation
fnmsub.s f15, f18, f25, f17, rtz # perform operation
fnmsub.s f15, f18, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xf0a054b15a2db98a # load x3 with value 0xf0a054b15a2db98a
sw x3, 0(x2) # store 0xf0a054b15a2db98a in memory
flw f14, 0(x2) # load 0xf0a054b15a2db98a from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmsub.s f26, f27, f14, f23, dyn # perform operation
fnmsub.s f26, f27, f14, f23, rdn # perform operation
fnmsub.s f26, f27, f14, f23, rmm # perform operation
fnmsub.s f26, f27, f14, f23, rne # perform operation
fnmsub.s f26, f27, f14, f23, rtz # perform operation
fnmsub.s f26, f27, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xeb4185ff6899cac8 # load x3 with value 0xeb4185ff6899cac8
sw x3, 0(x2) # store 0xeb4185ff6899cac8 in memory
flw f18, 0(x2) # load 0xeb4185ff6899cac8 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmsub.s f27, f2, f18, f12, dyn # perform operation
fnmsub.s f27, f2, f18, f12, rdn # perform operation
fnmsub.s f27, f2, f18, f12, rmm # perform operation
fnmsub.s f27, f2, f18, f12, rne # perform operation
fnmsub.s f27, f2, f18, f12, rtz # perform operation
fnmsub.s f27, f2, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x84de5387ec790bef # load x3 with value 0x84de5387ec790bef
sw x3, 0(x2) # store 0x84de5387ec790bef in memory
flw f23, 0(x2) # load 0x84de5387ec790bef from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmsub.s f9, f22, f23, f10, dyn # perform operation
fnmsub.s f9, f22, f23, f10, rdn # perform operation
fnmsub.s f9, f22, f23, f10, rmm # perform operation
fnmsub.s f9, f22, f23, f10, rne # perform operation
fnmsub.s f9, f22, f23, f10, rtz # perform operation
fnmsub.s f9, f22, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x873d25e8c3f0f66e # load x3 with value 0x873d25e8c3f0f66e
sw x3, 0(x2) # store 0x873d25e8c3f0f66e in memory
flw f1, 0(x2) # load 0x873d25e8c3f0f66e from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmsub.s f31, f20, f1, f27, dyn # perform operation
fnmsub.s f31, f20, f1, f27, rdn # perform operation
fnmsub.s f31, f20, f1, f27, rmm # perform operation
fnmsub.s f31, f20, f1, f27, rne # perform operation
fnmsub.s f31, f20, f1, f27, rtz # perform operation
fnmsub.s f31, f20, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f20, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x2d5479101566475b # load x3 with value 0x2d5479101566475b
sw x3, 0(x2) # store 0x2d5479101566475b in memory
flw f5, 0(x2) # load 0x2d5479101566475b from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmsub.s f31, f20, f5, f17, dyn # perform operation
fnmsub.s f31, f20, f5, f17, rdn # perform operation
fnmsub.s f31, f20, f5, f17, rmm # perform operation
fnmsub.s f31, f20, f5, f17, rne # perform operation
fnmsub.s f31, f20, f5, f17, rtz # perform operation
fnmsub.s f31, f20, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f20, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f20, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f20, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f20, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f20, f5, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xa6cf77b50650154a # load x3 with value 0xa6cf77b50650154a
sw x3, 0(x2) # store 0xa6cf77b50650154a in memory
flw f5, 0(x2) # load 0xa6cf77b50650154a from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmsub.s f22, f8, f5, f31, dyn # perform operation
fnmsub.s f22, f8, f5, f31, rdn # perform operation
fnmsub.s f22, f8, f5, f31, rmm # perform operation
fnmsub.s f22, f8, f5, f31, rne # perform operation
fnmsub.s f22, f8, f5, f31, rtz # perform operation
fnmsub.s f22, f8, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f8, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xaff1419aeeaa50dd # load x3 with value 0xaff1419aeeaa50dd
sw x3, 0(x2) # store 0xaff1419aeeaa50dd in memory
flw f15, 0(x2) # load 0xaff1419aeeaa50dd from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f25, f7, f15, f3, dyn # perform operation
fnmsub.s f25, f7, f15, f3, rdn # perform operation
fnmsub.s f25, f7, f15, f3, rmm # perform operation
fnmsub.s f25, f7, f15, f3, rne # perform operation
fnmsub.s f25, f7, f15, f3, rtz # perform operation
fnmsub.s f25, f7, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x7d40a89f87578d4f # load x3 with value 0x7d40a89f87578d4f
sw x3, 0(x2) # store 0x7d40a89f87578d4f in memory
flw f28, 0(x2) # load 0x7d40a89f87578d4f from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fnmsub.s f12, f10, f28, f17, dyn # perform operation
fnmsub.s f12, f10, f28, f17, rdn # perform operation
fnmsub.s f12, f10, f28, f17, rmm # perform operation
fnmsub.s f12, f10, f28, f17, rne # perform operation
fnmsub.s f12, f10, f28, f17, rtz # perform operation
fnmsub.s f12, f10, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x884e873593561044 # load x3 with value 0x884e873593561044
sw x3, 0(x2) # store 0x884e873593561044 in memory
flw f15, 0(x2) # load 0x884e873593561044 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fnmsub.s f16, f12, f15, f24, dyn # perform operation
fnmsub.s f16, f12, f15, f24, rdn # perform operation
fnmsub.s f16, f12, f15, f24, rmm # perform operation
fnmsub.s f16, f12, f15, f24, rne # perform operation
fnmsub.s f16, f12, f15, f24, rtz # perform operation
fnmsub.s f16, f12, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f12, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xf263d2403f791eac # load x3 with value 0xf263d2403f791eac
sw x3, 0(x2) # store 0xf263d2403f791eac in memory
flw f7, 0(x2) # load 0xf263d2403f791eac from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f29, f14, f7, f30, dyn # perform operation
fnmsub.s f29, f14, f7, f30, rdn # perform operation
fnmsub.s f29, f14, f7, f30, rmm # perform operation
fnmsub.s f29, f14, f7, f30, rne # perform operation
fnmsub.s f29, f14, f7, f30, rtz # perform operation
fnmsub.s f29, f14, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x93ee947ae639b2f1 # load x3 with value 0x93ee947ae639b2f1
sw x3, 0(x2) # store 0x93ee947ae639b2f1 in memory
flw f19, 0(x2) # load 0x93ee947ae639b2f1 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f11, f3, f19, f31, dyn # perform operation
fnmsub.s f11, f3, f19, f31, rdn # perform operation
fnmsub.s f11, f3, f19, f31, rmm # perform operation
fnmsub.s f11, f3, f19, f31, rne # perform operation
fnmsub.s f11, f3, f19, f31, rtz # perform operation
fnmsub.s f11, f3, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f3, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xd06da11e87bc1d1f # load x3 with value 0xd06da11e87bc1d1f
sw x3, 0(x2) # store 0xd06da11e87bc1d1f in memory
flw f5, 0(x2) # load 0xd06da11e87bc1d1f from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmsub.s f6, f17, f5, f23, dyn # perform operation
fnmsub.s f6, f17, f5, f23, rdn # perform operation
fnmsub.s f6, f17, f5, f23, rmm # perform operation
fnmsub.s f6, f17, f5, f23, rne # perform operation
fnmsub.s f6, f17, f5, f23, rtz # perform operation
fnmsub.s f6, f17, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xa0a85280cdc8d90a # load x3 with value 0xa0a85280cdc8d90a
sw x3, 0(x2) # store 0xa0a85280cdc8d90a in memory
flw f9, 0(x2) # load 0xa0a85280cdc8d90a from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmsub.s f1, f7, f9, f8, dyn # perform operation
fnmsub.s f1, f7, f9, f8, rdn # perform operation
fnmsub.s f1, f7, f9, f8, rmm # perform operation
fnmsub.s f1, f7, f9, f8, rne # perform operation
fnmsub.s f1, f7, f9, f8, rtz # perform operation
fnmsub.s f1, f7, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f7, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xcdb533aa7e546cf5 # load x3 with value 0xcdb533aa7e546cf5
sw x3, 0(x2) # store 0xcdb533aa7e546cf5 in memory
flw f10, 0(x2) # load 0xcdb533aa7e546cf5 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmsub.s f23, f29, f10, f19, dyn # perform operation
fnmsub.s f23, f29, f10, f19, rdn # perform operation
fnmsub.s f23, f29, f10, f19, rmm # perform operation
fnmsub.s f23, f29, f10, f19, rne # perform operation
fnmsub.s f23, f29, f10, f19, rtz # perform operation
fnmsub.s f23, f29, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f29, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x56472eaecd6cbd88 # load x3 with value 0x56472eaecd6cbd88
sw x3, 0(x2) # store 0x56472eaecd6cbd88 in memory
flw f3, 0(x2) # load 0x56472eaecd6cbd88 from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmsub.s f23, f1, f3, f28, dyn # perform operation
fnmsub.s f23, f1, f3, f28, rdn # perform operation
fnmsub.s f23, f1, f3, f28, rmm # perform operation
fnmsub.s f23, f1, f3, f28, rne # perform operation
fnmsub.s f23, f1, f3, f28, rtz # perform operation
fnmsub.s f23, f1, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xa4e5ca74e90f7b54 # load x3 with value 0xa4e5ca74e90f7b54
sw x3, 0(x2) # store 0xa4e5ca74e90f7b54 in memory
flw f19, 0(x2) # load 0xa4e5ca74e90f7b54 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmsub.s f10, f25, f19, f27, dyn # perform operation
fnmsub.s f10, f25, f19, f27, rdn # perform operation
fnmsub.s f10, f25, f19, f27, rmm # perform operation
fnmsub.s f10, f25, f19, f27, rne # perform operation
fnmsub.s f10, f25, f19, f27, rtz # perform operation
fnmsub.s f10, f25, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x9b90b51c6287f0e1 # load x3 with value 0x9b90b51c6287f0e1
sw x3, 0(x2) # store 0x9b90b51c6287f0e1 in memory
flw f26, 0(x2) # load 0x9b90b51c6287f0e1 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmsub.s f5, f7, f26, f13, dyn # perform operation
fnmsub.s f5, f7, f26, f13, rdn # perform operation
fnmsub.s f5, f7, f26, f13, rmm # perform operation
fnmsub.s f5, f7, f26, f13, rne # perform operation
fnmsub.s f5, f7, f26, f13, rtz # perform operation
fnmsub.s f5, f7, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x4e87fc1605921d5 # load x3 with value 0x4e87fc1605921d5
sw x3, 0(x2) # store 0x4e87fc1605921d5 in memory
flw f20, 0(x2) # load 0x4e87fc1605921d5 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmsub.s f1, f12, f20, f22, dyn # perform operation
fnmsub.s f1, f12, f20, f22, rdn # perform operation
fnmsub.s f1, f12, f20, f22, rmm # perform operation
fnmsub.s f1, f12, f20, f22, rne # perform operation
fnmsub.s f1, f12, f20, f22, rtz # perform operation
fnmsub.s f1, f12, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f12, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xe96f3f7be112e996 # load x3 with value 0xe96f3f7be112e996
sw x3, 0(x2) # store 0xe96f3f7be112e996 in memory
flw f15, 0(x2) # load 0xe96f3f7be112e996 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f11, f27, f15, f12, dyn # perform operation
fnmsub.s f11, f27, f15, f12, rdn # perform operation
fnmsub.s f11, f27, f15, f12, rmm # perform operation
fnmsub.s f11, f27, f15, f12, rne # perform operation
fnmsub.s f11, f27, f15, f12, rtz # perform operation
fnmsub.s f11, f27, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x4bcb37e6e5d7a1d0 # load x3 with value 0x4bcb37e6e5d7a1d0
sw x3, 0(x2) # store 0x4bcb37e6e5d7a1d0 in memory
flw f26, 0(x2) # load 0x4bcb37e6e5d7a1d0 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmsub.s f6, f23, f26, f30, dyn # perform operation
fnmsub.s f6, f23, f26, f30, rdn # perform operation
fnmsub.s f6, f23, f26, f30, rmm # perform operation
fnmsub.s f6, f23, f26, f30, rne # perform operation
fnmsub.s f6, f23, f26, f30, rtz # perform operation
fnmsub.s f6, f23, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f23, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f23, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xe77e039d10d6d8d7 # load x3 with value 0xe77e039d10d6d8d7
sw x3, 0(x2) # store 0xe77e039d10d6d8d7 in memory
flw f25, 0(x2) # load 0xe77e039d10d6d8d7 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmsub.s f26, f9, f25, f17, dyn # perform operation
fnmsub.s f26, f9, f25, f17, rdn # perform operation
fnmsub.s f26, f9, f25, f17, rmm # perform operation
fnmsub.s f26, f9, f25, f17, rne # perform operation
fnmsub.s f26, f9, f25, f17, rtz # perform operation
fnmsub.s f26, f9, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x417f460bc43c569f # load x3 with value 0x417f460bc43c569f
sw x3, 0(x2) # store 0x417f460bc43c569f in memory
flw f24, 0(x2) # load 0x417f460bc43c569f from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmsub.s f31, f22, f24, f28, dyn # perform operation
fnmsub.s f31, f22, f24, f28, rdn # perform operation
fnmsub.s f31, f22, f24, f28, rmm # perform operation
fnmsub.s f31, f22, f24, f28, rne # perform operation
fnmsub.s f31, f22, f24, f28, rtz # perform operation
fnmsub.s f31, f22, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x6448396292cf51a # load x3 with value 0x6448396292cf51a
sw x3, 0(x2) # store 0x6448396292cf51a in memory
flw f22, 0(x2) # load 0x6448396292cf51a from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmsub.s f5, f24, f22, f15, dyn # perform operation
fnmsub.s f5, f24, f22, f15, rdn # perform operation
fnmsub.s f5, f24, f22, f15, rmm # perform operation
fnmsub.s f5, f24, f22, f15, rne # perform operation
fnmsub.s f5, f24, f22, f15, rtz # perform operation
fnmsub.s f5, f24, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x49e1efb62192277c # load x3 with value 0x49e1efb62192277c
sw x3, 0(x2) # store 0x49e1efb62192277c in memory
flw f9, 0(x2) # load 0x49e1efb62192277c from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmsub.s f18, f24, f9, f16, dyn # perform operation
fnmsub.s f18, f24, f9, f16, rdn # perform operation
fnmsub.s f18, f24, f9, f16, rmm # perform operation
fnmsub.s f18, f24, f9, f16, rne # perform operation
fnmsub.s f18, f24, f9, f16, rtz # perform operation
fnmsub.s f18, f24, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xbcfe6d4c298b5052 # load x3 with value 0xbcfe6d4c298b5052
sw x3, 0(x2) # store 0xbcfe6d4c298b5052 in memory
flw f19, 0(x2) # load 0xbcfe6d4c298b5052 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmsub.s f29, f3, f19, f27, dyn # perform operation
fnmsub.s f29, f3, f19, f27, rdn # perform operation
fnmsub.s f29, f3, f19, f27, rmm # perform operation
fnmsub.s f29, f3, f19, f27, rne # perform operation
fnmsub.s f29, f3, f19, f27, rtz # perform operation
fnmsub.s f29, f3, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x22e9be2bdbf2822d # load x3 with value 0x22e9be2bdbf2822d
sw x3, 0(x2) # store 0x22e9be2bdbf2822d in memory
flw f30, 0(x2) # load 0x22e9be2bdbf2822d from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmsub.s f21, f27, f30, f20, dyn # perform operation
fnmsub.s f21, f27, f30, f20, rdn # perform operation
fnmsub.s f21, f27, f30, f20, rmm # perform operation
fnmsub.s f21, f27, f30, f20, rne # perform operation
fnmsub.s f21, f27, f30, f20, rtz # perform operation
fnmsub.s f21, f27, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xf73d8eb8807ca5dc # load x3 with value 0xf73d8eb8807ca5dc
sw x3, 0(x2) # store 0xf73d8eb8807ca5dc in memory
flw f27, 0(x2) # load 0xf73d8eb8807ca5dc from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmsub.s f17, f1, f27, f16, dyn # perform operation
fnmsub.s f17, f1, f27, f16, rdn # perform operation
fnmsub.s f17, f1, f27, f16, rmm # perform operation
fnmsub.s f17, f1, f27, f16, rne # perform operation
fnmsub.s f17, f1, f27, f16, rtz # perform operation
fnmsub.s f17, f1, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xfae0c968b6796cfa # load x3 with value 0xfae0c968b6796cfa
sw x3, 0(x2) # store 0xfae0c968b6796cfa in memory
flw f18, 0(x2) # load 0xfae0c968b6796cfa from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fnmsub.s f21, f8, f18, f11, dyn # perform operation
fnmsub.s f21, f8, f18, f11, rdn # perform operation
fnmsub.s f21, f8, f18, f11, rmm # perform operation
fnmsub.s f21, f8, f18, f11, rne # perform operation
fnmsub.s f21, f8, f18, f11, rtz # perform operation
fnmsub.s f21, f8, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f8, f18, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x5b5d3845b0886369 # load x3 with value 0x5b5d3845b0886369
sw x3, 0(x2) # store 0x5b5d3845b0886369 in memory
flw f6, 0(x2) # load 0x5b5d3845b0886369 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fnmsub.s f10, f1, f6, f29, dyn # perform operation
fnmsub.s f10, f1, f6, f29, rdn # perform operation
fnmsub.s f10, f1, f6, f29, rmm # perform operation
fnmsub.s f10, f1, f6, f29, rne # perform operation
fnmsub.s f10, f1, f6, f29, rtz # perform operation
fnmsub.s f10, f1, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x693f39a56fa4a8ec # load x3 with value 0x693f39a56fa4a8ec
sw x3, 0(x2) # store 0x693f39a56fa4a8ec in memory
flw f29, 0(x2) # load 0x693f39a56fa4a8ec from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmsub.s f28, f19, f29, f13, dyn # perform operation
fnmsub.s f28, f19, f29, f13, rdn # perform operation
fnmsub.s f28, f19, f29, f13, rmm # perform operation
fnmsub.s f28, f19, f29, f13, rne # perform operation
fnmsub.s f28, f19, f29, f13, rtz # perform operation
fnmsub.s f28, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f19, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xf74033cc538aef09 # load x3 with value 0xf74033cc538aef09
sw x3, 0(x2) # store 0xf74033cc538aef09 in memory
flw f20, 0(x2) # load 0xf74033cc538aef09 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmsub.s f23, f12, f20, f11, dyn # perform operation
fnmsub.s f23, f12, f20, f11, rdn # perform operation
fnmsub.s f23, f12, f20, f11, rmm # perform operation
fnmsub.s f23, f12, f20, f11, rne # perform operation
fnmsub.s f23, f12, f20, f11, rtz # perform operation
fnmsub.s f23, f12, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x3eb87ffefad25271 # load x3 with value 0x3eb87ffefad25271
sw x3, 0(x2) # store 0x3eb87ffefad25271 in memory
flw f17, 0(x2) # load 0x3eb87ffefad25271 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f19, f11, f17, f1, dyn # perform operation
fnmsub.s f19, f11, f17, f1, rdn # perform operation
fnmsub.s f19, f11, f17, f1, rmm # perform operation
fnmsub.s f19, f11, f17, f1, rne # perform operation
fnmsub.s f19, f11, f17, f1, rtz # perform operation
fnmsub.s f19, f11, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f11, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xd7defcab61f45fcc # load x3 with value 0xd7defcab61f45fcc
sw x3, 0(x2) # store 0xd7defcab61f45fcc in memory
flw f9, 0(x2) # load 0xd7defcab61f45fcc from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmsub.s f31, f20, f9, f3, dyn # perform operation
fnmsub.s f31, f20, f9, f3, rdn # perform operation
fnmsub.s f31, f20, f9, f3, rmm # perform operation
fnmsub.s f31, f20, f9, f3, rne # perform operation
fnmsub.s f31, f20, f9, f3, rtz # perform operation
fnmsub.s f31, f20, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f20, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x9f037aed00b2f587 # load x3 with value 0x9f037aed00b2f587
sw x3, 0(x2) # store 0x9f037aed00b2f587 in memory
flw f13, 0(x2) # load 0x9f037aed00b2f587 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fnmsub.s f25, f23, f13, f1, dyn # perform operation
fnmsub.s f25, f23, f13, f1, rdn # perform operation
fnmsub.s f25, f23, f13, f1, rmm # perform operation
fnmsub.s f25, f23, f13, f1, rne # perform operation
fnmsub.s f25, f23, f13, f1, rtz # perform operation
fnmsub.s f25, f23, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x6ae7b4c5b1c05984 # load x3 with value 0x6ae7b4c5b1c05984
sw x3, 0(x2) # store 0x6ae7b4c5b1c05984 in memory
flw f10, 0(x2) # load 0x6ae7b4c5b1c05984 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fnmsub.s f21, f11, f10, f6, dyn # perform operation
fnmsub.s f21, f11, f10, f6, rdn # perform operation
fnmsub.s f21, f11, f10, f6, rmm # perform operation
fnmsub.s f21, f11, f10, f6, rne # perform operation
fnmsub.s f21, f11, f10, f6, rtz # perform operation
fnmsub.s f21, f11, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f10, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0xc957c943478901e7 # load x3 with value 0xc957c943478901e7
sw x3, 0(x2) # store 0xc957c943478901e7 in memory
flw f1, 0(x2) # load 0xc957c943478901e7 from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmsub.s f10, f13, f1, f14, dyn # perform operation
fnmsub.s f10, f13, f1, f14, rdn # perform operation
fnmsub.s f10, f13, f1, f14, rmm # perform operation
fnmsub.s f10, f13, f1, f14, rne # perform operation
fnmsub.s f10, f13, f1, f14, rtz # perform operation
fnmsub.s f10, f13, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xb5237f600ffab325 # load x3 with value 0xb5237f600ffab325
sw x3, 0(x2) # store 0xb5237f600ffab325 in memory
flw f26, 0(x2) # load 0xb5237f600ffab325 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f5, f23, f26, f11, dyn # perform operation
fnmsub.s f5, f23, f26, f11, rdn # perform operation
fnmsub.s f5, f23, f26, f11, rmm # perform operation
fnmsub.s f5, f23, f26, f11, rne # perform operation
fnmsub.s f5, f23, f26, f11, rtz # perform operation
fnmsub.s f5, f23, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f23, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x84c22daae2e6774b # load x3 with value 0x84c22daae2e6774b
sw x3, 0(x2) # store 0x84c22daae2e6774b in memory
flw f22, 0(x2) # load 0x84c22daae2e6774b from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmsub.s f29, f27, f22, f10, dyn # perform operation
fnmsub.s f29, f27, f22, f10, rdn # perform operation
fnmsub.s f29, f27, f22, f10, rmm # perform operation
fnmsub.s f29, f27, f22, f10, rne # perform operation
fnmsub.s f29, f27, f22, f10, rtz # perform operation
fnmsub.s f29, f27, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xe4b2d17e9b147b6a # load x3 with value 0xe4b2d17e9b147b6a
sw x3, 0(x2) # store 0xe4b2d17e9b147b6a in memory
flw f9, 0(x2) # load 0xe4b2d17e9b147b6a from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f18, f7, f9, f15, dyn # perform operation
fnmsub.s f18, f7, f9, f15, rdn # perform operation
fnmsub.s f18, f7, f9, f15, rmm # perform operation
fnmsub.s f18, f7, f9, f15, rne # perform operation
fnmsub.s f18, f7, f9, f15, rtz # perform operation
fnmsub.s f18, f7, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x3d7d74be138b05cf # load x3 with value 0x3d7d74be138b05cf
sw x3, 0(x2) # store 0x3d7d74be138b05cf in memory
flw f8, 0(x2) # load 0x3d7d74be138b05cf from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmsub.s f23, f17, f8, f24, dyn # perform operation
fnmsub.s f23, f17, f8, f24, rdn # perform operation
fnmsub.s f23, f17, f8, f24, rmm # perform operation
fnmsub.s f23, f17, f8, f24, rne # perform operation
fnmsub.s f23, f17, f8, f24, rtz # perform operation
fnmsub.s f23, f17, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f8, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x7bfe4dc0c44cdbfd # load x3 with value 0x7bfe4dc0c44cdbfd
sw x3, 0(x2) # store 0x7bfe4dc0c44cdbfd in memory
flw f5, 0(x2) # load 0x7bfe4dc0c44cdbfd from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fnmsub.s f14, f12, f5, f23, dyn # perform operation
fnmsub.s f14, f12, f5, f23, rdn # perform operation
fnmsub.s f14, f12, f5, f23, rmm # perform operation
fnmsub.s f14, f12, f5, f23, rne # perform operation
fnmsub.s f14, f12, f5, f23, rtz # perform operation
fnmsub.s f14, f12, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f12, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x4e733f6654da8aec # load x3 with value 0x4e733f6654da8aec
sw x3, 0(x2) # store 0x4e733f6654da8aec in memory
flw f24, 0(x2) # load 0x4e733f6654da8aec from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmsub.s f11, f16, f24, f8, dyn # perform operation
fnmsub.s f11, f16, f24, f8, rdn # perform operation
fnmsub.s f11, f16, f24, f8, rmm # perform operation
fnmsub.s f11, f16, f24, f8, rne # perform operation
fnmsub.s f11, f16, f24, f8, rtz # perform operation
fnmsub.s f11, f16, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x1a2122af90b3276c # load x3 with value 0x1a2122af90b3276c
sw x3, 0(x2) # store 0x1a2122af90b3276c in memory
flw f5, 0(x2) # load 0x1a2122af90b3276c from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmsub.s f7, f23, f5, f9, dyn # perform operation
fnmsub.s f7, f23, f5, f9, rdn # perform operation
fnmsub.s f7, f23, f5, f9, rmm # perform operation
fnmsub.s f7, f23, f5, f9, rne # perform operation
fnmsub.s f7, f23, f5, f9, rtz # perform operation
fnmsub.s f7, f23, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xcbec245307a27bf8 # load x3 with value 0xcbec245307a27bf8
sw x3, 0(x2) # store 0xcbec245307a27bf8 in memory
flw f21, 0(x2) # load 0xcbec245307a27bf8 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f26, f17, f21, f19, dyn # perform operation
fnmsub.s f26, f17, f21, f19, rdn # perform operation
fnmsub.s f26, f17, f21, f19, rmm # perform operation
fnmsub.s f26, f17, f21, f19, rne # perform operation
fnmsub.s f26, f17, f21, f19, rtz # perform operation
fnmsub.s f26, f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x22c49fbeace9259a # load x3 with value 0x22c49fbeace9259a
sw x3, 0(x2) # store 0x22c49fbeace9259a in memory
flw f12, 0(x2) # load 0x22c49fbeace9259a from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f5, f2, f12, f9, dyn # perform operation
fnmsub.s f5, f2, f12, f9, rdn # perform operation
fnmsub.s f5, f2, f12, f9, rmm # perform operation
fnmsub.s f5, f2, f12, f9, rne # perform operation
fnmsub.s f5, f2, f12, f9, rtz # perform operation
fnmsub.s f5, f2, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xad9091169f6ff770 # load x3 with value 0xad9091169f6ff770
sw x3, 0(x2) # store 0xad9091169f6ff770 in memory
flw f5, 0(x2) # load 0xad9091169f6ff770 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f24, f17, f5, f28, dyn # perform operation
fnmsub.s f24, f17, f5, f28, rdn # perform operation
fnmsub.s f24, f17, f5, f28, rmm # perform operation
fnmsub.s f24, f17, f5, f28, rne # perform operation
fnmsub.s f24, f17, f5, f28, rtz # perform operation
fnmsub.s f24, f17, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f17, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x615a0f7e28d21649 # load x3 with value 0x615a0f7e28d21649
sw x3, 0(x2) # store 0x615a0f7e28d21649 in memory
flw f6, 0(x2) # load 0x615a0f7e28d21649 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fnmsub.s f15, f7, f6, f30, dyn # perform operation
fnmsub.s f15, f7, f6, f30, rdn # perform operation
fnmsub.s f15, f7, f6, f30, rmm # perform operation
fnmsub.s f15, f7, f6, f30, rne # perform operation
fnmsub.s f15, f7, f6, f30, rtz # perform operation
fnmsub.s f15, f7, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x26bc1877aea85a6 # load x3 with value 0x26bc1877aea85a6
sw x3, 0(x2) # store 0x26bc1877aea85a6 in memory
flw f5, 0(x2) # load 0x26bc1877aea85a6 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmsub.s f20, f11, f5, f22, dyn # perform operation
fnmsub.s f20, f11, f5, f22, rdn # perform operation
fnmsub.s f20, f11, f5, f22, rmm # perform operation
fnmsub.s f20, f11, f5, f22, rne # perform operation
fnmsub.s f20, f11, f5, f22, rtz # perform operation
fnmsub.s f20, f11, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f5, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x8ae6128d769a94b # load x3 with value 0x8ae6128d769a94b
sw x3, 0(x2) # store 0x8ae6128d769a94b in memory
flw f10, 0(x2) # load 0x8ae6128d769a94b from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmsub.s f17, f27, f10, f30, dyn # perform operation
fnmsub.s f17, f27, f10, f30, rdn # perform operation
fnmsub.s f17, f27, f10, f30, rmm # perform operation
fnmsub.s f17, f27, f10, f30, rne # perform operation
fnmsub.s f17, f27, f10, f30, rtz # perform operation
fnmsub.s f17, f27, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x9b8d458238744146 # load x3 with value 0x9b8d458238744146
sw x3, 0(x2) # store 0x9b8d458238744146 in memory
flw f24, 0(x2) # load 0x9b8d458238744146 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fnmsub.s f7, f20, f24, f27, dyn # perform operation
fnmsub.s f7, f20, f24, f27, rdn # perform operation
fnmsub.s f7, f20, f24, f27, rmm # perform operation
fnmsub.s f7, f20, f24, f27, rne # perform operation
fnmsub.s f7, f20, f24, f27, rtz # perform operation
fnmsub.s f7, f20, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x91a7973597300d58 # load x3 with value 0x91a7973597300d58
sw x3, 0(x2) # store 0x91a7973597300d58 in memory
flw f21, 0(x2) # load 0x91a7973597300d58 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fnmsub.s f26, f8, f21, f23, dyn # perform operation
fnmsub.s f26, f8, f21, f23, rdn # perform operation
fnmsub.s f26, f8, f21, f23, rmm # perform operation
fnmsub.s f26, f8, f21, f23, rne # perform operation
fnmsub.s f26, f8, f21, f23, rtz # perform operation
fnmsub.s f26, f8, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x75c731a6505f727a # load x3 with value 0x75c731a6505f727a
sw x3, 0(x2) # store 0x75c731a6505f727a in memory
flw f30, 0(x2) # load 0x75c731a6505f727a from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmsub.s f8, f12, f30, f18, dyn # perform operation
fnmsub.s f8, f12, f30, f18, rdn # perform operation
fnmsub.s f8, f12, f30, f18, rmm # perform operation
fnmsub.s f8, f12, f30, f18, rne # perform operation
fnmsub.s f8, f12, f30, f18, rtz # perform operation
fnmsub.s f8, f12, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f12, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x554c5b7ae6fe8199 # load x3 with value 0x554c5b7ae6fe8199
sw x3, 0(x2) # store 0x554c5b7ae6fe8199 in memory
flw f25, 0(x2) # load 0x554c5b7ae6fe8199 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fnmsub.s f15, f9, f25, f8, dyn # perform operation
fnmsub.s f15, f9, f25, f8, rdn # perform operation
fnmsub.s f15, f9, f25, f8, rmm # perform operation
fnmsub.s f15, f9, f25, f8, rne # perform operation
fnmsub.s f15, f9, f25, f8, rtz # perform operation
fnmsub.s f15, f9, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x24bb385b85c610f # load x3 with value 0x24bb385b85c610f
sw x3, 0(x2) # store 0x24bb385b85c610f in memory
flw f26, 0(x2) # load 0x24bb385b85c610f from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f15, f1, f26, f17, dyn # perform operation
fnmsub.s f15, f1, f26, f17, rdn # perform operation
fnmsub.s f15, f1, f26, f17, rmm # perform operation
fnmsub.s f15, f1, f26, f17, rne # perform operation
fnmsub.s f15, f1, f26, f17, rtz # perform operation
fnmsub.s f15, f1, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xc887079bc5cd673 # load x3 with value 0xc887079bc5cd673
sw x3, 0(x2) # store 0xc887079bc5cd673 in memory
flw f1, 0(x2) # load 0xc887079bc5cd673 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fnmsub.s f29, f22, f1, f18, dyn # perform operation
fnmsub.s f29, f22, f1, f18, rdn # perform operation
fnmsub.s f29, f22, f1, f18, rmm # perform operation
fnmsub.s f29, f22, f1, f18, rne # perform operation
fnmsub.s f29, f22, f1, f18, rtz # perform operation
fnmsub.s f29, f22, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x178cb28a9759c921 # load x3 with value 0x178cb28a9759c921
sw x3, 0(x2) # store 0x178cb28a9759c921 in memory
flw f16, 0(x2) # load 0x178cb28a9759c921 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fnmsub.s f22, f7, f16, f29, dyn # perform operation
fnmsub.s f22, f7, f16, f29, rdn # perform operation
fnmsub.s f22, f7, f16, f29, rmm # perform operation
fnmsub.s f22, f7, f16, f29, rne # perform operation
fnmsub.s f22, f7, f16, f29, rtz # perform operation
fnmsub.s f22, f7, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x51d0c7d8eb112e04 # load x3 with value 0x51d0c7d8eb112e04
sw x3, 0(x2) # store 0x51d0c7d8eb112e04 in memory
flw f18, 0(x2) # load 0x51d0c7d8eb112e04 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fnmsub.s f14, f11, f18, f22, dyn # perform operation
fnmsub.s f14, f11, f18, f22, rdn # perform operation
fnmsub.s f14, f11, f18, f22, rmm # perform operation
fnmsub.s f14, f11, f18, f22, rne # perform operation
fnmsub.s f14, f11, f18, f22, rtz # perform operation
fnmsub.s f14, f11, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f11, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f11, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f11, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f11, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f11, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x26ac9db3e5c1cf99 # load x3 with value 0x26ac9db3e5c1cf99
sw x3, 0(x2) # store 0x26ac9db3e5c1cf99 in memory
flw f15, 0(x2) # load 0x26ac9db3e5c1cf99 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmsub.s f9, f17, f15, f28, dyn # perform operation
fnmsub.s f9, f17, f15, f28, rdn # perform operation
fnmsub.s f9, f17, f15, f28, rmm # perform operation
fnmsub.s f9, f17, f15, f28, rne # perform operation
fnmsub.s f9, f17, f15, f28, rtz # perform operation
fnmsub.s f9, f17, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xd14b4ce7b81ea5cb # load x3 with value 0xd14b4ce7b81ea5cb
sw x3, 0(x2) # store 0xd14b4ce7b81ea5cb in memory
flw f13, 0(x2) # load 0xd14b4ce7b81ea5cb from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fnmsub.s f28, f7, f13, f31, dyn # perform operation
fnmsub.s f28, f7, f13, f31, rdn # perform operation
fnmsub.s f28, f7, f13, f31, rmm # perform operation
fnmsub.s f28, f7, f13, f31, rne # perform operation
fnmsub.s f28, f7, f13, f31, rtz # perform operation
fnmsub.s f28, f7, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f7, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f7, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f7, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f7, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f7, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xe79c60f8d100dd6e # load x3 with value 0xe79c60f8d100dd6e
sw x3, 0(x2) # store 0xe79c60f8d100dd6e in memory
flw f12, 0(x2) # load 0xe79c60f8d100dd6e from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f2, f19, f12, f1, dyn # perform operation
fnmsub.s f2, f19, f12, f1, rdn # perform operation
fnmsub.s f2, f19, f12, f1, rmm # perform operation
fnmsub.s f2, f19, f12, f1, rne # perform operation
fnmsub.s f2, f19, f12, f1, rtz # perform operation
fnmsub.s f2, f19, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x32e84b3ed9668929 # load x3 with value 0x32e84b3ed9668929
sw x3, 0(x2) # store 0x32e84b3ed9668929 in memory
flw f31, 0(x2) # load 0x32e84b3ed9668929 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmsub.s f24, f14, f31, f21, dyn # perform operation
fnmsub.s f24, f14, f31, f21, rdn # perform operation
fnmsub.s f24, f14, f31, f21, rmm # perform operation
fnmsub.s f24, f14, f31, f21, rne # perform operation
fnmsub.s f24, f14, f31, f21, rtz # perform operation
fnmsub.s f24, f14, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xbe650146709f678 # load x3 with value 0xbe650146709f678
sw x3, 0(x2) # store 0xbe650146709f678 in memory
flw f21, 0(x2) # load 0xbe650146709f678 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmsub.s f28, f10, f21, f27, dyn # perform operation
fnmsub.s f28, f10, f21, f27, rdn # perform operation
fnmsub.s f28, f10, f21, f27, rmm # perform operation
fnmsub.s f28, f10, f21, f27, rne # perform operation
fnmsub.s f28, f10, f21, f27, rtz # perform operation
fnmsub.s f28, f10, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x22d4951d8f8640e2 # load x3 with value 0x22d4951d8f8640e2
sw x3, 0(x2) # store 0x22d4951d8f8640e2 in memory
flw f26, 0(x2) # load 0x22d4951d8f8640e2 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f18, f14, f26, f23, dyn # perform operation
fnmsub.s f18, f14, f26, f23, rdn # perform operation
fnmsub.s f18, f14, f26, f23, rmm # perform operation
fnmsub.s f18, f14, f26, f23, rne # perform operation
fnmsub.s f18, f14, f26, f23, rtz # perform operation
fnmsub.s f18, f14, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f14, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xffca961540fd412e # load x3 with value 0xffca961540fd412e
sw x3, 0(x2) # store 0xffca961540fd412e in memory
flw f29, 0(x2) # load 0xffca961540fd412e from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmsub.s f14, f19, f29, f25, dyn # perform operation
fnmsub.s f14, f19, f29, f25, rdn # perform operation
fnmsub.s f14, f19, f29, f25, rmm # perform operation
fnmsub.s f14, f19, f29, f25, rne # perform operation
fnmsub.s f14, f19, f29, f25, rtz # perform operation
fnmsub.s f14, f19, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xe0bc3ae57a1773c7 # load x3 with value 0xe0bc3ae57a1773c7
sw x3, 0(x2) # store 0xe0bc3ae57a1773c7 in memory
flw f9, 0(x2) # load 0xe0bc3ae57a1773c7 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmsub.s f21, f31, f9, f28, dyn # perform operation
fnmsub.s f21, f31, f9, f28, rdn # perform operation
fnmsub.s f21, f31, f9, f28, rmm # perform operation
fnmsub.s f21, f31, f9, f28, rne # perform operation
fnmsub.s f21, f31, f9, f28, rtz # perform operation
fnmsub.s f21, f31, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f31, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x8c2484a5acfb38d4 # load x3 with value 0x8c2484a5acfb38d4
sw x3, 0(x2) # store 0x8c2484a5acfb38d4 in memory
flw f2, 0(x2) # load 0x8c2484a5acfb38d4 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fnmsub.s f19, f18, f2, f27, dyn # perform operation
fnmsub.s f19, f18, f2, f27, rdn # perform operation
fnmsub.s f19, f18, f2, f27, rmm # perform operation
fnmsub.s f19, f18, f2, f27, rne # perform operation
fnmsub.s f19, f18, f2, f27, rtz # perform operation
fnmsub.s f19, f18, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x53390a1ce17c61ba # load x3 with value 0x53390a1ce17c61ba
sw x3, 0(x2) # store 0x53390a1ce17c61ba in memory
flw f9, 0(x2) # load 0x53390a1ce17c61ba from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmsub.s f2, f12, f9, f17, dyn # perform operation
fnmsub.s f2, f12, f9, f17, rdn # perform operation
fnmsub.s f2, f12, f9, f17, rmm # perform operation
fnmsub.s f2, f12, f9, f17, rne # perform operation
fnmsub.s f2, f12, f9, f17, rtz # perform operation
fnmsub.s f2, f12, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f12, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f12, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f12, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f12, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f12, f9, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xae43ce44021f9810 # load x3 with value 0xae43ce44021f9810
sw x3, 0(x2) # store 0xae43ce44021f9810 in memory
flw f31, 0(x2) # load 0xae43ce44021f9810 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmsub.s f17, f14, f31, f5, dyn # perform operation
fnmsub.s f17, f14, f31, f5, rdn # perform operation
fnmsub.s f17, f14, f31, f5, rmm # perform operation
fnmsub.s f17, f14, f31, f5, rne # perform operation
fnmsub.s f17, f14, f31, f5, rtz # perform operation
fnmsub.s f17, f14, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x116d591c7d2c9e64 # load x3 with value 0x116d591c7d2c9e64
sw x3, 0(x2) # store 0x116d591c7d2c9e64 in memory
flw f10, 0(x2) # load 0x116d591c7d2c9e64 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmsub.s f13, f26, f10, f25, dyn # perform operation
fnmsub.s f13, f26, f10, f25, rdn # perform operation
fnmsub.s f13, f26, f10, f25, rmm # perform operation
fnmsub.s f13, f26, f10, f25, rne # perform operation
fnmsub.s f13, f26, f10, f25, rtz # perform operation
fnmsub.s f13, f26, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xd3bc11a65452754f # load x3 with value 0xd3bc11a65452754f
sw x3, 0(x2) # store 0xd3bc11a65452754f in memory
flw f3, 0(x2) # load 0xd3bc11a65452754f from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmsub.s f18, f21, f3, f10, dyn # perform operation
fnmsub.s f18, f21, f3, f10, rdn # perform operation
fnmsub.s f18, f21, f3, f10, rmm # perform operation
fnmsub.s f18, f21, f3, f10, rne # perform operation
fnmsub.s f18, f21, f3, f10, rtz # perform operation
fnmsub.s f18, f21, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x842f1342b6995078 # load x3 with value 0x842f1342b6995078
sw x3, 0(x2) # store 0x842f1342b6995078 in memory
flw f28, 0(x2) # load 0x842f1342b6995078 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f19, f29, f28, f25, dyn # perform operation
fnmsub.s f19, f29, f28, f25, rdn # perform operation
fnmsub.s f19, f29, f28, f25, rmm # perform operation
fnmsub.s f19, f29, f28, f25, rne # perform operation
fnmsub.s f19, f29, f28, f25, rtz # perform operation
fnmsub.s f19, f29, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x436dd00cba4d388 # load x3 with value 0x436dd00cba4d388
sw x3, 0(x2) # store 0x436dd00cba4d388 in memory
flw f27, 0(x2) # load 0x436dd00cba4d388 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f21, f23, f27, f17, dyn # perform operation
fnmsub.s f21, f23, f27, f17, rdn # perform operation
fnmsub.s f21, f23, f27, f17, rmm # perform operation
fnmsub.s f21, f23, f27, f17, rne # perform operation
fnmsub.s f21, f23, f27, f17, rtz # perform operation
fnmsub.s f21, f23, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xe789e3f1707c9cc # load x3 with value 0xe789e3f1707c9cc
sw x3, 0(x2) # store 0xe789e3f1707c9cc in memory
flw f9, 0(x2) # load 0xe789e3f1707c9cc from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmsub.s f27, f15, f9, f20, dyn # perform operation
fnmsub.s f27, f15, f9, f20, rdn # perform operation
fnmsub.s f27, f15, f9, f20, rmm # perform operation
fnmsub.s f27, f15, f9, f20, rne # perform operation
fnmsub.s f27, f15, f9, f20, rtz # perform operation
fnmsub.s f27, f15, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x5fc0293a57dc8c82 # load x3 with value 0x5fc0293a57dc8c82
sw x3, 0(x2) # store 0x5fc0293a57dc8c82 in memory
flw f31, 0(x2) # load 0x5fc0293a57dc8c82 from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fnmsub.s f18, f27, f31, f24, dyn # perform operation
fnmsub.s f18, f27, f31, f24, rdn # perform operation
fnmsub.s f18, f27, f31, f24, rmm # perform operation
fnmsub.s f18, f27, f31, f24, rne # perform operation
fnmsub.s f18, f27, f31, f24, rtz # perform operation
fnmsub.s f18, f27, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xca61651d211948a7 # load x3 with value 0xca61651d211948a7
sw x3, 0(x2) # store 0xca61651d211948a7 in memory
flw f29, 0(x2) # load 0xca61651d211948a7 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f14, f2, f29, f12, dyn # perform operation
fnmsub.s f14, f2, f29, f12, rdn # perform operation
fnmsub.s f14, f2, f29, f12, rmm # perform operation
fnmsub.s f14, f2, f29, f12, rne # perform operation
fnmsub.s f14, f2, f29, f12, rtz # perform operation
fnmsub.s f14, f2, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x24a0371e03fbf1f8 # load x3 with value 0x24a0371e03fbf1f8
sw x3, 0(x2) # store 0x24a0371e03fbf1f8 in memory
flw f9, 0(x2) # load 0x24a0371e03fbf1f8 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmsub.s f10, f15, f9, f6, dyn # perform operation
fnmsub.s f10, f15, f9, f6, rdn # perform operation
fnmsub.s f10, f15, f9, f6, rmm # perform operation
fnmsub.s f10, f15, f9, f6, rne # perform operation
fnmsub.s f10, f15, f9, f6, rtz # perform operation
fnmsub.s f10, f15, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0xe975e354aa7a05ef # load x3 with value 0xe975e354aa7a05ef
sw x3, 0(x2) # store 0xe975e354aa7a05ef in memory
flw f30, 0(x2) # load 0xe975e354aa7a05ef from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f21, f23, f30, f12, dyn # perform operation
fnmsub.s f21, f23, f30, f12, rdn # perform operation
fnmsub.s f21, f23, f30, f12, rmm # perform operation
fnmsub.s f21, f23, f30, f12, rne # perform operation
fnmsub.s f21, f23, f30, f12, rtz # perform operation
fnmsub.s f21, f23, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x36c0dbd913225d25 # load x3 with value 0x36c0dbd913225d25
sw x3, 0(x2) # store 0x36c0dbd913225d25 in memory
flw f31, 0(x2) # load 0x36c0dbd913225d25 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f18, f20, f31, f26, dyn # perform operation
fnmsub.s f18, f20, f31, f26, rdn # perform operation
fnmsub.s f18, f20, f31, f26, rmm # perform operation
fnmsub.s f18, f20, f31, f26, rne # perform operation
fnmsub.s f18, f20, f31, f26, rtz # perform operation
fnmsub.s f18, f20, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x71dad64d2c78e6f6 # load x3 with value 0x71dad64d2c78e6f6
sw x3, 0(x2) # store 0x71dad64d2c78e6f6 in memory
flw f10, 0(x2) # load 0x71dad64d2c78e6f6 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmsub.s f16, f24, f10, f14, dyn # perform operation
fnmsub.s f16, f24, f10, f14, rdn # perform operation
fnmsub.s f16, f24, f10, f14, rmm # perform operation
fnmsub.s f16, f24, f10, f14, rne # perform operation
fnmsub.s f16, f24, f10, f14, rtz # perform operation
fnmsub.s f16, f24, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x2248176c52491ce6 # load x3 with value 0x2248176c52491ce6
sw x3, 0(x2) # store 0x2248176c52491ce6 in memory
flw f27, 0(x2) # load 0x2248176c52491ce6 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f26, f3, f27, f28, dyn # perform operation
fnmsub.s f26, f3, f27, f28, rdn # perform operation
fnmsub.s f26, f3, f27, f28, rmm # perform operation
fnmsub.s f26, f3, f27, f28, rne # perform operation
fnmsub.s f26, f3, f27, f28, rtz # perform operation
fnmsub.s f26, f3, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0xa5a221773103179d # load x3 with value 0xa5a221773103179d
sw x3, 0(x2) # store 0xa5a221773103179d in memory
flw f12, 0(x2) # load 0xa5a221773103179d from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fnmsub.s f22, f18, f12, f17, dyn # perform operation
fnmsub.s f22, f18, f12, f17, rdn # perform operation
fnmsub.s f22, f18, f12, f17, rmm # perform operation
fnmsub.s f22, f18, f12, f17, rne # perform operation
fnmsub.s f22, f18, f12, f17, rtz # perform operation
fnmsub.s f22, f18, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xb658863887bcff36 # load x3 with value 0xb658863887bcff36
sw x3, 0(x2) # store 0xb658863887bcff36 in memory
flw f25, 0(x2) # load 0xb658863887bcff36 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fnmsub.s f20, f15, f25, f19, dyn # perform operation
fnmsub.s f20, f15, f25, f19, rdn # perform operation
fnmsub.s f20, f15, f25, f19, rmm # perform operation
fnmsub.s f20, f15, f25, f19, rne # perform operation
fnmsub.s f20, f15, f25, f19, rtz # perform operation
fnmsub.s f20, f15, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x7f7fbff7259aa867 # load x3 with value 0x7f7fbff7259aa867
sw x3, 0(x2) # store 0x7f7fbff7259aa867 in memory
flw f25, 0(x2) # load 0x7f7fbff7259aa867 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f6, f12, f25, f22, dyn # perform operation
fnmsub.s f6, f12, f25, f22, rdn # perform operation
fnmsub.s f6, f12, f25, f22, rmm # perform operation
fnmsub.s f6, f12, f25, f22, rne # perform operation
fnmsub.s f6, f12, f25, f22, rtz # perform operation
fnmsub.s f6, f12, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f12, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xf9cf501e2b599c6 # load x3 with value 0xf9cf501e2b599c6
sw x3, 0(x2) # store 0xf9cf501e2b599c6 in memory
flw f29, 0(x2) # load 0xf9cf501e2b599c6 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmsub.s f3, f22, f29, f13, dyn # perform operation
fnmsub.s f3, f22, f29, f13, rdn # perform operation
fnmsub.s f3, f22, f29, f13, rmm # perform operation
fnmsub.s f3, f22, f29, f13, rne # perform operation
fnmsub.s f3, f22, f29, f13, rtz # perform operation
fnmsub.s f3, f22, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x4929f169575eaf77 # load x3 with value 0x4929f169575eaf77
sw x3, 0(x2) # store 0x4929f169575eaf77 in memory
flw f22, 0(x2) # load 0x4929f169575eaf77 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f24, f12, f22, f20, dyn # perform operation
fnmsub.s f24, f12, f22, f20, rdn # perform operation
fnmsub.s f24, f12, f22, f20, rmm # perform operation
fnmsub.s f24, f12, f22, f20, rne # perform operation
fnmsub.s f24, f12, f22, f20, rtz # perform operation
fnmsub.s f24, f12, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xddcd2f907bd6a1f2 # load x3 with value 0xddcd2f907bd6a1f2
sw x3, 0(x2) # store 0xddcd2f907bd6a1f2 in memory
flw f18, 0(x2) # load 0xddcd2f907bd6a1f2 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fnmsub.s f27, f16, f18, f17, dyn # perform operation
fnmsub.s f27, f16, f18, f17, rdn # perform operation
fnmsub.s f27, f16, f18, f17, rmm # perform operation
fnmsub.s f27, f16, f18, f17, rne # perform operation
fnmsub.s f27, f16, f18, f17, rtz # perform operation
fnmsub.s f27, f16, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xdb8edce654ee2ffe # load x3 with value 0xdb8edce654ee2ffe
sw x3, 0(x2) # store 0xdb8edce654ee2ffe in memory
flw f5, 0(x2) # load 0xdb8edce654ee2ffe from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f10, f29, f5, f14, dyn # perform operation
fnmsub.s f10, f29, f5, f14, rdn # perform operation
fnmsub.s f10, f29, f5, f14, rmm # perform operation
fnmsub.s f10, f29, f5, f14, rne # perform operation
fnmsub.s f10, f29, f5, f14, rtz # perform operation
fnmsub.s f10, f29, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x846c3cdb568b5529 # load x3 with value 0x846c3cdb568b5529
sw x3, 0(x2) # store 0x846c3cdb568b5529 in memory
flw f13, 0(x2) # load 0x846c3cdb568b5529 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmsub.s f25, f29, f13, f23, dyn # perform operation
fnmsub.s f25, f29, f13, f23, rdn # perform operation
fnmsub.s f25, f29, f13, f23, rmm # perform operation
fnmsub.s f25, f29, f13, f23, rne # perform operation
fnmsub.s f25, f29, f13, f23, rtz # perform operation
fnmsub.s f25, f29, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x43884e7ffefa806 # load x3 with value 0x43884e7ffefa806
sw x3, 0(x2) # store 0x43884e7ffefa806 in memory
flw f19, 0(x2) # load 0x43884e7ffefa806 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmsub.s f20, f11, f19, f17, dyn # perform operation
fnmsub.s f20, f11, f19, f17, rdn # perform operation
fnmsub.s f20, f11, f19, f17, rmm # perform operation
fnmsub.s f20, f11, f19, f17, rne # perform operation
fnmsub.s f20, f11, f19, f17, rtz # perform operation
fnmsub.s f20, f11, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xcfe459fa4c2a54ca # load x3 with value 0xcfe459fa4c2a54ca
sw x3, 0(x2) # store 0xcfe459fa4c2a54ca in memory
flw f26, 0(x2) # load 0xcfe459fa4c2a54ca from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmsub.s f23, f27, f26, f16, dyn # perform operation
fnmsub.s f23, f27, f26, f16, rdn # perform operation
fnmsub.s f23, f27, f26, f16, rmm # perform operation
fnmsub.s f23, f27, f26, f16, rne # perform operation
fnmsub.s f23, f27, f26, f16, rtz # perform operation
fnmsub.s f23, f27, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x2835c482aad96c6c # load x3 with value 0x2835c482aad96c6c
sw x3, 0(x2) # store 0x2835c482aad96c6c in memory
flw f7, 0(x2) # load 0x2835c482aad96c6c from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f12, f18, f7, f30, dyn # perform operation
fnmsub.s f12, f18, f7, f30, rdn # perform operation
fnmsub.s f12, f18, f7, f30, rmm # perform operation
fnmsub.s f12, f18, f7, f30, rne # perform operation
fnmsub.s f12, f18, f7, f30, rtz # perform operation
fnmsub.s f12, f18, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x5f1941306358ec58 # load x3 with value 0x5f1941306358ec58
sw x3, 0(x2) # store 0x5f1941306358ec58 in memory
flw f28, 0(x2) # load 0x5f1941306358ec58 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmsub.s f27, f3, f28, f14, dyn # perform operation
fnmsub.s f27, f3, f28, f14, rdn # perform operation
fnmsub.s f27, f3, f28, f14, rmm # perform operation
fnmsub.s f27, f3, f28, f14, rne # perform operation
fnmsub.s f27, f3, f28, f14, rtz # perform operation
fnmsub.s f27, f3, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xdeab88c3d2aed4ba # load x3 with value 0xdeab88c3d2aed4ba
sw x3, 0(x2) # store 0xdeab88c3d2aed4ba in memory
flw f6, 0(x2) # load 0xdeab88c3d2aed4ba from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f16, f14, f6, f9, dyn # perform operation
fnmsub.s f16, f14, f6, f9, rdn # perform operation
fnmsub.s f16, f14, f6, f9, rmm # perform operation
fnmsub.s f16, f14, f6, f9, rne # perform operation
fnmsub.s f16, f14, f6, f9, rtz # perform operation
fnmsub.s f16, f14, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xf04557b32afbbe14 # load x3 with value 0xf04557b32afbbe14
sw x3, 0(x2) # store 0xf04557b32afbbe14 in memory
flw f12, 0(x2) # load 0xf04557b32afbbe14 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmsub.s f2, f10, f12, f20, dyn # perform operation
fnmsub.s f2, f10, f12, f20, rdn # perform operation
fnmsub.s f2, f10, f12, f20, rmm # perform operation
fnmsub.s f2, f10, f12, f20, rne # perform operation
fnmsub.s f2, f10, f12, f20, rtz # perform operation
fnmsub.s f2, f10, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x1e1ea3a9d325abb # load x3 with value 0x1e1ea3a9d325abb
sw x3, 0(x2) # store 0x1e1ea3a9d325abb in memory
flw f14, 0(x2) # load 0x1e1ea3a9d325abb from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f16, f1, f14, f6, dyn # perform operation
fnmsub.s f16, f1, f14, f6, rdn # perform operation
fnmsub.s f16, f1, f14, f6, rmm # perform operation
fnmsub.s f16, f1, f14, f6, rne # perform operation
fnmsub.s f16, f1, f14, f6, rtz # perform operation
fnmsub.s f16, f1, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x57d77cc31605e001 # load x3 with value 0x57d77cc31605e001
sw x3, 0(x2) # store 0x57d77cc31605e001 in memory
flw f14, 0(x2) # load 0x57d77cc31605e001 from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fnmsub.s f28, f22, f14, f25, dyn # perform operation
fnmsub.s f28, f22, f14, f25, rdn # perform operation
fnmsub.s f28, f22, f14, f25, rmm # perform operation
fnmsub.s f28, f22, f14, f25, rne # perform operation
fnmsub.s f28, f22, f14, f25, rtz # perform operation
fnmsub.s f28, f22, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f22, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xd977ae466c3be938 # load x3 with value 0xd977ae466c3be938
sw x3, 0(x2) # store 0xd977ae466c3be938 in memory
flw f12, 0(x2) # load 0xd977ae466c3be938 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fnmsub.s f22, f3, f12, f26, dyn # perform operation
fnmsub.s f22, f3, f12, f26, rdn # perform operation
fnmsub.s f22, f3, f12, f26, rmm # perform operation
fnmsub.s f22, f3, f12, f26, rne # perform operation
fnmsub.s f22, f3, f12, f26, rtz # perform operation
fnmsub.s f22, f3, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x9bd63d4f2b10509f # load x3 with value 0x9bd63d4f2b10509f
sw x3, 0(x2) # store 0x9bd63d4f2b10509f in memory
flw f15, 0(x2) # load 0x9bd63d4f2b10509f from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f30, f1, f15, f9, dyn # perform operation
fnmsub.s f30, f1, f15, f9, rdn # perform operation
fnmsub.s f30, f1, f15, f9, rmm # perform operation
fnmsub.s f30, f1, f15, f9, rne # perform operation
fnmsub.s f30, f1, f15, f9, rtz # perform operation
fnmsub.s f30, f1, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x9321e70a084f1d51 # load x3 with value 0x9321e70a084f1d51
sw x3, 0(x2) # store 0x9321e70a084f1d51 in memory
flw f27, 0(x2) # load 0x9321e70a084f1d51 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fnmsub.s f30, f14, f27, f18, dyn # perform operation
fnmsub.s f30, f14, f27, f18, rdn # perform operation
fnmsub.s f30, f14, f27, f18, rmm # perform operation
fnmsub.s f30, f14, f27, f18, rne # perform operation
fnmsub.s f30, f14, f27, f18, rtz # perform operation
fnmsub.s f30, f14, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x4d1d9d5dbd3e5963 # load x3 with value 0x4d1d9d5dbd3e5963
sw x3, 0(x2) # store 0x4d1d9d5dbd3e5963 in memory
flw f12, 0(x2) # load 0x4d1d9d5dbd3e5963 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmsub.s f6, f30, f12, f13, dyn # perform operation
fnmsub.s f6, f30, f12, f13, rdn # perform operation
fnmsub.s f6, f30, f12, f13, rmm # perform operation
fnmsub.s f6, f30, f12, f13, rne # perform operation
fnmsub.s f6, f30, f12, f13, rtz # perform operation
fnmsub.s f6, f30, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xc17f906c40d92102 # load x3 with value 0xc17f906c40d92102
sw x3, 0(x2) # store 0xc17f906c40d92102 in memory
flw f16, 0(x2) # load 0xc17f906c40d92102 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmsub.s f12, f11, f16, f2, dyn # perform operation
fnmsub.s f12, f11, f16, f2, rdn # perform operation
fnmsub.s f12, f11, f16, f2, rmm # perform operation
fnmsub.s f12, f11, f16, f2, rne # perform operation
fnmsub.s f12, f11, f16, f2, rtz # perform operation
fnmsub.s f12, f11, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x1927bdc22c96c08c # load x3 with value 0x1927bdc22c96c08c
sw x3, 0(x2) # store 0x1927bdc22c96c08c in memory
flw f22, 0(x2) # load 0x1927bdc22c96c08c from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f9, f2, f22, f13, dyn # perform operation
fnmsub.s f9, f2, f22, f13, rdn # perform operation
fnmsub.s f9, f2, f22, f13, rmm # perform operation
fnmsub.s f9, f2, f22, f13, rne # perform operation
fnmsub.s f9, f2, f22, f13, rtz # perform operation
fnmsub.s f9, f2, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x6301d7d556865497 # load x3 with value 0x6301d7d556865497
sw x3, 0(x2) # store 0x6301d7d556865497 in memory
flw f17, 0(x2) # load 0x6301d7d556865497 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmsub.s f9, f8, f17, f21, dyn # perform operation
fnmsub.s f9, f8, f17, f21, rdn # perform operation
fnmsub.s f9, f8, f17, f21, rmm # perform operation
fnmsub.s f9, f8, f17, f21, rne # perform operation
fnmsub.s f9, f8, f17, f21, rtz # perform operation
fnmsub.s f9, f8, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x537e7bfb5c7e3490 # load x3 with value 0x537e7bfb5c7e3490
sw x3, 0(x2) # store 0x537e7bfb5c7e3490 in memory
flw f29, 0(x2) # load 0x537e7bfb5c7e3490 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmsub.s f17, f14, f29, f2, dyn # perform operation
fnmsub.s f17, f14, f29, f2, rdn # perform operation
fnmsub.s f17, f14, f29, f2, rmm # perform operation
fnmsub.s f17, f14, f29, f2, rne # perform operation
fnmsub.s f17, f14, f29, f2, rtz # perform operation
fnmsub.s f17, f14, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0xe9393cd57edef251 # load x3 with value 0xe9393cd57edef251
sw x3, 0(x2) # store 0xe9393cd57edef251 in memory
flw f9, 0(x2) # load 0xe9393cd57edef251 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fnmsub.s f18, f15, f9, f25, dyn # perform operation
fnmsub.s f18, f15, f9, f25, rdn # perform operation
fnmsub.s f18, f15, f9, f25, rmm # perform operation
fnmsub.s f18, f15, f9, f25, rne # perform operation
fnmsub.s f18, f15, f9, f25, rtz # perform operation
fnmsub.s f18, f15, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x845b1e3d08230f72 # load x3 with value 0x845b1e3d08230f72
sw x3, 0(x2) # store 0x845b1e3d08230f72 in memory
flw f16, 0(x2) # load 0x845b1e3d08230f72 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f13, f24, f16, f21, dyn # perform operation
fnmsub.s f13, f24, f16, f21, rdn # perform operation
fnmsub.s f13, f24, f16, f21, rmm # perform operation
fnmsub.s f13, f24, f16, f21, rne # perform operation
fnmsub.s f13, f24, f16, f21, rtz # perform operation
fnmsub.s f13, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x7bab9f0a9603e4aa # load x3 with value 0x7bab9f0a9603e4aa
sw x3, 0(x2) # store 0x7bab9f0a9603e4aa in memory
flw f13, 0(x2) # load 0x7bab9f0a9603e4aa from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f24, f5, f13, f29, dyn # perform operation
fnmsub.s f24, f5, f13, f29, rdn # perform operation
fnmsub.s f24, f5, f13, f29, rmm # perform operation
fnmsub.s f24, f5, f13, f29, rne # perform operation
fnmsub.s f24, f5, f13, f29, rtz # perform operation
fnmsub.s f24, f5, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f5, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f5, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f5, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f5, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f5, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x378f79c67dfc275a # load x3 with value 0x378f79c67dfc275a
sw x3, 0(x2) # store 0x378f79c67dfc275a in memory
flw f23, 0(x2) # load 0x378f79c67dfc275a from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmsub.s f1, f29, f23, f26, dyn # perform operation
fnmsub.s f1, f29, f23, f26, rdn # perform operation
fnmsub.s f1, f29, f23, f26, rmm # perform operation
fnmsub.s f1, f29, f23, f26, rne # perform operation
fnmsub.s f1, f29, f23, f26, rtz # perform operation
fnmsub.s f1, f29, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f29, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f29, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f29, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f29, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f29, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xc1f80fee58bbd095 # load x3 with value 0xc1f80fee58bbd095
sw x3, 0(x2) # store 0xc1f80fee58bbd095 in memory
flw f29, 0(x2) # load 0xc1f80fee58bbd095 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
fnmsub.s f3, f23, f29, f6, dyn # perform operation
fnmsub.s f3, f23, f29, f6, rdn # perform operation
fnmsub.s f3, f23, f29, f6, rmm # perform operation
fnmsub.s f3, f23, f29, f6, rne # perform operation
fnmsub.s f3, f23, f29, f6, rtz # perform operation
fnmsub.s f3, f23, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f23, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x8e0c8582653b6d46 # load x3 with value 0x8e0c8582653b6d46
sw x3, 0(x2) # store 0x8e0c8582653b6d46 in memory
flw f28, 0(x2) # load 0x8e0c8582653b6d46 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmsub.s f11, f20, f28, f15, dyn # perform operation
fnmsub.s f11, f20, f28, f15, rdn # perform operation
fnmsub.s f11, f20, f28, f15, rmm # perform operation
fnmsub.s f11, f20, f28, f15, rne # perform operation
fnmsub.s f11, f20, f28, f15, rtz # perform operation
fnmsub.s f11, f20, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x5d984e359a3d0c12 # load x3 with value 0x5d984e359a3d0c12
sw x3, 0(x2) # store 0x5d984e359a3d0c12 in memory
flw f9, 0(x2) # load 0x5d984e359a3d0c12 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f21, f27, f9, f14, dyn # perform operation
fnmsub.s f21, f27, f9, f14, rdn # perform operation
fnmsub.s f21, f27, f9, f14, rmm # perform operation
fnmsub.s f21, f27, f9, f14, rne # perform operation
fnmsub.s f21, f27, f9, f14, rtz # perform operation
fnmsub.s f21, f27, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x52550c3d46a6f4e2 # load x3 with value 0x52550c3d46a6f4e2
sw x3, 0(x2) # store 0x52550c3d46a6f4e2 in memory
flw f12, 0(x2) # load 0x52550c3d46a6f4e2 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fnmsub.s f27, f16, f12, f31, dyn # perform operation
fnmsub.s f27, f16, f12, f31, rdn # perform operation
fnmsub.s f27, f16, f12, f31, rmm # perform operation
fnmsub.s f27, f16, f12, f31, rne # perform operation
fnmsub.s f27, f16, f12, f31, rtz # perform operation
fnmsub.s f27, f16, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x290fafc3aaa27044 # load x3 with value 0x290fafc3aaa27044
sw x3, 0(x2) # store 0x290fafc3aaa27044 in memory
flw f20, 0(x2) # load 0x290fafc3aaa27044 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f9, f30, f20, f11, dyn # perform operation
fnmsub.s f9, f30, f20, f11, rdn # perform operation
fnmsub.s f9, f30, f20, f11, rmm # perform operation
fnmsub.s f9, f30, f20, f11, rne # perform operation
fnmsub.s f9, f30, f20, f11, rtz # perform operation
fnmsub.s f9, f30, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xb4bdb6bca4f2d805 # load x3 with value 0xb4bdb6bca4f2d805
sw x3, 0(x2) # store 0xb4bdb6bca4f2d805 in memory
flw f18, 0(x2) # load 0xb4bdb6bca4f2d805 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmsub.s f22, f5, f18, f3, dyn # perform operation
fnmsub.s f22, f5, f18, f3, rdn # perform operation
fnmsub.s f22, f5, f18, f3, rmm # perform operation
fnmsub.s f22, f5, f18, f3, rne # perform operation
fnmsub.s f22, f5, f18, f3, rtz # perform operation
fnmsub.s f22, f5, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x1ed66b8710c89808 # load x3 with value 0x1ed66b8710c89808
sw x3, 0(x2) # store 0x1ed66b8710c89808 in memory
flw f29, 0(x2) # load 0x1ed66b8710c89808 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f12, f24, f29, f25, dyn # perform operation
fnmsub.s f12, f24, f29, f25, rdn # perform operation
fnmsub.s f12, f24, f29, f25, rmm # perform operation
fnmsub.s f12, f24, f29, f25, rne # perform operation
fnmsub.s f12, f24, f29, f25, rtz # perform operation
fnmsub.s f12, f24, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x4e2d8ce23ef6c060 # load x3 with value 0x4e2d8ce23ef6c060
sw x3, 0(x2) # store 0x4e2d8ce23ef6c060 in memory
flw f8, 0(x2) # load 0x4e2d8ce23ef6c060 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fnmsub.s f15, f30, f8, f10, dyn # perform operation
fnmsub.s f15, f30, f8, f10, rdn # perform operation
fnmsub.s f15, f30, f8, f10, rmm # perform operation
fnmsub.s f15, f30, f8, f10, rne # perform operation
fnmsub.s f15, f30, f8, f10, rtz # perform operation
fnmsub.s f15, f30, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x5f0aaab8781c0ad6 # load x3 with value 0x5f0aaab8781c0ad6
sw x3, 0(x2) # store 0x5f0aaab8781c0ad6 in memory
flw f12, 0(x2) # load 0x5f0aaab8781c0ad6 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmsub.s f30, f18, f12, f25, dyn # perform operation
fnmsub.s f30, f18, f12, f25, rdn # perform operation
fnmsub.s f30, f18, f12, f25, rmm # perform operation
fnmsub.s f30, f18, f12, f25, rne # perform operation
fnmsub.s f30, f18, f12, f25, rtz # perform operation
fnmsub.s f30, f18, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x5fa5c2de98782410 # load x3 with value 0x5fa5c2de98782410
sw x3, 0(x2) # store 0x5fa5c2de98782410 in memory
flw f13, 0(x2) # load 0x5fa5c2de98782410 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fnmsub.s f20, f25, f13, f28, dyn # perform operation
fnmsub.s f20, f25, f13, f28, rdn # perform operation
fnmsub.s f20, f25, f13, f28, rmm # perform operation
fnmsub.s f20, f25, f13, f28, rne # perform operation
fnmsub.s f20, f25, f13, f28, rtz # perform operation
fnmsub.s f20, f25, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0xc2602a181ef7ec3d # load x3 with value 0xc2602a181ef7ec3d
sw x3, 0(x2) # store 0xc2602a181ef7ec3d in memory
flw f18, 0(x2) # load 0xc2602a181ef7ec3d from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmsub.s f30, f13, f18, f12, dyn # perform operation
fnmsub.s f30, f13, f18, f12, rdn # perform operation
fnmsub.s f30, f13, f18, f12, rmm # perform operation
fnmsub.s f30, f13, f18, f12, rne # perform operation
fnmsub.s f30, f13, f18, f12, rtz # perform operation
fnmsub.s f30, f13, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xc07d19565d48a319 # load x3 with value 0xc07d19565d48a319
sw x3, 0(x2) # store 0xc07d19565d48a319 in memory
flw f13, 0(x2) # load 0xc07d19565d48a319 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f30, f9, f13, f11, dyn # perform operation
fnmsub.s f30, f9, f13, f11, rdn # perform operation
fnmsub.s f30, f9, f13, f11, rmm # perform operation
fnmsub.s f30, f9, f13, f11, rne # perform operation
fnmsub.s f30, f9, f13, f11, rtz # perform operation
fnmsub.s f30, f9, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f9, f13, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xce5d59e1ab415869 # load x3 with value 0xce5d59e1ab415869
sw x3, 0(x2) # store 0xce5d59e1ab415869 in memory
flw f7, 0(x2) # load 0xce5d59e1ab415869 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f31, f22, f7, f23, dyn # perform operation
fnmsub.s f31, f22, f7, f23, rdn # perform operation
fnmsub.s f31, f22, f7, f23, rmm # perform operation
fnmsub.s f31, f22, f7, f23, rne # perform operation
fnmsub.s f31, f22, f7, f23, rtz # perform operation
fnmsub.s f31, f22, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x96776b3abf1d7152 # load x3 with value 0x96776b3abf1d7152
sw x3, 0(x2) # store 0x96776b3abf1d7152 in memory
flw f3, 0(x2) # load 0x96776b3abf1d7152 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fnmsub.s f31, f13, f3, f2, dyn # perform operation
fnmsub.s f31, f13, f3, f2, rdn # perform operation
fnmsub.s f31, f13, f3, f2, rmm # perform operation
fnmsub.s f31, f13, f3, f2, rne # perform operation
fnmsub.s f31, f13, f3, f2, rtz # perform operation
fnmsub.s f31, f13, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x71cd86fdbc84decb # load x3 with value 0x71cd86fdbc84decb
sw x3, 0(x2) # store 0x71cd86fdbc84decb in memory
flw f18, 0(x2) # load 0x71cd86fdbc84decb from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f30, f12, f18, f3, dyn # perform operation
fnmsub.s f30, f12, f18, f3, rdn # perform operation
fnmsub.s f30, f12, f18, f3, rmm # perform operation
fnmsub.s f30, f12, f18, f3, rne # perform operation
fnmsub.s f30, f12, f18, f3, rtz # perform operation
fnmsub.s f30, f12, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7530a667815fcb16 # load x3 with value 0x7530a667815fcb16
sw x3, 0(x2) # store 0x7530a667815fcb16 in memory
flw f12, 0(x2) # load 0x7530a667815fcb16 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmsub.s f22, f2, f12, f23, dyn # perform operation
fnmsub.s f22, f2, f12, f23, rdn # perform operation
fnmsub.s f22, f2, f12, f23, rmm # perform operation
fnmsub.s f22, f2, f12, f23, rne # perform operation
fnmsub.s f22, f2, f12, f23, rtz # perform operation
fnmsub.s f22, f2, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xa45cd98bdf7b0cfd # load x3 with value 0xa45cd98bdf7b0cfd
sw x3, 0(x2) # store 0xa45cd98bdf7b0cfd in memory
flw f6, 0(x2) # load 0xa45cd98bdf7b0cfd from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmsub.s f21, f9, f6, f29, dyn # perform operation
fnmsub.s f21, f9, f6, f29, rdn # perform operation
fnmsub.s f21, f9, f6, f29, rmm # perform operation
fnmsub.s f21, f9, f6, f29, rne # perform operation
fnmsub.s f21, f9, f6, f29, rtz # perform operation
fnmsub.s f21, f9, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f9, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x7d8af594f518c9c6 # load x3 with value 0x7d8af594f518c9c6
sw x3, 0(x2) # store 0x7d8af594f518c9c6 in memory
flw f6, 0(x2) # load 0x7d8af594f518c9c6 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fnmsub.s f23, f21, f6, f11, dyn # perform operation
fnmsub.s f23, f21, f6, f11, rdn # perform operation
fnmsub.s f23, f21, f6, f11, rmm # perform operation
fnmsub.s f23, f21, f6, f11, rne # perform operation
fnmsub.s f23, f21, f6, f11, rtz # perform operation
fnmsub.s f23, f21, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x778fcca787f656e8 # load x3 with value 0x778fcca787f656e8
sw x3, 0(x2) # store 0x778fcca787f656e8 in memory
flw f29, 0(x2) # load 0x778fcca787f656e8 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmsub.s f28, f12, f29, f11, dyn # perform operation
fnmsub.s f28, f12, f29, f11, rdn # perform operation
fnmsub.s f28, f12, f29, f11, rmm # perform operation
fnmsub.s f28, f12, f29, f11, rne # perform operation
fnmsub.s f28, f12, f29, f11, rtz # perform operation
fnmsub.s f28, f12, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xa3aad2a00a2ec44a # load x3 with value 0xa3aad2a00a2ec44a
sw x3, 0(x2) # store 0xa3aad2a00a2ec44a in memory
flw f8, 0(x2) # load 0xa3aad2a00a2ec44a from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmsub.s f20, f3, f8, f22, dyn # perform operation
fnmsub.s f20, f3, f8, f22, rdn # perform operation
fnmsub.s f20, f3, f8, f22, rmm # perform operation
fnmsub.s f20, f3, f8, f22, rne # perform operation
fnmsub.s f20, f3, f8, f22, rtz # perform operation
fnmsub.s f20, f3, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x221c9433e14b13ef # load x3 with value 0x221c9433e14b13ef
sw x3, 0(x2) # store 0x221c9433e14b13ef in memory
flw f16, 0(x2) # load 0x221c9433e14b13ef from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmsub.s f20, f3, f16, f26, dyn # perform operation
fnmsub.s f20, f3, f16, f26, rdn # perform operation
fnmsub.s f20, f3, f16, f26, rmm # perform operation
fnmsub.s f20, f3, f16, f26, rne # perform operation
fnmsub.s f20, f3, f16, f26, rtz # perform operation
fnmsub.s f20, f3, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x89d86f2aca2e7cea # load x3 with value 0x89d86f2aca2e7cea
sw x3, 0(x2) # store 0x89d86f2aca2e7cea in memory
flw f30, 0(x2) # load 0x89d86f2aca2e7cea from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fnmsub.s f11, f25, f30, f5, dyn # perform operation
fnmsub.s f11, f25, f30, f5, rdn # perform operation
fnmsub.s f11, f25, f30, f5, rmm # perform operation
fnmsub.s f11, f25, f30, f5, rne # perform operation
fnmsub.s f11, f25, f30, f5, rtz # perform operation
fnmsub.s f11, f25, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xeefd07eb1c5a16e9 # load x3 with value 0xeefd07eb1c5a16e9
sw x3, 0(x2) # store 0xeefd07eb1c5a16e9 in memory
flw f3, 0(x2) # load 0xeefd07eb1c5a16e9 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f23, f18, f3, f6, dyn # perform operation
fnmsub.s f23, f18, f3, f6, rdn # perform operation
fnmsub.s f23, f18, f3, f6, rmm # perform operation
fnmsub.s f23, f18, f3, f6, rne # perform operation
fnmsub.s f23, f18, f3, f6, rtz # perform operation
fnmsub.s f23, f18, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xa7614a2cc7a41024 # load x3 with value 0xa7614a2cc7a41024
sw x3, 0(x2) # store 0xa7614a2cc7a41024 in memory
flw f27, 0(x2) # load 0xa7614a2cc7a41024 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmsub.s f17, f5, f27, f20, dyn # perform operation
fnmsub.s f17, f5, f27, f20, rdn # perform operation
fnmsub.s f17, f5, f27, f20, rmm # perform operation
fnmsub.s f17, f5, f27, f20, rne # perform operation
fnmsub.s f17, f5, f27, f20, rtz # perform operation
fnmsub.s f17, f5, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x6863cbc76cee030d # load x3 with value 0x6863cbc76cee030d
sw x3, 0(x2) # store 0x6863cbc76cee030d in memory
flw f13, 0(x2) # load 0x6863cbc76cee030d from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmsub.s f11, f25, f13, f19, dyn # perform operation
fnmsub.s f11, f25, f13, f19, rdn # perform operation
fnmsub.s f11, f25, f13, f19, rmm # perform operation
fnmsub.s f11, f25, f13, f19, rne # perform operation
fnmsub.s f11, f25, f13, f19, rtz # perform operation
fnmsub.s f11, f25, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x92c256fdc8cd5e35 # load x3 with value 0x92c256fdc8cd5e35
sw x3, 0(x2) # store 0x92c256fdc8cd5e35 in memory
flw f15, 0(x2) # load 0x92c256fdc8cd5e35 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmsub.s f9, f7, f15, f20, dyn # perform operation
fnmsub.s f9, f7, f15, f20, rdn # perform operation
fnmsub.s f9, f7, f15, f20, rmm # perform operation
fnmsub.s f9, f7, f15, f20, rne # perform operation
fnmsub.s f9, f7, f15, f20, rtz # perform operation
fnmsub.s f9, f7, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x877689a3cc411b61 # load x3 with value 0x877689a3cc411b61
sw x3, 0(x2) # store 0x877689a3cc411b61 in memory
flw f5, 0(x2) # load 0x877689a3cc411b61 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f25, f21, f5, f29, dyn # perform operation
fnmsub.s f25, f21, f5, f29, rdn # perform operation
fnmsub.s f25, f21, f5, f29, rmm # perform operation
fnmsub.s f25, f21, f5, f29, rne # perform operation
fnmsub.s f25, f21, f5, f29, rtz # perform operation
fnmsub.s f25, f21, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f5, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xead7999746a51a56 # load x3 with value 0xead7999746a51a56
sw x3, 0(x2) # store 0xead7999746a51a56 in memory
flw f6, 0(x2) # load 0xead7999746a51a56 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f8, f5, f6, f24, dyn # perform operation
fnmsub.s f8, f5, f6, f24, rdn # perform operation
fnmsub.s f8, f5, f6, f24, rmm # perform operation
fnmsub.s f8, f5, f6, f24, rne # perform operation
fnmsub.s f8, f5, f6, f24, rtz # perform operation
fnmsub.s f8, f5, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f5, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0xba529f0c6969f5d0 # load x3 with value 0xba529f0c6969f5d0
sw x3, 0(x2) # store 0xba529f0c6969f5d0 in memory
flw f30, 0(x2) # load 0xba529f0c6969f5d0 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fnmsub.s f31, f12, f30, f17, dyn # perform operation
fnmsub.s f31, f12, f30, f17, rdn # perform operation
fnmsub.s f31, f12, f30, f17, rmm # perform operation
fnmsub.s f31, f12, f30, f17, rne # perform operation
fnmsub.s f31, f12, f30, f17, rtz # perform operation
fnmsub.s f31, f12, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f12, f30, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x4a391a31dd0bda9e # load x3 with value 0x4a391a31dd0bda9e
sw x3, 0(x2) # store 0x4a391a31dd0bda9e in memory
flw f9, 0(x2) # load 0x4a391a31dd0bda9e from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmsub.s f10, f1, f9, f18, dyn # perform operation
fnmsub.s f10, f1, f9, f18, rdn # perform operation
fnmsub.s f10, f1, f9, f18, rmm # perform operation
fnmsub.s f10, f1, f9, f18, rne # perform operation
fnmsub.s f10, f1, f9, f18, rtz # perform operation
fnmsub.s f10, f1, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x42cd85a885b402f2 # load x3 with value 0x42cd85a885b402f2
sw x3, 0(x2) # store 0x42cd85a885b402f2 in memory
flw f9, 0(x2) # load 0x42cd85a885b402f2 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmsub.s f2, f23, f9, f10, dyn # perform operation
fnmsub.s f2, f23, f9, f10, rdn # perform operation
fnmsub.s f2, f23, f9, f10, rmm # perform operation
fnmsub.s f2, f23, f9, f10, rne # perform operation
fnmsub.s f2, f23, f9, f10, rtz # perform operation
fnmsub.s f2, f23, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f9, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x629f5feb11c91d62 # load x3 with value 0x629f5feb11c91d62
sw x3, 0(x2) # store 0x629f5feb11c91d62 in memory
flw f7, 0(x2) # load 0x629f5feb11c91d62 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fnmsub.s f18, f27, f7, f17, dyn # perform operation
fnmsub.s f18, f27, f7, f17, rdn # perform operation
fnmsub.s f18, f27, f7, f17, rmm # perform operation
fnmsub.s f18, f27, f7, f17, rne # perform operation
fnmsub.s f18, f27, f7, f17, rtz # perform operation
fnmsub.s f18, f27, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0xd9add7c4803bc87f # load x3 with value 0xd9add7c4803bc87f
sw x3, 0(x2) # store 0xd9add7c4803bc87f in memory
flw f23, 0(x2) # load 0xd9add7c4803bc87f from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmsub.s f12, f1, f23, f6, dyn # perform operation
fnmsub.s f12, f1, f23, f6, rdn # perform operation
fnmsub.s f12, f1, f23, f6, rmm # perform operation
fnmsub.s f12, f1, f23, f6, rne # perform operation
fnmsub.s f12, f1, f23, f6, rtz # perform operation
fnmsub.s f12, f1, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x79bb9c92f7181954 # load x3 with value 0x79bb9c92f7181954
sw x3, 0(x2) # store 0x79bb9c92f7181954 in memory
flw f29, 0(x2) # load 0x79bb9c92f7181954 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmsub.s f20, f5, f29, f9, dyn # perform operation
fnmsub.s f20, f5, f29, f9, rdn # perform operation
fnmsub.s f20, f5, f29, f9, rmm # perform operation
fnmsub.s f20, f5, f29, f9, rne # perform operation
fnmsub.s f20, f5, f29, f9, rtz # perform operation
fnmsub.s f20, f5, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x1382deb1139c39c # load x3 with value 0x1382deb1139c39c
sw x3, 0(x2) # store 0x1382deb1139c39c in memory
flw f24, 0(x2) # load 0x1382deb1139c39c from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f8, f17, f24, f25, dyn # perform operation
fnmsub.s f8, f17, f24, f25, rdn # perform operation
fnmsub.s f8, f17, f24, f25, rmm # perform operation
fnmsub.s f8, f17, f24, f25, rne # perform operation
fnmsub.s f8, f17, f24, f25, rtz # perform operation
fnmsub.s f8, f17, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xb1e3f6946d408d8a # load x3 with value 0xb1e3f6946d408d8a
sw x3, 0(x2) # store 0xb1e3f6946d408d8a in memory
flw f13, 0(x2) # load 0xb1e3f6946d408d8a from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmsub.s f30, f3, f13, f2, dyn # perform operation
fnmsub.s f30, f3, f13, f2, rdn # perform operation
fnmsub.s f30, f3, f13, f2, rmm # perform operation
fnmsub.s f30, f3, f13, f2, rne # perform operation
fnmsub.s f30, f3, f13, f2, rtz # perform operation
fnmsub.s f30, f3, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xfc7abc8cab767741 # load x3 with value 0xfc7abc8cab767741
sw x3, 0(x2) # store 0xfc7abc8cab767741 in memory
flw f2, 0(x2) # load 0xfc7abc8cab767741 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmsub.s f28, f20, f2, f5, dyn # perform operation
fnmsub.s f28, f20, f2, f5, rdn # perform operation
fnmsub.s f28, f20, f2, f5, rmm # perform operation
fnmsub.s f28, f20, f2, f5, rne # perform operation
fnmsub.s f28, f20, f2, f5, rtz # perform operation
fnmsub.s f28, f20, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f20, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x9643aca56e12e94e # load x3 with value 0x9643aca56e12e94e
sw x3, 0(x2) # store 0x9643aca56e12e94e in memory
flw f27, 0(x2) # load 0x9643aca56e12e94e from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f20, f23, f27, f14, dyn # perform operation
fnmsub.s f20, f23, f27, f14, rdn # perform operation
fnmsub.s f20, f23, f27, f14, rmm # perform operation
fnmsub.s f20, f23, f27, f14, rne # perform operation
fnmsub.s f20, f23, f27, f14, rtz # perform operation
fnmsub.s f20, f23, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x1bb7251d8c284b3d # load x3 with value 0x1bb7251d8c284b3d
sw x3, 0(x2) # store 0x1bb7251d8c284b3d in memory
flw f10, 0(x2) # load 0x1bb7251d8c284b3d from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmsub.s f25, f11, f10, f9, dyn # perform operation
fnmsub.s f25, f11, f10, f9, rdn # perform operation
fnmsub.s f25, f11, f10, f9, rmm # perform operation
fnmsub.s f25, f11, f10, f9, rne # perform operation
fnmsub.s f25, f11, f10, f9, rtz # perform operation
fnmsub.s f25, f11, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xb621044cbccfb354 # load x3 with value 0xb621044cbccfb354
sw x3, 0(x2) # store 0xb621044cbccfb354 in memory
flw f23, 0(x2) # load 0xb621044cbccfb354 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmsub.s f25, f22, f23, f26, dyn # perform operation
fnmsub.s f25, f22, f23, f26, rdn # perform operation
fnmsub.s f25, f22, f23, f26, rmm # perform operation
fnmsub.s f25, f22, f23, f26, rne # perform operation
fnmsub.s f25, f22, f23, f26, rtz # perform operation
fnmsub.s f25, f22, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f22, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x5c19106c14430760 # load x3 with value 0x5c19106c14430760
sw x3, 0(x2) # store 0x5c19106c14430760 in memory
flw f6, 0(x2) # load 0x5c19106c14430760 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f8, f18, f6, f21, dyn # perform operation
fnmsub.s f8, f18, f6, f21, rdn # perform operation
fnmsub.s f8, f18, f6, f21, rmm # perform operation
fnmsub.s f8, f18, f6, f21, rne # perform operation
fnmsub.s f8, f18, f6, f21, rtz # perform operation
fnmsub.s f8, f18, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f18, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f18, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x8e491986b75ac752 # load x3 with value 0x8e491986b75ac752
sw x3, 0(x2) # store 0x8e491986b75ac752 in memory
flw f7, 0(x2) # load 0x8e491986b75ac752 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f10, f20, f7, f30, dyn # perform operation
fnmsub.s f10, f20, f7, f30, rdn # perform operation
fnmsub.s f10, f20, f7, f30, rmm # perform operation
fnmsub.s f10, f20, f7, f30, rne # perform operation
fnmsub.s f10, f20, f7, f30, rtz # perform operation
fnmsub.s f10, f20, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x3bb031722fb2ab9 # load x3 with value 0x3bb031722fb2ab9
sw x3, 0(x2) # store 0x3bb031722fb2ab9 in memory
flw f7, 0(x2) # load 0x3bb031722fb2ab9 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fnmsub.s f31, f22, f7, f24, dyn # perform operation
fnmsub.s f31, f22, f7, f24, rdn # perform operation
fnmsub.s f31, f22, f7, f24, rmm # perform operation
fnmsub.s f31, f22, f7, f24, rne # perform operation
fnmsub.s f31, f22, f7, f24, rtz # perform operation
fnmsub.s f31, f22, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xc4afdce38cab6404 # load x3 with value 0xc4afdce38cab6404
sw x3, 0(x2) # store 0xc4afdce38cab6404 in memory
flw f17, 0(x2) # load 0xc4afdce38cab6404 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmsub.s f20, f22, f17, f21, dyn # perform operation
fnmsub.s f20, f22, f17, f21, rdn # perform operation
fnmsub.s f20, f22, f17, f21, rmm # perform operation
fnmsub.s f20, f22, f17, f21, rne # perform operation
fnmsub.s f20, f22, f17, f21, rtz # perform operation
fnmsub.s f20, f22, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xcf7665e27a570a35 # load x3 with value 0xcf7665e27a570a35
sw x3, 0(x2) # store 0xcf7665e27a570a35 in memory
flw f21, 0(x2) # load 0xcf7665e27a570a35 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmsub.s f24, f1, f21, f29, dyn # perform operation
fnmsub.s f24, f1, f21, f29, rdn # perform operation
fnmsub.s f24, f1, f21, f29, rmm # perform operation
fnmsub.s f24, f1, f21, f29, rne # perform operation
fnmsub.s f24, f1, f21, f29, rtz # perform operation
fnmsub.s f24, f1, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x3c797ad053acd566 # load x3 with value 0x3c797ad053acd566
sw x3, 0(x2) # store 0x3c797ad053acd566 in memory
flw f31, 0(x2) # load 0x3c797ad053acd566 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fnmsub.s f26, f12, f31, f21, dyn # perform operation
fnmsub.s f26, f12, f31, f21, rdn # perform operation
fnmsub.s f26, f12, f31, f21, rmm # perform operation
fnmsub.s f26, f12, f31, f21, rne # perform operation
fnmsub.s f26, f12, f31, f21, rtz # perform operation
fnmsub.s f26, f12, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x2e8d49d35eaa14a0 # load x3 with value 0x2e8d49d35eaa14a0
sw x3, 0(x2) # store 0x2e8d49d35eaa14a0 in memory
flw f26, 0(x2) # load 0x2e8d49d35eaa14a0 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmsub.s f10, f6, f26, f31, dyn # perform operation
fnmsub.s f10, f6, f26, f31, rdn # perform operation
fnmsub.s f10, f6, f26, f31, rmm # perform operation
fnmsub.s f10, f6, f26, f31, rne # perform operation
fnmsub.s f10, f6, f26, f31, rtz # perform operation
fnmsub.s f10, f6, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f6, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f6, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f6, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f6, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f6, f26, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x2ca4308f642a5976 # load x3 with value 0x2ca4308f642a5976
sw x3, 0(x2) # store 0x2ca4308f642a5976 in memory
flw f25, 0(x2) # load 0x2ca4308f642a5976 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmsub.s f2, f1, f25, f11, dyn # perform operation
fnmsub.s f2, f1, f25, f11, rdn # perform operation
fnmsub.s f2, f1, f25, f11, rmm # perform operation
fnmsub.s f2, f1, f25, f11, rne # perform operation
fnmsub.s f2, f1, f25, f11, rtz # perform operation
fnmsub.s f2, f1, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x992cd5d7c15abf94 # load x3 with value 0x992cd5d7c15abf94
sw x3, 0(x2) # store 0x992cd5d7c15abf94 in memory
flw f29, 0(x2) # load 0x992cd5d7c15abf94 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmsub.s f23, f13, f29, f3, dyn # perform operation
fnmsub.s f23, f13, f29, f3, rdn # perform operation
fnmsub.s f23, f13, f29, f3, rmm # perform operation
fnmsub.s f23, f13, f29, f3, rne # perform operation
fnmsub.s f23, f13, f29, f3, rtz # perform operation
fnmsub.s f23, f13, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xb2f5919ec3b2fcae # load x3 with value 0xb2f5919ec3b2fcae
sw x3, 0(x2) # store 0xb2f5919ec3b2fcae in memory
flw f1, 0(x2) # load 0xb2f5919ec3b2fcae from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f15, f11, f1, f8, dyn # perform operation
fnmsub.s f15, f11, f1, f8, rdn # perform operation
fnmsub.s f15, f11, f1, f8, rmm # perform operation
fnmsub.s f15, f11, f1, f8, rne # perform operation
fnmsub.s f15, f11, f1, f8, rtz # perform operation
fnmsub.s f15, f11, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x99c961a76e1770d1 # load x3 with value 0x99c961a76e1770d1
sw x3, 0(x2) # store 0x99c961a76e1770d1 in memory
flw f10, 0(x2) # load 0x99c961a76e1770d1 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmsub.s f17, f6, f10, f31, dyn # perform operation
fnmsub.s f17, f6, f10, f31, rdn # perform operation
fnmsub.s f17, f6, f10, f31, rmm # perform operation
fnmsub.s f17, f6, f10, f31, rne # perform operation
fnmsub.s f17, f6, f10, f31, rtz # perform operation
fnmsub.s f17, f6, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x59ccabaef56f90a3 # load x3 with value 0x59ccabaef56f90a3
sw x3, 0(x2) # store 0x59ccabaef56f90a3 in memory
flw f16, 0(x2) # load 0x59ccabaef56f90a3 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f18, f22, f16, f17, dyn # perform operation
fnmsub.s f18, f22, f16, f17, rdn # perform operation
fnmsub.s f18, f22, f16, f17, rmm # perform operation
fnmsub.s f18, f22, f16, f17, rne # perform operation
fnmsub.s f18, f22, f16, f17, rtz # perform operation
fnmsub.s f18, f22, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xd02c5fef4c7b5985 # load x3 with value 0xd02c5fef4c7b5985
sw x3, 0(x2) # store 0xd02c5fef4c7b5985 in memory
flw f5, 0(x2) # load 0xd02c5fef4c7b5985 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmsub.s f14, f15, f5, f31, dyn # perform operation
fnmsub.s f14, f15, f5, f31, rdn # perform operation
fnmsub.s f14, f15, f5, f31, rmm # perform operation
fnmsub.s f14, f15, f5, f31, rne # perform operation
fnmsub.s f14, f15, f5, f31, rtz # perform operation
fnmsub.s f14, f15, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f15, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x99cb25693b677beb # load x3 with value 0x99cb25693b677beb
sw x3, 0(x2) # store 0x99cb25693b677beb in memory
flw f9, 0(x2) # load 0x99cb25693b677beb from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f15, f19, f9, f24, dyn # perform operation
fnmsub.s f15, f19, f9, f24, rdn # perform operation
fnmsub.s f15, f19, f9, f24, rmm # perform operation
fnmsub.s f15, f19, f9, f24, rne # perform operation
fnmsub.s f15, f19, f9, f24, rtz # perform operation
fnmsub.s f15, f19, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x7b60638f722047ec # load x3 with value 0x7b60638f722047ec
sw x3, 0(x2) # store 0x7b60638f722047ec in memory
flw f12, 0(x2) # load 0x7b60638f722047ec from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmsub.s f29, f1, f12, f24, dyn # perform operation
fnmsub.s f29, f1, f12, f24, rdn # perform operation
fnmsub.s f29, f1, f12, f24, rmm # perform operation
fnmsub.s f29, f1, f12, f24, rne # perform operation
fnmsub.s f29, f1, f12, f24, rtz # perform operation
fnmsub.s f29, f1, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f1, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f1, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f1, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f1, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f1, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x27be54f6912c0c71 # load x3 with value 0x27be54f6912c0c71
sw x3, 0(x2) # store 0x27be54f6912c0c71 in memory
flw f2, 0(x2) # load 0x27be54f6912c0c71 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmsub.s f11, f12, f2, f16, dyn # perform operation
fnmsub.s f11, f12, f2, f16, rdn # perform operation
fnmsub.s f11, f12, f2, f16, rmm # perform operation
fnmsub.s f11, f12, f2, f16, rne # perform operation
fnmsub.s f11, f12, f2, f16, rtz # perform operation
fnmsub.s f11, f12, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x8ce219247981b5f8 # load x3 with value 0x8ce219247981b5f8
sw x3, 0(x2) # store 0x8ce219247981b5f8 in memory
flw f17, 0(x2) # load 0x8ce219247981b5f8 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmsub.s f10, f6, f17, f14, dyn # perform operation
fnmsub.s f10, f6, f17, f14, rdn # perform operation
fnmsub.s f10, f6, f17, f14, rmm # perform operation
fnmsub.s f10, f6, f17, f14, rne # perform operation
fnmsub.s f10, f6, f17, f14, rtz # perform operation
fnmsub.s f10, f6, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f6, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xca4d1fc4e4144558 # load x3 with value 0xca4d1fc4e4144558
sw x3, 0(x2) # store 0xca4d1fc4e4144558 in memory
flw f2, 0(x2) # load 0xca4d1fc4e4144558 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmsub.s f13, f23, f2, f30, dyn # perform operation
fnmsub.s f13, f23, f2, f30, rdn # perform operation
fnmsub.s f13, f23, f2, f30, rmm # perform operation
fnmsub.s f13, f23, f2, f30, rne # perform operation
fnmsub.s f13, f23, f2, f30, rtz # perform operation
fnmsub.s f13, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x7105448773328b8 # load x3 with value 0x7105448773328b8
sw x3, 0(x2) # store 0x7105448773328b8 in memory
flw f8, 0(x2) # load 0x7105448773328b8 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmsub.s f11, f21, f8, f31, dyn # perform operation
fnmsub.s f11, f21, f8, f31, rdn # perform operation
fnmsub.s f11, f21, f8, f31, rmm # perform operation
fnmsub.s f11, f21, f8, f31, rne # perform operation
fnmsub.s f11, f21, f8, f31, rtz # perform operation
fnmsub.s f11, f21, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x43d45acbe5b240c # load x3 with value 0x43d45acbe5b240c
sw x3, 0(x2) # store 0x43d45acbe5b240c in memory
flw f15, 0(x2) # load 0x43d45acbe5b240c from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmsub.s f18, f2, f15, f22, dyn # perform operation
fnmsub.s f18, f2, f15, f22, rdn # perform operation
fnmsub.s f18, f2, f15, f22, rmm # perform operation
fnmsub.s f18, f2, f15, f22, rne # perform operation
fnmsub.s f18, f2, f15, f22, rtz # perform operation
fnmsub.s f18, f2, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x3b0bde78f04256bb # load x3 with value 0x3b0bde78f04256bb
sw x3, 0(x2) # store 0x3b0bde78f04256bb in memory
flw f30, 0(x2) # load 0x3b0bde78f04256bb from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fnmsub.s f8, f24, f30, f27, dyn # perform operation
fnmsub.s f8, f24, f30, f27, rdn # perform operation
fnmsub.s f8, f24, f30, f27, rmm # perform operation
fnmsub.s f8, f24, f30, f27, rne # perform operation
fnmsub.s f8, f24, f30, f27, rtz # perform operation
fnmsub.s f8, f24, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x837300c84b75bf36 # load x3 with value 0x837300c84b75bf36
sw x3, 0(x2) # store 0x837300c84b75bf36 in memory
flw f23, 0(x2) # load 0x837300c84b75bf36 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmsub.s f10, f1, f23, f25, dyn # perform operation
fnmsub.s f10, f1, f23, f25, rdn # perform operation
fnmsub.s f10, f1, f23, f25, rmm # perform operation
fnmsub.s f10, f1, f23, f25, rne # perform operation
fnmsub.s f10, f1, f23, f25, rtz # perform operation
fnmsub.s f10, f1, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x5791cdbafc80149e # load x3 with value 0x5791cdbafc80149e
sw x3, 0(x2) # store 0x5791cdbafc80149e in memory
flw f6, 0(x2) # load 0x5791cdbafc80149e from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f31, f26, f6, f25, dyn # perform operation
fnmsub.s f31, f26, f6, f25, rdn # perform operation
fnmsub.s f31, f26, f6, f25, rmm # perform operation
fnmsub.s f31, f26, f6, f25, rne # perform operation
fnmsub.s f31, f26, f6, f25, rtz # perform operation
fnmsub.s f31, f26, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x61e1ba31bebf0848 # load x3 with value 0x61e1ba31bebf0848
sw x3, 0(x2) # store 0x61e1ba31bebf0848 in memory
flw f20, 0(x2) # load 0x61e1ba31bebf0848 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f17, f5, f20, f25, dyn # perform operation
fnmsub.s f17, f5, f20, f25, rdn # perform operation
fnmsub.s f17, f5, f20, f25, rmm # perform operation
fnmsub.s f17, f5, f20, f25, rne # perform operation
fnmsub.s f17, f5, f20, f25, rtz # perform operation
fnmsub.s f17, f5, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x47a0f1f3f3c235a0 # load x3 with value 0x47a0f1f3f3c235a0
sw x3, 0(x2) # store 0x47a0f1f3f3c235a0 in memory
flw f11, 0(x2) # load 0x47a0f1f3f3c235a0 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmsub.s f22, f16, f11, f29, dyn # perform operation
fnmsub.s f22, f16, f11, f29, rdn # perform operation
fnmsub.s f22, f16, f11, f29, rmm # perform operation
fnmsub.s f22, f16, f11, f29, rne # perform operation
fnmsub.s f22, f16, f11, f29, rtz # perform operation
fnmsub.s f22, f16, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x83bc3cf424bf109c # load x3 with value 0x83bc3cf424bf109c
sw x3, 0(x2) # store 0x83bc3cf424bf109c in memory
flw f9, 0(x2) # load 0x83bc3cf424bf109c from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f2, f29, f9, f14, dyn # perform operation
fnmsub.s f2, f29, f9, f14, rdn # perform operation
fnmsub.s f2, f29, f9, f14, rmm # perform operation
fnmsub.s f2, f29, f9, f14, rne # perform operation
fnmsub.s f2, f29, f9, f14, rtz # perform operation
fnmsub.s f2, f29, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xa36bb9227d06f81a # load x3 with value 0xa36bb9227d06f81a
sw x3, 0(x2) # store 0xa36bb9227d06f81a in memory
flw f16, 0(x2) # load 0xa36bb9227d06f81a from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmsub.s f31, f19, f16, f26, dyn # perform operation
fnmsub.s f31, f19, f16, f26, rdn # perform operation
fnmsub.s f31, f19, f16, f26, rmm # perform operation
fnmsub.s f31, f19, f16, f26, rne # perform operation
fnmsub.s f31, f19, f16, f26, rtz # perform operation
fnmsub.s f31, f19, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x8025fcb1d8cb5470 # load x3 with value 0x8025fcb1d8cb5470
sw x3, 0(x2) # store 0x8025fcb1d8cb5470 in memory
flw f19, 0(x2) # load 0x8025fcb1d8cb5470 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f16, f24, f19, f9, dyn # perform operation
fnmsub.s f16, f24, f19, f9, rdn # perform operation
fnmsub.s f16, f24, f19, f9, rmm # perform operation
fnmsub.s f16, f24, f19, f9, rne # perform operation
fnmsub.s f16, f24, f19, f9, rtz # perform operation
fnmsub.s f16, f24, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x99f71ee9cceafdf5 # load x3 with value 0x99f71ee9cceafdf5
sw x3, 0(x2) # store 0x99f71ee9cceafdf5 in memory
flw f23, 0(x2) # load 0x99f71ee9cceafdf5 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmsub.s f27, f15, f23, f29, dyn # perform operation
fnmsub.s f27, f15, f23, f29, rdn # perform operation
fnmsub.s f27, f15, f23, f29, rmm # perform operation
fnmsub.s f27, f15, f23, f29, rne # perform operation
fnmsub.s f27, f15, f23, f29, rtz # perform operation
fnmsub.s f27, f15, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xcb9eb87217eac221 # load x3 with value 0xcb9eb87217eac221
sw x3, 0(x2) # store 0xcb9eb87217eac221 in memory
flw f31, 0(x2) # load 0xcb9eb87217eac221 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fnmsub.s f27, f5, f31, f18, dyn # perform operation
fnmsub.s f27, f5, f31, f18, rdn # perform operation
fnmsub.s f27, f5, f31, f18, rmm # perform operation
fnmsub.s f27, f5, f31, f18, rne # perform operation
fnmsub.s f27, f5, f31, f18, rtz # perform operation
fnmsub.s f27, f5, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x62dfaaf2e6e168d5 # load x3 with value 0x62dfaaf2e6e168d5
sw x3, 0(x2) # store 0x62dfaaf2e6e168d5 in memory
flw f15, 0(x2) # load 0x62dfaaf2e6e168d5 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmsub.s f7, f16, f15, f22, dyn # perform operation
fnmsub.s f7, f16, f15, f22, rdn # perform operation
fnmsub.s f7, f16, f15, f22, rmm # perform operation
fnmsub.s f7, f16, f15, f22, rne # perform operation
fnmsub.s f7, f16, f15, f22, rtz # perform operation
fnmsub.s f7, f16, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x81b2bc9ce6d67ccb # load x3 with value 0x81b2bc9ce6d67ccb
sw x3, 0(x2) # store 0x81b2bc9ce6d67ccb in memory
flw f24, 0(x2) # load 0x81b2bc9ce6d67ccb from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fnmsub.s f23, f26, f24, f20, dyn # perform operation
fnmsub.s f23, f26, f24, f20, rdn # perform operation
fnmsub.s f23, f26, f24, f20, rmm # perform operation
fnmsub.s f23, f26, f24, f20, rne # perform operation
fnmsub.s f23, f26, f24, f20, rtz # perform operation
fnmsub.s f23, f26, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x96f25a16dcf65b6f # load x3 with value 0x96f25a16dcf65b6f
sw x3, 0(x2) # store 0x96f25a16dcf65b6f in memory
flw f29, 0(x2) # load 0x96f25a16dcf65b6f from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmsub.s f22, f24, f29, f27, dyn # perform operation
fnmsub.s f22, f24, f29, f27, rdn # perform operation
fnmsub.s f22, f24, f29, f27, rmm # perform operation
fnmsub.s f22, f24, f29, f27, rne # perform operation
fnmsub.s f22, f24, f29, f27, rtz # perform operation
fnmsub.s f22, f24, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x261cae3cf3f7a178 # load x3 with value 0x261cae3cf3f7a178
sw x3, 0(x2) # store 0x261cae3cf3f7a178 in memory
flw f2, 0(x2) # load 0x261cae3cf3f7a178 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmsub.s f3, f23, f2, f17, dyn # perform operation
fnmsub.s f3, f23, f2, f17, rdn # perform operation
fnmsub.s f3, f23, f2, f17, rmm # perform operation
fnmsub.s f3, f23, f2, f17, rne # perform operation
fnmsub.s f3, f23, f2, f17, rtz # perform operation
fnmsub.s f3, f23, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f23, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f23, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f23, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f23, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f23, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xe27c9deb83eaa4cc # load x3 with value 0xe27c9deb83eaa4cc
sw x3, 0(x2) # store 0xe27c9deb83eaa4cc in memory
flw f17, 0(x2) # load 0xe27c9deb83eaa4cc from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmsub.s f2, f23, f17, f7, dyn # perform operation
fnmsub.s f2, f23, f17, f7, rdn # perform operation
fnmsub.s f2, f23, f17, f7, rmm # perform operation
fnmsub.s f2, f23, f17, f7, rne # perform operation
fnmsub.s f2, f23, f17, f7, rtz # perform operation
fnmsub.s f2, f23, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x46d7dfd3dbcf4625 # load x3 with value 0x46d7dfd3dbcf4625
sw x3, 0(x2) # store 0x46d7dfd3dbcf4625 in memory
flw f27, 0(x2) # load 0x46d7dfd3dbcf4625 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmsub.s f19, f13, f27, f9, dyn # perform operation
fnmsub.s f19, f13, f27, f9, rdn # perform operation
fnmsub.s f19, f13, f27, f9, rmm # perform operation
fnmsub.s f19, f13, f27, f9, rne # perform operation
fnmsub.s f19, f13, f27, f9, rtz # perform operation
fnmsub.s f19, f13, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x88e859ffb7d36edd # load x3 with value 0x88e859ffb7d36edd
sw x3, 0(x2) # store 0x88e859ffb7d36edd in memory
flw f21, 0(x2) # load 0x88e859ffb7d36edd from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmsub.s f5, f8, f21, f20, dyn # perform operation
fnmsub.s f5, f8, f21, f20, rdn # perform operation
fnmsub.s f5, f8, f21, f20, rmm # perform operation
fnmsub.s f5, f8, f21, f20, rne # perform operation
fnmsub.s f5, f8, f21, f20, rtz # perform operation
fnmsub.s f5, f8, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x5c4fd4443edf94f2 # load x3 with value 0x5c4fd4443edf94f2
sw x3, 0(x2) # store 0x5c4fd4443edf94f2 in memory
flw f29, 0(x2) # load 0x5c4fd4443edf94f2 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmsub.s f16, f19, f29, f30, dyn # perform operation
fnmsub.s f16, f19, f29, f30, rdn # perform operation
fnmsub.s f16, f19, f29, f30, rmm # perform operation
fnmsub.s f16, f19, f29, f30, rne # perform operation
fnmsub.s f16, f19, f29, f30, rtz # perform operation
fnmsub.s f16, f19, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xabd95a0315da219e # load x3 with value 0xabd95a0315da219e
sw x3, 0(x2) # store 0xabd95a0315da219e in memory
flw f18, 0(x2) # load 0xabd95a0315da219e from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmsub.s f24, f15, f18, f21, dyn # perform operation
fnmsub.s f24, f15, f18, f21, rdn # perform operation
fnmsub.s f24, f15, f18, f21, rmm # perform operation
fnmsub.s f24, f15, f18, f21, rne # perform operation
fnmsub.s f24, f15, f18, f21, rtz # perform operation
fnmsub.s f24, f15, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xe94c254dee6de0ea # load x3 with value 0xe94c254dee6de0ea
sw x3, 0(x2) # store 0xe94c254dee6de0ea in memory
flw f13, 0(x2) # load 0xe94c254dee6de0ea from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f3, f27, f13, f29, dyn # perform operation
fnmsub.s f3, f27, f13, f29, rdn # perform operation
fnmsub.s f3, f27, f13, f29, rmm # perform operation
fnmsub.s f3, f27, f13, f29, rne # perform operation
fnmsub.s f3, f27, f13, f29, rtz # perform operation
fnmsub.s f3, f27, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xe2c437f3623b722e # load x3 with value 0xe2c437f3623b722e
sw x3, 0(x2) # store 0xe2c437f3623b722e in memory
flw f27, 0(x2) # load 0xe2c437f3623b722e from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmsub.s f24, f22, f27, f6, dyn # perform operation
fnmsub.s f24, f22, f27, f6, rdn # perform operation
fnmsub.s f24, f22, f27, f6, rmm # perform operation
fnmsub.s f24, f22, f27, f6, rne # perform operation
fnmsub.s f24, f22, f27, f6, rtz # perform operation
fnmsub.s f24, f22, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x3eea12e82fb0ece # load x3 with value 0x3eea12e82fb0ece
sw x3, 0(x2) # store 0x3eea12e82fb0ece in memory
flw f12, 0(x2) # load 0x3eea12e82fb0ece from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f18, f25, f12, f15, dyn # perform operation
fnmsub.s f18, f25, f12, f15, rdn # perform operation
fnmsub.s f18, f25, f12, f15, rmm # perform operation
fnmsub.s f18, f25, f12, f15, rne # perform operation
fnmsub.s f18, f25, f12, f15, rtz # perform operation
fnmsub.s f18, f25, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xf2b95883fc439ff7 # load x3 with value 0xf2b95883fc439ff7
sw x3, 0(x2) # store 0xf2b95883fc439ff7 in memory
flw f23, 0(x2) # load 0xf2b95883fc439ff7 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f6, f2, f23, f8, dyn # perform operation
fnmsub.s f6, f2, f23, f8, rdn # perform operation
fnmsub.s f6, f2, f23, f8, rmm # perform operation
fnmsub.s f6, f2, f23, f8, rne # perform operation
fnmsub.s f6, f2, f23, f8, rtz # perform operation
fnmsub.s f6, f2, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x342a425f73fc89b5 # load x3 with value 0x342a425f73fc89b5
sw x3, 0(x2) # store 0x342a425f73fc89b5 in memory
flw f6, 0(x2) # load 0x342a425f73fc89b5 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmsub.s f24, f13, f6, f15, dyn # perform operation
fnmsub.s f24, f13, f6, f15, rdn # perform operation
fnmsub.s f24, f13, f6, f15, rmm # perform operation
fnmsub.s f24, f13, f6, f15, rne # perform operation
fnmsub.s f24, f13, f6, f15, rtz # perform operation
fnmsub.s f24, f13, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x74189f1dbb7c9c6a # load x3 with value 0x74189f1dbb7c9c6a
sw x3, 0(x2) # store 0x74189f1dbb7c9c6a in memory
flw f27, 0(x2) # load 0x74189f1dbb7c9c6a from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fnmsub.s f6, f28, f27, f16, dyn # perform operation
fnmsub.s f6, f28, f27, f16, rdn # perform operation
fnmsub.s f6, f28, f27, f16, rmm # perform operation
fnmsub.s f6, f28, f27, f16, rne # perform operation
fnmsub.s f6, f28, f27, f16, rtz # perform operation
fnmsub.s f6, f28, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x74a8b3622b61f156 # load x3 with value 0x74a8b3622b61f156
sw x3, 0(x2) # store 0x74a8b3622b61f156 in memory
flw f3, 0(x2) # load 0x74a8b3622b61f156 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmsub.s f9, f21, f3, f12, dyn # perform operation
fnmsub.s f9, f21, f3, f12, rdn # perform operation
fnmsub.s f9, f21, f3, f12, rmm # perform operation
fnmsub.s f9, f21, f3, f12, rne # perform operation
fnmsub.s f9, f21, f3, f12, rtz # perform operation
fnmsub.s f9, f21, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f21, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x253c91ae2a6550c0 # load x3 with value 0x253c91ae2a6550c0
sw x3, 0(x2) # store 0x253c91ae2a6550c0 in memory
flw f6, 0(x2) # load 0x253c91ae2a6550c0 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f11, f15, f6, f14, dyn # perform operation
fnmsub.s f11, f15, f6, f14, rdn # perform operation
fnmsub.s f11, f15, f6, f14, rmm # perform operation
fnmsub.s f11, f15, f6, f14, rne # perform operation
fnmsub.s f11, f15, f6, f14, rtz # perform operation
fnmsub.s f11, f15, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f15, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xfb60551a81cd7ac0 # load x3 with value 0xfb60551a81cd7ac0
sw x3, 0(x2) # store 0xfb60551a81cd7ac0 in memory
flw f27, 0(x2) # load 0xfb60551a81cd7ac0 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fnmsub.s f25, f3, f27, f16, dyn # perform operation
fnmsub.s f25, f3, f27, f16, rdn # perform operation
fnmsub.s f25, f3, f27, f16, rmm # perform operation
fnmsub.s f25, f3, f27, f16, rne # perform operation
fnmsub.s f25, f3, f27, f16, rtz # perform operation
fnmsub.s f25, f3, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xb04fad87aaeb18e2 # load x3 with value 0xb04fad87aaeb18e2
sw x3, 0(x2) # store 0xb04fad87aaeb18e2 in memory
flw f1, 0(x2) # load 0xb04fad87aaeb18e2 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fnmsub.s f31, f25, f1, f18, dyn # perform operation
fnmsub.s f31, f25, f1, f18, rdn # perform operation
fnmsub.s f31, f25, f1, f18, rmm # perform operation
fnmsub.s f31, f25, f1, f18, rne # perform operation
fnmsub.s f31, f25, f1, f18, rtz # perform operation
fnmsub.s f31, f25, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x68bebfb467c8ad55 # load x3 with value 0x68bebfb467c8ad55
sw x3, 0(x2) # store 0x68bebfb467c8ad55 in memory
flw f17, 0(x2) # load 0x68bebfb467c8ad55 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmsub.s f14, f20, f17, f12, dyn # perform operation
fnmsub.s f14, f20, f17, f12, rdn # perform operation
fnmsub.s f14, f20, f17, f12, rmm # perform operation
fnmsub.s f14, f20, f17, f12, rne # perform operation
fnmsub.s f14, f20, f17, f12, rtz # perform operation
fnmsub.s f14, f20, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x725a0740956740f8 # load x3 with value 0x725a0740956740f8
sw x3, 0(x2) # store 0x725a0740956740f8 in memory
flw f25, 0(x2) # load 0x725a0740956740f8 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f24, f22, f25, f17, dyn # perform operation
fnmsub.s f24, f22, f25, f17, rdn # perform operation
fnmsub.s f24, f22, f25, f17, rmm # perform operation
fnmsub.s f24, f22, f25, f17, rne # perform operation
fnmsub.s f24, f22, f25, f17, rtz # perform operation
fnmsub.s f24, f22, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xb8df67b8dfe82ea # load x3 with value 0xb8df67b8dfe82ea
sw x3, 0(x2) # store 0xb8df67b8dfe82ea in memory
flw f13, 0(x2) # load 0xb8df67b8dfe82ea from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmsub.s f16, f29, f13, f24, dyn # perform operation
fnmsub.s f16, f29, f13, f24, rdn # perform operation
fnmsub.s f16, f29, f13, f24, rmm # perform operation
fnmsub.s f16, f29, f13, f24, rne # perform operation
fnmsub.s f16, f29, f13, f24, rtz # perform operation
fnmsub.s f16, f29, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f29, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xa03c212f315245b9 # load x3 with value 0xa03c212f315245b9
sw x3, 0(x2) # store 0xa03c212f315245b9 in memory
flw f8, 0(x2) # load 0xa03c212f315245b9 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fnmsub.s f3, f27, f8, f31, dyn # perform operation
fnmsub.s f3, f27, f8, f31, rdn # perform operation
fnmsub.s f3, f27, f8, f31, rmm # perform operation
fnmsub.s f3, f27, f8, f31, rne # perform operation
fnmsub.s f3, f27, f8, f31, rtz # perform operation
fnmsub.s f3, f27, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x59a39c63d1f80dfc # load x3 with value 0x59a39c63d1f80dfc
sw x3, 0(x2) # store 0x59a39c63d1f80dfc in memory
flw f1, 0(x2) # load 0x59a39c63d1f80dfc from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fnmsub.s f5, f2, f1, f28, dyn # perform operation
fnmsub.s f5, f2, f1, f28, rdn # perform operation
fnmsub.s f5, f2, f1, f28, rmm # perform operation
fnmsub.s f5, f2, f1, f28, rne # perform operation
fnmsub.s f5, f2, f1, f28, rtz # perform operation
fnmsub.s f5, f2, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x82637e8c29ba3f33 # load x3 with value 0x82637e8c29ba3f33
sw x3, 0(x2) # store 0x82637e8c29ba3f33 in memory
flw f7, 0(x2) # load 0x82637e8c29ba3f33 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmsub.s f2, f1, f7, f26, dyn # perform operation
fnmsub.s f2, f1, f7, f26, rdn # perform operation
fnmsub.s f2, f1, f7, f26, rmm # perform operation
fnmsub.s f2, f1, f7, f26, rne # perform operation
fnmsub.s f2, f1, f7, f26, rtz # perform operation
fnmsub.s f2, f1, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0xa95a74d4d2fb17f9 # load x3 with value 0xa95a74d4d2fb17f9
sw x3, 0(x2) # store 0xa95a74d4d2fb17f9 in memory
flw f27, 0(x2) # load 0xa95a74d4d2fb17f9 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmsub.s f31, f16, f27, f10, dyn # perform operation
fnmsub.s f31, f16, f27, f10, rdn # perform operation
fnmsub.s f31, f16, f27, f10, rmm # perform operation
fnmsub.s f31, f16, f27, f10, rne # perform operation
fnmsub.s f31, f16, f27, f10, rtz # perform operation
fnmsub.s f31, f16, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xb109ede625318366 # load x3 with value 0xb109ede625318366
sw x3, 0(x2) # store 0xb109ede625318366 in memory
flw f9, 0(x2) # load 0xb109ede625318366 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmsub.s f3, f27, f9, f29, dyn # perform operation
fnmsub.s f3, f27, f9, f29, rdn # perform operation
fnmsub.s f3, f27, f9, f29, rmm # perform operation
fnmsub.s f3, f27, f9, f29, rne # perform operation
fnmsub.s f3, f27, f9, f29, rtz # perform operation
fnmsub.s f3, f27, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x91f806a4455bc22e # load x3 with value 0x91f806a4455bc22e
sw x3, 0(x2) # store 0x91f806a4455bc22e in memory
flw f16, 0(x2) # load 0x91f806a4455bc22e from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmsub.s f15, f12, f16, f3, dyn # perform operation
fnmsub.s f15, f12, f16, f3, rdn # perform operation
fnmsub.s f15, f12, f16, f3, rmm # perform operation
fnmsub.s f15, f12, f16, f3, rne # perform operation
fnmsub.s f15, f12, f16, f3, rtz # perform operation
fnmsub.s f15, f12, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x9642fb833b5700ac # load x3 with value 0x9642fb833b5700ac
sw x3, 0(x2) # store 0x9642fb833b5700ac in memory
flw f18, 0(x2) # load 0x9642fb833b5700ac from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f29, f3, f18, f31, dyn # perform operation
fnmsub.s f29, f3, f18, f31, rdn # perform operation
fnmsub.s f29, f3, f18, f31, rmm # perform operation
fnmsub.s f29, f3, f18, f31, rne # perform operation
fnmsub.s f29, f3, f18, f31, rtz # perform operation
fnmsub.s f29, f3, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x749188dbd4175266 # load x3 with value 0x749188dbd4175266
sw x3, 0(x2) # store 0x749188dbd4175266 in memory
flw f5, 0(x2) # load 0x749188dbd4175266 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f12, f17, f5, f13, dyn # perform operation
fnmsub.s f12, f17, f5, f13, rdn # perform operation
fnmsub.s f12, f17, f5, f13, rmm # perform operation
fnmsub.s f12, f17, f5, f13, rne # perform operation
fnmsub.s f12, f17, f5, f13, rtz # perform operation
fnmsub.s f12, f17, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f17, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xbe17293485b93e36 # load x3 with value 0xbe17293485b93e36
sw x3, 0(x2) # store 0xbe17293485b93e36 in memory
flw f20, 0(x2) # load 0xbe17293485b93e36 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fnmsub.s f18, f5, f20, f17, dyn # perform operation
fnmsub.s f18, f5, f20, f17, rdn # perform operation
fnmsub.s f18, f5, f20, f17, rmm # perform operation
fnmsub.s f18, f5, f20, f17, rne # perform operation
fnmsub.s f18, f5, f20, f17, rtz # perform operation
fnmsub.s f18, f5, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x34ef2d7060e6c00b # load x3 with value 0x34ef2d7060e6c00b
sw x3, 0(x2) # store 0x34ef2d7060e6c00b in memory
flw f6, 0(x2) # load 0x34ef2d7060e6c00b from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f27, f21, f6, f1, dyn # perform operation
fnmsub.s f27, f21, f6, f1, rdn # perform operation
fnmsub.s f27, f21, f6, f1, rmm # perform operation
fnmsub.s f27, f21, f6, f1, rne # perform operation
fnmsub.s f27, f21, f6, f1, rtz # perform operation
fnmsub.s f27, f21, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xe92922dd6e812e14 # load x3 with value 0xe92922dd6e812e14
sw x3, 0(x2) # store 0xe92922dd6e812e14 in memory
flw f27, 0(x2) # load 0xe92922dd6e812e14 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmsub.s f29, f22, f27, f7, dyn # perform operation
fnmsub.s f29, f22, f27, f7, rdn # perform operation
fnmsub.s f29, f22, f27, f7, rmm # perform operation
fnmsub.s f29, f22, f27, f7, rne # perform operation
fnmsub.s f29, f22, f27, f7, rtz # perform operation
fnmsub.s f29, f22, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x44170f3aa80a1795 # load x3 with value 0x44170f3aa80a1795
sw x3, 0(x2) # store 0x44170f3aa80a1795 in memory
flw f12, 0(x2) # load 0x44170f3aa80a1795 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmsub.s f14, f24, f12, f15, dyn # perform operation
fnmsub.s f14, f24, f12, f15, rdn # perform operation
fnmsub.s f14, f24, f12, f15, rmm # perform operation
fnmsub.s f14, f24, f12, f15, rne # perform operation
fnmsub.s f14, f24, f12, f15, rtz # perform operation
fnmsub.s f14, f24, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f24, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x20da1f210ca0000b # load x3 with value 0x20da1f210ca0000b
sw x3, 0(x2) # store 0x20da1f210ca0000b in memory
flw f20, 0(x2) # load 0x20da1f210ca0000b from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmsub.s f12, f31, f20, f5, dyn # perform operation
fnmsub.s f12, f31, f20, f5, rdn # perform operation
fnmsub.s f12, f31, f20, f5, rmm # perform operation
fnmsub.s f12, f31, f20, f5, rne # perform operation
fnmsub.s f12, f31, f20, f5, rtz # perform operation
fnmsub.s f12, f31, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x8dea85d477d9b5fd # load x3 with value 0x8dea85d477d9b5fd
sw x3, 0(x2) # store 0x8dea85d477d9b5fd in memory
flw f27, 0(x2) # load 0x8dea85d477d9b5fd from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fnmsub.s f26, f5, f27, f7, dyn # perform operation
fnmsub.s f26, f5, f27, f7, rdn # perform operation
fnmsub.s f26, f5, f27, f7, rmm # perform operation
fnmsub.s f26, f5, f27, f7, rne # perform operation
fnmsub.s f26, f5, f27, f7, rtz # perform operation
fnmsub.s f26, f5, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x49fc96deee8645b0 # load x3 with value 0x49fc96deee8645b0
sw x3, 0(x2) # store 0x49fc96deee8645b0 in memory
flw f6, 0(x2) # load 0x49fc96deee8645b0 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f24, f9, f6, f29, dyn # perform operation
fnmsub.s f24, f9, f6, f29, rdn # perform operation
fnmsub.s f24, f9, f6, f29, rmm # perform operation
fnmsub.s f24, f9, f6, f29, rne # perform operation
fnmsub.s f24, f9, f6, f29, rtz # perform operation
fnmsub.s f24, f9, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f9, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xda2885857018836f # load x3 with value 0xda2885857018836f
sw x3, 0(x2) # store 0xda2885857018836f in memory
flw f9, 0(x2) # load 0xda2885857018836f from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmsub.s f31, f11, f9, f7, dyn # perform operation
fnmsub.s f31, f11, f9, f7, rdn # perform operation
fnmsub.s f31, f11, f9, f7, rmm # perform operation
fnmsub.s f31, f11, f9, f7, rne # perform operation
fnmsub.s f31, f11, f9, f7, rtz # perform operation
fnmsub.s f31, f11, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f9, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xc117b6cfa2f7a1ec # load x3 with value 0xc117b6cfa2f7a1ec
sw x3, 0(x2) # store 0xc117b6cfa2f7a1ec in memory
flw f9, 0(x2) # load 0xc117b6cfa2f7a1ec from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmsub.s f7, f18, f9, f15, dyn # perform operation
fnmsub.s f7, f18, f9, f15, rdn # perform operation
fnmsub.s f7, f18, f9, f15, rmm # perform operation
fnmsub.s f7, f18, f9, f15, rne # perform operation
fnmsub.s f7, f18, f9, f15, rtz # perform operation
fnmsub.s f7, f18, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x1744c5a88240c29b # load x3 with value 0x1744c5a88240c29b
sw x3, 0(x2) # store 0x1744c5a88240c29b in memory
flw f21, 0(x2) # load 0x1744c5a88240c29b from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmsub.s f30, f7, f21, f13, dyn # perform operation
fnmsub.s f30, f7, f21, f13, rdn # perform operation
fnmsub.s f30, f7, f21, f13, rmm # perform operation
fnmsub.s f30, f7, f21, f13, rne # perform operation
fnmsub.s f30, f7, f21, f13, rtz # perform operation
fnmsub.s f30, f7, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xbacb1b09af5c15b5 # load x3 with value 0xbacb1b09af5c15b5
sw x3, 0(x2) # store 0xbacb1b09af5c15b5 in memory
flw f25, 0(x2) # load 0xbacb1b09af5c15b5 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f26, f17, f25, f13, dyn # perform operation
fnmsub.s f26, f17, f25, f13, rdn # perform operation
fnmsub.s f26, f17, f25, f13, rmm # perform operation
fnmsub.s f26, f17, f25, f13, rne # perform operation
fnmsub.s f26, f17, f25, f13, rtz # perform operation
fnmsub.s f26, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x628451f623d7be85 # load x3 with value 0x628451f623d7be85
sw x3, 0(x2) # store 0x628451f623d7be85 in memory
flw f21, 0(x2) # load 0x628451f623d7be85 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmsub.s f3, f31, f21, f14, dyn # perform operation
fnmsub.s f3, f31, f21, f14, rdn # perform operation
fnmsub.s f3, f31, f21, f14, rmm # perform operation
fnmsub.s f3, f31, f21, f14, rne # perform operation
fnmsub.s f3, f31, f21, f14, rtz # perform operation
fnmsub.s f3, f31, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x90755d2ccd64176c # load x3 with value 0x90755d2ccd64176c
sw x3, 0(x2) # store 0x90755d2ccd64176c in memory
flw f27, 0(x2) # load 0x90755d2ccd64176c from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmsub.s f3, f7, f27, f14, dyn # perform operation
fnmsub.s f3, f7, f27, f14, rdn # perform operation
fnmsub.s f3, f7, f27, f14, rmm # perform operation
fnmsub.s f3, f7, f27, f14, rne # perform operation
fnmsub.s f3, f7, f27, f14, rtz # perform operation
fnmsub.s f3, f7, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x98970131fb6a0853 # load x3 with value 0x98970131fb6a0853
sw x3, 0(x2) # store 0x98970131fb6a0853 in memory
flw f19, 0(x2) # load 0x98970131fb6a0853 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmsub.s f5, f6, f19, f24, dyn # perform operation
fnmsub.s f5, f6, f19, f24, rdn # perform operation
fnmsub.s f5, f6, f19, f24, rmm # perform operation
fnmsub.s f5, f6, f19, f24, rne # perform operation
fnmsub.s f5, f6, f19, f24, rtz # perform operation
fnmsub.s f5, f6, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x1dbc514644c4c7b3 # load x3 with value 0x1dbc514644c4c7b3
sw x3, 0(x2) # store 0x1dbc514644c4c7b3 in memory
flw f8, 0(x2) # load 0x1dbc514644c4c7b3 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f13, f18, f8, f22, dyn # perform operation
fnmsub.s f13, f18, f8, f22, rdn # perform operation
fnmsub.s f13, f18, f8, f22, rmm # perform operation
fnmsub.s f13, f18, f8, f22, rne # perform operation
fnmsub.s f13, f18, f8, f22, rtz # perform operation
fnmsub.s f13, f18, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xbdf66bfd8a1f64dd # load x3 with value 0xbdf66bfd8a1f64dd
sw x3, 0(x2) # store 0xbdf66bfd8a1f64dd in memory
flw f1, 0(x2) # load 0xbdf66bfd8a1f64dd from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmsub.s f8, f22, f1, f6, dyn # perform operation
fnmsub.s f8, f22, f1, f6, rdn # perform operation
fnmsub.s f8, f22, f1, f6, rmm # perform operation
fnmsub.s f8, f22, f1, f6, rne # perform operation
fnmsub.s f8, f22, f1, f6, rtz # perform operation
fnmsub.s f8, f22, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f22, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x3f2e76fc27c7f4b6 # load x3 with value 0x3f2e76fc27c7f4b6
sw x3, 0(x2) # store 0x3f2e76fc27c7f4b6 in memory
flw f14, 0(x2) # load 0x3f2e76fc27c7f4b6 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fnmsub.s f31, f21, f14, f22, dyn # perform operation
fnmsub.s f31, f21, f14, f22, rdn # perform operation
fnmsub.s f31, f21, f14, f22, rmm # perform operation
fnmsub.s f31, f21, f14, f22, rne # perform operation
fnmsub.s f31, f21, f14, f22, rtz # perform operation
fnmsub.s f31, f21, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x7acdfd2f8cff24b3 # load x3 with value 0x7acdfd2f8cff24b3
sw x3, 0(x2) # store 0x7acdfd2f8cff24b3 in memory
flw f1, 0(x2) # load 0x7acdfd2f8cff24b3 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmsub.s f16, f28, f1, f25, dyn # perform operation
fnmsub.s f16, f28, f1, f25, rdn # perform operation
fnmsub.s f16, f28, f1, f25, rmm # perform operation
fnmsub.s f16, f28, f1, f25, rne # perform operation
fnmsub.s f16, f28, f1, f25, rtz # perform operation
fnmsub.s f16, f28, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8d26bac5b357b1f5 # load x3 with value 0x8d26bac5b357b1f5
sw x3, 0(x2) # store 0x8d26bac5b357b1f5 in memory
flw f31, 0(x2) # load 0x8d26bac5b357b1f5 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fnmsub.s f23, f19, f31, f2, dyn # perform operation
fnmsub.s f23, f19, f31, f2, rdn # perform operation
fnmsub.s f23, f19, f31, f2, rmm # perform operation
fnmsub.s f23, f19, f31, f2, rne # perform operation
fnmsub.s f23, f19, f31, f2, rtz # perform operation
fnmsub.s f23, f19, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f19, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f19, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f19, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f19, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f19, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xd35cbc77b83a47bb # load x3 with value 0xd35cbc77b83a47bb
sw x3, 0(x2) # store 0xd35cbc77b83a47bb in memory
flw f6, 0(x2) # load 0xd35cbc77b83a47bb from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmsub.s f28, f13, f6, f23, dyn # perform operation
fnmsub.s f28, f13, f6, f23, rdn # perform operation
fnmsub.s f28, f13, f6, f23, rmm # perform operation
fnmsub.s f28, f13, f6, f23, rne # perform operation
fnmsub.s f28, f13, f6, f23, rtz # perform operation
fnmsub.s f28, f13, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xb570f301582d67c8 # load x3 with value 0xb570f301582d67c8
sw x3, 0(x2) # store 0xb570f301582d67c8 in memory
flw f1, 0(x2) # load 0xb570f301582d67c8 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fnmsub.s f26, f9, f1, f28, dyn # perform operation
fnmsub.s f26, f9, f1, f28, rdn # perform operation
fnmsub.s f26, f9, f1, f28, rmm # perform operation
fnmsub.s f26, f9, f1, f28, rne # perform operation
fnmsub.s f26, f9, f1, f28, rtz # perform operation
fnmsub.s f26, f9, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x49722eac6d248cc3 # load x3 with value 0x49722eac6d248cc3
sw x3, 0(x2) # store 0x49722eac6d248cc3 in memory
flw f31, 0(x2) # load 0x49722eac6d248cc3 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f20, f18, f31, f7, dyn # perform operation
fnmsub.s f20, f18, f31, f7, rdn # perform operation
fnmsub.s f20, f18, f31, f7, rmm # perform operation
fnmsub.s f20, f18, f31, f7, rne # perform operation
fnmsub.s f20, f18, f31, f7, rtz # perform operation
fnmsub.s f20, f18, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xcf06c56042edd41e # load x3 with value 0xcf06c56042edd41e
sw x3, 0(x2) # store 0xcf06c56042edd41e in memory
flw f23, 0(x2) # load 0xcf06c56042edd41e from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f22, f3, f23, f19, dyn # perform operation
fnmsub.s f22, f3, f23, f19, rdn # perform operation
fnmsub.s f22, f3, f23, f19, rmm # perform operation
fnmsub.s f22, f3, f23, f19, rne # perform operation
fnmsub.s f22, f3, f23, f19, rtz # perform operation
fnmsub.s f22, f3, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xb9ce1e031959004b # load x3 with value 0xb9ce1e031959004b
sw x3, 0(x2) # store 0xb9ce1e031959004b in memory
flw f6, 0(x2) # load 0xb9ce1e031959004b from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f1, f14, f6, f7, dyn # perform operation
fnmsub.s f1, f14, f6, f7, rdn # perform operation
fnmsub.s f1, f14, f6, f7, rmm # perform operation
fnmsub.s f1, f14, f6, f7, rne # perform operation
fnmsub.s f1, f14, f6, f7, rtz # perform operation
fnmsub.s f1, f14, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f14, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f14, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f14, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f14, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f14, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x710dd55b847a4dcd # load x3 with value 0x710dd55b847a4dcd
sw x3, 0(x2) # store 0x710dd55b847a4dcd in memory
flw f10, 0(x2) # load 0x710dd55b847a4dcd from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmsub.s f29, f23, f10, f22, dyn # perform operation
fnmsub.s f29, f23, f10, f22, rdn # perform operation
fnmsub.s f29, f23, f10, f22, rmm # perform operation
fnmsub.s f29, f23, f10, f22, rne # perform operation
fnmsub.s f29, f23, f10, f22, rtz # perform operation
fnmsub.s f29, f23, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x233deb08d4c64f37 # load x3 with value 0x233deb08d4c64f37
sw x3, 0(x2) # store 0x233deb08d4c64f37 in memory
flw f1, 0(x2) # load 0x233deb08d4c64f37 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f29, f30, f1, f28, dyn # perform operation
fnmsub.s f29, f30, f1, f28, rdn # perform operation
fnmsub.s f29, f30, f1, f28, rmm # perform operation
fnmsub.s f29, f30, f1, f28, rne # perform operation
fnmsub.s f29, f30, f1, f28, rtz # perform operation
fnmsub.s f29, f30, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x8a0acfd1b7314955 # load x3 with value 0x8a0acfd1b7314955
sw x3, 0(x2) # store 0x8a0acfd1b7314955 in memory
flw f6, 0(x2) # load 0x8a0acfd1b7314955 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmsub.s f26, f12, f6, f18, dyn # perform operation
fnmsub.s f26, f12, f6, f18, rdn # perform operation
fnmsub.s f26, f12, f6, f18, rmm # perform operation
fnmsub.s f26, f12, f6, f18, rne # perform operation
fnmsub.s f26, f12, f6, f18, rtz # perform operation
fnmsub.s f26, f12, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x106f9b4847726f59 # load x3 with value 0x106f9b4847726f59
sw x3, 0(x2) # store 0x106f9b4847726f59 in memory
flw f12, 0(x2) # load 0x106f9b4847726f59 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmsub.s f10, f28, f12, f3, dyn # perform operation
fnmsub.s f10, f28, f12, f3, rdn # perform operation
fnmsub.s f10, f28, f12, f3, rmm # perform operation
fnmsub.s f10, f28, f12, f3, rne # perform operation
fnmsub.s f10, f28, f12, f3, rtz # perform operation
fnmsub.s f10, f28, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f28, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x4a62f097a2eaaaba # load x3 with value 0x4a62f097a2eaaaba
sw x3, 0(x2) # store 0x4a62f097a2eaaaba in memory
flw f10, 0(x2) # load 0x4a62f097a2eaaaba from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmsub.s f17, f26, f10, f20, dyn # perform operation
fnmsub.s f17, f26, f10, f20, rdn # perform operation
fnmsub.s f17, f26, f10, f20, rmm # perform operation
fnmsub.s f17, f26, f10, f20, rne # perform operation
fnmsub.s f17, f26, f10, f20, rtz # perform operation
fnmsub.s f17, f26, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f26, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x45c80bc106cc24c4 # load x3 with value 0x45c80bc106cc24c4
sw x3, 0(x2) # store 0x45c80bc106cc24c4 in memory
flw f12, 0(x2) # load 0x45c80bc106cc24c4 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fnmsub.s f24, f13, f12, f30, dyn # perform operation
fnmsub.s f24, f13, f12, f30, rdn # perform operation
fnmsub.s f24, f13, f12, f30, rmm # perform operation
fnmsub.s f24, f13, f12, f30, rne # perform operation
fnmsub.s f24, f13, f12, f30, rtz # perform operation
fnmsub.s f24, f13, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x25874ea37ea5cf64 # load x3 with value 0x25874ea37ea5cf64
sw x3, 0(x2) # store 0x25874ea37ea5cf64 in memory
flw f22, 0(x2) # load 0x25874ea37ea5cf64 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmsub.s f28, f25, f22, f11, dyn # perform operation
fnmsub.s f28, f25, f22, f11, rdn # perform operation
fnmsub.s f28, f25, f22, f11, rmm # perform operation
fnmsub.s f28, f25, f22, f11, rne # perform operation
fnmsub.s f28, f25, f22, f11, rtz # perform operation
fnmsub.s f28, f25, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0xb639826e743a5b52 # load x3 with value 0xb639826e743a5b52
sw x3, 0(x2) # store 0xb639826e743a5b52 in memory
flw f3, 0(x2) # load 0xb639826e743a5b52 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fnmsub.s f30, f2, f3, f21, dyn # perform operation
fnmsub.s f30, f2, f3, f21, rdn # perform operation
fnmsub.s f30, f2, f3, f21, rmm # perform operation
fnmsub.s f30, f2, f3, f21, rne # perform operation
fnmsub.s f30, f2, f3, f21, rtz # perform operation
fnmsub.s f30, f2, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xcb9341dbe5e68bcd # load x3 with value 0xcb9341dbe5e68bcd
sw x3, 0(x2) # store 0xcb9341dbe5e68bcd in memory
flw f20, 0(x2) # load 0xcb9341dbe5e68bcd from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f18, f9, f20, f25, dyn # perform operation
fnmsub.s f18, f9, f20, f25, rdn # perform operation
fnmsub.s f18, f9, f20, f25, rmm # perform operation
fnmsub.s f18, f9, f20, f25, rne # perform operation
fnmsub.s f18, f9, f20, f25, rtz # perform operation
fnmsub.s f18, f9, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xb8b506c492190216 # load x3 with value 0xb8b506c492190216
sw x3, 0(x2) # store 0xb8b506c492190216 in memory
flw f16, 0(x2) # load 0xb8b506c492190216 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmsub.s f13, f27, f16, f29, dyn # perform operation
fnmsub.s f13, f27, f16, f29, rdn # perform operation
fnmsub.s f13, f27, f16, f29, rmm # perform operation
fnmsub.s f13, f27, f16, f29, rne # perform operation
fnmsub.s f13, f27, f16, f29, rtz # perform operation
fnmsub.s f13, f27, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x1955c580a326cc42 # load x3 with value 0x1955c580a326cc42
sw x3, 0(x2) # store 0x1955c580a326cc42 in memory
flw f26, 0(x2) # load 0x1955c580a326cc42 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmsub.s f22, f27, f26, f11, dyn # perform operation
fnmsub.s f22, f27, f26, f11, rdn # perform operation
fnmsub.s f22, f27, f26, f11, rmm # perform operation
fnmsub.s f22, f27, f26, f11, rne # perform operation
fnmsub.s f22, f27, f26, f11, rtz # perform operation
fnmsub.s f22, f27, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x7dd630558ec65994 # load x3 with value 0x7dd630558ec65994
sw x3, 0(x2) # store 0x7dd630558ec65994 in memory
flw f26, 0(x2) # load 0x7dd630558ec65994 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmsub.s f27, f28, f26, f2, dyn # perform operation
fnmsub.s f27, f28, f26, f2, rdn # perform operation
fnmsub.s f27, f28, f26, f2, rmm # perform operation
fnmsub.s f27, f28, f26, f2, rne # perform operation
fnmsub.s f27, f28, f26, f2, rtz # perform operation
fnmsub.s f27, f28, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x979438de7b11384a # load x3 with value 0x979438de7b11384a
sw x3, 0(x2) # store 0x979438de7b11384a in memory
flw f22, 0(x2) # load 0x979438de7b11384a from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmsub.s f30, f28, f22, f17, dyn # perform operation
fnmsub.s f30, f28, f22, f17, rdn # perform operation
fnmsub.s f30, f28, f22, f17, rmm # perform operation
fnmsub.s f30, f28, f22, f17, rne # perform operation
fnmsub.s f30, f28, f22, f17, rtz # perform operation
fnmsub.s f30, f28, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xaec2590e4ad4c6d8 # load x3 with value 0xaec2590e4ad4c6d8
sw x3, 0(x2) # store 0xaec2590e4ad4c6d8 in memory
flw f24, 0(x2) # load 0xaec2590e4ad4c6d8 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmsub.s f14, f25, f24, f16, dyn # perform operation
fnmsub.s f14, f25, f24, f16, rdn # perform operation
fnmsub.s f14, f25, f24, f16, rmm # perform operation
fnmsub.s f14, f25, f24, f16, rne # perform operation
fnmsub.s f14, f25, f24, f16, rtz # perform operation
fnmsub.s f14, f25, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xfb705e53b1533cd7 # load x3 with value 0xfb705e53b1533cd7
sw x3, 0(x2) # store 0xfb705e53b1533cd7 in memory
flw f21, 0(x2) # load 0xfb705e53b1533cd7 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f18, f10, f21, f16, dyn # perform operation
fnmsub.s f18, f10, f21, f16, rdn # perform operation
fnmsub.s f18, f10, f21, f16, rmm # perform operation
fnmsub.s f18, f10, f21, f16, rne # perform operation
fnmsub.s f18, f10, f21, f16, rtz # perform operation
fnmsub.s f18, f10, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f21, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x6777ad2d5d0deed3 # load x3 with value 0x6777ad2d5d0deed3
sw x3, 0(x2) # store 0x6777ad2d5d0deed3 in memory
flw f3, 0(x2) # load 0x6777ad2d5d0deed3 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmsub.s f14, f16, f3, f30, dyn # perform operation
fnmsub.s f14, f16, f3, f30, rdn # perform operation
fnmsub.s f14, f16, f3, f30, rmm # perform operation
fnmsub.s f14, f16, f3, f30, rne # perform operation
fnmsub.s f14, f16, f3, f30, rtz # perform operation
fnmsub.s f14, f16, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x93e15e8df0c05b44 # load x3 with value 0x93e15e8df0c05b44
sw x3, 0(x2) # store 0x93e15e8df0c05b44 in memory
flw f19, 0(x2) # load 0x93e15e8df0c05b44 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmsub.s f13, f20, f19, f14, dyn # perform operation
fnmsub.s f13, f20, f19, f14, rdn # perform operation
fnmsub.s f13, f20, f19, f14, rmm # perform operation
fnmsub.s f13, f20, f19, f14, rne # perform operation
fnmsub.s f13, f20, f19, f14, rtz # perform operation
fnmsub.s f13, f20, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x10e8b5f54e3a071 # load x3 with value 0x10e8b5f54e3a071
sw x3, 0(x2) # store 0x10e8b5f54e3a071 in memory
flw f28, 0(x2) # load 0x10e8b5f54e3a071 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f20, f7, f28, f17, dyn # perform operation
fnmsub.s f20, f7, f28, f17, rdn # perform operation
fnmsub.s f20, f7, f28, f17, rmm # perform operation
fnmsub.s f20, f7, f28, f17, rne # perform operation
fnmsub.s f20, f7, f28, f17, rtz # perform operation
fnmsub.s f20, f7, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f7, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0xb7162bf555a792d0 # load x3 with value 0xb7162bf555a792d0
sw x3, 0(x2) # store 0xb7162bf555a792d0 in memory
flw f13, 0(x2) # load 0xb7162bf555a792d0 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f1, f2, f13, f20, dyn # perform operation
fnmsub.s f1, f2, f13, f20, rdn # perform operation
fnmsub.s f1, f2, f13, f20, rmm # perform operation
fnmsub.s f1, f2, f13, f20, rne # perform operation
fnmsub.s f1, f2, f13, f20, rtz # perform operation
fnmsub.s f1, f2, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f2, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x2fd52b059fc7d039 # load x3 with value 0x2fd52b059fc7d039
sw x3, 0(x2) # store 0x2fd52b059fc7d039 in memory
flw f25, 0(x2) # load 0x2fd52b059fc7d039 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fnmsub.s f18, f9, f25, f15, dyn # perform operation
fnmsub.s f18, f9, f25, f15, rdn # perform operation
fnmsub.s f18, f9, f25, f15, rmm # perform operation
fnmsub.s f18, f9, f25, f15, rne # perform operation
fnmsub.s f18, f9, f25, f15, rtz # perform operation
fnmsub.s f18, f9, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x71c10960b0dc6997 # load x3 with value 0x71c10960b0dc6997
sw x3, 0(x2) # store 0x71c10960b0dc6997 in memory
flw f31, 0(x2) # load 0x71c10960b0dc6997 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmsub.s f21, f28, f31, f9, dyn # perform operation
fnmsub.s f21, f28, f31, f9, rdn # perform operation
fnmsub.s f21, f28, f31, f9, rmm # perform operation
fnmsub.s f21, f28, f31, f9, rne # perform operation
fnmsub.s f21, f28, f31, f9, rtz # perform operation
fnmsub.s f21, f28, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x3b12d19e093c205d # load x3 with value 0x3b12d19e093c205d
sw x3, 0(x2) # store 0x3b12d19e093c205d in memory
flw f17, 0(x2) # load 0x3b12d19e093c205d from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmsub.s f6, f25, f17, f21, dyn # perform operation
fnmsub.s f6, f25, f17, f21, rdn # perform operation
fnmsub.s f6, f25, f17, f21, rmm # perform operation
fnmsub.s f6, f25, f17, f21, rne # perform operation
fnmsub.s f6, f25, f17, f21, rtz # perform operation
fnmsub.s f6, f25, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f25, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x4fab71930db08184 # load x3 with value 0x4fab71930db08184
sw x3, 0(x2) # store 0x4fab71930db08184 in memory
flw f30, 0(x2) # load 0x4fab71930db08184 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmsub.s f16, f23, f30, f11, dyn # perform operation
fnmsub.s f16, f23, f30, f11, rdn # perform operation
fnmsub.s f16, f23, f30, f11, rmm # perform operation
fnmsub.s f16, f23, f30, f11, rne # perform operation
fnmsub.s f16, f23, f30, f11, rtz # perform operation
fnmsub.s f16, f23, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f23, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xf586a1a68800ca5a # load x3 with value 0xf586a1a68800ca5a
sw x3, 0(x2) # store 0xf586a1a68800ca5a in memory
flw f19, 0(x2) # load 0xf586a1a68800ca5a from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fnmsub.s f27, f18, f19, f10, dyn # perform operation
fnmsub.s f27, f18, f19, f10, rdn # perform operation
fnmsub.s f27, f18, f19, f10, rmm # perform operation
fnmsub.s f27, f18, f19, f10, rne # perform operation
fnmsub.s f27, f18, f19, f10, rtz # perform operation
fnmsub.s f27, f18, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x68ac1897a17171c3 # load x3 with value 0x68ac1897a17171c3
sw x3, 0(x2) # store 0x68ac1897a17171c3 in memory
flw f3, 0(x2) # load 0x68ac1897a17171c3 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmsub.s f31, f24, f3, f27, dyn # perform operation
fnmsub.s f31, f24, f3, f27, rdn # perform operation
fnmsub.s f31, f24, f3, f27, rmm # perform operation
fnmsub.s f31, f24, f3, f27, rne # perform operation
fnmsub.s f31, f24, f3, f27, rtz # perform operation
fnmsub.s f31, f24, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x37c12edd26127868 # load x3 with value 0x37c12edd26127868
sw x3, 0(x2) # store 0x37c12edd26127868 in memory
flw f5, 0(x2) # load 0x37c12edd26127868 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmsub.s f29, f31, f5, f16, dyn # perform operation
fnmsub.s f29, f31, f5, f16, rdn # perform operation
fnmsub.s f29, f31, f5, f16, rmm # perform operation
fnmsub.s f29, f31, f5, f16, rne # perform operation
fnmsub.s f29, f31, f5, f16, rtz # perform operation
fnmsub.s f29, f31, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x2215ec3f8e98e319 # load x3 with value 0x2215ec3f8e98e319
sw x3, 0(x2) # store 0x2215ec3f8e98e319 in memory
flw f24, 0(x2) # load 0x2215ec3f8e98e319 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmsub.s f13, f29, f24, f11, dyn # perform operation
fnmsub.s f13, f29, f24, f11, rdn # perform operation
fnmsub.s f13, f29, f24, f11, rmm # perform operation
fnmsub.s f13, f29, f24, f11, rne # perform operation
fnmsub.s f13, f29, f24, f11, rtz # perform operation
fnmsub.s f13, f29, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x6ce85679c230a4d # load x3 with value 0x6ce85679c230a4d
sw x3, 0(x2) # store 0x6ce85679c230a4d in memory
flw f26, 0(x2) # load 0x6ce85679c230a4d from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f28, f11, f26, f9, dyn # perform operation
fnmsub.s f28, f11, f26, f9, rdn # perform operation
fnmsub.s f28, f11, f26, f9, rmm # perform operation
fnmsub.s f28, f11, f26, f9, rne # perform operation
fnmsub.s f28, f11, f26, f9, rtz # perform operation
fnmsub.s f28, f11, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xc4b80ccbfc4da0e7 # load x3 with value 0xc4b80ccbfc4da0e7
sw x3, 0(x2) # store 0xc4b80ccbfc4da0e7 in memory
flw f19, 0(x2) # load 0xc4b80ccbfc4da0e7 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f15, f22, f19, f9, dyn # perform operation
fnmsub.s f15, f22, f19, f9, rdn # perform operation
fnmsub.s f15, f22, f19, f9, rmm # perform operation
fnmsub.s f15, f22, f19, f9, rne # perform operation
fnmsub.s f15, f22, f19, f9, rtz # perform operation
fnmsub.s f15, f22, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f22, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x711d3b0573b92c61 # load x3 with value 0x711d3b0573b92c61
sw x3, 0(x2) # store 0x711d3b0573b92c61 in memory
flw f14, 0(x2) # load 0x711d3b0573b92c61 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmsub.s f22, f6, f14, f16, dyn # perform operation
fnmsub.s f22, f6, f14, f16, rdn # perform operation
fnmsub.s f22, f6, f14, f16, rmm # perform operation
fnmsub.s f22, f6, f14, f16, rne # perform operation
fnmsub.s f22, f6, f14, f16, rtz # perform operation
fnmsub.s f22, f6, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xadcf5d50d2c52541 # load x3 with value 0xadcf5d50d2c52541
sw x3, 0(x2) # store 0xadcf5d50d2c52541 in memory
flw f8, 0(x2) # load 0xadcf5d50d2c52541 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f15, f2, f8, f3, dyn # perform operation
fnmsub.s f15, f2, f8, f3, rdn # perform operation
fnmsub.s f15, f2, f8, f3, rmm # perform operation
fnmsub.s f15, f2, f8, f3, rne # perform operation
fnmsub.s f15, f2, f8, f3, rtz # perform operation
fnmsub.s f15, f2, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f8, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x14f530c1c471f0e2 # load x3 with value 0x14f530c1c471f0e2
sw x3, 0(x2) # store 0x14f530c1c471f0e2 in memory
flw f23, 0(x2) # load 0x14f530c1c471f0e2 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmsub.s f15, f29, f23, f5, dyn # perform operation
fnmsub.s f15, f29, f23, f5, rdn # perform operation
fnmsub.s f15, f29, f23, f5, rmm # perform operation
fnmsub.s f15, f29, f23, f5, rne # perform operation
fnmsub.s f15, f29, f23, f5, rtz # perform operation
fnmsub.s f15, f29, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xebf25236409536d8 # load x3 with value 0xebf25236409536d8
sw x3, 0(x2) # store 0xebf25236409536d8 in memory
flw f9, 0(x2) # load 0xebf25236409536d8 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmsub.s f7, f3, f9, f30, dyn # perform operation
fnmsub.s f7, f3, f9, f30, rdn # perform operation
fnmsub.s f7, f3, f9, f30, rmm # perform operation
fnmsub.s f7, f3, f9, f30, rne # perform operation
fnmsub.s f7, f3, f9, f30, rtz # perform operation
fnmsub.s f7, f3, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f3, f9, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x3311b2ca2f2459fb # load x3 with value 0x3311b2ca2f2459fb
sw x3, 0(x2) # store 0x3311b2ca2f2459fb in memory
flw f19, 0(x2) # load 0x3311b2ca2f2459fb from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f15, f22, f19, f1, dyn # perform operation
fnmsub.s f15, f22, f19, f1, rdn # perform operation
fnmsub.s f15, f22, f19, f1, rmm # perform operation
fnmsub.s f15, f22, f19, f1, rne # perform operation
fnmsub.s f15, f22, f19, f1, rtz # perform operation
fnmsub.s f15, f22, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f22, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xa1daddfa70d1d63a # load x3 with value 0xa1daddfa70d1d63a
sw x3, 0(x2) # store 0xa1daddfa70d1d63a in memory
flw f17, 0(x2) # load 0xa1daddfa70d1d63a from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f9, f5, f17, f3, dyn # perform operation
fnmsub.s f9, f5, f17, f3, rdn # perform operation
fnmsub.s f9, f5, f17, f3, rmm # perform operation
fnmsub.s f9, f5, f17, f3, rne # perform operation
fnmsub.s f9, f5, f17, f3, rtz # perform operation
fnmsub.s f9, f5, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xa985a62ed314aeea # load x3 with value 0xa985a62ed314aeea
sw x3, 0(x2) # store 0xa985a62ed314aeea in memory
flw f30, 0(x2) # load 0xa985a62ed314aeea from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fnmsub.s f14, f17, f30, f21, dyn # perform operation
fnmsub.s f14, f17, f30, f21, rdn # perform operation
fnmsub.s f14, f17, f30, f21, rmm # perform operation
fnmsub.s f14, f17, f30, f21, rne # perform operation
fnmsub.s f14, f17, f30, f21, rtz # perform operation
fnmsub.s f14, f17, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x133d09064d481fd2 # load x3 with value 0x133d09064d481fd2
sw x3, 0(x2) # store 0x133d09064d481fd2 in memory
flw f10, 0(x2) # load 0x133d09064d481fd2 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmsub.s f12, f26, f10, f19, dyn # perform operation
fnmsub.s f12, f26, f10, f19, rdn # perform operation
fnmsub.s f12, f26, f10, f19, rmm # perform operation
fnmsub.s f12, f26, f10, f19, rne # perform operation
fnmsub.s f12, f26, f10, f19, rtz # perform operation
fnmsub.s f12, f26, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x2239cde8f6623c54 # load x3 with value 0x2239cde8f6623c54
sw x3, 0(x2) # store 0x2239cde8f6623c54 in memory
flw f3, 0(x2) # load 0x2239cde8f6623c54 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f17, f7, f3, f27, dyn # perform operation
fnmsub.s f17, f7, f3, f27, rdn # perform operation
fnmsub.s f17, f7, f3, f27, rmm # perform operation
fnmsub.s f17, f7, f3, f27, rne # perform operation
fnmsub.s f17, f7, f3, f27, rtz # perform operation
fnmsub.s f17, f7, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x293f8161b1e1053e # load x3 with value 0x293f8161b1e1053e
sw x3, 0(x2) # store 0x293f8161b1e1053e in memory
flw f14, 0(x2) # load 0x293f8161b1e1053e from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmsub.s f11, f25, f14, f18, dyn # perform operation
fnmsub.s f11, f25, f14, f18, rdn # perform operation
fnmsub.s f11, f25, f14, f18, rmm # perform operation
fnmsub.s f11, f25, f14, f18, rne # perform operation
fnmsub.s f11, f25, f14, f18, rtz # perform operation
fnmsub.s f11, f25, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xd615e99bf34e7fd6 # load x3 with value 0xd615e99bf34e7fd6
sw x3, 0(x2) # store 0xd615e99bf34e7fd6 in memory
flw f17, 0(x2) # load 0xd615e99bf34e7fd6 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f31, f7, f17, f24, dyn # perform operation
fnmsub.s f31, f7, f17, f24, rdn # perform operation
fnmsub.s f31, f7, f17, f24, rmm # perform operation
fnmsub.s f31, f7, f17, f24, rne # perform operation
fnmsub.s f31, f7, f17, f24, rtz # perform operation
fnmsub.s f31, f7, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f7, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x8b9e60aec0e9e727 # load x3 with value 0x8b9e60aec0e9e727
sw x3, 0(x2) # store 0x8b9e60aec0e9e727 in memory
flw f16, 0(x2) # load 0x8b9e60aec0e9e727 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f19, f3, f16, f9, dyn # perform operation
fnmsub.s f19, f3, f16, f9, rdn # perform operation
fnmsub.s f19, f3, f16, f9, rmm # perform operation
fnmsub.s f19, f3, f16, f9, rne # perform operation
fnmsub.s f19, f3, f16, f9, rtz # perform operation
fnmsub.s f19, f3, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x39a0a40e06976e50 # load x3 with value 0x39a0a40e06976e50
sw x3, 0(x2) # store 0x39a0a40e06976e50 in memory
flw f27, 0(x2) # load 0x39a0a40e06976e50 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f11, f12, f27, f9, dyn # perform operation
fnmsub.s f11, f12, f27, f9, rdn # perform operation
fnmsub.s f11, f12, f27, f9, rmm # perform operation
fnmsub.s f11, f12, f27, f9, rne # perform operation
fnmsub.s f11, f12, f27, f9, rtz # perform operation
fnmsub.s f11, f12, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x6b2aa1ed083e03a5 # load x3 with value 0x6b2aa1ed083e03a5
sw x3, 0(x2) # store 0x6b2aa1ed083e03a5 in memory
flw f14, 0(x2) # load 0x6b2aa1ed083e03a5 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmsub.s f12, f21, f14, f15, dyn # perform operation
fnmsub.s f12, f21, f14, f15, rdn # perform operation
fnmsub.s f12, f21, f14, f15, rmm # perform operation
fnmsub.s f12, f21, f14, f15, rne # perform operation
fnmsub.s f12, f21, f14, f15, rtz # perform operation
fnmsub.s f12, f21, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xd348c1ad528a4872 # load x3 with value 0xd348c1ad528a4872
sw x3, 0(x2) # store 0xd348c1ad528a4872 in memory
flw f1, 0(x2) # load 0xd348c1ad528a4872 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fnmsub.s f21, f15, f1, f6, dyn # perform operation
fnmsub.s f21, f15, f1, f6, rdn # perform operation
fnmsub.s f21, f15, f1, f6, rmm # perform operation
fnmsub.s f21, f15, f1, f6, rne # perform operation
fnmsub.s f21, f15, f1, f6, rtz # perform operation
fnmsub.s f21, f15, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xd6f52576e2405480 # load x3 with value 0xd6f52576e2405480
sw x3, 0(x2) # store 0xd6f52576e2405480 in memory
flw f26, 0(x2) # load 0xd6f52576e2405480 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmsub.s f11, f18, f26, f10, dyn # perform operation
fnmsub.s f11, f18, f26, f10, rdn # perform operation
fnmsub.s f11, f18, f26, f10, rmm # perform operation
fnmsub.s f11, f18, f26, f10, rne # perform operation
fnmsub.s f11, f18, f26, f10, rtz # perform operation
fnmsub.s f11, f18, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f18, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f18, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f18, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f18, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f18, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xf94ab80855124f7e # load x3 with value 0xf94ab80855124f7e
sw x3, 0(x2) # store 0xf94ab80855124f7e in memory
flw f24, 0(x2) # load 0xf94ab80855124f7e from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmsub.s f5, f27, f24, f28, dyn # perform operation
fnmsub.s f5, f27, f24, f28, rdn # perform operation
fnmsub.s f5, f27, f24, f28, rmm # perform operation
fnmsub.s f5, f27, f24, f28, rne # perform operation
fnmsub.s f5, f27, f24, f28, rtz # perform operation
fnmsub.s f5, f27, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x620b416597797905 # load x3 with value 0x620b416597797905
sw x3, 0(x2) # store 0x620b416597797905 in memory
flw f25, 0(x2) # load 0x620b416597797905 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f6, f20, f25, f30, dyn # perform operation
fnmsub.s f6, f20, f25, f30, rdn # perform operation
fnmsub.s f6, f20, f25, f30, rmm # perform operation
fnmsub.s f6, f20, f25, f30, rne # perform operation
fnmsub.s f6, f20, f25, f30, rtz # perform operation
fnmsub.s f6, f20, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x8353dde6700a3263 # load x3 with value 0x8353dde6700a3263
sw x3, 0(x2) # store 0x8353dde6700a3263 in memory
flw f25, 0(x2) # load 0x8353dde6700a3263 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fnmsub.s f15, f19, f25, f11, dyn # perform operation
fnmsub.s f15, f19, f25, f11, rdn # perform operation
fnmsub.s f15, f19, f25, f11, rmm # perform operation
fnmsub.s f15, f19, f25, f11, rne # perform operation
fnmsub.s f15, f19, f25, f11, rtz # perform operation
fnmsub.s f15, f19, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x9c87dd38f084b240 # load x3 with value 0x9c87dd38f084b240
sw x3, 0(x2) # store 0x9c87dd38f084b240 in memory
flw f2, 0(x2) # load 0x9c87dd38f084b240 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f19, f27, f2, f30, dyn # perform operation
fnmsub.s f19, f27, f2, f30, rdn # perform operation
fnmsub.s f19, f27, f2, f30, rmm # perform operation
fnmsub.s f19, f27, f2, f30, rne # perform operation
fnmsub.s f19, f27, f2, f30, rtz # perform operation
fnmsub.s f19, f27, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x9f09174fb2fe0221 # load x3 with value 0x9f09174fb2fe0221
sw x3, 0(x2) # store 0x9f09174fb2fe0221 in memory
flw f3, 0(x2) # load 0x9f09174fb2fe0221 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmsub.s f8, f27, f3, f30, dyn # perform operation
fnmsub.s f8, f27, f3, f30, rdn # perform operation
fnmsub.s f8, f27, f3, f30, rmm # perform operation
fnmsub.s f8, f27, f3, f30, rne # perform operation
fnmsub.s f8, f27, f3, f30, rtz # perform operation
fnmsub.s f8, f27, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xfff3c409c0c8b830 # load x3 with value 0xfff3c409c0c8b830
sw x3, 0(x2) # store 0xfff3c409c0c8b830 in memory
flw f22, 0(x2) # load 0xfff3c409c0c8b830 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fnmsub.s f1, f15, f22, f2, dyn # perform operation
fnmsub.s f1, f15, f22, f2, rdn # perform operation
fnmsub.s f1, f15, f22, f2, rmm # perform operation
fnmsub.s f1, f15, f22, f2, rne # perform operation
fnmsub.s f1, f15, f22, f2, rtz # perform operation
fnmsub.s f1, f15, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x2ef10700f2baf441 # load x3 with value 0x2ef10700f2baf441
sw x3, 0(x2) # store 0x2ef10700f2baf441 in memory
flw f12, 0(x2) # load 0x2ef10700f2baf441 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f30, f18, f12, f17, dyn # perform operation
fnmsub.s f30, f18, f12, f17, rdn # perform operation
fnmsub.s f30, f18, f12, f17, rmm # perform operation
fnmsub.s f30, f18, f12, f17, rne # perform operation
fnmsub.s f30, f18, f12, f17, rtz # perform operation
fnmsub.s f30, f18, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x9796b0fb3f290793 # load x3 with value 0x9796b0fb3f290793
sw x3, 0(x2) # store 0x9796b0fb3f290793 in memory
flw f2, 0(x2) # load 0x9796b0fb3f290793 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmsub.s f30, f13, f2, f5, dyn # perform operation
fnmsub.s f30, f13, f2, f5, rdn # perform operation
fnmsub.s f30, f13, f2, f5, rmm # perform operation
fnmsub.s f30, f13, f2, f5, rne # perform operation
fnmsub.s f30, f13, f2, f5, rtz # perform operation
fnmsub.s f30, f13, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x17caad86cddf50a3 # load x3 with value 0x17caad86cddf50a3
sw x3, 0(x2) # store 0x17caad86cddf50a3 in memory
flw f29, 0(x2) # load 0x17caad86cddf50a3 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fnmsub.s f16, f14, f29, f9, dyn # perform operation
fnmsub.s f16, f14, f29, f9, rdn # perform operation
fnmsub.s f16, f14, f29, f9, rmm # perform operation
fnmsub.s f16, f14, f29, f9, rne # perform operation
fnmsub.s f16, f14, f29, f9, rtz # perform operation
fnmsub.s f16, f14, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7faff410892275d8 # load x3 with value 0x7faff410892275d8
sw x3, 0(x2) # store 0x7faff410892275d8 in memory
flw f20, 0(x2) # load 0x7faff410892275d8 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f13, f8, f20, f3, dyn # perform operation
fnmsub.s f13, f8, f20, f3, rdn # perform operation
fnmsub.s f13, f8, f20, f3, rmm # perform operation
fnmsub.s f13, f8, f20, f3, rne # perform operation
fnmsub.s f13, f8, f20, f3, rtz # perform operation
fnmsub.s f13, f8, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xc2f5e0bae3bf3bdc # load x3 with value 0xc2f5e0bae3bf3bdc
sw x3, 0(x2) # store 0xc2f5e0bae3bf3bdc in memory
flw f11, 0(x2) # load 0xc2f5e0bae3bf3bdc from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f5, f1, f11, f20, dyn # perform operation
fnmsub.s f5, f1, f11, f20, rdn # perform operation
fnmsub.s f5, f1, f11, f20, rmm # perform operation
fnmsub.s f5, f1, f11, f20, rne # perform operation
fnmsub.s f5, f1, f11, f20, rtz # perform operation
fnmsub.s f5, f1, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f1, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f1, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f1, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f1, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f1, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x1460328ab6a1d1ad # load x3 with value 0x1460328ab6a1d1ad
sw x3, 0(x2) # store 0x1460328ab6a1d1ad in memory
flw f27, 0(x2) # load 0x1460328ab6a1d1ad from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fnmsub.s f3, f5, f27, f18, dyn # perform operation
fnmsub.s f3, f5, f27, f18, rdn # perform operation
fnmsub.s f3, f5, f27, f18, rmm # perform operation
fnmsub.s f3, f5, f27, f18, rne # perform operation
fnmsub.s f3, f5, f27, f18, rtz # perform operation
fnmsub.s f3, f5, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xb8be4fe3f42c7f22 # load x3 with value 0xb8be4fe3f42c7f22
sw x3, 0(x2) # store 0xb8be4fe3f42c7f22 in memory
flw f13, 0(x2) # load 0xb8be4fe3f42c7f22 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmsub.s f15, f30, f13, f12, dyn # perform operation
fnmsub.s f15, f30, f13, f12, rdn # perform operation
fnmsub.s f15, f30, f13, f12, rmm # perform operation
fnmsub.s f15, f30, f13, f12, rne # perform operation
fnmsub.s f15, f30, f13, f12, rtz # perform operation
fnmsub.s f15, f30, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x7ceccd1a47a5896e # load x3 with value 0x7ceccd1a47a5896e
sw x3, 0(x2) # store 0x7ceccd1a47a5896e in memory
flw f18, 0(x2) # load 0x7ceccd1a47a5896e from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmsub.s f5, f2, f18, f13, dyn # perform operation
fnmsub.s f5, f2, f18, f13, rdn # perform operation
fnmsub.s f5, f2, f18, f13, rmm # perform operation
fnmsub.s f5, f2, f18, f13, rne # perform operation
fnmsub.s f5, f2, f18, f13, rtz # perform operation
fnmsub.s f5, f2, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xf298ba3a5f855a28 # load x3 with value 0xf298ba3a5f855a28
sw x3, 0(x2) # store 0xf298ba3a5f855a28 in memory
flw f23, 0(x2) # load 0xf298ba3a5f855a28 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmsub.s f27, f26, f23, f29, dyn # perform operation
fnmsub.s f27, f26, f23, f29, rdn # perform operation
fnmsub.s f27, f26, f23, f29, rmm # perform operation
fnmsub.s f27, f26, f23, f29, rne # perform operation
fnmsub.s f27, f26, f23, f29, rtz # perform operation
fnmsub.s f27, f26, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f26, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0xbc88ea9a74591273 # load x3 with value 0xbc88ea9a74591273
sw x3, 0(x2) # store 0xbc88ea9a74591273 in memory
flw f19, 0(x2) # load 0xbc88ea9a74591273 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmsub.s f20, f12, f19, f28, dyn # perform operation
fnmsub.s f20, f12, f19, f28, rdn # perform operation
fnmsub.s f20, f12, f19, f28, rmm # perform operation
fnmsub.s f20, f12, f19, f28, rne # perform operation
fnmsub.s f20, f12, f19, f28, rtz # perform operation
fnmsub.s f20, f12, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xb903f3c4c9b535fe # load x3 with value 0xb903f3c4c9b535fe
sw x3, 0(x2) # store 0xb903f3c4c9b535fe in memory
flw f11, 0(x2) # load 0xb903f3c4c9b535fe from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fnmsub.s f19, f6, f11, f31, dyn # perform operation
fnmsub.s f19, f6, f11, f31, rdn # perform operation
fnmsub.s f19, f6, f11, f31, rmm # perform operation
fnmsub.s f19, f6, f11, f31, rne # perform operation
fnmsub.s f19, f6, f11, f31, rtz # perform operation
fnmsub.s f19, f6, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x9b93458335469f3c # load x3 with value 0x9b93458335469f3c
sw x3, 0(x2) # store 0x9b93458335469f3c in memory
flw f28, 0(x2) # load 0x9b93458335469f3c from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmsub.s f14, f20, f28, f16, dyn # perform operation
fnmsub.s f14, f20, f28, f16, rdn # perform operation
fnmsub.s f14, f20, f28, f16, rmm # perform operation
fnmsub.s f14, f20, f28, f16, rne # perform operation
fnmsub.s f14, f20, f28, f16, rtz # perform operation
fnmsub.s f14, f20, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x5abb9f4bed55d95e # load x3 with value 0x5abb9f4bed55d95e
sw x3, 0(x2) # store 0x5abb9f4bed55d95e in memory
flw f20, 0(x2) # load 0x5abb9f4bed55d95e from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmsub.s f26, f24, f20, f22, dyn # perform operation
fnmsub.s f26, f24, f20, f22, rdn # perform operation
fnmsub.s f26, f24, f20, f22, rmm # perform operation
fnmsub.s f26, f24, f20, f22, rne # perform operation
fnmsub.s f26, f24, f20, f22, rtz # perform operation
fnmsub.s f26, f24, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x8d662b2a3e39526b # load x3 with value 0x8d662b2a3e39526b
sw x3, 0(x2) # store 0x8d662b2a3e39526b in memory
flw f26, 0(x2) # load 0x8d662b2a3e39526b from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmsub.s f25, f29, f26, f13, dyn # perform operation
fnmsub.s f25, f29, f26, f13, rdn # perform operation
fnmsub.s f25, f29, f26, f13, rmm # perform operation
fnmsub.s f25, f29, f26, f13, rne # perform operation
fnmsub.s f25, f29, f26, f13, rtz # perform operation
fnmsub.s f25, f29, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x955d9595a0fc4a0 # load x3 with value 0x955d9595a0fc4a0
sw x3, 0(x2) # store 0x955d9595a0fc4a0 in memory
flw f9, 0(x2) # load 0x955d9595a0fc4a0 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fnmsub.s f18, f29, f9, f5, dyn # perform operation
fnmsub.s f18, f29, f9, f5, rdn # perform operation
fnmsub.s f18, f29, f9, f5, rmm # perform operation
fnmsub.s f18, f29, f9, f5, rne # perform operation
fnmsub.s f18, f29, f9, f5, rtz # perform operation
fnmsub.s f18, f29, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xea840f51ad393800 # load x3 with value 0xea840f51ad393800
sw x3, 0(x2) # store 0xea840f51ad393800 in memory
flw f17, 0(x2) # load 0xea840f51ad393800 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f1, f11, f17, f12, dyn # perform operation
fnmsub.s f1, f11, f17, f12, rdn # perform operation
fnmsub.s f1, f11, f17, f12, rmm # perform operation
fnmsub.s f1, f11, f17, f12, rne # perform operation
fnmsub.s f1, f11, f17, f12, rtz # perform operation
fnmsub.s f1, f11, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xa6cd3e748d18de75 # load x3 with value 0xa6cd3e748d18de75
sw x3, 0(x2) # store 0xa6cd3e748d18de75 in memory
flw f1, 0(x2) # load 0xa6cd3e748d18de75 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmsub.s f31, f6, f1, f5, dyn # perform operation
fnmsub.s f31, f6, f1, f5, rdn # perform operation
fnmsub.s f31, f6, f1, f5, rmm # perform operation
fnmsub.s f31, f6, f1, f5, rne # perform operation
fnmsub.s f31, f6, f1, f5, rtz # perform operation
fnmsub.s f31, f6, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x4537d37f84e53c79 # load x3 with value 0x4537d37f84e53c79
sw x3, 0(x2) # store 0x4537d37f84e53c79 in memory
flw f18, 0(x2) # load 0x4537d37f84e53c79 from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmsub.s f25, f8, f18, f2, dyn # perform operation
fnmsub.s f25, f8, f18, f2, rdn # perform operation
fnmsub.s f25, f8, f18, f2, rmm # perform operation
fnmsub.s f25, f8, f18, f2, rne # perform operation
fnmsub.s f25, f8, f18, f2, rtz # perform operation
fnmsub.s f25, f8, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f8, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xd222efb20d1fec31 # load x3 with value 0xd222efb20d1fec31
sw x3, 0(x2) # store 0xd222efb20d1fec31 in memory
flw f26, 0(x2) # load 0xd222efb20d1fec31 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmsub.s f15, f23, f26, f16, dyn # perform operation
fnmsub.s f15, f23, f26, f16, rdn # perform operation
fnmsub.s f15, f23, f26, f16, rmm # perform operation
fnmsub.s f15, f23, f26, f16, rne # perform operation
fnmsub.s f15, f23, f26, f16, rtz # perform operation
fnmsub.s f15, f23, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x46beb5bca7885f77 # load x3 with value 0x46beb5bca7885f77
sw x3, 0(x2) # store 0x46beb5bca7885f77 in memory
flw f6, 0(x2) # load 0x46beb5bca7885f77 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmsub.s f19, f20, f6, f26, dyn # perform operation
fnmsub.s f19, f20, f6, f26, rdn # perform operation
fnmsub.s f19, f20, f6, f26, rmm # perform operation
fnmsub.s f19, f20, f6, f26, rne # perform operation
fnmsub.s f19, f20, f6, f26, rtz # perform operation
fnmsub.s f19, f20, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f20, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f20, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f20, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f20, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f20, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xff27b3f166690c1 # load x3 with value 0xff27b3f166690c1
sw x3, 0(x2) # store 0xff27b3f166690c1 in memory
flw f7, 0(x2) # load 0xff27b3f166690c1 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f16, f8, f7, f20, dyn # perform operation
fnmsub.s f16, f8, f7, f20, rdn # perform operation
fnmsub.s f16, f8, f7, f20, rmm # perform operation
fnmsub.s f16, f8, f7, f20, rne # perform operation
fnmsub.s f16, f8, f7, f20, rtz # perform operation
fnmsub.s f16, f8, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x5bc3712eec385290 # load x3 with value 0x5bc3712eec385290
sw x3, 0(x2) # store 0x5bc3712eec385290 in memory
flw f29, 0(x2) # load 0x5bc3712eec385290 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
fnmsub.s f18, f25, f29, f6, dyn # perform operation
fnmsub.s f18, f25, f29, f6, rdn # perform operation
fnmsub.s f18, f25, f29, f6, rmm # perform operation
fnmsub.s f18, f25, f29, f6, rne # perform operation
fnmsub.s f18, f25, f29, f6, rtz # perform operation
fnmsub.s f18, f25, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xc51dfd0629fe8127 # load x3 with value 0xc51dfd0629fe8127
sw x3, 0(x2) # store 0xc51dfd0629fe8127 in memory
flw f16, 0(x2) # load 0xc51dfd0629fe8127 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmsub.s f18, f13, f16, f9, dyn # perform operation
fnmsub.s f18, f13, f16, f9, rdn # perform operation
fnmsub.s f18, f13, f16, f9, rmm # perform operation
fnmsub.s f18, f13, f16, f9, rne # perform operation
fnmsub.s f18, f13, f16, f9, rtz # perform operation
fnmsub.s f18, f13, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f13, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x53c32973950cac54 # load x3 with value 0x53c32973950cac54
sw x3, 0(x2) # store 0x53c32973950cac54 in memory
flw f17, 0(x2) # load 0x53c32973950cac54 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmsub.s f3, f31, f17, f29, dyn # perform operation
fnmsub.s f3, f31, f17, f29, rdn # perform operation
fnmsub.s f3, f31, f17, f29, rmm # perform operation
fnmsub.s f3, f31, f17, f29, rne # perform operation
fnmsub.s f3, f31, f17, f29, rtz # perform operation
fnmsub.s f3, f31, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xb4756161502e036f # load x3 with value 0xb4756161502e036f
sw x3, 0(x2) # store 0xb4756161502e036f in memory
flw f7, 0(x2) # load 0xb4756161502e036f from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fnmsub.s f17, f15, f7, f27, dyn # perform operation
fnmsub.s f17, f15, f7, f27, rdn # perform operation
fnmsub.s f17, f15, f7, f27, rmm # perform operation
fnmsub.s f17, f15, f7, f27, rne # perform operation
fnmsub.s f17, f15, f7, f27, rtz # perform operation
fnmsub.s f17, f15, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f15, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xd27e99ddddbf33cf # load x3 with value 0xd27e99ddddbf33cf
sw x3, 0(x2) # store 0xd27e99ddddbf33cf in memory
flw f9, 0(x2) # load 0xd27e99ddddbf33cf from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmsub.s f23, f10, f9, f28, dyn # perform operation
fnmsub.s f23, f10, f9, f28, rdn # perform operation
fnmsub.s f23, f10, f9, f28, rmm # perform operation
fnmsub.s f23, f10, f9, f28, rne # perform operation
fnmsub.s f23, f10, f9, f28, rtz # perform operation
fnmsub.s f23, f10, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x3a7ace89828353f8 # load x3 with value 0x3a7ace89828353f8
sw x3, 0(x2) # store 0x3a7ace89828353f8 in memory
flw f19, 0(x2) # load 0x3a7ace89828353f8 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmsub.s f31, f23, f19, f12, dyn # perform operation
fnmsub.s f31, f23, f19, f12, rdn # perform operation
fnmsub.s f31, f23, f19, f12, rmm # perform operation
fnmsub.s f31, f23, f19, f12, rne # perform operation
fnmsub.s f31, f23, f19, f12, rtz # perform operation
fnmsub.s f31, f23, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x4e080f4a4bc8d199 # load x3 with value 0x4e080f4a4bc8d199
sw x3, 0(x2) # store 0x4e080f4a4bc8d199 in memory
flw f3, 0(x2) # load 0x4e080f4a4bc8d199 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f30, f29, f3, f14, dyn # perform operation
fnmsub.s f30, f29, f3, f14, rdn # perform operation
fnmsub.s f30, f29, f3, f14, rmm # perform operation
fnmsub.s f30, f29, f3, f14, rne # perform operation
fnmsub.s f30, f29, f3, f14, rtz # perform operation
fnmsub.s f30, f29, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f29, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x4ad000a7b7bb498c # load x3 with value 0x4ad000a7b7bb498c
sw x3, 0(x2) # store 0x4ad000a7b7bb498c in memory
flw f30, 0(x2) # load 0x4ad000a7b7bb498c from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmsub.s f19, f31, f30, f16, dyn # perform operation
fnmsub.s f19, f31, f30, f16, rdn # perform operation
fnmsub.s f19, f31, f30, f16, rmm # perform operation
fnmsub.s f19, f31, f30, f16, rne # perform operation
fnmsub.s f19, f31, f30, f16, rtz # perform operation
fnmsub.s f19, f31, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f30, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x44a8aac51ef5bc6a # load x3 with value 0x44a8aac51ef5bc6a
sw x3, 0(x2) # store 0x44a8aac51ef5bc6a in memory
flw f20, 0(x2) # load 0x44a8aac51ef5bc6a from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f18, f25, f20, f13, dyn # perform operation
fnmsub.s f18, f25, f20, f13, rdn # perform operation
fnmsub.s f18, f25, f20, f13, rmm # perform operation
fnmsub.s f18, f25, f20, f13, rne # perform operation
fnmsub.s f18, f25, f20, f13, rtz # perform operation
fnmsub.s f18, f25, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x9b6592b9b2403489 # load x3 with value 0x9b6592b9b2403489
sw x3, 0(x2) # store 0x9b6592b9b2403489 in memory
flw f9, 0(x2) # load 0x9b6592b9b2403489 from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f1, f27, f9, f22, dyn # perform operation
fnmsub.s f1, f27, f9, f22, rdn # perform operation
fnmsub.s f1, f27, f9, f22, rmm # perform operation
fnmsub.s f1, f27, f9, f22, rne # perform operation
fnmsub.s f1, f27, f9, f22, rtz # perform operation
fnmsub.s f1, f27, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f9, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x652d363b9dace2a6 # load x3 with value 0x652d363b9dace2a6
sw x3, 0(x2) # store 0x652d363b9dace2a6 in memory
flw f31, 0(x2) # load 0x652d363b9dace2a6 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmsub.s f19, f23, f31, f22, dyn # perform operation
fnmsub.s f19, f23, f31, f22, rdn # perform operation
fnmsub.s f19, f23, f31, f22, rmm # perform operation
fnmsub.s f19, f23, f31, f22, rne # perform operation
fnmsub.s f19, f23, f31, f22, rtz # perform operation
fnmsub.s f19, f23, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xf2e7043b050845de # load x3 with value 0xf2e7043b050845de
sw x3, 0(x2) # store 0xf2e7043b050845de in memory
flw f16, 0(x2) # load 0xf2e7043b050845de from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmsub.s f17, f26, f16, f3, dyn # perform operation
fnmsub.s f17, f26, f16, f3, rdn # perform operation
fnmsub.s f17, f26, f16, f3, rmm # perform operation
fnmsub.s f17, f26, f16, f3, rne # perform operation
fnmsub.s f17, f26, f16, f3, rtz # perform operation
fnmsub.s f17, f26, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f26, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x57ceeed886507fcb # load x3 with value 0x57ceeed886507fcb
sw x3, 0(x2) # store 0x57ceeed886507fcb in memory
flw f20, 0(x2) # load 0x57ceeed886507fcb from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmsub.s f9, f19, f20, f31, dyn # perform operation
fnmsub.s f9, f19, f20, f31, rdn # perform operation
fnmsub.s f9, f19, f20, f31, rmm # perform operation
fnmsub.s f9, f19, f20, f31, rne # perform operation
fnmsub.s f9, f19, f20, f31, rtz # perform operation
fnmsub.s f9, f19, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f19, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xaeff34aa1f0cdb08 # load x3 with value 0xaeff34aa1f0cdb08
sw x3, 0(x2) # store 0xaeff34aa1f0cdb08 in memory
flw f3, 0(x2) # load 0xaeff34aa1f0cdb08 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f13, f11, f3, f30, dyn # perform operation
fnmsub.s f13, f11, f3, f30, rdn # perform operation
fnmsub.s f13, f11, f3, f30, rmm # perform operation
fnmsub.s f13, f11, f3, f30, rne # perform operation
fnmsub.s f13, f11, f3, f30, rtz # perform operation
fnmsub.s f13, f11, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f11, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f11, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f11, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f11, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f11, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xcdd5d8ee4646068e # load x3 with value 0xcdd5d8ee4646068e
sw x3, 0(x2) # store 0xcdd5d8ee4646068e in memory
flw f18, 0(x2) # load 0xcdd5d8ee4646068e from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f3, f17, f18, f6, dyn # perform operation
fnmsub.s f3, f17, f18, f6, rdn # perform operation
fnmsub.s f3, f17, f18, f6, rmm # perform operation
fnmsub.s f3, f17, f18, f6, rne # perform operation
fnmsub.s f3, f17, f18, f6, rtz # perform operation
fnmsub.s f3, f17, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x9468855c32ac5f22 # load x3 with value 0x9468855c32ac5f22
sw x3, 0(x2) # store 0x9468855c32ac5f22 in memory
flw f16, 0(x2) # load 0x9468855c32ac5f22 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f30, f12, f16, f13, dyn # perform operation
fnmsub.s f30, f12, f16, f13, rdn # perform operation
fnmsub.s f30, f12, f16, f13, rmm # perform operation
fnmsub.s f30, f12, f16, f13, rne # perform operation
fnmsub.s f30, f12, f16, f13, rtz # perform operation
fnmsub.s f30, f12, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x8f6e4445a44adbe7 # load x3 with value 0x8f6e4445a44adbe7
sw x3, 0(x2) # store 0x8f6e4445a44adbe7 in memory
flw f30, 0(x2) # load 0x8f6e4445a44adbe7 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fnmsub.s f21, f1, f30, f2, dyn # perform operation
fnmsub.s f21, f1, f30, f2, rdn # perform operation
fnmsub.s f21, f1, f30, f2, rmm # perform operation
fnmsub.s f21, f1, f30, f2, rne # perform operation
fnmsub.s f21, f1, f30, f2, rtz # perform operation
fnmsub.s f21, f1, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0xfa4c8974ace280f2 # load x3 with value 0xfa4c8974ace280f2
sw x3, 0(x2) # store 0xfa4c8974ace280f2 in memory
flw f1, 0(x2) # load 0xfa4c8974ace280f2 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f16, f9, f1, f14, dyn # perform operation
fnmsub.s f16, f9, f1, f14, rdn # perform operation
fnmsub.s f16, f9, f1, f14, rmm # perform operation
fnmsub.s f16, f9, f1, f14, rne # perform operation
fnmsub.s f16, f9, f1, f14, rtz # perform operation
fnmsub.s f16, f9, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f9, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f9, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f9, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f9, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f9, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x5dc4767883e92bb5 # load x3 with value 0x5dc4767883e92bb5
sw x3, 0(x2) # store 0x5dc4767883e92bb5 in memory
flw f7, 0(x2) # load 0x5dc4767883e92bb5 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmsub.s f19, f28, f7, f31, dyn # perform operation
fnmsub.s f19, f28, f7, f31, rdn # perform operation
fnmsub.s f19, f28, f7, f31, rmm # perform operation
fnmsub.s f19, f28, f7, f31, rne # perform operation
fnmsub.s f19, f28, f7, f31, rtz # perform operation
fnmsub.s f19, f28, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f7, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x31865063f3b0a56a # load x3 with value 0x31865063f3b0a56a
sw x3, 0(x2) # store 0x31865063f3b0a56a in memory
flw f20, 0(x2) # load 0x31865063f3b0a56a from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmsub.s f23, f1, f20, f29, dyn # perform operation
fnmsub.s f23, f1, f20, f29, rdn # perform operation
fnmsub.s f23, f1, f20, f29, rmm # perform operation
fnmsub.s f23, f1, f20, f29, rne # perform operation
fnmsub.s f23, f1, f20, f29, rtz # perform operation
fnmsub.s f23, f1, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xe92df6909401e688 # load x3 with value 0xe92df6909401e688
sw x3, 0(x2) # store 0xe92df6909401e688 in memory
flw f29, 0(x2) # load 0xe92df6909401e688 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fnmsub.s f23, f15, f29, f14, dyn # perform operation
fnmsub.s f23, f15, f29, f14, rdn # perform operation
fnmsub.s f23, f15, f29, f14, rmm # perform operation
fnmsub.s f23, f15, f29, f14, rne # perform operation
fnmsub.s f23, f15, f29, f14, rtz # perform operation
fnmsub.s f23, f15, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xc436febd63905b41 # load x3 with value 0xc436febd63905b41
sw x3, 0(x2) # store 0xc436febd63905b41 in memory
flw f27, 0(x2) # load 0xc436febd63905b41 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f17, f1, f27, f23, dyn # perform operation
fnmsub.s f17, f1, f27, f23, rdn # perform operation
fnmsub.s f17, f1, f27, f23, rmm # perform operation
fnmsub.s f17, f1, f27, f23, rne # perform operation
fnmsub.s f17, f1, f27, f23, rtz # perform operation
fnmsub.s f17, f1, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x366f073e85e63c49 # load x3 with value 0x366f073e85e63c49
sw x3, 0(x2) # store 0x366f073e85e63c49 in memory
flw f5, 0(x2) # load 0x366f073e85e63c49 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmsub.s f28, f14, f5, f15, dyn # perform operation
fnmsub.s f28, f14, f5, f15, rdn # perform operation
fnmsub.s f28, f14, f5, f15, rmm # perform operation
fnmsub.s f28, f14, f5, f15, rne # perform operation
fnmsub.s f28, f14, f5, f15, rtz # perform operation
fnmsub.s f28, f14, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f14, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x6e2b3e70873f5741 # load x3 with value 0x6e2b3e70873f5741
sw x3, 0(x2) # store 0x6e2b3e70873f5741 in memory
flw f9, 0(x2) # load 0x6e2b3e70873f5741 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f14, f24, f9, f25, dyn # perform operation
fnmsub.s f14, f24, f9, f25, rdn # perform operation
fnmsub.s f14, f24, f9, f25, rmm # perform operation
fnmsub.s f14, f24, f9, f25, rne # perform operation
fnmsub.s f14, f24, f9, f25, rtz # perform operation
fnmsub.s f14, f24, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f24, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x60869bd5500c29cc # load x3 with value 0x60869bd5500c29cc
sw x3, 0(x2) # store 0x60869bd5500c29cc in memory
flw f14, 0(x2) # load 0x60869bd5500c29cc from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmsub.s f10, f25, f14, f13, dyn # perform operation
fnmsub.s f10, f25, f14, f13, rdn # perform operation
fnmsub.s f10, f25, f14, f13, rmm # perform operation
fnmsub.s f10, f25, f14, f13, rne # perform operation
fnmsub.s f10, f25, f14, f13, rtz # perform operation
fnmsub.s f10, f25, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x28ab53926eb5e9e4 # load x3 with value 0x28ab53926eb5e9e4
sw x3, 0(x2) # store 0x28ab53926eb5e9e4 in memory
flw f15, 0(x2) # load 0x28ab53926eb5e9e4 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fnmsub.s f9, f10, f15, f22, dyn # perform operation
fnmsub.s f9, f10, f15, f22, rdn # perform operation
fnmsub.s f9, f10, f15, f22, rmm # perform operation
fnmsub.s f9, f10, f15, f22, rne # perform operation
fnmsub.s f9, f10, f15, f22, rtz # perform operation
fnmsub.s f9, f10, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xe0bd62920fb539e5 # load x3 with value 0xe0bd62920fb539e5
sw x3, 0(x2) # store 0xe0bd62920fb539e5 in memory
flw f12, 0(x2) # load 0xe0bd62920fb539e5 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmsub.s f21, f16, f12, f5, dyn # perform operation
fnmsub.s f21, f16, f12, f5, rdn # perform operation
fnmsub.s f21, f16, f12, f5, rmm # perform operation
fnmsub.s f21, f16, f12, f5, rne # perform operation
fnmsub.s f21, f16, f12, f5, rtz # perform operation
fnmsub.s f21, f16, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x8fa3e7749a302a61 # load x3 with value 0x8fa3e7749a302a61
sw x3, 0(x2) # store 0x8fa3e7749a302a61 in memory
flw f13, 0(x2) # load 0x8fa3e7749a302a61 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f24, f19, f13, f11, dyn # perform operation
fnmsub.s f24, f19, f13, f11, rdn # perform operation
fnmsub.s f24, f19, f13, f11, rmm # perform operation
fnmsub.s f24, f19, f13, f11, rne # perform operation
fnmsub.s f24, f19, f13, f11, rtz # perform operation
fnmsub.s f24, f19, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f19, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f19, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f19, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f19, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f19, f13, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xded8d512a7245903 # load x3 with value 0xded8d512a7245903
sw x3, 0(x2) # store 0xded8d512a7245903 in memory
flw f11, 0(x2) # load 0xded8d512a7245903 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
fnmsub.s f18, f10, f11, f28, dyn # perform operation
fnmsub.s f18, f10, f11, f28, rdn # perform operation
fnmsub.s f18, f10, f11, f28, rmm # perform operation
fnmsub.s f18, f10, f11, f28, rne # perform operation
fnmsub.s f18, f10, f11, f28, rtz # perform operation
fnmsub.s f18, f10, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xb46d808698809e47 # load x3 with value 0xb46d808698809e47
sw x3, 0(x2) # store 0xb46d808698809e47 in memory
flw f8, 0(x2) # load 0xb46d808698809e47 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmsub.s f2, f24, f8, f9, dyn # perform operation
fnmsub.s f2, f24, f8, f9, rdn # perform operation
fnmsub.s f2, f24, f8, f9, rmm # perform operation
fnmsub.s f2, f24, f8, f9, rne # perform operation
fnmsub.s f2, f24, f8, f9, rtz # perform operation
fnmsub.s f2, f24, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xc477434b5c07e86d # load x3 with value 0xc477434b5c07e86d
sw x3, 0(x2) # store 0xc477434b5c07e86d in memory
flw f1, 0(x2) # load 0xc477434b5c07e86d from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fnmsub.s f24, f14, f1, f28, dyn # perform operation
fnmsub.s f24, f14, f1, f28, rdn # perform operation
fnmsub.s f24, f14, f1, f28, rmm # perform operation
fnmsub.s f24, f14, f1, f28, rne # perform operation
fnmsub.s f24, f14, f1, f28, rtz # perform operation
fnmsub.s f24, f14, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x5346d08a56ea7969 # load x3 with value 0x5346d08a56ea7969
sw x3, 0(x2) # store 0x5346d08a56ea7969 in memory
flw f15, 0(x2) # load 0x5346d08a56ea7969 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fnmsub.s f23, f14, f15, f21, dyn # perform operation
fnmsub.s f23, f14, f15, f21, rdn # perform operation
fnmsub.s f23, f14, f15, f21, rmm # perform operation
fnmsub.s f23, f14, f15, f21, rne # perform operation
fnmsub.s f23, f14, f15, f21, rtz # perform operation
fnmsub.s f23, f14, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xb793f9d6b87cc48e # load x3 with value 0xb793f9d6b87cc48e
sw x3, 0(x2) # store 0xb793f9d6b87cc48e in memory
flw f7, 0(x2) # load 0xb793f9d6b87cc48e from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f5, f8, f7, f20, dyn # perform operation
fnmsub.s f5, f8, f7, f20, rdn # perform operation
fnmsub.s f5, f8, f7, f20, rmm # perform operation
fnmsub.s f5, f8, f7, f20, rne # perform operation
fnmsub.s f5, f8, f7, f20, rtz # perform operation
fnmsub.s f5, f8, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0xc13d673278a71b05 # load x3 with value 0xc13d673278a71b05
sw x3, 0(x2) # store 0xc13d673278a71b05 in memory
flw f14, 0(x2) # load 0xc13d673278a71b05 from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmsub.s f5, f18, f14, f15, dyn # perform operation
fnmsub.s f5, f18, f14, f15, rdn # perform operation
fnmsub.s f5, f18, f14, f15, rmm # perform operation
fnmsub.s f5, f18, f14, f15, rne # perform operation
fnmsub.s f5, f18, f14, f15, rtz # perform operation
fnmsub.s f5, f18, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x75e2fc91ee009d4f # load x3 with value 0x75e2fc91ee009d4f
sw x3, 0(x2) # store 0x75e2fc91ee009d4f in memory
flw f10, 0(x2) # load 0x75e2fc91ee009d4f from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmsub.s f5, f31, f10, f29, dyn # perform operation
fnmsub.s f5, f31, f10, f29, rdn # perform operation
fnmsub.s f5, f31, f10, f29, rmm # perform operation
fnmsub.s f5, f31, f10, f29, rne # perform operation
fnmsub.s f5, f31, f10, f29, rtz # perform operation
fnmsub.s f5, f31, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f31, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x27f191eb819cdf1c # load x3 with value 0x27f191eb819cdf1c
sw x3, 0(x2) # store 0x27f191eb819cdf1c in memory
flw f13, 0(x2) # load 0x27f191eb819cdf1c from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmsub.s f7, f18, f13, f14, dyn # perform operation
fnmsub.s f7, f18, f13, f14, rdn # perform operation
fnmsub.s f7, f18, f13, f14, rmm # perform operation
fnmsub.s f7, f18, f13, f14, rne # perform operation
fnmsub.s f7, f18, f13, f14, rtz # perform operation
fnmsub.s f7, f18, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xb339ce5d36f00f4f # load x3 with value 0xb339ce5d36f00f4f
sw x3, 0(x2) # store 0xb339ce5d36f00f4f in memory
flw f15, 0(x2) # load 0xb339ce5d36f00f4f from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmsub.s f16, f24, f15, f29, dyn # perform operation
fnmsub.s f16, f24, f15, f29, rdn # perform operation
fnmsub.s f16, f24, f15, f29, rmm # perform operation
fnmsub.s f16, f24, f15, f29, rne # perform operation
fnmsub.s f16, f24, f15, f29, rtz # perform operation
fnmsub.s f16, f24, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x9d6cd176d53b600d # load x3 with value 0x9d6cd176d53b600d
sw x3, 0(x2) # store 0x9d6cd176d53b600d in memory
flw f15, 0(x2) # load 0x9d6cd176d53b600d from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmsub.s f22, f10, f15, f27, dyn # perform operation
fnmsub.s f22, f10, f15, f27, rdn # perform operation
fnmsub.s f22, f10, f15, f27, rmm # perform operation
fnmsub.s f22, f10, f15, f27, rne # perform operation
fnmsub.s f22, f10, f15, f27, rtz # perform operation
fnmsub.s f22, f10, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f15, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x45010463a79f5882 # load x3 with value 0x45010463a79f5882
sw x3, 0(x2) # store 0x45010463a79f5882 in memory
flw f11, 0(x2) # load 0x45010463a79f5882 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmsub.s f7, f26, f11, f22, dyn # perform operation
fnmsub.s f7, f26, f11, f22, rdn # perform operation
fnmsub.s f7, f26, f11, f22, rmm # perform operation
fnmsub.s f7, f26, f11, f22, rne # perform operation
fnmsub.s f7, f26, f11, f22, rtz # perform operation
fnmsub.s f7, f26, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f26, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x4db4321be859e858 # load x3 with value 0x4db4321be859e858
sw x3, 0(x2) # store 0x4db4321be859e858 in memory
flw f17, 0(x2) # load 0x4db4321be859e858 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f19, f12, f17, f11, dyn # perform operation
fnmsub.s f19, f12, f17, f11, rdn # perform operation
fnmsub.s f19, f12, f17, f11, rmm # perform operation
fnmsub.s f19, f12, f17, f11, rne # perform operation
fnmsub.s f19, f12, f17, f11, rtz # perform operation
fnmsub.s f19, f12, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xc01b358108e58a8 # load x3 with value 0xc01b358108e58a8
sw x3, 0(x2) # store 0xc01b358108e58a8 in memory
flw f12, 0(x2) # load 0xc01b358108e58a8 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f17, f7, f12, f9, dyn # perform operation
fnmsub.s f17, f7, f12, f9, rdn # perform operation
fnmsub.s f17, f7, f12, f9, rmm # perform operation
fnmsub.s f17, f7, f12, f9, rne # perform operation
fnmsub.s f17, f7, f12, f9, rtz # perform operation
fnmsub.s f17, f7, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xc78dd93a26ba844a # load x3 with value 0xc78dd93a26ba844a
sw x3, 0(x2) # store 0xc78dd93a26ba844a in memory
flw f31, 0(x2) # load 0xc78dd93a26ba844a from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fnmsub.s f26, f24, f31, f5, dyn # perform operation
fnmsub.s f26, f24, f31, f5, rdn # perform operation
fnmsub.s f26, f24, f31, f5, rmm # perform operation
fnmsub.s f26, f24, f31, f5, rne # perform operation
fnmsub.s f26, f24, f31, f5, rtz # perform operation
fnmsub.s f26, f24, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x71e6a360702f07a5 # load x3 with value 0x71e6a360702f07a5
sw x3, 0(x2) # store 0x71e6a360702f07a5 in memory
flw f13, 0(x2) # load 0x71e6a360702f07a5 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmsub.s f11, f27, f13, f12, dyn # perform operation
fnmsub.s f11, f27, f13, f12, rdn # perform operation
fnmsub.s f11, f27, f13, f12, rmm # perform operation
fnmsub.s f11, f27, f13, f12, rne # perform operation
fnmsub.s f11, f27, f13, f12, rtz # perform operation
fnmsub.s f11, f27, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x83383f7c455c7fe5 # load x3 with value 0x83383f7c455c7fe5
sw x3, 0(x2) # store 0x83383f7c455c7fe5 in memory
flw f8, 0(x2) # load 0x83383f7c455c7fe5 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmsub.s f10, f16, f8, f5, dyn # perform operation
fnmsub.s f10, f16, f8, f5, rdn # perform operation
fnmsub.s f10, f16, f8, f5, rmm # perform operation
fnmsub.s f10, f16, f8, f5, rne # perform operation
fnmsub.s f10, f16, f8, f5, rtz # perform operation
fnmsub.s f10, f16, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x3a71f8dc2d25f922 # load x3 with value 0x3a71f8dc2d25f922
sw x3, 0(x2) # store 0x3a71f8dc2d25f922 in memory
flw f9, 0(x2) # load 0x3a71f8dc2d25f922 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f15, f6, f9, f14, dyn # perform operation
fnmsub.s f15, f6, f9, f14, rdn # perform operation
fnmsub.s f15, f6, f9, f14, rmm # perform operation
fnmsub.s f15, f6, f9, f14, rne # perform operation
fnmsub.s f15, f6, f9, f14, rtz # perform operation
fnmsub.s f15, f6, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xcdb5fba79838325f # load x3 with value 0xcdb5fba79838325f
sw x3, 0(x2) # store 0xcdb5fba79838325f in memory
flw f6, 0(x2) # load 0xcdb5fba79838325f from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f22, f21, f6, f9, dyn # perform operation
fnmsub.s f22, f21, f6, f9, rdn # perform operation
fnmsub.s f22, f21, f6, f9, rmm # perform operation
fnmsub.s f22, f21, f6, f9, rne # perform operation
fnmsub.s f22, f21, f6, f9, rtz # perform operation
fnmsub.s f22, f21, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x81e5cca320d8525d # load x3 with value 0x81e5cca320d8525d
sw x3, 0(x2) # store 0x81e5cca320d8525d in memory
flw f24, 0(x2) # load 0x81e5cca320d8525d from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmsub.s f25, f15, f24, f16, dyn # perform operation
fnmsub.s f25, f15, f24, f16, rdn # perform operation
fnmsub.s f25, f15, f24, f16, rmm # perform operation
fnmsub.s f25, f15, f24, f16, rne # perform operation
fnmsub.s f25, f15, f24, f16, rtz # perform operation
fnmsub.s f25, f15, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x41e859a24d3fd2fe # load x3 with value 0x41e859a24d3fd2fe
sw x3, 0(x2) # store 0x41e859a24d3fd2fe in memory
flw f28, 0(x2) # load 0x41e859a24d3fd2fe from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmsub.s f7, f21, f28, f11, dyn # perform operation
fnmsub.s f7, f21, f28, f11, rdn # perform operation
fnmsub.s f7, f21, f28, f11, rmm # perform operation
fnmsub.s f7, f21, f28, f11, rne # perform operation
fnmsub.s f7, f21, f28, f11, rtz # perform operation
fnmsub.s f7, f21, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f21, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f21, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f21, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f21, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f21, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x1fbf85f99cd8b10c # load x3 with value 0x1fbf85f99cd8b10c
sw x3, 0(x2) # store 0x1fbf85f99cd8b10c in memory
flw f26, 0(x2) # load 0x1fbf85f99cd8b10c from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmsub.s f6, f2, f26, f16, dyn # perform operation
fnmsub.s f6, f2, f26, f16, rdn # perform operation
fnmsub.s f6, f2, f26, f16, rmm # perform operation
fnmsub.s f6, f2, f26, f16, rne # perform operation
fnmsub.s f6, f2, f26, f16, rtz # perform operation
fnmsub.s f6, f2, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x659df798674ce08f # load x3 with value 0x659df798674ce08f
sw x3, 0(x2) # store 0x659df798674ce08f in memory
flw f9, 0(x2) # load 0x659df798674ce08f from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f27, f19, f9, f21, dyn # perform operation
fnmsub.s f27, f19, f9, f21, rdn # perform operation
fnmsub.s f27, f19, f9, f21, rmm # perform operation
fnmsub.s f27, f19, f9, f21, rne # perform operation
fnmsub.s f27, f19, f9, f21, rtz # perform operation
fnmsub.s f27, f19, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f19, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f19, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f19, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f19, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f19, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xf479b2c42480ff1c # load x3 with value 0xf479b2c42480ff1c
sw x3, 0(x2) # store 0xf479b2c42480ff1c in memory
flw f6, 0(x2) # load 0xf479b2c42480ff1c from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmsub.s f19, f28, f6, f18, dyn # perform operation
fnmsub.s f19, f28, f6, f18, rdn # perform operation
fnmsub.s f19, f28, f6, f18, rmm # perform operation
fnmsub.s f19, f28, f6, f18, rne # perform operation
fnmsub.s f19, f28, f6, f18, rtz # perform operation
fnmsub.s f19, f28, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xf60c06c388df83c8 # load x3 with value 0xf60c06c388df83c8
sw x3, 0(x2) # store 0xf60c06c388df83c8 in memory
flw f20, 0(x2) # load 0xf60c06c388df83c8 from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fnmsub.s f17, f14, f20, f31, dyn # perform operation
fnmsub.s f17, f14, f20, f31, rdn # perform operation
fnmsub.s f17, f14, f20, f31, rmm # perform operation
fnmsub.s f17, f14, f20, f31, rne # perform operation
fnmsub.s f17, f14, f20, f31, rtz # perform operation
fnmsub.s f17, f14, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xebb74126ff7fd391 # load x3 with value 0xebb74126ff7fd391
sw x3, 0(x2) # store 0xebb74126ff7fd391 in memory
flw f2, 0(x2) # load 0xebb74126ff7fd391 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f22, f21, f2, f9, dyn # perform operation
fnmsub.s f22, f21, f2, f9, rdn # perform operation
fnmsub.s f22, f21, f2, f9, rmm # perform operation
fnmsub.s f22, f21, f2, f9, rne # perform operation
fnmsub.s f22, f21, f2, f9, rtz # perform operation
fnmsub.s f22, f21, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xa76dc7664117b0a8 # load x3 with value 0xa76dc7664117b0a8
sw x3, 0(x2) # store 0xa76dc7664117b0a8 in memory
flw f25, 0(x2) # load 0xa76dc7664117b0a8 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmsub.s f26, f1, f25, f28, dyn # perform operation
fnmsub.s f26, f1, f25, f28, rdn # perform operation
fnmsub.s f26, f1, f25, f28, rmm # perform operation
fnmsub.s f26, f1, f25, f28, rne # perform operation
fnmsub.s f26, f1, f25, f28, rtz # perform operation
fnmsub.s f26, f1, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f1, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xc2a35337ff3e68e3 # load x3 with value 0xc2a35337ff3e68e3
sw x3, 0(x2) # store 0xc2a35337ff3e68e3 in memory
flw f2, 0(x2) # load 0xc2a35337ff3e68e3 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f27, f28, f2, f16, dyn # perform operation
fnmsub.s f27, f28, f2, f16, rdn # perform operation
fnmsub.s f27, f28, f2, f16, rmm # perform operation
fnmsub.s f27, f28, f2, f16, rne # perform operation
fnmsub.s f27, f28, f2, f16, rtz # perform operation
fnmsub.s f27, f28, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x569335eb435d9013 # load x3 with value 0x569335eb435d9013
sw x3, 0(x2) # store 0x569335eb435d9013 in memory
flw f23, 0(x2) # load 0x569335eb435d9013 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmsub.s f5, f1, f23, f19, dyn # perform operation
fnmsub.s f5, f1, f23, f19, rdn # perform operation
fnmsub.s f5, f1, f23, f19, rmm # perform operation
fnmsub.s f5, f1, f23, f19, rne # perform operation
fnmsub.s f5, f1, f23, f19, rtz # perform operation
fnmsub.s f5, f1, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f1, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xc38bf807773004f0 # load x3 with value 0xc38bf807773004f0
sw x3, 0(x2) # store 0xc38bf807773004f0 in memory
flw f22, 0(x2) # load 0xc38bf807773004f0 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmsub.s f8, f2, f22, f27, dyn # perform operation
fnmsub.s f8, f2, f22, f27, rdn # perform operation
fnmsub.s f8, f2, f22, f27, rmm # perform operation
fnmsub.s f8, f2, f22, f27, rne # perform operation
fnmsub.s f8, f2, f22, f27, rtz # perform operation
fnmsub.s f8, f2, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f2, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x49e10706e6d93707 # load x3 with value 0x49e10706e6d93707
sw x3, 0(x2) # store 0x49e10706e6d93707 in memory
flw f26, 0(x2) # load 0x49e10706e6d93707 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f19, f22, f26, f1, dyn # perform operation
fnmsub.s f19, f22, f26, f1, rdn # perform operation
fnmsub.s f19, f22, f26, f1, rmm # perform operation
fnmsub.s f19, f22, f26, f1, rne # perform operation
fnmsub.s f19, f22, f26, f1, rtz # perform operation
fnmsub.s f19, f22, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f22, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x246c7d684346b893 # load x3 with value 0x246c7d684346b893
sw x3, 0(x2) # store 0x246c7d684346b893 in memory
flw f15, 0(x2) # load 0x246c7d684346b893 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fnmsub.s f30, f31, f15, f23, dyn # perform operation
fnmsub.s f30, f31, f15, f23, rdn # perform operation
fnmsub.s f30, f31, f15, f23, rmm # perform operation
fnmsub.s f30, f31, f15, f23, rne # perform operation
fnmsub.s f30, f31, f15, f23, rtz # perform operation
fnmsub.s f30, f31, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f31, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f31, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f31, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f31, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f31, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x7560c4d90dee2ba7 # load x3 with value 0x7560c4d90dee2ba7
sw x3, 0(x2) # store 0x7560c4d90dee2ba7 in memory
flw f1, 0(x2) # load 0x7560c4d90dee2ba7 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fnmsub.s f28, f13, f1, f7, dyn # perform operation
fnmsub.s f28, f13, f1, f7, rdn # perform operation
fnmsub.s f28, f13, f1, f7, rmm # perform operation
fnmsub.s f28, f13, f1, f7, rne # perform operation
fnmsub.s f28, f13, f1, f7, rtz # perform operation
fnmsub.s f28, f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xf659cef47fc53908 # load x3 with value 0xf659cef47fc53908
sw x3, 0(x2) # store 0xf659cef47fc53908 in memory
flw f22, 0(x2) # load 0xf659cef47fc53908 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmsub.s f24, f12, f22, f15, dyn # perform operation
fnmsub.s f24, f12, f22, f15, rdn # perform operation
fnmsub.s f24, f12, f22, f15, rmm # perform operation
fnmsub.s f24, f12, f22, f15, rne # perform operation
fnmsub.s f24, f12, f22, f15, rtz # perform operation
fnmsub.s f24, f12, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xfe5ec646d01e7a12 # load x3 with value 0xfe5ec646d01e7a12
sw x3, 0(x2) # store 0xfe5ec646d01e7a12 in memory
flw f30, 0(x2) # load 0xfe5ec646d01e7a12 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmsub.s f7, f18, f30, f3, dyn # perform operation
fnmsub.s f7, f18, f30, f3, rdn # perform operation
fnmsub.s f7, f18, f30, f3, rmm # perform operation
fnmsub.s f7, f18, f30, f3, rne # perform operation
fnmsub.s f7, f18, f30, f3, rtz # perform operation
fnmsub.s f7, f18, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f30, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xd1d4d1733a3fb961 # load x3 with value 0xd1d4d1733a3fb961
sw x3, 0(x2) # store 0xd1d4d1733a3fb961 in memory
flw f19, 0(x2) # load 0xd1d4d1733a3fb961 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f13, f2, f19, f16, dyn # perform operation
fnmsub.s f13, f2, f19, f16, rdn # perform operation
fnmsub.s f13, f2, f19, f16, rmm # perform operation
fnmsub.s f13, f2, f19, f16, rne # perform operation
fnmsub.s f13, f2, f19, f16, rtz # perform operation
fnmsub.s f13, f2, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f2, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f2, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f2, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f2, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f2, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x6b649d0600ddd9ee # load x3 with value 0x6b649d0600ddd9ee
sw x3, 0(x2) # store 0x6b649d0600ddd9ee in memory
flw f11, 0(x2) # load 0x6b649d0600ddd9ee from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmsub.s f19, f6, f11, f18, dyn # perform operation
fnmsub.s f19, f6, f11, f18, rdn # perform operation
fnmsub.s f19, f6, f11, f18, rmm # perform operation
fnmsub.s f19, f6, f11, f18, rne # perform operation
fnmsub.s f19, f6, f11, f18, rtz # perform operation
fnmsub.s f19, f6, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xd1d72b1478476374 # load x3 with value 0xd1d72b1478476374
sw x3, 0(x2) # store 0xd1d72b1478476374 in memory
flw f11, 0(x2) # load 0xd1d72b1478476374 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmsub.s f18, f12, f11, f20, dyn # perform operation
fnmsub.s f18, f12, f11, f20, rdn # perform operation
fnmsub.s f18, f12, f11, f20, rmm # perform operation
fnmsub.s f18, f12, f11, f20, rne # perform operation
fnmsub.s f18, f12, f11, f20, rtz # perform operation
fnmsub.s f18, f12, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xe754f47815df6997 # load x3 with value 0xe754f47815df6997
sw x3, 0(x2) # store 0xe754f47815df6997 in memory
flw f26, 0(x2) # load 0xe754f47815df6997 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmsub.s f14, f2, f26, f11, dyn # perform operation
fnmsub.s f14, f2, f26, f11, rdn # perform operation
fnmsub.s f14, f2, f26, f11, rmm # perform operation
fnmsub.s f14, f2, f26, f11, rne # perform operation
fnmsub.s f14, f2, f26, f11, rtz # perform operation
fnmsub.s f14, f2, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0xa23d3ec9304037ab # load x3 with value 0xa23d3ec9304037ab
sw x3, 0(x2) # store 0xa23d3ec9304037ab in memory
flw f12, 0(x2) # load 0xa23d3ec9304037ab from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f30, f28, f12, f23, dyn # perform operation
fnmsub.s f30, f28, f12, f23, rdn # perform operation
fnmsub.s f30, f28, f12, f23, rmm # perform operation
fnmsub.s f30, f28, f12, f23, rne # perform operation
fnmsub.s f30, f28, f12, f23, rtz # perform operation
fnmsub.s f30, f28, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x61a8d7d5570e7b06 # load x3 with value 0x61a8d7d5570e7b06
sw x3, 0(x2) # store 0x61a8d7d5570e7b06 in memory
flw f13, 0(x2) # load 0x61a8d7d5570e7b06 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f18, f15, f13, f6, dyn # perform operation
fnmsub.s f18, f15, f13, f6, rdn # perform operation
fnmsub.s f18, f15, f13, f6, rmm # perform operation
fnmsub.s f18, f15, f13, f6, rne # perform operation
fnmsub.s f18, f15, f13, f6, rtz # perform operation
fnmsub.s f18, f15, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x906133258d03a942 # load x3 with value 0x906133258d03a942
sw x3, 0(x2) # store 0x906133258d03a942 in memory
flw f3, 0(x2) # load 0x906133258d03a942 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f10, f24, f3, f9, dyn # perform operation
fnmsub.s f10, f24, f3, f9, rdn # perform operation
fnmsub.s f10, f24, f3, f9, rmm # perform operation
fnmsub.s f10, f24, f3, f9, rne # perform operation
fnmsub.s f10, f24, f3, f9, rtz # perform operation
fnmsub.s f10, f24, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x61c28ad576315098 # load x3 with value 0x61c28ad576315098
sw x3, 0(x2) # store 0x61c28ad576315098 in memory
flw f6, 0(x2) # load 0x61c28ad576315098 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmsub.s f18, f29, f6, f24, dyn # perform operation
fnmsub.s f18, f29, f6, f24, rdn # perform operation
fnmsub.s f18, f29, f6, f24, rmm # perform operation
fnmsub.s f18, f29, f6, f24, rne # perform operation
fnmsub.s f18, f29, f6, f24, rtz # perform operation
fnmsub.s f18, f29, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xa050a90d98355183 # load x3 with value 0xa050a90d98355183
sw x3, 0(x2) # store 0xa050a90d98355183 in memory
flw f12, 0(x2) # load 0xa050a90d98355183 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmsub.s f2, f9, f12, f8, dyn # perform operation
fnmsub.s f2, f9, f12, f8, rdn # perform operation
fnmsub.s f2, f9, f12, f8, rmm # perform operation
fnmsub.s f2, f9, f12, f8, rne # perform operation
fnmsub.s f2, f9, f12, f8, rtz # perform operation
fnmsub.s f2, f9, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x34a4e41db09ffa37 # load x3 with value 0x34a4e41db09ffa37
sw x3, 0(x2) # store 0x34a4e41db09ffa37 in memory
flw f28, 0(x2) # load 0x34a4e41db09ffa37 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f5, f24, f28, f13, dyn # perform operation
fnmsub.s f5, f24, f28, f13, rdn # perform operation
fnmsub.s f5, f24, f28, f13, rmm # perform operation
fnmsub.s f5, f24, f28, f13, rne # perform operation
fnmsub.s f5, f24, f28, f13, rtz # perform operation
fnmsub.s f5, f24, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x2bda2d4b374c35e5 # load x3 with value 0x2bda2d4b374c35e5
sw x3, 0(x2) # store 0x2bda2d4b374c35e5 in memory
flw f7, 0(x2) # load 0x2bda2d4b374c35e5 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmsub.s f18, f17, f7, f30, dyn # perform operation
fnmsub.s f18, f17, f7, f30, rdn # perform operation
fnmsub.s f18, f17, f7, f30, rmm # perform operation
fnmsub.s f18, f17, f7, f30, rne # perform operation
fnmsub.s f18, f17, f7, f30, rtz # perform operation
fnmsub.s f18, f17, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xdee6d5fc861cee1c # load x3 with value 0xdee6d5fc861cee1c
sw x3, 0(x2) # store 0xdee6d5fc861cee1c in memory
flw f23, 0(x2) # load 0xdee6d5fc861cee1c from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f11, f14, f23, f9, dyn # perform operation
fnmsub.s f11, f14, f23, f9, rdn # perform operation
fnmsub.s f11, f14, f23, f9, rmm # perform operation
fnmsub.s f11, f14, f23, f9, rne # perform operation
fnmsub.s f11, f14, f23, f9, rtz # perform operation
fnmsub.s f11, f14, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f14, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xf0731157fe62ca0d # load x3 with value 0xf0731157fe62ca0d
sw x3, 0(x2) # store 0xf0731157fe62ca0d in memory
flw f10, 0(x2) # load 0xf0731157fe62ca0d from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fnmsub.s f21, f2, f10, f17, dyn # perform operation
fnmsub.s f21, f2, f10, f17, rdn # perform operation
fnmsub.s f21, f2, f10, f17, rmm # perform operation
fnmsub.s f21, f2, f10, f17, rne # perform operation
fnmsub.s f21, f2, f10, f17, rtz # perform operation
fnmsub.s f21, f2, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x36b8b29da066b962 # load x3 with value 0x36b8b29da066b962
sw x3, 0(x2) # store 0x36b8b29da066b962 in memory
flw f26, 0(x2) # load 0x36b8b29da066b962 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmsub.s f27, f2, f26, f22, dyn # perform operation
fnmsub.s f27, f2, f26, f22, rdn # perform operation
fnmsub.s f27, f2, f26, f22, rmm # perform operation
fnmsub.s f27, f2, f26, f22, rne # perform operation
fnmsub.s f27, f2, f26, f22, rtz # perform operation
fnmsub.s f27, f2, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x903cb72dbf49a067 # load x3 with value 0x903cb72dbf49a067
sw x3, 0(x2) # store 0x903cb72dbf49a067 in memory
flw f20, 0(x2) # load 0x903cb72dbf49a067 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmsub.s f17, f7, f20, f26, dyn # perform operation
fnmsub.s f17, f7, f20, f26, rdn # perform operation
fnmsub.s f17, f7, f20, f26, rmm # perform operation
fnmsub.s f17, f7, f20, f26, rne # perform operation
fnmsub.s f17, f7, f20, f26, rtz # perform operation
fnmsub.s f17, f7, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xea6b3531e55cb9d1 # load x3 with value 0xea6b3531e55cb9d1
sw x3, 0(x2) # store 0xea6b3531e55cb9d1 in memory
flw f2, 0(x2) # load 0xea6b3531e55cb9d1 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmsub.s f9, f16, f2, f12, dyn # perform operation
fnmsub.s f9, f16, f2, f12, rdn # perform operation
fnmsub.s f9, f16, f2, f12, rmm # perform operation
fnmsub.s f9, f16, f2, f12, rne # perform operation
fnmsub.s f9, f16, f2, f12, rtz # perform operation
fnmsub.s f9, f16, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xa47385857cae11c5 # load x3 with value 0xa47385857cae11c5
sw x3, 0(x2) # store 0xa47385857cae11c5 in memory
flw f12, 0(x2) # load 0xa47385857cae11c5 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmsub.s f22, f23, f12, f18, dyn # perform operation
fnmsub.s f22, f23, f12, f18, rdn # perform operation
fnmsub.s f22, f23, f12, f18, rmm # perform operation
fnmsub.s f22, f23, f12, f18, rne # perform operation
fnmsub.s f22, f23, f12, f18, rtz # perform operation
fnmsub.s f22, f23, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f12, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x25338cbd901a1ea0 # load x3 with value 0x25338cbd901a1ea0
sw x3, 0(x2) # store 0x25338cbd901a1ea0 in memory
flw f7, 0(x2) # load 0x25338cbd901a1ea0 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmsub.s f25, f21, f7, f18, dyn # perform operation
fnmsub.s f25, f21, f7, f18, rdn # perform operation
fnmsub.s f25, f21, f7, f18, rmm # perform operation
fnmsub.s f25, f21, f7, f18, rne # perform operation
fnmsub.s f25, f21, f7, f18, rtz # perform operation
fnmsub.s f25, f21, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xb1b905599524af56 # load x3 with value 0xb1b905599524af56
sw x3, 0(x2) # store 0xb1b905599524af56 in memory
flw f20, 0(x2) # load 0xb1b905599524af56 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmsub.s f19, f5, f20, f6, dyn # perform operation
fnmsub.s f19, f5, f20, f6, rdn # perform operation
fnmsub.s f19, f5, f20, f6, rmm # perform operation
fnmsub.s f19, f5, f20, f6, rne # perform operation
fnmsub.s f19, f5, f20, f6, rtz # perform operation
fnmsub.s f19, f5, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f20, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xf17a53da0de8aa49 # load x3 with value 0xf17a53da0de8aa49
sw x3, 0(x2) # store 0xf17a53da0de8aa49 in memory
flw f2, 0(x2) # load 0xf17a53da0de8aa49 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f17, f25, f2, f9, dyn # perform operation
fnmsub.s f17, f25, f2, f9, rdn # perform operation
fnmsub.s f17, f25, f2, f9, rmm # perform operation
fnmsub.s f17, f25, f2, f9, rne # perform operation
fnmsub.s f17, f25, f2, f9, rtz # perform operation
fnmsub.s f17, f25, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f25, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xf7f557533ece3910 # load x3 with value 0xf7f557533ece3910
sw x3, 0(x2) # store 0xf7f557533ece3910 in memory
flw f19, 0(x2) # load 0xf7f557533ece3910 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f17, f24, f19, f13, dyn # perform operation
fnmsub.s f17, f24, f19, f13, rdn # perform operation
fnmsub.s f17, f24, f19, f13, rmm # perform operation
fnmsub.s f17, f24, f19, f13, rne # perform operation
fnmsub.s f17, f24, f19, f13, rtz # perform operation
fnmsub.s f17, f24, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0xc7797c66c4893f98 # load x3 with value 0xc7797c66c4893f98
sw x3, 0(x2) # store 0xc7797c66c4893f98 in memory
flw f16, 0(x2) # load 0xc7797c66c4893f98 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmsub.s f29, f31, f16, f27, dyn # perform operation
fnmsub.s f29, f31, f16, f27, rdn # perform operation
fnmsub.s f29, f31, f16, f27, rmm # perform operation
fnmsub.s f29, f31, f16, f27, rne # perform operation
fnmsub.s f29, f31, f16, f27, rtz # perform operation
fnmsub.s f29, f31, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x12c8fe58e27f6a84 # load x3 with value 0x12c8fe58e27f6a84
sw x3, 0(x2) # store 0x12c8fe58e27f6a84 in memory
flw f19, 0(x2) # load 0x12c8fe58e27f6a84 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fnmsub.s f14, f26, f19, f21, dyn # perform operation
fnmsub.s f14, f26, f19, f21, rdn # perform operation
fnmsub.s f14, f26, f19, f21, rmm # perform operation
fnmsub.s f14, f26, f19, f21, rne # perform operation
fnmsub.s f14, f26, f19, f21, rtz # perform operation
fnmsub.s f14, f26, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x3618fcb53708d350 # load x3 with value 0x3618fcb53708d350
sw x3, 0(x2) # store 0x3618fcb53708d350 in memory
flw f29, 0(x2) # load 0x3618fcb53708d350 from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmsub.s f2, f26, f29, f6, dyn # perform operation
fnmsub.s f2, f26, f29, f6, rdn # perform operation
fnmsub.s f2, f26, f29, f6, rmm # perform operation
fnmsub.s f2, f26, f29, f6, rne # perform operation
fnmsub.s f2, f26, f29, f6, rtz # perform operation
fnmsub.s f2, f26, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x9889825be6427072 # load x3 with value 0x9889825be6427072
sw x3, 0(x2) # store 0x9889825be6427072 in memory
flw f13, 0(x2) # load 0x9889825be6427072 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f5, f22, f13, f30, dyn # perform operation
fnmsub.s f5, f22, f13, f30, rdn # perform operation
fnmsub.s f5, f22, f13, f30, rmm # perform operation
fnmsub.s f5, f22, f13, f30, rne # perform operation
fnmsub.s f5, f22, f13, f30, rtz # perform operation
fnmsub.s f5, f22, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xe0584edec989e3ac # load x3 with value 0xe0584edec989e3ac
sw x3, 0(x2) # store 0xe0584edec989e3ac in memory
flw f15, 0(x2) # load 0xe0584edec989e3ac from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fnmsub.s f19, f12, f15, f21, dyn # perform operation
fnmsub.s f19, f12, f15, f21, rdn # perform operation
fnmsub.s f19, f12, f15, f21, rmm # perform operation
fnmsub.s f19, f12, f15, f21, rne # perform operation
fnmsub.s f19, f12, f15, f21, rtz # perform operation
fnmsub.s f19, f12, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x7ec7070049d4d98 # load x3 with value 0x7ec7070049d4d98
sw x3, 0(x2) # store 0x7ec7070049d4d98 in memory
flw f24, 0(x2) # load 0x7ec7070049d4d98 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmsub.s f17, f21, f24, f26, dyn # perform operation
fnmsub.s f17, f21, f24, f26, rdn # perform operation
fnmsub.s f17, f21, f24, f26, rmm # perform operation
fnmsub.s f17, f21, f24, f26, rne # perform operation
fnmsub.s f17, f21, f24, f26, rtz # perform operation
fnmsub.s f17, f21, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xd8f5811498b9d0ae # load x3 with value 0xd8f5811498b9d0ae
sw x3, 0(x2) # store 0xd8f5811498b9d0ae in memory
flw f18, 0(x2) # load 0xd8f5811498b9d0ae from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmsub.s f30, f15, f18, f28, dyn # perform operation
fnmsub.s f30, f15, f18, f28, rdn # perform operation
fnmsub.s f30, f15, f18, f28, rmm # perform operation
fnmsub.s f30, f15, f18, f28, rne # perform operation
fnmsub.s f30, f15, f18, f28, rtz # perform operation
fnmsub.s f30, f15, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f15, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0xc667f79e4b803a40 # load x3 with value 0xc667f79e4b803a40
sw x3, 0(x2) # store 0xc667f79e4b803a40 in memory
flw f27, 0(x2) # load 0xc667f79e4b803a40 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f6, f2, f27, f13, dyn # perform operation
fnmsub.s f6, f2, f27, f13, rdn # perform operation
fnmsub.s f6, f2, f27, f13, rmm # perform operation
fnmsub.s f6, f2, f27, f13, rne # perform operation
fnmsub.s f6, f2, f27, f13, rtz # perform operation
fnmsub.s f6, f2, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x8c428e83aba0275b # load x3 with value 0x8c428e83aba0275b
sw x3, 0(x2) # store 0x8c428e83aba0275b in memory
flw f22, 0(x2) # load 0x8c428e83aba0275b from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmsub.s f20, f8, f22, f18, dyn # perform operation
fnmsub.s f20, f8, f22, f18, rdn # perform operation
fnmsub.s f20, f8, f22, f18, rmm # perform operation
fnmsub.s f20, f8, f22, f18, rne # perform operation
fnmsub.s f20, f8, f22, f18, rtz # perform operation
fnmsub.s f20, f8, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x5b5a4e79a2159a8f # load x3 with value 0x5b5a4e79a2159a8f
sw x3, 0(x2) # store 0x5b5a4e79a2159a8f in memory
flw f3, 0(x2) # load 0x5b5a4e79a2159a8f from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmsub.s f12, f16, f3, f30, dyn # perform operation
fnmsub.s f12, f16, f3, f30, rdn # perform operation
fnmsub.s f12, f16, f3, f30, rmm # perform operation
fnmsub.s f12, f16, f3, f30, rne # perform operation
fnmsub.s f12, f16, f3, f30, rtz # perform operation
fnmsub.s f12, f16, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x964e605a589bf5cd # load x3 with value 0x964e605a589bf5cd
sw x3, 0(x2) # store 0x964e605a589bf5cd in memory
flw f22, 0(x2) # load 0x964e605a589bf5cd from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f12, f30, f22, f7, dyn # perform operation
fnmsub.s f12, f30, f22, f7, rdn # perform operation
fnmsub.s f12, f30, f22, f7, rmm # perform operation
fnmsub.s f12, f30, f22, f7, rne # perform operation
fnmsub.s f12, f30, f22, f7, rtz # perform operation
fnmsub.s f12, f30, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f22, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xff6f45ef586e5662 # load x3 with value 0xff6f45ef586e5662
sw x3, 0(x2) # store 0xff6f45ef586e5662 in memory
flw f16, 0(x2) # load 0xff6f45ef586e5662 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmsub.s f19, f13, f16, f12, dyn # perform operation
fnmsub.s f19, f13, f16, f12, rdn # perform operation
fnmsub.s f19, f13, f16, f12, rmm # perform operation
fnmsub.s f19, f13, f16, f12, rne # perform operation
fnmsub.s f19, f13, f16, f12, rtz # perform operation
fnmsub.s f19, f13, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x86534f309cc3a75c # load x3 with value 0x86534f309cc3a75c
sw x3, 0(x2) # store 0x86534f309cc3a75c in memory
flw f20, 0(x2) # load 0x86534f309cc3a75c from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fnmsub.s f13, f25, f20, f17, dyn # perform operation
fnmsub.s f13, f25, f20, f17, rdn # perform operation
fnmsub.s f13, f25, f20, f17, rmm # perform operation
fnmsub.s f13, f25, f20, f17, rne # perform operation
fnmsub.s f13, f25, f20, f17, rtz # perform operation
fnmsub.s f13, f25, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f25, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x240b7fe1ced8227a # load x3 with value 0x240b7fe1ced8227a
sw x3, 0(x2) # store 0x240b7fe1ced8227a in memory
flw f17, 0(x2) # load 0x240b7fe1ced8227a from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmsub.s f28, f25, f17, f1, dyn # perform operation
fnmsub.s f28, f25, f17, f1, rdn # perform operation
fnmsub.s f28, f25, f17, f1, rmm # perform operation
fnmsub.s f28, f25, f17, f1, rne # perform operation
fnmsub.s f28, f25, f17, f1, rtz # perform operation
fnmsub.s f28, f25, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x92b6217c7dd9f513 # load x3 with value 0x92b6217c7dd9f513
sw x3, 0(x2) # store 0x92b6217c7dd9f513 in memory
flw f11, 0(x2) # load 0x92b6217c7dd9f513 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmsub.s f17, f19, f11, f1, dyn # perform operation
fnmsub.s f17, f19, f11, f1, rdn # perform operation
fnmsub.s f17, f19, f11, f1, rmm # perform operation
fnmsub.s f17, f19, f11, f1, rne # perform operation
fnmsub.s f17, f19, f11, f1, rtz # perform operation
fnmsub.s f17, f19, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x34036e487d2f7e00 # load x3 with value 0x34036e487d2f7e00
sw x3, 0(x2) # store 0x34036e487d2f7e00 in memory
flw f30, 0(x2) # load 0x34036e487d2f7e00 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmsub.s f12, f2, f30, f13, dyn # perform operation
fnmsub.s f12, f2, f30, f13, rdn # perform operation
fnmsub.s f12, f2, f30, f13, rmm # perform operation
fnmsub.s f12, f2, f30, f13, rne # perform operation
fnmsub.s f12, f2, f30, f13, rtz # perform operation
fnmsub.s f12, f2, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x9113f62b0c1b39a7 # load x3 with value 0x9113f62b0c1b39a7
sw x3, 0(x2) # store 0x9113f62b0c1b39a7 in memory
flw f12, 0(x2) # load 0x9113f62b0c1b39a7 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmsub.s f2, f19, f12, f6, dyn # perform operation
fnmsub.s f2, f19, f12, f6, rdn # perform operation
fnmsub.s f2, f19, f12, f6, rmm # perform operation
fnmsub.s f2, f19, f12, f6, rne # perform operation
fnmsub.s f2, f19, f12, f6, rtz # perform operation
fnmsub.s f2, f19, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f12, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x2dbb981299bdca43 # load x3 with value 0x2dbb981299bdca43
sw x3, 0(x2) # store 0x2dbb981299bdca43 in memory
flw f13, 0(x2) # load 0x2dbb981299bdca43 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f8, f18, f13, f3, dyn # perform operation
fnmsub.s f8, f18, f13, f3, rdn # perform operation
fnmsub.s f8, f18, f13, f3, rmm # perform operation
fnmsub.s f8, f18, f13, f3, rne # perform operation
fnmsub.s f8, f18, f13, f3, rtz # perform operation
fnmsub.s f8, f18, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f18, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x641b08f3a5e936a0 # load x3 with value 0x641b08f3a5e936a0
sw x3, 0(x2) # store 0x641b08f3a5e936a0 in memory
flw f26, 0(x2) # load 0x641b08f3a5e936a0 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f24, f15, f26, f9, dyn # perform operation
fnmsub.s f24, f15, f26, f9, rdn # perform operation
fnmsub.s f24, f15, f26, f9, rmm # perform operation
fnmsub.s f24, f15, f26, f9, rne # perform operation
fnmsub.s f24, f15, f26, f9, rtz # perform operation
fnmsub.s f24, f15, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xc467aefb3b0211e2 # load x3 with value 0xc467aefb3b0211e2
sw x3, 0(x2) # store 0xc467aefb3b0211e2 in memory
flw f30, 0(x2) # load 0xc467aefb3b0211e2 from memory into f30
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f13, f5, f30, f25, dyn # perform operation
fnmsub.s f13, f5, f30, f25, rdn # perform operation
fnmsub.s f13, f5, f30, f25, rmm # perform operation
fnmsub.s f13, f5, f30, f25, rne # perform operation
fnmsub.s f13, f5, f30, f25, rtz # perform operation
fnmsub.s f13, f5, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f5, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f5, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f5, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f5, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f5, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x67380b2931af145c # load x3 with value 0x67380b2931af145c
sw x3, 0(x2) # store 0x67380b2931af145c in memory
flw f20, 0(x2) # load 0x67380b2931af145c from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmsub.s f7, f22, f20, f29, dyn # perform operation
fnmsub.s f7, f22, f20, f29, rdn # perform operation
fnmsub.s f7, f22, f20, f29, rmm # perform operation
fnmsub.s f7, f22, f20, f29, rne # perform operation
fnmsub.s f7, f22, f20, f29, rtz # perform operation
fnmsub.s f7, f22, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0xa133a73b2474ca24 # load x3 with value 0xa133a73b2474ca24
sw x3, 0(x2) # store 0xa133a73b2474ca24 in memory
flw f19, 0(x2) # load 0xa133a73b2474ca24 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmsub.s f12, f10, f19, f29, dyn # perform operation
fnmsub.s f12, f10, f19, f29, rdn # perform operation
fnmsub.s f12, f10, f19, f29, rmm # perform operation
fnmsub.s f12, f10, f19, f29, rne # perform operation
fnmsub.s f12, f10, f19, f29, rtz # perform operation
fnmsub.s f12, f10, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xdd953bc9e93fa748 # load x3 with value 0xdd953bc9e93fa748
sw x3, 0(x2) # store 0xdd953bc9e93fa748 in memory
flw f21, 0(x2) # load 0xdd953bc9e93fa748 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f8, f29, f21, f13, dyn # perform operation
fnmsub.s f8, f29, f21, f13, rdn # perform operation
fnmsub.s f8, f29, f21, f13, rmm # perform operation
fnmsub.s f8, f29, f21, f13, rne # perform operation
fnmsub.s f8, f29, f21, f13, rtz # perform operation
fnmsub.s f8, f29, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x77f8acdedca5f9bc # load x3 with value 0x77f8acdedca5f9bc
sw x3, 0(x2) # store 0x77f8acdedca5f9bc in memory
flw f30, 0(x2) # load 0x77f8acdedca5f9bc from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmsub.s f16, f19, f30, f14, dyn # perform operation
fnmsub.s f16, f19, f30, f14, rdn # perform operation
fnmsub.s f16, f19, f30, f14, rmm # perform operation
fnmsub.s f16, f19, f30, f14, rne # perform operation
fnmsub.s f16, f19, f30, f14, rtz # perform operation
fnmsub.s f16, f19, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xbee591fdffa36fb # load x3 with value 0xbee591fdffa36fb
sw x3, 0(x2) # store 0xbee591fdffa36fb in memory
flw f7, 0(x2) # load 0xbee591fdffa36fb from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f26, f12, f7, f24, dyn # perform operation
fnmsub.s f26, f12, f7, f24, rdn # perform operation
fnmsub.s f26, f12, f7, f24, rmm # perform operation
fnmsub.s f26, f12, f7, f24, rne # perform operation
fnmsub.s f26, f12, f7, f24, rtz # perform operation
fnmsub.s f26, f12, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xf413bb1bf8382701 # load x3 with value 0xf413bb1bf8382701
sw x3, 0(x2) # store 0xf413bb1bf8382701 in memory
flw f14, 0(x2) # load 0xf413bb1bf8382701 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fnmsub.s f20, f15, f14, f27, dyn # perform operation
fnmsub.s f20, f15, f14, f27, rdn # perform operation
fnmsub.s f20, f15, f14, f27, rmm # perform operation
fnmsub.s f20, f15, f14, f27, rne # perform operation
fnmsub.s f20, f15, f14, f27, rtz # perform operation
fnmsub.s f20, f15, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x1e3d0f3539195ca # load x3 with value 0x1e3d0f3539195ca
sw x3, 0(x2) # store 0x1e3d0f3539195ca in memory
flw f11, 0(x2) # load 0x1e3d0f3539195ca from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmsub.s f3, f7, f11, f1, dyn # perform operation
fnmsub.s f3, f7, f11, f1, rdn # perform operation
fnmsub.s f3, f7, f11, f1, rmm # perform operation
fnmsub.s f3, f7, f11, f1, rne # perform operation
fnmsub.s f3, f7, f11, f1, rtz # perform operation
fnmsub.s f3, f7, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x38d3261f61132961 # load x3 with value 0x38d3261f61132961
sw x3, 0(x2) # store 0x38d3261f61132961 in memory
flw f20, 0(x2) # load 0x38d3261f61132961 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f8, f22, f20, f16, dyn # perform operation
fnmsub.s f8, f22, f20, f16, rdn # perform operation
fnmsub.s f8, f22, f20, f16, rmm # perform operation
fnmsub.s f8, f22, f20, f16, rne # perform operation
fnmsub.s f8, f22, f20, f16, rtz # perform operation
fnmsub.s f8, f22, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f22, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f22, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f22, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f22, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f22, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x2e1a049c54b2534d # load x3 with value 0x2e1a049c54b2534d
sw x3, 0(x2) # store 0x2e1a049c54b2534d in memory
flw f10, 0(x2) # load 0x2e1a049c54b2534d from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f14, f31, f10, f9, dyn # perform operation
fnmsub.s f14, f31, f10, f9, rdn # perform operation
fnmsub.s f14, f31, f10, f9, rmm # perform operation
fnmsub.s f14, f31, f10, f9, rne # perform operation
fnmsub.s f14, f31, f10, f9, rtz # perform operation
fnmsub.s f14, f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f31, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x8984db548c502744 # load x3 with value 0x8984db548c502744
sw x3, 0(x2) # store 0x8984db548c502744 in memory
flw f11, 0(x2) # load 0x8984db548c502744 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fnmsub.s f5, f8, f11, f7, dyn # perform operation
fnmsub.s f5, f8, f11, f7, rdn # perform operation
fnmsub.s f5, f8, f11, f7, rmm # perform operation
fnmsub.s f5, f8, f11, f7, rne # perform operation
fnmsub.s f5, f8, f11, f7, rtz # perform operation
fnmsub.s f5, f8, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xed07a63c405dbc0d # load x3 with value 0xed07a63c405dbc0d
sw x3, 0(x2) # store 0xed07a63c405dbc0d in memory
flw f21, 0(x2) # load 0xed07a63c405dbc0d from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmsub.s f3, f1, f21, f24, dyn # perform operation
fnmsub.s f3, f1, f21, f24, rdn # perform operation
fnmsub.s f3, f1, f21, f24, rmm # perform operation
fnmsub.s f3, f1, f21, f24, rne # perform operation
fnmsub.s f3, f1, f21, f24, rtz # perform operation
fnmsub.s f3, f1, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xf6d9f5cc286ffc0c # load x3 with value 0xf6d9f5cc286ffc0c
sw x3, 0(x2) # store 0xf6d9f5cc286ffc0c in memory
flw f10, 0(x2) # load 0xf6d9f5cc286ffc0c from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f29, f28, f10, f9, dyn # perform operation
fnmsub.s f29, f28, f10, f9, rdn # perform operation
fnmsub.s f29, f28, f10, f9, rmm # perform operation
fnmsub.s f29, f28, f10, f9, rne # perform operation
fnmsub.s f29, f28, f10, f9, rtz # perform operation
fnmsub.s f29, f28, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x59f975f9aade4912 # load x3 with value 0x59f975f9aade4912
sw x3, 0(x2) # store 0x59f975f9aade4912 in memory
flw f24, 0(x2) # load 0x59f975f9aade4912 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fnmsub.s f14, f15, f24, f12, dyn # perform operation
fnmsub.s f14, f15, f24, f12, rdn # perform operation
fnmsub.s f14, f15, f24, f12, rmm # perform operation
fnmsub.s f14, f15, f24, f12, rne # perform operation
fnmsub.s f14, f15, f24, f12, rtz # perform operation
fnmsub.s f14, f15, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f15, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f15, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f15, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f15, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f15, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x83444e76840797c8 # load x3 with value 0x83444e76840797c8
sw x3, 0(x2) # store 0x83444e76840797c8 in memory
flw f14, 0(x2) # load 0x83444e76840797c8 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fnmsub.s f20, f13, f14, f18, dyn # perform operation
fnmsub.s f20, f13, f14, f18, rdn # perform operation
fnmsub.s f20, f13, f14, f18, rmm # perform operation
fnmsub.s f20, f13, f14, f18, rne # perform operation
fnmsub.s f20, f13, f14, f18, rtz # perform operation
fnmsub.s f20, f13, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x94f8c8211b951100 # load x3 with value 0x94f8c8211b951100
sw x3, 0(x2) # store 0x94f8c8211b951100 in memory
flw f15, 0(x2) # load 0x94f8c8211b951100 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f1, f22, f15, f23, dyn # perform operation
fnmsub.s f1, f22, f15, f23, rdn # perform operation
fnmsub.s f1, f22, f15, f23, rmm # perform operation
fnmsub.s f1, f22, f15, f23, rne # perform operation
fnmsub.s f1, f22, f15, f23, rtz # perform operation
fnmsub.s f1, f22, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f22, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f22, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f22, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f22, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f22, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x64ca12e592668a81 # load x3 with value 0x64ca12e592668a81
sw x3, 0(x2) # store 0x64ca12e592668a81 in memory
flw f23, 0(x2) # load 0x64ca12e592668a81 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmsub.s f17, f20, f23, f11, dyn # perform operation
fnmsub.s f17, f20, f23, f11, rdn # perform operation
fnmsub.s f17, f20, f23, f11, rmm # perform operation
fnmsub.s f17, f20, f23, f11, rne # perform operation
fnmsub.s f17, f20, f23, f11, rtz # perform operation
fnmsub.s f17, f20, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xd98f8f1ee14c2826 # load x3 with value 0xd98f8f1ee14c2826
sw x3, 0(x2) # store 0xd98f8f1ee14c2826 in memory
flw f19, 0(x2) # load 0xd98f8f1ee14c2826 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmsub.s f20, f22, f19, f21, dyn # perform operation
fnmsub.s f20, f22, f19, f21, rdn # perform operation
fnmsub.s f20, f22, f19, f21, rmm # perform operation
fnmsub.s f20, f22, f19, f21, rne # perform operation
fnmsub.s f20, f22, f19, f21, rtz # perform operation
fnmsub.s f20, f22, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xf06bc20cf1345304 # load x3 with value 0xf06bc20cf1345304
sw x3, 0(x2) # store 0xf06bc20cf1345304 in memory
flw f3, 0(x2) # load 0xf06bc20cf1345304 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fnmsub.s f20, f25, f3, f11, dyn # perform operation
fnmsub.s f20, f25, f3, f11, rdn # perform operation
fnmsub.s f20, f25, f3, f11, rmm # perform operation
fnmsub.s f20, f25, f3, f11, rne # perform operation
fnmsub.s f20, f25, f3, f11, rtz # perform operation
fnmsub.s f20, f25, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xa778bca52ceddee1 # load x3 with value 0xa778bca52ceddee1
sw x3, 0(x2) # store 0xa778bca52ceddee1 in memory
flw f13, 0(x2) # load 0xa778bca52ceddee1 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fnmsub.s f1, f22, f13, f17, dyn # perform operation
fnmsub.s f1, f22, f13, f17, rdn # perform operation
fnmsub.s f1, f22, f13, f17, rmm # perform operation
fnmsub.s f1, f22, f13, f17, rne # perform operation
fnmsub.s f1, f22, f13, f17, rtz # perform operation
fnmsub.s f1, f22, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f22, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x3d0634fbac55bf7b # load x3 with value 0x3d0634fbac55bf7b
sw x3, 0(x2) # store 0x3d0634fbac55bf7b in memory
flw f22, 0(x2) # load 0x3d0634fbac55bf7b from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmsub.s f16, f17, f22, f20, dyn # perform operation
fnmsub.s f16, f17, f22, f20, rdn # perform operation
fnmsub.s f16, f17, f22, f20, rmm # perform operation
fnmsub.s f16, f17, f22, f20, rne # perform operation
fnmsub.s f16, f17, f22, f20, rtz # perform operation
fnmsub.s f16, f17, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x1ec108c352134907 # load x3 with value 0x1ec108c352134907
sw x3, 0(x2) # store 0x1ec108c352134907 in memory
flw f21, 0(x2) # load 0x1ec108c352134907 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmsub.s f16, f20, f21, f24, dyn # perform operation
fnmsub.s f16, f20, f21, f24, rdn # perform operation
fnmsub.s f16, f20, f21, f24, rmm # perform operation
fnmsub.s f16, f20, f21, f24, rne # perform operation
fnmsub.s f16, f20, f21, f24, rtz # perform operation
fnmsub.s f16, f20, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x406d3d61aa6a888 # load x3 with value 0x406d3d61aa6a888
sw x3, 0(x2) # store 0x406d3d61aa6a888 in memory
flw f18, 0(x2) # load 0x406d3d61aa6a888 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmsub.s f17, f3, f18, f13, dyn # perform operation
fnmsub.s f17, f3, f18, f13, rdn # perform operation
fnmsub.s f17, f3, f18, f13, rmm # perform operation
fnmsub.s f17, f3, f18, f13, rne # perform operation
fnmsub.s f17, f3, f18, f13, rtz # perform operation
fnmsub.s f17, f3, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xe10277f5dd2ad401 # load x3 with value 0xe10277f5dd2ad401
sw x3, 0(x2) # store 0xe10277f5dd2ad401 in memory
flw f19, 0(x2) # load 0xe10277f5dd2ad401 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmsub.s f15, f26, f19, f14, dyn # perform operation
fnmsub.s f15, f26, f19, f14, rdn # perform operation
fnmsub.s f15, f26, f19, f14, rmm # perform operation
fnmsub.s f15, f26, f19, f14, rne # perform operation
fnmsub.s f15, f26, f19, f14, rtz # perform operation
fnmsub.s f15, f26, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xfd71dcc20601f0e8 # load x3 with value 0xfd71dcc20601f0e8
sw x3, 0(x2) # store 0xfd71dcc20601f0e8 in memory
flw f14, 0(x2) # load 0xfd71dcc20601f0e8 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmsub.s f26, f20, f14, f1, dyn # perform operation
fnmsub.s f26, f20, f14, f1, rdn # perform operation
fnmsub.s f26, f20, f14, f1, rmm # perform operation
fnmsub.s f26, f20, f14, f1, rne # perform operation
fnmsub.s f26, f20, f14, f1, rtz # perform operation
fnmsub.s f26, f20, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x74999e58b4f7c3cf # load x3 with value 0x74999e58b4f7c3cf
sw x3, 0(x2) # store 0x74999e58b4f7c3cf in memory
flw f18, 0(x2) # load 0x74999e58b4f7c3cf from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f5, f6, f18, f22, dyn # perform operation
fnmsub.s f5, f6, f18, f22, rdn # perform operation
fnmsub.s f5, f6, f18, f22, rmm # perform operation
fnmsub.s f5, f6, f18, f22, rne # perform operation
fnmsub.s f5, f6, f18, f22, rtz # perform operation
fnmsub.s f5, f6, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xea98729fc945e968 # load x3 with value 0xea98729fc945e968
sw x3, 0(x2) # store 0xea98729fc945e968 in memory
flw f13, 0(x2) # load 0xea98729fc945e968 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmsub.s f31, f29, f13, f19, dyn # perform operation
fnmsub.s f31, f29, f13, f19, rdn # perform operation
fnmsub.s f31, f29, f13, f19, rmm # perform operation
fnmsub.s f31, f29, f13, f19, rne # perform operation
fnmsub.s f31, f29, f13, f19, rtz # perform operation
fnmsub.s f31, f29, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x5586690efab9847c # load x3 with value 0x5586690efab9847c
sw x3, 0(x2) # store 0x5586690efab9847c in memory
flw f13, 0(x2) # load 0x5586690efab9847c from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmsub.s f26, f27, f13, f16, dyn # perform operation
fnmsub.s f26, f27, f13, f16, rdn # perform operation
fnmsub.s f26, f27, f13, f16, rmm # perform operation
fnmsub.s f26, f27, f13, f16, rne # perform operation
fnmsub.s f26, f27, f13, f16, rtz # perform operation
fnmsub.s f26, f27, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f13, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xb3d9ce80fb988888 # load x3 with value 0xb3d9ce80fb988888
sw x3, 0(x2) # store 0xb3d9ce80fb988888 in memory
flw f20, 0(x2) # load 0xb3d9ce80fb988888 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmsub.s f16, f9, f20, f7, dyn # perform operation
fnmsub.s f16, f9, f20, f7, rdn # perform operation
fnmsub.s f16, f9, f20, f7, rmm # perform operation
fnmsub.s f16, f9, f20, f7, rne # perform operation
fnmsub.s f16, f9, f20, f7, rtz # perform operation
fnmsub.s f16, f9, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f9, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x370016625df80ccb # load x3 with value 0x370016625df80ccb
sw x3, 0(x2) # store 0x370016625df80ccb in memory
flw f21, 0(x2) # load 0x370016625df80ccb from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fnmsub.s f22, f9, f21, f30, dyn # perform operation
fnmsub.s f22, f9, f21, f30, rdn # perform operation
fnmsub.s f22, f9, f21, f30, rmm # perform operation
fnmsub.s f22, f9, f21, f30, rne # perform operation
fnmsub.s f22, f9, f21, f30, rtz # perform operation
fnmsub.s f22, f9, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xbcb2a36f7795b47f # load x3 with value 0xbcb2a36f7795b47f
sw x3, 0(x2) # store 0xbcb2a36f7795b47f in memory
flw f8, 0(x2) # load 0xbcb2a36f7795b47f from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmsub.s f29, f23, f8, f19, dyn # perform operation
fnmsub.s f29, f23, f8, f19, rdn # perform operation
fnmsub.s f29, f23, f8, f19, rmm # perform operation
fnmsub.s f29, f23, f8, f19, rne # perform operation
fnmsub.s f29, f23, f8, f19, rtz # perform operation
fnmsub.s f29, f23, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x886c6566194201a9 # load x3 with value 0x886c6566194201a9
sw x3, 0(x2) # store 0x886c6566194201a9 in memory
flw f24, 0(x2) # load 0x886c6566194201a9 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmsub.s f26, f30, f24, f16, dyn # perform operation
fnmsub.s f26, f30, f24, f16, rdn # perform operation
fnmsub.s f26, f30, f24, f16, rmm # perform operation
fnmsub.s f26, f30, f24, f16, rne # perform operation
fnmsub.s f26, f30, f24, f16, rtz # perform operation
fnmsub.s f26, f30, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x50c0c9ee96b96822 # load x3 with value 0x50c0c9ee96b96822
sw x3, 0(x2) # store 0x50c0c9ee96b96822 in memory
flw f8, 0(x2) # load 0x50c0c9ee96b96822 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f19, f14, f8, f23, dyn # perform operation
fnmsub.s f19, f14, f8, f23, rdn # perform operation
fnmsub.s f19, f14, f8, f23, rmm # perform operation
fnmsub.s f19, f14, f8, f23, rne # perform operation
fnmsub.s f19, f14, f8, f23, rtz # perform operation
fnmsub.s f19, f14, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x692ec0b1332eb0ff # load x3 with value 0x692ec0b1332eb0ff
sw x3, 0(x2) # store 0x692ec0b1332eb0ff in memory
flw f22, 0(x2) # load 0x692ec0b1332eb0ff from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmsub.s f8, f17, f22, f15, dyn # perform operation
fnmsub.s f8, f17, f22, f15, rdn # perform operation
fnmsub.s f8, f17, f22, f15, rmm # perform operation
fnmsub.s f8, f17, f22, f15, rne # perform operation
fnmsub.s f8, f17, f22, f15, rtz # perform operation
fnmsub.s f8, f17, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xb634e95b0549e63 # load x3 with value 0xb634e95b0549e63
sw x3, 0(x2) # store 0xb634e95b0549e63 in memory
flw f5, 0(x2) # load 0xb634e95b0549e63 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmsub.s f31, f13, f5, f20, dyn # perform operation
fnmsub.s f31, f13, f5, f20, rdn # perform operation
fnmsub.s f31, f13, f5, f20, rmm # perform operation
fnmsub.s f31, f13, f5, f20, rne # perform operation
fnmsub.s f31, f13, f5, f20, rtz # perform operation
fnmsub.s f31, f13, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xb7bb0af310d8eae # load x3 with value 0xb7bb0af310d8eae
sw x3, 0(x2) # store 0xb7bb0af310d8eae in memory
flw f25, 0(x2) # load 0xb7bb0af310d8eae from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmsub.s f1, f8, f25, f11, dyn # perform operation
fnmsub.s f1, f8, f25, f11, rdn # perform operation
fnmsub.s f1, f8, f25, f11, rmm # perform operation
fnmsub.s f1, f8, f25, f11, rne # perform operation
fnmsub.s f1, f8, f25, f11, rtz # perform operation
fnmsub.s f1, f8, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f8, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f8, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x307b432333ff1f0d # load x3 with value 0x307b432333ff1f0d
sw x3, 0(x2) # store 0x307b432333ff1f0d in memory
flw f17, 0(x2) # load 0x307b432333ff1f0d from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f6, f1, f17, f13, dyn # perform operation
fnmsub.s f6, f1, f17, f13, rdn # perform operation
fnmsub.s f6, f1, f17, f13, rmm # perform operation
fnmsub.s f6, f1, f17, f13, rne # perform operation
fnmsub.s f6, f1, f17, f13, rtz # perform operation
fnmsub.s f6, f1, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x8837e7c1ce0b6171 # load x3 with value 0x8837e7c1ce0b6171
sw x3, 0(x2) # store 0x8837e7c1ce0b6171 in memory
flw f31, 0(x2) # load 0x8837e7c1ce0b6171 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f6, f19, f31, f28, dyn # perform operation
fnmsub.s f6, f19, f31, f28, rdn # perform operation
fnmsub.s f6, f19, f31, f28, rmm # perform operation
fnmsub.s f6, f19, f31, f28, rne # perform operation
fnmsub.s f6, f19, f31, f28, rtz # perform operation
fnmsub.s f6, f19, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f19, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x34a47fddb1a7f64a # load x3 with value 0x34a47fddb1a7f64a
sw x3, 0(x2) # store 0x34a47fddb1a7f64a in memory
flw f3, 0(x2) # load 0x34a47fddb1a7f64a from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fnmsub.s f21, f30, f3, f9, dyn # perform operation
fnmsub.s f21, f30, f3, f9, rdn # perform operation
fnmsub.s f21, f30, f3, f9, rmm # perform operation
fnmsub.s f21, f30, f3, f9, rne # perform operation
fnmsub.s f21, f30, f3, f9, rtz # perform operation
fnmsub.s f21, f30, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x3f9705d5bbd1e30a # load x3 with value 0x3f9705d5bbd1e30a
sw x3, 0(x2) # store 0x3f9705d5bbd1e30a in memory
flw f9, 0(x2) # load 0x3f9705d5bbd1e30a from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmsub.s f26, f21, f9, f29, dyn # perform operation
fnmsub.s f26, f21, f9, f29, rdn # perform operation
fnmsub.s f26, f21, f9, f29, rmm # perform operation
fnmsub.s f26, f21, f9, f29, rne # perform operation
fnmsub.s f26, f21, f9, f29, rtz # perform operation
fnmsub.s f26, f21, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x82299a305e1b99db # load x3 with value 0x82299a305e1b99db
sw x3, 0(x2) # store 0x82299a305e1b99db in memory
flw f15, 0(x2) # load 0x82299a305e1b99db from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fnmsub.s f31, f8, f15, f23, dyn # perform operation
fnmsub.s f31, f8, f15, f23, rdn # perform operation
fnmsub.s f31, f8, f15, f23, rmm # perform operation
fnmsub.s f31, f8, f15, f23, rne # perform operation
fnmsub.s f31, f8, f15, f23, rtz # perform operation
fnmsub.s f31, f8, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f8, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f8, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f8, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f8, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f8, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xac7984e65158f70 # load x3 with value 0xac7984e65158f70
sw x3, 0(x2) # store 0xac7984e65158f70 in memory
flw f15, 0(x2) # load 0xac7984e65158f70 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fnmsub.s f22, f13, f15, f30, dyn # perform operation
fnmsub.s f22, f13, f15, f30, rdn # perform operation
fnmsub.s f22, f13, f15, f30, rmm # perform operation
fnmsub.s f22, f13, f15, f30, rne # perform operation
fnmsub.s f22, f13, f15, f30, rtz # perform operation
fnmsub.s f22, f13, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xe65bb547ea009897 # load x3 with value 0xe65bb547ea009897
sw x3, 0(x2) # store 0xe65bb547ea009897 in memory
flw f12, 0(x2) # load 0xe65bb547ea009897 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmsub.s f9, f1, f12, f19, dyn # perform operation
fnmsub.s f9, f1, f12, f19, rdn # perform operation
fnmsub.s f9, f1, f12, f19, rmm # perform operation
fnmsub.s f9, f1, f12, f19, rne # perform operation
fnmsub.s f9, f1, f12, f19, rtz # perform operation
fnmsub.s f9, f1, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x76c28d16ea355d37 # load x3 with value 0x76c28d16ea355d37
sw x3, 0(x2) # store 0x76c28d16ea355d37 in memory
flw f16, 0(x2) # load 0x76c28d16ea355d37 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fnmsub.s f25, f11, f16, f5, dyn # perform operation
fnmsub.s f25, f11, f16, f5, rdn # perform operation
fnmsub.s f25, f11, f16, f5, rmm # perform operation
fnmsub.s f25, f11, f16, f5, rne # perform operation
fnmsub.s f25, f11, f16, f5, rtz # perform operation
fnmsub.s f25, f11, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x53ebd1e5a5002545 # load x3 with value 0x53ebd1e5a5002545
sw x3, 0(x2) # store 0x53ebd1e5a5002545 in memory
flw f23, 0(x2) # load 0x53ebd1e5a5002545 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f11, f25, f23, f14, dyn # perform operation
fnmsub.s f11, f25, f23, f14, rdn # perform operation
fnmsub.s f11, f25, f23, f14, rmm # perform operation
fnmsub.s f11, f25, f23, f14, rne # perform operation
fnmsub.s f11, f25, f23, f14, rtz # perform operation
fnmsub.s f11, f25, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xe2de2ac07fbc6958 # load x3 with value 0xe2de2ac07fbc6958
sw x3, 0(x2) # store 0xe2de2ac07fbc6958 in memory
flw f3, 0(x2) # load 0xe2de2ac07fbc6958 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmsub.s f26, f21, f3, f20, dyn # perform operation
fnmsub.s f26, f21, f3, f20, rdn # perform operation
fnmsub.s f26, f21, f3, f20, rmm # perform operation
fnmsub.s f26, f21, f3, f20, rne # perform operation
fnmsub.s f26, f21, f3, f20, rtz # perform operation
fnmsub.s f26, f21, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x86d43a00bc9d4125 # load x3 with value 0x86d43a00bc9d4125
sw x3, 0(x2) # store 0x86d43a00bc9d4125 in memory
flw f24, 0(x2) # load 0x86d43a00bc9d4125 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmsub.s f2, f8, f24, f20, dyn # perform operation
fnmsub.s f2, f8, f24, f20, rdn # perform operation
fnmsub.s f2, f8, f24, f20, rmm # perform operation
fnmsub.s f2, f8, f24, f20, rne # perform operation
fnmsub.s f2, f8, f24, f20, rtz # perform operation
fnmsub.s f2, f8, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x3520e1acf88b412f # load x3 with value 0x3520e1acf88b412f
sw x3, 0(x2) # store 0x3520e1acf88b412f in memory
flw f17, 0(x2) # load 0x3520e1acf88b412f from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmsub.s f26, f28, f17, f2, dyn # perform operation
fnmsub.s f26, f28, f17, f2, rdn # perform operation
fnmsub.s f26, f28, f17, f2, rmm # perform operation
fnmsub.s f26, f28, f17, f2, rne # perform operation
fnmsub.s f26, f28, f17, f2, rtz # perform operation
fnmsub.s f26, f28, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x62864a2b91ee8054 # load x3 with value 0x62864a2b91ee8054
sw x3, 0(x2) # store 0x62864a2b91ee8054 in memory
flw f28, 0(x2) # load 0x62864a2b91ee8054 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fnmsub.s f22, f16, f28, f24, dyn # perform operation
fnmsub.s f22, f16, f28, f24, rdn # perform operation
fnmsub.s f22, f16, f28, f24, rmm # perform operation
fnmsub.s f22, f16, f28, f24, rne # perform operation
fnmsub.s f22, f16, f28, f24, rtz # perform operation
fnmsub.s f22, f16, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x9131a2451c8ca4d1 # load x3 with value 0x9131a2451c8ca4d1
sw x3, 0(x2) # store 0x9131a2451c8ca4d1 in memory
flw f13, 0(x2) # load 0x9131a2451c8ca4d1 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f7, f28, f13, f20, dyn # perform operation
fnmsub.s f7, f28, f13, f20, rdn # perform operation
fnmsub.s f7, f28, f13, f20, rmm # perform operation
fnmsub.s f7, f28, f13, f20, rne # perform operation
fnmsub.s f7, f28, f13, f20, rtz # perform operation
fnmsub.s f7, f28, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xcb2a62ab4db9085a # load x3 with value 0xcb2a62ab4db9085a
sw x3, 0(x2) # store 0xcb2a62ab4db9085a in memory
flw f27, 0(x2) # load 0xcb2a62ab4db9085a from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmsub.s f22, f9, f27, f7, dyn # perform operation
fnmsub.s f22, f9, f27, f7, rdn # perform operation
fnmsub.s f22, f9, f27, f7, rmm # perform operation
fnmsub.s f22, f9, f27, f7, rne # perform operation
fnmsub.s f22, f9, f27, f7, rtz # perform operation
fnmsub.s f22, f9, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x90278ec30ae130cc # load x3 with value 0x90278ec30ae130cc
sw x3, 0(x2) # store 0x90278ec30ae130cc in memory
flw f25, 0(x2) # load 0x90278ec30ae130cc from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmsub.s f27, f21, f25, f9, dyn # perform operation
fnmsub.s f27, f21, f25, f9, rdn # perform operation
fnmsub.s f27, f21, f25, f9, rmm # perform operation
fnmsub.s f27, f21, f25, f9, rne # perform operation
fnmsub.s f27, f21, f25, f9, rtz # perform operation
fnmsub.s f27, f21, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x83f8d5e0482073fe # load x3 with value 0x83f8d5e0482073fe
sw x3, 0(x2) # store 0x83f8d5e0482073fe in memory
flw f20, 0(x2) # load 0x83f8d5e0482073fe from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f25, f19, f20, f15, dyn # perform operation
fnmsub.s f25, f19, f20, f15, rdn # perform operation
fnmsub.s f25, f19, f20, f15, rmm # perform operation
fnmsub.s f25, f19, f20, f15, rne # perform operation
fnmsub.s f25, f19, f20, f15, rtz # perform operation
fnmsub.s f25, f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f19, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xca356b9b273b85b1 # load x3 with value 0xca356b9b273b85b1
sw x3, 0(x2) # store 0xca356b9b273b85b1 in memory
flw f25, 0(x2) # load 0xca356b9b273b85b1 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmsub.s f13, f28, f25, f1, dyn # perform operation
fnmsub.s f13, f28, f25, f1, rdn # perform operation
fnmsub.s f13, f28, f25, f1, rmm # perform operation
fnmsub.s f13, f28, f25, f1, rne # perform operation
fnmsub.s f13, f28, f25, f1, rtz # perform operation
fnmsub.s f13, f28, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x66b85f43341487 # load x3 with value 0x66b85f43341487
sw x3, 0(x2) # store 0x66b85f43341487 in memory
flw f3, 0(x2) # load 0x66b85f43341487 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f1, f6, f3, f18, dyn # perform operation
fnmsub.s f1, f6, f3, f18, rdn # perform operation
fnmsub.s f1, f6, f3, f18, rmm # perform operation
fnmsub.s f1, f6, f3, f18, rne # perform operation
fnmsub.s f1, f6, f3, f18, rtz # perform operation
fnmsub.s f1, f6, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x550ad9a50375f3b8 # load x3 with value 0x550ad9a50375f3b8
sw x3, 0(x2) # store 0x550ad9a50375f3b8 in memory
flw f24, 0(x2) # load 0x550ad9a50375f3b8 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f21, f25, f24, f14, dyn # perform operation
fnmsub.s f21, f25, f24, f14, rdn # perform operation
fnmsub.s f21, f25, f24, f14, rmm # perform operation
fnmsub.s f21, f25, f24, f14, rne # perform operation
fnmsub.s f21, f25, f24, f14, rtz # perform operation
fnmsub.s f21, f25, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x1261d5dd6dddf4f9 # load x3 with value 0x1261d5dd6dddf4f9
sw x3, 0(x2) # store 0x1261d5dd6dddf4f9 in memory
flw f6, 0(x2) # load 0x1261d5dd6dddf4f9 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmsub.s f14, f20, f6, f29, dyn # perform operation
fnmsub.s f14, f20, f6, f29, rdn # perform operation
fnmsub.s f14, f20, f6, f29, rmm # perform operation
fnmsub.s f14, f20, f6, f29, rne # perform operation
fnmsub.s f14, f20, f6, f29, rtz # perform operation
fnmsub.s f14, f20, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xf7241e83e8ca8604 # load x3 with value 0xf7241e83e8ca8604
sw x3, 0(x2) # store 0xf7241e83e8ca8604 in memory
flw f22, 0(x2) # load 0xf7241e83e8ca8604 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmsub.s f18, f19, f22, f2, dyn # perform operation
fnmsub.s f18, f19, f22, f2, rdn # perform operation
fnmsub.s f18, f19, f22, f2, rmm # perform operation
fnmsub.s f18, f19, f22, f2, rne # perform operation
fnmsub.s f18, f19, f22, f2, rtz # perform operation
fnmsub.s f18, f19, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x8b07b39ef43a9c59 # load x3 with value 0x8b07b39ef43a9c59
sw x3, 0(x2) # store 0x8b07b39ef43a9c59 in memory
flw f7, 0(x2) # load 0x8b07b39ef43a9c59 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmsub.s f21, f13, f7, f2, dyn # perform operation
fnmsub.s f21, f13, f7, f2, rdn # perform operation
fnmsub.s f21, f13, f7, f2, rmm # perform operation
fnmsub.s f21, f13, f7, f2, rne # perform operation
fnmsub.s f21, f13, f7, f2, rtz # perform operation
fnmsub.s f21, f13, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xf1715ed3ba568402 # load x3 with value 0xf1715ed3ba568402
sw x3, 0(x2) # store 0xf1715ed3ba568402 in memory
flw f17, 0(x2) # load 0xf1715ed3ba568402 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmsub.s f16, f27, f17, f25, dyn # perform operation
fnmsub.s f16, f27, f17, f25, rdn # perform operation
fnmsub.s f16, f27, f17, f25, rmm # perform operation
fnmsub.s f16, f27, f17, f25, rne # perform operation
fnmsub.s f16, f27, f17, f25, rtz # perform operation
fnmsub.s f16, f27, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x22730c0190068dd4 # load x3 with value 0x22730c0190068dd4
sw x3, 0(x2) # store 0x22730c0190068dd4 in memory
flw f30, 0(x2) # load 0x22730c0190068dd4 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f13, f19, f30, f25, dyn # perform operation
fnmsub.s f13, f19, f30, f25, rdn # perform operation
fnmsub.s f13, f19, f30, f25, rmm # perform operation
fnmsub.s f13, f19, f30, f25, rne # perform operation
fnmsub.s f13, f19, f30, f25, rtz # perform operation
fnmsub.s f13, f19, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x9bbc2840e1f884db # load x3 with value 0x9bbc2840e1f884db
sw x3, 0(x2) # store 0x9bbc2840e1f884db in memory
flw f7, 0(x2) # load 0x9bbc2840e1f884db from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmsub.s f20, f22, f7, f28, dyn # perform operation
fnmsub.s f20, f22, f7, f28, rdn # perform operation
fnmsub.s f20, f22, f7, f28, rmm # perform operation
fnmsub.s f20, f22, f7, f28, rne # perform operation
fnmsub.s f20, f22, f7, f28, rtz # perform operation
fnmsub.s f20, f22, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xa7b94e1fe1169ed5 # load x3 with value 0xa7b94e1fe1169ed5
sw x3, 0(x2) # store 0xa7b94e1fe1169ed5 in memory
flw f17, 0(x2) # load 0xa7b94e1fe1169ed5 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f27, f9, f17, f12, dyn # perform operation
fnmsub.s f27, f9, f17, f12, rdn # perform operation
fnmsub.s f27, f9, f17, f12, rmm # perform operation
fnmsub.s f27, f9, f17, f12, rne # perform operation
fnmsub.s f27, f9, f17, f12, rtz # perform operation
fnmsub.s f27, f9, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xed382f2666cf30ef # load x3 with value 0xed382f2666cf30ef
sw x3, 0(x2) # store 0xed382f2666cf30ef in memory
flw f21, 0(x2) # load 0xed382f2666cf30ef from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f13, f3, f21, f15, dyn # perform operation
fnmsub.s f13, f3, f21, f15, rdn # perform operation
fnmsub.s f13, f3, f21, f15, rmm # perform operation
fnmsub.s f13, f3, f21, f15, rne # perform operation
fnmsub.s f13, f3, f21, f15, rtz # perform operation
fnmsub.s f13, f3, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f21, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x25bd7723c2cbb943 # load x3 with value 0x25bd7723c2cbb943
sw x3, 0(x2) # store 0x25bd7723c2cbb943 in memory
flw f19, 0(x2) # load 0x25bd7723c2cbb943 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmsub.s f8, f2, f19, f15, dyn # perform operation
fnmsub.s f8, f2, f19, f15, rdn # perform operation
fnmsub.s f8, f2, f19, f15, rmm # perform operation
fnmsub.s f8, f2, f19, f15, rne # perform operation
fnmsub.s f8, f2, f19, f15, rtz # perform operation
fnmsub.s f8, f2, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f2, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x6effb6ef0c9c24bc # load x3 with value 0x6effb6ef0c9c24bc
sw x3, 0(x2) # store 0x6effb6ef0c9c24bc in memory
flw f12, 0(x2) # load 0x6effb6ef0c9c24bc from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmsub.s f10, f15, f12, f8, dyn # perform operation
fnmsub.s f10, f15, f12, f8, rdn # perform operation
fnmsub.s f10, f15, f12, f8, rmm # perform operation
fnmsub.s f10, f15, f12, f8, rne # perform operation
fnmsub.s f10, f15, f12, f8, rtz # perform operation
fnmsub.s f10, f15, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x3884b6e9f6e1b916 # load x3 with value 0x3884b6e9f6e1b916
sw x3, 0(x2) # store 0x3884b6e9f6e1b916 in memory
flw f19, 0(x2) # load 0x3884b6e9f6e1b916 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmsub.s f15, f29, f19, f14, dyn # perform operation
fnmsub.s f15, f29, f19, f14, rdn # perform operation
fnmsub.s f15, f29, f19, f14, rmm # perform operation
fnmsub.s f15, f29, f19, f14, rne # perform operation
fnmsub.s f15, f29, f19, f14, rtz # perform operation
fnmsub.s f15, f29, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xe7661ca23ccea46d # load x3 with value 0xe7661ca23ccea46d
sw x3, 0(x2) # store 0xe7661ca23ccea46d in memory
flw f25, 0(x2) # load 0xe7661ca23ccea46d from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fnmsub.s f1, f26, f25, f13, dyn # perform operation
fnmsub.s f1, f26, f25, f13, rdn # perform operation
fnmsub.s f1, f26, f25, f13, rmm # perform operation
fnmsub.s f1, f26, f25, f13, rne # perform operation
fnmsub.s f1, f26, f25, f13, rtz # perform operation
fnmsub.s f1, f26, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x199f8c0300f53918 # load x3 with value 0x199f8c0300f53918
sw x3, 0(x2) # store 0x199f8c0300f53918 in memory
flw f7, 0(x2) # load 0x199f8c0300f53918 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fnmsub.s f22, f24, f7, f8, dyn # perform operation
fnmsub.s f22, f24, f7, f8, rdn # perform operation
fnmsub.s f22, f24, f7, f8, rmm # perform operation
fnmsub.s f22, f24, f7, f8, rne # perform operation
fnmsub.s f22, f24, f7, f8, rtz # perform operation
fnmsub.s f22, f24, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xcbcbd05097b5ee82 # load x3 with value 0xcbcbd05097b5ee82
sw x3, 0(x2) # store 0xcbcbd05097b5ee82 in memory
flw f19, 0(x2) # load 0xcbcbd05097b5ee82 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmsub.s f24, f21, f19, f14, dyn # perform operation
fnmsub.s f24, f21, f19, f14, rdn # perform operation
fnmsub.s f24, f21, f19, f14, rmm # perform operation
fnmsub.s f24, f21, f19, f14, rne # perform operation
fnmsub.s f24, f21, f19, f14, rtz # perform operation
fnmsub.s f24, f21, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x13eef7b7ff455a9 # load x3 with value 0x13eef7b7ff455a9
sw x3, 0(x2) # store 0x13eef7b7ff455a9 in memory
flw f17, 0(x2) # load 0x13eef7b7ff455a9 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f19, f25, f17, f13, dyn # perform operation
fnmsub.s f19, f25, f17, f13, rdn # perform operation
fnmsub.s f19, f25, f17, f13, rmm # perform operation
fnmsub.s f19, f25, f17, f13, rne # perform operation
fnmsub.s f19, f25, f17, f13, rtz # perform operation
fnmsub.s f19, f25, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xa558e566c6ab21b3 # load x3 with value 0xa558e566c6ab21b3
sw x3, 0(x2) # store 0xa558e566c6ab21b3 in memory
flw f16, 0(x2) # load 0xa558e566c6ab21b3 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmsub.s f1, f10, f16, f18, dyn # perform operation
fnmsub.s f1, f10, f16, f18, rdn # perform operation
fnmsub.s f1, f10, f16, f18, rmm # perform operation
fnmsub.s f1, f10, f16, f18, rne # perform operation
fnmsub.s f1, f10, f16, f18, rtz # perform operation
fnmsub.s f1, f10, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f10, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0xfd476b357a296a6f # load x3 with value 0xfd476b357a296a6f
sw x3, 0(x2) # store 0xfd476b357a296a6f in memory
flw f2, 0(x2) # load 0xfd476b357a296a6f from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmsub.s f8, f30, f2, f26, dyn # perform operation
fnmsub.s f8, f30, f2, f26, rdn # perform operation
fnmsub.s f8, f30, f2, f26, rmm # perform operation
fnmsub.s f8, f30, f2, f26, rne # perform operation
fnmsub.s f8, f30, f2, f26, rtz # perform operation
fnmsub.s f8, f30, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f30, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xe4cb29bcb3f7edfc # load x3 with value 0xe4cb29bcb3f7edfc
sw x3, 0(x2) # store 0xe4cb29bcb3f7edfc in memory
flw f14, 0(x2) # load 0xe4cb29bcb3f7edfc from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmsub.s f18, f24, f14, f2, dyn # perform operation
fnmsub.s f18, f24, f14, f2, rdn # perform operation
fnmsub.s f18, f24, f14, f2, rmm # perform operation
fnmsub.s f18, f24, f14, f2, rne # perform operation
fnmsub.s f18, f24, f14, f2, rtz # perform operation
fnmsub.s f18, f24, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xc2170dc343faa751 # load x3 with value 0xc2170dc343faa751
sw x3, 0(x2) # store 0xc2170dc343faa751 in memory
flw f25, 0(x2) # load 0xc2170dc343faa751 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmsub.s f5, f13, f25, f27, dyn # perform operation
fnmsub.s f5, f13, f25, f27, rdn # perform operation
fnmsub.s f5, f13, f25, f27, rmm # perform operation
fnmsub.s f5, f13, f25, f27, rne # perform operation
fnmsub.s f5, f13, f25, f27, rtz # perform operation
fnmsub.s f5, f13, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xe09e06f5024692c5 # load x3 with value 0xe09e06f5024692c5
sw x3, 0(x2) # store 0xe09e06f5024692c5 in memory
flw f10, 0(x2) # load 0xe09e06f5024692c5 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fnmsub.s f1, f15, f10, f12, dyn # perform operation
fnmsub.s f1, f15, f10, f12, rdn # perform operation
fnmsub.s f1, f15, f10, f12, rmm # perform operation
fnmsub.s f1, f15, f10, f12, rne # perform operation
fnmsub.s f1, f15, f10, f12, rtz # perform operation
fnmsub.s f1, f15, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x27880d8dc245fbd0 # load x3 with value 0x27880d8dc245fbd0
sw x3, 0(x2) # store 0x27880d8dc245fbd0 in memory
flw f15, 0(x2) # load 0x27880d8dc245fbd0 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmsub.s f23, f18, f15, f14, dyn # perform operation
fnmsub.s f23, f18, f15, f14, rdn # perform operation
fnmsub.s f23, f18, f15, f14, rmm # perform operation
fnmsub.s f23, f18, f15, f14, rne # perform operation
fnmsub.s f23, f18, f15, f14, rtz # perform operation
fnmsub.s f23, f18, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x8059e6c3712fb4b4 # load x3 with value 0x8059e6c3712fb4b4
sw x3, 0(x2) # store 0x8059e6c3712fb4b4 in memory
flw f9, 0(x2) # load 0x8059e6c3712fb4b4 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmsub.s f2, f13, f9, f15, dyn # perform operation
fnmsub.s f2, f13, f9, f15, rdn # perform operation
fnmsub.s f2, f13, f9, f15, rmm # perform operation
fnmsub.s f2, f13, f9, f15, rne # perform operation
fnmsub.s f2, f13, f9, f15, rtz # perform operation
fnmsub.s f2, f13, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x82fcd46f8668da7 # load x3 with value 0x82fcd46f8668da7
sw x3, 0(x2) # store 0x82fcd46f8668da7 in memory
flw f16, 0(x2) # load 0x82fcd46f8668da7 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmsub.s f14, f12, f16, f1, dyn # perform operation
fnmsub.s f14, f12, f16, f1, rdn # perform operation
fnmsub.s f14, f12, f16, f1, rmm # perform operation
fnmsub.s f14, f12, f16, f1, rne # perform operation
fnmsub.s f14, f12, f16, f1, rtz # perform operation
fnmsub.s f14, f12, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f12, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f12, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f12, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f12, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f12, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xff5127fec3c0352f # load x3 with value 0xff5127fec3c0352f
sw x3, 0(x2) # store 0xff5127fec3c0352f in memory
flw f17, 0(x2) # load 0xff5127fec3c0352f from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmsub.s f13, f8, f17, f16, dyn # perform operation
fnmsub.s f13, f8, f17, f16, rdn # perform operation
fnmsub.s f13, f8, f17, f16, rmm # perform operation
fnmsub.s f13, f8, f17, f16, rne # perform operation
fnmsub.s f13, f8, f17, f16, rtz # perform operation
fnmsub.s f13, f8, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x61fde2e3c9c3526c # load x3 with value 0x61fde2e3c9c3526c
sw x3, 0(x2) # store 0x61fde2e3c9c3526c in memory
flw f20, 0(x2) # load 0x61fde2e3c9c3526c from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmsub.s f11, f13, f20, f1, dyn # perform operation
fnmsub.s f11, f13, f20, f1, rdn # perform operation
fnmsub.s f11, f13, f20, f1, rmm # perform operation
fnmsub.s f11, f13, f20, f1, rne # perform operation
fnmsub.s f11, f13, f20, f1, rtz # perform operation
fnmsub.s f11, f13, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x631c1bd0d9ecb3f5 # load x3 with value 0x631c1bd0d9ecb3f5
sw x3, 0(x2) # store 0x631c1bd0d9ecb3f5 in memory
flw f30, 0(x2) # load 0x631c1bd0d9ecb3f5 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmsub.s f17, f6, f30, f16, dyn # perform operation
fnmsub.s f17, f6, f30, f16, rdn # perform operation
fnmsub.s f17, f6, f30, f16, rmm # perform operation
fnmsub.s f17, f6, f30, f16, rne # perform operation
fnmsub.s f17, f6, f30, f16, rtz # perform operation
fnmsub.s f17, f6, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f30, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xc281adeabfdb6635 # load x3 with value 0xc281adeabfdb6635
sw x3, 0(x2) # store 0xc281adeabfdb6635 in memory
flw f23, 0(x2) # load 0xc281adeabfdb6635 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f12, f27, f23, f18, dyn # perform operation
fnmsub.s f12, f27, f23, f18, rdn # perform operation
fnmsub.s f12, f27, f23, f18, rmm # perform operation
fnmsub.s f12, f27, f23, f18, rne # perform operation
fnmsub.s f12, f27, f23, f18, rtz # perform operation
fnmsub.s f12, f27, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f27, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x107b54441fed5c8d # load x3 with value 0x107b54441fed5c8d
sw x3, 0(x2) # store 0x107b54441fed5c8d in memory
flw f5, 0(x2) # load 0x107b54441fed5c8d from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmsub.s f10, f9, f5, f28, dyn # perform operation
fnmsub.s f10, f9, f5, f28, rdn # perform operation
fnmsub.s f10, f9, f5, f28, rmm # perform operation
fnmsub.s f10, f9, f5, f28, rne # perform operation
fnmsub.s f10, f9, f5, f28, rtz # perform operation
fnmsub.s f10, f9, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x2fb5fa7d7f817afc # load x3 with value 0x2fb5fa7d7f817afc
sw x3, 0(x2) # store 0x2fb5fa7d7f817afc in memory
flw f24, 0(x2) # load 0x2fb5fa7d7f817afc from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmsub.s f9, f12, f24, f28, dyn # perform operation
fnmsub.s f9, f12, f24, f28, rdn # perform operation
fnmsub.s f9, f12, f24, f28, rmm # perform operation
fnmsub.s f9, f12, f24, f28, rne # perform operation
fnmsub.s f9, f12, f24, f28, rtz # perform operation
fnmsub.s f9, f12, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x1f27d9c43e11c429 # load x3 with value 0x1f27d9c43e11c429
sw x3, 0(x2) # store 0x1f27d9c43e11c429 in memory
flw f10, 0(x2) # load 0x1f27d9c43e11c429 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmsub.s f28, f16, f10, f18, dyn # perform operation
fnmsub.s f28, f16, f10, f18, rdn # perform operation
fnmsub.s f28, f16, f10, f18, rmm # perform operation
fnmsub.s f28, f16, f10, f18, rne # perform operation
fnmsub.s f28, f16, f10, f18, rtz # perform operation
fnmsub.s f28, f16, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f10, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xacca26e47fa4e293 # load x3 with value 0xacca26e47fa4e293
sw x3, 0(x2) # store 0xacca26e47fa4e293 in memory
flw f2, 0(x2) # load 0xacca26e47fa4e293 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f16, f24, f2, f6, dyn # perform operation
fnmsub.s f16, f24, f2, f6, rdn # perform operation
fnmsub.s f16, f24, f2, f6, rmm # perform operation
fnmsub.s f16, f24, f2, f6, rne # perform operation
fnmsub.s f16, f24, f2, f6, rtz # perform operation
fnmsub.s f16, f24, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x638471449096ddf6 # load x3 with value 0x638471449096ddf6
sw x3, 0(x2) # store 0x638471449096ddf6 in memory
flw f29, 0(x2) # load 0x638471449096ddf6 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmsub.s f2, f1, f29, f19, dyn # perform operation
fnmsub.s f2, f1, f29, f19, rdn # perform operation
fnmsub.s f2, f1, f29, f19, rmm # perform operation
fnmsub.s f2, f1, f29, f19, rne # perform operation
fnmsub.s f2, f1, f29, f19, rtz # perform operation
fnmsub.s f2, f1, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f29, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x81a456ec90f6c14 # load x3 with value 0x81a456ec90f6c14
sw x3, 0(x2) # store 0x81a456ec90f6c14 in memory
flw f19, 0(x2) # load 0x81a456ec90f6c14 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f31, f30, f19, f28, dyn # perform operation
fnmsub.s f31, f30, f19, f28, rdn # perform operation
fnmsub.s f31, f30, f19, f28, rmm # perform operation
fnmsub.s f31, f30, f19, f28, rne # perform operation
fnmsub.s f31, f30, f19, f28, rtz # perform operation
fnmsub.s f31, f30, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f30, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f30, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f30, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f30, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f30, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x2f7034ed8c96398b # load x3 with value 0x2f7034ed8c96398b
sw x3, 0(x2) # store 0x2f7034ed8c96398b in memory
flw f20, 0(x2) # load 0x2f7034ed8c96398b from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmsub.s f3, f19, f20, f9, dyn # perform operation
fnmsub.s f3, f19, f20, f9, rdn # perform operation
fnmsub.s f3, f19, f20, f9, rmm # perform operation
fnmsub.s f3, f19, f20, f9, rne # perform operation
fnmsub.s f3, f19, f20, f9, rtz # perform operation
fnmsub.s f3, f19, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x9ff6651aa0f18873 # load x3 with value 0x9ff6651aa0f18873
sw x3, 0(x2) # store 0x9ff6651aa0f18873 in memory
flw f3, 0(x2) # load 0x9ff6651aa0f18873 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmsub.s f24, f29, f3, f1, dyn # perform operation
fnmsub.s f24, f29, f3, f1, rdn # perform operation
fnmsub.s f24, f29, f3, f1, rmm # perform operation
fnmsub.s f24, f29, f3, f1, rne # perform operation
fnmsub.s f24, f29, f3, f1, rtz # perform operation
fnmsub.s f24, f29, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f29, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xba7ce887b045c489 # load x3 with value 0xba7ce887b045c489
sw x3, 0(x2) # store 0xba7ce887b045c489 in memory
flw f20, 0(x2) # load 0xba7ce887b045c489 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f7, f23, f20, f21, dyn # perform operation
fnmsub.s f7, f23, f20, f21, rdn # perform operation
fnmsub.s f7, f23, f20, f21, rmm # perform operation
fnmsub.s f7, f23, f20, f21, rne # perform operation
fnmsub.s f7, f23, f20, f21, rtz # perform operation
fnmsub.s f7, f23, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xe9a52986950e02e9 # load x3 with value 0xe9a52986950e02e9
sw x3, 0(x2) # store 0xe9a52986950e02e9 in memory
flw f15, 0(x2) # load 0xe9a52986950e02e9 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f14, f8, f15, f29, dyn # perform operation
fnmsub.s f14, f8, f15, f29, rdn # perform operation
fnmsub.s f14, f8, f15, f29, rmm # perform operation
fnmsub.s f14, f8, f15, f29, rne # perform operation
fnmsub.s f14, f8, f15, f29, rtz # perform operation
fnmsub.s f14, f8, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x7338ec1bcfdfad2c # load x3 with value 0x7338ec1bcfdfad2c
sw x3, 0(x2) # store 0x7338ec1bcfdfad2c in memory
flw f10, 0(x2) # load 0x7338ec1bcfdfad2c from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmsub.s f13, f11, f10, f5, dyn # perform operation
fnmsub.s f13, f11, f10, f5, rdn # perform operation
fnmsub.s f13, f11, f10, f5, rmm # perform operation
fnmsub.s f13, f11, f10, f5, rne # perform operation
fnmsub.s f13, f11, f10, f5, rtz # perform operation
fnmsub.s f13, f11, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f11, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x7f3ee01d8be663cf # load x3 with value 0x7f3ee01d8be663cf
sw x3, 0(x2) # store 0x7f3ee01d8be663cf in memory
flw f11, 0(x2) # load 0x7f3ee01d8be663cf from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmsub.s f1, f20, f11, f15, dyn # perform operation
fnmsub.s f1, f20, f11, f15, rdn # perform operation
fnmsub.s f1, f20, f11, f15, rmm # perform operation
fnmsub.s f1, f20, f11, f15, rne # perform operation
fnmsub.s f1, f20, f11, f15, rtz # perform operation
fnmsub.s f1, f20, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xed4d26997aafb183 # load x3 with value 0xed4d26997aafb183
sw x3, 0(x2) # store 0xed4d26997aafb183 in memory
flw f28, 0(x2) # load 0xed4d26997aafb183 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmsub.s f18, f29, f28, f30, dyn # perform operation
fnmsub.s f18, f29, f28, f30, rdn # perform operation
fnmsub.s f18, f29, f28, f30, rmm # perform operation
fnmsub.s f18, f29, f28, f30, rne # perform operation
fnmsub.s f18, f29, f28, f30, rtz # perform operation
fnmsub.s f18, f29, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x2be3e0eeec5d1d4e # load x3 with value 0x2be3e0eeec5d1d4e
sw x3, 0(x2) # store 0x2be3e0eeec5d1d4e in memory
flw f13, 0(x2) # load 0x2be3e0eeec5d1d4e from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmsub.s f22, f18, f13, f15, dyn # perform operation
fnmsub.s f22, f18, f13, f15, rdn # perform operation
fnmsub.s f22, f18, f13, f15, rmm # perform operation
fnmsub.s f22, f18, f13, f15, rne # perform operation
fnmsub.s f22, f18, f13, f15, rtz # perform operation
fnmsub.s f22, f18, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x87b405c1f09c0534 # load x3 with value 0x87b405c1f09c0534
sw x3, 0(x2) # store 0x87b405c1f09c0534 in memory
flw f15, 0(x2) # load 0x87b405c1f09c0534 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmsub.s f10, f20, f15, f14, dyn # perform operation
fnmsub.s f10, f20, f15, f14, rdn # perform operation
fnmsub.s f10, f20, f15, f14, rmm # perform operation
fnmsub.s f10, f20, f15, f14, rne # perform operation
fnmsub.s f10, f20, f15, f14, rtz # perform operation
fnmsub.s f10, f20, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x8c05ddb5311cc4ec # load x3 with value 0x8c05ddb5311cc4ec
sw x3, 0(x2) # store 0x8c05ddb5311cc4ec in memory
flw f1, 0(x2) # load 0x8c05ddb5311cc4ec from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmsub.s f6, f18, f1, f26, dyn # perform operation
fnmsub.s f6, f18, f1, f26, rdn # perform operation
fnmsub.s f6, f18, f1, f26, rmm # perform operation
fnmsub.s f6, f18, f1, f26, rne # perform operation
fnmsub.s f6, f18, f1, f26, rtz # perform operation
fnmsub.s f6, f18, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f18, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xb230c305a5ef2dc4 # load x3 with value 0xb230c305a5ef2dc4
sw x3, 0(x2) # store 0xb230c305a5ef2dc4 in memory
flw f19, 0(x2) # load 0xb230c305a5ef2dc4 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmsub.s f30, f21, f19, f14, dyn # perform operation
fnmsub.s f30, f21, f19, f14, rdn # perform operation
fnmsub.s f30, f21, f19, f14, rmm # perform operation
fnmsub.s f30, f21, f19, f14, rne # perform operation
fnmsub.s f30, f21, f19, f14, rtz # perform operation
fnmsub.s f30, f21, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f21, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x379751687817da25 # load x3 with value 0x379751687817da25
sw x3, 0(x2) # store 0x379751687817da25 in memory
flw f23, 0(x2) # load 0x379751687817da25 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmsub.s f6, f17, f23, f1, dyn # perform operation
fnmsub.s f6, f17, f23, f1, rdn # perform operation
fnmsub.s f6, f17, f23, f1, rmm # perform operation
fnmsub.s f6, f17, f23, f1, rne # perform operation
fnmsub.s f6, f17, f23, f1, rtz # perform operation
fnmsub.s f6, f17, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x5b20c2cd682e5895 # load x3 with value 0x5b20c2cd682e5895
sw x3, 0(x2) # store 0x5b20c2cd682e5895 in memory
flw f7, 0(x2) # load 0x5b20c2cd682e5895 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmsub.s f19, f27, f7, f2, dyn # perform operation
fnmsub.s f19, f27, f7, f2, rdn # perform operation
fnmsub.s f19, f27, f7, f2, rmm # perform operation
fnmsub.s f19, f27, f7, f2, rne # perform operation
fnmsub.s f19, f27, f7, f2, rtz # perform operation
fnmsub.s f19, f27, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xb4138749c43e9862 # load x3 with value 0xb4138749c43e9862
sw x3, 0(x2) # store 0xb4138749c43e9862 in memory
flw f28, 0(x2) # load 0xb4138749c43e9862 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmsub.s f12, f29, f28, f10, dyn # perform operation
fnmsub.s f12, f29, f28, f10, rdn # perform operation
fnmsub.s f12, f29, f28, f10, rmm # perform operation
fnmsub.s f12, f29, f28, f10, rne # perform operation
fnmsub.s f12, f29, f28, f10, rtz # perform operation
fnmsub.s f12, f29, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x4b06c2c6c97f258d # load x3 with value 0x4b06c2c6c97f258d
sw x3, 0(x2) # store 0x4b06c2c6c97f258d in memory
flw f23, 0(x2) # load 0x4b06c2c6c97f258d from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f16, f21, f23, f7, dyn # perform operation
fnmsub.s f16, f21, f23, f7, rdn # perform operation
fnmsub.s f16, f21, f23, f7, rmm # perform operation
fnmsub.s f16, f21, f23, f7, rne # perform operation
fnmsub.s f16, f21, f23, f7, rtz # perform operation
fnmsub.s f16, f21, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f21, f23, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xda44a9a09d05064 # load x3 with value 0xda44a9a09d05064
sw x3, 0(x2) # store 0xda44a9a09d05064 in memory
flw f21, 0(x2) # load 0xda44a9a09d05064 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmsub.s f8, f25, f21, f9, dyn # perform operation
fnmsub.s f8, f25, f21, f9, rdn # perform operation
fnmsub.s f8, f25, f21, f9, rmm # perform operation
fnmsub.s f8, f25, f21, f9, rne # perform operation
fnmsub.s f8, f25, f21, f9, rtz # perform operation
fnmsub.s f8, f25, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x202ef30dd1683749 # load x3 with value 0x202ef30dd1683749
sw x3, 0(x2) # store 0x202ef30dd1683749 in memory
flw f20, 0(x2) # load 0x202ef30dd1683749 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmsub.s f18, f10, f20, f22, dyn # perform operation
fnmsub.s f18, f10, f20, f22, rdn # perform operation
fnmsub.s f18, f10, f20, f22, rmm # perform operation
fnmsub.s f18, f10, f20, f22, rne # perform operation
fnmsub.s f18, f10, f20, f22, rtz # perform operation
fnmsub.s f18, f10, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xc7ca02a331d09bb9 # load x3 with value 0xc7ca02a331d09bb9
sw x3, 0(x2) # store 0xc7ca02a331d09bb9 in memory
flw f31, 0(x2) # load 0xc7ca02a331d09bb9 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f30, f12, f31, f3, dyn # perform operation
fnmsub.s f30, f12, f31, f3, rdn # perform operation
fnmsub.s f30, f12, f31, f3, rmm # perform operation
fnmsub.s f30, f12, f31, f3, rne # perform operation
fnmsub.s f30, f12, f31, f3, rtz # perform operation
fnmsub.s f30, f12, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0xf0d0df219057f1ba # load x3 with value 0xf0d0df219057f1ba
sw x3, 0(x2) # store 0xf0d0df219057f1ba in memory
flw f5, 0(x2) # load 0xf0d0df219057f1ba from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f19, f15, f5, f28, dyn # perform operation
fnmsub.s f19, f15, f5, f28, rdn # perform operation
fnmsub.s f19, f15, f5, f28, rmm # perform operation
fnmsub.s f19, f15, f5, f28, rne # perform operation
fnmsub.s f19, f15, f5, f28, rtz # perform operation
fnmsub.s f19, f15, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x5532241fc49d1a93 # load x3 with value 0x5532241fc49d1a93
sw x3, 0(x2) # store 0x5532241fc49d1a93 in memory
flw f5, 0(x2) # load 0x5532241fc49d1a93 from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f19, f12, f5, f30, dyn # perform operation
fnmsub.s f19, f12, f5, f30, rdn # perform operation
fnmsub.s f19, f12, f5, f30, rmm # perform operation
fnmsub.s f19, f12, f5, f30, rne # perform operation
fnmsub.s f19, f12, f5, f30, rtz # perform operation
fnmsub.s f19, f12, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f5, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x2770a83f1c086e5c # load x3 with value 0x2770a83f1c086e5c
sw x3, 0(x2) # store 0x2770a83f1c086e5c in memory
flw f12, 0(x2) # load 0x2770a83f1c086e5c from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmsub.s f23, f8, f12, f1, dyn # perform operation
fnmsub.s f23, f8, f12, f1, rdn # perform operation
fnmsub.s f23, f8, f12, f1, rmm # perform operation
fnmsub.s f23, f8, f12, f1, rne # perform operation
fnmsub.s f23, f8, f12, f1, rtz # perform operation
fnmsub.s f23, f8, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x68c0d57e8925bac9 # load x3 with value 0x68c0d57e8925bac9
sw x3, 0(x2) # store 0x68c0d57e8925bac9 in memory
flw f1, 0(x2) # load 0x68c0d57e8925bac9 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f16, f5, f1, f3, dyn # perform operation
fnmsub.s f16, f5, f1, f3, rdn # perform operation
fnmsub.s f16, f5, f1, f3, rmm # perform operation
fnmsub.s f16, f5, f1, f3, rne # perform operation
fnmsub.s f16, f5, f1, f3, rtz # perform operation
fnmsub.s f16, f5, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x6d5a27bdb6d13c94 # load x3 with value 0x6d5a27bdb6d13c94
sw x3, 0(x2) # store 0x6d5a27bdb6d13c94 in memory
flw f6, 0(x2) # load 0x6d5a27bdb6d13c94 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f16, f1, f6, f14, dyn # perform operation
fnmsub.s f16, f1, f6, f14, rdn # perform operation
fnmsub.s f16, f1, f6, f14, rmm # perform operation
fnmsub.s f16, f1, f6, f14, rne # perform operation
fnmsub.s f16, f1, f6, f14, rtz # perform operation
fnmsub.s f16, f1, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x5216a00aaba60bda # load x3 with value 0x5216a00aaba60bda
sw x3, 0(x2) # store 0x5216a00aaba60bda in memory
flw f5, 0(x2) # load 0x5216a00aaba60bda from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmsub.s f29, f18, f5, f28, dyn # perform operation
fnmsub.s f29, f18, f5, f28, rdn # perform operation
fnmsub.s f29, f18, f5, f28, rmm # perform operation
fnmsub.s f29, f18, f5, f28, rne # perform operation
fnmsub.s f29, f18, f5, f28, rtz # perform operation
fnmsub.s f29, f18, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x5a7de83d1203aeb9 # load x3 with value 0x5a7de83d1203aeb9
sw x3, 0(x2) # store 0x5a7de83d1203aeb9 in memory
flw f8, 0(x2) # load 0x5a7de83d1203aeb9 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmsub.s f10, f11, f8, f12, dyn # perform operation
fnmsub.s f10, f11, f8, f12, rdn # perform operation
fnmsub.s f10, f11, f8, f12, rmm # perform operation
fnmsub.s f10, f11, f8, f12, rne # perform operation
fnmsub.s f10, f11, f8, f12, rtz # perform operation
fnmsub.s f10, f11, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x38a1e0bd48ff3efe # load x3 with value 0x38a1e0bd48ff3efe
sw x3, 0(x2) # store 0x38a1e0bd48ff3efe in memory
flw f6, 0(x2) # load 0x38a1e0bd48ff3efe from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fnmsub.s f26, f18, f6, f1, dyn # perform operation
fnmsub.s f26, f18, f6, f1, rdn # perform operation
fnmsub.s f26, f18, f6, f1, rmm # perform operation
fnmsub.s f26, f18, f6, f1, rne # perform operation
fnmsub.s f26, f18, f6, f1, rtz # perform operation
fnmsub.s f26, f18, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x937b91a475c1d127 # load x3 with value 0x937b91a475c1d127
sw x3, 0(x2) # store 0x937b91a475c1d127 in memory
flw f20, 0(x2) # load 0x937b91a475c1d127 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmsub.s f18, f31, f20, f29, dyn # perform operation
fnmsub.s f18, f31, f20, f29, rdn # perform operation
fnmsub.s f18, f31, f20, f29, rmm # perform operation
fnmsub.s f18, f31, f20, f29, rne # perform operation
fnmsub.s f18, f31, f20, f29, rtz # perform operation
fnmsub.s f18, f31, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f31, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xcc6fba0a8547cba9 # load x3 with value 0xcc6fba0a8547cba9
sw x3, 0(x2) # store 0xcc6fba0a8547cba9 in memory
flw f24, 0(x2) # load 0xcc6fba0a8547cba9 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f11, f28, f24, f29, dyn # perform operation
fnmsub.s f11, f28, f24, f29, rdn # perform operation
fnmsub.s f11, f28, f24, f29, rmm # perform operation
fnmsub.s f11, f28, f24, f29, rne # perform operation
fnmsub.s f11, f28, f24, f29, rtz # perform operation
fnmsub.s f11, f28, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xeef4a8e54f5fa67c # load x3 with value 0xeef4a8e54f5fa67c
sw x3, 0(x2) # store 0xeef4a8e54f5fa67c in memory
flw f21, 0(x2) # load 0xeef4a8e54f5fa67c from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f18, f16, f21, f25, dyn # perform operation
fnmsub.s f18, f16, f21, f25, rdn # perform operation
fnmsub.s f18, f16, f21, f25, rmm # perform operation
fnmsub.s f18, f16, f21, f25, rne # perform operation
fnmsub.s f18, f16, f21, f25, rtz # perform operation
fnmsub.s f18, f16, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x874865f3c33216c2 # load x3 with value 0x874865f3c33216c2
sw x3, 0(x2) # store 0x874865f3c33216c2 in memory
flw f18, 0(x2) # load 0x874865f3c33216c2 from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f12, f22, f18, f29, dyn # perform operation
fnmsub.s f12, f22, f18, f29, rdn # perform operation
fnmsub.s f12, f22, f18, f29, rmm # perform operation
fnmsub.s f12, f22, f18, f29, rne # perform operation
fnmsub.s f12, f22, f18, f29, rtz # perform operation
fnmsub.s f12, f22, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f18, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x9bfca870aeda5157 # load x3 with value 0x9bfca870aeda5157
sw x3, 0(x2) # store 0x9bfca870aeda5157 in memory
flw f19, 0(x2) # load 0x9bfca870aeda5157 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmsub.s f30, f14, f19, f31, dyn # perform operation
fnmsub.s f30, f14, f19, f31, rdn # perform operation
fnmsub.s f30, f14, f19, f31, rmm # perform operation
fnmsub.s f30, f14, f19, f31, rne # perform operation
fnmsub.s f30, f14, f19, f31, rtz # perform operation
fnmsub.s f30, f14, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x48f70fda05358f22 # load x3 with value 0x48f70fda05358f22
sw x3, 0(x2) # store 0x48f70fda05358f22 in memory
flw f16, 0(x2) # load 0x48f70fda05358f22 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmsub.s f17, f14, f16, f20, dyn # perform operation
fnmsub.s f17, f14, f16, f20, rdn # perform operation
fnmsub.s f17, f14, f16, f20, rmm # perform operation
fnmsub.s f17, f14, f16, f20, rne # perform operation
fnmsub.s f17, f14, f16, f20, rtz # perform operation
fnmsub.s f17, f14, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x2a7f534f1d768e2e # load x3 with value 0x2a7f534f1d768e2e
sw x3, 0(x2) # store 0x2a7f534f1d768e2e in memory
flw f6, 0(x2) # load 0x2a7f534f1d768e2e from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f10, f2, f6, f11, dyn # perform operation
fnmsub.s f10, f2, f6, f11, rdn # perform operation
fnmsub.s f10, f2, f6, f11, rmm # perform operation
fnmsub.s f10, f2, f6, f11, rne # perform operation
fnmsub.s f10, f2, f6, f11, rtz # perform operation
fnmsub.s f10, f2, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f2, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x9acb418a210b598 # load x3 with value 0x9acb418a210b598
sw x3, 0(x2) # store 0x9acb418a210b598 in memory
flw f26, 0(x2) # load 0x9acb418a210b598 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmsub.s f21, f12, f26, f5, dyn # perform operation
fnmsub.s f21, f12, f26, f5, rdn # perform operation
fnmsub.s f21, f12, f26, f5, rmm # perform operation
fnmsub.s f21, f12, f26, f5, rne # perform operation
fnmsub.s f21, f12, f26, f5, rtz # perform operation
fnmsub.s f21, f12, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x1708595e2f8b8a3f # load x3 with value 0x1708595e2f8b8a3f
sw x3, 0(x2) # store 0x1708595e2f8b8a3f in memory
flw f12, 0(x2) # load 0x1708595e2f8b8a3f from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f22, f8, f12, f17, dyn # perform operation
fnmsub.s f22, f8, f12, f17, rdn # perform operation
fnmsub.s f22, f8, f12, f17, rmm # perform operation
fnmsub.s f22, f8, f12, f17, rne # perform operation
fnmsub.s f22, f8, f12, f17, rtz # perform operation
fnmsub.s f22, f8, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f8, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x8c49cb4a89b9aa56 # load x3 with value 0x8c49cb4a89b9aa56
sw x3, 0(x2) # store 0x8c49cb4a89b9aa56 in memory
flw f23, 0(x2) # load 0x8c49cb4a89b9aa56 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f26, f7, f23, f9, dyn # perform operation
fnmsub.s f26, f7, f23, f9, rdn # perform operation
fnmsub.s f26, f7, f23, f9, rmm # perform operation
fnmsub.s f26, f7, f23, f9, rne # perform operation
fnmsub.s f26, f7, f23, f9, rtz # perform operation
fnmsub.s f26, f7, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x6429b70694a48c69 # load x3 with value 0x6429b70694a48c69
sw x3, 0(x2) # store 0x6429b70694a48c69 in memory
flw f8, 0(x2) # load 0x6429b70694a48c69 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fnmsub.s f22, f29, f8, f25, dyn # perform operation
fnmsub.s f22, f29, f8, f25, rdn # perform operation
fnmsub.s f22, f29, f8, f25, rmm # perform operation
fnmsub.s f22, f29, f8, f25, rne # perform operation
fnmsub.s f22, f29, f8, f25, rtz # perform operation
fnmsub.s f22, f29, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x125cc7599f808a9a # load x3 with value 0x125cc7599f808a9a
sw x3, 0(x2) # store 0x125cc7599f808a9a in memory
flw f9, 0(x2) # load 0x125cc7599f808a9a from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f25, f7, f9, f1, dyn # perform operation
fnmsub.s f25, f7, f9, f1, rdn # perform operation
fnmsub.s f25, f7, f9, f1, rmm # perform operation
fnmsub.s f25, f7, f9, f1, rne # perform operation
fnmsub.s f25, f7, f9, f1, rtz # perform operation
fnmsub.s f25, f7, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x1ad421f167b55dfe # load x3 with value 0x1ad421f167b55dfe
sw x3, 0(x2) # store 0x1ad421f167b55dfe in memory
flw f23, 0(x2) # load 0x1ad421f167b55dfe from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmsub.s f25, f10, f23, f13, dyn # perform operation
fnmsub.s f25, f10, f23, f13, rdn # perform operation
fnmsub.s f25, f10, f23, f13, rmm # perform operation
fnmsub.s f25, f10, f23, f13, rne # perform operation
fnmsub.s f25, f10, f23, f13, rtz # perform operation
fnmsub.s f25, f10, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xdcc6ae9a10f4963a # load x3 with value 0xdcc6ae9a10f4963a
sw x3, 0(x2) # store 0xdcc6ae9a10f4963a in memory
flw f12, 0(x2) # load 0xdcc6ae9a10f4963a from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f18, f27, f12, f30, dyn # perform operation
fnmsub.s f18, f27, f12, f30, rdn # perform operation
fnmsub.s f18, f27, f12, f30, rmm # perform operation
fnmsub.s f18, f27, f12, f30, rne # perform operation
fnmsub.s f18, f27, f12, f30, rtz # perform operation
fnmsub.s f18, f27, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xa57c8012f994cf21 # load x3 with value 0xa57c8012f994cf21
sw x3, 0(x2) # store 0xa57c8012f994cf21 in memory
flw f12, 0(x2) # load 0xa57c8012f994cf21 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmsub.s f6, f20, f12, f2, dyn # perform operation
fnmsub.s f6, f20, f12, f2, rdn # perform operation
fnmsub.s f6, f20, f12, f2, rmm # perform operation
fnmsub.s f6, f20, f12, f2, rne # perform operation
fnmsub.s f6, f20, f12, f2, rtz # perform operation
fnmsub.s f6, f20, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x671a9618cce56bc1 # load x3 with value 0x671a9618cce56bc1
sw x3, 0(x2) # store 0x671a9618cce56bc1 in memory
flw f27, 0(x2) # load 0x671a9618cce56bc1 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmsub.s f5, f25, f27, f29, dyn # perform operation
fnmsub.s f5, f25, f27, f29, rdn # perform operation
fnmsub.s f5, f25, f27, f29, rmm # perform operation
fnmsub.s f5, f25, f27, f29, rne # perform operation
fnmsub.s f5, f25, f27, f29, rtz # perform operation
fnmsub.s f5, f25, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x377aa24d58d22ce1 # load x3 with value 0x377aa24d58d22ce1
sw x3, 0(x2) # store 0x377aa24d58d22ce1 in memory
flw f25, 0(x2) # load 0x377aa24d58d22ce1 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fnmsub.s f12, f20, f25, f24, dyn # perform operation
fnmsub.s f12, f20, f25, f24, rdn # perform operation
fnmsub.s f12, f20, f25, f24, rmm # perform operation
fnmsub.s f12, f20, f25, f24, rne # perform operation
fnmsub.s f12, f20, f25, f24, rtz # perform operation
fnmsub.s f12, f20, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f20, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x924431c954c62e61 # load x3 with value 0x924431c954c62e61
sw x3, 0(x2) # store 0x924431c954c62e61 in memory
flw f14, 0(x2) # load 0x924431c954c62e61 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fnmsub.s f12, f30, f14, f31, dyn # perform operation
fnmsub.s f12, f30, f14, f31, rdn # perform operation
fnmsub.s f12, f30, f14, f31, rmm # perform operation
fnmsub.s f12, f30, f14, f31, rne # perform operation
fnmsub.s f12, f30, f14, f31, rtz # perform operation
fnmsub.s f12, f30, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x367059d606e1a1bf # load x3 with value 0x367059d606e1a1bf
sw x3, 0(x2) # store 0x367059d606e1a1bf in memory
flw f13, 0(x2) # load 0x367059d606e1a1bf from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmsub.s f17, f28, f13, f8, dyn # perform operation
fnmsub.s f17, f28, f13, f8, rdn # perform operation
fnmsub.s f17, f28, f13, f8, rmm # perform operation
fnmsub.s f17, f28, f13, f8, rne # perform operation
fnmsub.s f17, f28, f13, f8, rtz # perform operation
fnmsub.s f17, f28, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x98c42bbab91e2693 # load x3 with value 0x98c42bbab91e2693
sw x3, 0(x2) # store 0x98c42bbab91e2693 in memory
flw f24, 0(x2) # load 0x98c42bbab91e2693 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fnmsub.s f1, f5, f24, f10, dyn # perform operation
fnmsub.s f1, f5, f24, f10, rdn # perform operation
fnmsub.s f1, f5, f24, f10, rmm # perform operation
fnmsub.s f1, f5, f24, f10, rne # perform operation
fnmsub.s f1, f5, f24, f10, rtz # perform operation
fnmsub.s f1, f5, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x261354a686b7d548 # load x3 with value 0x261354a686b7d548
sw x3, 0(x2) # store 0x261354a686b7d548 in memory
flw f20, 0(x2) # load 0x261354a686b7d548 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmsub.s f10, f25, f20, f15, dyn # perform operation
fnmsub.s f10, f25, f20, f15, rdn # perform operation
fnmsub.s f10, f25, f20, f15, rmm # perform operation
fnmsub.s f10, f25, f20, f15, rne # perform operation
fnmsub.s f10, f25, f20, f15, rtz # perform operation
fnmsub.s f10, f25, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x70062a7fc2d19cb8 # load x3 with value 0x70062a7fc2d19cb8
sw x3, 0(x2) # store 0x70062a7fc2d19cb8 in memory
flw f12, 0(x2) # load 0x70062a7fc2d19cb8 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmsub.s f25, f19, f12, f8, dyn # perform operation
fnmsub.s f25, f19, f12, f8, rdn # perform operation
fnmsub.s f25, f19, f12, f8, rmm # perform operation
fnmsub.s f25, f19, f12, f8, rne # perform operation
fnmsub.s f25, f19, f12, f8, rtz # perform operation
fnmsub.s f25, f19, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f19, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xa70a3690521dfc1c # load x3 with value 0xa70a3690521dfc1c
sw x3, 0(x2) # store 0xa70a3690521dfc1c in memory
flw f15, 0(x2) # load 0xa70a3690521dfc1c from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f30, f6, f15, f22, dyn # perform operation
fnmsub.s f30, f6, f15, f22, rdn # perform operation
fnmsub.s f30, f6, f15, f22, rmm # perform operation
fnmsub.s f30, f6, f15, f22, rne # perform operation
fnmsub.s f30, f6, f15, f22, rtz # perform operation
fnmsub.s f30, f6, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xe2e9ee643eded75f # load x3 with value 0xe2e9ee643eded75f
sw x3, 0(x2) # store 0xe2e9ee643eded75f in memory
flw f18, 0(x2) # load 0xe2e9ee643eded75f from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmsub.s f27, f1, f18, f30, dyn # perform operation
fnmsub.s f27, f1, f18, f30, rdn # perform operation
fnmsub.s f27, f1, f18, f30, rmm # perform operation
fnmsub.s f27, f1, f18, f30, rne # perform operation
fnmsub.s f27, f1, f18, f30, rtz # perform operation
fnmsub.s f27, f1, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xb1ab4bf4a755b647 # load x3 with value 0xb1ab4bf4a755b647
sw x3, 0(x2) # store 0xb1ab4bf4a755b647 in memory
flw f3, 0(x2) # load 0xb1ab4bf4a755b647 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmsub.s f31, f18, f3, f6, dyn # perform operation
fnmsub.s f31, f18, f3, f6, rdn # perform operation
fnmsub.s f31, f18, f3, f6, rmm # perform operation
fnmsub.s f31, f18, f3, f6, rne # perform operation
fnmsub.s f31, f18, f3, f6, rtz # perform operation
fnmsub.s f31, f18, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x3cf2603e263e47c9 # load x3 with value 0x3cf2603e263e47c9
sw x3, 0(x2) # store 0x3cf2603e263e47c9 in memory
flw f14, 0(x2) # load 0x3cf2603e263e47c9 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmsub.s f17, f2, f14, f16, dyn # perform operation
fnmsub.s f17, f2, f14, f16, rdn # perform operation
fnmsub.s f17, f2, f14, f16, rmm # perform operation
fnmsub.s f17, f2, f14, f16, rne # perform operation
fnmsub.s f17, f2, f14, f16, rtz # perform operation
fnmsub.s f17, f2, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f2, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0xa986367a330eeb5e # load x3 with value 0xa986367a330eeb5e
sw x3, 0(x2) # store 0xa986367a330eeb5e in memory
flw f13, 0(x2) # load 0xa986367a330eeb5e from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f26, f25, f13, f1, dyn # perform operation
fnmsub.s f26, f25, f13, f1, rdn # perform operation
fnmsub.s f26, f25, f13, f1, rmm # perform operation
fnmsub.s f26, f25, f13, f1, rne # perform operation
fnmsub.s f26, f25, f13, f1, rtz # perform operation
fnmsub.s f26, f25, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x4dc48dd85b5c6902 # load x3 with value 0x4dc48dd85b5c6902
sw x3, 0(x2) # store 0x4dc48dd85b5c6902 in memory
flw f10, 0(x2) # load 0x4dc48dd85b5c6902 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f21, f26, f10, f27, dyn # perform operation
fnmsub.s f21, f26, f10, f27, rdn # perform operation
fnmsub.s f21, f26, f10, f27, rmm # perform operation
fnmsub.s f21, f26, f10, f27, rne # perform operation
fnmsub.s f21, f26, f10, f27, rtz # perform operation
fnmsub.s f21, f26, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f26, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x62bb167f4095793 # load x3 with value 0x62bb167f4095793
sw x3, 0(x2) # store 0x62bb167f4095793 in memory
flw f6, 0(x2) # load 0x62bb167f4095793 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmsub.s f19, f8, f6, f29, dyn # perform operation
fnmsub.s f19, f8, f6, f29, rdn # perform operation
fnmsub.s f19, f8, f6, f29, rmm # perform operation
fnmsub.s f19, f8, f6, f29, rne # perform operation
fnmsub.s f19, f8, f6, f29, rtz # perform operation
fnmsub.s f19, f8, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xe942ce229cf1e993 # load x3 with value 0xe942ce229cf1e993
sw x3, 0(x2) # store 0xe942ce229cf1e993 in memory
flw f6, 0(x2) # load 0xe942ce229cf1e993 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmsub.s f27, f30, f6, f10, dyn # perform operation
fnmsub.s f27, f30, f6, f10, rdn # perform operation
fnmsub.s f27, f30, f6, f10, rmm # perform operation
fnmsub.s f27, f30, f6, f10, rne # perform operation
fnmsub.s f27, f30, f6, f10, rtz # perform operation
fnmsub.s f27, f30, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f30, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x41bf6fea9532fa12 # load x3 with value 0x41bf6fea9532fa12
sw x3, 0(x2) # store 0x41bf6fea9532fa12 in memory
flw f10, 0(x2) # load 0x41bf6fea9532fa12 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmsub.s f19, f18, f10, f5, dyn # perform operation
fnmsub.s f19, f18, f10, f5, rdn # perform operation
fnmsub.s f19, f18, f10, f5, rmm # perform operation
fnmsub.s f19, f18, f10, f5, rne # perform operation
fnmsub.s f19, f18, f10, f5, rtz # perform operation
fnmsub.s f19, f18, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0xbc4a78c8855f6c63 # load x3 with value 0xbc4a78c8855f6c63
sw x3, 0(x2) # store 0xbc4a78c8855f6c63 in memory
flw f3, 0(x2) # load 0xbc4a78c8855f6c63 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fnmsub.s f31, f21, f3, f18, dyn # perform operation
fnmsub.s f31, f21, f3, f18, rdn # perform operation
fnmsub.s f31, f21, f3, f18, rmm # perform operation
fnmsub.s f31, f21, f3, f18, rne # perform operation
fnmsub.s f31, f21, f3, f18, rtz # perform operation
fnmsub.s f31, f21, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0xee1950957d10bb0e # load x3 with value 0xee1950957d10bb0e
sw x3, 0(x2) # store 0xee1950957d10bb0e in memory
flw f12, 0(x2) # load 0xee1950957d10bb0e from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f7, f15, f12, f17, dyn # perform operation
fnmsub.s f7, f15, f12, f17, rdn # perform operation
fnmsub.s f7, f15, f12, f17, rmm # perform operation
fnmsub.s f7, f15, f12, f17, rne # perform operation
fnmsub.s f7, f15, f12, f17, rtz # perform operation
fnmsub.s f7, f15, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x4a4ea7c1047a560d # load x3 with value 0x4a4ea7c1047a560d
sw x3, 0(x2) # store 0x4a4ea7c1047a560d in memory
flw f28, 0(x2) # load 0x4a4ea7c1047a560d from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmsub.s f31, f11, f28, f9, dyn # perform operation
fnmsub.s f31, f11, f28, f9, rdn # perform operation
fnmsub.s f31, f11, f28, f9, rmm # perform operation
fnmsub.s f31, f11, f28, f9, rne # perform operation
fnmsub.s f31, f11, f28, f9, rtz # perform operation
fnmsub.s f31, f11, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x59836cbe1b4d4610 # load x3 with value 0x59836cbe1b4d4610
sw x3, 0(x2) # store 0x59836cbe1b4d4610 in memory
flw f10, 0(x2) # load 0x59836cbe1b4d4610 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f23, f7, f10, f11, dyn # perform operation
fnmsub.s f23, f7, f10, f11, rdn # perform operation
fnmsub.s f23, f7, f10, f11, rmm # perform operation
fnmsub.s f23, f7, f10, f11, rne # perform operation
fnmsub.s f23, f7, f10, f11, rtz # perform operation
fnmsub.s f23, f7, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f7, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f7, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0xd44c9422f266cdb3 # load x3 with value 0xd44c9422f266cdb3
sw x3, 0(x2) # store 0xd44c9422f266cdb3 in memory
flw f3, 0(x2) # load 0xd44c9422f266cdb3 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmsub.s f6, f12, f3, f13, dyn # perform operation
fnmsub.s f6, f12, f3, f13, rdn # perform operation
fnmsub.s f6, f12, f3, f13, rmm # perform operation
fnmsub.s f6, f12, f3, f13, rne # perform operation
fnmsub.s f6, f12, f3, f13, rtz # perform operation
fnmsub.s f6, f12, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f12, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xc2c54ef69bb3d38 # load x3 with value 0xc2c54ef69bb3d38
sw x3, 0(x2) # store 0xc2c54ef69bb3d38 in memory
flw f2, 0(x2) # load 0xc2c54ef69bb3d38 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmsub.s f16, f11, f2, f7, dyn # perform operation
fnmsub.s f16, f11, f2, f7, rdn # perform operation
fnmsub.s f16, f11, f2, f7, rmm # perform operation
fnmsub.s f16, f11, f2, f7, rne # perform operation
fnmsub.s f16, f11, f2, f7, rtz # perform operation
fnmsub.s f16, f11, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f11, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f11, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f11, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f11, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f11, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x7985d3cbeb44fa23 # load x3 with value 0x7985d3cbeb44fa23
sw x3, 0(x2) # store 0x7985d3cbeb44fa23 in memory
flw f30, 0(x2) # load 0x7985d3cbeb44fa23 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f26, f7, f30, f14, dyn # perform operation
fnmsub.s f26, f7, f30, f14, rdn # perform operation
fnmsub.s f26, f7, f30, f14, rmm # perform operation
fnmsub.s f26, f7, f30, f14, rne # perform operation
fnmsub.s f26, f7, f30, f14, rtz # perform operation
fnmsub.s f26, f7, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x2f6a5b6885bee020 # load x3 with value 0x2f6a5b6885bee020
sw x3, 0(x2) # store 0x2f6a5b6885bee020 in memory
flw f21, 0(x2) # load 0x2f6a5b6885bee020 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmsub.s f14, f16, f21, f24, dyn # perform operation
fnmsub.s f14, f16, f21, f24, rdn # perform operation
fnmsub.s f14, f16, f21, f24, rmm # perform operation
fnmsub.s f14, f16, f21, f24, rne # perform operation
fnmsub.s f14, f16, f21, f24, rtz # perform operation
fnmsub.s f14, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x35c4d0769fc8adf6 # load x3 with value 0x35c4d0769fc8adf6
sw x3, 0(x2) # store 0x35c4d0769fc8adf6 in memory
flw f6, 0(x2) # load 0x35c4d0769fc8adf6 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f9, f22, f6, f30, dyn # perform operation
fnmsub.s f9, f22, f6, f30, rdn # perform operation
fnmsub.s f9, f22, f6, f30, rmm # perform operation
fnmsub.s f9, f22, f6, f30, rne # perform operation
fnmsub.s f9, f22, f6, f30, rtz # perform operation
fnmsub.s f9, f22, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xb28b28463291e069 # load x3 with value 0xb28b28463291e069
sw x3, 0(x2) # store 0xb28b28463291e069 in memory
flw f22, 0(x2) # load 0xb28b28463291e069 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmsub.s f30, f23, f22, f16, dyn # perform operation
fnmsub.s f30, f23, f22, f16, rdn # perform operation
fnmsub.s f30, f23, f22, f16, rmm # perform operation
fnmsub.s f30, f23, f22, f16, rne # perform operation
fnmsub.s f30, f23, f22, f16, rtz # perform operation
fnmsub.s f30, f23, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f23, f22, f16 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
