///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/Zfh//WALLY-COV-fnmadd.h.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.716606
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmadd.h f22, f8, f26, f16 # perform first operation
fnmadd.h f9, f22, f24, f31 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmadd.h f19, f8, f12, f16 # perform first operation
fnmadd.h f14, f30, f19, f25 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.h f27, f3, f5, f24 # perform first operation
fnmadd.h f27, f4, f30, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.h f9, f6, f11, f31 # perform first operation
fnmadd.h f9, f15, f23, f9 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.h f28, f12, f18, f6 # perform first operation
fnmadd.h f12, f13, f21, f3 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.h f18, f10, f8, f31 # perform first operation
fnmadd.h f8, f16, f23, f12 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x129a257b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6645fa7f # load x3 with value 0x6645fa7f
sw x3, 0(x2) # store 0x6645fa7f in memory
flh f0, 0(x2) # load 0x6645fa7f from memory into f0
li x3, 0x326ca326 # load x3 with value 0x326ca326
sw x3, 0(x2) # store 0x326ca326 in memory
flh f12, 0(x2) # load 0x326ca326 from memory into f12
li x3, 0x4e7b97f9 # load x3 with value 0x4e7b97f9
sw x3, 0(x2) # store 0x4e7b97f9 in memory
flh f30, 0(x2) # load 0x4e7b97f9 from memory into f30
fnmadd.h f0, f0, f12, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x60b3ab1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89148050 # load x3 with value 0x89148050
sw x3, 0(x2) # store 0x89148050 in memory
flh f1, 0(x2) # load 0x89148050 from memory into f1
li x3, 0x2901f2ba # load x3 with value 0x2901f2ba
sw x3, 0(x2) # store 0x2901f2ba in memory
flh f8, 0(x2) # load 0x2901f2ba from memory into f8
li x3, 0x4c404425 # load x3 with value 0x4c404425
sw x3, 0(x2) # store 0x4c404425 in memory
flh f19, 0(x2) # load 0x4c404425 from memory into f19
fnmadd.h f1, f1, f8, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0xacf09028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4f05de5 # load x3 with value 0xa4f05de5
sw x3, 0(x2) # store 0xa4f05de5 in memory
flh f2, 0(x2) # load 0xa4f05de5 from memory into f2
li x3, 0x9c3282b1 # load x3 with value 0x9c3282b1
sw x3, 0(x2) # store 0x9c3282b1 in memory
flh f29, 0(x2) # load 0x9c3282b1 from memory into f29
li x3, 0xe418aff9 # load x3 with value 0xe418aff9
sw x3, 0(x2) # store 0xe418aff9 in memory
flh f17, 0(x2) # load 0xe418aff9 from memory into f17
fnmadd.h f2, f2, f29, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x1635131b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x82d03703 # load x3 with value 0x82d03703
sw x3, 0(x2) # store 0x82d03703 in memory
flh f3, 0(x2) # load 0x82d03703 from memory into f3
li x3, 0xe4bbba79 # load x3 with value 0xe4bbba79
sw x3, 0(x2) # store 0xe4bbba79 in memory
flh f8, 0(x2) # load 0xe4bbba79 from memory into f8
li x3, 0x8d566e64 # load x3 with value 0x8d566e64
sw x3, 0(x2) # store 0x8d566e64 in memory
flh f24, 0(x2) # load 0x8d566e64 from memory into f24
fnmadd.h f3, f3, f8, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x26248624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ff32cab # load x3 with value 0x9ff32cab
sw x3, 0(x2) # store 0x9ff32cab in memory
flh f4, 0(x2) # load 0x9ff32cab from memory into f4
li x3, 0xf4f474c9 # load x3 with value 0xf4f474c9
sw x3, 0(x2) # store 0xf4f474c9 in memory
flh f17, 0(x2) # load 0xf4f474c9 from memory into f17
li x3, 0x11bb5a7e # load x3 with value 0x11bb5a7e
sw x3, 0(x2) # store 0x11bb5a7e in memory
flh f26, 0(x2) # load 0x11bb5a7e from memory into f26
fnmadd.h f4, f4, f17, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xcda47b5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe57d3c9b # load x3 with value 0xe57d3c9b
sw x3, 0(x2) # store 0xe57d3c9b in memory
flh f5, 0(x2) # load 0xe57d3c9b from memory into f5
li x3, 0xcc6c0ea1 # load x3 with value 0xcc6c0ea1
sw x3, 0(x2) # store 0xcc6c0ea1 in memory
flh f26, 0(x2) # load 0xcc6c0ea1 from memory into f26
li x3, 0xe5901582 # load x3 with value 0xe5901582
sw x3, 0(x2) # store 0xe5901582 in memory
flh f25, 0(x2) # load 0xe5901582 from memory into f25
fnmadd.h f5, f5, f26, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xb223338f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd866be5 # load x3 with value 0xbd866be5
sw x3, 0(x2) # store 0xbd866be5 in memory
flh f6, 0(x2) # load 0xbd866be5 from memory into f6
li x3, 0x97b1a08c # load x3 with value 0x97b1a08c
sw x3, 0(x2) # store 0x97b1a08c in memory
flh f21, 0(x2) # load 0x97b1a08c from memory into f21
li x3, 0x3fdac1a0 # load x3 with value 0x3fdac1a0
sw x3, 0(x2) # store 0x3fdac1a0 in memory
flh f19, 0(x2) # load 0x3fdac1a0 from memory into f19
fnmadd.h f6, f6, f21, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xc5a22cf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2091a50f # load x3 with value 0x2091a50f
sw x3, 0(x2) # store 0x2091a50f in memory
flh f7, 0(x2) # load 0x2091a50f from memory into f7
li x3, 0x07e1c588 # load x3 with value 0x07e1c588
sw x3, 0(x2) # store 0x07e1c588 in memory
flh f27, 0(x2) # load 0x07e1c588 from memory into f27
li x3, 0xc82e764b # load x3 with value 0xc82e764b
sw x3, 0(x2) # store 0xc82e764b in memory
flh f31, 0(x2) # load 0xc82e764b from memory into f31
fnmadd.h f7, f7, f27, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x8c37e915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb53d212b # load x3 with value 0xb53d212b
sw x3, 0(x2) # store 0xb53d212b in memory
flh f8, 0(x2) # load 0xb53d212b from memory into f8
li x3, 0xa7e9c48c # load x3 with value 0xa7e9c48c
sw x3, 0(x2) # store 0xa7e9c48c in memory
flh f5, 0(x2) # load 0xa7e9c48c from memory into f5
li x3, 0xbe68abab # load x3 with value 0xbe68abab
sw x3, 0(x2) # store 0xbe68abab in memory
flh f6, 0(x2) # load 0xbe68abab from memory into f6
fnmadd.h f8, f8, f5, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x69d45189 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d523766 # load x3 with value 0x6d523766
sw x3, 0(x2) # store 0x6d523766 in memory
flh f9, 0(x2) # load 0x6d523766 from memory into f9
li x3, 0xd3911cf5 # load x3 with value 0xd3911cf5
sw x3, 0(x2) # store 0xd3911cf5 in memory
flh f1, 0(x2) # load 0xd3911cf5 from memory into f1
li x3, 0x99e1dd23 # load x3 with value 0x99e1dd23
sw x3, 0(x2) # store 0x99e1dd23 in memory
flh f24, 0(x2) # load 0x99e1dd23 from memory into f24
fnmadd.h f9, f9, f1, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x229f6fe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ae90e6c # load x3 with value 0x7ae90e6c
sw x3, 0(x2) # store 0x7ae90e6c in memory
flh f10, 0(x2) # load 0x7ae90e6c from memory into f10
li x3, 0x3d642cce # load x3 with value 0x3d642cce
sw x3, 0(x2) # store 0x3d642cce in memory
flh f6, 0(x2) # load 0x3d642cce from memory into f6
li x3, 0x50f6ebec # load x3 with value 0x50f6ebec
sw x3, 0(x2) # store 0x50f6ebec in memory
flh f31, 0(x2) # load 0x50f6ebec from memory into f31
fnmadd.h f10, f10, f6, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0xc6fbb7b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0ab3f56d # load x3 with value 0x0ab3f56d
sw x3, 0(x2) # store 0x0ab3f56d in memory
flh f11, 0(x2) # load 0x0ab3f56d from memory into f11
li x3, 0x2737e416 # load x3 with value 0x2737e416
sw x3, 0(x2) # store 0x2737e416 in memory
flh f1, 0(x2) # load 0x2737e416 from memory into f1
li x3, 0x0eb46cf6 # load x3 with value 0x0eb46cf6
sw x3, 0(x2) # store 0x0eb46cf6 in memory
flh f15, 0(x2) # load 0x0eb46cf6 from memory into f15
fnmadd.h f11, f11, f1, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x6bae2d9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc4b3a18 # load x3 with value 0xdc4b3a18
sw x3, 0(x2) # store 0xdc4b3a18 in memory
flh f12, 0(x2) # load 0xdc4b3a18 from memory into f12
li x3, 0xbfd5d4c8 # load x3 with value 0xbfd5d4c8
sw x3, 0(x2) # store 0xbfd5d4c8 in memory
flh f4, 0(x2) # load 0xbfd5d4c8 from memory into f4
li x3, 0x0318c707 # load x3 with value 0x0318c707
sw x3, 0(x2) # store 0x0318c707 in memory
flh f28, 0(x2) # load 0x0318c707 from memory into f28
fnmadd.h f12, f12, f4, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xf84e87f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd91c8a40 # load x3 with value 0xd91c8a40
sw x3, 0(x2) # store 0xd91c8a40 in memory
flh f13, 0(x2) # load 0xd91c8a40 from memory into f13
li x3, 0x7e2033ad # load x3 with value 0x7e2033ad
sw x3, 0(x2) # store 0x7e2033ad in memory
flh f13, 0(x2) # load 0x7e2033ad from memory into f13
li x3, 0x11c9f2bc # load x3 with value 0x11c9f2bc
sw x3, 0(x2) # store 0x11c9f2bc in memory
flh f9, 0(x2) # load 0x11c9f2bc from memory into f9
fnmadd.h f13, f13, f13, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x733a6543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b58b01e # load x3 with value 0x0b58b01e
sw x3, 0(x2) # store 0x0b58b01e in memory
flh f14, 0(x2) # load 0x0b58b01e from memory into f14
li x3, 0xa040a9e1 # load x3 with value 0xa040a9e1
sw x3, 0(x2) # store 0xa040a9e1 in memory
flh f13, 0(x2) # load 0xa040a9e1 from memory into f13
li x3, 0x8b5cb85a # load x3 with value 0x8b5cb85a
sw x3, 0(x2) # store 0x8b5cb85a in memory
flh f28, 0(x2) # load 0x8b5cb85a from memory into f28
fnmadd.h f14, f14, f13, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x27746de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x810fb1fe # load x3 with value 0x810fb1fe
sw x3, 0(x2) # store 0x810fb1fe in memory
flh f15, 0(x2) # load 0x810fb1fe from memory into f15
li x3, 0xab43d6b8 # load x3 with value 0xab43d6b8
sw x3, 0(x2) # store 0xab43d6b8 in memory
flh f30, 0(x2) # load 0xab43d6b8 from memory into f30
li x3, 0xd47eea76 # load x3 with value 0xd47eea76
sw x3, 0(x2) # store 0xd47eea76 in memory
flh f3, 0(x2) # load 0xd47eea76 from memory into f3
fnmadd.h f15, f15, f30, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xc8d5c5c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1015829a # load x3 with value 0x1015829a
sw x3, 0(x2) # store 0x1015829a in memory
flh f16, 0(x2) # load 0x1015829a from memory into f16
li x3, 0x4d3a3aaa # load x3 with value 0x4d3a3aaa
sw x3, 0(x2) # store 0x4d3a3aaa in memory
flh f9, 0(x2) # load 0x4d3a3aaa from memory into f9
li x3, 0x0074e1d0 # load x3 with value 0x0074e1d0
sw x3, 0(x2) # store 0x0074e1d0 in memory
flh f15, 0(x2) # load 0x0074e1d0 from memory into f15
fnmadd.h f16, f16, f9, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x4dea610d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03a0550b # load x3 with value 0x03a0550b
sw x3, 0(x2) # store 0x03a0550b in memory
flh f17, 0(x2) # load 0x03a0550b from memory into f17
li x3, 0xf1dfc356 # load x3 with value 0xf1dfc356
sw x3, 0(x2) # store 0xf1dfc356 in memory
flh f25, 0(x2) # load 0xf1dfc356 from memory into f25
li x3, 0xc705d65f # load x3 with value 0xc705d65f
sw x3, 0(x2) # store 0xc705d65f in memory
flh f29, 0(x2) # load 0xc705d65f from memory into f29
fnmadd.h f17, f17, f25, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x1ca769c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6445420b # load x3 with value 0x6445420b
sw x3, 0(x2) # store 0x6445420b in memory
flh f18, 0(x2) # load 0x6445420b from memory into f18
li x3, 0x73a561f8 # load x3 with value 0x73a561f8
sw x3, 0(x2) # store 0x73a561f8 in memory
flh f1, 0(x2) # load 0x73a561f8 from memory into f1
li x3, 0xa0861a60 # load x3 with value 0xa0861a60
sw x3, 0(x2) # store 0xa0861a60 in memory
flh f16, 0(x2) # load 0xa0861a60 from memory into f16
fnmadd.h f18, f18, f1, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0xa6b9b7cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc34f77c3 # load x3 with value 0xc34f77c3
sw x3, 0(x2) # store 0xc34f77c3 in memory
flh f19, 0(x2) # load 0xc34f77c3 from memory into f19
li x3, 0x5948189a # load x3 with value 0x5948189a
sw x3, 0(x2) # store 0x5948189a in memory
flh f16, 0(x2) # load 0x5948189a from memory into f16
li x3, 0xf1e8ae67 # load x3 with value 0xf1e8ae67
sw x3, 0(x2) # store 0xf1e8ae67 in memory
flh f13, 0(x2) # load 0xf1e8ae67 from memory into f13
fnmadd.h f19, f19, f16, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x0b73402f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3911720c # load x3 with value 0x3911720c
sw x3, 0(x2) # store 0x3911720c in memory
flh f20, 0(x2) # load 0x3911720c from memory into f20
li x3, 0x0daf8f22 # load x3 with value 0x0daf8f22
sw x3, 0(x2) # store 0x0daf8f22 in memory
flh f16, 0(x2) # load 0x0daf8f22 from memory into f16
li x3, 0xa1263d77 # load x3 with value 0xa1263d77
sw x3, 0(x2) # store 0xa1263d77 in memory
flh f7, 0(x2) # load 0xa1263d77 from memory into f7
fnmadd.h f20, f20, f16, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x48310022 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x30e7862e # load x3 with value 0x30e7862e
sw x3, 0(x2) # store 0x30e7862e in memory
flh f21, 0(x2) # load 0x30e7862e from memory into f21
li x3, 0xd373861c # load x3 with value 0xd373861c
sw x3, 0(x2) # store 0xd373861c in memory
flh f4, 0(x2) # load 0xd373861c from memory into f4
li x3, 0xcbf645c7 # load x3 with value 0xcbf645c7
sw x3, 0(x2) # store 0xcbf645c7 in memory
flh f1, 0(x2) # load 0xcbf645c7 from memory into f1
fnmadd.h f21, f21, f4, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xad53181a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd85fab3d # load x3 with value 0xd85fab3d
sw x3, 0(x2) # store 0xd85fab3d in memory
flh f22, 0(x2) # load 0xd85fab3d from memory into f22
li x3, 0x1df50a76 # load x3 with value 0x1df50a76
sw x3, 0(x2) # store 0x1df50a76 in memory
flh f17, 0(x2) # load 0x1df50a76 from memory into f17
li x3, 0x41c18d34 # load x3 with value 0x41c18d34
sw x3, 0(x2) # store 0x41c18d34 in memory
flh f19, 0(x2) # load 0x41c18d34 from memory into f19
fnmadd.h f22, f22, f17, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xc493e231 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13496aed # load x3 with value 0x13496aed
sw x3, 0(x2) # store 0x13496aed in memory
flh f23, 0(x2) # load 0x13496aed from memory into f23
li x3, 0x5fecd497 # load x3 with value 0x5fecd497
sw x3, 0(x2) # store 0x5fecd497 in memory
flh f1, 0(x2) # load 0x5fecd497 from memory into f1
li x3, 0xdc85b82a # load x3 with value 0xdc85b82a
sw x3, 0(x2) # store 0xdc85b82a in memory
flh f17, 0(x2) # load 0xdc85b82a from memory into f17
fnmadd.h f23, f23, f1, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0xce67edd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d06617c # load x3 with value 0x4d06617c
sw x3, 0(x2) # store 0x4d06617c in memory
flh f24, 0(x2) # load 0x4d06617c from memory into f24
li x3, 0xc3d02ec5 # load x3 with value 0xc3d02ec5
sw x3, 0(x2) # store 0xc3d02ec5 in memory
flh f3, 0(x2) # load 0xc3d02ec5 from memory into f3
li x3, 0x033dce5e # load x3 with value 0x033dce5e
sw x3, 0(x2) # store 0x033dce5e in memory
flh f21, 0(x2) # load 0x033dce5e from memory into f21
fnmadd.h f24, f24, f3, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xa85a2160 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5655054c # load x3 with value 0x5655054c
sw x3, 0(x2) # store 0x5655054c in memory
flh f25, 0(x2) # load 0x5655054c from memory into f25
li x3, 0xffdfd43e # load x3 with value 0xffdfd43e
sw x3, 0(x2) # store 0xffdfd43e in memory
flh f19, 0(x2) # load 0xffdfd43e from memory into f19
li x3, 0xf22e2bec # load x3 with value 0xf22e2bec
sw x3, 0(x2) # store 0xf22e2bec in memory
flh f28, 0(x2) # load 0xf22e2bec from memory into f28
fnmadd.h f25, f25, f19, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x7b5230e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x962229dd # load x3 with value 0x962229dd
sw x3, 0(x2) # store 0x962229dd in memory
flh f26, 0(x2) # load 0x962229dd from memory into f26
li x3, 0xc8940559 # load x3 with value 0xc8940559
sw x3, 0(x2) # store 0xc8940559 in memory
flh f13, 0(x2) # load 0xc8940559 from memory into f13
li x3, 0x3ac95361 # load x3 with value 0x3ac95361
sw x3, 0(x2) # store 0x3ac95361 in memory
flh f21, 0(x2) # load 0x3ac95361 from memory into f21
fnmadd.h f26, f26, f13, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xb1e97f3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5b2ca441 # load x3 with value 0x5b2ca441
sw x3, 0(x2) # store 0x5b2ca441 in memory
flh f27, 0(x2) # load 0x5b2ca441 from memory into f27
li x3, 0x6f991795 # load x3 with value 0x6f991795
sw x3, 0(x2) # store 0x6f991795 in memory
flh f10, 0(x2) # load 0x6f991795 from memory into f10
li x3, 0x64753192 # load x3 with value 0x64753192
sw x3, 0(x2) # store 0x64753192 in memory
flh f21, 0(x2) # load 0x64753192 from memory into f21
fnmadd.h f27, f27, f10, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x2c18549c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93f1adc2 # load x3 with value 0x93f1adc2
sw x3, 0(x2) # store 0x93f1adc2 in memory
flh f28, 0(x2) # load 0x93f1adc2 from memory into f28
li x3, 0x50b68cbf # load x3 with value 0x50b68cbf
sw x3, 0(x2) # store 0x50b68cbf in memory
flh f20, 0(x2) # load 0x50b68cbf from memory into f20
li x3, 0xfee673da # load x3 with value 0xfee673da
sw x3, 0(x2) # store 0xfee673da in memory
flh f13, 0(x2) # load 0xfee673da from memory into f13
fnmadd.h f28, f28, f20, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x208be738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8ba5f736 # load x3 with value 0x8ba5f736
sw x3, 0(x2) # store 0x8ba5f736 in memory
flh f29, 0(x2) # load 0x8ba5f736 from memory into f29
li x3, 0xf3f44b84 # load x3 with value 0xf3f44b84
sw x3, 0(x2) # store 0xf3f44b84 in memory
flh f26, 0(x2) # load 0xf3f44b84 from memory into f26
li x3, 0x93e708cd # load x3 with value 0x93e708cd
sw x3, 0(x2) # store 0x93e708cd in memory
flh f12, 0(x2) # load 0x93e708cd from memory into f12
fnmadd.h f29, f29, f26, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x3ddc09e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d06eee0 # load x3 with value 0x7d06eee0
sw x3, 0(x2) # store 0x7d06eee0 in memory
flh f30, 0(x2) # load 0x7d06eee0 from memory into f30
li x3, 0x6de6373c # load x3 with value 0x6de6373c
sw x3, 0(x2) # store 0x6de6373c in memory
flh f1, 0(x2) # load 0x6de6373c from memory into f1
li x3, 0xd1de5e7e # load x3 with value 0xd1de5e7e
sw x3, 0(x2) # store 0xd1de5e7e in memory
flh f6, 0(x2) # load 0xd1de5e7e from memory into f6
fnmadd.h f30, f30, f1, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xf9230c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52b6cc7c # load x3 with value 0x52b6cc7c
sw x3, 0(x2) # store 0x52b6cc7c in memory
flh f31, 0(x2) # load 0x52b6cc7c from memory into f31
li x3, 0x295d721b # load x3 with value 0x295d721b
sw x3, 0(x2) # store 0x295d721b in memory
flh f16, 0(x2) # load 0x295d721b from memory into f16
li x3, 0x0eb44b01 # load x3 with value 0x0eb44b01
sw x3, 0(x2) # store 0x0eb44b01 in memory
flh f10, 0(x2) # load 0x0eb44b01 from memory into f10
fnmadd.h f31, f31, f16, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xfb74751d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd30f2920 # load x3 with value 0xd30f2920
sw x3, 0(x2) # store 0xd30f2920 in memory
flh f18, 0(x2) # load 0xd30f2920 from memory into f18
li x3, 0xe852fea8 # load x3 with value 0xe852fea8
sw x3, 0(x2) # store 0xe852fea8 in memory
flh f0, 0(x2) # load 0xe852fea8 from memory into f0
li x3, 0x3ecaac75 # load x3 with value 0x3ecaac75
sw x3, 0(x2) # store 0x3ecaac75 in memory
flh f27, 0(x2) # load 0x3ecaac75 from memory into f27
fnmadd.h f0, f18, f0, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xa1919894 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd70765c # load x3 with value 0xbd70765c
sw x3, 0(x2) # store 0xbd70765c in memory
flh f26, 0(x2) # load 0xbd70765c from memory into f26
li x3, 0xf6790630 # load x3 with value 0xf6790630
sw x3, 0(x2) # store 0xf6790630 in memory
flh f1, 0(x2) # load 0xf6790630 from memory into f1
li x3, 0x124a89f9 # load x3 with value 0x124a89f9
sw x3, 0(x2) # store 0x124a89f9 in memory
flh f15, 0(x2) # load 0x124a89f9 from memory into f15
fnmadd.h f1, f26, f1, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x17e2df37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac3edf8b # load x3 with value 0xac3edf8b
sw x3, 0(x2) # store 0xac3edf8b in memory
flh f30, 0(x2) # load 0xac3edf8b from memory into f30
li x3, 0xca60d197 # load x3 with value 0xca60d197
sw x3, 0(x2) # store 0xca60d197 in memory
flh f2, 0(x2) # load 0xca60d197 from memory into f2
li x3, 0x9397049c # load x3 with value 0x9397049c
sw x3, 0(x2) # store 0x9397049c in memory
flh f20, 0(x2) # load 0x9397049c from memory into f20
fnmadd.h f2, f30, f2, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0xc8f777aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec4d7dc1 # load x3 with value 0xec4d7dc1
sw x3, 0(x2) # store 0xec4d7dc1 in memory
flh f15, 0(x2) # load 0xec4d7dc1 from memory into f15
li x3, 0xc53d3b05 # load x3 with value 0xc53d3b05
sw x3, 0(x2) # store 0xc53d3b05 in memory
flh f3, 0(x2) # load 0xc53d3b05 from memory into f3
li x3, 0x03b5fa5e # load x3 with value 0x03b5fa5e
sw x3, 0(x2) # store 0x03b5fa5e in memory
flh f28, 0(x2) # load 0x03b5fa5e from memory into f28
fnmadd.h f3, f15, f3, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xe55cf657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xafc1a4b6 # load x3 with value 0xafc1a4b6
sw x3, 0(x2) # store 0xafc1a4b6 in memory
flh f18, 0(x2) # load 0xafc1a4b6 from memory into f18
li x3, 0x32c38c10 # load x3 with value 0x32c38c10
sw x3, 0(x2) # store 0x32c38c10 in memory
flh f4, 0(x2) # load 0x32c38c10 from memory into f4
li x3, 0x17e16d96 # load x3 with value 0x17e16d96
sw x3, 0(x2) # store 0x17e16d96 in memory
flh f3, 0(x2) # load 0x17e16d96 from memory into f3
fnmadd.h f4, f18, f4, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x0a4d836f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xefa8197e # load x3 with value 0xefa8197e
sw x3, 0(x2) # store 0xefa8197e in memory
flh f27, 0(x2) # load 0xefa8197e from memory into f27
li x3, 0xaa42a27a # load x3 with value 0xaa42a27a
sw x3, 0(x2) # store 0xaa42a27a in memory
flh f5, 0(x2) # load 0xaa42a27a from memory into f5
li x3, 0x2084e19c # load x3 with value 0x2084e19c
sw x3, 0(x2) # store 0x2084e19c in memory
flh f7, 0(x2) # load 0x2084e19c from memory into f7
fnmadd.h f5, f27, f5, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x948db9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a222591 # load x3 with value 0x3a222591
sw x3, 0(x2) # store 0x3a222591 in memory
flh f16, 0(x2) # load 0x3a222591 from memory into f16
li x3, 0xfea9edae # load x3 with value 0xfea9edae
sw x3, 0(x2) # store 0xfea9edae in memory
flh f6, 0(x2) # load 0xfea9edae from memory into f6
li x3, 0x50c8683a # load x3 with value 0x50c8683a
sw x3, 0(x2) # store 0x50c8683a in memory
flh f6, 0(x2) # load 0x50c8683a from memory into f6
fnmadd.h f6, f16, f6, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x2764c074 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2e34d37f # load x3 with value 0x2e34d37f
sw x3, 0(x2) # store 0x2e34d37f in memory
flh f5, 0(x2) # load 0x2e34d37f from memory into f5
li x3, 0xb3864546 # load x3 with value 0xb3864546
sw x3, 0(x2) # store 0xb3864546 in memory
flh f7, 0(x2) # load 0xb3864546 from memory into f7
li x3, 0x74063271 # load x3 with value 0x74063271
sw x3, 0(x2) # store 0x74063271 in memory
flh f17, 0(x2) # load 0x74063271 from memory into f17
fnmadd.h f7, f5, f7, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x443ddd04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbffafa5b # load x3 with value 0xbffafa5b
sw x3, 0(x2) # store 0xbffafa5b in memory
flh f4, 0(x2) # load 0xbffafa5b from memory into f4
li x3, 0xdbf4deaf # load x3 with value 0xdbf4deaf
sw x3, 0(x2) # store 0xdbf4deaf in memory
flh f8, 0(x2) # load 0xdbf4deaf from memory into f8
li x3, 0x276ba214 # load x3 with value 0x276ba214
sw x3, 0(x2) # store 0x276ba214 in memory
flh f7, 0(x2) # load 0x276ba214 from memory into f7
fnmadd.h f8, f4, f8, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xb76a1505 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf99d97b0 # load x3 with value 0xf99d97b0
sw x3, 0(x2) # store 0xf99d97b0 in memory
flh f4, 0(x2) # load 0xf99d97b0 from memory into f4
li x3, 0x99dab034 # load x3 with value 0x99dab034
sw x3, 0(x2) # store 0x99dab034 in memory
flh f9, 0(x2) # load 0x99dab034 from memory into f9
li x3, 0xc61035ff # load x3 with value 0xc61035ff
sw x3, 0(x2) # store 0xc61035ff in memory
flh f16, 0(x2) # load 0xc61035ff from memory into f16
fnmadd.h f9, f4, f9, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xc8348508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x292a432a # load x3 with value 0x292a432a
sw x3, 0(x2) # store 0x292a432a in memory
flh f14, 0(x2) # load 0x292a432a from memory into f14
li x3, 0x63bd2927 # load x3 with value 0x63bd2927
sw x3, 0(x2) # store 0x63bd2927 in memory
flh f10, 0(x2) # load 0x63bd2927 from memory into f10
li x3, 0xb98650a1 # load x3 with value 0xb98650a1
sw x3, 0(x2) # store 0xb98650a1 in memory
flh f6, 0(x2) # load 0xb98650a1 from memory into f6
fnmadd.h f10, f14, f10, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x819fd833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8fb930f # load x3 with value 0xe8fb930f
sw x3, 0(x2) # store 0xe8fb930f in memory
flh f10, 0(x2) # load 0xe8fb930f from memory into f10
li x3, 0xfe667932 # load x3 with value 0xfe667932
sw x3, 0(x2) # store 0xfe667932 in memory
flh f11, 0(x2) # load 0xfe667932 from memory into f11
li x3, 0x50837398 # load x3 with value 0x50837398
sw x3, 0(x2) # store 0x50837398 in memory
flh f17, 0(x2) # load 0x50837398 from memory into f17
fnmadd.h f11, f10, f11, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x50d2687d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89d8c480 # load x3 with value 0x89d8c480
sw x3, 0(x2) # store 0x89d8c480 in memory
flh f14, 0(x2) # load 0x89d8c480 from memory into f14
li x3, 0x38a87596 # load x3 with value 0x38a87596
sw x3, 0(x2) # store 0x38a87596 in memory
flh f12, 0(x2) # load 0x38a87596 from memory into f12
li x3, 0xd5261523 # load x3 with value 0xd5261523
sw x3, 0(x2) # store 0xd5261523 in memory
flh f2, 0(x2) # load 0xd5261523 from memory into f2
fnmadd.h f12, f14, f12, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xb37d042f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7cb2b20a # load x3 with value 0x7cb2b20a
sw x3, 0(x2) # store 0x7cb2b20a in memory
flh f3, 0(x2) # load 0x7cb2b20a from memory into f3
li x3, 0xf4cca9ce # load x3 with value 0xf4cca9ce
sw x3, 0(x2) # store 0xf4cca9ce in memory
flh f13, 0(x2) # load 0xf4cca9ce from memory into f13
li x3, 0xe24a943b # load x3 with value 0xe24a943b
sw x3, 0(x2) # store 0xe24a943b in memory
flh f25, 0(x2) # load 0xe24a943b from memory into f25
fnmadd.h f13, f3, f13, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xb9a3ead4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6352a6a9 # load x3 with value 0x6352a6a9
sw x3, 0(x2) # store 0x6352a6a9 in memory
flh f16, 0(x2) # load 0x6352a6a9 from memory into f16
li x3, 0x414aba57 # load x3 with value 0x414aba57
sw x3, 0(x2) # store 0x414aba57 in memory
flh f14, 0(x2) # load 0x414aba57 from memory into f14
li x3, 0x0201aebf # load x3 with value 0x0201aebf
sw x3, 0(x2) # store 0x0201aebf in memory
flh f25, 0(x2) # load 0x0201aebf from memory into f25
fnmadd.h f14, f16, f14, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x9d94f46b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1882a09d # load x3 with value 0x1882a09d
sw x3, 0(x2) # store 0x1882a09d in memory
flh f14, 0(x2) # load 0x1882a09d from memory into f14
li x3, 0xa53b0d80 # load x3 with value 0xa53b0d80
sw x3, 0(x2) # store 0xa53b0d80 in memory
flh f15, 0(x2) # load 0xa53b0d80 from memory into f15
li x3, 0xce1654f8 # load x3 with value 0xce1654f8
sw x3, 0(x2) # store 0xce1654f8 in memory
flh f13, 0(x2) # load 0xce1654f8 from memory into f13
fnmadd.h f15, f14, f15, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x532ccb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ef77000 # load x3 with value 0x2ef77000
sw x3, 0(x2) # store 0x2ef77000 in memory
flh f31, 0(x2) # load 0x2ef77000 from memory into f31
li x3, 0xf93764a5 # load x3 with value 0xf93764a5
sw x3, 0(x2) # store 0xf93764a5 in memory
flh f16, 0(x2) # load 0xf93764a5 from memory into f16
li x3, 0x0eac7248 # load x3 with value 0x0eac7248
sw x3, 0(x2) # store 0x0eac7248 in memory
flh f17, 0(x2) # load 0x0eac7248 from memory into f17
fnmadd.h f16, f31, f16, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x625c8055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f826269 # load x3 with value 0x6f826269
sw x3, 0(x2) # store 0x6f826269 in memory
flh f31, 0(x2) # load 0x6f826269 from memory into f31
li x3, 0x642db949 # load x3 with value 0x642db949
sw x3, 0(x2) # store 0x642db949 in memory
flh f17, 0(x2) # load 0x642db949 from memory into f17
li x3, 0xa0aafe49 # load x3 with value 0xa0aafe49
sw x3, 0(x2) # store 0xa0aafe49 in memory
flh f13, 0(x2) # load 0xa0aafe49 from memory into f13
fnmadd.h f17, f31, f17, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x95621a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d445f12 # load x3 with value 0x4d445f12
sw x3, 0(x2) # store 0x4d445f12 in memory
flh f7, 0(x2) # load 0x4d445f12 from memory into f7
li x3, 0xe1ffdb10 # load x3 with value 0xe1ffdb10
sw x3, 0(x2) # store 0xe1ffdb10 in memory
flh f18, 0(x2) # load 0xe1ffdb10 from memory into f18
li x3, 0xeb637bd8 # load x3 with value 0xeb637bd8
sw x3, 0(x2) # store 0xeb637bd8 in memory
flh f12, 0(x2) # load 0xeb637bd8 from memory into f12
fnmadd.h f18, f7, f18, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xa5194b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6754cd5d # load x3 with value 0x6754cd5d
sw x3, 0(x2) # store 0x6754cd5d in memory
flh f10, 0(x2) # load 0x6754cd5d from memory into f10
li x3, 0x4641f1fd # load x3 with value 0x4641f1fd
sw x3, 0(x2) # store 0x4641f1fd in memory
flh f19, 0(x2) # load 0x4641f1fd from memory into f19
li x3, 0xfae0bd69 # load x3 with value 0xfae0bd69
sw x3, 0(x2) # store 0xfae0bd69 in memory
flh f1, 0(x2) # load 0xfae0bd69 from memory into f1
fnmadd.h f19, f10, f19, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x4f38f1d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55c9e330 # load x3 with value 0x55c9e330
sw x3, 0(x2) # store 0x55c9e330 in memory
flh f30, 0(x2) # load 0x55c9e330 from memory into f30
li x3, 0x1b31c965 # load x3 with value 0x1b31c965
sw x3, 0(x2) # store 0x1b31c965 in memory
flh f20, 0(x2) # load 0x1b31c965 from memory into f20
li x3, 0xbe061738 # load x3 with value 0xbe061738
sw x3, 0(x2) # store 0xbe061738 in memory
flh f6, 0(x2) # load 0xbe061738 from memory into f6
fnmadd.h f20, f30, f20, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x1bfed68c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d53bc57 # load x3 with value 0x2d53bc57
sw x3, 0(x2) # store 0x2d53bc57 in memory
flh f22, 0(x2) # load 0x2d53bc57 from memory into f22
li x3, 0xbd0ae82f # load x3 with value 0xbd0ae82f
sw x3, 0(x2) # store 0xbd0ae82f in memory
flh f21, 0(x2) # load 0xbd0ae82f from memory into f21
li x3, 0x47b887c2 # load x3 with value 0x47b887c2
sw x3, 0(x2) # store 0x47b887c2 in memory
flh f14, 0(x2) # load 0x47b887c2 from memory into f14
fnmadd.h f21, f22, f21, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x34977730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0dbd927a # load x3 with value 0x0dbd927a
sw x3, 0(x2) # store 0x0dbd927a in memory
flh f6, 0(x2) # load 0x0dbd927a from memory into f6
li x3, 0xdeb9a7b9 # load x3 with value 0xdeb9a7b9
sw x3, 0(x2) # store 0xdeb9a7b9 in memory
flh f22, 0(x2) # load 0xdeb9a7b9 from memory into f22
li x3, 0xbb04459b # load x3 with value 0xbb04459b
sw x3, 0(x2) # store 0xbb04459b in memory
flh f12, 0(x2) # load 0xbb04459b from memory into f12
fnmadd.h f22, f6, f22, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x01e8d116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5cc667c8 # load x3 with value 0x5cc667c8
sw x3, 0(x2) # store 0x5cc667c8 in memory
flh f20, 0(x2) # load 0x5cc667c8 from memory into f20
li x3, 0x9184e938 # load x3 with value 0x9184e938
sw x3, 0(x2) # store 0x9184e938 in memory
flh f23, 0(x2) # load 0x9184e938 from memory into f23
li x3, 0x3079c4ff # load x3 with value 0x3079c4ff
sw x3, 0(x2) # store 0x3079c4ff in memory
flh f19, 0(x2) # load 0x3079c4ff from memory into f19
fnmadd.h f23, f20, f23, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xea7e9f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x827a1429 # load x3 with value 0x827a1429
sw x3, 0(x2) # store 0x827a1429 in memory
flh f6, 0(x2) # load 0x827a1429 from memory into f6
li x3, 0xe011aad1 # load x3 with value 0xe011aad1
sw x3, 0(x2) # store 0xe011aad1 in memory
flh f24, 0(x2) # load 0xe011aad1 from memory into f24
li x3, 0x666b806f # load x3 with value 0x666b806f
sw x3, 0(x2) # store 0x666b806f in memory
flh f1, 0(x2) # load 0x666b806f from memory into f1
fnmadd.h f24, f6, f24, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xb2d45e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6cc0ffec # load x3 with value 0x6cc0ffec
sw x3, 0(x2) # store 0x6cc0ffec in memory
flh f15, 0(x2) # load 0x6cc0ffec from memory into f15
li x3, 0x7055ed0e # load x3 with value 0x7055ed0e
sw x3, 0(x2) # store 0x7055ed0e in memory
flh f25, 0(x2) # load 0x7055ed0e from memory into f25
li x3, 0x6b44fd33 # load x3 with value 0x6b44fd33
sw x3, 0(x2) # store 0x6b44fd33 in memory
flh f28, 0(x2) # load 0x6b44fd33 from memory into f28
fnmadd.h f25, f15, f25, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x6b4ac1e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6745722 # load x3 with value 0xf6745722
sw x3, 0(x2) # store 0xf6745722 in memory
flh f17, 0(x2) # load 0xf6745722 from memory into f17
li x3, 0x2b2a7ee1 # load x3 with value 0x2b2a7ee1
sw x3, 0(x2) # store 0x2b2a7ee1 in memory
flh f26, 0(x2) # load 0x2b2a7ee1 from memory into f26
li x3, 0x3ce64804 # load x3 with value 0x3ce64804
sw x3, 0(x2) # store 0x3ce64804 in memory
flh f6, 0(x2) # load 0x3ce64804 from memory into f6
fnmadd.h f26, f17, f26, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xdb056281 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x471c52ee # load x3 with value 0x471c52ee
sw x3, 0(x2) # store 0x471c52ee in memory
flh f3, 0(x2) # load 0x471c52ee from memory into f3
li x3, 0x4076d352 # load x3 with value 0x4076d352
sw x3, 0(x2) # store 0x4076d352 in memory
flh f27, 0(x2) # load 0x4076d352 from memory into f27
li x3, 0x8a4cd384 # load x3 with value 0x8a4cd384
sw x3, 0(x2) # store 0x8a4cd384 in memory
flh f8, 0(x2) # load 0x8a4cd384 from memory into f8
fnmadd.h f27, f3, f27, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x51d4f319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29faad16 # load x3 with value 0x29faad16
sw x3, 0(x2) # store 0x29faad16 in memory
flh f14, 0(x2) # load 0x29faad16 from memory into f14
li x3, 0x0494b478 # load x3 with value 0x0494b478
sw x3, 0(x2) # store 0x0494b478 in memory
flh f28, 0(x2) # load 0x0494b478 from memory into f28
li x3, 0x010e56ca # load x3 with value 0x010e56ca
sw x3, 0(x2) # store 0x010e56ca in memory
flh f31, 0(x2) # load 0x010e56ca from memory into f31
fnmadd.h f28, f14, f28, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x8c06b217 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd89ed99 # load x3 with value 0xbd89ed99
sw x3, 0(x2) # store 0xbd89ed99 in memory
flh f4, 0(x2) # load 0xbd89ed99 from memory into f4
li x3, 0x02ed586c # load x3 with value 0x02ed586c
sw x3, 0(x2) # store 0x02ed586c in memory
flh f29, 0(x2) # load 0x02ed586c from memory into f29
li x3, 0x480fe03c # load x3 with value 0x480fe03c
sw x3, 0(x2) # store 0x480fe03c in memory
flh f31, 0(x2) # load 0x480fe03c from memory into f31
fnmadd.h f29, f4, f29, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xdde2a176 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf02e7cbd # load x3 with value 0xf02e7cbd
sw x3, 0(x2) # store 0xf02e7cbd in memory
flh f6, 0(x2) # load 0xf02e7cbd from memory into f6
li x3, 0x3e9e9284 # load x3 with value 0x3e9e9284
sw x3, 0(x2) # store 0x3e9e9284 in memory
flh f30, 0(x2) # load 0x3e9e9284 from memory into f30
li x3, 0xeb35e31a # load x3 with value 0xeb35e31a
sw x3, 0(x2) # store 0xeb35e31a in memory
flh f3, 0(x2) # load 0xeb35e31a from memory into f3
fnmadd.h f30, f6, f30, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x4ab7edcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a759aea # load x3 with value 0x9a759aea
sw x3, 0(x2) # store 0x9a759aea in memory
flh f3, 0(x2) # load 0x9a759aea from memory into f3
li x3, 0x45bcb73a # load x3 with value 0x45bcb73a
sw x3, 0(x2) # store 0x45bcb73a in memory
flh f31, 0(x2) # load 0x45bcb73a from memory into f31
li x3, 0x7a23e897 # load x3 with value 0x7a23e897
sw x3, 0(x2) # store 0x7a23e897 in memory
flh f22, 0(x2) # load 0x7a23e897 from memory into f22
fnmadd.h f31, f3, f31, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x4, 0x902b97a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xa472133a # load x3 with value 0xa472133a
sw x3, 0(x2) # store 0xa472133a in memory
flh f22, 0(x2) # load 0xa472133a from memory into f22
li x3, 0xc444d961 # load x3 with value 0xc444d961
sw x3, 0(x2) # store 0xc444d961 in memory
flh f10, 0(x2) # load 0xc444d961 from memory into f10
fnmadd.h f4, f18, f22, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000)
li x29, 0x830dbfb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
li x3, 0x7ae904a1 # load x3 with value 0x7ae904a1
sw x3, 0(x2) # store 0x7ae904a1 in memory
flh f14, 0(x2) # load 0x7ae904a1 from memory into f14
li x3, 0x2276fdc8 # load x3 with value 0x2276fdc8
sw x3, 0(x2) # store 0x2276fdc8 in memory
flh f19, 0(x2) # load 0x2276fdc8 from memory into f19
fnmadd.h f29, f24, f14, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3c00)
li x5, 0xe4d51d71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0x7ba67152 # load x3 with value 0x7ba67152
sw x3, 0(x2) # store 0x7ba67152 in memory
flh f8, 0(x2) # load 0x7ba67152 from memory into f8
li x3, 0x20889e51 # load x3 with value 0x20889e51
sw x3, 0(x2) # store 0x20889e51 in memory
flh f27, 0(x2) # load 0x20889e51 from memory into f27
fnmadd.h f5, f26, f8, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbc00)
li x9, 0x1610ec38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0x819d8eb8 # load x3 with value 0x819d8eb8
sw x3, 0(x2) # store 0x819d8eb8 in memory
flh f13, 0(x2) # load 0x819d8eb8 from memory into f13
li x3, 0x19251e60 # load x3 with value 0x19251e60
sw x3, 0(x2) # store 0x19251e60 in memory
flh f26, 0(x2) # load 0x19251e60 from memory into f26
fnmadd.h f9, f7, f13, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3e00)
li x20, 0x4664a2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
li x3, 0x89344ac2 # load x3 with value 0x89344ac2
sw x3, 0(x2) # store 0x89344ac2 in memory
flh f12, 0(x2) # load 0x89344ac2 from memory into f12
li x3, 0x6188dd62 # load x3 with value 0x6188dd62
sw x3, 0(x2) # store 0x6188dd62 in memory
flh f2, 0(x2) # load 0x6188dd62 from memory into f2
fnmadd.h f20, f1, f12, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbe00)
li x31, 0xb6574bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
li x3, 0x59ccf678 # load x3 with value 0x59ccf678
sw x3, 0(x2) # store 0x59ccf678 in memory
flh f18, 0(x2) # load 0x59ccf678 from memory into f18
li x3, 0x306c69b0 # load x3 with value 0x306c69b0
sw x3, 0(x2) # store 0x306c69b0 in memory
flh f1, 0(x2) # load 0x306c69b0 from memory into f1
fnmadd.h f31, f9, f18, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000)
li x30, 0xd5591a0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x5d9fb5aa # load x3 with value 0x5d9fb5aa
sw x3, 0(x2) # store 0x5d9fb5aa in memory
flh f7, 0(x2) # load 0x5d9fb5aa from memory into f7
li x3, 0x87e878c2 # load x3 with value 0x87e878c2
sw x3, 0(x2) # store 0x87e878c2 in memory
flh f26, 0(x2) # load 0x87e878c2 from memory into f26
fnmadd.h f30, f5, f7, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000)
li x22, 0x675bcb2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
li x3, 0x56c67a41 # load x3 with value 0x56c67a41
sw x3, 0(x2) # store 0x56c67a41 in memory
flh f5, 0(x2) # load 0x56c67a41 from memory into f5
li x3, 0xeb32d65f # load x3 with value 0xeb32d65f
sw x3, 0(x2) # store 0xeb32d65f in memory
flh f10, 0(x2) # load 0xeb32d65f from memory into f10
fnmadd.h f22, f1, f5, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400)
li x29, 0xb157bf94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0xda1c0715 # load x3 with value 0xda1c0715
sw x3, 0(x2) # store 0xda1c0715 in memory
flh f31, 0(x2) # load 0xda1c0715 from memory into f31
li x3, 0x19c3a215 # load x3 with value 0x19c3a215
sw x3, 0(x2) # store 0x19c3a215 in memory
flh f10, 0(x2) # load 0x19c3a215 from memory into f10
fnmadd.h f29, f7, f31, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8400)
li x9, 0xcb696bbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x6a0bef57 # load x3 with value 0x6a0bef57
sw x3, 0(x2) # store 0x6a0bef57 in memory
flh f2, 0(x2) # load 0x6a0bef57 from memory into f2
li x3, 0x48b2105f # load x3 with value 0x48b2105f
sw x3, 0(x2) # store 0x48b2105f in memory
flh f1, 0(x2) # load 0x48b2105f from memory into f1
fnmadd.h f9, f24, f2, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7bff)
li x27, 0xf6363b33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
li x3, 0x902867d6 # load x3 with value 0x902867d6
sw x3, 0(x2) # store 0x902867d6 in memory
flh f20, 0(x2) # load 0x902867d6 from memory into f20
li x3, 0x216fce7b # load x3 with value 0x216fce7b
sw x3, 0(x2) # store 0x216fce7b in memory
flh f9, 0(x2) # load 0x216fce7b from memory into f9
fnmadd.h f27, f2, f20, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfbff)
li x30, 0xd7cc06fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
li x3, 0x9f166e4f # load x3 with value 0x9f166e4f
sw x3, 0(x2) # store 0x9f166e4f in memory
flh f27, 0(x2) # load 0x9f166e4f from memory into f27
li x3, 0xd45406f3 # load x3 with value 0xd45406f3
sw x3, 0(x2) # store 0xd45406f3 in memory
flh f25, 0(x2) # load 0xd45406f3 from memory into f25
fnmadd.h f30, f17, f27, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff)
li x30, 0xb07e3b65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
li x3, 0xd4e802fd # load x3 with value 0xd4e802fd
sw x3, 0(x2) # store 0xd4e802fd in memory
flh f16, 0(x2) # load 0xd4e802fd from memory into f16
li x3, 0x8b21041b # load x3 with value 0x8b21041b
sw x3, 0(x2) # store 0x8b21041b in memory
flh f8, 0(x2) # load 0x8b21041b from memory into f8
fnmadd.h f30, f27, f16, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x83ff)
li x5, 0xba1e63cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0xac5a14f4 # load x3 with value 0xac5a14f4
sw x3, 0(x2) # store 0xac5a14f4 in memory
flh f19, 0(x2) # load 0xac5a14f4 from memory into f19
li x3, 0x2792b182 # load x3 with value 0x2792b182
sw x3, 0(x2) # store 0x2792b182 in memory
flh f22, 0(x2) # load 0x2792b182 from memory into f22
fnmadd.h f5, f20, f19, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x200)
li x25, 0x040b328d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0xfe369dd2 # load x3 with value 0xfe369dd2
sw x3, 0(x2) # store 0xfe369dd2 in memory
flh f5, 0(x2) # load 0xfe369dd2 from memory into f5
li x3, 0xde1da293 # load x3 with value 0xde1da293
sw x3, 0(x2) # store 0xde1da293 in memory
flh f20, 0(x2) # load 0xde1da293 from memory into f20
fnmadd.h f25, f19, f5, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8200)
li x12, 0xd548fe07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
li x3, 0x118160c1 # load x3 with value 0x118160c1
sw x3, 0(x2) # store 0x118160c1 in memory
flh f3, 0(x2) # load 0x118160c1 from memory into f3
li x3, 0xaa215cc7 # load x3 with value 0xaa215cc7
sw x3, 0(x2) # store 0xaa215cc7 in memory
flh f5, 0(x2) # load 0xaa215cc7 from memory into f5
fnmadd.h f12, f2, f3, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x6, 0x2886e550 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xb0383420 # load x3 with value 0xb0383420
sw x3, 0(x2) # store 0xb0383420 in memory
flh f25, 0(x2) # load 0xb0383420 from memory into f25
li x3, 0x48cd8471 # load x3 with value 0x48cd8471
sw x3, 0(x2) # store 0x48cd8471 in memory
flh f15, 0(x2) # load 0x48cd8471 from memory into f15
fnmadd.h f6, f7, f25, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8001)
li x23, 0xde9a26ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
li x3, 0xd14a59e4 # load x3 with value 0xd14a59e4
sw x3, 0(x2) # store 0xd14a59e4 in memory
flh f2, 0(x2) # load 0xd14a59e4 from memory into f2
li x3, 0xa0d3f9a2 # load x3 with value 0xa0d3f9a2
sw x3, 0(x2) # store 0xa0d3f9a2 in memory
flh f21, 0(x2) # load 0xa0d3f9a2 from memory into f21
fnmadd.h f23, f6, f2, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c00)
li x17, 0xc71ec384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
li x3, 0x8a47ba39 # load x3 with value 0x8a47ba39
sw x3, 0(x2) # store 0x8a47ba39 in memory
flh f15, 0(x2) # load 0x8a47ba39 from memory into f15
li x3, 0x59be2ea5 # load x3 with value 0x59be2ea5
sw x3, 0(x2) # store 0x59be2ea5 in memory
flh f6, 0(x2) # load 0x59be2ea5 from memory into f6
fnmadd.h f17, f26, f15, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc00)
li x15, 0xf4a6752b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0xab24cfbb # load x3 with value 0xab24cfbb
sw x3, 0(x2) # store 0xab24cfbb in memory
flh f31, 0(x2) # load 0xab24cfbb from memory into f31
li x3, 0xf0e524d5 # load x3 with value 0xf0e524d5
sw x3, 0(x2) # store 0xf0e524d5 in memory
flh f27, 0(x2) # load 0xf0e524d5 from memory into f27
fnmadd.h f15, f19, f31, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7e00)
li x10, 0x30b7a3aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0xe6b67cc2 # load x3 with value 0xe6b67cc2
sw x3, 0(x2) # store 0xe6b67cc2 in memory
flh f31, 0(x2) # load 0xe6b67cc2 from memory into f31
li x3, 0x11ef4bc0 # load x3 with value 0x11ef4bc0
sw x3, 0(x2) # store 0x11ef4bc0 in memory
flh f1, 0(x2) # load 0x11ef4bc0 from memory into f1
fnmadd.h f10, f26, f31, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fff)
li x9, 0x2d37db52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x9eb7b5d5 # load x3 with value 0x9eb7b5d5
sw x3, 0(x2) # store 0x9eb7b5d5 in memory
flh f28, 0(x2) # load 0x9eb7b5d5 from memory into f28
li x3, 0x01feba4b # load x3 with value 0x01feba4b
sw x3, 0(x2) # store 0x01feba4b in memory
flh f16, 0(x2) # load 0x01feba4b from memory into f16
fnmadd.h f9, f5, f28, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c01)
li x9, 0xc7fc639c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0xb7e90f9e # load x3 with value 0xb7e90f9e
sw x3, 0(x2) # store 0xb7e90f9e in memory
flh f3, 0(x2) # load 0xb7e90f9e from memory into f3
li x3, 0x26e257e5 # load x3 with value 0x26e257e5
sw x3, 0(x2) # store 0x26e257e5 in memory
flh f26, 0(x2) # load 0x26e257e5 from memory into f26
fnmadd.h f9, f15, f3, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7dff)
li x5, 0x5373d159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x8457cb15 # load x3 with value 0x8457cb15
sw x3, 0(x2) # store 0x8457cb15 in memory
flh f8, 0(x2) # load 0x8457cb15 from memory into f8
li x3, 0xffd201bc # load x3 with value 0xffd201bc
sw x3, 0(x2) # store 0xffd201bc in memory
flh f10, 0(x2) # load 0xffd201bc from memory into f10
fnmadd.h f5, f28, f8, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x58b4)
li x16, 0xd4df2be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0x5e5c9781 # load x3 with value 0x5e5c9781
sw x3, 0(x2) # store 0x5e5c9781 in memory
flh f13, 0(x2) # load 0x5e5c9781 from memory into f13
li x3, 0x9eb5075b # load x3 with value 0x9eb5075b
sw x3, 0(x2) # store 0x9eb5075b in memory
flh f23, 0(x2) # load 0x9eb5075b from memory into f23
fnmadd.h f16, f25, f13, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc93a)
li x11, 0xab3626e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
li x3, 0x8682d1a6 # load x3 with value 0x8682d1a6
sw x3, 0(x2) # store 0x8682d1a6 in memory
flh f9, 0(x2) # load 0x8682d1a6 from memory into f9
li x3, 0x859bffac # load x3 with value 0x859bffac
sw x3, 0(x2) # store 0x859bffac in memory
flh f6, 0(x2) # load 0x859bffac from memory into f6
fnmadd.h f11, f31, f9, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x7, 0xe38076d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf1a98d7 # load x3 with value 0xcf1a98d7
sw x3, 0(x2) # store 0xcf1a98d7 in memory
flh f12, 0(x2) # load 0xcf1a98d7 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x42261903 # load x3 with value 0x42261903
sw x3, 0(x2) # store 0x42261903 in memory
flh f24, 0(x2) # load 0x42261903 from memory into f24
fnmadd.h f7, f12, f19, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000)
li x3, 0x31c82b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37af96ca # load x3 with value 0x37af96ca
sw x3, 0(x2) # store 0x37af96ca in memory
flh f17, 0(x2) # load 0x37af96ca from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
li x3, 0xc271c739 # load x3 with value 0xc271c739
sw x3, 0(x2) # store 0xc271c739 in memory
flh f28, 0(x2) # load 0xc271c739 from memory into f28
fnmadd.h f3, f17, f23, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3c00)
li x4, 0xe3be3641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca68a934 # load x3 with value 0xca68a934
sw x3, 0(x2) # store 0xca68a934 in memory
flh f5, 0(x2) # load 0xca68a934 from memory into f5
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
li x3, 0x0d30679a # load x3 with value 0x0d30679a
sw x3, 0(x2) # store 0x0d30679a in memory
flh f14, 0(x2) # load 0x0d30679a from memory into f14
fnmadd.h f4, f5, f8, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbc00)
li x5, 0xcc1b2ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd681d558 # load x3 with value 0xd681d558
sw x3, 0(x2) # store 0xd681d558 in memory
flh f31, 0(x2) # load 0xd681d558 from memory into f31
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
li x3, 0x8d155aeb # load x3 with value 0x8d155aeb
sw x3, 0(x2) # store 0x8d155aeb in memory
flh f27, 0(x2) # load 0x8d155aeb from memory into f27
fnmadd.h f5, f31, f23, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3e00)
li x21, 0xfd7e77ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54be20ff # load x3 with value 0x54be20ff
sw x3, 0(x2) # store 0x54be20ff in memory
flh f22, 0(x2) # load 0x54be20ff from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
li x3, 0x82caccb7 # load x3 with value 0x82caccb7
sw x3, 0(x2) # store 0x82caccb7 in memory
flh f9, 0(x2) # load 0x82caccb7 from memory into f9
fnmadd.h f21, f22, f28, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbe00)
li x26, 0xa5fdef7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe41645d8 # load x3 with value 0xe41645d8
sw x3, 0(x2) # store 0xe41645d8 in memory
flh f17, 0(x2) # load 0xe41645d8 from memory into f17
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0xa0371d40 # load x3 with value 0xa0371d40
sw x3, 0(x2) # store 0xa0371d40 in memory
flh f18, 0(x2) # load 0xa0371d40 from memory into f18
fnmadd.h f26, f17, f11, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000)
li x1, 0x1dd955ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x507048ec # load x3 with value 0x507048ec
sw x3, 0(x2) # store 0x507048ec in memory
flh f29, 0(x2) # load 0x507048ec from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
li x3, 0x36fa5d77 # load x3 with value 0x36fa5d77
sw x3, 0(x2) # store 0x36fa5d77 in memory
flh f17, 0(x2) # load 0x36fa5d77 from memory into f17
fnmadd.h f1, f29, f7, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000)
li x31, 0x492f0768 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad1ea6b6 # load x3 with value 0xad1ea6b6
sw x3, 0(x2) # store 0xad1ea6b6 in memory
flh f22, 0(x2) # load 0xad1ea6b6 from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0xdccd9271 # load x3 with value 0xdccd9271
sw x3, 0(x2) # store 0xdccd9271 in memory
flh f15, 0(x2) # load 0xdccd9271 from memory into f15
fnmadd.h f31, f22, f10, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400)
li x22, 0x1b6941ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9567c57e # load x3 with value 0x9567c57e
sw x3, 0(x2) # store 0x9567c57e in memory
flh f24, 0(x2) # load 0x9567c57e from memory into f24
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
li x3, 0xb21874ec # load x3 with value 0xb21874ec
sw x3, 0(x2) # store 0xb21874ec in memory
flh f20, 0(x2) # load 0xb21874ec from memory into f20
fnmadd.h f22, f24, f2, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8400)
li x13, 0x63ed644a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10984a8b # load x3 with value 0x10984a8b
sw x3, 0(x2) # store 0x10984a8b in memory
flh f17, 0(x2) # load 0x10984a8b from memory into f17
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0x81067ac4 # load x3 with value 0x81067ac4
sw x3, 0(x2) # store 0x81067ac4 in memory
flh f29, 0(x2) # load 0x81067ac4 from memory into f29
fnmadd.h f13, f17, f9, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7bff)
li x6, 0xb8b3545d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf418dc9f # load x3 with value 0xf418dc9f
sw x3, 0(x2) # store 0xf418dc9f in memory
flh f14, 0(x2) # load 0xf418dc9f from memory into f14
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
li x3, 0xce1c21b9 # load x3 with value 0xce1c21b9
sw x3, 0(x2) # store 0xce1c21b9 in memory
flh f27, 0(x2) # load 0xce1c21b9 from memory into f27
fnmadd.h f6, f14, f9, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfbff)
li x2, 0xa70d5d5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c39263e # load x3 with value 0x7c39263e
sw x3, 0(x2) # store 0x7c39263e in memory
flh f1, 0(x2) # load 0x7c39263e from memory into f1
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0x5f9f6031 # load x3 with value 0x5f9f6031
sw x3, 0(x2) # store 0x5f9f6031 in memory
flh f23, 0(x2) # load 0x5f9f6031 from memory into f23
fnmadd.h f2, f1, f13, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff)
li x28, 0x2d2c3f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb086966c # load x3 with value 0xb086966c
sw x3, 0(x2) # store 0xb086966c in memory
flh f2, 0(x2) # load 0xb086966c from memory into f2
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
li x3, 0x250003ac # load x3 with value 0x250003ac
sw x3, 0(x2) # store 0x250003ac in memory
flh f21, 0(x2) # load 0x250003ac from memory into f21
fnmadd.h f28, f2, f14, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x83ff)
li x11, 0x147d3af1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a672e6b # load x3 with value 0x4a672e6b
sw x3, 0(x2) # store 0x4a672e6b in memory
flh f25, 0(x2) # load 0x4a672e6b from memory into f25
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0xabd94391 # load x3 with value 0xabd94391
sw x3, 0(x2) # store 0xabd94391 in memory
flh f29, 0(x2) # load 0xabd94391 from memory into f29
fnmadd.h f11, f25, f27, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x200)
li x23, 0x5513c31d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcced3ad1 # load x3 with value 0xcced3ad1
sw x3, 0(x2) # store 0xcced3ad1 in memory
flh f16, 0(x2) # load 0xcced3ad1 from memory into f16
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0xa4fb2889 # load x3 with value 0xa4fb2889
sw x3, 0(x2) # store 0xa4fb2889 in memory
flh f5, 0(x2) # load 0xa4fb2889 from memory into f5
fnmadd.h f23, f16, f1, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8200)
li x29, 0x598b695c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15e234a2 # load x3 with value 0x15e234a2
sw x3, 0(x2) # store 0x15e234a2 in memory
flh f19, 0(x2) # load 0x15e234a2 from memory into f19
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
li x3, 0xdaade31d # load x3 with value 0xdaade31d
sw x3, 0(x2) # store 0xdaade31d in memory
flh f27, 0(x2) # load 0xdaade31d from memory into f27
fnmadd.h f29, f19, f24, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x15, 0xf5a2f590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48f592e4 # load x3 with value 0x48f592e4
sw x3, 0(x2) # store 0x48f592e4 in memory
flh f20, 0(x2) # load 0x48f592e4 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xccf8fe66 # load x3 with value 0xccf8fe66
sw x3, 0(x2) # store 0xccf8fe66 in memory
flh f30, 0(x2) # load 0xccf8fe66 from memory into f30
fnmadd.h f15, f20, f9, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8001)
li x7, 0x7222be3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2866e3c2 # load x3 with value 0x2866e3c2
sw x3, 0(x2) # store 0x2866e3c2 in memory
flh f5, 0(x2) # load 0x2866e3c2 from memory into f5
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0xb8d58e18 # load x3 with value 0xb8d58e18
sw x3, 0(x2) # store 0xb8d58e18 in memory
flh f13, 0(x2) # load 0xb8d58e18 from memory into f13
fnmadd.h f7, f5, f12, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c00)
li x25, 0x079ffe9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8def1b6c # load x3 with value 0x8def1b6c
sw x3, 0(x2) # store 0x8def1b6c in memory
flh f3, 0(x2) # load 0x8def1b6c from memory into f3
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
li x3, 0xb9fa204d # load x3 with value 0xb9fa204d
sw x3, 0(x2) # store 0xb9fa204d in memory
flh f14, 0(x2) # load 0xb9fa204d from memory into f14
fnmadd.h f25, f3, f1, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc00)
li x19, 0xf6749889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e61af27 # load x3 with value 0x6e61af27
sw x3, 0(x2) # store 0x6e61af27 in memory
flh f16, 0(x2) # load 0x6e61af27 from memory into f16
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0x97b90efe # load x3 with value 0x97b90efe
sw x3, 0(x2) # store 0x97b90efe in memory
flh f8, 0(x2) # load 0x97b90efe from memory into f8
fnmadd.h f19, f16, f1, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7e00)
li x21, 0xa9a5b3ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d037025 # load x3 with value 0x9d037025
sw x3, 0(x2) # store 0x9d037025 in memory
flh f15, 0(x2) # load 0x9d037025 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0x33df3058 # load x3 with value 0x33df3058
sw x3, 0(x2) # store 0x33df3058 in memory
flh f11, 0(x2) # load 0x33df3058 from memory into f11
fnmadd.h f21, f15, f12, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff)
li x16, 0x316e00ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4eed1375 # load x3 with value 0x4eed1375
sw x3, 0(x2) # store 0x4eed1375 in memory
flh f8, 0(x2) # load 0x4eed1375 from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
li x3, 0xf9a7006d # load x3 with value 0xf9a7006d
sw x3, 0(x2) # store 0xf9a7006d in memory
flh f20, 0(x2) # load 0xf9a7006d from memory into f20
fnmadd.h f16, f8, f19, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c01)
li x22, 0xf07a417b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55ed9e36 # load x3 with value 0x55ed9e36
sw x3, 0(x2) # store 0x55ed9e36 in memory
flh f2, 0(x2) # load 0x55ed9e36 from memory into f2
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
li x3, 0xafe3b63f # load x3 with value 0xafe3b63f
sw x3, 0(x2) # store 0xafe3b63f in memory
flh f1, 0(x2) # load 0xafe3b63f from memory into f1
fnmadd.h f22, f2, f23, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7dff)
li x28, 0x3d2b45ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6b94adf # load x3 with value 0xb6b94adf
sw x3, 0(x2) # store 0xb6b94adf in memory
flh f4, 0(x2) # load 0xb6b94adf from memory into f4
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
li x3, 0x5648faa1 # load x3 with value 0x5648faa1
sw x3, 0(x2) # store 0x5648faa1 in memory
flh f31, 0(x2) # load 0x5648faa1 from memory into f31
fnmadd.h f28, f4, f14, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x58b4)
li x30, 0x6c65e606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7754ebf1 # load x3 with value 0x7754ebf1
sw x3, 0(x2) # store 0x7754ebf1 in memory
flh f22, 0(x2) # load 0x7754ebf1 from memory into f22
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x09359c24 # load x3 with value 0x09359c24
sw x3, 0(x2) # store 0x09359c24 in memory
flh f5, 0(x2) # load 0x09359c24 from memory into f5
fnmadd.h f30, f22, f26, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc93a)
li x8, 0xdf15a5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2664310f # load x3 with value 0x2664310f
sw x3, 0(x2) # store 0x2664310f in memory
flh f1, 0(x2) # load 0x2664310f from memory into f1
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0xf92d8e84 # load x3 with value 0xf92d8e84
sw x3, 0(x2) # store 0xf92d8e84 in memory
flh f5, 0(x2) # load 0xf92d8e84 from memory into f5
fnmadd.h f8, f1, f13, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x23, 0x24806ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x84b31a9e # load x3 with value 0x84b31a9e
sw x3, 0(x2) # store 0x84b31a9e in memory
flh f20, 0(x2) # load 0x84b31a9e from memory into f20
li x3, 0xbac43580 # load x3 with value 0xbac43580
sw x3, 0(x2) # store 0xbac43580 in memory
flh f27, 0(x2) # load 0xbac43580 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.h f23, f20, f27, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000)
li x25, 0x7cca0d5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc97d3054 # load x3 with value 0xc97d3054
sw x3, 0(x2) # store 0xc97d3054 in memory
flh f23, 0(x2) # load 0xc97d3054 from memory into f23
li x3, 0x45a5cb5d # load x3 with value 0x45a5cb5d
sw x3, 0(x2) # store 0x45a5cb5d in memory
flh f18, 0(x2) # load 0x45a5cb5d from memory into f18
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
fnmadd.h f25, f23, f18, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3c00)
li x13, 0x3bd7ea95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e5a17bd # load x3 with value 0x5e5a17bd
sw x3, 0(x2) # store 0x5e5a17bd in memory
flh f26, 0(x2) # load 0x5e5a17bd from memory into f26
li x3, 0x19941c37 # load x3 with value 0x19941c37
sw x3, 0(x2) # store 0x19941c37 in memory
flh f14, 0(x2) # load 0x19941c37 from memory into f14
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
fnmadd.h f13, f26, f14, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbc00)
li x23, 0x61dd8225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec292083 # load x3 with value 0xec292083
sw x3, 0(x2) # store 0xec292083 in memory
flh f30, 0(x2) # load 0xec292083 from memory into f30
li x3, 0x435a262c # load x3 with value 0x435a262c
sw x3, 0(x2) # store 0x435a262c in memory
flh f17, 0(x2) # load 0x435a262c from memory into f17
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f23, f30, f17, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3e00)
li x26, 0xddd573ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b4bfeee # load x3 with value 0x9b4bfeee
sw x3, 0(x2) # store 0x9b4bfeee in memory
flh f15, 0(x2) # load 0x9b4bfeee from memory into f15
li x3, 0x4b95f4a6 # load x3 with value 0x4b95f4a6
sw x3, 0(x2) # store 0x4b95f4a6 in memory
flh f21, 0(x2) # load 0x4b95f4a6 from memory into f21
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
fnmadd.h f26, f15, f21, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbe00)
li x24, 0x95452800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x788312e3 # load x3 with value 0x788312e3
sw x3, 0(x2) # store 0x788312e3 in memory
flh f5, 0(x2) # load 0x788312e3 from memory into f5
li x3, 0x67b026f0 # load x3 with value 0x67b026f0
sw x3, 0(x2) # store 0x67b026f0 in memory
flh f25, 0(x2) # load 0x67b026f0 from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f24, f5, f25, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000)
li x24, 0x8de5a435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77f05d1c # load x3 with value 0x77f05d1c
sw x3, 0(x2) # store 0x77f05d1c in memory
flh f30, 0(x2) # load 0x77f05d1c from memory into f30
li x3, 0x4e14593b # load x3 with value 0x4e14593b
sw x3, 0(x2) # store 0x4e14593b in memory
flh f15, 0(x2) # load 0x4e14593b from memory into f15
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f24, f30, f15, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000)
li x28, 0x528b28d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x49995da7 # load x3 with value 0x49995da7
sw x3, 0(x2) # store 0x49995da7 in memory
flh f22, 0(x2) # load 0x49995da7 from memory into f22
li x3, 0x917f45cd # load x3 with value 0x917f45cd
sw x3, 0(x2) # store 0x917f45cd in memory
flh f20, 0(x2) # load 0x917f45cd from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
fnmadd.h f28, f22, f20, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400)
li x10, 0xc5a41cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7b4f3c8 # load x3 with value 0xc7b4f3c8
sw x3, 0(x2) # store 0xc7b4f3c8 in memory
flh f22, 0(x2) # load 0xc7b4f3c8 from memory into f22
li x3, 0x84d149f1 # load x3 with value 0x84d149f1
sw x3, 0(x2) # store 0x84d149f1 in memory
flh f21, 0(x2) # load 0x84d149f1 from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
fnmadd.h f10, f22, f21, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8400)
li x28, 0xbdff60de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x05ed79e6 # load x3 with value 0x05ed79e6
sw x3, 0(x2) # store 0x05ed79e6 in memory
flh f27, 0(x2) # load 0x05ed79e6 from memory into f27
li x3, 0x6eb47126 # load x3 with value 0x6eb47126
sw x3, 0(x2) # store 0x6eb47126 in memory
flh f8, 0(x2) # load 0x6eb47126 from memory into f8
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
fnmadd.h f28, f27, f8, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7bff)
li x12, 0x74445f6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe9d3e56 # load x3 with value 0xbe9d3e56
sw x3, 0(x2) # store 0xbe9d3e56 in memory
flh f4, 0(x2) # load 0xbe9d3e56 from memory into f4
li x3, 0x534eebe1 # load x3 with value 0x534eebe1
sw x3, 0(x2) # store 0x534eebe1 in memory
flh f24, 0(x2) # load 0x534eebe1 from memory into f24
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
fnmadd.h f12, f4, f24, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfbff)
li x29, 0xbf69a40d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22ceb481 # load x3 with value 0x22ceb481
sw x3, 0(x2) # store 0x22ceb481 in memory
flh f6, 0(x2) # load 0x22ceb481 from memory into f6
li x3, 0xad41783c # load x3 with value 0xad41783c
sw x3, 0(x2) # store 0xad41783c in memory
flh f8, 0(x2) # load 0xad41783c from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
fnmadd.h f29, f6, f8, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff)
li x18, 0x7f8dfd26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe55ebc0f # load x3 with value 0xe55ebc0f
sw x3, 0(x2) # store 0xe55ebc0f in memory
flh f25, 0(x2) # load 0xe55ebc0f from memory into f25
li x3, 0xbf446ea7 # load x3 with value 0xbf446ea7
sw x3, 0(x2) # store 0xbf446ea7 in memory
flh f26, 0(x2) # load 0xbf446ea7 from memory into f26
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
fnmadd.h f18, f25, f26, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x83ff)
li x8, 0xc3469cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7e32442 # load x3 with value 0xc7e32442
sw x3, 0(x2) # store 0xc7e32442 in memory
flh f23, 0(x2) # load 0xc7e32442 from memory into f23
li x3, 0xf2f685cd # load x3 with value 0xf2f685cd
sw x3, 0(x2) # store 0xf2f685cd in memory
flh f18, 0(x2) # load 0xf2f685cd from memory into f18
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f8, f23, f18, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x200)
li x20, 0x7888141c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b16a469 # load x3 with value 0x6b16a469
sw x3, 0(x2) # store 0x6b16a469 in memory
flh f23, 0(x2) # load 0x6b16a469 from memory into f23
li x3, 0xc1c4cddd # load x3 with value 0xc1c4cddd
sw x3, 0(x2) # store 0xc1c4cddd in memory
flh f4, 0(x2) # load 0xc1c4cddd from memory into f4
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
fnmadd.h f20, f23, f4, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8200)
li x7, 0x88ba5b26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd2718a9 # load x3 with value 0xfd2718a9
sw x3, 0(x2) # store 0xfd2718a9 in memory
flh f31, 0(x2) # load 0xfd2718a9 from memory into f31
li x3, 0x21e767fb # load x3 with value 0x21e767fb
sw x3, 0(x2) # store 0x21e767fb in memory
flh f4, 0(x2) # load 0x21e767fb from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
fnmadd.h f7, f31, f4, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x14, 0xc1f9eda3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6875f5d # load x3 with value 0xd6875f5d
sw x3, 0(x2) # store 0xd6875f5d in memory
flh f24, 0(x2) # load 0xd6875f5d from memory into f24
li x3, 0x1570bb01 # load x3 with value 0x1570bb01
sw x3, 0(x2) # store 0x1570bb01 in memory
flh f15, 0(x2) # load 0x1570bb01 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.h f14, f24, f15, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8001)
li x20, 0xf810d6df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ff423b1 # load x3 with value 0x9ff423b1
sw x3, 0(x2) # store 0x9ff423b1 in memory
flh f27, 0(x2) # load 0x9ff423b1 from memory into f27
li x3, 0xe143a008 # load x3 with value 0xe143a008
sw x3, 0(x2) # store 0xe143a008 in memory
flh f15, 0(x2) # load 0xe143a008 from memory into f15
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
fnmadd.h f20, f27, f15, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c00)
li x5, 0xccc37a6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9da21566 # load x3 with value 0x9da21566
sw x3, 0(x2) # store 0x9da21566 in memory
flh f15, 0(x2) # load 0x9da21566 from memory into f15
li x3, 0x590eb749 # load x3 with value 0x590eb749
sw x3, 0(x2) # store 0x590eb749 in memory
flh f3, 0(x2) # load 0x590eb749 from memory into f3
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
fnmadd.h f5, f15, f3, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc00)
li x23, 0x01740385 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a20c727 # load x3 with value 0x3a20c727
sw x3, 0(x2) # store 0x3a20c727 in memory
flh f13, 0(x2) # load 0x3a20c727 from memory into f13
li x3, 0x3a21b143 # load x3 with value 0x3a21b143
sw x3, 0(x2) # store 0x3a21b143 in memory
flh f16, 0(x2) # load 0x3a21b143 from memory into f16
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
fnmadd.h f23, f13, f16, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7e00)
li x2, 0xfb242894 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89640cf0 # load x3 with value 0x89640cf0
sw x3, 0(x2) # store 0x89640cf0 in memory
flh f24, 0(x2) # load 0x89640cf0 from memory into f24
li x3, 0x959bb78c # load x3 with value 0x959bb78c
sw x3, 0(x2) # store 0x959bb78c in memory
flh f20, 0(x2) # load 0x959bb78c from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
fnmadd.h f2, f24, f20, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff)
li x12, 0xa409bc02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x485b15da # load x3 with value 0x485b15da
sw x3, 0(x2) # store 0x485b15da in memory
flh f16, 0(x2) # load 0x485b15da from memory into f16
li x3, 0x6ea5d1c9 # load x3 with value 0x6ea5d1c9
sw x3, 0(x2) # store 0x6ea5d1c9 in memory
flh f15, 0(x2) # load 0x6ea5d1c9 from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f12, f16, f15, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c01)
li x1, 0xc7703d20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e99bc89 # load x3 with value 0x0e99bc89
sw x3, 0(x2) # store 0x0e99bc89 in memory
flh f4, 0(x2) # load 0x0e99bc89 from memory into f4
li x3, 0xb4b3b82e # load x3 with value 0xb4b3b82e
sw x3, 0(x2) # store 0xb4b3b82e in memory
flh f16, 0(x2) # load 0xb4b3b82e from memory into f16
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
fnmadd.h f1, f4, f16, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7dff)
li x7, 0xd75d23bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4ccf4ea4 # load x3 with value 0x4ccf4ea4
sw x3, 0(x2) # store 0x4ccf4ea4 in memory
flh f16, 0(x2) # load 0x4ccf4ea4 from memory into f16
li x3, 0xb1ab3fb1 # load x3 with value 0xb1ab3fb1
sw x3, 0(x2) # store 0xb1ab3fb1 in memory
flh f6, 0(x2) # load 0xb1ab3fb1 from memory into f6
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
fnmadd.h f7, f16, f6, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x58b4)
li x11, 0x13a82f8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c646080 # load x3 with value 0x4c646080
sw x3, 0(x2) # store 0x4c646080 in memory
flh f3, 0(x2) # load 0x4c646080 from memory into f3
li x3, 0xcd44a62b # load x3 with value 0xcd44a62b
sw x3, 0(x2) # store 0xcd44a62b in memory
flh f24, 0(x2) # load 0xcd44a62b from memory into f24
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
fnmadd.h f11, f3, f24, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc93a)
li x14, 0x10b2bf2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x114e7b14 # load x3 with value 0x114e7b14
sw x3, 0(x2) # store 0x114e7b14 in memory
flh f29, 0(x2) # load 0x114e7b14 from memory into f29
li x3, 0x9a419052 # load x3 with value 0x9a419052
sw x3, 0(x2) # store 0x9a419052 in memory
flh f10, 0(x2) # load 0x9a419052 from memory into f10
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
fnmadd.h f14, f29, f10, f20 # perform operation

# Testcase cp_frm
li x2, 0x00c05e91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbefcf249 # load x3 with value 0xbefcf249
sw x3, 0(x2) # store 0xbefcf249 in memory
flh f7, 0(x2) # load 0xbefcf249 from memory into f7
li x3, 0x42f29182 # load x3 with value 0x42f29182
sw x3, 0(x2) # store 0x42f29182 in memory
flh f30, 0(x2) # load 0x42f29182 from memory into f30
li x3, 0x0000001d # load x3 with value 0x0000001d
sw x3, 0(x2) # store 0x0000001d in memory
flh f29, 0(x2) # load 0x0000001d from memory into f29
fnmadd.h f2, f7, f30, f29, dyn # perform operation
fnmadd.h f2, f7, f30, f29, rdn # perform operation
fnmadd.h f2, f7, f30, f29, rmm # perform operation
fnmadd.h f2, f7, f30, f29, rne # perform operation
fnmadd.h f2, f7, f30, f29, rtz # perform operation
fnmadd.h f2, f7, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x12, 0xf5a85978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x72b1d835 # load x3 with value 0x72b1d835
sw x3, 0(x2) # store 0x72b1d835 in memory
flh f25, 0(x2) # load 0x72b1d835 from memory into f25
fnmadd.h f12, f24, f3, f25, dyn # perform operation
fnmadd.h f12, f24, f3, f25, rdn # perform operation
fnmadd.h f12, f24, f3, f25, rmm # perform operation
fnmadd.h f12, f24, f3, f25, rne # perform operation
fnmadd.h f12, f24, f3, f25, rtz # perform operation
fnmadd.h f12, f24, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000)
li x16, 0x219743cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0xea15ce11 # load x3 with value 0xea15ce11
sw x3, 0(x2) # store 0xea15ce11 in memory
flh f22, 0(x2) # load 0xea15ce11 from memory into f22
fnmadd.h f16, f24, f27, f22, dyn # perform operation
fnmadd.h f16, f24, f27, f22, rdn # perform operation
fnmadd.h f16, f24, f27, f22, rmm # perform operation
fnmadd.h f16, f24, f27, f22, rne # perform operation
fnmadd.h f16, f24, f27, f22, rtz # perform operation
fnmadd.h f16, f24, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3c00)
li x11, 0x156d6ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0x4bbb0808 # load x3 with value 0x4bbb0808
sw x3, 0(x2) # store 0x4bbb0808 in memory
flh f4, 0(x2) # load 0x4bbb0808 from memory into f4
fnmadd.h f11, f13, f31, f4, dyn # perform operation
fnmadd.h f11, f13, f31, f4, rdn # perform operation
fnmadd.h f11, f13, f31, f4, rmm # perform operation
fnmadd.h f11, f13, f31, f4, rne # perform operation
fnmadd.h f11, f13, f31, f4, rtz # perform operation
fnmadd.h f11, f13, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbc00)
li x8, 0x0a17e4a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x5986806c # load x3 with value 0x5986806c
sw x3, 0(x2) # store 0x5986806c in memory
flh f4, 0(x2) # load 0x5986806c from memory into f4
fnmadd.h f8, f23, f28, f4, dyn # perform operation
fnmadd.h f8, f23, f28, f4, rdn # perform operation
fnmadd.h f8, f23, f28, f4, rmm # perform operation
fnmadd.h f8, f23, f28, f4, rne # perform operation
fnmadd.h f8, f23, f28, f4, rtz # perform operation
fnmadd.h f8, f23, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3e00)
li x22, 0x96267955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
li x3, 0xa742f8aa # load x3 with value 0xa742f8aa
sw x3, 0(x2) # store 0xa742f8aa in memory
flh f15, 0(x2) # load 0xa742f8aa from memory into f15
fnmadd.h f22, f12, f30, f15, dyn # perform operation
fnmadd.h f22, f12, f30, f15, rdn # perform operation
fnmadd.h f22, f12, f30, f15, rmm # perform operation
fnmadd.h f22, f12, f30, f15, rne # perform operation
fnmadd.h f22, f12, f30, f15, rtz # perform operation
fnmadd.h f22, f12, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbe00)
li x23, 0x0b56d267 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
li x3, 0x649ab800 # load x3 with value 0x649ab800
sw x3, 0(x2) # store 0x649ab800 in memory
flh f30, 0(x2) # load 0x649ab800 from memory into f30
fnmadd.h f23, f16, f29, f30, dyn # perform operation
fnmadd.h f23, f16, f29, f30, rdn # perform operation
fnmadd.h f23, f16, f29, f30, rmm # perform operation
fnmadd.h f23, f16, f29, f30, rne # perform operation
fnmadd.h f23, f16, f29, f30, rtz # perform operation
fnmadd.h f23, f16, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000)
li x15, 0xe8a0f6c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0x4743f100 # load x3 with value 0x4743f100
sw x3, 0(x2) # store 0x4743f100 in memory
flh f16, 0(x2) # load 0x4743f100 from memory into f16
fnmadd.h f15, f2, f28, f16, dyn # perform operation
fnmadd.h f15, f2, f28, f16, rdn # perform operation
fnmadd.h f15, f2, f28, f16, rmm # perform operation
fnmadd.h f15, f2, f28, f16, rne # perform operation
fnmadd.h f15, f2, f28, f16, rtz # perform operation
fnmadd.h f15, f2, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f2, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000)
li x11, 0x14252ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0xfff734fb # load x3 with value 0xfff734fb
sw x3, 0(x2) # store 0xfff734fb in memory
flh f10, 0(x2) # load 0xfff734fb from memory into f10
fnmadd.h f11, f9, f20, f10, dyn # perform operation
fnmadd.h f11, f9, f20, f10, rdn # perform operation
fnmadd.h f11, f9, f20, f10, rmm # perform operation
fnmadd.h f11, f9, f20, f10, rne # perform operation
fnmadd.h f11, f9, f20, f10, rtz # perform operation
fnmadd.h f11, f9, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400)
li x11, 0x5a25a7f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x9eb956d3 # load x3 with value 0x9eb956d3
sw x3, 0(x2) # store 0x9eb956d3 in memory
flh f6, 0(x2) # load 0x9eb956d3 from memory into f6
fnmadd.h f11, f28, f10, f6, dyn # perform operation
fnmadd.h f11, f28, f10, f6, rdn # perform operation
fnmadd.h f11, f28, f10, f6, rmm # perform operation
fnmadd.h f11, f28, f10, f6, rne # perform operation
fnmadd.h f11, f28, f10, f6, rtz # perform operation
fnmadd.h f11, f28, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f28, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8400)
li x8, 0x08690424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x1328ce9c # load x3 with value 0x1328ce9c
sw x3, 0(x2) # store 0x1328ce9c in memory
flh f3, 0(x2) # load 0x1328ce9c from memory into f3
fnmadd.h f8, f13, f20, f3, dyn # perform operation
fnmadd.h f8, f13, f20, f3, rdn # perform operation
fnmadd.h f8, f13, f20, f3, rmm # perform operation
fnmadd.h f8, f13, f20, f3, rne # perform operation
fnmadd.h f8, f13, f20, f3, rtz # perform operation
fnmadd.h f8, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7bff)
li x30, 0x97c23af7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
li x3, 0x4a28e62d # load x3 with value 0x4a28e62d
sw x3, 0(x2) # store 0x4a28e62d in memory
flh f21, 0(x2) # load 0x4a28e62d from memory into f21
fnmadd.h f30, f12, f19, f21, dyn # perform operation
fnmadd.h f30, f12, f19, f21, rdn # perform operation
fnmadd.h f30, f12, f19, f21, rmm # perform operation
fnmadd.h f30, f12, f19, f21, rne # perform operation
fnmadd.h f30, f12, f19, f21, rtz # perform operation
fnmadd.h f30, f12, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfbff)
li x17, 0x0488a758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
li x3, 0xec13960b # load x3 with value 0xec13960b
sw x3, 0(x2) # store 0xec13960b in memory
flh f25, 0(x2) # load 0xec13960b from memory into f25
fnmadd.h f17, f8, f28, f25, dyn # perform operation
fnmadd.h f17, f8, f28, f25, rdn # perform operation
fnmadd.h f17, f8, f28, f25, rmm # perform operation
fnmadd.h f17, f8, f28, f25, rne # perform operation
fnmadd.h f17, f8, f28, f25, rtz # perform operation
fnmadd.h f17, f8, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff)
li x5, 0xd34085dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
li x3, 0xa3aa67ac # load x3 with value 0xa3aa67ac
sw x3, 0(x2) # store 0xa3aa67ac in memory
flh f26, 0(x2) # load 0xa3aa67ac from memory into f26
fnmadd.h f5, f4, f7, f26, dyn # perform operation
fnmadd.h f5, f4, f7, f26, rdn # perform operation
fnmadd.h f5, f4, f7, f26, rmm # perform operation
fnmadd.h f5, f4, f7, f26, rne # perform operation
fnmadd.h f5, f4, f7, f26, rtz # perform operation
fnmadd.h f5, f4, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f4, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x83ff)
li x16, 0xadb65ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x3b1b91ea # load x3 with value 0x3b1b91ea
sw x3, 0(x2) # store 0x3b1b91ea in memory
flh f25, 0(x2) # load 0x3b1b91ea from memory into f25
fnmadd.h f16, f31, f1, f25, dyn # perform operation
fnmadd.h f16, f31, f1, f25, rdn # perform operation
fnmadd.h f16, f31, f1, f25, rmm # perform operation
fnmadd.h f16, f31, f1, f25, rne # perform operation
fnmadd.h f16, f31, f1, f25, rtz # perform operation
fnmadd.h f16, f31, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x200)
li x29, 0x0ef72f06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0xa36c40dc # load x3 with value 0xa36c40dc
sw x3, 0(x2) # store 0xa36c40dc in memory
flh f1, 0(x2) # load 0xa36c40dc from memory into f1
fnmadd.h f29, f26, f19, f1, dyn # perform operation
fnmadd.h f29, f26, f19, f1, rdn # perform operation
fnmadd.h f29, f26, f19, f1, rmm # perform operation
fnmadd.h f29, f26, f19, f1, rne # perform operation
fnmadd.h f29, f26, f19, f1, rtz # perform operation
fnmadd.h f29, f26, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8200)
li x13, 0xd7f9ee1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x40f391cf # load x3 with value 0x40f391cf
sw x3, 0(x2) # store 0x40f391cf in memory
flh f10, 0(x2) # load 0x40f391cf from memory into f10
fnmadd.h f13, f31, f29, f10, dyn # perform operation
fnmadd.h f13, f31, f29, f10, rdn # perform operation
fnmadd.h f13, f31, f29, f10, rmm # perform operation
fnmadd.h f13, f31, f29, f10, rne # perform operation
fnmadd.h f13, f31, f29, f10, rtz # perform operation
fnmadd.h f13, f31, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f31, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f31, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f31, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f31, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f31, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x22, 0xc9ee2767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xe86a6a20 # load x3 with value 0xe86a6a20
sw x3, 0(x2) # store 0xe86a6a20 in memory
flh f26, 0(x2) # load 0xe86a6a20 from memory into f26
fnmadd.h f22, f13, f30, f26, dyn # perform operation
fnmadd.h f22, f13, f30, f26, rdn # perform operation
fnmadd.h f22, f13, f30, f26, rmm # perform operation
fnmadd.h f22, f13, f30, f26, rne # perform operation
fnmadd.h f22, f13, f30, f26, rtz # perform operation
fnmadd.h f22, f13, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8001)
li x20, 0x2791a15e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
li x3, 0x6f413da6 # load x3 with value 0x6f413da6
sw x3, 0(x2) # store 0x6f413da6 in memory
flh f23, 0(x2) # load 0x6f413da6 from memory into f23
fnmadd.h f20, f7, f11, f23, dyn # perform operation
fnmadd.h f20, f7, f11, f23, rdn # perform operation
fnmadd.h f20, f7, f11, f23, rmm # perform operation
fnmadd.h f20, f7, f11, f23, rne # perform operation
fnmadd.h f20, f7, f11, f23, rtz # perform operation
fnmadd.h f20, f7, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f7, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c00)
li x30, 0x01fe9963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0xa699dd74 # load x3 with value 0xa699dd74
sw x3, 0(x2) # store 0xa699dd74 in memory
flh f20, 0(x2) # load 0xa699dd74 from memory into f20
fnmadd.h f30, f17, f10, f20, dyn # perform operation
fnmadd.h f30, f17, f10, f20, rdn # perform operation
fnmadd.h f30, f17, f10, f20, rmm # perform operation
fnmadd.h f30, f17, f10, f20, rne # perform operation
fnmadd.h f30, f17, f10, f20, rtz # perform operation
fnmadd.h f30, f17, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc00)
li x19, 0x59b049d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x0f211c2b # load x3 with value 0x0f211c2b
sw x3, 0(x2) # store 0x0f211c2b in memory
flh f13, 0(x2) # load 0x0f211c2b from memory into f13
fnmadd.h f19, f30, f11, f13, dyn # perform operation
fnmadd.h f19, f30, f11, f13, rdn # perform operation
fnmadd.h f19, f30, f11, f13, rmm # perform operation
fnmadd.h f19, f30, f11, f13, rne # perform operation
fnmadd.h f19, f30, f11, f13, rtz # perform operation
fnmadd.h f19, f30, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f30, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7e00)
li x1, 0xf856da92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0x5cd36dd4 # load x3 with value 0x5cd36dd4
sw x3, 0(x2) # store 0x5cd36dd4 in memory
flh f10, 0(x2) # load 0x5cd36dd4 from memory into f10
fnmadd.h f1, f16, f26, f10, dyn # perform operation
fnmadd.h f1, f16, f26, f10, rdn # perform operation
fnmadd.h f1, f16, f26, f10, rmm # perform operation
fnmadd.h f1, f16, f26, f10, rne # perform operation
fnmadd.h f1, f16, f26, f10, rtz # perform operation
fnmadd.h f1, f16, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f16, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fff)
li x5, 0x2c12bd45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
li x3, 0xf6dae139 # load x3 with value 0xf6dae139
sw x3, 0(x2) # store 0xf6dae139 in memory
flh f1, 0(x2) # load 0xf6dae139 from memory into f1
fnmadd.h f5, f26, f18, f1, dyn # perform operation
fnmadd.h f5, f26, f18, f1, rdn # perform operation
fnmadd.h f5, f26, f18, f1, rmm # perform operation
fnmadd.h f5, f26, f18, f1, rne # perform operation
fnmadd.h f5, f26, f18, f1, rtz # perform operation
fnmadd.h f5, f26, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f26, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f26, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c01)
li x7, 0x1fd0f877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0x2c857fec # load x3 with value 0x2c857fec
sw x3, 0(x2) # store 0x2c857fec in memory
flh f18, 0(x2) # load 0x2c857fec from memory into f18
fnmadd.h f7, f23, f22, f18, dyn # perform operation
fnmadd.h f7, f23, f22, f18, rdn # perform operation
fnmadd.h f7, f23, f22, f18, rmm # perform operation
fnmadd.h f7, f23, f22, f18, rne # perform operation
fnmadd.h f7, f23, f22, f18, rtz # perform operation
fnmadd.h f7, f23, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7dff)
li x4, 0x594842b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0xbfbebfc8 # load x3 with value 0xbfbebfc8
sw x3, 0(x2) # store 0xbfbebfc8 in memory
flh f19, 0(x2) # load 0xbfbebfc8 from memory into f19
fnmadd.h f4, f22, f2, f19, dyn # perform operation
fnmadd.h f4, f22, f2, f19, rdn # perform operation
fnmadd.h f4, f22, f2, f19, rmm # perform operation
fnmadd.h f4, f22, f2, f19, rne # perform operation
fnmadd.h f4, f22, f2, f19, rtz # perform operation
fnmadd.h f4, f22, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f22, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f22, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f22, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f22, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f22, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x58b4)
li x7, 0x1106fae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
li x3, 0xfc199e0d # load x3 with value 0xfc199e0d
sw x3, 0(x2) # store 0xfc199e0d in memory
flh f15, 0(x2) # load 0xfc199e0d from memory into f15
fnmadd.h f7, f21, f22, f15, dyn # perform operation
fnmadd.h f7, f21, f22, f15, rdn # perform operation
fnmadd.h f7, f21, f22, f15, rmm # perform operation
fnmadd.h f7, f21, f22, f15, rne # perform operation
fnmadd.h f7, f21, f22, f15, rtz # perform operation
fnmadd.h f7, f21, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc93a)
li x28, 0xa8e81ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0xf6f04ce6 # load x3 with value 0xf6f04ce6
sw x3, 0(x2) # store 0xf6f04ce6 in memory
flh f25, 0(x2) # load 0xf6f04ce6 from memory into f25
fnmadd.h f28, f20, f5, f25, dyn # perform operation
fnmadd.h f28, f20, f5, f25, rdn # perform operation
fnmadd.h f28, f20, f5, f25, rmm # perform operation
fnmadd.h f28, f20, f5, f25, rne # perform operation
fnmadd.h f28, f20, f5, f25, rtz # perform operation
fnmadd.h f28, f20, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x0)
li x4, 0x3cbc2825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x8168d86d # load x3 with value 0x8168d86d
sw x3, 0(x2) # store 0x8168d86d in memory
flh f16, 0(x2) # load 0x8168d86d from memory into f16
fnmadd.h f4, f29, f5, f16, dyn # perform operation
fnmadd.h f4, f29, f5, f16, rdn # perform operation
fnmadd.h f4, f29, f5, f16, rmm # perform operation
fnmadd.h f4, f29, f5, f16, rne # perform operation
fnmadd.h f4, f29, f5, f16, rtz # perform operation
fnmadd.h f4, f29, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8000)
li x9, 0x122a320a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0x40c88044 # load x3 with value 0x40c88044
sw x3, 0(x2) # store 0x40c88044 in memory
flh f8, 0(x2) # load 0x40c88044 from memory into f8
fnmadd.h f9, f14, f27, f8, dyn # perform operation
fnmadd.h f9, f14, f27, f8, rdn # perform operation
fnmadd.h f9, f14, f27, f8, rmm # perform operation
fnmadd.h f9, f14, f27, f8, rne # perform operation
fnmadd.h f9, f14, f27, f8, rtz # perform operation
fnmadd.h f9, f14, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3c00)
li x15, 0xcbaa2c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x43e176b9 # load x3 with value 0x43e176b9
sw x3, 0(x2) # store 0x43e176b9 in memory
flh f28, 0(x2) # load 0x43e176b9 from memory into f28
fnmadd.h f15, f9, f2, f28, dyn # perform operation
fnmadd.h f15, f9, f2, f28, rdn # perform operation
fnmadd.h f15, f9, f2, f28, rmm # perform operation
fnmadd.h f15, f9, f2, f28, rne # perform operation
fnmadd.h f15, f9, f2, f28, rtz # perform operation
fnmadd.h f15, f9, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f9, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbc00)
li x3, 0x97f8413d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x5f64eb82 # load x3 with value 0x5f64eb82
sw x3, 0(x2) # store 0x5f64eb82 in memory
flh f9, 0(x2) # load 0x5f64eb82 from memory into f9
fnmadd.h f3, f17, f24, f9, dyn # perform operation
fnmadd.h f3, f17, f24, f9, rdn # perform operation
fnmadd.h f3, f17, f24, f9, rmm # perform operation
fnmadd.h f3, f17, f24, f9, rne # perform operation
fnmadd.h f3, f17, f24, f9, rtz # perform operation
fnmadd.h f3, f17, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3e00)
li x10, 0xc30ef0f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
li x3, 0xb4c20e64 # load x3 with value 0xb4c20e64
sw x3, 0(x2) # store 0xb4c20e64 in memory
flh f28, 0(x2) # load 0xb4c20e64 from memory into f28
fnmadd.h f10, f9, f13, f28, dyn # perform operation
fnmadd.h f10, f9, f13, f28, rdn # perform operation
fnmadd.h f10, f9, f13, f28, rmm # perform operation
fnmadd.h f10, f9, f13, f28, rne # perform operation
fnmadd.h f10, f9, f13, f28, rtz # perform operation
fnmadd.h f10, f9, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbe00)
li x11, 0x1f3a2e5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0xc6008543 # load x3 with value 0xc6008543
sw x3, 0(x2) # store 0xc6008543 in memory
flh f4, 0(x2) # load 0xc6008543 from memory into f4
fnmadd.h f11, f18, f19, f4, dyn # perform operation
fnmadd.h f11, f18, f19, f4, rdn # perform operation
fnmadd.h f11, f18, f19, f4, rmm # perform operation
fnmadd.h f11, f18, f19, f4, rne # perform operation
fnmadd.h f11, f18, f19, f4, rtz # perform operation
fnmadd.h f11, f18, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x4000)
li x19, 0x7057c45d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0x91c856e5 # load x3 with value 0x91c856e5
sw x3, 0(x2) # store 0x91c856e5 in memory
flh f25, 0(x2) # load 0x91c856e5 from memory into f25
fnmadd.h f19, f20, f24, f25, dyn # perform operation
fnmadd.h f19, f20, f24, f25, rdn # perform operation
fnmadd.h f19, f20, f24, f25, rmm # perform operation
fnmadd.h f19, f20, f24, f25, rne # perform operation
fnmadd.h f19, f20, f24, f25, rtz # perform operation
fnmadd.h f19, f20, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc000)
li x16, 0x8e3b1dcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x149fc66f # load x3 with value 0x149fc66f
sw x3, 0(x2) # store 0x149fc66f in memory
flh f25, 0(x2) # load 0x149fc66f from memory into f25
fnmadd.h f16, f15, f8, f25, dyn # perform operation
fnmadd.h f16, f15, f8, f25, rdn # perform operation
fnmadd.h f16, f15, f8, f25, rmm # perform operation
fnmadd.h f16, f15, f8, f25, rne # perform operation
fnmadd.h f16, f15, f8, f25, rtz # perform operation
fnmadd.h f16, f15, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x400)
li x8, 0x71cf79e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
li x3, 0x57f3dbff # load x3 with value 0x57f3dbff
sw x3, 0(x2) # store 0x57f3dbff in memory
flh f3, 0(x2) # load 0x57f3dbff from memory into f3
fnmadd.h f8, f31, f29, f3, dyn # perform operation
fnmadd.h f8, f31, f29, f3, rdn # perform operation
fnmadd.h f8, f31, f29, f3, rmm # perform operation
fnmadd.h f8, f31, f29, f3, rne # perform operation
fnmadd.h f8, f31, f29, f3, rtz # perform operation
fnmadd.h f8, f31, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f31, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f31, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f31, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f31, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f31, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8400)
li x31, 0x3ff4943e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0x31215642 # load x3 with value 0x31215642
sw x3, 0(x2) # store 0x31215642 in memory
flh f27, 0(x2) # load 0x31215642 from memory into f27
fnmadd.h f31, f6, f9, f27, dyn # perform operation
fnmadd.h f31, f6, f9, f27, rdn # perform operation
fnmadd.h f31, f6, f9, f27, rmm # perform operation
fnmadd.h f31, f6, f9, f27, rne # perform operation
fnmadd.h f31, f6, f9, f27, rtz # perform operation
fnmadd.h f31, f6, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7bff)
li x8, 0xaa7c19d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0xdfc3685d # load x3 with value 0xdfc3685d
sw x3, 0(x2) # store 0xdfc3685d in memory
flh f15, 0(x2) # load 0xdfc3685d from memory into f15
fnmadd.h f8, f27, f3, f15, dyn # perform operation
fnmadd.h f8, f27, f3, f15, rdn # perform operation
fnmadd.h f8, f27, f3, f15, rmm # perform operation
fnmadd.h f8, f27, f3, f15, rne # perform operation
fnmadd.h f8, f27, f3, f15, rtz # perform operation
fnmadd.h f8, f27, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f27, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfbff)
li x19, 0xabfdaaa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
li x3, 0x7f0c4837 # load x3 with value 0x7f0c4837
sw x3, 0(x2) # store 0x7f0c4837 in memory
flh f14, 0(x2) # load 0x7f0c4837 from memory into f14
fnmadd.h f19, f1, f21, f14, dyn # perform operation
fnmadd.h f19, f1, f21, f14, rdn # perform operation
fnmadd.h f19, f1, f21, f14, rmm # perform operation
fnmadd.h f19, f1, f21, f14, rne # perform operation
fnmadd.h f19, f1, f21, f14, rtz # perform operation
fnmadd.h f19, f1, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3ff)
li x28, 0x1dd23674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0xd31c5230 # load x3 with value 0xd31c5230
sw x3, 0(x2) # store 0xd31c5230 in memory
flh f10, 0(x2) # load 0xd31c5230 from memory into f10
fnmadd.h f28, f30, f4, f10, dyn # perform operation
fnmadd.h f28, f30, f4, f10, rdn # perform operation
fnmadd.h f28, f30, f4, f10, rmm # perform operation
fnmadd.h f28, f30, f4, f10, rne # perform operation
fnmadd.h f28, f30, f4, f10, rtz # perform operation
fnmadd.h f28, f30, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f30, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x83ff)
li x31, 0xa047726e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x9f4c7bd2 # load x3 with value 0x9f4c7bd2
sw x3, 0(x2) # store 0x9f4c7bd2 in memory
flh f29, 0(x2) # load 0x9f4c7bd2 from memory into f29
fnmadd.h f31, f14, f17, f29, dyn # perform operation
fnmadd.h f31, f14, f17, f29, rdn # perform operation
fnmadd.h f31, f14, f17, f29, rmm # perform operation
fnmadd.h f31, f14, f17, f29, rne # perform operation
fnmadd.h f31, f14, f17, f29, rtz # perform operation
fnmadd.h f31, f14, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f14, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x200)
li x7, 0xc97b8cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
li x3, 0x186e51a8 # load x3 with value 0x186e51a8
sw x3, 0(x2) # store 0x186e51a8 in memory
flh f1, 0(x2) # load 0x186e51a8 from memory into f1
fnmadd.h f7, f27, f4, f1, dyn # perform operation
fnmadd.h f7, f27, f4, f1, rdn # perform operation
fnmadd.h f7, f27, f4, f1, rmm # perform operation
fnmadd.h f7, f27, f4, f1, rne # perform operation
fnmadd.h f7, f27, f4, f1, rtz # perform operation
fnmadd.h f7, f27, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8200)
li x13, 0x5fc1a4fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
li x3, 0x98211686 # load x3 with value 0x98211686
sw x3, 0(x2) # store 0x98211686 in memory
flh f9, 0(x2) # load 0x98211686 from memory into f9
fnmadd.h f13, f21, f22, f9, dyn # perform operation
fnmadd.h f13, f21, f22, f9, rdn # perform operation
fnmadd.h f13, f21, f22, f9, rmm # perform operation
fnmadd.h f13, f21, f22, f9, rne # perform operation
fnmadd.h f13, f21, f22, f9, rtz # perform operation
fnmadd.h f13, f21, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x1)
li x3, 0xf1e54704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x02742387 # load x3 with value 0x02742387
sw x3, 0(x2) # store 0x02742387 in memory
flh f15, 0(x2) # load 0x02742387 from memory into f15
fnmadd.h f3, f1, f18, f15, dyn # perform operation
fnmadd.h f3, f1, f18, f15, rdn # perform operation
fnmadd.h f3, f1, f18, f15, rmm # perform operation
fnmadd.h f3, f1, f18, f15, rne # perform operation
fnmadd.h f3, f1, f18, f15, rtz # perform operation
fnmadd.h f3, f1, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f1, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8001)
li x12, 0x40e06bff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
li x3, 0xabd5479f # load x3 with value 0xabd5479f
sw x3, 0(x2) # store 0xabd5479f in memory
flh f1, 0(x2) # load 0xabd5479f from memory into f1
fnmadd.h f12, f30, f29, f1, dyn # perform operation
fnmadd.h f12, f30, f29, f1, rdn # perform operation
fnmadd.h f12, f30, f29, f1, rmm # perform operation
fnmadd.h f12, f30, f29, f1, rne # perform operation
fnmadd.h f12, f30, f29, f1, rtz # perform operation
fnmadd.h f12, f30, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f30, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c00)
li x4, 0x9e7686d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0xd5c02b30 # load x3 with value 0xd5c02b30
sw x3, 0(x2) # store 0xd5c02b30 in memory
flh f10, 0(x2) # load 0xd5c02b30 from memory into f10
fnmadd.h f4, f18, f29, f10, dyn # perform operation
fnmadd.h f4, f18, f29, f10, rdn # perform operation
fnmadd.h f4, f18, f29, f10, rmm # perform operation
fnmadd.h f4, f18, f29, f10, rne # perform operation
fnmadd.h f4, f18, f29, f10, rtz # perform operation
fnmadd.h f4, f18, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f18, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f18, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f18, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f18, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f18, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc00)
li x2, 0x1063e7ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0xc0e5c042 # load x3 with value 0xc0e5c042
sw x3, 0(x2) # store 0xc0e5c042 in memory
flh f16, 0(x2) # load 0xc0e5c042 from memory into f16
fnmadd.h f2, f22, f23, f16, dyn # perform operation
fnmadd.h f2, f22, f23, f16, rdn # perform operation
fnmadd.h f2, f22, f23, f16, rmm # perform operation
fnmadd.h f2, f22, f23, f16, rne # perform operation
fnmadd.h f2, f22, f23, f16, rtz # perform operation
fnmadd.h f2, f22, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7e00)
li x19, 0x0e035f90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x23d8f460 # load x3 with value 0x23d8f460
sw x3, 0(x2) # store 0x23d8f460 in memory
flh f13, 0(x2) # load 0x23d8f460 from memory into f13
fnmadd.h f19, f15, f31, f13, dyn # perform operation
fnmadd.h f19, f15, f31, f13, rdn # perform operation
fnmadd.h f19, f15, f31, f13, rmm # perform operation
fnmadd.h f19, f15, f31, f13, rne # perform operation
fnmadd.h f19, f15, f31, f13, rtz # perform operation
fnmadd.h f19, f15, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7fff)
li x8, 0xabc86bf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x7fd25703 # load x3 with value 0x7fd25703
sw x3, 0(x2) # store 0x7fd25703 in memory
flh f13, 0(x2) # load 0x7fd25703 from memory into f13
fnmadd.h f8, f14, f1, f13, dyn # perform operation
fnmadd.h f8, f14, f1, f13, rdn # perform operation
fnmadd.h f8, f14, f1, f13, rmm # perform operation
fnmadd.h f8, f14, f1, f13, rne # perform operation
fnmadd.h f8, f14, f1, f13, rtz # perform operation
fnmadd.h f8, f14, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c01)
li x6, 0xd2352984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
li x3, 0x1114371f # load x3 with value 0x1114371f
sw x3, 0(x2) # store 0x1114371f in memory
flh f11, 0(x2) # load 0x1114371f from memory into f11
fnmadd.h f6, f15, f4, f11, dyn # perform operation
fnmadd.h f6, f15, f4, f11, rdn # perform operation
fnmadd.h f6, f15, f4, f11, rmm # perform operation
fnmadd.h f6, f15, f4, f11, rne # perform operation
fnmadd.h f6, f15, f4, f11, rtz # perform operation
fnmadd.h f6, f15, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7dff)
li x26, 0x66995a29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
li x3, 0x57aaba3c # load x3 with value 0x57aaba3c
sw x3, 0(x2) # store 0x57aaba3c in memory
flh f27, 0(x2) # load 0x57aaba3c from memory into f27
fnmadd.h f26, f19, f12, f27, dyn # perform operation
fnmadd.h f26, f19, f12, f27, rdn # perform operation
fnmadd.h f26, f19, f12, f27, rmm # perform operation
fnmadd.h f26, f19, f12, f27, rne # perform operation
fnmadd.h f26, f19, f12, f27, rtz # perform operation
fnmadd.h f26, f19, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x58b4)
li x13, 0x1283f169 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0xf2f97f7b # load x3 with value 0xf2f97f7b
sw x3, 0(x2) # store 0xf2f97f7b in memory
flh f3, 0(x2) # load 0xf2f97f7b from memory into f3
fnmadd.h f13, f14, f25, f3, dyn # perform operation
fnmadd.h f13, f14, f25, f3, rdn # perform operation
fnmadd.h f13, f14, f25, f3, rmm # perform operation
fnmadd.h f13, f14, f25, f3, rne # perform operation
fnmadd.h f13, f14, f25, f3, rtz # perform operation
fnmadd.h f13, f14, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc93a)
li x14, 0xf6d8f45e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
li x3, 0x62dcb0ec # load x3 with value 0x62dcb0ec
sw x3, 0(x2) # store 0x62dcb0ec in memory
flh f13, 0(x2) # load 0x62dcb0ec from memory into f13
fnmadd.h f14, f26, f12, f13, dyn # perform operation
fnmadd.h f14, f26, f12, f13, rdn # perform operation
fnmadd.h f14, f26, f12, f13, rmm # perform operation
fnmadd.h f14, f26, f12, f13, rne # perform operation
fnmadd.h f14, f26, f12, f13, rtz # perform operation
fnmadd.h f14, f26, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x0)
li x8, 0xc2669c54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xa8070eb2 # load x3 with value 0xa8070eb2
sw x3, 0(x2) # store 0xa8070eb2 in memory
flh f23, 0(x2) # load 0xa8070eb2 from memory into f23
fnmadd.h f8, f6, f3, f23, dyn # perform operation
fnmadd.h f8, f6, f3, f23, rdn # perform operation
fnmadd.h f8, f6, f3, f23, rmm # perform operation
fnmadd.h f8, f6, f3, f23, rne # perform operation
fnmadd.h f8, f6, f3, f23, rtz # perform operation
fnmadd.h f8, f6, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8000)
li x26, 0xb31fc689 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0xf5933e67 # load x3 with value 0xf5933e67
sw x3, 0(x2) # store 0xf5933e67 in memory
flh f31, 0(x2) # load 0xf5933e67 from memory into f31
fnmadd.h f26, f2, f27, f31, dyn # perform operation
fnmadd.h f26, f2, f27, f31, rdn # perform operation
fnmadd.h f26, f2, f27, f31, rmm # perform operation
fnmadd.h f26, f2, f27, f31, rne # perform operation
fnmadd.h f26, f2, f27, f31, rtz # perform operation
fnmadd.h f26, f2, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f2, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3c00)
li x27, 0x0f2f7d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
li x3, 0xd1a7dddc # load x3 with value 0xd1a7dddc
sw x3, 0(x2) # store 0xd1a7dddc in memory
flh f6, 0(x2) # load 0xd1a7dddc from memory into f6
fnmadd.h f27, f15, f11, f6, dyn # perform operation
fnmadd.h f27, f15, f11, f6, rdn # perform operation
fnmadd.h f27, f15, f11, f6, rmm # perform operation
fnmadd.h f27, f15, f11, f6, rne # perform operation
fnmadd.h f27, f15, f11, f6, rtz # perform operation
fnmadd.h f27, f15, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbc00)
li x18, 0x3a01a5e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
li x3, 0x151291c7 # load x3 with value 0x151291c7
sw x3, 0(x2) # store 0x151291c7 in memory
flh f25, 0(x2) # load 0x151291c7 from memory into f25
fnmadd.h f18, f21, f27, f25, dyn # perform operation
fnmadd.h f18, f21, f27, f25, rdn # perform operation
fnmadd.h f18, f21, f27, f25, rmm # perform operation
fnmadd.h f18, f21, f27, f25, rne # perform operation
fnmadd.h f18, f21, f27, f25, rtz # perform operation
fnmadd.h f18, f21, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3e00)
li x25, 0x4c0ff0bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
li x3, 0xa5f1c437 # load x3 with value 0xa5f1c437
sw x3, 0(x2) # store 0xa5f1c437 in memory
flh f17, 0(x2) # load 0xa5f1c437 from memory into f17
fnmadd.h f25, f24, f29, f17, dyn # perform operation
fnmadd.h f25, f24, f29, f17, rdn # perform operation
fnmadd.h f25, f24, f29, f17, rmm # perform operation
fnmadd.h f25, f24, f29, f17, rne # perform operation
fnmadd.h f25, f24, f29, f17, rtz # perform operation
fnmadd.h f25, f24, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbe00)
li x30, 0x8dee54d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0xb014cabc # load x3 with value 0xb014cabc
sw x3, 0(x2) # store 0xb014cabc in memory
flh f21, 0(x2) # load 0xb014cabc from memory into f21
fnmadd.h f30, f25, f6, f21, dyn # perform operation
fnmadd.h f30, f25, f6, f21, rdn # perform operation
fnmadd.h f30, f25, f6, f21, rmm # perform operation
fnmadd.h f30, f25, f6, f21, rne # perform operation
fnmadd.h f30, f25, f6, f21, rtz # perform operation
fnmadd.h f30, f25, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x4000)
li x10, 0x7d73b46a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0x78d5e312 # load x3 with value 0x78d5e312
sw x3, 0(x2) # store 0x78d5e312 in memory
flh f29, 0(x2) # load 0x78d5e312 from memory into f29
fnmadd.h f10, f18, f24, f29, dyn # perform operation
fnmadd.h f10, f18, f24, f29, rdn # perform operation
fnmadd.h f10, f18, f24, f29, rmm # perform operation
fnmadd.h f10, f18, f24, f29, rne # perform operation
fnmadd.h f10, f18, f24, f29, rtz # perform operation
fnmadd.h f10, f18, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f18, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f18, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f18, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f18, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f18, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc000)
li x13, 0x59d34f5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0xf1b64c1e # load x3 with value 0xf1b64c1e
sw x3, 0(x2) # store 0xf1b64c1e in memory
flh f14, 0(x2) # load 0xf1b64c1e from memory into f14
fnmadd.h f13, f15, f30, f14, dyn # perform operation
fnmadd.h f13, f15, f30, f14, rdn # perform operation
fnmadd.h f13, f15, f30, f14, rmm # perform operation
fnmadd.h f13, f15, f30, f14, rne # perform operation
fnmadd.h f13, f15, f30, f14, rtz # perform operation
fnmadd.h f13, f15, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x400)
li x29, 0x93ba2b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
li x3, 0xb659d01c # load x3 with value 0xb659d01c
sw x3, 0(x2) # store 0xb659d01c in memory
flh f14, 0(x2) # load 0xb659d01c from memory into f14
fnmadd.h f29, f2, f26, f14, dyn # perform operation
fnmadd.h f29, f2, f26, f14, rdn # perform operation
fnmadd.h f29, f2, f26, f14, rmm # perform operation
fnmadd.h f29, f2, f26, f14, rne # perform operation
fnmadd.h f29, f2, f26, f14, rtz # perform operation
fnmadd.h f29, f2, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8400)
li x25, 0xbc958f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
li x3, 0x5dee19ca # load x3 with value 0x5dee19ca
sw x3, 0(x2) # store 0x5dee19ca in memory
flh f9, 0(x2) # load 0x5dee19ca from memory into f9
fnmadd.h f25, f6, f29, f9, dyn # perform operation
fnmadd.h f25, f6, f29, f9, rdn # perform operation
fnmadd.h f25, f6, f29, f9, rmm # perform operation
fnmadd.h f25, f6, f29, f9, rne # perform operation
fnmadd.h f25, f6, f29, f9, rtz # perform operation
fnmadd.h f25, f6, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7bff)
li x3, 0xe2d09783 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
li x3, 0xd18e3d11 # load x3 with value 0xd18e3d11
sw x3, 0(x2) # store 0xd18e3d11 in memory
flh f10, 0(x2) # load 0xd18e3d11 from memory into f10
fnmadd.h f3, f19, f11, f10, dyn # perform operation
fnmadd.h f3, f19, f11, f10, rdn # perform operation
fnmadd.h f3, f19, f11, f10, rmm # perform operation
fnmadd.h f3, f19, f11, f10, rne # perform operation
fnmadd.h f3, f19, f11, f10, rtz # perform operation
fnmadd.h f3, f19, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f19, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfbff)
li x7, 0x04c74939 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
li x3, 0x7ad5680e # load x3 with value 0x7ad5680e
sw x3, 0(x2) # store 0x7ad5680e in memory
flh f16, 0(x2) # load 0x7ad5680e from memory into f16
fnmadd.h f7, f28, f26, f16, dyn # perform operation
fnmadd.h f7, f28, f26, f16, rdn # perform operation
fnmadd.h f7, f28, f26, f16, rmm # perform operation
fnmadd.h f7, f28, f26, f16, rne # perform operation
fnmadd.h f7, f28, f26, f16, rtz # perform operation
fnmadd.h f7, f28, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f28, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f28, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f28, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f28, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f28, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3ff)
li x14, 0xdafc42a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
li x3, 0x22ff4a94 # load x3 with value 0x22ff4a94
sw x3, 0(x2) # store 0x22ff4a94 in memory
flh f5, 0(x2) # load 0x22ff4a94 from memory into f5
fnmadd.h f14, f3, f30, f5, dyn # perform operation
fnmadd.h f14, f3, f30, f5, rdn # perform operation
fnmadd.h f14, f3, f30, f5, rmm # perform operation
fnmadd.h f14, f3, f30, f5, rne # perform operation
fnmadd.h f14, f3, f30, f5, rtz # perform operation
fnmadd.h f14, f3, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x83ff)
li x5, 0xf4d6bda9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
li x3, 0xaa5e7d04 # load x3 with value 0xaa5e7d04
sw x3, 0(x2) # store 0xaa5e7d04 in memory
flh f26, 0(x2) # load 0xaa5e7d04 from memory into f26
fnmadd.h f5, f14, f10, f26, dyn # perform operation
fnmadd.h f5, f14, f10, f26, rdn # perform operation
fnmadd.h f5, f14, f10, f26, rmm # perform operation
fnmadd.h f5, f14, f10, f26, rne # perform operation
fnmadd.h f5, f14, f10, f26, rtz # perform operation
fnmadd.h f5, f14, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f14, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f14, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f14, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f14, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f14, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x200)
li x1, 0xa46a46f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0xfb60c418 # load x3 with value 0xfb60c418
sw x3, 0(x2) # store 0xfb60c418 in memory
flh f18, 0(x2) # load 0xfb60c418 from memory into f18
fnmadd.h f1, f22, f28, f18, dyn # perform operation
fnmadd.h f1, f22, f28, f18, rdn # perform operation
fnmadd.h f1, f22, f28, f18, rmm # perform operation
fnmadd.h f1, f22, f28, f18, rne # perform operation
fnmadd.h f1, f22, f28, f18, rtz # perform operation
fnmadd.h f1, f22, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f22, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8200)
li x2, 0x8e804754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x6cba0c98 # load x3 with value 0x6cba0c98
sw x3, 0(x2) # store 0x6cba0c98 in memory
flh f23, 0(x2) # load 0x6cba0c98 from memory into f23
fnmadd.h f2, f9, f7, f23, dyn # perform operation
fnmadd.h f2, f9, f7, f23, rdn # perform operation
fnmadd.h f2, f9, f7, f23, rmm # perform operation
fnmadd.h f2, f9, f7, f23, rne # perform operation
fnmadd.h f2, f9, f7, f23, rtz # perform operation
fnmadd.h f2, f9, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x1)
li x16, 0x3ae5163a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xa2acb1f6 # load x3 with value 0xa2acb1f6
sw x3, 0(x2) # store 0xa2acb1f6 in memory
flh f27, 0(x2) # load 0xa2acb1f6 from memory into f27
fnmadd.h f16, f7, f28, f27, dyn # perform operation
fnmadd.h f16, f7, f28, f27, rdn # perform operation
fnmadd.h f16, f7, f28, f27, rmm # perform operation
fnmadd.h f16, f7, f28, f27, rne # perform operation
fnmadd.h f16, f7, f28, f27, rtz # perform operation
fnmadd.h f16, f7, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8001)
li x26, 0x09b6ec24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0x8695b3c7 # load x3 with value 0x8695b3c7
sw x3, 0(x2) # store 0x8695b3c7 in memory
flh f9, 0(x2) # load 0x8695b3c7 from memory into f9
fnmadd.h f26, f23, f24, f9, dyn # perform operation
fnmadd.h f26, f23, f24, f9, rdn # perform operation
fnmadd.h f26, f23, f24, f9, rmm # perform operation
fnmadd.h f26, f23, f24, f9, rne # perform operation
fnmadd.h f26, f23, f24, f9, rtz # perform operation
fnmadd.h f26, f23, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f23, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c00)
li x14, 0xd66e074c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0x7d9c42c4 # load x3 with value 0x7d9c42c4
sw x3, 0(x2) # store 0x7d9c42c4 in memory
flh f2, 0(x2) # load 0x7d9c42c4 from memory into f2
fnmadd.h f14, f21, f9, f2, dyn # perform operation
fnmadd.h f14, f21, f9, f2, rdn # perform operation
fnmadd.h f14, f21, f9, f2, rmm # perform operation
fnmadd.h f14, f21, f9, f2, rne # perform operation
fnmadd.h f14, f21, f9, f2, rtz # perform operation
fnmadd.h f14, f21, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc00)
li x3, 0xe6242bb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0x328e7bbc # load x3 with value 0x328e7bbc
sw x3, 0(x2) # store 0x328e7bbc in memory
flh f5, 0(x2) # load 0x328e7bbc from memory into f5
fnmadd.h f3, f13, f24, f5, dyn # perform operation
fnmadd.h f3, f13, f24, f5, rdn # perform operation
fnmadd.h f3, f13, f24, f5, rmm # perform operation
fnmadd.h f3, f13, f24, f5, rne # perform operation
fnmadd.h f3, f13, f24, f5, rtz # perform operation
fnmadd.h f3, f13, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7e00)
li x18, 0x442918b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f21, 0(x2) # load 0x00007e00 from memory into f21
li x3, 0x9834c3b1 # load x3 with value 0x9834c3b1
sw x3, 0(x2) # store 0x9834c3b1 in memory
flh f5, 0(x2) # load 0x9834c3b1 from memory into f5
fnmadd.h f18, f22, f21, f5, dyn # perform operation
fnmadd.h f18, f22, f21, f5, rdn # perform operation
fnmadd.h f18, f22, f21, f5, rmm # perform operation
fnmadd.h f18, f22, f21, f5, rne # perform operation
fnmadd.h f18, f22, f21, f5, rtz # perform operation
fnmadd.h f18, f22, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7fff)
li x31, 0xed31859b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0xf6d28d17 # load x3 with value 0xf6d28d17
sw x3, 0(x2) # store 0xf6d28d17 in memory
flh f28, 0(x2) # load 0xf6d28d17 from memory into f28
fnmadd.h f31, f23, f9, f28, dyn # perform operation
fnmadd.h f31, f23, f9, f28, rdn # perform operation
fnmadd.h f31, f23, f9, f28, rmm # perform operation
fnmadd.h f31, f23, f9, f28, rne # perform operation
fnmadd.h f31, f23, f9, f28, rtz # perform operation
fnmadd.h f31, f23, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c01)
li x2, 0x8c76a6ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
li x3, 0x96924fff # load x3 with value 0x96924fff
sw x3, 0(x2) # store 0x96924fff in memory
flh f19, 0(x2) # load 0x96924fff from memory into f19
fnmadd.h f2, f15, f3, f19, dyn # perform operation
fnmadd.h f2, f15, f3, f19, rdn # perform operation
fnmadd.h f2, f15, f3, f19, rmm # perform operation
fnmadd.h f2, f15, f3, f19, rne # perform operation
fnmadd.h f2, f15, f3, f19, rtz # perform operation
fnmadd.h f2, f15, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7dff)
li x14, 0x719d9a07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x3939d319 # load x3 with value 0x3939d319
sw x3, 0(x2) # store 0x3939d319 in memory
flh f17, 0(x2) # load 0x3939d319 from memory into f17
fnmadd.h f14, f19, f21, f17, dyn # perform operation
fnmadd.h f14, f19, f21, f17, rdn # perform operation
fnmadd.h f14, f19, f21, f17, rmm # perform operation
fnmadd.h f14, f19, f21, f17, rne # perform operation
fnmadd.h f14, f19, f21, f17, rtz # perform operation
fnmadd.h f14, f19, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x58b4)
li x21, 0x556d7606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0xa7cab103 # load x3 with value 0xa7cab103
sw x3, 0(x2) # store 0xa7cab103 in memory
flh f3, 0(x2) # load 0xa7cab103 from memory into f3
fnmadd.h f21, f17, f29, f3, dyn # perform operation
fnmadd.h f21, f17, f29, f3, rdn # perform operation
fnmadd.h f21, f17, f29, f3, rmm # perform operation
fnmadd.h f21, f17, f29, f3, rne # perform operation
fnmadd.h f21, f17, f29, f3, rtz # perform operation
fnmadd.h f21, f17, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc93a)
li x27, 0xaeb9a50b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0xae8e9327 # load x3 with value 0xae8e9327
sw x3, 0(x2) # store 0xae8e9327 in memory
flh f3, 0(x2) # load 0xae8e9327 from memory into f3
fnmadd.h f27, f19, f16, f3, dyn # perform operation
fnmadd.h f27, f19, f16, f3, rdn # perform operation
fnmadd.h f27, f19, f16, f3, rmm # perform operation
fnmadd.h f27, f19, f16, f3, rne # perform operation
fnmadd.h f27, f19, f16, f3, rtz # perform operation
fnmadd.h f27, f19, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f19, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x0)
li x15, 0x2d2cb64c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x9d6b18b2 # load x3 with value 0x9d6b18b2
sw x3, 0(x2) # store 0x9d6b18b2 in memory
flh f24, 0(x2) # load 0x9d6b18b2 from memory into f24
fnmadd.h f15, f31, f4, f24, dyn # perform operation
fnmadd.h f15, f31, f4, f24, rdn # perform operation
fnmadd.h f15, f31, f4, f24, rmm # perform operation
fnmadd.h f15, f31, f4, f24, rne # perform operation
fnmadd.h f15, f31, f4, f24, rtz # perform operation
fnmadd.h f15, f31, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8000)
li x22, 0x2ca4f96e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
li x3, 0x6d2da24a # load x3 with value 0x6d2da24a
sw x3, 0(x2) # store 0x6d2da24a in memory
flh f28, 0(x2) # load 0x6d2da24a from memory into f28
fnmadd.h f22, f30, f25, f28, dyn # perform operation
fnmadd.h f22, f30, f25, f28, rdn # perform operation
fnmadd.h f22, f30, f25, f28, rmm # perform operation
fnmadd.h f22, f30, f25, f28, rne # perform operation
fnmadd.h f22, f30, f25, f28, rtz # perform operation
fnmadd.h f22, f30, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3c00)
li x2, 0x4b567688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
li x3, 0xdb81a675 # load x3 with value 0xdb81a675
sw x3, 0(x2) # store 0xdb81a675 in memory
flh f26, 0(x2) # load 0xdb81a675 from memory into f26
fnmadd.h f2, f30, f7, f26, dyn # perform operation
fnmadd.h f2, f30, f7, f26, rdn # perform operation
fnmadd.h f2, f30, f7, f26, rmm # perform operation
fnmadd.h f2, f30, f7, f26, rne # perform operation
fnmadd.h f2, f30, f7, f26, rtz # perform operation
fnmadd.h f2, f30, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbc00)
li x28, 0x147c5fff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x7c2fb231 # load x3 with value 0x7c2fb231
sw x3, 0(x2) # store 0x7c2fb231 in memory
flh f6, 0(x2) # load 0x7c2fb231 from memory into f6
fnmadd.h f28, f25, f24, f6, dyn # perform operation
fnmadd.h f28, f25, f24, f6, rdn # perform operation
fnmadd.h f28, f25, f24, f6, rmm # perform operation
fnmadd.h f28, f25, f24, f6, rne # perform operation
fnmadd.h f28, f25, f24, f6, rtz # perform operation
fnmadd.h f28, f25, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3e00)
li x7, 0x380ba6c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
li x3, 0xe0c2452c # load x3 with value 0xe0c2452c
sw x3, 0(x2) # store 0xe0c2452c in memory
flh f17, 0(x2) # load 0xe0c2452c from memory into f17
fnmadd.h f7, f23, f9, f17, dyn # perform operation
fnmadd.h f7, f23, f9, f17, rdn # perform operation
fnmadd.h f7, f23, f9, f17, rmm # perform operation
fnmadd.h f7, f23, f9, f17, rne # perform operation
fnmadd.h f7, f23, f9, f17, rtz # perform operation
fnmadd.h f7, f23, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbe00)
li x2, 0x63be0bc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0xf43fef0e # load x3 with value 0xf43fef0e
sw x3, 0(x2) # store 0xf43fef0e in memory
flh f19, 0(x2) # load 0xf43fef0e from memory into f19
fnmadd.h f2, f8, f23, f19, dyn # perform operation
fnmadd.h f2, f8, f23, f19, rdn # perform operation
fnmadd.h f2, f8, f23, f19, rmm # perform operation
fnmadd.h f2, f8, f23, f19, rne # perform operation
fnmadd.h f2, f8, f23, f19, rtz # perform operation
fnmadd.h f2, f8, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x4000)
li x3, 0x1d8ae47b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0x87129a2f # load x3 with value 0x87129a2f
sw x3, 0(x2) # store 0x87129a2f in memory
flh f11, 0(x2) # load 0x87129a2f from memory into f11
fnmadd.h f3, f19, f4, f11, dyn # perform operation
fnmadd.h f3, f19, f4, f11, rdn # perform operation
fnmadd.h f3, f19, f4, f11, rmm # perform operation
fnmadd.h f3, f19, f4, f11, rne # perform operation
fnmadd.h f3, f19, f4, f11, rtz # perform operation
fnmadd.h f3, f19, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f19, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f19, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f19, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f19, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f19, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc000)
li x9, 0xb9e44dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0xd9359f83 # load x3 with value 0xd9359f83
sw x3, 0(x2) # store 0xd9359f83 in memory
flh f2, 0(x2) # load 0xd9359f83 from memory into f2
fnmadd.h f9, f13, f12, f2, dyn # perform operation
fnmadd.h f9, f13, f12, f2, rdn # perform operation
fnmadd.h f9, f13, f12, f2, rmm # perform operation
fnmadd.h f9, f13, f12, f2, rne # perform operation
fnmadd.h f9, f13, f12, f2, rtz # perform operation
fnmadd.h f9, f13, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f13, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x400)
li x24, 0x59dbb1c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
li x3, 0x5500c9c8 # load x3 with value 0x5500c9c8
sw x3, 0(x2) # store 0x5500c9c8 in memory
flh f9, 0(x2) # load 0x5500c9c8 from memory into f9
fnmadd.h f24, f2, f20, f9, dyn # perform operation
fnmadd.h f24, f2, f20, f9, rdn # perform operation
fnmadd.h f24, f2, f20, f9, rmm # perform operation
fnmadd.h f24, f2, f20, f9, rne # perform operation
fnmadd.h f24, f2, f20, f9, rtz # perform operation
fnmadd.h f24, f2, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8400)
li x23, 0x3e641e47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x61883bfc # load x3 with value 0x61883bfc
sw x3, 0(x2) # store 0x61883bfc in memory
flh f21, 0(x2) # load 0x61883bfc from memory into f21
fnmadd.h f23, f28, f24, f21, dyn # perform operation
fnmadd.h f23, f28, f24, f21, rdn # perform operation
fnmadd.h f23, f28, f24, f21, rmm # perform operation
fnmadd.h f23, f28, f24, f21, rne # perform operation
fnmadd.h f23, f28, f24, f21, rtz # perform operation
fnmadd.h f23, f28, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f28, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f28, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f28, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f28, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f28, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7bff)
li x30, 0xf2b4c5c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0x58626269 # load x3 with value 0x58626269
sw x3, 0(x2) # store 0x58626269 in memory
flh f19, 0(x2) # load 0x58626269 from memory into f19
fnmadd.h f30, f9, f20, f19, dyn # perform operation
fnmadd.h f30, f9, f20, f19, rdn # perform operation
fnmadd.h f30, f9, f20, f19, rmm # perform operation
fnmadd.h f30, f9, f20, f19, rne # perform operation
fnmadd.h f30, f9, f20, f19, rtz # perform operation
fnmadd.h f30, f9, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfbff)
li x3, 0x035ecb78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
li x3, 0x4b9c86ad # load x3 with value 0x4b9c86ad
sw x3, 0(x2) # store 0x4b9c86ad in memory
flh f6, 0(x2) # load 0x4b9c86ad from memory into f6
fnmadd.h f3, f7, f8, f6, dyn # perform operation
fnmadd.h f3, f7, f8, f6, rdn # perform operation
fnmadd.h f3, f7, f8, f6, rmm # perform operation
fnmadd.h f3, f7, f8, f6, rne # perform operation
fnmadd.h f3, f7, f8, f6, rtz # perform operation
fnmadd.h f3, f7, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3ff)
li x14, 0xd1b84eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0x50e3a760 # load x3 with value 0x50e3a760
sw x3, 0(x2) # store 0x50e3a760 in memory
flh f20, 0(x2) # load 0x50e3a760 from memory into f20
fnmadd.h f14, f8, f29, f20, dyn # perform operation
fnmadd.h f14, f8, f29, f20, rdn # perform operation
fnmadd.h f14, f8, f29, f20, rmm # perform operation
fnmadd.h f14, f8, f29, f20, rne # perform operation
fnmadd.h f14, f8, f29, f20, rtz # perform operation
fnmadd.h f14, f8, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x83ff)
li x5, 0xb9219dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0xde9eecb0 # load x3 with value 0xde9eecb0
sw x3, 0(x2) # store 0xde9eecb0 in memory
flh f21, 0(x2) # load 0xde9eecb0 from memory into f21
fnmadd.h f5, f27, f9, f21, dyn # perform operation
fnmadd.h f5, f27, f9, f21, rdn # perform operation
fnmadd.h f5, f27, f9, f21, rmm # perform operation
fnmadd.h f5, f27, f9, f21, rne # perform operation
fnmadd.h f5, f27, f9, f21, rtz # perform operation
fnmadd.h f5, f27, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x200)
li x3, 0xa49d04fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0x8b4429f1 # load x3 with value 0x8b4429f1
sw x3, 0(x2) # store 0x8b4429f1 in memory
flh f11, 0(x2) # load 0x8b4429f1 from memory into f11
fnmadd.h f3, f6, f18, f11, dyn # perform operation
fnmadd.h f3, f6, f18, f11, rdn # perform operation
fnmadd.h f3, f6, f18, f11, rmm # perform operation
fnmadd.h f3, f6, f18, f11, rne # perform operation
fnmadd.h f3, f6, f18, f11, rtz # perform operation
fnmadd.h f3, f6, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8200)
li x27, 0x36dcf23c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0xaf1ccc7b # load x3 with value 0xaf1ccc7b
sw x3, 0(x2) # store 0xaf1ccc7b in memory
flh f20, 0(x2) # load 0xaf1ccc7b from memory into f20
fnmadd.h f27, f1, f14, f20, dyn # perform operation
fnmadd.h f27, f1, f14, f20, rdn # perform operation
fnmadd.h f27, f1, f14, f20, rmm # perform operation
fnmadd.h f27, f1, f14, f20, rne # perform operation
fnmadd.h f27, f1, f14, f20, rtz # perform operation
fnmadd.h f27, f1, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x1)
li x31, 0x60127f03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x97ea8d3b # load x3 with value 0x97ea8d3b
sw x3, 0(x2) # store 0x97ea8d3b in memory
flh f3, 0(x2) # load 0x97ea8d3b from memory into f3
fnmadd.h f31, f27, f19, f3, dyn # perform operation
fnmadd.h f31, f27, f19, f3, rdn # perform operation
fnmadd.h f31, f27, f19, f3, rmm # perform operation
fnmadd.h f31, f27, f19, f3, rne # perform operation
fnmadd.h f31, f27, f19, f3, rtz # perform operation
fnmadd.h f31, f27, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f27, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f27, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f27, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f27, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f27, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8001)
li x23, 0x3a27c717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
li x3, 0x90c44822 # load x3 with value 0x90c44822
sw x3, 0(x2) # store 0x90c44822 in memory
flh f6, 0(x2) # load 0x90c44822 from memory into f6
fnmadd.h f23, f18, f3, f6, dyn # perform operation
fnmadd.h f23, f18, f3, f6, rdn # perform operation
fnmadd.h f23, f18, f3, f6, rmm # perform operation
fnmadd.h f23, f18, f3, f6, rne # perform operation
fnmadd.h f23, f18, f3, f6, rtz # perform operation
fnmadd.h f23, f18, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f18, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c00)
li x1, 0x0db2107f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
li x3, 0x871c9c09 # load x3 with value 0x871c9c09
sw x3, 0(x2) # store 0x871c9c09 in memory
flh f21, 0(x2) # load 0x871c9c09 from memory into f21
fnmadd.h f1, f8, f28, f21, dyn # perform operation
fnmadd.h f1, f8, f28, f21, rdn # perform operation
fnmadd.h f1, f8, f28, f21, rmm # perform operation
fnmadd.h f1, f8, f28, f21, rne # perform operation
fnmadd.h f1, f8, f28, f21, rtz # perform operation
fnmadd.h f1, f8, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc00)
li x8, 0x8c4f5636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
li x3, 0x7e9fccd8 # load x3 with value 0x7e9fccd8
sw x3, 0(x2) # store 0x7e9fccd8 in memory
flh f17, 0(x2) # load 0x7e9fccd8 from memory into f17
fnmadd.h f8, f11, f5, f17, dyn # perform operation
fnmadd.h f8, f11, f5, f17, rdn # perform operation
fnmadd.h f8, f11, f5, f17, rmm # perform operation
fnmadd.h f8, f11, f5, f17, rne # perform operation
fnmadd.h f8, f11, f5, f17, rtz # perform operation
fnmadd.h f8, f11, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7e00)
li x23, 0x86cbb80e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0xc3c207b4 # load x3 with value 0xc3c207b4
sw x3, 0(x2) # store 0xc3c207b4 in memory
flh f12, 0(x2) # load 0xc3c207b4 from memory into f12
fnmadd.h f23, f19, f16, f12, dyn # perform operation
fnmadd.h f23, f19, f16, f12, rdn # perform operation
fnmadd.h f23, f19, f16, f12, rmm # perform operation
fnmadd.h f23, f19, f16, f12, rne # perform operation
fnmadd.h f23, f19, f16, f12, rtz # perform operation
fnmadd.h f23, f19, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7fff)
li x11, 0xbc8d787a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0x419f9c9c # load x3 with value 0x419f9c9c
sw x3, 0(x2) # store 0x419f9c9c in memory
flh f24, 0(x2) # load 0x419f9c9c from memory into f24
fnmadd.h f11, f3, f23, f24, dyn # perform operation
fnmadd.h f11, f3, f23, f24, rdn # perform operation
fnmadd.h f11, f3, f23, f24, rmm # perform operation
fnmadd.h f11, f3, f23, f24, rne # perform operation
fnmadd.h f11, f3, f23, f24, rtz # perform operation
fnmadd.h f11, f3, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c01)
li x14, 0xbe9ebaac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
li x3, 0xb809e6d5 # load x3 with value 0xb809e6d5
sw x3, 0(x2) # store 0xb809e6d5 in memory
flh f23, 0(x2) # load 0xb809e6d5 from memory into f23
fnmadd.h f14, f3, f12, f23, dyn # perform operation
fnmadd.h f14, f3, f12, f23, rdn # perform operation
fnmadd.h f14, f3, f12, f23, rmm # perform operation
fnmadd.h f14, f3, f12, f23, rne # perform operation
fnmadd.h f14, f3, f12, f23, rtz # perform operation
fnmadd.h f14, f3, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7dff)
li x26, 0xa48f1a91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0x5dfb03a9 # load x3 with value 0x5dfb03a9
sw x3, 0(x2) # store 0x5dfb03a9 in memory
flh f17, 0(x2) # load 0x5dfb03a9 from memory into f17
fnmadd.h f26, f22, f9, f17, dyn # perform operation
fnmadd.h f26, f22, f9, f17, rdn # perform operation
fnmadd.h f26, f22, f9, f17, rmm # perform operation
fnmadd.h f26, f22, f9, f17, rne # perform operation
fnmadd.h f26, f22, f9, f17, rtz # perform operation
fnmadd.h f26, f22, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f22, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f22, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f22, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f22, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f22, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x58b4)
li x23, 0xd769122a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0xae47ea7b # load x3 with value 0xae47ea7b
sw x3, 0(x2) # store 0xae47ea7b in memory
flh f24, 0(x2) # load 0xae47ea7b from memory into f24
fnmadd.h f23, f4, f21, f24, dyn # perform operation
fnmadd.h f23, f4, f21, f24, rdn # perform operation
fnmadd.h f23, f4, f21, f24, rmm # perform operation
fnmadd.h f23, f4, f21, f24, rne # perform operation
fnmadd.h f23, f4, f21, f24, rtz # perform operation
fnmadd.h f23, f4, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f4, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f4, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f4, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f4, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f4, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc93a)
li x29, 0x26038007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
li x3, 0xf092ff9b # load x3 with value 0xf092ff9b
sw x3, 0(x2) # store 0xf092ff9b in memory
flh f2, 0(x2) # load 0xf092ff9b from memory into f2
fnmadd.h f29, f31, f7, f2, dyn # perform operation
fnmadd.h f29, f31, f7, f2, rdn # perform operation
fnmadd.h f29, f31, f7, f2, rmm # perform operation
fnmadd.h f29, f31, f7, f2, rne # perform operation
fnmadd.h f29, f31, f7, f2, rtz # perform operation
fnmadd.h f29, f31, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x0)
li x26, 0x83f9686e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x97d2088e # load x3 with value 0x97d2088e
sw x3, 0(x2) # store 0x97d2088e in memory
flh f5, 0(x2) # load 0x97d2088e from memory into f5
fnmadd.h f26, f16, f28, f5, dyn # perform operation
fnmadd.h f26, f16, f28, f5, rdn # perform operation
fnmadd.h f26, f16, f28, f5, rmm # perform operation
fnmadd.h f26, f16, f28, f5, rne # perform operation
fnmadd.h f26, f16, f28, f5, rtz # perform operation
fnmadd.h f26, f16, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8000)
li x9, 0xd6bb21ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x8de758bb # load x3 with value 0x8de758bb
sw x3, 0(x2) # store 0x8de758bb in memory
flh f26, 0(x2) # load 0x8de758bb from memory into f26
fnmadd.h f9, f2, f12, f26, dyn # perform operation
fnmadd.h f9, f2, f12, f26, rdn # perform operation
fnmadd.h f9, f2, f12, f26, rmm # perform operation
fnmadd.h f9, f2, f12, f26, rne # perform operation
fnmadd.h f9, f2, f12, f26, rtz # perform operation
fnmadd.h f9, f2, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f2, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3c00)
li x6, 0xc48c50e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
li x3, 0x81d0ae60 # load x3 with value 0x81d0ae60
sw x3, 0(x2) # store 0x81d0ae60 in memory
flh f3, 0(x2) # load 0x81d0ae60 from memory into f3
fnmadd.h f6, f13, f20, f3, dyn # perform operation
fnmadd.h f6, f13, f20, f3, rdn # perform operation
fnmadd.h f6, f13, f20, f3, rmm # perform operation
fnmadd.h f6, f13, f20, f3, rne # perform operation
fnmadd.h f6, f13, f20, f3, rtz # perform operation
fnmadd.h f6, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f13, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbc00)
li x11, 0x9b487f7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0xd01d1bc0 # load x3 with value 0xd01d1bc0
sw x3, 0(x2) # store 0xd01d1bc0 in memory
flh f12, 0(x2) # load 0xd01d1bc0 from memory into f12
fnmadd.h f11, f6, f21, f12, dyn # perform operation
fnmadd.h f11, f6, f21, f12, rdn # perform operation
fnmadd.h f11, f6, f21, f12, rmm # perform operation
fnmadd.h f11, f6, f21, f12, rne # perform operation
fnmadd.h f11, f6, f21, f12, rtz # perform operation
fnmadd.h f11, f6, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3e00)
li x9, 0xcd87b4bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
li x3, 0xfe92084d # load x3 with value 0xfe92084d
sw x3, 0(x2) # store 0xfe92084d in memory
flh f20, 0(x2) # load 0xfe92084d from memory into f20
fnmadd.h f9, f28, f24, f20, dyn # perform operation
fnmadd.h f9, f28, f24, f20, rdn # perform operation
fnmadd.h f9, f28, f24, f20, rmm # perform operation
fnmadd.h f9, f28, f24, f20, rne # perform operation
fnmadd.h f9, f28, f24, f20, rtz # perform operation
fnmadd.h f9, f28, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbe00)
li x27, 0x069a687c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0xbdf22869 # load x3 with value 0xbdf22869
sw x3, 0(x2) # store 0xbdf22869 in memory
flh f29, 0(x2) # load 0xbdf22869 from memory into f29
fnmadd.h f27, f12, f13, f29, dyn # perform operation
fnmadd.h f27, f12, f13, f29, rdn # perform operation
fnmadd.h f27, f12, f13, f29, rmm # perform operation
fnmadd.h f27, f12, f13, f29, rne # perform operation
fnmadd.h f27, f12, f13, f29, rtz # perform operation
fnmadd.h f27, f12, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x4000)
li x26, 0xe6178fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0x2af680d4 # load x3 with value 0x2af680d4
sw x3, 0(x2) # store 0x2af680d4 in memory
flh f29, 0(x2) # load 0x2af680d4 from memory into f29
fnmadd.h f26, f18, f28, f29, dyn # perform operation
fnmadd.h f26, f18, f28, f29, rdn # perform operation
fnmadd.h f26, f18, f28, f29, rmm # perform operation
fnmadd.h f26, f18, f28, f29, rne # perform operation
fnmadd.h f26, f18, f28, f29, rtz # perform operation
fnmadd.h f26, f18, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc000)
li x17, 0x1ee27c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
li x3, 0x16b75679 # load x3 with value 0x16b75679
sw x3, 0(x2) # store 0x16b75679 in memory
flh f22, 0(x2) # load 0x16b75679 from memory into f22
fnmadd.h f17, f25, f31, f22, dyn # perform operation
fnmadd.h f17, f25, f31, f22, rdn # perform operation
fnmadd.h f17, f25, f31, f22, rmm # perform operation
fnmadd.h f17, f25, f31, f22, rne # perform operation
fnmadd.h f17, f25, f31, f22, rtz # perform operation
fnmadd.h f17, f25, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x400)
li x20, 0x1a466d9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x3f93eed7 # load x3 with value 0x3f93eed7
sw x3, 0(x2) # store 0x3f93eed7 in memory
flh f3, 0(x2) # load 0x3f93eed7 from memory into f3
fnmadd.h f20, f6, f21, f3, dyn # perform operation
fnmadd.h f20, f6, f21, f3, rdn # perform operation
fnmadd.h f20, f6, f21, f3, rmm # perform operation
fnmadd.h f20, f6, f21, f3, rne # perform operation
fnmadd.h f20, f6, f21, f3, rtz # perform operation
fnmadd.h f20, f6, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8400)
li x26, 0x27eefe99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
li x3, 0x2e2dd5f8 # load x3 with value 0x2e2dd5f8
sw x3, 0(x2) # store 0x2e2dd5f8 in memory
flh f8, 0(x2) # load 0x2e2dd5f8 from memory into f8
fnmadd.h f26, f30, f17, f8, dyn # perform operation
fnmadd.h f26, f30, f17, f8, rdn # perform operation
fnmadd.h f26, f30, f17, f8, rmm # perform operation
fnmadd.h f26, f30, f17, f8, rne # perform operation
fnmadd.h f26, f30, f17, f8, rtz # perform operation
fnmadd.h f26, f30, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7bff)
li x30, 0x7dd0d7c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0x26e21cf8 # load x3 with value 0x26e21cf8
sw x3, 0(x2) # store 0x26e21cf8 in memory
flh f4, 0(x2) # load 0x26e21cf8 from memory into f4
fnmadd.h f30, f6, f8, f4, dyn # perform operation
fnmadd.h f30, f6, f8, f4, rdn # perform operation
fnmadd.h f30, f6, f8, f4, rmm # perform operation
fnmadd.h f30, f6, f8, f4, rne # perform operation
fnmadd.h f30, f6, f8, f4, rtz # perform operation
fnmadd.h f30, f6, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfbff)
li x4, 0x899a3ebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
li x3, 0xa2498817 # load x3 with value 0xa2498817
sw x3, 0(x2) # store 0xa2498817 in memory
flh f31, 0(x2) # load 0xa2498817 from memory into f31
fnmadd.h f4, f26, f2, f31, dyn # perform operation
fnmadd.h f4, f26, f2, f31, rdn # perform operation
fnmadd.h f4, f26, f2, f31, rmm # perform operation
fnmadd.h f4, f26, f2, f31, rne # perform operation
fnmadd.h f4, f26, f2, f31, rtz # perform operation
fnmadd.h f4, f26, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f26, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f26, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f26, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f26, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f26, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3ff)
li x9, 0x621f8e55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0x986e171e # load x3 with value 0x986e171e
sw x3, 0(x2) # store 0x986e171e in memory
flh f10, 0(x2) # load 0x986e171e from memory into f10
fnmadd.h f9, f11, f20, f10, dyn # perform operation
fnmadd.h f9, f11, f20, f10, rdn # perform operation
fnmadd.h f9, f11, f20, f10, rmm # perform operation
fnmadd.h f9, f11, f20, f10, rne # perform operation
fnmadd.h f9, f11, f20, f10, rtz # perform operation
fnmadd.h f9, f11, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f11, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x83ff)
li x27, 0x860ba833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x234bc4d9 # load x3 with value 0x234bc4d9
sw x3, 0(x2) # store 0x234bc4d9 in memory
flh f28, 0(x2) # load 0x234bc4d9 from memory into f28
fnmadd.h f27, f8, f17, f28, dyn # perform operation
fnmadd.h f27, f8, f17, f28, rdn # perform operation
fnmadd.h f27, f8, f17, f28, rmm # perform operation
fnmadd.h f27, f8, f17, f28, rne # perform operation
fnmadd.h f27, f8, f17, f28, rtz # perform operation
fnmadd.h f27, f8, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x200)
li x4, 0xd453d362 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
li x3, 0xa3743172 # load x3 with value 0xa3743172
sw x3, 0(x2) # store 0xa3743172 in memory
flh f14, 0(x2) # load 0xa3743172 from memory into f14
fnmadd.h f4, f3, f22, f14, dyn # perform operation
fnmadd.h f4, f3, f22, f14, rdn # perform operation
fnmadd.h f4, f3, f22, f14, rmm # perform operation
fnmadd.h f4, f3, f22, f14, rne # perform operation
fnmadd.h f4, f3, f22, f14, rtz # perform operation
fnmadd.h f4, f3, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8200)
li x26, 0x9eb6e538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
li x3, 0x8b38266a # load x3 with value 0x8b38266a
sw x3, 0(x2) # store 0x8b38266a in memory
flh f8, 0(x2) # load 0x8b38266a from memory into f8
fnmadd.h f26, f9, f10, f8, dyn # perform operation
fnmadd.h f26, f9, f10, f8, rdn # perform operation
fnmadd.h f26, f9, f10, f8, rmm # perform operation
fnmadd.h f26, f9, f10, f8, rne # perform operation
fnmadd.h f26, f9, f10, f8, rtz # perform operation
fnmadd.h f26, f9, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x1)
li x14, 0xc9ec8bef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0xe51ef514 # load x3 with value 0xe51ef514
sw x3, 0(x2) # store 0xe51ef514 in memory
flh f8, 0(x2) # load 0xe51ef514 from memory into f8
fnmadd.h f14, f28, f3, f8, dyn # perform operation
fnmadd.h f14, f28, f3, f8, rdn # perform operation
fnmadd.h f14, f28, f3, f8, rmm # perform operation
fnmadd.h f14, f28, f3, f8, rne # perform operation
fnmadd.h f14, f28, f3, f8, rtz # perform operation
fnmadd.h f14, f28, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8001)
li x23, 0xa20ccc75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0x38f5786e # load x3 with value 0x38f5786e
sw x3, 0(x2) # store 0x38f5786e in memory
flh f22, 0(x2) # load 0x38f5786e from memory into f22
fnmadd.h f23, f15, f4, f22, dyn # perform operation
fnmadd.h f23, f15, f4, f22, rdn # perform operation
fnmadd.h f23, f15, f4, f22, rmm # perform operation
fnmadd.h f23, f15, f4, f22, rne # perform operation
fnmadd.h f23, f15, f4, f22, rtz # perform operation
fnmadd.h f23, f15, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f15, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f15, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f15, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f15, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f15, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c00)
li x21, 0xfc661a26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x170bf484 # load x3 with value 0x170bf484
sw x3, 0(x2) # store 0x170bf484 in memory
flh f19, 0(x2) # load 0x170bf484 from memory into f19
fnmadd.h f21, f13, f22, f19, dyn # perform operation
fnmadd.h f21, f13, f22, f19, rdn # perform operation
fnmadd.h f21, f13, f22, f19, rmm # perform operation
fnmadd.h f21, f13, f22, f19, rne # perform operation
fnmadd.h f21, f13, f22, f19, rtz # perform operation
fnmadd.h f21, f13, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc00)
li x10, 0x644c6c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
li x3, 0x3773ca81 # load x3 with value 0x3773ca81
sw x3, 0(x2) # store 0x3773ca81 in memory
flh f15, 0(x2) # load 0x3773ca81 from memory into f15
fnmadd.h f10, f1, f5, f15, dyn # perform operation
fnmadd.h f10, f1, f5, f15, rdn # perform operation
fnmadd.h f10, f1, f5, f15, rmm # perform operation
fnmadd.h f10, f1, f5, f15, rne # perform operation
fnmadd.h f10, f1, f5, f15, rtz # perform operation
fnmadd.h f10, f1, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7e00)
li x2, 0xf45a03bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
li x3, 0x55af8a1b # load x3 with value 0x55af8a1b
sw x3, 0(x2) # store 0x55af8a1b in memory
flh f11, 0(x2) # load 0x55af8a1b from memory into f11
fnmadd.h f2, f15, f22, f11, dyn # perform operation
fnmadd.h f2, f15, f22, f11, rdn # perform operation
fnmadd.h f2, f15, f22, f11, rmm # perform operation
fnmadd.h f2, f15, f22, f11, rne # perform operation
fnmadd.h f2, f15, f22, f11, rtz # perform operation
fnmadd.h f2, f15, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7fff)
li x10, 0xae3941fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f4, 0(x2) # load 0x00007fff from memory into f4
li x3, 0xc989ae7b # load x3 with value 0xc989ae7b
sw x3, 0(x2) # store 0xc989ae7b in memory
flh f12, 0(x2) # load 0xc989ae7b from memory into f12
fnmadd.h f10, f6, f4, f12, dyn # perform operation
fnmadd.h f10, f6, f4, f12, rdn # perform operation
fnmadd.h f10, f6, f4, f12, rmm # perform operation
fnmadd.h f10, f6, f4, f12, rne # perform operation
fnmadd.h f10, f6, f4, f12, rtz # perform operation
fnmadd.h f10, f6, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c01)
li x22, 0x5e312a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0xbbd0cc39 # load x3 with value 0xbbd0cc39
sw x3, 0(x2) # store 0xbbd0cc39 in memory
flh f14, 0(x2) # load 0xbbd0cc39 from memory into f14
fnmadd.h f22, f23, f16, f14, dyn # perform operation
fnmadd.h f22, f23, f16, f14, rdn # perform operation
fnmadd.h f22, f23, f16, f14, rmm # perform operation
fnmadd.h f22, f23, f16, f14, rne # perform operation
fnmadd.h f22, f23, f16, f14, rtz # perform operation
fnmadd.h f22, f23, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7dff)
li x5, 0xad45e966 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
li x3, 0x73517d73 # load x3 with value 0x73517d73
sw x3, 0(x2) # store 0x73517d73 in memory
flh f1, 0(x2) # load 0x73517d73 from memory into f1
fnmadd.h f5, f20, f31, f1, dyn # perform operation
fnmadd.h f5, f20, f31, f1, rdn # perform operation
fnmadd.h f5, f20, f31, f1, rmm # perform operation
fnmadd.h f5, f20, f31, f1, rne # perform operation
fnmadd.h f5, f20, f31, f1, rtz # perform operation
fnmadd.h f5, f20, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x58b4)
li x2, 0x79016726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x02275e1b # load x3 with value 0x02275e1b
sw x3, 0(x2) # store 0x02275e1b in memory
flh f20, 0(x2) # load 0x02275e1b from memory into f20
fnmadd.h f2, f30, f21, f20, dyn # perform operation
fnmadd.h f2, f30, f21, f20, rdn # perform operation
fnmadd.h f2, f30, f21, f20, rmm # perform operation
fnmadd.h f2, f30, f21, f20, rne # perform operation
fnmadd.h f2, f30, f21, f20, rtz # perform operation
fnmadd.h f2, f30, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc93a)
li x26, 0x6d639806 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
li x3, 0x7a17be6b # load x3 with value 0x7a17be6b
sw x3, 0(x2) # store 0x7a17be6b in memory
flh f18, 0(x2) # load 0x7a17be6b from memory into f18
fnmadd.h f26, f25, f31, f18, dyn # perform operation
fnmadd.h f26, f25, f31, f18, rdn # perform operation
fnmadd.h f26, f25, f31, f18, rmm # perform operation
fnmadd.h f26, f25, f31, f18, rne # perform operation
fnmadd.h f26, f25, f31, f18, rtz # perform operation
fnmadd.h f26, f25, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x0)
li x11, 0x302f7dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x6c68318b # load x3 with value 0x6c68318b
sw x3, 0(x2) # store 0x6c68318b in memory
flh f13, 0(x2) # load 0x6c68318b from memory into f13
fnmadd.h f11, f6, f26, f13, dyn # perform operation
fnmadd.h f11, f6, f26, f13, rdn # perform operation
fnmadd.h f11, f6, f26, f13, rmm # perform operation
fnmadd.h f11, f6, f26, f13, rne # perform operation
fnmadd.h f11, f6, f26, f13, rtz # perform operation
fnmadd.h f11, f6, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8000)
li x6, 0x92bc69b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x093fc8f0 # load x3 with value 0x093fc8f0
sw x3, 0(x2) # store 0x093fc8f0 in memory
flh f19, 0(x2) # load 0x093fc8f0 from memory into f19
fnmadd.h f6, f28, f17, f19, dyn # perform operation
fnmadd.h f6, f28, f17, f19, rdn # perform operation
fnmadd.h f6, f28, f17, f19, rmm # perform operation
fnmadd.h f6, f28, f17, f19, rne # perform operation
fnmadd.h f6, f28, f17, f19, rtz # perform operation
fnmadd.h f6, f28, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f17, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3c00)
li x14, 0x97a04efb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
li x3, 0x2f1700b5 # load x3 with value 0x2f1700b5
sw x3, 0(x2) # store 0x2f1700b5 in memory
flh f13, 0(x2) # load 0x2f1700b5 from memory into f13
fnmadd.h f14, f11, f9, f13, dyn # perform operation
fnmadd.h f14, f11, f9, f13, rdn # perform operation
fnmadd.h f14, f11, f9, f13, rmm # perform operation
fnmadd.h f14, f11, f9, f13, rne # perform operation
fnmadd.h f14, f11, f9, f13, rtz # perform operation
fnmadd.h f14, f11, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbc00)
li x30, 0x2e7cf30c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
li x3, 0xd2b93269 # load x3 with value 0xd2b93269
sw x3, 0(x2) # store 0xd2b93269 in memory
flh f1, 0(x2) # load 0xd2b93269 from memory into f1
fnmadd.h f30, f14, f12, f1, dyn # perform operation
fnmadd.h f30, f14, f12, f1, rdn # perform operation
fnmadd.h f30, f14, f12, f1, rmm # perform operation
fnmadd.h f30, f14, f12, f1, rne # perform operation
fnmadd.h f30, f14, f12, f1, rtz # perform operation
fnmadd.h f30, f14, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3e00)
li x23, 0xa2c7b47f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0xa849ce7e # load x3 with value 0xa849ce7e
sw x3, 0(x2) # store 0xa849ce7e in memory
flh f12, 0(x2) # load 0xa849ce7e from memory into f12
fnmadd.h f23, f6, f20, f12, dyn # perform operation
fnmadd.h f23, f6, f20, f12, rdn # perform operation
fnmadd.h f23, f6, f20, f12, rmm # perform operation
fnmadd.h f23, f6, f20, f12, rne # perform operation
fnmadd.h f23, f6, f20, f12, rtz # perform operation
fnmadd.h f23, f6, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbe00)
li x27, 0x91658d92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
li x3, 0xd2973f64 # load x3 with value 0xd2973f64
sw x3, 0(x2) # store 0xd2973f64 in memory
flh f3, 0(x2) # load 0xd2973f64 from memory into f3
fnmadd.h f27, f22, f7, f3, dyn # perform operation
fnmadd.h f27, f22, f7, f3, rdn # perform operation
fnmadd.h f27, f22, f7, f3, rmm # perform operation
fnmadd.h f27, f22, f7, f3, rne # perform operation
fnmadd.h f27, f22, f7, f3, rtz # perform operation
fnmadd.h f27, f22, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x4000)
li x18, 0x502edd55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0x7acd9794 # load x3 with value 0x7acd9794
sw x3, 0(x2) # store 0x7acd9794 in memory
flh f2, 0(x2) # load 0x7acd9794 from memory into f2
fnmadd.h f18, f31, f9, f2, dyn # perform operation
fnmadd.h f18, f31, f9, f2, rdn # perform operation
fnmadd.h f18, f31, f9, f2, rmm # perform operation
fnmadd.h f18, f31, f9, f2, rne # perform operation
fnmadd.h f18, f31, f9, f2, rtz # perform operation
fnmadd.h f18, f31, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f31, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f31, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f31, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f31, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f31, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc000)
li x28, 0xce2424bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0x8bea7376 # load x3 with value 0x8bea7376
sw x3, 0(x2) # store 0x8bea7376 in memory
flh f4, 0(x2) # load 0x8bea7376 from memory into f4
fnmadd.h f28, f7, f5, f4, dyn # perform operation
fnmadd.h f28, f7, f5, f4, rdn # perform operation
fnmadd.h f28, f7, f5, f4, rmm # perform operation
fnmadd.h f28, f7, f5, f4, rne # perform operation
fnmadd.h f28, f7, f5, f4, rtz # perform operation
fnmadd.h f28, f7, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f7, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f7, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f7, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f7, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f7, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x400)
li x1, 0x1b04554f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0x37a54e0e # load x3 with value 0x37a54e0e
sw x3, 0(x2) # store 0x37a54e0e in memory
flh f6, 0(x2) # load 0x37a54e0e from memory into f6
fnmadd.h f1, f12, f19, f6, dyn # perform operation
fnmadd.h f1, f12, f19, f6, rdn # perform operation
fnmadd.h f1, f12, f19, f6, rmm # perform operation
fnmadd.h f1, f12, f19, f6, rne # perform operation
fnmadd.h f1, f12, f19, f6, rtz # perform operation
fnmadd.h f1, f12, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f12, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8400)
li x1, 0x62979855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f4, 0(x2) # load 0x00008400 from memory into f4
li x3, 0x757d74cd # load x3 with value 0x757d74cd
sw x3, 0(x2) # store 0x757d74cd in memory
flh f27, 0(x2) # load 0x757d74cd from memory into f27
fnmadd.h f1, f21, f4, f27, dyn # perform operation
fnmadd.h f1, f21, f4, f27, rdn # perform operation
fnmadd.h f1, f21, f4, f27, rmm # perform operation
fnmadd.h f1, f21, f4, f27, rne # perform operation
fnmadd.h f1, f21, f4, f27, rtz # perform operation
fnmadd.h f1, f21, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7bff)
li x1, 0x614b596f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0x623084f4 # load x3 with value 0x623084f4
sw x3, 0(x2) # store 0x623084f4 in memory
flh f2, 0(x2) # load 0x623084f4 from memory into f2
fnmadd.h f1, f11, f8, f2, dyn # perform operation
fnmadd.h f1, f11, f8, f2, rdn # perform operation
fnmadd.h f1, f11, f8, f2, rmm # perform operation
fnmadd.h f1, f11, f8, f2, rne # perform operation
fnmadd.h f1, f11, f8, f2, rtz # perform operation
fnmadd.h f1, f11, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfbff)
li x10, 0x2cff59cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
li x3, 0x3bc9dc01 # load x3 with value 0x3bc9dc01
sw x3, 0(x2) # store 0x3bc9dc01 in memory
flh f29, 0(x2) # load 0x3bc9dc01 from memory into f29
fnmadd.h f10, f25, f9, f29, dyn # perform operation
fnmadd.h f10, f25, f9, f29, rdn # perform operation
fnmadd.h f10, f25, f9, f29, rmm # perform operation
fnmadd.h f10, f25, f9, f29, rne # perform operation
fnmadd.h f10, f25, f9, f29, rtz # perform operation
fnmadd.h f10, f25, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f25, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f25, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f25, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f25, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f25, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3ff)
li x26, 0x389c28b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
li x3, 0x48340fe0 # load x3 with value 0x48340fe0
sw x3, 0(x2) # store 0x48340fe0 in memory
flh f31, 0(x2) # load 0x48340fe0 from memory into f31
fnmadd.h f26, f30, f17, f31, dyn # perform operation
fnmadd.h f26, f30, f17, f31, rdn # perform operation
fnmadd.h f26, f30, f17, f31, rmm # perform operation
fnmadd.h f26, f30, f17, f31, rne # perform operation
fnmadd.h f26, f30, f17, f31, rtz # perform operation
fnmadd.h f26, f30, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x83ff)
li x23, 0x3f60b52b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
li x3, 0x057a2016 # load x3 with value 0x057a2016
sw x3, 0(x2) # store 0x057a2016 in memory
flh f19, 0(x2) # load 0x057a2016 from memory into f19
fnmadd.h f23, f29, f8, f19, dyn # perform operation
fnmadd.h f23, f29, f8, f19, rdn # perform operation
fnmadd.h f23, f29, f8, f19, rmm # perform operation
fnmadd.h f23, f29, f8, f19, rne # perform operation
fnmadd.h f23, f29, f8, f19, rtz # perform operation
fnmadd.h f23, f29, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x200)
li x11, 0x8f50b5fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
li x3, 0x3884f1d9 # load x3 with value 0x3884f1d9
sw x3, 0(x2) # store 0x3884f1d9 in memory
flh f4, 0(x2) # load 0x3884f1d9 from memory into f4
fnmadd.h f11, f6, f2, f4, dyn # perform operation
fnmadd.h f11, f6, f2, f4, rdn # perform operation
fnmadd.h f11, f6, f2, f4, rmm # perform operation
fnmadd.h f11, f6, f2, f4, rne # perform operation
fnmadd.h f11, f6, f2, f4, rtz # perform operation
fnmadd.h f11, f6, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8200)
li x31, 0xe6609dc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0xefcd1e4e # load x3 with value 0xefcd1e4e
sw x3, 0(x2) # store 0xefcd1e4e in memory
flh f5, 0(x2) # load 0xefcd1e4e from memory into f5
fnmadd.h f31, f26, f27, f5, dyn # perform operation
fnmadd.h f31, f26, f27, f5, rdn # perform operation
fnmadd.h f31, f26, f27, f5, rmm # perform operation
fnmadd.h f31, f26, f27, f5, rne # perform operation
fnmadd.h f31, f26, f27, f5, rtz # perform operation
fnmadd.h f31, f26, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x1)
li x8, 0xb6a35540 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xb92d44f1 # load x3 with value 0xb92d44f1
sw x3, 0(x2) # store 0xb92d44f1 in memory
flh f4, 0(x2) # load 0xb92d44f1 from memory into f4
fnmadd.h f8, f1, f24, f4, dyn # perform operation
fnmadd.h f8, f1, f24, f4, rdn # perform operation
fnmadd.h f8, f1, f24, f4, rmm # perform operation
fnmadd.h f8, f1, f24, f4, rne # perform operation
fnmadd.h f8, f1, f24, f4, rtz # perform operation
fnmadd.h f8, f1, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8001)
li x2, 0xcd38e38f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xb659f1ed # load x3 with value 0xb659f1ed
sw x3, 0(x2) # store 0xb659f1ed in memory
flh f31, 0(x2) # load 0xb659f1ed from memory into f31
fnmadd.h f2, f30, f7, f31, dyn # perform operation
fnmadd.h f2, f30, f7, f31, rdn # perform operation
fnmadd.h f2, f30, f7, f31, rmm # perform operation
fnmadd.h f2, f30, f7, f31, rne # perform operation
fnmadd.h f2, f30, f7, f31, rtz # perform operation
fnmadd.h f2, f30, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c00)
li x29, 0xbbf6bccf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
li x3, 0x67cc1d09 # load x3 with value 0x67cc1d09
sw x3, 0(x2) # store 0x67cc1d09 in memory
flh f9, 0(x2) # load 0x67cc1d09 from memory into f9
fnmadd.h f29, f5, f16, f9, dyn # perform operation
fnmadd.h f29, f5, f16, f9, rdn # perform operation
fnmadd.h f29, f5, f16, f9, rmm # perform operation
fnmadd.h f29, f5, f16, f9, rne # perform operation
fnmadd.h f29, f5, f16, f9, rtz # perform operation
fnmadd.h f29, f5, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc00)
li x25, 0x8226e305 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0x91fd31e6 # load x3 with value 0x91fd31e6
sw x3, 0(x2) # store 0x91fd31e6 in memory
flh f3, 0(x2) # load 0x91fd31e6 from memory into f3
fnmadd.h f25, f21, f19, f3, dyn # perform operation
fnmadd.h f25, f21, f19, f3, rdn # perform operation
fnmadd.h f25, f21, f19, f3, rmm # perform operation
fnmadd.h f25, f21, f19, f3, rne # perform operation
fnmadd.h f25, f21, f19, f3, rtz # perform operation
fnmadd.h f25, f21, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f21, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7e00)
li x24, 0xfb0ed280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0xcc50ebc4 # load x3 with value 0xcc50ebc4
sw x3, 0(x2) # store 0xcc50ebc4 in memory
flh f6, 0(x2) # load 0xcc50ebc4 from memory into f6
fnmadd.h f24, f18, f31, f6, dyn # perform operation
fnmadd.h f24, f18, f31, f6, rdn # perform operation
fnmadd.h f24, f18, f31, f6, rmm # perform operation
fnmadd.h f24, f18, f31, f6, rne # perform operation
fnmadd.h f24, f18, f31, f6, rtz # perform operation
fnmadd.h f24, f18, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7fff)
li x19, 0x49a95ffa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0xa6955362 # load x3 with value 0xa6955362
sw x3, 0(x2) # store 0xa6955362 in memory
flh f7, 0(x2) # load 0xa6955362 from memory into f7
fnmadd.h f19, f29, f13, f7, dyn # perform operation
fnmadd.h f19, f29, f13, f7, rdn # perform operation
fnmadd.h f19, f29, f13, f7, rmm # perform operation
fnmadd.h f19, f29, f13, f7, rne # perform operation
fnmadd.h f19, f29, f13, f7, rtz # perform operation
fnmadd.h f19, f29, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c01)
li x28, 0x8ed9c2f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
li x3, 0x4d4b4e65 # load x3 with value 0x4d4b4e65
sw x3, 0(x2) # store 0x4d4b4e65 in memory
flh f21, 0(x2) # load 0x4d4b4e65 from memory into f21
fnmadd.h f28, f22, f3, f21, dyn # perform operation
fnmadd.h f28, f22, f3, f21, rdn # perform operation
fnmadd.h f28, f22, f3, f21, rmm # perform operation
fnmadd.h f28, f22, f3, f21, rne # perform operation
fnmadd.h f28, f22, f3, f21, rtz # perform operation
fnmadd.h f28, f22, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7dff)
li x11, 0x3f820ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x47d35430 # load x3 with value 0x47d35430
sw x3, 0(x2) # store 0x47d35430 in memory
flh f9, 0(x2) # load 0x47d35430 from memory into f9
fnmadd.h f11, f1, f7, f9, dyn # perform operation
fnmadd.h f11, f1, f7, f9, rdn # perform operation
fnmadd.h f11, f1, f7, f9, rmm # perform operation
fnmadd.h f11, f1, f7, f9, rne # perform operation
fnmadd.h f11, f1, f7, f9, rtz # perform operation
fnmadd.h f11, f1, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x58b4)
li x29, 0x930a66b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
li x3, 0x6ea3d3f8 # load x3 with value 0x6ea3d3f8
sw x3, 0(x2) # store 0x6ea3d3f8 in memory
flh f11, 0(x2) # load 0x6ea3d3f8 from memory into f11
fnmadd.h f29, f19, f16, f11, dyn # perform operation
fnmadd.h f29, f19, f16, f11, rdn # perform operation
fnmadd.h f29, f19, f16, f11, rmm # perform operation
fnmadd.h f29, f19, f16, f11, rne # perform operation
fnmadd.h f29, f19, f16, f11, rtz # perform operation
fnmadd.h f29, f19, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f19, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f19, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f19, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f19, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f19, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc93a)
li x7, 0x2779c2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
li x3, 0xb6633bc1 # load x3 with value 0xb6633bc1
sw x3, 0(x2) # store 0xb6633bc1 in memory
flh f12, 0(x2) # load 0xb6633bc1 from memory into f12
fnmadd.h f7, f26, f19, f12, dyn # perform operation
fnmadd.h f7, f26, f19, f12, rdn # perform operation
fnmadd.h f7, f26, f19, f12, rmm # perform operation
fnmadd.h f7, f26, f19, f12, rne # perform operation
fnmadd.h f7, f26, f19, f12, rtz # perform operation
fnmadd.h f7, f26, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f26, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x0)
li x21, 0xcb7027b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x1e03342c # load x3 with value 0x1e03342c
sw x3, 0(x2) # store 0x1e03342c in memory
flh f15, 0(x2) # load 0x1e03342c from memory into f15
fnmadd.h f21, f2, f20, f15, dyn # perform operation
fnmadd.h f21, f2, f20, f15, rdn # perform operation
fnmadd.h f21, f2, f20, f15, rmm # perform operation
fnmadd.h f21, f2, f20, f15, rne # perform operation
fnmadd.h f21, f2, f20, f15, rtz # perform operation
fnmadd.h f21, f2, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f2, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8000)
li x18, 0xe52bd906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
li x3, 0xb78b0909 # load x3 with value 0xb78b0909
sw x3, 0(x2) # store 0xb78b0909 in memory
flh f3, 0(x2) # load 0xb78b0909 from memory into f3
fnmadd.h f18, f2, f8, f3, dyn # perform operation
fnmadd.h f18, f2, f8, f3, rdn # perform operation
fnmadd.h f18, f2, f8, f3, rmm # perform operation
fnmadd.h f18, f2, f8, f3, rne # perform operation
fnmadd.h f18, f2, f8, f3, rtz # perform operation
fnmadd.h f18, f2, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3c00)
li x11, 0x40366fca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
li x3, 0x433e7940 # load x3 with value 0x433e7940
sw x3, 0(x2) # store 0x433e7940 in memory
flh f19, 0(x2) # load 0x433e7940 from memory into f19
fnmadd.h f11, f21, f24, f19, dyn # perform operation
fnmadd.h f11, f21, f24, f19, rdn # perform operation
fnmadd.h f11, f21, f24, f19, rmm # perform operation
fnmadd.h f11, f21, f24, f19, rne # perform operation
fnmadd.h f11, f21, f24, f19, rtz # perform operation
fnmadd.h f11, f21, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbc00)
li x24, 0x5ec30422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
li x3, 0x6719381d # load x3 with value 0x6719381d
sw x3, 0(x2) # store 0x6719381d in memory
flh f4, 0(x2) # load 0x6719381d from memory into f4
fnmadd.h f24, f23, f8, f4, dyn # perform operation
fnmadd.h f24, f23, f8, f4, rdn # perform operation
fnmadd.h f24, f23, f8, f4, rmm # perform operation
fnmadd.h f24, f23, f8, f4, rne # perform operation
fnmadd.h f24, f23, f8, f4, rtz # perform operation
fnmadd.h f24, f23, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3e00)
li x18, 0xdc5e66ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
li x3, 0x27b71c8d # load x3 with value 0x27b71c8d
sw x3, 0(x2) # store 0x27b71c8d in memory
flh f4, 0(x2) # load 0x27b71c8d from memory into f4
fnmadd.h f18, f12, f11, f4, dyn # perform operation
fnmadd.h f18, f12, f11, f4, rdn # perform operation
fnmadd.h f18, f12, f11, f4, rmm # perform operation
fnmadd.h f18, f12, f11, f4, rne # perform operation
fnmadd.h f18, f12, f11, f4, rtz # perform operation
fnmadd.h f18, f12, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbe00)
li x20, 0xa008f02a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0xc9d79475 # load x3 with value 0xc9d79475
sw x3, 0(x2) # store 0xc9d79475 in memory
flh f5, 0(x2) # load 0xc9d79475 from memory into f5
fnmadd.h f20, f22, f1, f5, dyn # perform operation
fnmadd.h f20, f22, f1, f5, rdn # perform operation
fnmadd.h f20, f22, f1, f5, rmm # perform operation
fnmadd.h f20, f22, f1, f5, rne # perform operation
fnmadd.h f20, f22, f1, f5, rtz # perform operation
fnmadd.h f20, f22, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x4000)
li x27, 0x65457d5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
li x3, 0x7e0919cb # load x3 with value 0x7e0919cb
sw x3, 0(x2) # store 0x7e0919cb in memory
flh f2, 0(x2) # load 0x7e0919cb from memory into f2
fnmadd.h f27, f25, f17, f2, dyn # perform operation
fnmadd.h f27, f25, f17, f2, rdn # perform operation
fnmadd.h f27, f25, f17, f2, rmm # perform operation
fnmadd.h f27, f25, f17, f2, rne # perform operation
fnmadd.h f27, f25, f17, f2, rtz # perform operation
fnmadd.h f27, f25, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc000)
li x18, 0x6a9e32ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
li x3, 0x3c310237 # load x3 with value 0x3c310237
sw x3, 0(x2) # store 0x3c310237 in memory
flh f4, 0(x2) # load 0x3c310237 from memory into f4
fnmadd.h f18, f29, f1, f4, dyn # perform operation
fnmadd.h f18, f29, f1, f4, rdn # perform operation
fnmadd.h f18, f29, f1, f4, rmm # perform operation
fnmadd.h f18, f29, f1, f4, rne # perform operation
fnmadd.h f18, f29, f1, f4, rtz # perform operation
fnmadd.h f18, f29, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f29, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f29, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f29, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f29, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f29, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x400)
li x27, 0x88e63a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0xa03dbb2e # load x3 with value 0xa03dbb2e
sw x3, 0(x2) # store 0xa03dbb2e in memory
flh f4, 0(x2) # load 0xa03dbb2e from memory into f4
fnmadd.h f27, f22, f9, f4, dyn # perform operation
fnmadd.h f27, f22, f9, f4, rdn # perform operation
fnmadd.h f27, f22, f9, f4, rmm # perform operation
fnmadd.h f27, f22, f9, f4, rne # perform operation
fnmadd.h f27, f22, f9, f4, rtz # perform operation
fnmadd.h f27, f22, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8400)
li x25, 0x2f603970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
li x3, 0xc85ca664 # load x3 with value 0xc85ca664
sw x3, 0(x2) # store 0xc85ca664 in memory
flh f18, 0(x2) # load 0xc85ca664 from memory into f18
fnmadd.h f25, f4, f8, f18, dyn # perform operation
fnmadd.h f25, f4, f8, f18, rdn # perform operation
fnmadd.h f25, f4, f8, f18, rmm # perform operation
fnmadd.h f25, f4, f8, f18, rne # perform operation
fnmadd.h f25, f4, f8, f18, rtz # perform operation
fnmadd.h f25, f4, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f4, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7bff)
li x22, 0xb306e40a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
li x3, 0xb2155bd4 # load x3 with value 0xb2155bd4
sw x3, 0(x2) # store 0xb2155bd4 in memory
flh f5, 0(x2) # load 0xb2155bd4 from memory into f5
fnmadd.h f22, f25, f17, f5, dyn # perform operation
fnmadd.h f22, f25, f17, f5, rdn # perform operation
fnmadd.h f22, f25, f17, f5, rmm # perform operation
fnmadd.h f22, f25, f17, f5, rne # perform operation
fnmadd.h f22, f25, f17, f5, rtz # perform operation
fnmadd.h f22, f25, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfbff)
li x7, 0xc9929ef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0x2fd09b4c # load x3 with value 0x2fd09b4c
sw x3, 0(x2) # store 0x2fd09b4c in memory
flh f19, 0(x2) # load 0x2fd09b4c from memory into f19
fnmadd.h f7, f10, f18, f19, dyn # perform operation
fnmadd.h f7, f10, f18, f19, rdn # perform operation
fnmadd.h f7, f10, f18, f19, rmm # perform operation
fnmadd.h f7, f10, f18, f19, rne # perform operation
fnmadd.h f7, f10, f18, f19, rtz # perform operation
fnmadd.h f7, f10, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3ff)
li x26, 0xed519579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0x70291cd5 # load x3 with value 0x70291cd5
sw x3, 0(x2) # store 0x70291cd5 in memory
flh f9, 0(x2) # load 0x70291cd5 from memory into f9
fnmadd.h f26, f1, f23, f9, dyn # perform operation
fnmadd.h f26, f1, f23, f9, rdn # perform operation
fnmadd.h f26, f1, f23, f9, rmm # perform operation
fnmadd.h f26, f1, f23, f9, rne # perform operation
fnmadd.h f26, f1, f23, f9, rtz # perform operation
fnmadd.h f26, f1, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x83ff)
li x19, 0x963713f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
li x3, 0xc72943ec # load x3 with value 0xc72943ec
sw x3, 0(x2) # store 0xc72943ec in memory
flh f26, 0(x2) # load 0xc72943ec from memory into f26
fnmadd.h f19, f1, f3, f26, dyn # perform operation
fnmadd.h f19, f1, f3, f26, rdn # perform operation
fnmadd.h f19, f1, f3, f26, rmm # perform operation
fnmadd.h f19, f1, f3, f26, rne # perform operation
fnmadd.h f19, f1, f3, f26, rtz # perform operation
fnmadd.h f19, f1, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x200)
li x2, 0xa116c915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0x8dcb21f6 # load x3 with value 0x8dcb21f6
sw x3, 0(x2) # store 0x8dcb21f6 in memory
flh f25, 0(x2) # load 0x8dcb21f6 from memory into f25
fnmadd.h f2, f31, f3, f25, dyn # perform operation
fnmadd.h f2, f31, f3, f25, rdn # perform operation
fnmadd.h f2, f31, f3, f25, rmm # perform operation
fnmadd.h f2, f31, f3, f25, rne # perform operation
fnmadd.h f2, f31, f3, f25, rtz # perform operation
fnmadd.h f2, f31, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8200)
li x20, 0x105ab4e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x72936d50 # load x3 with value 0x72936d50
sw x3, 0(x2) # store 0x72936d50 in memory
flh f8, 0(x2) # load 0x72936d50 from memory into f8
fnmadd.h f20, f22, f6, f8, dyn # perform operation
fnmadd.h f20, f22, f6, f8, rdn # perform operation
fnmadd.h f20, f22, f6, f8, rmm # perform operation
fnmadd.h f20, f22, f6, f8, rne # perform operation
fnmadd.h f20, f22, f6, f8, rtz # perform operation
fnmadd.h f20, f22, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x1)
li x19, 0x8664f1ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x95f5f8b5 # load x3 with value 0x95f5f8b5
sw x3, 0(x2) # store 0x95f5f8b5 in memory
flh f6, 0(x2) # load 0x95f5f8b5 from memory into f6
fnmadd.h f19, f14, f18, f6, dyn # perform operation
fnmadd.h f19, f14, f18, f6, rdn # perform operation
fnmadd.h f19, f14, f18, f6, rmm # perform operation
fnmadd.h f19, f14, f18, f6, rne # perform operation
fnmadd.h f19, f14, f18, f6, rtz # perform operation
fnmadd.h f19, f14, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8001)
li x3, 0x275083c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0x212b575f # load x3 with value 0x212b575f
sw x3, 0(x2) # store 0x212b575f in memory
flh f1, 0(x2) # load 0x212b575f from memory into f1
fnmadd.h f3, f19, f15, f1, dyn # perform operation
fnmadd.h f3, f19, f15, f1, rdn # perform operation
fnmadd.h f3, f19, f15, f1, rmm # perform operation
fnmadd.h f3, f19, f15, f1, rne # perform operation
fnmadd.h f3, f19, f15, f1, rtz # perform operation
fnmadd.h f3, f19, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f19, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c00)
li x19, 0xfc520d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
li x3, 0xa73ca0d6 # load x3 with value 0xa73ca0d6
sw x3, 0(x2) # store 0xa73ca0d6 in memory
flh f20, 0(x2) # load 0xa73ca0d6 from memory into f20
fnmadd.h f19, f28, f23, f20, dyn # perform operation
fnmadd.h f19, f28, f23, f20, rdn # perform operation
fnmadd.h f19, f28, f23, f20, rmm # perform operation
fnmadd.h f19, f28, f23, f20, rne # perform operation
fnmadd.h f19, f28, f23, f20, rtz # perform operation
fnmadd.h f19, f28, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f28, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f28, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f28, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f28, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f28, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc00)
li x21, 0x306561ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0xf4ef783e # load x3 with value 0xf4ef783e
sw x3, 0(x2) # store 0xf4ef783e in memory
flh f10, 0(x2) # load 0xf4ef783e from memory into f10
fnmadd.h f21, f16, f1, f10, dyn # perform operation
fnmadd.h f21, f16, f1, f10, rdn # perform operation
fnmadd.h f21, f16, f1, f10, rmm # perform operation
fnmadd.h f21, f16, f1, f10, rne # perform operation
fnmadd.h f21, f16, f1, f10, rtz # perform operation
fnmadd.h f21, f16, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7e00)
li x2, 0x59834c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0x9d9db818 # load x3 with value 0x9d9db818
sw x3, 0(x2) # store 0x9d9db818 in memory
flh f24, 0(x2) # load 0x9d9db818 from memory into f24
fnmadd.h f2, f28, f16, f24, dyn # perform operation
fnmadd.h f2, f28, f16, f24, rdn # perform operation
fnmadd.h f2, f28, f16, f24, rmm # perform operation
fnmadd.h f2, f28, f16, f24, rne # perform operation
fnmadd.h f2, f28, f16, f24, rtz # perform operation
fnmadd.h f2, f28, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7fff)
li x10, 0x01c5e834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0x3dc6a176 # load x3 with value 0x3dc6a176
sw x3, 0(x2) # store 0x3dc6a176 in memory
flh f15, 0(x2) # load 0x3dc6a176 from memory into f15
fnmadd.h f10, f3, f23, f15, dyn # perform operation
fnmadd.h f10, f3, f23, f15, rdn # perform operation
fnmadd.h f10, f3, f23, f15, rmm # perform operation
fnmadd.h f10, f3, f23, f15, rne # perform operation
fnmadd.h f10, f3, f23, f15, rtz # perform operation
fnmadd.h f10, f3, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c01)
li x6, 0xe97693c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
li x3, 0xf33d5fc5 # load x3 with value 0xf33d5fc5
sw x3, 0(x2) # store 0xf33d5fc5 in memory
flh f25, 0(x2) # load 0xf33d5fc5 from memory into f25
fnmadd.h f6, f15, f21, f25, dyn # perform operation
fnmadd.h f6, f15, f21, f25, rdn # perform operation
fnmadd.h f6, f15, f21, f25, rmm # perform operation
fnmadd.h f6, f15, f21, f25, rne # perform operation
fnmadd.h f6, f15, f21, f25, rtz # perform operation
fnmadd.h f6, f15, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7dff)
li x17, 0x2afc4335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0xc25785d8 # load x3 with value 0xc25785d8
sw x3, 0(x2) # store 0xc25785d8 in memory
flh f30, 0(x2) # load 0xc25785d8 from memory into f30
fnmadd.h f17, f24, f7, f30, dyn # perform operation
fnmadd.h f17, f24, f7, f30, rdn # perform operation
fnmadd.h f17, f24, f7, f30, rmm # perform operation
fnmadd.h f17, f24, f7, f30, rne # perform operation
fnmadd.h f17, f24, f7, f30, rtz # perform operation
fnmadd.h f17, f24, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x58b4)
li x22, 0xe022e592 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
li x3, 0x0b64a535 # load x3 with value 0x0b64a535
sw x3, 0(x2) # store 0x0b64a535 in memory
flh f6, 0(x2) # load 0x0b64a535 from memory into f6
fnmadd.h f22, f27, f31, f6, dyn # perform operation
fnmadd.h f22, f27, f31, f6, rdn # perform operation
fnmadd.h f22, f27, f31, f6, rmm # perform operation
fnmadd.h f22, f27, f31, f6, rne # perform operation
fnmadd.h f22, f27, f31, f6, rtz # perform operation
fnmadd.h f22, f27, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc93a)
li x4, 0x5004a679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0x2a84f2fd # load x3 with value 0x2a84f2fd
sw x3, 0(x2) # store 0x2a84f2fd in memory
flh f19, 0(x2) # load 0x2a84f2fd from memory into f19
fnmadd.h f4, f6, f5, f19, dyn # perform operation
fnmadd.h f4, f6, f5, f19, rdn # perform operation
fnmadd.h f4, f6, f5, f19, rmm # perform operation
fnmadd.h f4, f6, f5, f19, rne # perform operation
fnmadd.h f4, f6, f5, f19, rtz # perform operation
fnmadd.h f4, f6, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f6, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f6, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f6, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f6, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f6, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x0)
li x13, 0x922675b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xc98d17a0 # load x3 with value 0xc98d17a0
sw x3, 0(x2) # store 0xc98d17a0 in memory
flh f23, 0(x2) # load 0xc98d17a0 from memory into f23
fnmadd.h f13, f9, f16, f23, dyn # perform operation
fnmadd.h f13, f9, f16, f23, rdn # perform operation
fnmadd.h f13, f9, f16, f23, rmm # perform operation
fnmadd.h f13, f9, f16, f23, rne # perform operation
fnmadd.h f13, f9, f16, f23, rtz # perform operation
fnmadd.h f13, f9, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8000)
li x3, 0x22386716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x84c7be84 # load x3 with value 0x84c7be84
sw x3, 0(x2) # store 0x84c7be84 in memory
flh f30, 0(x2) # load 0x84c7be84 from memory into f30
fnmadd.h f3, f26, f12, f30, dyn # perform operation
fnmadd.h f3, f26, f12, f30, rdn # perform operation
fnmadd.h f3, f26, f12, f30, rmm # perform operation
fnmadd.h f3, f26, f12, f30, rne # perform operation
fnmadd.h f3, f26, f12, f30, rtz # perform operation
fnmadd.h f3, f26, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3c00)
li x4, 0x54d05c4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
li x3, 0xcb5a9898 # load x3 with value 0xcb5a9898
sw x3, 0(x2) # store 0xcb5a9898 in memory
flh f11, 0(x2) # load 0xcb5a9898 from memory into f11
fnmadd.h f4, f15, f25, f11, dyn # perform operation
fnmadd.h f4, f15, f25, f11, rdn # perform operation
fnmadd.h f4, f15, f25, f11, rmm # perform operation
fnmadd.h f4, f15, f25, f11, rne # perform operation
fnmadd.h f4, f15, f25, f11, rtz # perform operation
fnmadd.h f4, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f15, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbc00)
li x11, 0x07783d76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0xed96878e # load x3 with value 0xed96878e
sw x3, 0(x2) # store 0xed96878e in memory
flh f18, 0(x2) # load 0xed96878e from memory into f18
fnmadd.h f11, f12, f2, f18, dyn # perform operation
fnmadd.h f11, f12, f2, f18, rdn # perform operation
fnmadd.h f11, f12, f2, f18, rmm # perform operation
fnmadd.h f11, f12, f2, f18, rne # perform operation
fnmadd.h f11, f12, f2, f18, rtz # perform operation
fnmadd.h f11, f12, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3e00)
li x2, 0xe13dd869 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
li x3, 0xcb75175d # load x3 with value 0xcb75175d
sw x3, 0(x2) # store 0xcb75175d in memory
flh f20, 0(x2) # load 0xcb75175d from memory into f20
fnmadd.h f2, f30, f28, f20, dyn # perform operation
fnmadd.h f2, f30, f28, f20, rdn # perform operation
fnmadd.h f2, f30, f28, f20, rmm # perform operation
fnmadd.h f2, f30, f28, f20, rne # perform operation
fnmadd.h f2, f30, f28, f20, rtz # perform operation
fnmadd.h f2, f30, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbe00)
li x31, 0xd6c5fed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
li x3, 0xffbf7caa # load x3 with value 0xffbf7caa
sw x3, 0(x2) # store 0xffbf7caa in memory
flh f24, 0(x2) # load 0xffbf7caa from memory into f24
fnmadd.h f31, f3, f28, f24, dyn # perform operation
fnmadd.h f31, f3, f28, f24, rdn # perform operation
fnmadd.h f31, f3, f28, f24, rmm # perform operation
fnmadd.h f31, f3, f28, f24, rne # perform operation
fnmadd.h f31, f3, f28, f24, rtz # perform operation
fnmadd.h f31, f3, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f3, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x4000)
li x5, 0xb23f0f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
li x3, 0xbf1b5d38 # load x3 with value 0xbf1b5d38
sw x3, 0(x2) # store 0xbf1b5d38 in memory
flh f22, 0(x2) # load 0xbf1b5d38 from memory into f22
fnmadd.h f5, f19, f11, f22, dyn # perform operation
fnmadd.h f5, f19, f11, f22, rdn # perform operation
fnmadd.h f5, f19, f11, f22, rmm # perform operation
fnmadd.h f5, f19, f11, f22, rne # perform operation
fnmadd.h f5, f19, f11, f22, rtz # perform operation
fnmadd.h f5, f19, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc000)
li x4, 0x39393bf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0xd0daf996 # load x3 with value 0xd0daf996
sw x3, 0(x2) # store 0xd0daf996 in memory
flh f13, 0(x2) # load 0xd0daf996 from memory into f13
fnmadd.h f4, f19, f29, f13, dyn # perform operation
fnmadd.h f4, f19, f29, f13, rdn # perform operation
fnmadd.h f4, f19, f29, f13, rmm # perform operation
fnmadd.h f4, f19, f29, f13, rne # perform operation
fnmadd.h f4, f19, f29, f13, rtz # perform operation
fnmadd.h f4, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f19, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x400)
li x27, 0x228a5506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0xc80a6ea9 # load x3 with value 0xc80a6ea9
sw x3, 0(x2) # store 0xc80a6ea9 in memory
flh f31, 0(x2) # load 0xc80a6ea9 from memory into f31
fnmadd.h f27, f28, f6, f31, dyn # perform operation
fnmadd.h f27, f28, f6, f31, rdn # perform operation
fnmadd.h f27, f28, f6, f31, rmm # perform operation
fnmadd.h f27, f28, f6, f31, rne # perform operation
fnmadd.h f27, f28, f6, f31, rtz # perform operation
fnmadd.h f27, f28, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8400)
li x23, 0xe0b9e0be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
li x3, 0xd8a0a152 # load x3 with value 0xd8a0a152
sw x3, 0(x2) # store 0xd8a0a152 in memory
flh f11, 0(x2) # load 0xd8a0a152 from memory into f11
fnmadd.h f23, f12, f26, f11, dyn # perform operation
fnmadd.h f23, f12, f26, f11, rdn # perform operation
fnmadd.h f23, f12, f26, f11, rmm # perform operation
fnmadd.h f23, f12, f26, f11, rne # perform operation
fnmadd.h f23, f12, f26, f11, rtz # perform operation
fnmadd.h f23, f12, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7bff)
li x10, 0x1a5c001b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
li x3, 0xd1d3c879 # load x3 with value 0xd1d3c879
sw x3, 0(x2) # store 0xd1d3c879 in memory
flh f24, 0(x2) # load 0xd1d3c879 from memory into f24
fnmadd.h f10, f28, f13, f24, dyn # perform operation
fnmadd.h f10, f28, f13, f24, rdn # perform operation
fnmadd.h f10, f28, f13, f24, rmm # perform operation
fnmadd.h f10, f28, f13, f24, rne # perform operation
fnmadd.h f10, f28, f13, f24, rtz # perform operation
fnmadd.h f10, f28, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfbff)
li x29, 0xb28af138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0xb90afdb3 # load x3 with value 0xb90afdb3
sw x3, 0(x2) # store 0xb90afdb3 in memory
flh f17, 0(x2) # load 0xb90afdb3 from memory into f17
fnmadd.h f29, f20, f15, f17, dyn # perform operation
fnmadd.h f29, f20, f15, f17, rdn # perform operation
fnmadd.h f29, f20, f15, f17, rmm # perform operation
fnmadd.h f29, f20, f15, f17, rne # perform operation
fnmadd.h f29, f20, f15, f17, rtz # perform operation
fnmadd.h f29, f20, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f20, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f20, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f20, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f20, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f20, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3ff)
li x28, 0x6e6ffeb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x67af2ae5 # load x3 with value 0x67af2ae5
sw x3, 0(x2) # store 0x67af2ae5 in memory
flh f21, 0(x2) # load 0x67af2ae5 from memory into f21
fnmadd.h f28, f14, f4, f21, dyn # perform operation
fnmadd.h f28, f14, f4, f21, rdn # perform operation
fnmadd.h f28, f14, f4, f21, rmm # perform operation
fnmadd.h f28, f14, f4, f21, rne # perform operation
fnmadd.h f28, f14, f4, f21, rtz # perform operation
fnmadd.h f28, f14, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x83ff)
li x6, 0x05ff4def # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0xd29b35de # load x3 with value 0xd29b35de
sw x3, 0(x2) # store 0xd29b35de in memory
flh f11, 0(x2) # load 0xd29b35de from memory into f11
fnmadd.h f6, f29, f13, f11, dyn # perform operation
fnmadd.h f6, f29, f13, f11, rdn # perform operation
fnmadd.h f6, f29, f13, f11, rmm # perform operation
fnmadd.h f6, f29, f13, f11, rne # perform operation
fnmadd.h f6, f29, f13, f11, rtz # perform operation
fnmadd.h f6, f29, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x200)
li x19, 0xe8f281a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
li x3, 0xfa1e920b # load x3 with value 0xfa1e920b
sw x3, 0(x2) # store 0xfa1e920b in memory
flh f2, 0(x2) # load 0xfa1e920b from memory into f2
fnmadd.h f19, f11, f10, f2, dyn # perform operation
fnmadd.h f19, f11, f10, f2, rdn # perform operation
fnmadd.h f19, f11, f10, f2, rmm # perform operation
fnmadd.h f19, f11, f10, f2, rne # perform operation
fnmadd.h f19, f11, f10, f2, rtz # perform operation
fnmadd.h f19, f11, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8200)
li x15, 0x4d2a666b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0x9bce8ee3 # load x3 with value 0x9bce8ee3
sw x3, 0(x2) # store 0x9bce8ee3 in memory
flh f7, 0(x2) # load 0x9bce8ee3 from memory into f7
fnmadd.h f15, f28, f23, f7, dyn # perform operation
fnmadd.h f15, f28, f23, f7, rdn # perform operation
fnmadd.h f15, f28, f23, f7, rmm # perform operation
fnmadd.h f15, f28, f23, f7, rne # perform operation
fnmadd.h f15, f28, f23, f7, rtz # perform operation
fnmadd.h f15, f28, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x1)
li x8, 0xd76192e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x4a735037 # load x3 with value 0x4a735037
sw x3, 0(x2) # store 0x4a735037 in memory
flh f21, 0(x2) # load 0x4a735037 from memory into f21
fnmadd.h f8, f28, f14, f21, dyn # perform operation
fnmadd.h f8, f28, f14, f21, rdn # perform operation
fnmadd.h f8, f28, f14, f21, rmm # perform operation
fnmadd.h f8, f28, f14, f21, rne # perform operation
fnmadd.h f8, f28, f14, f21, rtz # perform operation
fnmadd.h f8, f28, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f28, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8001)
li x31, 0xad2fdb4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
li x3, 0xce983333 # load x3 with value 0xce983333
sw x3, 0(x2) # store 0xce983333 in memory
flh f7, 0(x2) # load 0xce983333 from memory into f7
fnmadd.h f31, f9, f25, f7, dyn # perform operation
fnmadd.h f31, f9, f25, f7, rdn # perform operation
fnmadd.h f31, f9, f25, f7, rmm # perform operation
fnmadd.h f31, f9, f25, f7, rne # perform operation
fnmadd.h f31, f9, f25, f7, rtz # perform operation
fnmadd.h f31, f9, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c00)
li x2, 0xf2eb694c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
li x3, 0x1497ee05 # load x3 with value 0x1497ee05
sw x3, 0(x2) # store 0x1497ee05 in memory
flh f29, 0(x2) # load 0x1497ee05 from memory into f29
fnmadd.h f2, f8, f18, f29, dyn # perform operation
fnmadd.h f2, f8, f18, f29, rdn # perform operation
fnmadd.h f2, f8, f18, f29, rmm # perform operation
fnmadd.h f2, f8, f18, f29, rne # perform operation
fnmadd.h f2, f8, f18, f29, rtz # perform operation
fnmadd.h f2, f8, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc00)
li x6, 0x19d30c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0x98b9dd17 # load x3 with value 0x98b9dd17
sw x3, 0(x2) # store 0x98b9dd17 in memory
flh f11, 0(x2) # load 0x98b9dd17 from memory into f11
fnmadd.h f6, f25, f23, f11, dyn # perform operation
fnmadd.h f6, f25, f23, f11, rdn # perform operation
fnmadd.h f6, f25, f23, f11, rmm # perform operation
fnmadd.h f6, f25, f23, f11, rne # perform operation
fnmadd.h f6, f25, f23, f11, rtz # perform operation
fnmadd.h f6, f25, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7e00)
li x10, 0x22f0b73e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0xe6c5d08a # load x3 with value 0xe6c5d08a
sw x3, 0(x2) # store 0xe6c5d08a in memory
flh f17, 0(x2) # load 0xe6c5d08a from memory into f17
fnmadd.h f10, f24, f18, f17, dyn # perform operation
fnmadd.h f10, f24, f18, f17, rdn # perform operation
fnmadd.h f10, f24, f18, f17, rmm # perform operation
fnmadd.h f10, f24, f18, f17, rne # perform operation
fnmadd.h f10, f24, f18, f17, rtz # perform operation
fnmadd.h f10, f24, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f24, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f24, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f24, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f24, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f24, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7fff)
li x23, 0x0db8c442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
li x3, 0xa46e31ca # load x3 with value 0xa46e31ca
sw x3, 0(x2) # store 0xa46e31ca in memory
flh f25, 0(x2) # load 0xa46e31ca from memory into f25
fnmadd.h f23, f14, f18, f25, dyn # perform operation
fnmadd.h f23, f14, f18, f25, rdn # perform operation
fnmadd.h f23, f14, f18, f25, rmm # perform operation
fnmadd.h f23, f14, f18, f25, rne # perform operation
fnmadd.h f23, f14, f18, f25, rtz # perform operation
fnmadd.h f23, f14, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c01)
li x20, 0x7f67607a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0x2f496000 # load x3 with value 0x2f496000
sw x3, 0(x2) # store 0x2f496000 in memory
flh f1, 0(x2) # load 0x2f496000 from memory into f1
fnmadd.h f20, f31, f17, f1, dyn # perform operation
fnmadd.h f20, f31, f17, f1, rdn # perform operation
fnmadd.h f20, f31, f17, f1, rmm # perform operation
fnmadd.h f20, f31, f17, f1, rne # perform operation
fnmadd.h f20, f31, f17, f1, rtz # perform operation
fnmadd.h f20, f31, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7dff)
li x1, 0x091f61f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0xd5ed691f # load x3 with value 0xd5ed691f
sw x3, 0(x2) # store 0xd5ed691f in memory
flh f25, 0(x2) # load 0xd5ed691f from memory into f25
fnmadd.h f1, f14, f5, f25, dyn # perform operation
fnmadd.h f1, f14, f5, f25, rdn # perform operation
fnmadd.h f1, f14, f5, f25, rmm # perform operation
fnmadd.h f1, f14, f5, f25, rne # perform operation
fnmadd.h f1, f14, f5, f25, rtz # perform operation
fnmadd.h f1, f14, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x58b4)
li x14, 0x83011068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
li x3, 0x8a282572 # load x3 with value 0x8a282572
sw x3, 0(x2) # store 0x8a282572 in memory
flh f2, 0(x2) # load 0x8a282572 from memory into f2
fnmadd.h f14, f7, f28, f2, dyn # perform operation
fnmadd.h f14, f7, f28, f2, rdn # perform operation
fnmadd.h f14, f7, f28, f2, rmm # perform operation
fnmadd.h f14, f7, f28, f2, rne # perform operation
fnmadd.h f14, f7, f28, f2, rtz # perform operation
fnmadd.h f14, f7, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f7, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f7, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f7, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f7, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f7, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc93a)
li x16, 0x959d0a04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0x5d04f8a6 # load x3 with value 0x5d04f8a6
sw x3, 0(x2) # store 0x5d04f8a6 in memory
flh f31, 0(x2) # load 0x5d04f8a6 from memory into f31
fnmadd.h f16, f3, f27, f31, dyn # perform operation
fnmadd.h f16, f3, f27, f31, rdn # perform operation
fnmadd.h f16, f3, f27, f31, rmm # perform operation
fnmadd.h f16, f3, f27, f31, rne # perform operation
fnmadd.h f16, f3, f27, f31, rtz # perform operation
fnmadd.h f16, f3, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x0)
li x11, 0x94f5c876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xf1e66d0f # load x3 with value 0xf1e66d0f
sw x3, 0(x2) # store 0xf1e66d0f in memory
flh f8, 0(x2) # load 0xf1e66d0f from memory into f8
fnmadd.h f11, f31, f2, f8, dyn # perform operation
fnmadd.h f11, f31, f2, f8, rdn # perform operation
fnmadd.h f11, f31, f2, f8, rmm # perform operation
fnmadd.h f11, f31, f2, f8, rne # perform operation
fnmadd.h f11, f31, f2, f8, rtz # perform operation
fnmadd.h f11, f31, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8000)
li x13, 0x3f534934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
li x3, 0x6b3dbbfb # load x3 with value 0x6b3dbbfb
sw x3, 0(x2) # store 0x6b3dbbfb in memory
flh f26, 0(x2) # load 0x6b3dbbfb from memory into f26
fnmadd.h f13, f10, f23, f26, dyn # perform operation
fnmadd.h f13, f10, f23, f26, rdn # perform operation
fnmadd.h f13, f10, f23, f26, rmm # perform operation
fnmadd.h f13, f10, f23, f26, rne # perform operation
fnmadd.h f13, f10, f23, f26, rtz # perform operation
fnmadd.h f13, f10, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3c00)
li x16, 0xce023edd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0xc2c1ef58 # load x3 with value 0xc2c1ef58
sw x3, 0(x2) # store 0xc2c1ef58 in memory
flh f6, 0(x2) # load 0xc2c1ef58 from memory into f6
fnmadd.h f16, f8, f31, f6, dyn # perform operation
fnmadd.h f16, f8, f31, f6, rdn # perform operation
fnmadd.h f16, f8, f31, f6, rmm # perform operation
fnmadd.h f16, f8, f31, f6, rne # perform operation
fnmadd.h f16, f8, f31, f6, rtz # perform operation
fnmadd.h f16, f8, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f8, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbc00)
li x29, 0x6852c65f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x493658fb # load x3 with value 0x493658fb
sw x3, 0(x2) # store 0x493658fb in memory
flh f6, 0(x2) # load 0x493658fb from memory into f6
fnmadd.h f29, f15, f28, f6, dyn # perform operation
fnmadd.h f29, f15, f28, f6, rdn # perform operation
fnmadd.h f29, f15, f28, f6, rmm # perform operation
fnmadd.h f29, f15, f28, f6, rne # perform operation
fnmadd.h f29, f15, f28, f6, rtz # perform operation
fnmadd.h f29, f15, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3e00)
li x29, 0x3f2667fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
li x3, 0x52fa59f2 # load x3 with value 0x52fa59f2
sw x3, 0(x2) # store 0x52fa59f2 in memory
flh f23, 0(x2) # load 0x52fa59f2 from memory into f23
fnmadd.h f29, f8, f13, f23, dyn # perform operation
fnmadd.h f29, f8, f13, f23, rdn # perform operation
fnmadd.h f29, f8, f13, f23, rmm # perform operation
fnmadd.h f29, f8, f13, f23, rne # perform operation
fnmadd.h f29, f8, f13, f23, rtz # perform operation
fnmadd.h f29, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f8, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbe00)
li x11, 0x8429c8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
li x3, 0xcc2bad56 # load x3 with value 0xcc2bad56
sw x3, 0(x2) # store 0xcc2bad56 in memory
flh f5, 0(x2) # load 0xcc2bad56 from memory into f5
fnmadd.h f11, f21, f17, f5, dyn # perform operation
fnmadd.h f11, f21, f17, f5, rdn # perform operation
fnmadd.h f11, f21, f17, f5, rmm # perform operation
fnmadd.h f11, f21, f17, f5, rne # perform operation
fnmadd.h f11, f21, f17, f5, rtz # perform operation
fnmadd.h f11, f21, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x4000)
li x22, 0x5db8b38f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x046c083f # load x3 with value 0x046c083f
sw x3, 0(x2) # store 0x046c083f in memory
flh f24, 0(x2) # load 0x046c083f from memory into f24
fnmadd.h f22, f1, f6, f24, dyn # perform operation
fnmadd.h f22, f1, f6, f24, rdn # perform operation
fnmadd.h f22, f1, f6, f24, rmm # perform operation
fnmadd.h f22, f1, f6, f24, rne # perform operation
fnmadd.h f22, f1, f6, f24, rtz # perform operation
fnmadd.h f22, f1, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc000)
li x16, 0x81b0077a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x77194b1c # load x3 with value 0x77194b1c
sw x3, 0(x2) # store 0x77194b1c in memory
flh f11, 0(x2) # load 0x77194b1c from memory into f11
fnmadd.h f16, f25, f8, f11, dyn # perform operation
fnmadd.h f16, f25, f8, f11, rdn # perform operation
fnmadd.h f16, f25, f8, f11, rmm # perform operation
fnmadd.h f16, f25, f8, f11, rne # perform operation
fnmadd.h f16, f25, f8, f11, rtz # perform operation
fnmadd.h f16, f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x400)
li x30, 0x18459a57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x9c2f0c09 # load x3 with value 0x9c2f0c09
sw x3, 0(x2) # store 0x9c2f0c09 in memory
flh f28, 0(x2) # load 0x9c2f0c09 from memory into f28
fnmadd.h f30, f9, f11, f28, dyn # perform operation
fnmadd.h f30, f9, f11, f28, rdn # perform operation
fnmadd.h f30, f9, f11, f28, rmm # perform operation
fnmadd.h f30, f9, f11, f28, rne # perform operation
fnmadd.h f30, f9, f11, f28, rtz # perform operation
fnmadd.h f30, f9, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8400)
li x1, 0x44a4ef45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
li x3, 0x0da99baf # load x3 with value 0x0da99baf
sw x3, 0(x2) # store 0x0da99baf in memory
flh f31, 0(x2) # load 0x0da99baf from memory into f31
fnmadd.h f1, f2, f18, f31, dyn # perform operation
fnmadd.h f1, f2, f18, f31, rdn # perform operation
fnmadd.h f1, f2, f18, f31, rmm # perform operation
fnmadd.h f1, f2, f18, f31, rne # perform operation
fnmadd.h f1, f2, f18, f31, rtz # perform operation
fnmadd.h f1, f2, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7bff)
li x4, 0x06d98bc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x7e1171a5 # load x3 with value 0x7e1171a5
sw x3, 0(x2) # store 0x7e1171a5 in memory
flh f27, 0(x2) # load 0x7e1171a5 from memory into f27
fnmadd.h f4, f24, f6, f27, dyn # perform operation
fnmadd.h f4, f24, f6, f27, rdn # perform operation
fnmadd.h f4, f24, f6, f27, rmm # perform operation
fnmadd.h f4, f24, f6, f27, rne # perform operation
fnmadd.h f4, f24, f6, f27, rtz # perform operation
fnmadd.h f4, f24, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f24, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfbff)
li x29, 0x8608a026 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0xa65245e7 # load x3 with value 0xa65245e7
sw x3, 0(x2) # store 0xa65245e7 in memory
flh f16, 0(x2) # load 0xa65245e7 from memory into f16
fnmadd.h f29, f10, f5, f16, dyn # perform operation
fnmadd.h f29, f10, f5, f16, rdn # perform operation
fnmadd.h f29, f10, f5, f16, rmm # perform operation
fnmadd.h f29, f10, f5, f16, rne # perform operation
fnmadd.h f29, f10, f5, f16, rtz # perform operation
fnmadd.h f29, f10, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3ff)
li x25, 0xef35f849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
li x3, 0xa180c203 # load x3 with value 0xa180c203
sw x3, 0(x2) # store 0xa180c203 in memory
flh f29, 0(x2) # load 0xa180c203 from memory into f29
fnmadd.h f25, f14, f17, f29, dyn # perform operation
fnmadd.h f25, f14, f17, f29, rdn # perform operation
fnmadd.h f25, f14, f17, f29, rmm # perform operation
fnmadd.h f25, f14, f17, f29, rne # perform operation
fnmadd.h f25, f14, f17, f29, rtz # perform operation
fnmadd.h f25, f14, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x83ff)
li x25, 0x0a5b82cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0xa4444688 # load x3 with value 0xa4444688
sw x3, 0(x2) # store 0xa4444688 in memory
flh f24, 0(x2) # load 0xa4444688 from memory into f24
fnmadd.h f25, f6, f27, f24, dyn # perform operation
fnmadd.h f25, f6, f27, f24, rdn # perform operation
fnmadd.h f25, f6, f27, f24, rmm # perform operation
fnmadd.h f25, f6, f27, f24, rne # perform operation
fnmadd.h f25, f6, f27, f24, rtz # perform operation
fnmadd.h f25, f6, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x200)
li x13, 0x76f831c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0x511ef8df # load x3 with value 0x511ef8df
sw x3, 0(x2) # store 0x511ef8df in memory
flh f3, 0(x2) # load 0x511ef8df from memory into f3
fnmadd.h f13, f20, f28, f3, dyn # perform operation
fnmadd.h f13, f20, f28, f3, rdn # perform operation
fnmadd.h f13, f20, f28, f3, rmm # perform operation
fnmadd.h f13, f20, f28, f3, rne # perform operation
fnmadd.h f13, f20, f28, f3, rtz # perform operation
fnmadd.h f13, f20, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8200)
li x7, 0xe61bf68f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
li x3, 0x737678c5 # load x3 with value 0x737678c5
sw x3, 0(x2) # store 0x737678c5 in memory
flh f27, 0(x2) # load 0x737678c5 from memory into f27
fnmadd.h f7, f18, f5, f27, dyn # perform operation
fnmadd.h f7, f18, f5, f27, rdn # perform operation
fnmadd.h f7, f18, f5, f27, rmm # perform operation
fnmadd.h f7, f18, f5, f27, rne # perform operation
fnmadd.h f7, f18, f5, f27, rtz # perform operation
fnmadd.h f7, f18, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x1)
li x4, 0x770d5bf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0xee99e66a # load x3 with value 0xee99e66a
sw x3, 0(x2) # store 0xee99e66a in memory
flh f1, 0(x2) # load 0xee99e66a from memory into f1
fnmadd.h f4, f2, f27, f1, dyn # perform operation
fnmadd.h f4, f2, f27, f1, rdn # perform operation
fnmadd.h f4, f2, f27, f1, rmm # perform operation
fnmadd.h f4, f2, f27, f1, rne # perform operation
fnmadd.h f4, f2, f27, f1, rtz # perform operation
fnmadd.h f4, f2, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f2, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f2, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f2, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f2, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f2, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8001)
li x1, 0xa8f2290e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
li x3, 0xd9efebc1 # load x3 with value 0xd9efebc1
sw x3, 0(x2) # store 0xd9efebc1 in memory
flh f30, 0(x2) # load 0xd9efebc1 from memory into f30
fnmadd.h f1, f26, f16, f30, dyn # perform operation
fnmadd.h f1, f26, f16, f30, rdn # perform operation
fnmadd.h f1, f26, f16, f30, rmm # perform operation
fnmadd.h f1, f26, f16, f30, rne # perform operation
fnmadd.h f1, f26, f16, f30, rtz # perform operation
fnmadd.h f1, f26, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c00)
li x11, 0xd1539da5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
li x3, 0xb93ad025 # load x3 with value 0xb93ad025
sw x3, 0(x2) # store 0xb93ad025 in memory
flh f22, 0(x2) # load 0xb93ad025 from memory into f22
fnmadd.h f11, f18, f3, f22, dyn # perform operation
fnmadd.h f11, f18, f3, f22, rdn # perform operation
fnmadd.h f11, f18, f3, f22, rmm # perform operation
fnmadd.h f11, f18, f3, f22, rne # perform operation
fnmadd.h f11, f18, f3, f22, rtz # perform operation
fnmadd.h f11, f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc00)
li x7, 0x29a7839e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
li x3, 0xad85a90a # load x3 with value 0xad85a90a
sw x3, 0(x2) # store 0xad85a90a in memory
flh f5, 0(x2) # load 0xad85a90a from memory into f5
fnmadd.h f7, f21, f30, f5, dyn # perform operation
fnmadd.h f7, f21, f30, f5, rdn # perform operation
fnmadd.h f7, f21, f30, f5, rmm # perform operation
fnmadd.h f7, f21, f30, f5, rne # perform operation
fnmadd.h f7, f21, f30, f5, rtz # perform operation
fnmadd.h f7, f21, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7e00)
li x17, 0x9bc35327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
li x3, 0x2424ff5d # load x3 with value 0x2424ff5d
sw x3, 0(x2) # store 0x2424ff5d in memory
flh f23, 0(x2) # load 0x2424ff5d from memory into f23
fnmadd.h f17, f28, f24, f23, dyn # perform operation
fnmadd.h f17, f28, f24, f23, rdn # perform operation
fnmadd.h f17, f28, f24, f23, rmm # perform operation
fnmadd.h f17, f28, f24, f23, rne # perform operation
fnmadd.h f17, f28, f24, f23, rtz # perform operation
fnmadd.h f17, f28, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7fff)
li x19, 0xccf2462b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0xd961e62c # load x3 with value 0xd961e62c
sw x3, 0(x2) # store 0xd961e62c in memory
flh f2, 0(x2) # load 0xd961e62c from memory into f2
fnmadd.h f19, f11, f8, f2, dyn # perform operation
fnmadd.h f19, f11, f8, f2, rdn # perform operation
fnmadd.h f19, f11, f8, f2, rmm # perform operation
fnmadd.h f19, f11, f8, f2, rne # perform operation
fnmadd.h f19, f11, f8, f2, rtz # perform operation
fnmadd.h f19, f11, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c01)
li x4, 0x28ec786c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x249f1dab # load x3 with value 0x249f1dab
sw x3, 0(x2) # store 0x249f1dab in memory
flh f16, 0(x2) # load 0x249f1dab from memory into f16
fnmadd.h f4, f3, f27, f16, dyn # perform operation
fnmadd.h f4, f3, f27, f16, rdn # perform operation
fnmadd.h f4, f3, f27, f16, rmm # perform operation
fnmadd.h f4, f3, f27, f16, rne # perform operation
fnmadd.h f4, f3, f27, f16, rtz # perform operation
fnmadd.h f4, f3, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7dff)
li x31, 0xe0d58a9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0x7a065fa0 # load x3 with value 0x7a065fa0
sw x3, 0(x2) # store 0x7a065fa0 in memory
flh f9, 0(x2) # load 0x7a065fa0 from memory into f9
fnmadd.h f31, f5, f4, f9, dyn # perform operation
fnmadd.h f31, f5, f4, f9, rdn # perform operation
fnmadd.h f31, f5, f4, f9, rmm # perform operation
fnmadd.h f31, f5, f4, f9, rne # perform operation
fnmadd.h f31, f5, f4, f9, rtz # perform operation
fnmadd.h f31, f5, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x58b4)
li x10, 0xa441cce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
li x3, 0xdc91b282 # load x3 with value 0xdc91b282
sw x3, 0(x2) # store 0xdc91b282 in memory
flh f12, 0(x2) # load 0xdc91b282 from memory into f12
fnmadd.h f10, f20, f8, f12, dyn # perform operation
fnmadd.h f10, f20, f8, f12, rdn # perform operation
fnmadd.h f10, f20, f8, f12, rmm # perform operation
fnmadd.h f10, f20, f8, f12, rne # perform operation
fnmadd.h f10, f20, f8, f12, rtz # perform operation
fnmadd.h f10, f20, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc93a)
li x3, 0x226effc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0xc73e2432 # load x3 with value 0xc73e2432
sw x3, 0(x2) # store 0xc73e2432 in memory
flh f29, 0(x2) # load 0xc73e2432 from memory into f29
fnmadd.h f3, f25, f27, f29, dyn # perform operation
fnmadd.h f3, f25, f27, f29, rdn # perform operation
fnmadd.h f3, f25, f27, f29, rmm # perform operation
fnmadd.h f3, f25, f27, f29, rne # perform operation
fnmadd.h f3, f25, f27, f29, rtz # perform operation
fnmadd.h f3, f25, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x0)
li x26, 0xad25bd0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x3c352015 # load x3 with value 0x3c352015
sw x3, 0(x2) # store 0x3c352015 in memory
flh f5, 0(x2) # load 0x3c352015 from memory into f5
fnmadd.h f26, f8, f23, f5, dyn # perform operation
fnmadd.h f26, f8, f23, f5, rdn # perform operation
fnmadd.h f26, f8, f23, f5, rmm # perform operation
fnmadd.h f26, f8, f23, f5, rne # perform operation
fnmadd.h f26, f8, f23, f5, rtz # perform operation
fnmadd.h f26, f8, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8000)
li x21, 0x275543c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
li x3, 0x9a027c1f # load x3 with value 0x9a027c1f
sw x3, 0(x2) # store 0x9a027c1f in memory
flh f23, 0(x2) # load 0x9a027c1f from memory into f23
fnmadd.h f21, f12, f8, f23, dyn # perform operation
fnmadd.h f21, f12, f8, f23, rdn # perform operation
fnmadd.h f21, f12, f8, f23, rmm # perform operation
fnmadd.h f21, f12, f8, f23, rne # perform operation
fnmadd.h f21, f12, f8, f23, rtz # perform operation
fnmadd.h f21, f12, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3c00)
li x18, 0x69e19d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
li x3, 0x714abf3c # load x3 with value 0x714abf3c
sw x3, 0(x2) # store 0x714abf3c in memory
flh f14, 0(x2) # load 0x714abf3c from memory into f14
fnmadd.h f18, f6, f24, f14, dyn # perform operation
fnmadd.h f18, f6, f24, f14, rdn # perform operation
fnmadd.h f18, f6, f24, f14, rmm # perform operation
fnmadd.h f18, f6, f24, f14, rne # perform operation
fnmadd.h f18, f6, f24, f14, rtz # perform operation
fnmadd.h f18, f6, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbc00)
li x21, 0x90d3545c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x0657680e # load x3 with value 0x0657680e
sw x3, 0(x2) # store 0x0657680e in memory
flh f16, 0(x2) # load 0x0657680e from memory into f16
fnmadd.h f21, f26, f24, f16, dyn # perform operation
fnmadd.h f21, f26, f24, f16, rdn # perform operation
fnmadd.h f21, f26, f24, f16, rmm # perform operation
fnmadd.h f21, f26, f24, f16, rne # perform operation
fnmadd.h f21, f26, f24, f16, rtz # perform operation
fnmadd.h f21, f26, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3e00)
li x28, 0x646b7259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0x0e351795 # load x3 with value 0x0e351795
sw x3, 0(x2) # store 0x0e351795 in memory
flh f9, 0(x2) # load 0x0e351795 from memory into f9
fnmadd.h f28, f25, f12, f9, dyn # perform operation
fnmadd.h f28, f25, f12, f9, rdn # perform operation
fnmadd.h f28, f25, f12, f9, rmm # perform operation
fnmadd.h f28, f25, f12, f9, rne # perform operation
fnmadd.h f28, f25, f12, f9, rtz # perform operation
fnmadd.h f28, f25, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbe00)
li x19, 0xd6b19282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
li x3, 0xe4857b74 # load x3 with value 0xe4857b74
sw x3, 0(x2) # store 0xe4857b74 in memory
flh f21, 0(x2) # load 0xe4857b74 from memory into f21
fnmadd.h f19, f7, f28, f21, dyn # perform operation
fnmadd.h f19, f7, f28, f21, rdn # perform operation
fnmadd.h f19, f7, f28, f21, rmm # perform operation
fnmadd.h f19, f7, f28, f21, rne # perform operation
fnmadd.h f19, f7, f28, f21, rtz # perform operation
fnmadd.h f19, f7, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f7, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f7, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f7, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f7, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f7, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x4000)
li x23, 0x6d1d5f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
li x3, 0x28ca4ba4 # load x3 with value 0x28ca4ba4
sw x3, 0(x2) # store 0x28ca4ba4 in memory
flh f26, 0(x2) # load 0x28ca4ba4 from memory into f26
fnmadd.h f23, f19, f14, f26, dyn # perform operation
fnmadd.h f23, f19, f14, f26, rdn # perform operation
fnmadd.h f23, f19, f14, f26, rmm # perform operation
fnmadd.h f23, f19, f14, f26, rne # perform operation
fnmadd.h f23, f19, f14, f26, rtz # perform operation
fnmadd.h f23, f19, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc000)
li x11, 0x7d7fdd03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0x97d354d4 # load x3 with value 0x97d354d4
sw x3, 0(x2) # store 0x97d354d4 in memory
flh f3, 0(x2) # load 0x97d354d4 from memory into f3
fnmadd.h f11, f30, f17, f3, dyn # perform operation
fnmadd.h f11, f30, f17, f3, rdn # perform operation
fnmadd.h f11, f30, f17, f3, rmm # perform operation
fnmadd.h f11, f30, f17, f3, rne # perform operation
fnmadd.h f11, f30, f17, f3, rtz # perform operation
fnmadd.h f11, f30, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x400)
li x5, 0x5e47da2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x9a2b17e8 # load x3 with value 0x9a2b17e8
sw x3, 0(x2) # store 0x9a2b17e8 in memory
flh f20, 0(x2) # load 0x9a2b17e8 from memory into f20
fnmadd.h f5, f15, f21, f20, dyn # perform operation
fnmadd.h f5, f15, f21, f20, rdn # perform operation
fnmadd.h f5, f15, f21, f20, rmm # perform operation
fnmadd.h f5, f15, f21, f20, rne # perform operation
fnmadd.h f5, f15, f21, f20, rtz # perform operation
fnmadd.h f5, f15, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8400)
li x10, 0xc64de0c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
li x3, 0x2a53e6d9 # load x3 with value 0x2a53e6d9
sw x3, 0(x2) # store 0x2a53e6d9 in memory
flh f6, 0(x2) # load 0x2a53e6d9 from memory into f6
fnmadd.h f10, f14, f11, f6, dyn # perform operation
fnmadd.h f10, f14, f11, f6, rdn # perform operation
fnmadd.h f10, f14, f11, f6, rmm # perform operation
fnmadd.h f10, f14, f11, f6, rne # perform operation
fnmadd.h f10, f14, f11, f6, rtz # perform operation
fnmadd.h f10, f14, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7bff)
li x28, 0xcbd815a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0xbf254faa # load x3 with value 0xbf254faa
sw x3, 0(x2) # store 0xbf254faa in memory
flh f5, 0(x2) # load 0xbf254faa from memory into f5
fnmadd.h f28, f13, f3, f5, dyn # perform operation
fnmadd.h f28, f13, f3, f5, rdn # perform operation
fnmadd.h f28, f13, f3, f5, rmm # perform operation
fnmadd.h f28, f13, f3, f5, rne # perform operation
fnmadd.h f28, f13, f3, f5, rtz # perform operation
fnmadd.h f28, f13, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfbff)
li x20, 0x7a800b6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0xf9e99f11 # load x3 with value 0xf9e99f11
sw x3, 0(x2) # store 0xf9e99f11 in memory
flh f13, 0(x2) # load 0xf9e99f11 from memory into f13
fnmadd.h f20, f5, f18, f13, dyn # perform operation
fnmadd.h f20, f5, f18, f13, rdn # perform operation
fnmadd.h f20, f5, f18, f13, rmm # perform operation
fnmadd.h f20, f5, f18, f13, rne # perform operation
fnmadd.h f20, f5, f18, f13, rtz # perform operation
fnmadd.h f20, f5, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3ff)
li x4, 0x4e9f0f79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0x27b0cd1c # load x3 with value 0x27b0cd1c
sw x3, 0(x2) # store 0x27b0cd1c in memory
flh f10, 0(x2) # load 0x27b0cd1c from memory into f10
fnmadd.h f4, f2, f11, f10, dyn # perform operation
fnmadd.h f4, f2, f11, f10, rdn # perform operation
fnmadd.h f4, f2, f11, f10, rmm # perform operation
fnmadd.h f4, f2, f11, f10, rne # perform operation
fnmadd.h f4, f2, f11, f10, rtz # perform operation
fnmadd.h f4, f2, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f2, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x83ff)
li x16, 0xe7b05c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f4, 0(x2) # load 0x00008400 from memory into f4
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0xecc61e94 # load x3 with value 0xecc61e94
sw x3, 0(x2) # store 0xecc61e94 in memory
flh f25, 0(x2) # load 0xecc61e94 from memory into f25
fnmadd.h f16, f4, f26, f25, dyn # perform operation
fnmadd.h f16, f4, f26, f25, rdn # perform operation
fnmadd.h f16, f4, f26, f25, rmm # perform operation
fnmadd.h f16, f4, f26, f25, rne # perform operation
fnmadd.h f16, f4, f26, f25, rtz # perform operation
fnmadd.h f16, f4, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f4, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x200)
li x30, 0x4c2614e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0xa231691f # load x3 with value 0xa231691f
sw x3, 0(x2) # store 0xa231691f in memory
flh f23, 0(x2) # load 0xa231691f from memory into f23
fnmadd.h f30, f15, f16, f23, dyn # perform operation
fnmadd.h f30, f15, f16, f23, rdn # perform operation
fnmadd.h f30, f15, f16, f23, rmm # perform operation
fnmadd.h f30, f15, f16, f23, rne # perform operation
fnmadd.h f30, f15, f16, f23, rtz # perform operation
fnmadd.h f30, f15, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8200)
li x13, 0xff190111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
li x3, 0x7de31662 # load x3 with value 0x7de31662
sw x3, 0(x2) # store 0x7de31662 in memory
flh f17, 0(x2) # load 0x7de31662 from memory into f17
fnmadd.h f13, f11, f2, f17, dyn # perform operation
fnmadd.h f13, f11, f2, f17, rdn # perform operation
fnmadd.h f13, f11, f2, f17, rmm # perform operation
fnmadd.h f13, f11, f2, f17, rne # perform operation
fnmadd.h f13, f11, f2, f17, rtz # perform operation
fnmadd.h f13, f11, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f11, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x1)
li x30, 0x3802c504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x4cb36379 # load x3 with value 0x4cb36379
sw x3, 0(x2) # store 0x4cb36379 in memory
flh f15, 0(x2) # load 0x4cb36379 from memory into f15
fnmadd.h f30, f1, f19, f15, dyn # perform operation
fnmadd.h f30, f1, f19, f15, rdn # perform operation
fnmadd.h f30, f1, f19, f15, rmm # perform operation
fnmadd.h f30, f1, f19, f15, rne # perform operation
fnmadd.h f30, f1, f19, f15, rtz # perform operation
fnmadd.h f30, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8001)
li x17, 0x8be534cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0x22326f9d # load x3 with value 0x22326f9d
sw x3, 0(x2) # store 0x22326f9d in memory
flh f29, 0(x2) # load 0x22326f9d from memory into f29
fnmadd.h f17, f24, f27, f29, dyn # perform operation
fnmadd.h f17, f24, f27, f29, rdn # perform operation
fnmadd.h f17, f24, f27, f29, rmm # perform operation
fnmadd.h f17, f24, f27, f29, rne # perform operation
fnmadd.h f17, f24, f27, f29, rtz # perform operation
fnmadd.h f17, f24, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c00)
li x29, 0x389a5f90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
li x3, 0x6253e1a7 # load x3 with value 0x6253e1a7
sw x3, 0(x2) # store 0x6253e1a7 in memory
flh f5, 0(x2) # load 0x6253e1a7 from memory into f5
fnmadd.h f29, f19, f25, f5, dyn # perform operation
fnmadd.h f29, f19, f25, f5, rdn # perform operation
fnmadd.h f29, f19, f25, f5, rmm # perform operation
fnmadd.h f29, f19, f25, f5, rne # perform operation
fnmadd.h f29, f19, f25, f5, rtz # perform operation
fnmadd.h f29, f19, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f19, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f19, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f19, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f19, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f19, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc00)
li x3, 0x75c89cd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
li x3, 0x5499b928 # load x3 with value 0x5499b928
sw x3, 0(x2) # store 0x5499b928 in memory
flh f5, 0(x2) # load 0x5499b928 from memory into f5
fnmadd.h f3, f6, f9, f5, dyn # perform operation
fnmadd.h f3, f6, f9, f5, rdn # perform operation
fnmadd.h f3, f6, f9, f5, rmm # perform operation
fnmadd.h f3, f6, f9, f5, rne # perform operation
fnmadd.h f3, f6, f9, f5, rtz # perform operation
fnmadd.h f3, f6, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7e00)
li x6, 0xcc9ce2f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0xb0ba3d72 # load x3 with value 0xb0ba3d72
sw x3, 0(x2) # store 0xb0ba3d72 in memory
flh f23, 0(x2) # load 0xb0ba3d72 from memory into f23
fnmadd.h f6, f9, f30, f23, dyn # perform operation
fnmadd.h f6, f9, f30, f23, rdn # perform operation
fnmadd.h f6, f9, f30, f23, rmm # perform operation
fnmadd.h f6, f9, f30, f23, rne # perform operation
fnmadd.h f6, f9, f30, f23, rtz # perform operation
fnmadd.h f6, f9, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f9, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7fff)
li x26, 0x78943eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
li x3, 0x43e83b47 # load x3 with value 0x43e83b47
sw x3, 0(x2) # store 0x43e83b47 in memory
flh f15, 0(x2) # load 0x43e83b47 from memory into f15
fnmadd.h f26, f29, f27, f15, dyn # perform operation
fnmadd.h f26, f29, f27, f15, rdn # perform operation
fnmadd.h f26, f29, f27, f15, rmm # perform operation
fnmadd.h f26, f29, f27, f15, rne # perform operation
fnmadd.h f26, f29, f27, f15, rtz # perform operation
fnmadd.h f26, f29, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f29, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f29, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f29, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f29, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f29, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c01)
li x27, 0xc20ea206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0xe1ce84f2 # load x3 with value 0xe1ce84f2
sw x3, 0(x2) # store 0xe1ce84f2 in memory
flh f20, 0(x2) # load 0xe1ce84f2 from memory into f20
fnmadd.h f27, f28, f17, f20, dyn # perform operation
fnmadd.h f27, f28, f17, f20, rdn # perform operation
fnmadd.h f27, f28, f17, f20, rmm # perform operation
fnmadd.h f27, f28, f17, f20, rne # perform operation
fnmadd.h f27, f28, f17, f20, rtz # perform operation
fnmadd.h f27, f28, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7dff)
li x26, 0x5fbccd54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0x006d16f6 # load x3 with value 0x006d16f6
sw x3, 0(x2) # store 0x006d16f6 in memory
flh f29, 0(x2) # load 0x006d16f6 from memory into f29
fnmadd.h f26, f25, f23, f29, dyn # perform operation
fnmadd.h f26, f25, f23, f29, rdn # perform operation
fnmadd.h f26, f25, f23, f29, rmm # perform operation
fnmadd.h f26, f25, f23, f29, rne # perform operation
fnmadd.h f26, f25, f23, f29, rtz # perform operation
fnmadd.h f26, f25, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x58b4)
li x8, 0x3e229863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0x3a85c3e0 # load x3 with value 0x3a85c3e0
sw x3, 0(x2) # store 0x3a85c3e0 in memory
flh f21, 0(x2) # load 0x3a85c3e0 from memory into f21
fnmadd.h f8, f1, f13, f21, dyn # perform operation
fnmadd.h f8, f1, f13, f21, rdn # perform operation
fnmadd.h f8, f1, f13, f21, rmm # perform operation
fnmadd.h f8, f1, f13, f21, rne # perform operation
fnmadd.h f8, f1, f13, f21, rtz # perform operation
fnmadd.h f8, f1, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc93a)
li x12, 0xe1ab3699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
li x3, 0x32b8e6dd # load x3 with value 0x32b8e6dd
sw x3, 0(x2) # store 0x32b8e6dd in memory
flh f9, 0(x2) # load 0x32b8e6dd from memory into f9
fnmadd.h f12, f13, f30, f9, dyn # perform operation
fnmadd.h f12, f13, f30, f9, rdn # perform operation
fnmadd.h f12, f13, f30, f9, rmm # perform operation
fnmadd.h f12, f13, f30, f9, rne # perform operation
fnmadd.h f12, f13, f30, f9, rtz # perform operation
fnmadd.h f12, f13, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f13, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x0)
li x4, 0xf157f63e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x9a4cc972 # load x3 with value 0x9a4cc972
sw x3, 0(x2) # store 0x9a4cc972 in memory
flh f7, 0(x2) # load 0x9a4cc972 from memory into f7
fnmadd.h f4, f17, f1, f7, dyn # perform operation
fnmadd.h f4, f17, f1, f7, rdn # perform operation
fnmadd.h f4, f17, f1, f7, rmm # perform operation
fnmadd.h f4, f17, f1, f7, rne # perform operation
fnmadd.h f4, f17, f1, f7, rtz # perform operation
fnmadd.h f4, f17, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f17, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8000)
li x23, 0xc87f5f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
li x3, 0xca5b30af # load x3 with value 0xca5b30af
sw x3, 0(x2) # store 0xca5b30af in memory
flh f25, 0(x2) # load 0xca5b30af from memory into f25
fnmadd.h f23, f13, f2, f25, dyn # perform operation
fnmadd.h f23, f13, f2, f25, rdn # perform operation
fnmadd.h f23, f13, f2, f25, rmm # perform operation
fnmadd.h f23, f13, f2, f25, rne # perform operation
fnmadd.h f23, f13, f2, f25, rtz # perform operation
fnmadd.h f23, f13, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3c00)
li x6, 0xf7bcf668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
li x3, 0xb91e3dd3 # load x3 with value 0xb91e3dd3
sw x3, 0(x2) # store 0xb91e3dd3 in memory
flh f4, 0(x2) # load 0xb91e3dd3 from memory into f4
fnmadd.h f6, f12, f23, f4, dyn # perform operation
fnmadd.h f6, f12, f23, f4, rdn # perform operation
fnmadd.h f6, f12, f23, f4, rmm # perform operation
fnmadd.h f6, f12, f23, f4, rne # perform operation
fnmadd.h f6, f12, f23, f4, rtz # perform operation
fnmadd.h f6, f12, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbc00)
li x23, 0x02004f7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x7d41222c # load x3 with value 0x7d41222c
sw x3, 0(x2) # store 0x7d41222c in memory
flh f5, 0(x2) # load 0x7d41222c from memory into f5
fnmadd.h f23, f14, f6, f5, dyn # perform operation
fnmadd.h f23, f14, f6, f5, rdn # perform operation
fnmadd.h f23, f14, f6, f5, rmm # perform operation
fnmadd.h f23, f14, f6, f5, rne # perform operation
fnmadd.h f23, f14, f6, f5, rtz # perform operation
fnmadd.h f23, f14, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3e00)
li x28, 0xac20a03b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0x2172acc8 # load x3 with value 0x2172acc8
sw x3, 0(x2) # store 0x2172acc8 in memory
flh f7, 0(x2) # load 0x2172acc8 from memory into f7
fnmadd.h f28, f11, f3, f7, dyn # perform operation
fnmadd.h f28, f11, f3, f7, rdn # perform operation
fnmadd.h f28, f11, f3, f7, rmm # perform operation
fnmadd.h f28, f11, f3, f7, rne # perform operation
fnmadd.h f28, f11, f3, f7, rtz # perform operation
fnmadd.h f28, f11, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbe00)
li x15, 0xc01ceb12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0xfea6c89d # load x3 with value 0xfea6c89d
sw x3, 0(x2) # store 0xfea6c89d in memory
flh f2, 0(x2) # load 0xfea6c89d from memory into f2
fnmadd.h f15, f18, f13, f2, dyn # perform operation
fnmadd.h f15, f18, f13, f2, rdn # perform operation
fnmadd.h f15, f18, f13, f2, rmm # perform operation
fnmadd.h f15, f18, f13, f2, rne # perform operation
fnmadd.h f15, f18, f13, f2, rtz # perform operation
fnmadd.h f15, f18, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f18, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x4000)
li x13, 0x429b6b19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
li x3, 0xfe2271e5 # load x3 with value 0xfe2271e5
sw x3, 0(x2) # store 0xfe2271e5 in memory
flh f27, 0(x2) # load 0xfe2271e5 from memory into f27
fnmadd.h f13, f7, f26, f27, dyn # perform operation
fnmadd.h f13, f7, f26, f27, rdn # perform operation
fnmadd.h f13, f7, f26, f27, rmm # perform operation
fnmadd.h f13, f7, f26, f27, rne # perform operation
fnmadd.h f13, f7, f26, f27, rtz # perform operation
fnmadd.h f13, f7, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f7, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc000)
li x26, 0x3bf728c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0xf92fd7d3 # load x3 with value 0xf92fd7d3
sw x3, 0(x2) # store 0xf92fd7d3 in memory
flh f22, 0(x2) # load 0xf92fd7d3 from memory into f22
fnmadd.h f26, f4, f6, f22, dyn # perform operation
fnmadd.h f26, f4, f6, f22, rdn # perform operation
fnmadd.h f26, f4, f6, f22, rmm # perform operation
fnmadd.h f26, f4, f6, f22, rne # perform operation
fnmadd.h f26, f4, f6, f22, rtz # perform operation
fnmadd.h f26, f4, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f4, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x400)
li x8, 0xc76c13fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
li x3, 0xed0cd3bd # load x3 with value 0xed0cd3bd
sw x3, 0(x2) # store 0xed0cd3bd in memory
flh f2, 0(x2) # load 0xed0cd3bd from memory into f2
fnmadd.h f8, f18, f15, f2, dyn # perform operation
fnmadd.h f8, f18, f15, f2, rdn # perform operation
fnmadd.h f8, f18, f15, f2, rmm # perform operation
fnmadd.h f8, f18, f15, f2, rne # perform operation
fnmadd.h f8, f18, f15, f2, rtz # perform operation
fnmadd.h f8, f18, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f18, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8400)
li x11, 0x1b6b9973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
li x3, 0xd11b0711 # load x3 with value 0xd11b0711
sw x3, 0(x2) # store 0xd11b0711 in memory
flh f21, 0(x2) # load 0xd11b0711 from memory into f21
fnmadd.h f11, f12, f31, f21, dyn # perform operation
fnmadd.h f11, f12, f31, f21, rdn # perform operation
fnmadd.h f11, f12, f31, f21, rmm # perform operation
fnmadd.h f11, f12, f31, f21, rne # perform operation
fnmadd.h f11, f12, f31, f21, rtz # perform operation
fnmadd.h f11, f12, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7bff)
li x18, 0x4d2fce65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0xedfdeb3a # load x3 with value 0xedfdeb3a
sw x3, 0(x2) # store 0xedfdeb3a in memory
flh f2, 0(x2) # load 0xedfdeb3a from memory into f2
fnmadd.h f18, f15, f25, f2, dyn # perform operation
fnmadd.h f18, f15, f25, f2, rdn # perform operation
fnmadd.h f18, f15, f25, f2, rmm # perform operation
fnmadd.h f18, f15, f25, f2, rne # perform operation
fnmadd.h f18, f15, f25, f2, rtz # perform operation
fnmadd.h f18, f15, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f15, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfbff)
li x11, 0xbeced911 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
li x3, 0x5bf02a31 # load x3 with value 0x5bf02a31
sw x3, 0(x2) # store 0x5bf02a31 in memory
flh f22, 0(x2) # load 0x5bf02a31 from memory into f22
fnmadd.h f11, f30, f1, f22, dyn # perform operation
fnmadd.h f11, f30, f1, f22, rdn # perform operation
fnmadd.h f11, f30, f1, f22, rmm # perform operation
fnmadd.h f11, f30, f1, f22, rne # perform operation
fnmadd.h f11, f30, f1, f22, rtz # perform operation
fnmadd.h f11, f30, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3ff)
li x13, 0x53c6a339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x928f5847 # load x3 with value 0x928f5847
sw x3, 0(x2) # store 0x928f5847 in memory
flh f3, 0(x2) # load 0x928f5847 from memory into f3
fnmadd.h f13, f16, f4, f3, dyn # perform operation
fnmadd.h f13, f16, f4, f3, rdn # perform operation
fnmadd.h f13, f16, f4, f3, rmm # perform operation
fnmadd.h f13, f16, f4, f3, rne # perform operation
fnmadd.h f13, f16, f4, f3, rtz # perform operation
fnmadd.h f13, f16, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x83ff)
li x4, 0x7e79e9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x50c0a136 # load x3 with value 0x50c0a136
sw x3, 0(x2) # store 0x50c0a136 in memory
flh f21, 0(x2) # load 0x50c0a136 from memory into f21
fnmadd.h f4, f18, f17, f21, dyn # perform operation
fnmadd.h f4, f18, f17, f21, rdn # perform operation
fnmadd.h f4, f18, f17, f21, rmm # perform operation
fnmadd.h f4, f18, f17, f21, rne # perform operation
fnmadd.h f4, f18, f17, f21, rtz # perform operation
fnmadd.h f4, f18, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f18, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x200)
li x10, 0xd0a218b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
li x3, 0x72930998 # load x3 with value 0x72930998
sw x3, 0(x2) # store 0x72930998 in memory
flh f12, 0(x2) # load 0x72930998 from memory into f12
fnmadd.h f10, f27, f8, f12, dyn # perform operation
fnmadd.h f10, f27, f8, f12, rdn # perform operation
fnmadd.h f10, f27, f8, f12, rmm # perform operation
fnmadd.h f10, f27, f8, f12, rne # perform operation
fnmadd.h f10, f27, f8, f12, rtz # perform operation
fnmadd.h f10, f27, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f27, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8200)
li x7, 0x7e2e06b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0xeac13b69 # load x3 with value 0xeac13b69
sw x3, 0(x2) # store 0xeac13b69 in memory
flh f12, 0(x2) # load 0xeac13b69 from memory into f12
fnmadd.h f7, f4, f31, f12, dyn # perform operation
fnmadd.h f7, f4, f31, f12, rdn # perform operation
fnmadd.h f7, f4, f31, f12, rmm # perform operation
fnmadd.h f7, f4, f31, f12, rne # perform operation
fnmadd.h f7, f4, f31, f12, rtz # perform operation
fnmadd.h f7, f4, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f4, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x1)
li x3, 0x00f1dae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x0fe04a22 # load x3 with value 0x0fe04a22
sw x3, 0(x2) # store 0x0fe04a22 in memory
flh f17, 0(x2) # load 0x0fe04a22 from memory into f17
fnmadd.h f3, f7, f31, f17, dyn # perform operation
fnmadd.h f3, f7, f31, f17, rdn # perform operation
fnmadd.h f3, f7, f31, f17, rmm # perform operation
fnmadd.h f3, f7, f31, f17, rne # perform operation
fnmadd.h f3, f7, f31, f17, rtz # perform operation
fnmadd.h f3, f7, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8001)
li x28, 0x0ec8e281 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0x2eaed6bb # load x3 with value 0x2eaed6bb
sw x3, 0(x2) # store 0x2eaed6bb in memory
flh f1, 0(x2) # load 0x2eaed6bb from memory into f1
fnmadd.h f28, f13, f21, f1, dyn # perform operation
fnmadd.h f28, f13, f21, f1, rdn # perform operation
fnmadd.h f28, f13, f21, f1, rmm # perform operation
fnmadd.h f28, f13, f21, f1, rne # perform operation
fnmadd.h f28, f13, f21, f1, rtz # perform operation
fnmadd.h f28, f13, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c00)
li x16, 0x23fce4eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0x44e3d3ef # load x3 with value 0x44e3d3ef
sw x3, 0(x2) # store 0x44e3d3ef in memory
flh f23, 0(x2) # load 0x44e3d3ef from memory into f23
fnmadd.h f16, f19, f21, f23, dyn # perform operation
fnmadd.h f16, f19, f21, f23, rdn # perform operation
fnmadd.h f16, f19, f21, f23, rmm # perform operation
fnmadd.h f16, f19, f21, f23, rne # perform operation
fnmadd.h f16, f19, f21, f23, rtz # perform operation
fnmadd.h f16, f19, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f19, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f19, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f19, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f19, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f19, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc00)
li x1, 0x239b6d8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
li x3, 0x1381db6e # load x3 with value 0x1381db6e
sw x3, 0(x2) # store 0x1381db6e in memory
flh f11, 0(x2) # load 0x1381db6e from memory into f11
fnmadd.h f1, f16, f2, f11, dyn # perform operation
fnmadd.h f1, f16, f2, f11, rdn # perform operation
fnmadd.h f1, f16, f2, f11, rmm # perform operation
fnmadd.h f1, f16, f2, f11, rne # perform operation
fnmadd.h f1, f16, f2, f11, rtz # perform operation
fnmadd.h f1, f16, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f16, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7e00)
li x21, 0x72e5cebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
li x3, 0x533abef7 # load x3 with value 0x533abef7
sw x3, 0(x2) # store 0x533abef7 in memory
flh f31, 0(x2) # load 0x533abef7 from memory into f31
fnmadd.h f21, f10, f15, f31, dyn # perform operation
fnmadd.h f21, f10, f15, f31, rdn # perform operation
fnmadd.h f21, f10, f15, f31, rmm # perform operation
fnmadd.h f21, f10, f15, f31, rne # perform operation
fnmadd.h f21, f10, f15, f31, rtz # perform operation
fnmadd.h f21, f10, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f10, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7fff)
li x8, 0x552c3aec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f4, 0(x2) # load 0x00007fff from memory into f4
li x3, 0xf59dffee # load x3 with value 0xf59dffee
sw x3, 0(x2) # store 0xf59dffee in memory
flh f3, 0(x2) # load 0xf59dffee from memory into f3
fnmadd.h f8, f1, f4, f3, dyn # perform operation
fnmadd.h f8, f1, f4, f3, rdn # perform operation
fnmadd.h f8, f1, f4, f3, rmm # perform operation
fnmadd.h f8, f1, f4, f3, rne # perform operation
fnmadd.h f8, f1, f4, f3, rtz # perform operation
fnmadd.h f8, f1, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c01)
li x20, 0xbacdc1ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0x3a219b4c # load x3 with value 0x3a219b4c
sw x3, 0(x2) # store 0x3a219b4c in memory
flh f14, 0(x2) # load 0x3a219b4c from memory into f14
fnmadd.h f20, f22, f26, f14, dyn # perform operation
fnmadd.h f20, f22, f26, f14, rdn # perform operation
fnmadd.h f20, f22, f26, f14, rmm # perform operation
fnmadd.h f20, f22, f26, f14, rne # perform operation
fnmadd.h f20, f22, f26, f14, rtz # perform operation
fnmadd.h f20, f22, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7dff)
li x4, 0x0a8ea7ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0xcce0c0f6 # load x3 with value 0xcce0c0f6
sw x3, 0(x2) # store 0xcce0c0f6 in memory
flh f29, 0(x2) # load 0xcce0c0f6 from memory into f29
fnmadd.h f4, f31, f8, f29, dyn # perform operation
fnmadd.h f4, f31, f8, f29, rdn # perform operation
fnmadd.h f4, f31, f8, f29, rmm # perform operation
fnmadd.h f4, f31, f8, f29, rne # perform operation
fnmadd.h f4, f31, f8, f29, rtz # perform operation
fnmadd.h f4, f31, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f31, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f31, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f31, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f31, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f31, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x58b4)
li x19, 0xb18bc7c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0x8dc89769 # load x3 with value 0x8dc89769
sw x3, 0(x2) # store 0x8dc89769 in memory
flh f23, 0(x2) # load 0x8dc89769 from memory into f23
fnmadd.h f19, f2, f13, f23, dyn # perform operation
fnmadd.h f19, f2, f13, f23, rdn # perform operation
fnmadd.h f19, f2, f13, f23, rmm # perform operation
fnmadd.h f19, f2, f13, f23, rne # perform operation
fnmadd.h f19, f2, f13, f23, rtz # perform operation
fnmadd.h f19, f2, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f2, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc93a)
li x6, 0xb70d39bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
li x3, 0xe92d42c3 # load x3 with value 0xe92d42c3
sw x3, 0(x2) # store 0xe92d42c3 in memory
flh f5, 0(x2) # load 0xe92d42c3 from memory into f5
fnmadd.h f6, f17, f30, f5, dyn # perform operation
fnmadd.h f6, f17, f30, f5, rdn # perform operation
fnmadd.h f6, f17, f30, f5, rmm # perform operation
fnmadd.h f6, f17, f30, f5, rne # perform operation
fnmadd.h f6, f17, f30, f5, rtz # perform operation
fnmadd.h f6, f17, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f17, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x0)
li x14, 0xb4cf61d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xe47def64 # load x3 with value 0xe47def64
sw x3, 0(x2) # store 0xe47def64 in memory
flh f22, 0(x2) # load 0xe47def64 from memory into f22
fnmadd.h f14, f18, f4, f22, dyn # perform operation
fnmadd.h f14, f18, f4, f22, rdn # perform operation
fnmadd.h f14, f18, f4, f22, rmm # perform operation
fnmadd.h f14, f18, f4, f22, rne # perform operation
fnmadd.h f14, f18, f4, f22, rtz # perform operation
fnmadd.h f14, f18, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f18, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f18, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f18, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f18, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f18, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8000)
li x13, 0xb1f8a65a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x5e4d780a # load x3 with value 0x5e4d780a
sw x3, 0(x2) # store 0x5e4d780a in memory
flh f6, 0(x2) # load 0x5e4d780a from memory into f6
fnmadd.h f13, f3, f12, f6, dyn # perform operation
fnmadd.h f13, f3, f12, f6, rdn # perform operation
fnmadd.h f13, f3, f12, f6, rmm # perform operation
fnmadd.h f13, f3, f12, f6, rne # perform operation
fnmadd.h f13, f3, f12, f6, rtz # perform operation
fnmadd.h f13, f3, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3c00)
li x9, 0x896ae839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0x13a62704 # load x3 with value 0x13a62704
sw x3, 0(x2) # store 0x13a62704 in memory
flh f19, 0(x2) # load 0x13a62704 from memory into f19
fnmadd.h f9, f4, f16, f19, dyn # perform operation
fnmadd.h f9, f4, f16, f19, rdn # perform operation
fnmadd.h f9, f4, f16, f19, rmm # perform operation
fnmadd.h f9, f4, f16, f19, rne # perform operation
fnmadd.h f9, f4, f16, f19, rtz # perform operation
fnmadd.h f9, f4, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f4, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbc00)
li x31, 0xc048f810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0xb4802eef # load x3 with value 0xb4802eef
sw x3, 0(x2) # store 0xb4802eef in memory
flh f25, 0(x2) # load 0xb4802eef from memory into f25
fnmadd.h f31, f3, f2, f25, dyn # perform operation
fnmadd.h f31, f3, f2, f25, rdn # perform operation
fnmadd.h f31, f3, f2, f25, rmm # perform operation
fnmadd.h f31, f3, f2, f25, rne # perform operation
fnmadd.h f31, f3, f2, f25, rtz # perform operation
fnmadd.h f31, f3, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f3, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f3, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3e00)
li x6, 0xc40f7d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0xfd9331e7 # load x3 with value 0xfd9331e7
sw x3, 0(x2) # store 0xfd9331e7 in memory
flh f30, 0(x2) # load 0xfd9331e7 from memory into f30
fnmadd.h f6, f27, f19, f30, dyn # perform operation
fnmadd.h f6, f27, f19, f30, rdn # perform operation
fnmadd.h f6, f27, f19, f30, rmm # perform operation
fnmadd.h f6, f27, f19, f30, rne # perform operation
fnmadd.h f6, f27, f19, f30, rtz # perform operation
fnmadd.h f6, f27, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbe00)
li x17, 0x83c9303d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0xd7f9f9e2 # load x3 with value 0xd7f9f9e2
sw x3, 0(x2) # store 0xd7f9f9e2 in memory
flh f22, 0(x2) # load 0xd7f9f9e2 from memory into f22
fnmadd.h f17, f31, f23, f22, dyn # perform operation
fnmadd.h f17, f31, f23, f22, rdn # perform operation
fnmadd.h f17, f31, f23, f22, rmm # perform operation
fnmadd.h f17, f31, f23, f22, rne # perform operation
fnmadd.h f17, f31, f23, f22, rtz # perform operation
fnmadd.h f17, f31, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x4000)
li x12, 0x782d086e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0xdf63c386 # load x3 with value 0xdf63c386
sw x3, 0(x2) # store 0xdf63c386 in memory
flh f2, 0(x2) # load 0xdf63c386 from memory into f2
fnmadd.h f12, f7, f5, f2, dyn # perform operation
fnmadd.h f12, f7, f5, f2, rdn # perform operation
fnmadd.h f12, f7, f5, f2, rmm # perform operation
fnmadd.h f12, f7, f5, f2, rne # perform operation
fnmadd.h f12, f7, f5, f2, rtz # perform operation
fnmadd.h f12, f7, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc000)
li x31, 0x740ee49c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
li x3, 0x75e44862 # load x3 with value 0x75e44862
sw x3, 0(x2) # store 0x75e44862 in memory
flh f4, 0(x2) # load 0x75e44862 from memory into f4
fnmadd.h f31, f22, f15, f4, dyn # perform operation
fnmadd.h f31, f22, f15, f4, rdn # perform operation
fnmadd.h f31, f22, f15, f4, rmm # perform operation
fnmadd.h f31, f22, f15, f4, rne # perform operation
fnmadd.h f31, f22, f15, f4, rtz # perform operation
fnmadd.h f31, f22, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x400)
li x21, 0x8b234d7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
li x3, 0x74eca6a0 # load x3 with value 0x74eca6a0
sw x3, 0(x2) # store 0x74eca6a0 in memory
flh f10, 0(x2) # load 0x74eca6a0 from memory into f10
fnmadd.h f21, f16, f31, f10, dyn # perform operation
fnmadd.h f21, f16, f31, f10, rdn # perform operation
fnmadd.h f21, f16, f31, f10, rmm # perform operation
fnmadd.h f21, f16, f31, f10, rne # perform operation
fnmadd.h f21, f16, f31, f10, rtz # perform operation
fnmadd.h f21, f16, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8400)
li x10, 0xb7f5994a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0x856c83a9 # load x3 with value 0x856c83a9
sw x3, 0(x2) # store 0x856c83a9 in memory
flh f25, 0(x2) # load 0x856c83a9 from memory into f25
fnmadd.h f10, f30, f6, f25, dyn # perform operation
fnmadd.h f10, f30, f6, f25, rdn # perform operation
fnmadd.h f10, f30, f6, f25, rmm # perform operation
fnmadd.h f10, f30, f6, f25, rne # perform operation
fnmadd.h f10, f30, f6, f25, rtz # perform operation
fnmadd.h f10, f30, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f30, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7bff)
li x6, 0x2091f887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0x16a40d13 # load x3 with value 0x16a40d13
sw x3, 0(x2) # store 0x16a40d13 in memory
flh f17, 0(x2) # load 0x16a40d13 from memory into f17
fnmadd.h f6, f16, f12, f17, dyn # perform operation
fnmadd.h f6, f16, f12, f17, rdn # perform operation
fnmadd.h f6, f16, f12, f17, rmm # perform operation
fnmadd.h f6, f16, f12, f17, rne # perform operation
fnmadd.h f6, f16, f12, f17, rtz # perform operation
fnmadd.h f6, f16, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfbff)
li x1, 0x520f31f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0x8fb9b716 # load x3 with value 0x8fb9b716
sw x3, 0(x2) # store 0x8fb9b716 in memory
flh f15, 0(x2) # load 0x8fb9b716 from memory into f15
fnmadd.h f1, f12, f5, f15, dyn # perform operation
fnmadd.h f1, f12, f5, f15, rdn # perform operation
fnmadd.h f1, f12, f5, f15, rmm # perform operation
fnmadd.h f1, f12, f5, f15, rne # perform operation
fnmadd.h f1, f12, f5, f15, rtz # perform operation
fnmadd.h f1, f12, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f12, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3ff)
li x31, 0x84d8d65b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0xb209f53d # load x3 with value 0xb209f53d
sw x3, 0(x2) # store 0xb209f53d in memory
flh f12, 0(x2) # load 0xb209f53d from memory into f12
fnmadd.h f31, f29, f3, f12, dyn # perform operation
fnmadd.h f31, f29, f3, f12, rdn # perform operation
fnmadd.h f31, f29, f3, f12, rmm # perform operation
fnmadd.h f31, f29, f3, f12, rne # perform operation
fnmadd.h f31, f29, f3, f12, rtz # perform operation
fnmadd.h f31, f29, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x83ff)
li x25, 0x6bd80936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0x06efad57 # load x3 with value 0x06efad57
sw x3, 0(x2) # store 0x06efad57 in memory
flh f2, 0(x2) # load 0x06efad57 from memory into f2
fnmadd.h f25, f6, f13, f2, dyn # perform operation
fnmadd.h f25, f6, f13, f2, rdn # perform operation
fnmadd.h f25, f6, f13, f2, rmm # perform operation
fnmadd.h f25, f6, f13, f2, rne # perform operation
fnmadd.h f25, f6, f13, f2, rtz # perform operation
fnmadd.h f25, f6, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x200)
li x7, 0x8c6c7a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0xf2f893c0 # load x3 with value 0xf2f893c0
sw x3, 0(x2) # store 0xf2f893c0 in memory
flh f26, 0(x2) # load 0xf2f893c0 from memory into f26
fnmadd.h f7, f25, f24, f26, dyn # perform operation
fnmadd.h f7, f25, f24, f26, rdn # perform operation
fnmadd.h f7, f25, f24, f26, rmm # perform operation
fnmadd.h f7, f25, f24, f26, rne # perform operation
fnmadd.h f7, f25, f24, f26, rtz # perform operation
fnmadd.h f7, f25, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f25, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8200)
li x15, 0xf9d94357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0xf1f7cf5b # load x3 with value 0xf1f7cf5b
sw x3, 0(x2) # store 0xf1f7cf5b in memory
flh f13, 0(x2) # load 0xf1f7cf5b from memory into f13
fnmadd.h f15, f16, f29, f13, dyn # perform operation
fnmadd.h f15, f16, f29, f13, rdn # perform operation
fnmadd.h f15, f16, f29, f13, rmm # perform operation
fnmadd.h f15, f16, f29, f13, rne # perform operation
fnmadd.h f15, f16, f29, f13, rtz # perform operation
fnmadd.h f15, f16, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x1)
li x29, 0x60efb376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x0e1bd7b4 # load x3 with value 0x0e1bd7b4
sw x3, 0(x2) # store 0x0e1bd7b4 in memory
flh f5, 0(x2) # load 0x0e1bd7b4 from memory into f5
fnmadd.h f29, f26, f3, f5, dyn # perform operation
fnmadd.h f29, f26, f3, f5, rdn # perform operation
fnmadd.h f29, f26, f3, f5, rmm # perform operation
fnmadd.h f29, f26, f3, f5, rne # perform operation
fnmadd.h f29, f26, f3, f5, rtz # perform operation
fnmadd.h f29, f26, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8001)
li x21, 0x155288b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
li x3, 0xf5cdf20f # load x3 with value 0xf5cdf20f
sw x3, 0(x2) # store 0xf5cdf20f in memory
flh f10, 0(x2) # load 0xf5cdf20f from memory into f10
fnmadd.h f21, f17, f18, f10, dyn # perform operation
fnmadd.h f21, f17, f18, f10, rdn # perform operation
fnmadd.h f21, f17, f18, f10, rmm # perform operation
fnmadd.h f21, f17, f18, f10, rne # perform operation
fnmadd.h f21, f17, f18, f10, rtz # perform operation
fnmadd.h f21, f17, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c00)
li x10, 0x2562840d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
li x3, 0xa6ad71cb # load x3 with value 0xa6ad71cb
sw x3, 0(x2) # store 0xa6ad71cb in memory
flh f16, 0(x2) # load 0xa6ad71cb from memory into f16
fnmadd.h f10, f19, f18, f16, dyn # perform operation
fnmadd.h f10, f19, f18, f16, rdn # perform operation
fnmadd.h f10, f19, f18, f16, rmm # perform operation
fnmadd.h f10, f19, f18, f16, rne # perform operation
fnmadd.h f10, f19, f18, f16, rtz # perform operation
fnmadd.h f10, f19, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc00)
li x30, 0xd63a94fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0xb57768b7 # load x3 with value 0xb57768b7
sw x3, 0(x2) # store 0xb57768b7 in memory
flh f18, 0(x2) # load 0xb57768b7 from memory into f18
fnmadd.h f30, f17, f11, f18, dyn # perform operation
fnmadd.h f30, f17, f11, f18, rdn # perform operation
fnmadd.h f30, f17, f11, f18, rmm # perform operation
fnmadd.h f30, f17, f11, f18, rne # perform operation
fnmadd.h f30, f17, f11, f18, rtz # perform operation
fnmadd.h f30, f17, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7e00)
li x16, 0x64e2f5a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x1e518e1f # load x3 with value 0x1e518e1f
sw x3, 0(x2) # store 0x1e518e1f in memory
flh f23, 0(x2) # load 0x1e518e1f from memory into f23
fnmadd.h f16, f9, f11, f23, dyn # perform operation
fnmadd.h f16, f9, f11, f23, rdn # perform operation
fnmadd.h f16, f9, f11, f23, rmm # perform operation
fnmadd.h f16, f9, f11, f23, rne # perform operation
fnmadd.h f16, f9, f11, f23, rtz # perform operation
fnmadd.h f16, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7fff)
li x21, 0x3cf7c581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
li x3, 0x8f692b27 # load x3 with value 0x8f692b27
sw x3, 0(x2) # store 0x8f692b27 in memory
flh f18, 0(x2) # load 0x8f692b27 from memory into f18
fnmadd.h f21, f4, f30, f18, dyn # perform operation
fnmadd.h f21, f4, f30, f18, rdn # perform operation
fnmadd.h f21, f4, f30, f18, rmm # perform operation
fnmadd.h f21, f4, f30, f18, rne # perform operation
fnmadd.h f21, f4, f30, f18, rtz # perform operation
fnmadd.h f21, f4, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f4, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f4, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f4, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f4, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f4, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c01)
li x21, 0xc877cfd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0x2a4069e4 # load x3 with value 0x2a4069e4
sw x3, 0(x2) # store 0x2a4069e4 in memory
flh f1, 0(x2) # load 0x2a4069e4 from memory into f1
fnmadd.h f21, f14, f20, f1, dyn # perform operation
fnmadd.h f21, f14, f20, f1, rdn # perform operation
fnmadd.h f21, f14, f20, f1, rmm # perform operation
fnmadd.h f21, f14, f20, f1, rne # perform operation
fnmadd.h f21, f14, f20, f1, rtz # perform operation
fnmadd.h f21, f14, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7dff)
li x7, 0x186a2eff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0xd1de3961 # load x3 with value 0xd1de3961
sw x3, 0(x2) # store 0xd1de3961 in memory
flh f2, 0(x2) # load 0xd1de3961 from memory into f2
fnmadd.h f7, f20, f16, f2, dyn # perform operation
fnmadd.h f7, f20, f16, f2, rdn # perform operation
fnmadd.h f7, f20, f16, f2, rmm # perform operation
fnmadd.h f7, f20, f16, f2, rne # perform operation
fnmadd.h f7, f20, f16, f2, rtz # perform operation
fnmadd.h f7, f20, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x58b4)
li x4, 0x9fd43cc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0xd0a07800 # load x3 with value 0xd0a07800
sw x3, 0(x2) # store 0xd0a07800 in memory
flh f21, 0(x2) # load 0xd0a07800 from memory into f21
fnmadd.h f4, f11, f24, f21, dyn # perform operation
fnmadd.h f4, f11, f24, f21, rdn # perform operation
fnmadd.h f4, f11, f24, f21, rmm # perform operation
fnmadd.h f4, f11, f24, f21, rne # perform operation
fnmadd.h f4, f11, f24, f21, rtz # perform operation
fnmadd.h f4, f11, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f11, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc93a)
li x14, 0x1d187e3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
li x3, 0x04addac4 # load x3 with value 0x04addac4
sw x3, 0(x2) # store 0x04addac4 in memory
flh f29, 0(x2) # load 0x04addac4 from memory into f29
fnmadd.h f14, f8, f11, f29, dyn # perform operation
fnmadd.h f14, f8, f11, f29, rdn # perform operation
fnmadd.h f14, f8, f11, f29, rmm # perform operation
fnmadd.h f14, f8, f11, f29, rne # perform operation
fnmadd.h f14, f8, f11, f29, rtz # perform operation
fnmadd.h f14, f8, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x0)
li x29, 0xda4eafdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x4b792a96 # load x3 with value 0x4b792a96
sw x3, 0(x2) # store 0x4b792a96 in memory
flh f31, 0(x2) # load 0x4b792a96 from memory into f31
fnmadd.h f29, f11, f20, f31, dyn # perform operation
fnmadd.h f29, f11, f20, f31, rdn # perform operation
fnmadd.h f29, f11, f20, f31, rmm # perform operation
fnmadd.h f29, f11, f20, f31, rne # perform operation
fnmadd.h f29, f11, f20, f31, rtz # perform operation
fnmadd.h f29, f11, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8000)
li x11, 0x509228c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x62e59267 # load x3 with value 0x62e59267
sw x3, 0(x2) # store 0x62e59267 in memory
flh f16, 0(x2) # load 0x62e59267 from memory into f16
fnmadd.h f11, f23, f22, f16, dyn # perform operation
fnmadd.h f11, f23, f22, f16, rdn # perform operation
fnmadd.h f11, f23, f22, f16, rmm # perform operation
fnmadd.h f11, f23, f22, f16, rne # perform operation
fnmadd.h f11, f23, f22, f16, rtz # perform operation
fnmadd.h f11, f23, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f23, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f23, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3c00)
li x17, 0xc802bd82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
li x3, 0x535715f7 # load x3 with value 0x535715f7
sw x3, 0(x2) # store 0x535715f7 in memory
flh f16, 0(x2) # load 0x535715f7 from memory into f16
fnmadd.h f17, f29, f8, f16, dyn # perform operation
fnmadd.h f17, f29, f8, f16, rdn # perform operation
fnmadd.h f17, f29, f8, f16, rmm # perform operation
fnmadd.h f17, f29, f8, f16, rne # perform operation
fnmadd.h f17, f29, f8, f16, rtz # perform operation
fnmadd.h f17, f29, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbc00)
li x5, 0xc80fd15b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0xe83f84f6 # load x3 with value 0xe83f84f6
sw x3, 0(x2) # store 0xe83f84f6 in memory
flh f17, 0(x2) # load 0xe83f84f6 from memory into f17
fnmadd.h f5, f24, f21, f17, dyn # perform operation
fnmadd.h f5, f24, f21, f17, rdn # perform operation
fnmadd.h f5, f24, f21, f17, rmm # perform operation
fnmadd.h f5, f24, f21, f17, rne # perform operation
fnmadd.h f5, f24, f21, f17, rtz # perform operation
fnmadd.h f5, f24, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f24, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3e00)
li x25, 0x27484e5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0xf0ad15a7 # load x3 with value 0xf0ad15a7
sw x3, 0(x2) # store 0xf0ad15a7 in memory
flh f27, 0(x2) # load 0xf0ad15a7 from memory into f27
fnmadd.h f25, f1, f19, f27, dyn # perform operation
fnmadd.h f25, f1, f19, f27, rdn # perform operation
fnmadd.h f25, f1, f19, f27, rmm # perform operation
fnmadd.h f25, f1, f19, f27, rne # perform operation
fnmadd.h f25, f1, f19, f27, rtz # perform operation
fnmadd.h f25, f1, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbe00)
li x28, 0x0c9b5845 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0xe7a446ca # load x3 with value 0xe7a446ca
sw x3, 0(x2) # store 0xe7a446ca in memory
flh f16, 0(x2) # load 0xe7a446ca from memory into f16
fnmadd.h f28, f12, f30, f16, dyn # perform operation
fnmadd.h f28, f12, f30, f16, rdn # perform operation
fnmadd.h f28, f12, f30, f16, rmm # perform operation
fnmadd.h f28, f12, f30, f16, rne # perform operation
fnmadd.h f28, f12, f30, f16, rtz # perform operation
fnmadd.h f28, f12, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x4000)
li x6, 0xdb8afe02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
li x3, 0x770e6924 # load x3 with value 0x770e6924
sw x3, 0(x2) # store 0x770e6924 in memory
flh f16, 0(x2) # load 0x770e6924 from memory into f16
fnmadd.h f6, f3, f20, f16, dyn # perform operation
fnmadd.h f6, f3, f20, f16, rdn # perform operation
fnmadd.h f6, f3, f20, f16, rmm # perform operation
fnmadd.h f6, f3, f20, f16, rne # perform operation
fnmadd.h f6, f3, f20, f16, rtz # perform operation
fnmadd.h f6, f3, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc000)
li x31, 0xbe1b1bb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x0692b155 # load x3 with value 0x0692b155
sw x3, 0(x2) # store 0x0692b155 in memory
flh f9, 0(x2) # load 0x0692b155 from memory into f9
fnmadd.h f31, f29, f28, f9, dyn # perform operation
fnmadd.h f31, f29, f28, f9, rdn # perform operation
fnmadd.h f31, f29, f28, f9, rmm # perform operation
fnmadd.h f31, f29, f28, f9, rne # perform operation
fnmadd.h f31, f29, f28, f9, rtz # perform operation
fnmadd.h f31, f29, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x400)
li x9, 0xe4a1d55b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
li x3, 0x81a6ae6a # load x3 with value 0x81a6ae6a
sw x3, 0(x2) # store 0x81a6ae6a in memory
flh f4, 0(x2) # load 0x81a6ae6a from memory into f4
fnmadd.h f9, f1, f16, f4, dyn # perform operation
fnmadd.h f9, f1, f16, f4, rdn # perform operation
fnmadd.h f9, f1, f16, f4, rmm # perform operation
fnmadd.h f9, f1, f16, f4, rne # perform operation
fnmadd.h f9, f1, f16, f4, rtz # perform operation
fnmadd.h f9, f1, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8400)
li x8, 0x2a496af5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
li x3, 0x4c808810 # load x3 with value 0x4c808810
sw x3, 0(x2) # store 0x4c808810 in memory
flh f28, 0(x2) # load 0x4c808810 from memory into f28
fnmadd.h f8, f30, f21, f28, dyn # perform operation
fnmadd.h f8, f30, f21, f28, rdn # perform operation
fnmadd.h f8, f30, f21, f28, rmm # perform operation
fnmadd.h f8, f30, f21, f28, rne # perform operation
fnmadd.h f8, f30, f21, f28, rtz # perform operation
fnmadd.h f8, f30, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7bff)
li x8, 0x6c69c4be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0xeb8758e8 # load x3 with value 0xeb8758e8
sw x3, 0(x2) # store 0xeb8758e8 in memory
flh f1, 0(x2) # load 0xeb8758e8 from memory into f1
fnmadd.h f8, f19, f27, f1, dyn # perform operation
fnmadd.h f8, f19, f27, f1, rdn # perform operation
fnmadd.h f8, f19, f27, f1, rmm # perform operation
fnmadd.h f8, f19, f27, f1, rne # perform operation
fnmadd.h f8, f19, f27, f1, rtz # perform operation
fnmadd.h f8, f19, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f19, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfbff)
li x15, 0x71e4f488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0x06209715 # load x3 with value 0x06209715
sw x3, 0(x2) # store 0x06209715 in memory
flh f9, 0(x2) # load 0x06209715 from memory into f9
fnmadd.h f15, f12, f7, f9, dyn # perform operation
fnmadd.h f15, f12, f7, f9, rdn # perform operation
fnmadd.h f15, f12, f7, f9, rmm # perform operation
fnmadd.h f15, f12, f7, f9, rne # perform operation
fnmadd.h f15, f12, f7, f9, rtz # perform operation
fnmadd.h f15, f12, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3ff)
li x9, 0xb402fd2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x386ad67b # load x3 with value 0x386ad67b
sw x3, 0(x2) # store 0x386ad67b in memory
flh f27, 0(x2) # load 0x386ad67b from memory into f27
fnmadd.h f9, f22, f1, f27, dyn # perform operation
fnmadd.h f9, f22, f1, f27, rdn # perform operation
fnmadd.h f9, f22, f1, f27, rmm # perform operation
fnmadd.h f9, f22, f1, f27, rne # perform operation
fnmadd.h f9, f22, f1, f27, rtz # perform operation
fnmadd.h f9, f22, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x83ff)
li x19, 0xfc6aeacc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0x4887c36d # load x3 with value 0x4887c36d
sw x3, 0(x2) # store 0x4887c36d in memory
flh f20, 0(x2) # load 0x4887c36d from memory into f20
fnmadd.h f19, f14, f5, f20, dyn # perform operation
fnmadd.h f19, f14, f5, f20, rdn # perform operation
fnmadd.h f19, f14, f5, f20, rmm # perform operation
fnmadd.h f19, f14, f5, f20, rne # perform operation
fnmadd.h f19, f14, f5, f20, rtz # perform operation
fnmadd.h f19, f14, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x200)
li x5, 0xc2aa4de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0xc21cd9df # load x3 with value 0xc21cd9df
sw x3, 0(x2) # store 0xc21cd9df in memory
flh f27, 0(x2) # load 0xc21cd9df from memory into f27
fnmadd.h f5, f25, f23, f27, dyn # perform operation
fnmadd.h f5, f25, f23, f27, rdn # perform operation
fnmadd.h f5, f25, f23, f27, rmm # perform operation
fnmadd.h f5, f25, f23, f27, rne # perform operation
fnmadd.h f5, f25, f23, f27, rtz # perform operation
fnmadd.h f5, f25, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f25, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f25, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f25, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f25, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f25, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8200)
li x15, 0x9f5e2b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0xfcee76c1 # load x3 with value 0xfcee76c1
sw x3, 0(x2) # store 0xfcee76c1 in memory
flh f20, 0(x2) # load 0xfcee76c1 from memory into f20
fnmadd.h f15, f19, f6, f20, dyn # perform operation
fnmadd.h f15, f19, f6, f20, rdn # perform operation
fnmadd.h f15, f19, f6, f20, rmm # perform operation
fnmadd.h f15, f19, f6, f20, rne # perform operation
fnmadd.h f15, f19, f6, f20, rtz # perform operation
fnmadd.h f15, f19, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f19, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x1)
li x6, 0x71a00743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x78cc999f # load x3 with value 0x78cc999f
sw x3, 0(x2) # store 0x78cc999f in memory
flh f31, 0(x2) # load 0x78cc999f from memory into f31
fnmadd.h f6, f25, f27, f31, dyn # perform operation
fnmadd.h f6, f25, f27, f31, rdn # perform operation
fnmadd.h f6, f25, f27, f31, rmm # perform operation
fnmadd.h f6, f25, f27, f31, rne # perform operation
fnmadd.h f6, f25, f27, f31, rtz # perform operation
fnmadd.h f6, f25, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8001)
li x5, 0xbdd979ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
li x3, 0x415d3ff5 # load x3 with value 0x415d3ff5
sw x3, 0(x2) # store 0x415d3ff5 in memory
flh f12, 0(x2) # load 0x415d3ff5 from memory into f12
fnmadd.h f5, f20, f1, f12, dyn # perform operation
fnmadd.h f5, f20, f1, f12, rdn # perform operation
fnmadd.h f5, f20, f1, f12, rmm # perform operation
fnmadd.h f5, f20, f1, f12, rne # perform operation
fnmadd.h f5, f20, f1, f12, rtz # perform operation
fnmadd.h f5, f20, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c00)
li x30, 0xadcaf904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
li x3, 0x0c99a50c # load x3 with value 0x0c99a50c
sw x3, 0(x2) # store 0x0c99a50c in memory
flh f16, 0(x2) # load 0x0c99a50c from memory into f16
fnmadd.h f30, f24, f31, f16, dyn # perform operation
fnmadd.h f30, f24, f31, f16, rdn # perform operation
fnmadd.h f30, f24, f31, f16, rmm # perform operation
fnmadd.h f30, f24, f31, f16, rne # perform operation
fnmadd.h f30, f24, f31, f16, rtz # perform operation
fnmadd.h f30, f24, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc00)
li x22, 0x5e46f183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0xabb85b6f # load x3 with value 0xabb85b6f
sw x3, 0(x2) # store 0xabb85b6f in memory
flh f16, 0(x2) # load 0xabb85b6f from memory into f16
fnmadd.h f22, f9, f26, f16, dyn # perform operation
fnmadd.h f22, f9, f26, f16, rdn # perform operation
fnmadd.h f22, f9, f26, f16, rmm # perform operation
fnmadd.h f22, f9, f26, f16, rne # perform operation
fnmadd.h f22, f9, f26, f16, rtz # perform operation
fnmadd.h f22, f9, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7e00)
li x25, 0x9cfec167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0x95080a9b # load x3 with value 0x95080a9b
sw x3, 0(x2) # store 0x95080a9b in memory
flh f22, 0(x2) # load 0x95080a9b from memory into f22
fnmadd.h f25, f2, f9, f22, dyn # perform operation
fnmadd.h f25, f2, f9, f22, rdn # perform operation
fnmadd.h f25, f2, f9, f22, rmm # perform operation
fnmadd.h f25, f2, f9, f22, rne # perform operation
fnmadd.h f25, f2, f9, f22, rtz # perform operation
fnmadd.h f25, f2, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7fff)
li x28, 0xafad2fac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
li x3, 0xd1eab4a8 # load x3 with value 0xd1eab4a8
sw x3, 0(x2) # store 0xd1eab4a8 in memory
flh f19, 0(x2) # load 0xd1eab4a8 from memory into f19
fnmadd.h f28, f6, f7, f19, dyn # perform operation
fnmadd.h f28, f6, f7, f19, rdn # perform operation
fnmadd.h f28, f6, f7, f19, rmm # perform operation
fnmadd.h f28, f6, f7, f19, rne # perform operation
fnmadd.h f28, f6, f7, f19, rtz # perform operation
fnmadd.h f28, f6, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c01)
li x30, 0x90f8e9a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0xd1f92309 # load x3 with value 0xd1f92309
sw x3, 0(x2) # store 0xd1f92309 in memory
flh f28, 0(x2) # load 0xd1f92309 from memory into f28
fnmadd.h f30, f13, f27, f28, dyn # perform operation
fnmadd.h f30, f13, f27, f28, rdn # perform operation
fnmadd.h f30, f13, f27, f28, rmm # perform operation
fnmadd.h f30, f13, f27, f28, rne # perform operation
fnmadd.h f30, f13, f27, f28, rtz # perform operation
fnmadd.h f30, f13, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7dff)
li x11, 0x74f633dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0x232d2ea5 # load x3 with value 0x232d2ea5
sw x3, 0(x2) # store 0x232d2ea5 in memory
flh f18, 0(x2) # load 0x232d2ea5 from memory into f18
fnmadd.h f11, f16, f2, f18, dyn # perform operation
fnmadd.h f11, f16, f2, f18, rdn # perform operation
fnmadd.h f11, f16, f2, f18, rmm # perform operation
fnmadd.h f11, f16, f2, f18, rne # perform operation
fnmadd.h f11, f16, f2, f18, rtz # perform operation
fnmadd.h f11, f16, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x58b4)
li x27, 0x282bcb54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0xe9283179 # load x3 with value 0xe9283179
sw x3, 0(x2) # store 0xe9283179 in memory
flh f1, 0(x2) # load 0xe9283179 from memory into f1
fnmadd.h f27, f24, f26, f1, dyn # perform operation
fnmadd.h f27, f24, f26, f1, rdn # perform operation
fnmadd.h f27, f24, f26, f1, rmm # perform operation
fnmadd.h f27, f24, f26, f1, rne # perform operation
fnmadd.h f27, f24, f26, f1, rtz # perform operation
fnmadd.h f27, f24, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc93a)
li x27, 0x842aeffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x7b278f0e # load x3 with value 0x7b278f0e
sw x3, 0(x2) # store 0x7b278f0e in memory
flh f25, 0(x2) # load 0x7b278f0e from memory into f25
fnmadd.h f27, f13, f23, f25, dyn # perform operation
fnmadd.h f27, f13, f23, f25, rdn # perform operation
fnmadd.h f27, f13, f23, f25, rmm # perform operation
fnmadd.h f27, f13, f23, f25, rne # perform operation
fnmadd.h f27, f13, f23, f25, rtz # perform operation
fnmadd.h f27, f13, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x0)
li x30, 0x4188cca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xc7dab759 # load x3 with value 0xc7dab759
sw x3, 0(x2) # store 0xc7dab759 in memory
flh f3, 0(x2) # load 0xc7dab759 from memory into f3
fnmadd.h f30, f28, f4, f3, dyn # perform operation
fnmadd.h f30, f28, f4, f3, rdn # perform operation
fnmadd.h f30, f28, f4, f3, rmm # perform operation
fnmadd.h f30, f28, f4, f3, rne # perform operation
fnmadd.h f30, f28, f4, f3, rtz # perform operation
fnmadd.h f30, f28, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f28, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f28, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f28, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f28, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f28, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8000)
li x24, 0x3e962e96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
li x3, 0x1738180c # load x3 with value 0x1738180c
sw x3, 0(x2) # store 0x1738180c in memory
flh f16, 0(x2) # load 0x1738180c from memory into f16
fnmadd.h f24, f8, f23, f16, dyn # perform operation
fnmadd.h f24, f8, f23, f16, rdn # perform operation
fnmadd.h f24, f8, f23, f16, rmm # perform operation
fnmadd.h f24, f8, f23, f16, rne # perform operation
fnmadd.h f24, f8, f23, f16, rtz # perform operation
fnmadd.h f24, f8, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3c00)
li x8, 0xe92370ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0xeb2a2983 # load x3 with value 0xeb2a2983
sw x3, 0(x2) # store 0xeb2a2983 in memory
flh f18, 0(x2) # load 0xeb2a2983 from memory into f18
fnmadd.h f8, f10, f16, f18, dyn # perform operation
fnmadd.h f8, f10, f16, f18, rdn # perform operation
fnmadd.h f8, f10, f16, f18, rmm # perform operation
fnmadd.h f8, f10, f16, f18, rne # perform operation
fnmadd.h f8, f10, f16, f18, rtz # perform operation
fnmadd.h f8, f10, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f10, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbc00)
li x17, 0xf19905be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0x9e5062ce # load x3 with value 0x9e5062ce
sw x3, 0(x2) # store 0x9e5062ce in memory
flh f5, 0(x2) # load 0x9e5062ce from memory into f5
fnmadd.h f17, f3, f1, f5, dyn # perform operation
fnmadd.h f17, f3, f1, f5, rdn # perform operation
fnmadd.h f17, f3, f1, f5, rmm # perform operation
fnmadd.h f17, f3, f1, f5, rne # perform operation
fnmadd.h f17, f3, f1, f5, rtz # perform operation
fnmadd.h f17, f3, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3e00)
li x16, 0x8979f358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0x034918a9 # load x3 with value 0x034918a9
sw x3, 0(x2) # store 0x034918a9 in memory
flh f9, 0(x2) # load 0x034918a9 from memory into f9
fnmadd.h f16, f17, f3, f9, dyn # perform operation
fnmadd.h f16, f17, f3, f9, rdn # perform operation
fnmadd.h f16, f17, f3, f9, rmm # perform operation
fnmadd.h f16, f17, f3, f9, rne # perform operation
fnmadd.h f16, f17, f3, f9, rtz # perform operation
fnmadd.h f16, f17, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbe00)
li x7, 0xd8e90815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x0783cc26 # load x3 with value 0x0783cc26
sw x3, 0(x2) # store 0x0783cc26 in memory
flh f14, 0(x2) # load 0x0783cc26 from memory into f14
fnmadd.h f7, f26, f23, f14, dyn # perform operation
fnmadd.h f7, f26, f23, f14, rdn # perform operation
fnmadd.h f7, f26, f23, f14, rmm # perform operation
fnmadd.h f7, f26, f23, f14, rne # perform operation
fnmadd.h f7, f26, f23, f14, rtz # perform operation
fnmadd.h f7, f26, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f26, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x4000)
li x25, 0xb7a0c5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0xbfebfd73 # load x3 with value 0xbfebfd73
sw x3, 0(x2) # store 0xbfebfd73 in memory
flh f30, 0(x2) # load 0xbfebfd73 from memory into f30
fnmadd.h f25, f29, f28, f30, dyn # perform operation
fnmadd.h f25, f29, f28, f30, rdn # perform operation
fnmadd.h f25, f29, f28, f30, rmm # perform operation
fnmadd.h f25, f29, f28, f30, rne # perform operation
fnmadd.h f25, f29, f28, f30, rtz # perform operation
fnmadd.h f25, f29, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f29, f28, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc000)
li x1, 0x883d0329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
li x3, 0xd72136e8 # load x3 with value 0xd72136e8
sw x3, 0(x2) # store 0xd72136e8 in memory
flh f8, 0(x2) # load 0xd72136e8 from memory into f8
fnmadd.h f1, f28, f23, f8, dyn # perform operation
fnmadd.h f1, f28, f23, f8, rdn # perform operation
fnmadd.h f1, f28, f23, f8, rmm # perform operation
fnmadd.h f1, f28, f23, f8, rne # perform operation
fnmadd.h f1, f28, f23, f8, rtz # perform operation
fnmadd.h f1, f28, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f28, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f28, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x400)
li x12, 0x5c1497d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x1cef1551 # load x3 with value 0x1cef1551
sw x3, 0(x2) # store 0x1cef1551 in memory
flh f30, 0(x2) # load 0x1cef1551 from memory into f30
fnmadd.h f12, f19, f1, f30, dyn # perform operation
fnmadd.h f12, f19, f1, f30, rdn # perform operation
fnmadd.h f12, f19, f1, f30, rmm # perform operation
fnmadd.h f12, f19, f1, f30, rne # perform operation
fnmadd.h f12, f19, f1, f30, rtz # perform operation
fnmadd.h f12, f19, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8400)
li x29, 0x77adb523 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
li x3, 0x2a101f28 # load x3 with value 0x2a101f28
sw x3, 0(x2) # store 0x2a101f28 in memory
flh f2, 0(x2) # load 0x2a101f28 from memory into f2
fnmadd.h f29, f18, f7, f2, dyn # perform operation
fnmadd.h f29, f18, f7, f2, rdn # perform operation
fnmadd.h f29, f18, f7, f2, rmm # perform operation
fnmadd.h f29, f18, f7, f2, rne # perform operation
fnmadd.h f29, f18, f7, f2, rtz # perform operation
fnmadd.h f29, f18, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7bff)
li x18, 0xebbc84c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0x97fe0c52 # load x3 with value 0x97fe0c52
sw x3, 0(x2) # store 0x97fe0c52 in memory
flh f15, 0(x2) # load 0x97fe0c52 from memory into f15
fnmadd.h f18, f10, f3, f15, dyn # perform operation
fnmadd.h f18, f10, f3, f15, rdn # perform operation
fnmadd.h f18, f10, f3, f15, rmm # perform operation
fnmadd.h f18, f10, f3, f15, rne # perform operation
fnmadd.h f18, f10, f3, f15, rtz # perform operation
fnmadd.h f18, f10, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfbff)
li x8, 0xa127d643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0xfabf3c7f # load x3 with value 0xfabf3c7f
sw x3, 0(x2) # store 0xfabf3c7f in memory
flh f3, 0(x2) # load 0xfabf3c7f from memory into f3
fnmadd.h f8, f30, f25, f3, dyn # perform operation
fnmadd.h f8, f30, f25, f3, rdn # perform operation
fnmadd.h f8, f30, f25, f3, rmm # perform operation
fnmadd.h f8, f30, f25, f3, rne # perform operation
fnmadd.h f8, f30, f25, f3, rtz # perform operation
fnmadd.h f8, f30, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3ff)
li x12, 0x2c48e301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
li x3, 0xf63da57b # load x3 with value 0xf63da57b
sw x3, 0(x2) # store 0xf63da57b in memory
flh f26, 0(x2) # load 0xf63da57b from memory into f26
fnmadd.h f12, f30, f10, f26, dyn # perform operation
fnmadd.h f12, f30, f10, f26, rdn # perform operation
fnmadd.h f12, f30, f10, f26, rmm # perform operation
fnmadd.h f12, f30, f10, f26, rne # perform operation
fnmadd.h f12, f30, f10, f26, rtz # perform operation
fnmadd.h f12, f30, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f30, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x83ff)
li x2, 0x62c66061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0xc805f4d0 # load x3 with value 0xc805f4d0
sw x3, 0(x2) # store 0xc805f4d0 in memory
flh f24, 0(x2) # load 0xc805f4d0 from memory into f24
fnmadd.h f2, f11, f18, f24, dyn # perform operation
fnmadd.h f2, f11, f18, f24, rdn # perform operation
fnmadd.h f2, f11, f18, f24, rmm # perform operation
fnmadd.h f2, f11, f18, f24, rne # perform operation
fnmadd.h f2, f11, f18, f24, rtz # perform operation
fnmadd.h f2, f11, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x200)
li x2, 0x13c4b9e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
li x3, 0x5c5796bf # load x3 with value 0x5c5796bf
sw x3, 0(x2) # store 0x5c5796bf in memory
flh f15, 0(x2) # load 0x5c5796bf from memory into f15
fnmadd.h f2, f30, f10, f15, dyn # perform operation
fnmadd.h f2, f30, f10, f15, rdn # perform operation
fnmadd.h f2, f30, f10, f15, rmm # perform operation
fnmadd.h f2, f30, f10, f15, rne # perform operation
fnmadd.h f2, f30, f10, f15, rtz # perform operation
fnmadd.h f2, f30, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8200)
li x18, 0x93a174e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f4, 0(x2) # load 0x000083ff from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
li x3, 0xa634f541 # load x3 with value 0xa634f541
sw x3, 0(x2) # store 0xa634f541 in memory
flh f20, 0(x2) # load 0xa634f541 from memory into f20
fnmadd.h f18, f4, f13, f20, dyn # perform operation
fnmadd.h f18, f4, f13, f20, rdn # perform operation
fnmadd.h f18, f4, f13, f20, rmm # perform operation
fnmadd.h f18, f4, f13, f20, rne # perform operation
fnmadd.h f18, f4, f13, f20, rtz # perform operation
fnmadd.h f18, f4, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f4, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x1)
li x9, 0x6453903f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x92cd6a13 # load x3 with value 0x92cd6a13
sw x3, 0(x2) # store 0x92cd6a13 in memory
flh f15, 0(x2) # load 0x92cd6a13 from memory into f15
fnmadd.h f9, f16, f17, f15, dyn # perform operation
fnmadd.h f9, f16, f17, f15, rdn # perform operation
fnmadd.h f9, f16, f17, f15, rmm # perform operation
fnmadd.h f9, f16, f17, f15, rne # perform operation
fnmadd.h f9, f16, f17, f15, rtz # perform operation
fnmadd.h f9, f16, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8001)
li x28, 0x065e004c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x3a0357dd # load x3 with value 0x3a0357dd
sw x3, 0(x2) # store 0x3a0357dd in memory
flh f23, 0(x2) # load 0x3a0357dd from memory into f23
fnmadd.h f28, f17, f12, f23, dyn # perform operation
fnmadd.h f28, f17, f12, f23, rdn # perform operation
fnmadd.h f28, f17, f12, f23, rmm # perform operation
fnmadd.h f28, f17, f12, f23, rne # perform operation
fnmadd.h f28, f17, f12, f23, rtz # perform operation
fnmadd.h f28, f17, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c00)
li x22, 0xa7eed9d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0xfade9117 # load x3 with value 0xfade9117
sw x3, 0(x2) # store 0xfade9117 in memory
flh f26, 0(x2) # load 0xfade9117 from memory into f26
fnmadd.h f22, f8, f29, f26, dyn # perform operation
fnmadd.h f22, f8, f29, f26, rdn # perform operation
fnmadd.h f22, f8, f29, f26, rmm # perform operation
fnmadd.h f22, f8, f29, f26, rne # perform operation
fnmadd.h f22, f8, f29, f26, rtz # perform operation
fnmadd.h f22, f8, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f8, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f8, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f8, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f8, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f8, f29, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc00)
li x24, 0x38893f62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
li x3, 0xb912cd10 # load x3 with value 0xb912cd10
sw x3, 0(x2) # store 0xb912cd10 in memory
flh f30, 0(x2) # load 0xb912cd10 from memory into f30
fnmadd.h f24, f18, f13, f30, dyn # perform operation
fnmadd.h f24, f18, f13, f30, rdn # perform operation
fnmadd.h f24, f18, f13, f30, rmm # perform operation
fnmadd.h f24, f18, f13, f30, rne # perform operation
fnmadd.h f24, f18, f13, f30, rtz # perform operation
fnmadd.h f24, f18, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7e00)
li x19, 0xfe3f466a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
li x3, 0x0cef7a0f # load x3 with value 0x0cef7a0f
sw x3, 0(x2) # store 0x0cef7a0f in memory
flh f20, 0(x2) # load 0x0cef7a0f from memory into f20
fnmadd.h f19, f31, f24, f20, dyn # perform operation
fnmadd.h f19, f31, f24, f20, rdn # perform operation
fnmadd.h f19, f31, f24, f20, rmm # perform operation
fnmadd.h f19, f31, f24, f20, rne # perform operation
fnmadd.h f19, f31, f24, f20, rtz # perform operation
fnmadd.h f19, f31, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f31, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7fff)
li x24, 0xdba51267 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
li x3, 0x38598a98 # load x3 with value 0x38598a98
sw x3, 0(x2) # store 0x38598a98 in memory
flh f11, 0(x2) # load 0x38598a98 from memory into f11
fnmadd.h f24, f21, f17, f11, dyn # perform operation
fnmadd.h f24, f21, f17, f11, rdn # perform operation
fnmadd.h f24, f21, f17, f11, rmm # perform operation
fnmadd.h f24, f21, f17, f11, rne # perform operation
fnmadd.h f24, f21, f17, f11, rtz # perform operation
fnmadd.h f24, f21, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c01)
li x26, 0x37b71144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0xabad1b33 # load x3 with value 0xabad1b33
sw x3, 0(x2) # store 0xabad1b33 in memory
flh f7, 0(x2) # load 0xabad1b33 from memory into f7
fnmadd.h f26, f18, f17, f7, dyn # perform operation
fnmadd.h f26, f18, f17, f7, rdn # perform operation
fnmadd.h f26, f18, f17, f7, rmm # perform operation
fnmadd.h f26, f18, f17, f7, rne # perform operation
fnmadd.h f26, f18, f17, f7, rtz # perform operation
fnmadd.h f26, f18, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7dff)
li x3, 0x48c972c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0x07b7539e # load x3 with value 0x07b7539e
sw x3, 0(x2) # store 0x07b7539e in memory
flh f9, 0(x2) # load 0x07b7539e from memory into f9
fnmadd.h f3, f28, f13, f9, dyn # perform operation
fnmadd.h f3, f28, f13, f9, rdn # perform operation
fnmadd.h f3, f28, f13, f9, rmm # perform operation
fnmadd.h f3, f28, f13, f9, rne # perform operation
fnmadd.h f3, f28, f13, f9, rtz # perform operation
fnmadd.h f3, f28, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x58b4)
li x3, 0xb27a6edf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
li x3, 0x10b850b7 # load x3 with value 0x10b850b7
sw x3, 0(x2) # store 0x10b850b7 in memory
flh f17, 0(x2) # load 0x10b850b7 from memory into f17
fnmadd.h f3, f16, f6, f17, dyn # perform operation
fnmadd.h f3, f16, f6, f17, rdn # perform operation
fnmadd.h f3, f16, f6, f17, rmm # perform operation
fnmadd.h f3, f16, f6, f17, rne # perform operation
fnmadd.h f3, f16, f6, f17, rtz # perform operation
fnmadd.h f3, f16, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc93a)
li x27, 0xb5abdef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
li x3, 0x31bf8743 # load x3 with value 0x31bf8743
sw x3, 0(x2) # store 0x31bf8743 in memory
flh f20, 0(x2) # load 0x31bf8743 from memory into f20
fnmadd.h f27, f10, f8, f20, dyn # perform operation
fnmadd.h f27, f10, f8, f20, rdn # perform operation
fnmadd.h f27, f10, f8, f20, rmm # perform operation
fnmadd.h f27, f10, f8, f20, rne # perform operation
fnmadd.h f27, f10, f8, f20, rtz # perform operation
fnmadd.h f27, f10, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f10, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f10, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f10, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f10, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f10, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x0)
li x18, 0x2b630da6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x5be77ba1 # load x3 with value 0x5be77ba1
sw x3, 0(x2) # store 0x5be77ba1 in memory
flh f3, 0(x2) # load 0x5be77ba1 from memory into f3
fnmadd.h f18, f31, f28, f3, dyn # perform operation
fnmadd.h f18, f31, f28, f3, rdn # perform operation
fnmadd.h f18, f31, f28, f3, rmm # perform operation
fnmadd.h f18, f31, f28, f3, rne # perform operation
fnmadd.h f18, f31, f28, f3, rtz # perform operation
fnmadd.h f18, f31, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f31, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8000)
li x30, 0x1dfdd8d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0xe0b8508a # load x3 with value 0xe0b8508a
sw x3, 0(x2) # store 0xe0b8508a in memory
flh f17, 0(x2) # load 0xe0b8508a from memory into f17
fnmadd.h f30, f13, f22, f17, dyn # perform operation
fnmadd.h f30, f13, f22, f17, rdn # perform operation
fnmadd.h f30, f13, f22, f17, rmm # perform operation
fnmadd.h f30, f13, f22, f17, rne # perform operation
fnmadd.h f30, f13, f22, f17, rtz # perform operation
fnmadd.h f30, f13, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3c00)
li x30, 0x8b21ca80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0xba9c2366 # load x3 with value 0xba9c2366
sw x3, 0(x2) # store 0xba9c2366 in memory
flh f7, 0(x2) # load 0xba9c2366 from memory into f7
fnmadd.h f30, f6, f27, f7, dyn # perform operation
fnmadd.h f30, f6, f27, f7, rdn # perform operation
fnmadd.h f30, f6, f27, f7, rmm # perform operation
fnmadd.h f30, f6, f27, f7, rne # perform operation
fnmadd.h f30, f6, f27, f7, rtz # perform operation
fnmadd.h f30, f6, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbc00)
li x23, 0x1d68d183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
li x3, 0x484a88cf # load x3 with value 0x484a88cf
sw x3, 0(x2) # store 0x484a88cf in memory
flh f1, 0(x2) # load 0x484a88cf from memory into f1
fnmadd.h f23, f6, f9, f1, dyn # perform operation
fnmadd.h f23, f6, f9, f1, rdn # perform operation
fnmadd.h f23, f6, f9, f1, rmm # perform operation
fnmadd.h f23, f6, f9, f1, rne # perform operation
fnmadd.h f23, f6, f9, f1, rtz # perform operation
fnmadd.h f23, f6, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3e00)
li x20, 0xecc0ccc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0x4f2fe520 # load x3 with value 0x4f2fe520
sw x3, 0(x2) # store 0x4f2fe520 in memory
flh f25, 0(x2) # load 0x4f2fe520 from memory into f25
fnmadd.h f20, f1, f18, f25, dyn # perform operation
fnmadd.h f20, f1, f18, f25, rdn # perform operation
fnmadd.h f20, f1, f18, f25, rmm # perform operation
fnmadd.h f20, f1, f18, f25, rne # perform operation
fnmadd.h f20, f1, f18, f25, rtz # perform operation
fnmadd.h f20, f1, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbe00)
li x1, 0xca87e3ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
li x3, 0x0d9bca55 # load x3 with value 0x0d9bca55
sw x3, 0(x2) # store 0x0d9bca55 in memory
flh f18, 0(x2) # load 0x0d9bca55 from memory into f18
fnmadd.h f1, f16, f25, f18, dyn # perform operation
fnmadd.h f1, f16, f25, f18, rdn # perform operation
fnmadd.h f1, f16, f25, f18, rmm # perform operation
fnmadd.h f1, f16, f25, f18, rne # perform operation
fnmadd.h f1, f16, f25, f18, rtz # perform operation
fnmadd.h f1, f16, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f16, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x4000)
li x4, 0xbbe8ff79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0xfc8f6611 # load x3 with value 0xfc8f6611
sw x3, 0(x2) # store 0xfc8f6611 in memory
flh f21, 0(x2) # load 0xfc8f6611 from memory into f21
fnmadd.h f4, f6, f12, f21, dyn # perform operation
fnmadd.h f4, f6, f12, f21, rdn # perform operation
fnmadd.h f4, f6, f12, f21, rmm # perform operation
fnmadd.h f4, f6, f12, f21, rne # perform operation
fnmadd.h f4, f6, f12, f21, rtz # perform operation
fnmadd.h f4, f6, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f6, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc000)
li x26, 0x02db21ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0x6323f1c5 # load x3 with value 0x6323f1c5
sw x3, 0(x2) # store 0x6323f1c5 in memory
flh f27, 0(x2) # load 0x6323f1c5 from memory into f27
fnmadd.h f26, f25, f17, f27, dyn # perform operation
fnmadd.h f26, f25, f17, f27, rdn # perform operation
fnmadd.h f26, f25, f17, f27, rmm # perform operation
fnmadd.h f26, f25, f17, f27, rne # perform operation
fnmadd.h f26, f25, f17, f27, rtz # perform operation
fnmadd.h f26, f25, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x400)
li x23, 0xf61af5d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x5fe61a08 # load x3 with value 0x5fe61a08
sw x3, 0(x2) # store 0x5fe61a08 in memory
flh f15, 0(x2) # load 0x5fe61a08 from memory into f15
fnmadd.h f23, f9, f21, f15, dyn # perform operation
fnmadd.h f23, f9, f21, f15, rdn # perform operation
fnmadd.h f23, f9, f21, f15, rmm # perform operation
fnmadd.h f23, f9, f21, f15, rne # perform operation
fnmadd.h f23, f9, f21, f15, rtz # perform operation
fnmadd.h f23, f9, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8400)
li x1, 0x0e0d80f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x2d2d94fc # load x3 with value 0x2d2d94fc
sw x3, 0(x2) # store 0x2d2d94fc in memory
flh f5, 0(x2) # load 0x2d2d94fc from memory into f5
fnmadd.h f1, f28, f13, f5, dyn # perform operation
fnmadd.h f1, f28, f13, f5, rdn # perform operation
fnmadd.h f1, f28, f13, f5, rmm # perform operation
fnmadd.h f1, f28, f13, f5, rne # perform operation
fnmadd.h f1, f28, f13, f5, rtz # perform operation
fnmadd.h f1, f28, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f28, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7bff)
li x1, 0x978984ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
li x3, 0x52fdf3a1 # load x3 with value 0x52fdf3a1
sw x3, 0(x2) # store 0x52fdf3a1 in memory
flh f15, 0(x2) # load 0x52fdf3a1 from memory into f15
fnmadd.h f1, f26, f14, f15, dyn # perform operation
fnmadd.h f1, f26, f14, f15, rdn # perform operation
fnmadd.h f1, f26, f14, f15, rmm # perform operation
fnmadd.h f1, f26, f14, f15, rne # perform operation
fnmadd.h f1, f26, f14, f15, rtz # perform operation
fnmadd.h f1, f26, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfbff)
li x22, 0x4103a87d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x1b14b093 # load x3 with value 0x1b14b093
sw x3, 0(x2) # store 0x1b14b093 in memory
flh f23, 0(x2) # load 0x1b14b093 from memory into f23
fnmadd.h f22, f29, f12, f23, dyn # perform operation
fnmadd.h f22, f29, f12, f23, rdn # perform operation
fnmadd.h f22, f29, f12, f23, rmm # perform operation
fnmadd.h f22, f29, f12, f23, rne # perform operation
fnmadd.h f22, f29, f12, f23, rtz # perform operation
fnmadd.h f22, f29, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f29, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3ff)
li x4, 0xa67e3f53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
li x3, 0x4fc52216 # load x3 with value 0x4fc52216
sw x3, 0(x2) # store 0x4fc52216 in memory
flh f17, 0(x2) # load 0x4fc52216 from memory into f17
fnmadd.h f4, f16, f31, f17, dyn # perform operation
fnmadd.h f4, f16, f31, f17, rdn # perform operation
fnmadd.h f4, f16, f31, f17, rmm # perform operation
fnmadd.h f4, f16, f31, f17, rne # perform operation
fnmadd.h f4, f16, f31, f17, rtz # perform operation
fnmadd.h f4, f16, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f16, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f16, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f16, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f16, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f16, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x83ff)
li x27, 0x935b60f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0xcbb564e7 # load x3 with value 0xcbb564e7
sw x3, 0(x2) # store 0xcbb564e7 in memory
flh f21, 0(x2) # load 0xcbb564e7 from memory into f21
fnmadd.h f27, f25, f18, f21, dyn # perform operation
fnmadd.h f27, f25, f18, f21, rdn # perform operation
fnmadd.h f27, f25, f18, f21, rmm # perform operation
fnmadd.h f27, f25, f18, f21, rne # perform operation
fnmadd.h f27, f25, f18, f21, rtz # perform operation
fnmadd.h f27, f25, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x200)
li x22, 0x70828f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
li x3, 0xe9b20c7c # load x3 with value 0xe9b20c7c
sw x3, 0(x2) # store 0xe9b20c7c in memory
flh f4, 0(x2) # load 0xe9b20c7c from memory into f4
fnmadd.h f22, f25, f20, f4, dyn # perform operation
fnmadd.h f22, f25, f20, f4, rdn # perform operation
fnmadd.h f22, f25, f20, f4, rmm # perform operation
fnmadd.h f22, f25, f20, f4, rne # perform operation
fnmadd.h f22, f25, f20, f4, rtz # perform operation
fnmadd.h f22, f25, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8200)
li x30, 0x9599ba8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0xf94374c9 # load x3 with value 0xf94374c9
sw x3, 0(x2) # store 0xf94374c9 in memory
flh f29, 0(x2) # load 0xf94374c9 from memory into f29
fnmadd.h f30, f1, f16, f29, dyn # perform operation
fnmadd.h f30, f1, f16, f29, rdn # perform operation
fnmadd.h f30, f1, f16, f29, rmm # perform operation
fnmadd.h f30, f1, f16, f29, rne # perform operation
fnmadd.h f30, f1, f16, f29, rtz # perform operation
fnmadd.h f30, f1, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x1)
li x23, 0x3b51ef46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xb52ff436 # load x3 with value 0xb52ff436
sw x3, 0(x2) # store 0xb52ff436 in memory
flh f12, 0(x2) # load 0xb52ff436 from memory into f12
fnmadd.h f23, f13, f15, f12, dyn # perform operation
fnmadd.h f23, f13, f15, f12, rdn # perform operation
fnmadd.h f23, f13, f15, f12, rmm # perform operation
fnmadd.h f23, f13, f15, f12, rne # perform operation
fnmadd.h f23, f13, f15, f12, rtz # perform operation
fnmadd.h f23, f13, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8001)
li x15, 0x3c235131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x497b113b # load x3 with value 0x497b113b
sw x3, 0(x2) # store 0x497b113b in memory
flh f16, 0(x2) # load 0x497b113b from memory into f16
fnmadd.h f15, f28, f17, f16, dyn # perform operation
fnmadd.h f15, f28, f17, f16, rdn # perform operation
fnmadd.h f15, f28, f17, f16, rmm # perform operation
fnmadd.h f15, f28, f17, f16, rne # perform operation
fnmadd.h f15, f28, f17, f16, rtz # perform operation
fnmadd.h f15, f28, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c00)
li x12, 0x61a01f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
li x3, 0x2b34a3bc # load x3 with value 0x2b34a3bc
sw x3, 0(x2) # store 0x2b34a3bc in memory
flh f26, 0(x2) # load 0x2b34a3bc from memory into f26
fnmadd.h f12, f1, f18, f26, dyn # perform operation
fnmadd.h f12, f1, f18, f26, rdn # perform operation
fnmadd.h f12, f1, f18, f26, rmm # perform operation
fnmadd.h f12, f1, f18, f26, rne # perform operation
fnmadd.h f12, f1, f18, f26, rtz # perform operation
fnmadd.h f12, f1, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f1, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc00)
li x14, 0x81c69e15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
li x3, 0x988b6f29 # load x3 with value 0x988b6f29
sw x3, 0(x2) # store 0x988b6f29 in memory
flh f29, 0(x2) # load 0x988b6f29 from memory into f29
fnmadd.h f14, f24, f31, f29, dyn # perform operation
fnmadd.h f14, f24, f31, f29, rdn # perform operation
fnmadd.h f14, f24, f31, f29, rmm # perform operation
fnmadd.h f14, f24, f31, f29, rne # perform operation
fnmadd.h f14, f24, f31, f29, rtz # perform operation
fnmadd.h f14, f24, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f24, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7e00)
li x26, 0xc7ec6210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0x42bfbcbb # load x3 with value 0x42bfbcbb
sw x3, 0(x2) # store 0x42bfbcbb in memory
flh f3, 0(x2) # load 0x42bfbcbb from memory into f3
fnmadd.h f26, f21, f12, f3, dyn # perform operation
fnmadd.h f26, f21, f12, f3, rdn # perform operation
fnmadd.h f26, f21, f12, f3, rmm # perform operation
fnmadd.h f26, f21, f12, f3, rne # perform operation
fnmadd.h f26, f21, f12, f3, rtz # perform operation
fnmadd.h f26, f21, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f21, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f21, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f21, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f21, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f21, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7fff)
li x14, 0x7b237c72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
li x3, 0xf6b4f48a # load x3 with value 0xf6b4f48a
sw x3, 0(x2) # store 0xf6b4f48a in memory
flh f24, 0(x2) # load 0xf6b4f48a from memory into f24
fnmadd.h f14, f15, f19, f24, dyn # perform operation
fnmadd.h f14, f15, f19, f24, rdn # perform operation
fnmadd.h f14, f15, f19, f24, rmm # perform operation
fnmadd.h f14, f15, f19, f24, rne # perform operation
fnmadd.h f14, f15, f19, f24, rtz # perform operation
fnmadd.h f14, f15, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c01)
li x12, 0xa062b172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
li x3, 0xb2bbaf19 # load x3 with value 0xb2bbaf19
sw x3, 0(x2) # store 0xb2bbaf19 in memory
flh f5, 0(x2) # load 0xb2bbaf19 from memory into f5
fnmadd.h f12, f29, f28, f5, dyn # perform operation
fnmadd.h f12, f29, f28, f5, rdn # perform operation
fnmadd.h f12, f29, f28, f5, rmm # perform operation
fnmadd.h f12, f29, f28, f5, rne # perform operation
fnmadd.h f12, f29, f28, f5, rtz # perform operation
fnmadd.h f12, f29, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7dff)
li x3, 0xf9a78317 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0x3b301eb2 # load x3 with value 0x3b301eb2
sw x3, 0(x2) # store 0x3b301eb2 in memory
flh f2, 0(x2) # load 0x3b301eb2 from memory into f2
fnmadd.h f3, f27, f19, f2, dyn # perform operation
fnmadd.h f3, f27, f19, f2, rdn # perform operation
fnmadd.h f3, f27, f19, f2, rmm # perform operation
fnmadd.h f3, f27, f19, f2, rne # perform operation
fnmadd.h f3, f27, f19, f2, rtz # perform operation
fnmadd.h f3, f27, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x58b4)
li x30, 0x6acb82cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0xa3ffd62f # load x3 with value 0xa3ffd62f
sw x3, 0(x2) # store 0xa3ffd62f in memory
flh f2, 0(x2) # load 0xa3ffd62f from memory into f2
fnmadd.h f30, f15, f13, f2, dyn # perform operation
fnmadd.h f30, f15, f13, f2, rdn # perform operation
fnmadd.h f30, f15, f13, f2, rmm # perform operation
fnmadd.h f30, f15, f13, f2, rne # perform operation
fnmadd.h f30, f15, f13, f2, rtz # perform operation
fnmadd.h f30, f15, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc93a)
li x2, 0x600afc16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
li x3, 0x63862245 # load x3 with value 0x63862245
sw x3, 0(x2) # store 0x63862245 in memory
flh f31, 0(x2) # load 0x63862245 from memory into f31
fnmadd.h f2, f30, f19, f31, dyn # perform operation
fnmadd.h f2, f30, f19, f31, rdn # perform operation
fnmadd.h f2, f30, f19, f31, rmm # perform operation
fnmadd.h f2, f30, f19, f31, rne # perform operation
fnmadd.h f2, f30, f19, f31, rtz # perform operation
fnmadd.h f2, f30, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x0)
li x23, 0xa60bef94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x6d265998 # load x3 with value 0x6d265998
sw x3, 0(x2) # store 0x6d265998 in memory
flh f12, 0(x2) # load 0x6d265998 from memory into f12
fnmadd.h f23, f14, f20, f12, dyn # perform operation
fnmadd.h f23, f14, f20, f12, rdn # perform operation
fnmadd.h f23, f14, f20, f12, rmm # perform operation
fnmadd.h f23, f14, f20, f12, rne # perform operation
fnmadd.h f23, f14, f20, f12, rtz # perform operation
fnmadd.h f23, f14, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8000)
li x4, 0xffc0eae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
li x3, 0xc147c032 # load x3 with value 0xc147c032
sw x3, 0(x2) # store 0xc147c032 in memory
flh f27, 0(x2) # load 0xc147c032 from memory into f27
fnmadd.h f4, f26, f21, f27, dyn # perform operation
fnmadd.h f4, f26, f21, f27, rdn # perform operation
fnmadd.h f4, f26, f21, f27, rmm # perform operation
fnmadd.h f4, f26, f21, f27, rne # perform operation
fnmadd.h f4, f26, f21, f27, rtz # perform operation
fnmadd.h f4, f26, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f26, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3c00)
li x18, 0xe0d331f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
li x3, 0xe95530a8 # load x3 with value 0xe95530a8
sw x3, 0(x2) # store 0xe95530a8 in memory
flh f20, 0(x2) # load 0xe95530a8 from memory into f20
fnmadd.h f18, f19, f23, f20, dyn # perform operation
fnmadd.h f18, f19, f23, f20, rdn # perform operation
fnmadd.h f18, f19, f23, f20, rmm # perform operation
fnmadd.h f18, f19, f23, f20, rne # perform operation
fnmadd.h f18, f19, f23, f20, rtz # perform operation
fnmadd.h f18, f19, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbc00)
li x20, 0x70e49803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
li x3, 0x630e1334 # load x3 with value 0x630e1334
sw x3, 0(x2) # store 0x630e1334 in memory
flh f11, 0(x2) # load 0x630e1334 from memory into f11
fnmadd.h f20, f29, f22, f11, dyn # perform operation
fnmadd.h f20, f29, f22, f11, rdn # perform operation
fnmadd.h f20, f29, f22, f11, rmm # perform operation
fnmadd.h f20, f29, f22, f11, rne # perform operation
fnmadd.h f20, f29, f22, f11, rtz # perform operation
fnmadd.h f20, f29, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f29, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f29, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f29, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f29, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f29, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3e00)
li x5, 0x82f4a431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x878dec1b # load x3 with value 0x878dec1b
sw x3, 0(x2) # store 0x878dec1b in memory
flh f17, 0(x2) # load 0x878dec1b from memory into f17
fnmadd.h f5, f8, f2, f17, dyn # perform operation
fnmadd.h f5, f8, f2, f17, rdn # perform operation
fnmadd.h f5, f8, f2, f17, rmm # perform operation
fnmadd.h f5, f8, f2, f17, rne # perform operation
fnmadd.h f5, f8, f2, f17, rtz # perform operation
fnmadd.h f5, f8, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbe00)
li x22, 0xd7dd1048 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f4, 0(x2) # load 0x0000be00 from memory into f4
li x3, 0x4a5953a2 # load x3 with value 0x4a5953a2
sw x3, 0(x2) # store 0x4a5953a2 in memory
flh f6, 0(x2) # load 0x4a5953a2 from memory into f6
fnmadd.h f22, f18, f4, f6, dyn # perform operation
fnmadd.h f22, f18, f4, f6, rdn # perform operation
fnmadd.h f22, f18, f4, f6, rmm # perform operation
fnmadd.h f22, f18, f4, f6, rne # perform operation
fnmadd.h f22, f18, f4, f6, rtz # perform operation
fnmadd.h f22, f18, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x4000)
li x12, 0x814a8437 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x53ca570e # load x3 with value 0x53ca570e
sw x3, 0(x2) # store 0x53ca570e in memory
flh f21, 0(x2) # load 0x53ca570e from memory into f21
fnmadd.h f12, f6, f25, f21, dyn # perform operation
fnmadd.h f12, f6, f25, f21, rdn # perform operation
fnmadd.h f12, f6, f25, f21, rmm # perform operation
fnmadd.h f12, f6, f25, f21, rne # perform operation
fnmadd.h f12, f6, f25, f21, rtz # perform operation
fnmadd.h f12, f6, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc000)
li x6, 0x77448b64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0xf5d1a855 # load x3 with value 0xf5d1a855
sw x3, 0(x2) # store 0xf5d1a855 in memory
flh f15, 0(x2) # load 0xf5d1a855 from memory into f15
fnmadd.h f6, f18, f29, f15, dyn # perform operation
fnmadd.h f6, f18, f29, f15, rdn # perform operation
fnmadd.h f6, f18, f29, f15, rmm # perform operation
fnmadd.h f6, f18, f29, f15, rne # perform operation
fnmadd.h f6, f18, f29, f15, rtz # perform operation
fnmadd.h f6, f18, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x400)
li x23, 0xa5fc6332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0x563d36aa # load x3 with value 0x563d36aa
sw x3, 0(x2) # store 0x563d36aa in memory
flh f21, 0(x2) # load 0x563d36aa from memory into f21
fnmadd.h f23, f17, f6, f21, dyn # perform operation
fnmadd.h f23, f17, f6, f21, rdn # perform operation
fnmadd.h f23, f17, f6, f21, rmm # perform operation
fnmadd.h f23, f17, f6, f21, rne # perform operation
fnmadd.h f23, f17, f6, f21, rtz # perform operation
fnmadd.h f23, f17, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8400)
li x8, 0x3b295da8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0xa6a8becd # load x3 with value 0xa6a8becd
sw x3, 0(x2) # store 0xa6a8becd in memory
flh f1, 0(x2) # load 0xa6a8becd from memory into f1
fnmadd.h f8, f13, f15, f1, dyn # perform operation
fnmadd.h f8, f13, f15, f1, rdn # perform operation
fnmadd.h f8, f13, f15, f1, rmm # perform operation
fnmadd.h f8, f13, f15, f1, rne # perform operation
fnmadd.h f8, f13, f15, f1, rtz # perform operation
fnmadd.h f8, f13, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7bff)
li x25, 0x738f3d94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0x024821e0 # load x3 with value 0x024821e0
sw x3, 0(x2) # store 0x024821e0 in memory
flh f13, 0(x2) # load 0x024821e0 from memory into f13
fnmadd.h f25, f7, f3, f13, dyn # perform operation
fnmadd.h f25, f7, f3, f13, rdn # perform operation
fnmadd.h f25, f7, f3, f13, rmm # perform operation
fnmadd.h f25, f7, f3, f13, rne # perform operation
fnmadd.h f25, f7, f3, f13, rtz # perform operation
fnmadd.h f25, f7, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfbff)
li x14, 0x9a290fb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x97c374a1 # load x3 with value 0x97c374a1
sw x3, 0(x2) # store 0x97c374a1 in memory
flh f12, 0(x2) # load 0x97c374a1 from memory into f12
fnmadd.h f14, f29, f15, f12, dyn # perform operation
fnmadd.h f14, f29, f15, f12, rdn # perform operation
fnmadd.h f14, f29, f15, f12, rmm # perform operation
fnmadd.h f14, f29, f15, f12, rne # perform operation
fnmadd.h f14, f29, f15, f12, rtz # perform operation
fnmadd.h f14, f29, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3ff)
li x28, 0xd8ae7dfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
li x3, 0x36fcfd82 # load x3 with value 0x36fcfd82
sw x3, 0(x2) # store 0x36fcfd82 in memory
flh f30, 0(x2) # load 0x36fcfd82 from memory into f30
fnmadd.h f28, f26, f14, f30, dyn # perform operation
fnmadd.h f28, f26, f14, f30, rdn # perform operation
fnmadd.h f28, f26, f14, f30, rmm # perform operation
fnmadd.h f28, f26, f14, f30, rne # perform operation
fnmadd.h f28, f26, f14, f30, rtz # perform operation
fnmadd.h f28, f26, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x83ff)
li x25, 0x63019979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0xf494f938 # load x3 with value 0xf494f938
sw x3, 0(x2) # store 0xf494f938 in memory
flh f31, 0(x2) # load 0xf494f938 from memory into f31
fnmadd.h f25, f15, f20, f31, dyn # perform operation
fnmadd.h f25, f15, f20, f31, rdn # perform operation
fnmadd.h f25, f15, f20, f31, rmm # perform operation
fnmadd.h f25, f15, f20, f31, rne # perform operation
fnmadd.h f25, f15, f20, f31, rtz # perform operation
fnmadd.h f25, f15, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x200)
li x26, 0x99959fc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x6084db79 # load x3 with value 0x6084db79
sw x3, 0(x2) # store 0x6084db79 in memory
flh f21, 0(x2) # load 0x6084db79 from memory into f21
fnmadd.h f26, f18, f27, f21, dyn # perform operation
fnmadd.h f26, f18, f27, f21, rdn # perform operation
fnmadd.h f26, f18, f27, f21, rmm # perform operation
fnmadd.h f26, f18, f27, f21, rne # perform operation
fnmadd.h f26, f18, f27, f21, rtz # perform operation
fnmadd.h f26, f18, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8200)
li x26, 0xbe213e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x24bd9a4a # load x3 with value 0x24bd9a4a
sw x3, 0(x2) # store 0x24bd9a4a in memory
flh f3, 0(x2) # load 0x24bd9a4a from memory into f3
fnmadd.h f26, f25, f6, f3, dyn # perform operation
fnmadd.h f26, f25, f6, f3, rdn # perform operation
fnmadd.h f26, f25, f6, f3, rmm # perform operation
fnmadd.h f26, f25, f6, f3, rne # perform operation
fnmadd.h f26, f25, f6, f3, rtz # perform operation
fnmadd.h f26, f25, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x1)
li x14, 0x1bc75291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xdb9f77b9 # load x3 with value 0xdb9f77b9
sw x3, 0(x2) # store 0xdb9f77b9 in memory
flh f31, 0(x2) # load 0xdb9f77b9 from memory into f31
fnmadd.h f14, f21, f17, f31, dyn # perform operation
fnmadd.h f14, f21, f17, f31, rdn # perform operation
fnmadd.h f14, f21, f17, f31, rmm # perform operation
fnmadd.h f14, f21, f17, f31, rne # perform operation
fnmadd.h f14, f21, f17, f31, rtz # perform operation
fnmadd.h f14, f21, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8001)
li x28, 0x5c3eaf2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
li x3, 0xe6edde01 # load x3 with value 0xe6edde01
sw x3, 0(x2) # store 0xe6edde01 in memory
flh f22, 0(x2) # load 0xe6edde01 from memory into f22
fnmadd.h f28, f1, f6, f22, dyn # perform operation
fnmadd.h f28, f1, f6, f22, rdn # perform operation
fnmadd.h f28, f1, f6, f22, rmm # perform operation
fnmadd.h f28, f1, f6, f22, rne # perform operation
fnmadd.h f28, f1, f6, f22, rtz # perform operation
fnmadd.h f28, f1, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f1, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f1, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f1, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f1, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f1, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c00)
li x22, 0xfa9d28be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
li x3, 0x3d35ede4 # load x3 with value 0x3d35ede4
sw x3, 0(x2) # store 0x3d35ede4 in memory
flh f2, 0(x2) # load 0x3d35ede4 from memory into f2
fnmadd.h f22, f5, f28, f2, dyn # perform operation
fnmadd.h f22, f5, f28, f2, rdn # perform operation
fnmadd.h f22, f5, f28, f2, rmm # perform operation
fnmadd.h f22, f5, f28, f2, rne # perform operation
fnmadd.h f22, f5, f28, f2, rtz # perform operation
fnmadd.h f22, f5, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc00)
li x17, 0x7d50f892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0x6c0c1111 # load x3 with value 0x6c0c1111
sw x3, 0(x2) # store 0x6c0c1111 in memory
flh f29, 0(x2) # load 0x6c0c1111 from memory into f29
fnmadd.h f17, f21, f24, f29, dyn # perform operation
fnmadd.h f17, f21, f24, f29, rdn # perform operation
fnmadd.h f17, f21, f24, f29, rmm # perform operation
fnmadd.h f17, f21, f24, f29, rne # perform operation
fnmadd.h f17, f21, f24, f29, rtz # perform operation
fnmadd.h f17, f21, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7e00)
li x3, 0x5fa0f25e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0xe570de70 # load x3 with value 0xe570de70
sw x3, 0(x2) # store 0xe570de70 in memory
flh f5, 0(x2) # load 0xe570de70 from memory into f5
fnmadd.h f3, f12, f18, f5, dyn # perform operation
fnmadd.h f3, f12, f18, f5, rdn # perform operation
fnmadd.h f3, f12, f18, f5, rmm # perform operation
fnmadd.h f3, f12, f18, f5, rne # perform operation
fnmadd.h f3, f12, f18, f5, rtz # perform operation
fnmadd.h f3, f12, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7fff)
li x15, 0xb5cf5d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f4, 0(x2) # load 0x00008200 from memory into f4
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x39d95625 # load x3 with value 0x39d95625
sw x3, 0(x2) # store 0x39d95625 in memory
flh f20, 0(x2) # load 0x39d95625 from memory into f20
fnmadd.h f15, f4, f5, f20, dyn # perform operation
fnmadd.h f15, f4, f5, f20, rdn # perform operation
fnmadd.h f15, f4, f5, f20, rmm # perform operation
fnmadd.h f15, f4, f5, f20, rne # perform operation
fnmadd.h f15, f4, f5, f20, rtz # perform operation
fnmadd.h f15, f4, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f4, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c01)
li x2, 0x9160b556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
li x3, 0x8126f851 # load x3 with value 0x8126f851
sw x3, 0(x2) # store 0x8126f851 in memory
flh f31, 0(x2) # load 0x8126f851 from memory into f31
fnmadd.h f2, f28, f25, f31, dyn # perform operation
fnmadd.h f2, f28, f25, f31, rdn # perform operation
fnmadd.h f2, f28, f25, f31, rmm # perform operation
fnmadd.h f2, f28, f25, f31, rne # perform operation
fnmadd.h f2, f28, f25, f31, rtz # perform operation
fnmadd.h f2, f28, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7dff)
li x16, 0x9b2e8922 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0x62af0ddb # load x3 with value 0x62af0ddb
sw x3, 0(x2) # store 0x62af0ddb in memory
flh f30, 0(x2) # load 0x62af0ddb from memory into f30
fnmadd.h f16, f28, f19, f30, dyn # perform operation
fnmadd.h f16, f28, f19, f30, rdn # perform operation
fnmadd.h f16, f28, f19, f30, rmm # perform operation
fnmadd.h f16, f28, f19, f30, rne # perform operation
fnmadd.h f16, f28, f19, f30, rtz # perform operation
fnmadd.h f16, f28, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x58b4)
li x4, 0x5804d959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0xe470f4a0 # load x3 with value 0xe470f4a0
sw x3, 0(x2) # store 0xe470f4a0 in memory
flh f31, 0(x2) # load 0xe470f4a0 from memory into f31
fnmadd.h f4, f29, f20, f31, dyn # perform operation
fnmadd.h f4, f29, f20, f31, rdn # perform operation
fnmadd.h f4, f29, f20, f31, rmm # perform operation
fnmadd.h f4, f29, f20, f31, rne # perform operation
fnmadd.h f4, f29, f20, f31, rtz # perform operation
fnmadd.h f4, f29, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc93a)
li x7, 0x6c7e7b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x249cb40d # load x3 with value 0x249cb40d
sw x3, 0(x2) # store 0x249cb40d in memory
flh f10, 0(x2) # load 0x249cb40d from memory into f10
fnmadd.h f7, f19, f3, f10, dyn # perform operation
fnmadd.h f7, f19, f3, f10, rdn # perform operation
fnmadd.h f7, f19, f3, f10, rmm # perform operation
fnmadd.h f7, f19, f3, f10, rne # perform operation
fnmadd.h f7, f19, f3, f10, rtz # perform operation
fnmadd.h f7, f19, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x14, 0x88994fbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xaa821171 # load x3 with value 0xaa821171
sw x3, 0(x2) # store 0xaa821171 in memory
flh f13, 0(x2) # load 0xaa821171 from memory into f13
fnmadd.h f14, f20, f1, f13, dyn # perform operation
fnmadd.h f14, f20, f1, f13, rdn # perform operation
fnmadd.h f14, f20, f1, f13, rmm # perform operation
fnmadd.h f14, f20, f1, f13, rne # perform operation
fnmadd.h f14, f20, f1, f13, rtz # perform operation
fnmadd.h f14, f20, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000)
li x20, 0x78fd2213 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
li x3, 0xc7d4a357 # load x3 with value 0xc7d4a357
sw x3, 0(x2) # store 0xc7d4a357 in memory
flh f6, 0(x2) # load 0xc7d4a357 from memory into f6
fnmadd.h f20, f22, f24, f6, dyn # perform operation
fnmadd.h f20, f22, f24, f6, rdn # perform operation
fnmadd.h f20, f22, f24, f6, rmm # perform operation
fnmadd.h f20, f22, f24, f6, rne # perform operation
fnmadd.h f20, f22, f24, f6, rtz # perform operation
fnmadd.h f20, f22, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3c00)
li x6, 0x6fea3cd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
li x3, 0xc602a4db # load x3 with value 0xc602a4db
sw x3, 0(x2) # store 0xc602a4db in memory
flh f26, 0(x2) # load 0xc602a4db from memory into f26
fnmadd.h f6, f4, f10, f26, dyn # perform operation
fnmadd.h f6, f4, f10, f26, rdn # perform operation
fnmadd.h f6, f4, f10, f26, rmm # perform operation
fnmadd.h f6, f4, f10, f26, rne # perform operation
fnmadd.h f6, f4, f10, f26, rtz # perform operation
fnmadd.h f6, f4, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f4, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbc00)
li x18, 0x75a97d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
li x3, 0x57095368 # load x3 with value 0x57095368
sw x3, 0(x2) # store 0x57095368 in memory
flh f17, 0(x2) # load 0x57095368 from memory into f17
fnmadd.h f18, f27, f10, f17, dyn # perform operation
fnmadd.h f18, f27, f10, f17, rdn # perform operation
fnmadd.h f18, f27, f10, f17, rmm # perform operation
fnmadd.h f18, f27, f10, f17, rne # perform operation
fnmadd.h f18, f27, f10, f17, rtz # perform operation
fnmadd.h f18, f27, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3e00)
li x2, 0x2feb3400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
li x3, 0xb4135460 # load x3 with value 0xb4135460
sw x3, 0(x2) # store 0xb4135460 in memory
flh f13, 0(x2) # load 0xb4135460 from memory into f13
fnmadd.h f2, f23, f21, f13, dyn # perform operation
fnmadd.h f2, f23, f21, f13, rdn # perform operation
fnmadd.h f2, f23, f21, f13, rmm # perform operation
fnmadd.h f2, f23, f21, f13, rne # perform operation
fnmadd.h f2, f23, f21, f13, rtz # perform operation
fnmadd.h f2, f23, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f23, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f23, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f23, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f23, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f23, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbe00)
li x4, 0xa63f1e0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
li x3, 0x815d2f76 # load x3 with value 0x815d2f76
sw x3, 0(x2) # store 0x815d2f76 in memory
flh f5, 0(x2) # load 0x815d2f76 from memory into f5
fnmadd.h f4, f3, f26, f5, dyn # perform operation
fnmadd.h f4, f3, f26, f5, rdn # perform operation
fnmadd.h f4, f3, f26, f5, rmm # perform operation
fnmadd.h f4, f3, f26, f5, rne # perform operation
fnmadd.h f4, f3, f26, f5, rtz # perform operation
fnmadd.h f4, f3, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000)
li x15, 0x33730102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
li x3, 0x16741b61 # load x3 with value 0x16741b61
sw x3, 0(x2) # store 0x16741b61 in memory
flh f17, 0(x2) # load 0x16741b61 from memory into f17
fnmadd.h f15, f10, f1, f17, dyn # perform operation
fnmadd.h f15, f10, f1, f17, rdn # perform operation
fnmadd.h f15, f10, f1, f17, rmm # perform operation
fnmadd.h f15, f10, f1, f17, rne # perform operation
fnmadd.h f15, f10, f1, f17, rtz # perform operation
fnmadd.h f15, f10, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f10, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000)
li x13, 0xcf3c71d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0xfd7eb5e7 # load x3 with value 0xfd7eb5e7
sw x3, 0(x2) # store 0xfd7eb5e7 in memory
flh f8, 0(x2) # load 0xfd7eb5e7 from memory into f8
fnmadd.h f13, f19, f6, f8, dyn # perform operation
fnmadd.h f13, f19, f6, f8, rdn # perform operation
fnmadd.h f13, f19, f6, f8, rmm # perform operation
fnmadd.h f13, f19, f6, f8, rne # perform operation
fnmadd.h f13, f19, f6, f8, rtz # perform operation
fnmadd.h f13, f19, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400)
li x4, 0x99894999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
li x3, 0x4703575b # load x3 with value 0x4703575b
sw x3, 0(x2) # store 0x4703575b in memory
flh f18, 0(x2) # load 0x4703575b from memory into f18
fnmadd.h f4, f27, f28, f18, dyn # perform operation
fnmadd.h f4, f27, f28, f18, rdn # perform operation
fnmadd.h f4, f27, f28, f18, rmm # perform operation
fnmadd.h f4, f27, f28, f18, rne # perform operation
fnmadd.h f4, f27, f28, f18, rtz # perform operation
fnmadd.h f4, f27, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8400)
li x16, 0x7e15ec37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x631e8126 # load x3 with value 0x631e8126
sw x3, 0(x2) # store 0x631e8126 in memory
flh f4, 0(x2) # load 0x631e8126 from memory into f4
fnmadd.h f16, f5, f13, f4, dyn # perform operation
fnmadd.h f16, f5, f13, f4, rdn # perform operation
fnmadd.h f16, f5, f13, f4, rmm # perform operation
fnmadd.h f16, f5, f13, f4, rne # perform operation
fnmadd.h f16, f5, f13, f4, rtz # perform operation
fnmadd.h f16, f5, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7bff)
li x6, 0x607db8f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
li x3, 0x4116c185 # load x3 with value 0x4116c185
sw x3, 0(x2) # store 0x4116c185 in memory
flh f20, 0(x2) # load 0x4116c185 from memory into f20
fnmadd.h f6, f1, f9, f20, dyn # perform operation
fnmadd.h f6, f1, f9, f20, rdn # perform operation
fnmadd.h f6, f1, f9, f20, rmm # perform operation
fnmadd.h f6, f1, f9, f20, rne # perform operation
fnmadd.h f6, f1, f9, f20, rtz # perform operation
fnmadd.h f6, f1, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f1, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f1, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f1, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f1, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f1, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfbff)
li x23, 0x9f6fb8cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0x523cfd55 # load x3 with value 0x523cfd55
sw x3, 0(x2) # store 0x523cfd55 in memory
flh f21, 0(x2) # load 0x523cfd55 from memory into f21
fnmadd.h f23, f29, f11, f21, dyn # perform operation
fnmadd.h f23, f29, f11, f21, rdn # perform operation
fnmadd.h f23, f29, f11, f21, rmm # perform operation
fnmadd.h f23, f29, f11, f21, rne # perform operation
fnmadd.h f23, f29, f11, f21, rtz # perform operation
fnmadd.h f23, f29, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff)
li x6, 0x890811e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x62e4afdb # load x3 with value 0x62e4afdb
sw x3, 0(x2) # store 0x62e4afdb in memory
flh f20, 0(x2) # load 0x62e4afdb from memory into f20
fnmadd.h f6, f5, f1, f20, dyn # perform operation
fnmadd.h f6, f5, f1, f20, rdn # perform operation
fnmadd.h f6, f5, f1, f20, rmm # perform operation
fnmadd.h f6, f5, f1, f20, rne # perform operation
fnmadd.h f6, f5, f1, f20, rtz # perform operation
fnmadd.h f6, f5, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x83ff)
li x5, 0xfaa73223 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
li x3, 0x29f0bfb2 # load x3 with value 0x29f0bfb2
sw x3, 0(x2) # store 0x29f0bfb2 in memory
flh f14, 0(x2) # load 0x29f0bfb2 from memory into f14
fnmadd.h f5, f18, f16, f14, dyn # perform operation
fnmadd.h f5, f18, f16, f14, rdn # perform operation
fnmadd.h f5, f18, f16, f14, rmm # perform operation
fnmadd.h f5, f18, f16, f14, rne # perform operation
fnmadd.h f5, f18, f16, f14, rtz # perform operation
fnmadd.h f5, f18, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f18, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x200)
li x11, 0x427844f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0xc9e486ba # load x3 with value 0xc9e486ba
sw x3, 0(x2) # store 0xc9e486ba in memory
flh f12, 0(x2) # load 0xc9e486ba from memory into f12
fnmadd.h f11, f10, f3, f12, dyn # perform operation
fnmadd.h f11, f10, f3, f12, rdn # perform operation
fnmadd.h f11, f10, f3, f12, rmm # perform operation
fnmadd.h f11, f10, f3, f12, rne # perform operation
fnmadd.h f11, f10, f3, f12, rtz # perform operation
fnmadd.h f11, f10, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f10, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8200)
li x12, 0x00e962b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0x4a932e2e # load x3 with value 0x4a932e2e
sw x3, 0(x2) # store 0x4a932e2e in memory
flh f4, 0(x2) # load 0x4a932e2e from memory into f4
fnmadd.h f12, f16, f14, f4, dyn # perform operation
fnmadd.h f12, f16, f14, f4, rdn # perform operation
fnmadd.h f12, f16, f14, f4, rmm # perform operation
fnmadd.h f12, f16, f14, f4, rne # perform operation
fnmadd.h f12, f16, f14, f4, rtz # perform operation
fnmadd.h f12, f16, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x18, 0x393a2bfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x8564fe50 # load x3 with value 0x8564fe50
sw x3, 0(x2) # store 0x8564fe50 in memory
flh f30, 0(x2) # load 0x8564fe50 from memory into f30
fnmadd.h f18, f6, f5, f30, dyn # perform operation
fnmadd.h f18, f6, f5, f30, rdn # perform operation
fnmadd.h f18, f6, f5, f30, rmm # perform operation
fnmadd.h f18, f6, f5, f30, rne # perform operation
fnmadd.h f18, f6, f5, f30, rtz # perform operation
fnmadd.h f18, f6, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8001)
li x1, 0x8a2ca5fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x163aa3e4 # load x3 with value 0x163aa3e4
sw x3, 0(x2) # store 0x163aa3e4 in memory
flh f20, 0(x2) # load 0x163aa3e4 from memory into f20
fnmadd.h f1, f6, f17, f20, dyn # perform operation
fnmadd.h f1, f6, f17, f20, rdn # perform operation
fnmadd.h f1, f6, f17, f20, rmm # perform operation
fnmadd.h f1, f6, f17, f20, rne # perform operation
fnmadd.h f1, f6, f17, f20, rtz # perform operation
fnmadd.h f1, f6, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c00)
li x23, 0x9585beed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
li x3, 0xa9d46ed8 # load x3 with value 0xa9d46ed8
sw x3, 0(x2) # store 0xa9d46ed8 in memory
flh f5, 0(x2) # load 0xa9d46ed8 from memory into f5
fnmadd.h f23, f12, f26, f5, dyn # perform operation
fnmadd.h f23, f12, f26, f5, rdn # perform operation
fnmadd.h f23, f12, f26, f5, rmm # perform operation
fnmadd.h f23, f12, f26, f5, rne # perform operation
fnmadd.h f23, f12, f26, f5, rtz # perform operation
fnmadd.h f23, f12, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc00)
li x24, 0x0649b754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0x57304435 # load x3 with value 0x57304435
sw x3, 0(x2) # store 0x57304435 in memory
flh f9, 0(x2) # load 0x57304435 from memory into f9
fnmadd.h f24, f19, f12, f9, dyn # perform operation
fnmadd.h f24, f19, f12, f9, rdn # perform operation
fnmadd.h f24, f19, f12, f9, rmm # perform operation
fnmadd.h f24, f19, f12, f9, rne # perform operation
fnmadd.h f24, f19, f12, f9, rtz # perform operation
fnmadd.h f24, f19, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7e00)
li x15, 0x9dee2072 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0xbce50492 # load x3 with value 0xbce50492
sw x3, 0(x2) # store 0xbce50492 in memory
flh f2, 0(x2) # load 0xbce50492 from memory into f2
fnmadd.h f15, f29, f11, f2, dyn # perform operation
fnmadd.h f15, f29, f11, f2, rdn # perform operation
fnmadd.h f15, f29, f11, f2, rmm # perform operation
fnmadd.h f15, f29, f11, f2, rne # perform operation
fnmadd.h f15, f29, f11, f2, rtz # perform operation
fnmadd.h f15, f29, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f29, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f29, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f29, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f29, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f29, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fff)
li x11, 0xe17f02e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x487e7541 # load x3 with value 0x487e7541
sw x3, 0(x2) # store 0x487e7541 in memory
flh f5, 0(x2) # load 0x487e7541 from memory into f5
fnmadd.h f11, f24, f1, f5, dyn # perform operation
fnmadd.h f11, f24, f1, f5, rdn # perform operation
fnmadd.h f11, f24, f1, f5, rmm # perform operation
fnmadd.h f11, f24, f1, f5, rne # perform operation
fnmadd.h f11, f24, f1, f5, rtz # perform operation
fnmadd.h f11, f24, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f24, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c01)
li x16, 0x7f3fce74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
li x3, 0x69c3945b # load x3 with value 0x69c3945b
sw x3, 0(x2) # store 0x69c3945b in memory
flh f15, 0(x2) # load 0x69c3945b from memory into f15
fnmadd.h f16, f12, f10, f15, dyn # perform operation
fnmadd.h f16, f12, f10, f15, rdn # perform operation
fnmadd.h f16, f12, f10, f15, rmm # perform operation
fnmadd.h f16, f12, f10, f15, rne # perform operation
fnmadd.h f16, f12, f10, f15, rtz # perform operation
fnmadd.h f16, f12, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7dff)
li x1, 0xd4630860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x770aa363 # load x3 with value 0x770aa363
sw x3, 0(x2) # store 0x770aa363 in memory
flh f11, 0(x2) # load 0x770aa363 from memory into f11
fnmadd.h f1, f8, f28, f11, dyn # perform operation
fnmadd.h f1, f8, f28, f11, rdn # perform operation
fnmadd.h f1, f8, f28, f11, rmm # perform operation
fnmadd.h f1, f8, f28, f11, rne # perform operation
fnmadd.h f1, f8, f28, f11, rtz # perform operation
fnmadd.h f1, f8, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x58b4)
li x28, 0xd398558c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0x00018513 # load x3 with value 0x00018513
sw x3, 0(x2) # store 0x00018513 in memory
flh f18, 0(x2) # load 0x00018513 from memory into f18
fnmadd.h f28, f10, f5, f18, dyn # perform operation
fnmadd.h f28, f10, f5, f18, rdn # perform operation
fnmadd.h f28, f10, f5, f18, rmm # perform operation
fnmadd.h f28, f10, f5, f18, rne # perform operation
fnmadd.h f28, f10, f5, f18, rtz # perform operation
fnmadd.h f28, f10, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc93a)
li x23, 0x482a9421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0xb8b984f6 # load x3 with value 0xb8b984f6
sw x3, 0(x2) # store 0xb8b984f6 in memory
flh f4, 0(x2) # load 0xb8b984f6 from memory into f4
fnmadd.h f23, f25, f13, f4, dyn # perform operation
fnmadd.h f23, f25, f13, f4, rdn # perform operation
fnmadd.h f23, f25, f13, f4, rmm # perform operation
fnmadd.h f23, f25, f13, f4, rne # perform operation
fnmadd.h f23, f25, f13, f4, rtz # perform operation
fnmadd.h f23, f25, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x0)
li x17, 0xa1e8edd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x7cfabbfb # load x3 with value 0x7cfabbfb
sw x3, 0(x2) # store 0x7cfabbfb in memory
flh f16, 0(x2) # load 0x7cfabbfb from memory into f16
fnmadd.h f17, f29, f25, f16, dyn # perform operation
fnmadd.h f17, f29, f25, f16, rdn # perform operation
fnmadd.h f17, f29, f25, f16, rmm # perform operation
fnmadd.h f17, f29, f25, f16, rne # perform operation
fnmadd.h f17, f29, f25, f16, rtz # perform operation
fnmadd.h f17, f29, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8000)
li x22, 0x96a2ecbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
li x3, 0x24f954f9 # load x3 with value 0x24f954f9
sw x3, 0(x2) # store 0x24f954f9 in memory
flh f28, 0(x2) # load 0x24f954f9 from memory into f28
fnmadd.h f22, f30, f2, f28, dyn # perform operation
fnmadd.h f22, f30, f2, f28, rdn # perform operation
fnmadd.h f22, f30, f2, f28, rmm # perform operation
fnmadd.h f22, f30, f2, f28, rne # perform operation
fnmadd.h f22, f30, f2, f28, rtz # perform operation
fnmadd.h f22, f30, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3c00)
li x2, 0x3788e465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0x25c86f26 # load x3 with value 0x25c86f26
sw x3, 0(x2) # store 0x25c86f26 in memory
flh f5, 0(x2) # load 0x25c86f26 from memory into f5
fnmadd.h f2, f7, f26, f5, dyn # perform operation
fnmadd.h f2, f7, f26, f5, rdn # perform operation
fnmadd.h f2, f7, f26, f5, rmm # perform operation
fnmadd.h f2, f7, f26, f5, rne # perform operation
fnmadd.h f2, f7, f26, f5, rtz # perform operation
fnmadd.h f2, f7, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbc00)
li x5, 0x61fb2f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0xaf9e2eab # load x3 with value 0xaf9e2eab
sw x3, 0(x2) # store 0xaf9e2eab in memory
flh f31, 0(x2) # load 0xaf9e2eab from memory into f31
fnmadd.h f5, f19, f13, f31, dyn # perform operation
fnmadd.h f5, f19, f13, f31, rdn # perform operation
fnmadd.h f5, f19, f13, f31, rmm # perform operation
fnmadd.h f5, f19, f13, f31, rne # perform operation
fnmadd.h f5, f19, f13, f31, rtz # perform operation
fnmadd.h f5, f19, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3e00)
li x8, 0x7437bb17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
li x3, 0xf756893c # load x3 with value 0xf756893c
sw x3, 0(x2) # store 0xf756893c in memory
flh f27, 0(x2) # load 0xf756893c from memory into f27
fnmadd.h f8, f6, f4, f27, dyn # perform operation
fnmadd.h f8, f6, f4, f27, rdn # perform operation
fnmadd.h f8, f6, f4, f27, rmm # perform operation
fnmadd.h f8, f6, f4, f27, rne # perform operation
fnmadd.h f8, f6, f4, f27, rtz # perform operation
fnmadd.h f8, f6, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbe00)
li x29, 0x29031350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x70cb183f # load x3 with value 0x70cb183f
sw x3, 0(x2) # store 0x70cb183f in memory
flh f12, 0(x2) # load 0x70cb183f from memory into f12
fnmadd.h f29, f13, f18, f12, dyn # perform operation
fnmadd.h f29, f13, f18, f12, rdn # perform operation
fnmadd.h f29, f13, f18, f12, rmm # perform operation
fnmadd.h f29, f13, f18, f12, rne # perform operation
fnmadd.h f29, f13, f18, f12, rtz # perform operation
fnmadd.h f29, f13, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x4000)
li x14, 0xc00908d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x05423674 # load x3 with value 0x05423674
sw x3, 0(x2) # store 0x05423674 in memory
flh f20, 0(x2) # load 0x05423674 from memory into f20
fnmadd.h f14, f4, f5, f20, dyn # perform operation
fnmadd.h f14, f4, f5, f20, rdn # perform operation
fnmadd.h f14, f4, f5, f20, rmm # perform operation
fnmadd.h f14, f4, f5, f20, rne # perform operation
fnmadd.h f14, f4, f5, f20, rtz # perform operation
fnmadd.h f14, f4, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f4, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f4, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc000)
li x29, 0xe5c56456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0xa9012d6c # load x3 with value 0xa9012d6c
sw x3, 0(x2) # store 0xa9012d6c in memory
flh f7, 0(x2) # load 0xa9012d6c from memory into f7
fnmadd.h f29, f9, f3, f7, dyn # perform operation
fnmadd.h f29, f9, f3, f7, rdn # perform operation
fnmadd.h f29, f9, f3, f7, rmm # perform operation
fnmadd.h f29, f9, f3, f7, rne # perform operation
fnmadd.h f29, f9, f3, f7, rtz # perform operation
fnmadd.h f29, f9, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f9, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x400)
li x2, 0xf587b60e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
li x3, 0x57c839c5 # load x3 with value 0x57c839c5
sw x3, 0(x2) # store 0x57c839c5 in memory
flh f29, 0(x2) # load 0x57c839c5 from memory into f29
fnmadd.h f2, f10, f16, f29, dyn # perform operation
fnmadd.h f2, f10, f16, f29, rdn # perform operation
fnmadd.h f2, f10, f16, f29, rmm # perform operation
fnmadd.h f2, f10, f16, f29, rne # perform operation
fnmadd.h f2, f10, f16, f29, rtz # perform operation
fnmadd.h f2, f10, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8400)
li x4, 0xc5d3c5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x70c735a4 # load x3 with value 0x70c735a4
sw x3, 0(x2) # store 0x70c735a4 in memory
flh f30, 0(x2) # load 0x70c735a4 from memory into f30
fnmadd.h f4, f31, f13, f30, dyn # perform operation
fnmadd.h f4, f31, f13, f30, rdn # perform operation
fnmadd.h f4, f31, f13, f30, rmm # perform operation
fnmadd.h f4, f31, f13, f30, rne # perform operation
fnmadd.h f4, f31, f13, f30, rtz # perform operation
fnmadd.h f4, f31, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f31, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7bff)
li x7, 0x01317c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0xb0cc9756 # load x3 with value 0xb0cc9756
sw x3, 0(x2) # store 0xb0cc9756 in memory
flh f25, 0(x2) # load 0xb0cc9756 from memory into f25
fnmadd.h f7, f24, f5, f25, dyn # perform operation
fnmadd.h f7, f24, f5, f25, rdn # perform operation
fnmadd.h f7, f24, f5, f25, rmm # perform operation
fnmadd.h f7, f24, f5, f25, rne # perform operation
fnmadd.h f7, f24, f5, f25, rtz # perform operation
fnmadd.h f7, f24, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f24, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfbff)
li x28, 0xfe50ffec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x542a9492 # load x3 with value 0x542a9492
sw x3, 0(x2) # store 0x542a9492 in memory
flh f2, 0(x2) # load 0x542a9492 from memory into f2
fnmadd.h f28, f4, f12, f2, dyn # perform operation
fnmadd.h f28, f4, f12, f2, rdn # perform operation
fnmadd.h f28, f4, f12, f2, rmm # perform operation
fnmadd.h f28, f4, f12, f2, rne # perform operation
fnmadd.h f28, f4, f12, f2, rtz # perform operation
fnmadd.h f28, f4, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f4, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3ff)
li x10, 0x41fd56bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
li x3, 0x1eab0422 # load x3 with value 0x1eab0422
sw x3, 0(x2) # store 0x1eab0422 in memory
flh f17, 0(x2) # load 0x1eab0422 from memory into f17
fnmadd.h f10, f18, f19, f17, dyn # perform operation
fnmadd.h f10, f18, f19, f17, rdn # perform operation
fnmadd.h f10, f18, f19, f17, rmm # perform operation
fnmadd.h f10, f18, f19, f17, rne # perform operation
fnmadd.h f10, f18, f19, f17, rtz # perform operation
fnmadd.h f10, f18, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f18, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f18, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f18, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f18, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f18, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x83ff)
li x20, 0xe9070dc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0x064dcc4b # load x3 with value 0x064dcc4b
sw x3, 0(x2) # store 0x064dcc4b in memory
flh f14, 0(x2) # load 0x064dcc4b from memory into f14
fnmadd.h f20, f12, f27, f14, dyn # perform operation
fnmadd.h f20, f12, f27, f14, rdn # perform operation
fnmadd.h f20, f12, f27, f14, rmm # perform operation
fnmadd.h f20, f12, f27, f14, rne # perform operation
fnmadd.h f20, f12, f27, f14, rtz # perform operation
fnmadd.h f20, f12, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f12, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f12, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f12, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f12, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f12, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x200)
li x22, 0xec946f77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
li x3, 0xd8fb90ae # load x3 with value 0xd8fb90ae
sw x3, 0(x2) # store 0xd8fb90ae in memory
flh f2, 0(x2) # load 0xd8fb90ae from memory into f2
fnmadd.h f22, f11, f9, f2, dyn # perform operation
fnmadd.h f22, f11, f9, f2, rdn # perform operation
fnmadd.h f22, f11, f9, f2, rmm # perform operation
fnmadd.h f22, f11, f9, f2, rne # perform operation
fnmadd.h f22, f11, f9, f2, rtz # perform operation
fnmadd.h f22, f11, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8200)
li x3, 0x6c82f20e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0x54578007 # load x3 with value 0x54578007
sw x3, 0(x2) # store 0x54578007 in memory
flh f14, 0(x2) # load 0x54578007 from memory into f14
fnmadd.h f3, f18, f23, f14, dyn # perform operation
fnmadd.h f3, f18, f23, f14, rdn # perform operation
fnmadd.h f3, f18, f23, f14, rmm # perform operation
fnmadd.h f3, f18, f23, f14, rne # perform operation
fnmadd.h f3, f18, f23, f14, rtz # perform operation
fnmadd.h f3, f18, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x1)
li x25, 0x4599449d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x00d53a6e # load x3 with value 0x00d53a6e
sw x3, 0(x2) # store 0x00d53a6e in memory
flh f27, 0(x2) # load 0x00d53a6e from memory into f27
fnmadd.h f25, f22, f18, f27, dyn # perform operation
fnmadd.h f25, f22, f18, f27, rdn # perform operation
fnmadd.h f25, f22, f18, f27, rmm # perform operation
fnmadd.h f25, f22, f18, f27, rne # perform operation
fnmadd.h f25, f22, f18, f27, rtz # perform operation
fnmadd.h f25, f22, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f18, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8001)
li x23, 0x0ec4982b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xe3e2ea0b # load x3 with value 0xe3e2ea0b
sw x3, 0(x2) # store 0xe3e2ea0b in memory
flh f27, 0(x2) # load 0xe3e2ea0b from memory into f27
fnmadd.h f23, f1, f7, f27, dyn # perform operation
fnmadd.h f23, f1, f7, f27, rdn # perform operation
fnmadd.h f23, f1, f7, f27, rmm # perform operation
fnmadd.h f23, f1, f7, f27, rne # perform operation
fnmadd.h f23, f1, f7, f27, rtz # perform operation
fnmadd.h f23, f1, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c00)
li x7, 0xbeefc05c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
li x3, 0xc190051a # load x3 with value 0xc190051a
sw x3, 0(x2) # store 0xc190051a in memory
flh f12, 0(x2) # load 0xc190051a from memory into f12
fnmadd.h f7, f2, f5, f12, dyn # perform operation
fnmadd.h f7, f2, f5, f12, rdn # perform operation
fnmadd.h f7, f2, f5, f12, rmm # perform operation
fnmadd.h f7, f2, f5, f12, rne # perform operation
fnmadd.h f7, f2, f5, f12, rtz # perform operation
fnmadd.h f7, f2, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f2, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc00)
li x2, 0xae7cd57b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0x41813359 # load x3 with value 0x41813359
sw x3, 0(x2) # store 0x41813359 in memory
flh f21, 0(x2) # load 0x41813359 from memory into f21
fnmadd.h f2, f17, f15, f21, dyn # perform operation
fnmadd.h f2, f17, f15, f21, rdn # perform operation
fnmadd.h f2, f17, f15, f21, rmm # perform operation
fnmadd.h f2, f17, f15, f21, rne # perform operation
fnmadd.h f2, f17, f15, f21, rtz # perform operation
fnmadd.h f2, f17, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7e00)
li x2, 0xfc9e0e09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0xc27556d8 # load x3 with value 0xc27556d8
sw x3, 0(x2) # store 0xc27556d8 in memory
flh f25, 0(x2) # load 0xc27556d8 from memory into f25
fnmadd.h f2, f19, f26, f25, dyn # perform operation
fnmadd.h f2, f19, f26, f25, rdn # perform operation
fnmadd.h f2, f19, f26, f25, rmm # perform operation
fnmadd.h f2, f19, f26, f25, rne # perform operation
fnmadd.h f2, f19, f26, f25, rtz # perform operation
fnmadd.h f2, f19, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7fff)
li x4, 0x89213f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x76a5ca4f # load x3 with value 0x76a5ca4f
sw x3, 0(x2) # store 0x76a5ca4f in memory
flh f11, 0(x2) # load 0x76a5ca4f from memory into f11
fnmadd.h f4, f30, f8, f11, dyn # perform operation
fnmadd.h f4, f30, f8, f11, rdn # perform operation
fnmadd.h f4, f30, f8, f11, rmm # perform operation
fnmadd.h f4, f30, f8, f11, rne # perform operation
fnmadd.h f4, f30, f8, f11, rtz # perform operation
fnmadd.h f4, f30, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f30, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f30, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f30, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f30, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f30, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c01)
li x20, 0xde19b481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
li x3, 0x05be4885 # load x3 with value 0x05be4885
sw x3, 0(x2) # store 0x05be4885 in memory
flh f9, 0(x2) # load 0x05be4885 from memory into f9
fnmadd.h f20, f7, f6, f9, dyn # perform operation
fnmadd.h f20, f7, f6, f9, rdn # perform operation
fnmadd.h f20, f7, f6, f9, rmm # perform operation
fnmadd.h f20, f7, f6, f9, rne # perform operation
fnmadd.h f20, f7, f6, f9, rtz # perform operation
fnmadd.h f20, f7, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f7, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7dff)
li x8, 0x17548903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0xa8bcd18f # load x3 with value 0xa8bcd18f
sw x3, 0(x2) # store 0xa8bcd18f in memory
flh f13, 0(x2) # load 0xa8bcd18f from memory into f13
fnmadd.h f8, f15, f23, f13, dyn # perform operation
fnmadd.h f8, f15, f23, f13, rdn # perform operation
fnmadd.h f8, f15, f23, f13, rmm # perform operation
fnmadd.h f8, f15, f23, f13, rne # perform operation
fnmadd.h f8, f15, f23, f13, rtz # perform operation
fnmadd.h f8, f15, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x58b4)
li x23, 0x730eba42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
li x3, 0x7fc28345 # load x3 with value 0x7fc28345
sw x3, 0(x2) # store 0x7fc28345 in memory
flh f14, 0(x2) # load 0x7fc28345 from memory into f14
fnmadd.h f23, f12, f22, f14, dyn # perform operation
fnmadd.h f23, f12, f22, f14, rdn # perform operation
fnmadd.h f23, f12, f22, f14, rmm # perform operation
fnmadd.h f23, f12, f22, f14, rne # perform operation
fnmadd.h f23, f12, f22, f14, rtz # perform operation
fnmadd.h f23, f12, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc93a)
li x17, 0x6d85ccfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
li x3, 0x95918ee9 # load x3 with value 0x95918ee9
sw x3, 0(x2) # store 0x95918ee9 in memory
flh f7, 0(x2) # load 0x95918ee9 from memory into f7
fnmadd.h f17, f11, f19, f7, dyn # perform operation
fnmadd.h f17, f11, f19, f7, rdn # perform operation
fnmadd.h f17, f11, f19, f7, rmm # perform operation
fnmadd.h f17, f11, f19, f7, rne # perform operation
fnmadd.h f17, f11, f19, f7, rtz # perform operation
fnmadd.h f17, f11, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x0)
li x31, 0xada0daed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xb0bbfddc # load x3 with value 0xb0bbfddc
sw x3, 0(x2) # store 0xb0bbfddc in memory
flh f15, 0(x2) # load 0xb0bbfddc from memory into f15
fnmadd.h f31, f6, f7, f15, dyn # perform operation
fnmadd.h f31, f6, f7, f15, rdn # perform operation
fnmadd.h f31, f6, f7, f15, rmm # perform operation
fnmadd.h f31, f6, f7, f15, rne # perform operation
fnmadd.h f31, f6, f7, f15, rtz # perform operation
fnmadd.h f31, f6, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8000)
li x15, 0x11403e68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0xa2af66b3 # load x3 with value 0xa2af66b3
sw x3, 0(x2) # store 0xa2af66b3 in memory
flh f12, 0(x2) # load 0xa2af66b3 from memory into f12
fnmadd.h f15, f28, f26, f12, dyn # perform operation
fnmadd.h f15, f28, f26, f12, rdn # perform operation
fnmadd.h f15, f28, f26, f12, rmm # perform operation
fnmadd.h f15, f28, f26, f12, rne # perform operation
fnmadd.h f15, f28, f26, f12, rtz # perform operation
fnmadd.h f15, f28, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3c00)
li x31, 0x76766374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
li x3, 0xbe2aa34a # load x3 with value 0xbe2aa34a
sw x3, 0(x2) # store 0xbe2aa34a in memory
flh f18, 0(x2) # load 0xbe2aa34a from memory into f18
fnmadd.h f31, f27, f10, f18, dyn # perform operation
fnmadd.h f31, f27, f10, f18, rdn # perform operation
fnmadd.h f31, f27, f10, f18, rmm # perform operation
fnmadd.h f31, f27, f10, f18, rne # perform operation
fnmadd.h f31, f27, f10, f18, rtz # perform operation
fnmadd.h f31, f27, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f27, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbc00)
li x6, 0x2daaafe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
li x3, 0x70b189be # load x3 with value 0x70b189be
sw x3, 0(x2) # store 0x70b189be in memory
flh f8, 0(x2) # load 0x70b189be from memory into f8
fnmadd.h f6, f22, f16, f8, dyn # perform operation
fnmadd.h f6, f22, f16, f8, rdn # perform operation
fnmadd.h f6, f22, f16, f8, rmm # perform operation
fnmadd.h f6, f22, f16, f8, rne # perform operation
fnmadd.h f6, f22, f16, f8, rtz # perform operation
fnmadd.h f6, f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3e00)
li x2, 0x62535c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x8794f0ea # load x3 with value 0x8794f0ea
sw x3, 0(x2) # store 0x8794f0ea in memory
flh f5, 0(x2) # load 0x8794f0ea from memory into f5
fnmadd.h f2, f8, f10, f5, dyn # perform operation
fnmadd.h f2, f8, f10, f5, rdn # perform operation
fnmadd.h f2, f8, f10, f5, rmm # perform operation
fnmadd.h f2, f8, f10, f5, rne # perform operation
fnmadd.h f2, f8, f10, f5, rtz # perform operation
fnmadd.h f2, f8, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbe00)
li x3, 0xe047cb5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0x531cde6b # load x3 with value 0x531cde6b
sw x3, 0(x2) # store 0x531cde6b in memory
flh f24, 0(x2) # load 0x531cde6b from memory into f24
fnmadd.h f3, f27, f13, f24, dyn # perform operation
fnmadd.h f3, f27, f13, f24, rdn # perform operation
fnmadd.h f3, f27, f13, f24, rmm # perform operation
fnmadd.h f3, f27, f13, f24, rne # perform operation
fnmadd.h f3, f27, f13, f24, rtz # perform operation
fnmadd.h f3, f27, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x4000)
li x11, 0xad78dc8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0xa18a7958 # load x3 with value 0xa18a7958
sw x3, 0(x2) # store 0xa18a7958 in memory
flh f17, 0(x2) # load 0xa18a7958 from memory into f17
fnmadd.h f11, f5, f9, f17, dyn # perform operation
fnmadd.h f11, f5, f9, f17, rdn # perform operation
fnmadd.h f11, f5, f9, f17, rmm # perform operation
fnmadd.h f11, f5, f9, f17, rne # perform operation
fnmadd.h f11, f5, f9, f17, rtz # perform operation
fnmadd.h f11, f5, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc000)
li x9, 0xe3b0276f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x148c0a74 # load x3 with value 0x148c0a74
sw x3, 0(x2) # store 0x148c0a74 in memory
flh f21, 0(x2) # load 0x148c0a74 from memory into f21
fnmadd.h f9, f22, f20, f21, dyn # perform operation
fnmadd.h f9, f22, f20, f21, rdn # perform operation
fnmadd.h f9, f22, f20, f21, rmm # perform operation
fnmadd.h f9, f22, f20, f21, rne # perform operation
fnmadd.h f9, f22, f20, f21, rtz # perform operation
fnmadd.h f9, f22, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x400)
li x31, 0x37bc8827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0xbab1b662 # load x3 with value 0xbab1b662
sw x3, 0(x2) # store 0xbab1b662 in memory
flh f22, 0(x2) # load 0xbab1b662 from memory into f22
fnmadd.h f31, f17, f9, f22, dyn # perform operation
fnmadd.h f31, f17, f9, f22, rdn # perform operation
fnmadd.h f31, f17, f9, f22, rmm # perform operation
fnmadd.h f31, f17, f9, f22, rne # perform operation
fnmadd.h f31, f17, f9, f22, rtz # perform operation
fnmadd.h f31, f17, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f17, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8400)
li x21, 0x6d9d8710 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
li x3, 0xa65582d3 # load x3 with value 0xa65582d3
sw x3, 0(x2) # store 0xa65582d3 in memory
flh f24, 0(x2) # load 0xa65582d3 from memory into f24
fnmadd.h f21, f19, f27, f24, dyn # perform operation
fnmadd.h f21, f19, f27, f24, rdn # perform operation
fnmadd.h f21, f19, f27, f24, rmm # perform operation
fnmadd.h f21, f19, f27, f24, rne # perform operation
fnmadd.h f21, f19, f27, f24, rtz # perform operation
fnmadd.h f21, f19, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7bff)
li x4, 0x4b8aba25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x6214ebbd # load x3 with value 0x6214ebbd
sw x3, 0(x2) # store 0x6214ebbd in memory
flh f11, 0(x2) # load 0x6214ebbd from memory into f11
fnmadd.h f4, f15, f25, f11, dyn # perform operation
fnmadd.h f4, f15, f25, f11, rdn # perform operation
fnmadd.h f4, f15, f25, f11, rmm # perform operation
fnmadd.h f4, f15, f25, f11, rne # perform operation
fnmadd.h f4, f15, f25, f11, rtz # perform operation
fnmadd.h f4, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f15, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfbff)
li x16, 0x30428250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0x525cf277 # load x3 with value 0x525cf277
sw x3, 0(x2) # store 0x525cf277 in memory
flh f9, 0(x2) # load 0x525cf277 from memory into f9
fnmadd.h f16, f12, f5, f9, dyn # perform operation
fnmadd.h f16, f12, f5, f9, rdn # perform operation
fnmadd.h f16, f12, f5, f9, rmm # perform operation
fnmadd.h f16, f12, f5, f9, rne # perform operation
fnmadd.h f16, f12, f5, f9, rtz # perform operation
fnmadd.h f16, f12, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3ff)
li x12, 0x87653985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
li x3, 0x5e06f28e # load x3 with value 0x5e06f28e
sw x3, 0(x2) # store 0x5e06f28e in memory
flh f15, 0(x2) # load 0x5e06f28e from memory into f15
fnmadd.h f12, f14, f31, f15, dyn # perform operation
fnmadd.h f12, f14, f31, f15, rdn # perform operation
fnmadd.h f12, f14, f31, f15, rmm # perform operation
fnmadd.h f12, f14, f31, f15, rne # perform operation
fnmadd.h f12, f14, f31, f15, rtz # perform operation
fnmadd.h f12, f14, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x83ff)
li x22, 0x31ca489e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0xad1bfea5 # load x3 with value 0xad1bfea5
sw x3, 0(x2) # store 0xad1bfea5 in memory
flh f3, 0(x2) # load 0xad1bfea5 from memory into f3
fnmadd.h f22, f23, f13, f3, dyn # perform operation
fnmadd.h f22, f23, f13, f3, rdn # perform operation
fnmadd.h f22, f23, f13, f3, rmm # perform operation
fnmadd.h f22, f23, f13, f3, rne # perform operation
fnmadd.h f22, f23, f13, f3, rtz # perform operation
fnmadd.h f22, f23, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x200)
li x29, 0xf065821a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
li x3, 0xa39f4c99 # load x3 with value 0xa39f4c99
sw x3, 0(x2) # store 0xa39f4c99 in memory
flh f23, 0(x2) # load 0xa39f4c99 from memory into f23
fnmadd.h f29, f24, f7, f23, dyn # perform operation
fnmadd.h f29, f24, f7, f23, rdn # perform operation
fnmadd.h f29, f24, f7, f23, rmm # perform operation
fnmadd.h f29, f24, f7, f23, rne # perform operation
fnmadd.h f29, f24, f7, f23, rtz # perform operation
fnmadd.h f29, f24, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f24, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8200)
li x19, 0x714f79ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
li x3, 0x8e19b232 # load x3 with value 0x8e19b232
sw x3, 0(x2) # store 0x8e19b232 in memory
flh f27, 0(x2) # load 0x8e19b232 from memory into f27
fnmadd.h f19, f13, f11, f27, dyn # perform operation
fnmadd.h f19, f13, f11, f27, rdn # perform operation
fnmadd.h f19, f13, f11, f27, rmm # perform operation
fnmadd.h f19, f13, f11, f27, rne # perform operation
fnmadd.h f19, f13, f11, f27, rtz # perform operation
fnmadd.h f19, f13, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f13, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x1)
li x13, 0xe0dc1931 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x982a723e # load x3 with value 0x982a723e
sw x3, 0(x2) # store 0x982a723e in memory
flh f26, 0(x2) # load 0x982a723e from memory into f26
fnmadd.h f13, f31, f17, f26, dyn # perform operation
fnmadd.h f13, f31, f17, f26, rdn # perform operation
fnmadd.h f13, f31, f17, f26, rmm # perform operation
fnmadd.h f13, f31, f17, f26, rne # perform operation
fnmadd.h f13, f31, f17, f26, rtz # perform operation
fnmadd.h f13, f31, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f31, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8001)
li x11, 0x4056822f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0x055d5889 # load x3 with value 0x055d5889
sw x3, 0(x2) # store 0x055d5889 in memory
flh f30, 0(x2) # load 0x055d5889 from memory into f30
fnmadd.h f11, f19, f27, f30, dyn # perform operation
fnmadd.h f11, f19, f27, f30, rdn # perform operation
fnmadd.h f11, f19, f27, f30, rmm # perform operation
fnmadd.h f11, f19, f27, f30, rne # perform operation
fnmadd.h f11, f19, f27, f30, rtz # perform operation
fnmadd.h f11, f19, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c00)
li x23, 0x9937a7e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x939c86f9 # load x3 with value 0x939c86f9
sw x3, 0(x2) # store 0x939c86f9 in memory
flh f27, 0(x2) # load 0x939c86f9 from memory into f27
fnmadd.h f23, f17, f22, f27, dyn # perform operation
fnmadd.h f23, f17, f22, f27, rdn # perform operation
fnmadd.h f23, f17, f22, f27, rmm # perform operation
fnmadd.h f23, f17, f22, f27, rne # perform operation
fnmadd.h f23, f17, f22, f27, rtz # perform operation
fnmadd.h f23, f17, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc00)
li x19, 0x73665f1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x5f96993f # load x3 with value 0x5f96993f
sw x3, 0(x2) # store 0x5f96993f in memory
flh f30, 0(x2) # load 0x5f96993f from memory into f30
fnmadd.h f19, f21, f18, f30, dyn # perform operation
fnmadd.h f19, f21, f18, f30, rdn # perform operation
fnmadd.h f19, f21, f18, f30, rmm # perform operation
fnmadd.h f19, f21, f18, f30, rne # perform operation
fnmadd.h f19, f21, f18, f30, rtz # perform operation
fnmadd.h f19, f21, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7e00)
li x28, 0xea727b12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
li x3, 0xb2f0468e # load x3 with value 0xb2f0468e
sw x3, 0(x2) # store 0xb2f0468e in memory
flh f13, 0(x2) # load 0xb2f0468e from memory into f13
fnmadd.h f28, f31, f10, f13, dyn # perform operation
fnmadd.h f28, f31, f10, f13, rdn # perform operation
fnmadd.h f28, f31, f10, f13, rmm # perform operation
fnmadd.h f28, f31, f10, f13, rne # perform operation
fnmadd.h f28, f31, f10, f13, rtz # perform operation
fnmadd.h f28, f31, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7fff)
li x26, 0x7d326017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x05488736 # load x3 with value 0x05488736
sw x3, 0(x2) # store 0x05488736 in memory
flh f24, 0(x2) # load 0x05488736 from memory into f24
fnmadd.h f26, f13, f29, f24, dyn # perform operation
fnmadd.h f26, f13, f29, f24, rdn # perform operation
fnmadd.h f26, f13, f29, f24, rmm # perform operation
fnmadd.h f26, f13, f29, f24, rne # perform operation
fnmadd.h f26, f13, f29, f24, rtz # perform operation
fnmadd.h f26, f13, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c01)
li x24, 0x23a5aa43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
li x3, 0xba38bcf4 # load x3 with value 0xba38bcf4
sw x3, 0(x2) # store 0xba38bcf4 in memory
flh f2, 0(x2) # load 0xba38bcf4 from memory into f2
fnmadd.h f24, f19, f23, f2, dyn # perform operation
fnmadd.h f24, f19, f23, f2, rdn # perform operation
fnmadd.h f24, f19, f23, f2, rmm # perform operation
fnmadd.h f24, f19, f23, f2, rne # perform operation
fnmadd.h f24, f19, f23, f2, rtz # perform operation
fnmadd.h f24, f19, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7dff)
li x25, 0xf58fc104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
li x3, 0xaa647e21 # load x3 with value 0xaa647e21
sw x3, 0(x2) # store 0xaa647e21 in memory
flh f30, 0(x2) # load 0xaa647e21 from memory into f30
fnmadd.h f25, f19, f31, f30, dyn # perform operation
fnmadd.h f25, f19, f31, f30, rdn # perform operation
fnmadd.h f25, f19, f31, f30, rmm # perform operation
fnmadd.h f25, f19, f31, f30, rne # perform operation
fnmadd.h f25, f19, f31, f30, rtz # perform operation
fnmadd.h f25, f19, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f19, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f19, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f19, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f19, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f19, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x58b4)
li x10, 0xf3453a9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0xc0f4c6f3 # load x3 with value 0xc0f4c6f3
sw x3, 0(x2) # store 0xc0f4c6f3 in memory
flh f2, 0(x2) # load 0xc0f4c6f3 from memory into f2
fnmadd.h f10, f27, f5, f2, dyn # perform operation
fnmadd.h f10, f27, f5, f2, rdn # perform operation
fnmadd.h f10, f27, f5, f2, rmm # perform operation
fnmadd.h f10, f27, f5, f2, rne # perform operation
fnmadd.h f10, f27, f5, f2, rtz # perform operation
fnmadd.h f10, f27, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f27, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc93a)
li x17, 0xa73496e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0xd00231f7 # load x3 with value 0xd00231f7
sw x3, 0(x2) # store 0xd00231f7 in memory
flh f16, 0(x2) # load 0xd00231f7 from memory into f16
fnmadd.h f17, f29, f13, f16, dyn # perform operation
fnmadd.h f17, f29, f13, f16, rdn # perform operation
fnmadd.h f17, f29, f13, f16, rmm # perform operation
fnmadd.h f17, f29, f13, f16, rne # perform operation
fnmadd.h f17, f29, f13, f16, rtz # perform operation
fnmadd.h f17, f29, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x0)
li x21, 0xe47c8626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xb88a505d # load x3 with value 0xb88a505d
sw x3, 0(x2) # store 0xb88a505d in memory
flh f31, 0(x2) # load 0xb88a505d from memory into f31
fnmadd.h f21, f29, f22, f31, dyn # perform operation
fnmadd.h f21, f29, f22, f31, rdn # perform operation
fnmadd.h f21, f29, f22, f31, rmm # perform operation
fnmadd.h f21, f29, f22, f31, rne # perform operation
fnmadd.h f21, f29, f22, f31, rtz # perform operation
fnmadd.h f21, f29, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8000)
li x12, 0xaa26ff2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0x8ac94477 # load x3 with value 0x8ac94477
sw x3, 0(x2) # store 0x8ac94477 in memory
flh f10, 0(x2) # load 0x8ac94477 from memory into f10
fnmadd.h f12, f14, f31, f10, dyn # perform operation
fnmadd.h f12, f14, f31, f10, rdn # perform operation
fnmadd.h f12, f14, f31, f10, rmm # perform operation
fnmadd.h f12, f14, f31, f10, rne # perform operation
fnmadd.h f12, f14, f31, f10, rtz # perform operation
fnmadd.h f12, f14, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3c00)
li x4, 0x05ee32b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
li x3, 0x74df1021 # load x3 with value 0x74df1021
sw x3, 0(x2) # store 0x74df1021 in memory
flh f12, 0(x2) # load 0x74df1021 from memory into f12
fnmadd.h f4, f5, f10, f12, dyn # perform operation
fnmadd.h f4, f5, f10, f12, rdn # perform operation
fnmadd.h f4, f5, f10, f12, rmm # perform operation
fnmadd.h f4, f5, f10, f12, rne # perform operation
fnmadd.h f4, f5, f10, f12, rtz # perform operation
fnmadd.h f4, f5, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f5, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbc00)
li x2, 0x31e3d033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
li x3, 0xce41a9b1 # load x3 with value 0xce41a9b1
sw x3, 0(x2) # store 0xce41a9b1 in memory
flh f18, 0(x2) # load 0xce41a9b1 from memory into f18
fnmadd.h f2, f7, f26, f18, dyn # perform operation
fnmadd.h f2, f7, f26, f18, rdn # perform operation
fnmadd.h f2, f7, f26, f18, rmm # perform operation
fnmadd.h f2, f7, f26, f18, rne # perform operation
fnmadd.h f2, f7, f26, f18, rtz # perform operation
fnmadd.h f2, f7, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3e00)
li x3, 0x670a0db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0xd867b10b # load x3 with value 0xd867b10b
sw x3, 0(x2) # store 0xd867b10b in memory
flh f22, 0(x2) # load 0xd867b10b from memory into f22
fnmadd.h f3, f20, f8, f22, dyn # perform operation
fnmadd.h f3, f20, f8, f22, rdn # perform operation
fnmadd.h f3, f20, f8, f22, rmm # perform operation
fnmadd.h f3, f20, f8, f22, rne # perform operation
fnmadd.h f3, f20, f8, f22, rtz # perform operation
fnmadd.h f3, f20, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbe00)
li x11, 0xe343289b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
li x3, 0x5eb92933 # load x3 with value 0x5eb92933
sw x3, 0(x2) # store 0x5eb92933 in memory
flh f10, 0(x2) # load 0x5eb92933 from memory into f10
fnmadd.h f11, f16, f21, f10, dyn # perform operation
fnmadd.h f11, f16, f21, f10, rdn # perform operation
fnmadd.h f11, f16, f21, f10, rmm # perform operation
fnmadd.h f11, f16, f21, f10, rne # perform operation
fnmadd.h f11, f16, f21, f10, rtz # perform operation
fnmadd.h f11, f16, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x4000)
li x7, 0x65f02b6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x83a4cae5 # load x3 with value 0x83a4cae5
sw x3, 0(x2) # store 0x83a4cae5 in memory
flh f22, 0(x2) # load 0x83a4cae5 from memory into f22
fnmadd.h f7, f14, f6, f22, dyn # perform operation
fnmadd.h f7, f14, f6, f22, rdn # perform operation
fnmadd.h f7, f14, f6, f22, rmm # perform operation
fnmadd.h f7, f14, f6, f22, rne # perform operation
fnmadd.h f7, f14, f6, f22, rtz # perform operation
fnmadd.h f7, f14, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc000)
li x16, 0x4b903972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
li x3, 0xf51e4531 # load x3 with value 0xf51e4531
sw x3, 0(x2) # store 0xf51e4531 in memory
flh f10, 0(x2) # load 0xf51e4531 from memory into f10
fnmadd.h f16, f23, f22, f10, dyn # perform operation
fnmadd.h f16, f23, f22, f10, rdn # perform operation
fnmadd.h f16, f23, f22, f10, rmm # perform operation
fnmadd.h f16, f23, f22, f10, rne # perform operation
fnmadd.h f16, f23, f22, f10, rtz # perform operation
fnmadd.h f16, f23, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x400)
li x17, 0x0545fb70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0xf666e9ba # load x3 with value 0xf666e9ba
sw x3, 0(x2) # store 0xf666e9ba in memory
flh f25, 0(x2) # load 0xf666e9ba from memory into f25
fnmadd.h f17, f21, f1, f25, dyn # perform operation
fnmadd.h f17, f21, f1, f25, rdn # perform operation
fnmadd.h f17, f21, f1, f25, rmm # perform operation
fnmadd.h f17, f21, f1, f25, rne # perform operation
fnmadd.h f17, f21, f1, f25, rtz # perform operation
fnmadd.h f17, f21, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8400)
li x27, 0xea07dbb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
li x3, 0x73cdcadd # load x3 with value 0x73cdcadd
sw x3, 0(x2) # store 0x73cdcadd in memory
flh f22, 0(x2) # load 0x73cdcadd from memory into f22
fnmadd.h f27, f31, f7, f22, dyn # perform operation
fnmadd.h f27, f31, f7, f22, rdn # perform operation
fnmadd.h f27, f31, f7, f22, rmm # perform operation
fnmadd.h f27, f31, f7, f22, rne # perform operation
fnmadd.h f27, f31, f7, f22, rtz # perform operation
fnmadd.h f27, f31, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7bff)
li x21, 0x10c20701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
li x3, 0x6e2b09c2 # load x3 with value 0x6e2b09c2
sw x3, 0(x2) # store 0x6e2b09c2 in memory
flh f28, 0(x2) # load 0x6e2b09c2 from memory into f28
fnmadd.h f21, f11, f14, f28, dyn # perform operation
fnmadd.h f21, f11, f14, f28, rdn # perform operation
fnmadd.h f21, f11, f14, f28, rmm # perform operation
fnmadd.h f21, f11, f14, f28, rne # perform operation
fnmadd.h f21, f11, f14, f28, rtz # perform operation
fnmadd.h f21, f11, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfbff)
li x25, 0x6381d34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0x711495d0 # load x3 with value 0x711495d0
sw x3, 0(x2) # store 0x711495d0 in memory
flh f18, 0(x2) # load 0x711495d0 from memory into f18
fnmadd.h f25, f11, f22, f18, dyn # perform operation
fnmadd.h f25, f11, f22, f18, rdn # perform operation
fnmadd.h f25, f11, f22, f18, rmm # perform operation
fnmadd.h f25, f11, f22, f18, rne # perform operation
fnmadd.h f25, f11, f22, f18, rtz # perform operation
fnmadd.h f25, f11, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f11, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3ff)
li x21, 0x809f8bf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x6e380db8 # load x3 with value 0x6e380db8
sw x3, 0(x2) # store 0x6e380db8 in memory
flh f4, 0(x2) # load 0x6e380db8 from memory into f4
fnmadd.h f21, f16, f18, f4, dyn # perform operation
fnmadd.h f21, f16, f18, f4, rdn # perform operation
fnmadd.h f21, f16, f18, f4, rmm # perform operation
fnmadd.h f21, f16, f18, f4, rne # perform operation
fnmadd.h f21, f16, f18, f4, rtz # perform operation
fnmadd.h f21, f16, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x83ff)
li x21, 0x1b33f528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x37aa9911 # load x3 with value 0x37aa9911
sw x3, 0(x2) # store 0x37aa9911 in memory
flh f30, 0(x2) # load 0x37aa9911 from memory into f30
fnmadd.h f21, f19, f17, f30, dyn # perform operation
fnmadd.h f21, f19, f17, f30, rdn # perform operation
fnmadd.h f21, f19, f17, f30, rmm # perform operation
fnmadd.h f21, f19, f17, f30, rne # perform operation
fnmadd.h f21, f19, f17, f30, rtz # perform operation
fnmadd.h f21, f19, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x200)
li x25, 0x4d3b7633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
li x3, 0xdac2dd52 # load x3 with value 0xdac2dd52
sw x3, 0(x2) # store 0xdac2dd52 in memory
flh f30, 0(x2) # load 0xdac2dd52 from memory into f30
fnmadd.h f25, f17, f4, f30, dyn # perform operation
fnmadd.h f25, f17, f4, f30, rdn # perform operation
fnmadd.h f25, f17, f4, f30, rmm # perform operation
fnmadd.h f25, f17, f4, f30, rne # perform operation
fnmadd.h f25, f17, f4, f30, rtz # perform operation
fnmadd.h f25, f17, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8200)
li x8, 0x553f6967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
li x3, 0xa8dc0580 # load x3 with value 0xa8dc0580
sw x3, 0(x2) # store 0xa8dc0580 in memory
flh f13, 0(x2) # load 0xa8dc0580 from memory into f13
fnmadd.h f8, f20, f22, f13, dyn # perform operation
fnmadd.h f8, f20, f22, f13, rdn # perform operation
fnmadd.h f8, f20, f22, f13, rmm # perform operation
fnmadd.h f8, f20, f22, f13, rne # perform operation
fnmadd.h f8, f20, f22, f13, rtz # perform operation
fnmadd.h f8, f20, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x1)
li x29, 0x2ef71299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x2d4e3263 # load x3 with value 0x2d4e3263
sw x3, 0(x2) # store 0x2d4e3263 in memory
flh f30, 0(x2) # load 0x2d4e3263 from memory into f30
fnmadd.h f29, f28, f2, f30, dyn # perform operation
fnmadd.h f29, f28, f2, f30, rdn # perform operation
fnmadd.h f29, f28, f2, f30, rmm # perform operation
fnmadd.h f29, f28, f2, f30, rne # perform operation
fnmadd.h f29, f28, f2, f30, rtz # perform operation
fnmadd.h f29, f28, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f28, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8001)
li x21, 0xb8cb5d12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0x3addf27a # load x3 with value 0x3addf27a
sw x3, 0(x2) # store 0x3addf27a in memory
flh f14, 0(x2) # load 0x3addf27a from memory into f14
fnmadd.h f21, f4, f15, f14, dyn # perform operation
fnmadd.h f21, f4, f15, f14, rdn # perform operation
fnmadd.h f21, f4, f15, f14, rmm # perform operation
fnmadd.h f21, f4, f15, f14, rne # perform operation
fnmadd.h f21, f4, f15, f14, rtz # perform operation
fnmadd.h f21, f4, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f4, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f4, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f4, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f4, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f4, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c00)
li x27, 0x6c151a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
li x3, 0xd2b9a0a2 # load x3 with value 0xd2b9a0a2
sw x3, 0(x2) # store 0xd2b9a0a2 in memory
flh f5, 0(x2) # load 0xd2b9a0a2 from memory into f5
fnmadd.h f27, f28, f1, f5, dyn # perform operation
fnmadd.h f27, f28, f1, f5, rdn # perform operation
fnmadd.h f27, f28, f1, f5, rmm # perform operation
fnmadd.h f27, f28, f1, f5, rne # perform operation
fnmadd.h f27, f28, f1, f5, rtz # perform operation
fnmadd.h f27, f28, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc00)
li x21, 0x414650f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0x60310007 # load x3 with value 0x60310007
sw x3, 0(x2) # store 0x60310007 in memory
flh f12, 0(x2) # load 0x60310007 from memory into f12
fnmadd.h f21, f18, f24, f12, dyn # perform operation
fnmadd.h f21, f18, f24, f12, rdn # perform operation
fnmadd.h f21, f18, f24, f12, rmm # perform operation
fnmadd.h f21, f18, f24, f12, rne # perform operation
fnmadd.h f21, f18, f24, f12, rtz # perform operation
fnmadd.h f21, f18, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7e00)
li x6, 0xbf38853c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f4, 0(x2) # load 0x00007e00 from memory into f4
li x3, 0xaed718c1 # load x3 with value 0xaed718c1
sw x3, 0(x2) # store 0xaed718c1 in memory
flh f27, 0(x2) # load 0xaed718c1 from memory into f27
fnmadd.h f6, f15, f4, f27, dyn # perform operation
fnmadd.h f6, f15, f4, f27, rdn # perform operation
fnmadd.h f6, f15, f4, f27, rmm # perform operation
fnmadd.h f6, f15, f4, f27, rne # perform operation
fnmadd.h f6, f15, f4, f27, rtz # perform operation
fnmadd.h f6, f15, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7fff)
li x21, 0x48bb3d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x1a944495 # load x3 with value 0x1a944495
sw x3, 0(x2) # store 0x1a944495 in memory
flh f16, 0(x2) # load 0x1a944495 from memory into f16
fnmadd.h f21, f29, f1, f16, dyn # perform operation
fnmadd.h f21, f29, f1, f16, rdn # perform operation
fnmadd.h f21, f29, f1, f16, rmm # perform operation
fnmadd.h f21, f29, f1, f16, rne # perform operation
fnmadd.h f21, f29, f1, f16, rtz # perform operation
fnmadd.h f21, f29, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c01)
li x29, 0x0d415522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0x8e154b40 # load x3 with value 0x8e154b40
sw x3, 0(x2) # store 0x8e154b40 in memory
flh f24, 0(x2) # load 0x8e154b40 from memory into f24
fnmadd.h f29, f14, f11, f24, dyn # perform operation
fnmadd.h f29, f14, f11, f24, rdn # perform operation
fnmadd.h f29, f14, f11, f24, rmm # perform operation
fnmadd.h f29, f14, f11, f24, rne # perform operation
fnmadd.h f29, f14, f11, f24, rtz # perform operation
fnmadd.h f29, f14, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f14, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7dff)
li x13, 0x0b965791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0x39f0fb64 # load x3 with value 0x39f0fb64
sw x3, 0(x2) # store 0x39f0fb64 in memory
flh f23, 0(x2) # load 0x39f0fb64 from memory into f23
fnmadd.h f13, f21, f3, f23, dyn # perform operation
fnmadd.h f13, f21, f3, f23, rdn # perform operation
fnmadd.h f13, f21, f3, f23, rmm # perform operation
fnmadd.h f13, f21, f3, f23, rne # perform operation
fnmadd.h f13, f21, f3, f23, rtz # perform operation
fnmadd.h f13, f21, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x58b4)
li x11, 0x46fc5e0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0xcfd79f2a # load x3 with value 0xcfd79f2a
sw x3, 0(x2) # store 0xcfd79f2a in memory
flh f6, 0(x2) # load 0xcfd79f2a from memory into f6
fnmadd.h f11, f29, f25, f6, dyn # perform operation
fnmadd.h f11, f29, f25, f6, rdn # perform operation
fnmadd.h f11, f29, f25, f6, rmm # perform operation
fnmadd.h f11, f29, f25, f6, rne # perform operation
fnmadd.h f11, f29, f25, f6, rtz # perform operation
fnmadd.h f11, f29, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc93a)
li x14, 0x74becee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
li x3, 0xb319c1e2 # load x3 with value 0xb319c1e2
sw x3, 0(x2) # store 0xb319c1e2 in memory
flh f30, 0(x2) # load 0xb319c1e2 from memory into f30
fnmadd.h f14, f26, f21, f30, dyn # perform operation
fnmadd.h f14, f26, f21, f30, rdn # perform operation
fnmadd.h f14, f26, f21, f30, rmm # perform operation
fnmadd.h f14, f26, f21, f30, rne # perform operation
fnmadd.h f14, f26, f21, f30, rtz # perform operation
fnmadd.h f14, f26, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x0)
li x6, 0x14924b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x8729c0e6 # load x3 with value 0x8729c0e6
sw x3, 0(x2) # store 0x8729c0e6 in memory
flh f12, 0(x2) # load 0x8729c0e6 from memory into f12
fnmadd.h f6, f8, f5, f12, dyn # perform operation
fnmadd.h f6, f8, f5, f12, rdn # perform operation
fnmadd.h f6, f8, f5, f12, rmm # perform operation
fnmadd.h f6, f8, f5, f12, rne # perform operation
fnmadd.h f6, f8, f5, f12, rtz # perform operation
fnmadd.h f6, f8, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f8, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8000)
li x18, 0xd1d229bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
li x3, 0xcc3a9c94 # load x3 with value 0xcc3a9c94
sw x3, 0(x2) # store 0xcc3a9c94 in memory
flh f30, 0(x2) # load 0xcc3a9c94 from memory into f30
fnmadd.h f18, f26, f9, f30, dyn # perform operation
fnmadd.h f18, f26, f9, f30, rdn # perform operation
fnmadd.h f18, f26, f9, f30, rmm # perform operation
fnmadd.h f18, f26, f9, f30, rne # perform operation
fnmadd.h f18, f26, f9, f30, rtz # perform operation
fnmadd.h f18, f26, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3c00)
li x23, 0xf385b5ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0x2978adbb # load x3 with value 0x2978adbb
sw x3, 0(x2) # store 0x2978adbb in memory
flh f1, 0(x2) # load 0x2978adbb from memory into f1
fnmadd.h f23, f7, f31, f1, dyn # perform operation
fnmadd.h f23, f7, f31, f1, rdn # perform operation
fnmadd.h f23, f7, f31, f1, rmm # perform operation
fnmadd.h f23, f7, f31, f1, rne # perform operation
fnmadd.h f23, f7, f31, f1, rtz # perform operation
fnmadd.h f23, f7, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbc00)
li x1, 0xa84dcac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x8bcca8b7 # load x3 with value 0x8bcca8b7
sw x3, 0(x2) # store 0x8bcca8b7 in memory
flh f2, 0(x2) # load 0x8bcca8b7 from memory into f2
fnmadd.h f1, f22, f30, f2, dyn # perform operation
fnmadd.h f1, f22, f30, f2, rdn # perform operation
fnmadd.h f1, f22, f30, f2, rmm # perform operation
fnmadd.h f1, f22, f30, f2, rne # perform operation
fnmadd.h f1, f22, f30, f2, rtz # perform operation
fnmadd.h f1, f22, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f22, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3e00)
li x21, 0x82d5419b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0xc1e9a0e4 # load x3 with value 0xc1e9a0e4
sw x3, 0(x2) # store 0xc1e9a0e4 in memory
flh f10, 0(x2) # load 0xc1e9a0e4 from memory into f10
fnmadd.h f21, f13, f8, f10, dyn # perform operation
fnmadd.h f21, f13, f8, f10, rdn # perform operation
fnmadd.h f21, f13, f8, f10, rmm # perform operation
fnmadd.h f21, f13, f8, f10, rne # perform operation
fnmadd.h f21, f13, f8, f10, rtz # perform operation
fnmadd.h f21, f13, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbe00)
li x25, 0x94a9d736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
li x3, 0xa3ef8a34 # load x3 with value 0xa3ef8a34
sw x3, 0(x2) # store 0xa3ef8a34 in memory
flh f27, 0(x2) # load 0xa3ef8a34 from memory into f27
fnmadd.h f25, f23, f10, f27, dyn # perform operation
fnmadd.h f25, f23, f10, f27, rdn # perform operation
fnmadd.h f25, f23, f10, f27, rmm # perform operation
fnmadd.h f25, f23, f10, f27, rne # perform operation
fnmadd.h f25, f23, f10, f27, rtz # perform operation
fnmadd.h f25, f23, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x4000)
li x17, 0x91505e75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x67455adc # load x3 with value 0x67455adc
sw x3, 0(x2) # store 0x67455adc in memory
flh f16, 0(x2) # load 0x67455adc from memory into f16
fnmadd.h f17, f18, f23, f16, dyn # perform operation
fnmadd.h f17, f18, f23, f16, rdn # perform operation
fnmadd.h f17, f18, f23, f16, rmm # perform operation
fnmadd.h f17, f18, f23, f16, rne # perform operation
fnmadd.h f17, f18, f23, f16, rtz # perform operation
fnmadd.h f17, f18, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc000)
li x17, 0x14ee52c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x6d28fb57 # load x3 with value 0x6d28fb57
sw x3, 0(x2) # store 0x6d28fb57 in memory
flh f3, 0(x2) # load 0x6d28fb57 from memory into f3
fnmadd.h f17, f5, f20, f3, dyn # perform operation
fnmadd.h f17, f5, f20, f3, rdn # perform operation
fnmadd.h f17, f5, f20, f3, rmm # perform operation
fnmadd.h f17, f5, f20, f3, rne # perform operation
fnmadd.h f17, f5, f20, f3, rtz # perform operation
fnmadd.h f17, f5, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f5, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x400)
li x17, 0xc923d825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x379a3928 # load x3 with value 0x379a3928
sw x3, 0(x2) # store 0x379a3928 in memory
flh f4, 0(x2) # load 0x379a3928 from memory into f4
fnmadd.h f17, f13, f11, f4, dyn # perform operation
fnmadd.h f17, f13, f11, f4, rdn # perform operation
fnmadd.h f17, f13, f11, f4, rmm # perform operation
fnmadd.h f17, f13, f11, f4, rne # perform operation
fnmadd.h f17, f13, f11, f4, rtz # perform operation
fnmadd.h f17, f13, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8400)
li x4, 0x8f2ee358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
li x3, 0x59ac3783 # load x3 with value 0x59ac3783
sw x3, 0(x2) # store 0x59ac3783 in memory
flh f21, 0(x2) # load 0x59ac3783 from memory into f21
fnmadd.h f4, f9, f7, f21, dyn # perform operation
fnmadd.h f4, f9, f7, f21, rdn # perform operation
fnmadd.h f4, f9, f7, f21, rmm # perform operation
fnmadd.h f4, f9, f7, f21, rne # perform operation
fnmadd.h f4, f9, f7, f21, rtz # perform operation
fnmadd.h f4, f9, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f9, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7bff)
li x23, 0xc6b6ecd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x3ea3c340 # load x3 with value 0x3ea3c340
sw x3, 0(x2) # store 0x3ea3c340 in memory
flh f10, 0(x2) # load 0x3ea3c340 from memory into f10
fnmadd.h f23, f2, f6, f10, dyn # perform operation
fnmadd.h f23, f2, f6, f10, rdn # perform operation
fnmadd.h f23, f2, f6, f10, rmm # perform operation
fnmadd.h f23, f2, f6, f10, rne # perform operation
fnmadd.h f23, f2, f6, f10, rtz # perform operation
fnmadd.h f23, f2, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f2, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f2, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f2, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f2, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f2, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfbff)
li x17, 0xd29c800b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0xf7ff1180 # load x3 with value 0xf7ff1180
sw x3, 0(x2) # store 0xf7ff1180 in memory
flh f9, 0(x2) # load 0xf7ff1180 from memory into f9
fnmadd.h f17, f27, f31, f9, dyn # perform operation
fnmadd.h f17, f27, f31, f9, rdn # perform operation
fnmadd.h f17, f27, f31, f9, rmm # perform operation
fnmadd.h f17, f27, f31, f9, rne # perform operation
fnmadd.h f17, f27, f31, f9, rtz # perform operation
fnmadd.h f17, f27, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f27, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3ff)
li x7, 0xa6ee5234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0x5a50199d # load x3 with value 0x5a50199d
sw x3, 0(x2) # store 0x5a50199d in memory
flh f1, 0(x2) # load 0x5a50199d from memory into f1
fnmadd.h f7, f23, f20, f1, dyn # perform operation
fnmadd.h f7, f23, f20, f1, rdn # perform operation
fnmadd.h f7, f23, f20, f1, rmm # perform operation
fnmadd.h f7, f23, f20, f1, rne # perform operation
fnmadd.h f7, f23, f20, f1, rtz # perform operation
fnmadd.h f7, f23, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x83ff)
li x12, 0x6ddef02e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
li x3, 0xe53abb38 # load x3 with value 0xe53abb38
sw x3, 0(x2) # store 0xe53abb38 in memory
flh f18, 0(x2) # load 0xe53abb38 from memory into f18
fnmadd.h f12, f13, f11, f18, dyn # perform operation
fnmadd.h f12, f13, f11, f18, rdn # perform operation
fnmadd.h f12, f13, f11, f18, rmm # perform operation
fnmadd.h f12, f13, f11, f18, rne # perform operation
fnmadd.h f12, f13, f11, f18, rtz # perform operation
fnmadd.h f12, f13, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f13, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x200)
li x11, 0x3a792aa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
li x3, 0x6b4bb3f3 # load x3 with value 0x6b4bb3f3
sw x3, 0(x2) # store 0x6b4bb3f3 in memory
flh f21, 0(x2) # load 0x6b4bb3f3 from memory into f21
fnmadd.h f11, f23, f9, f21, dyn # perform operation
fnmadd.h f11, f23, f9, f21, rdn # perform operation
fnmadd.h f11, f23, f9, f21, rmm # perform operation
fnmadd.h f11, f23, f9, f21, rne # perform operation
fnmadd.h f11, f23, f9, f21, rtz # perform operation
fnmadd.h f11, f23, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f23, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f23, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8200)
li x17, 0x377ea378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0xf5d5277c # load x3 with value 0xf5d5277c
sw x3, 0(x2) # store 0xf5d5277c in memory
flh f31, 0(x2) # load 0xf5d5277c from memory into f31
fnmadd.h f17, f20, f29, f31, dyn # perform operation
fnmadd.h f17, f20, f29, f31, rdn # perform operation
fnmadd.h f17, f20, f29, f31, rmm # perform operation
fnmadd.h f17, f20, f29, f31, rne # perform operation
fnmadd.h f17, f20, f29, f31, rtz # perform operation
fnmadd.h f17, f20, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x1)
li x13, 0x2c584875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f4, 0(x2) # load 0x00007e00 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x05443b07 # load x3 with value 0x05443b07
sw x3, 0(x2) # store 0x05443b07 in memory
flh f18, 0(x2) # load 0x05443b07 from memory into f18
fnmadd.h f13, f4, f7, f18, dyn # perform operation
fnmadd.h f13, f4, f7, f18, rdn # perform operation
fnmadd.h f13, f4, f7, f18, rmm # perform operation
fnmadd.h f13, f4, f7, f18, rne # perform operation
fnmadd.h f13, f4, f7, f18, rtz # perform operation
fnmadd.h f13, f4, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f4, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8001)
li x13, 0x39a18030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0xcb2f3a01 # load x3 with value 0xcb2f3a01
sw x3, 0(x2) # store 0xcb2f3a01 in memory
flh f1, 0(x2) # load 0xcb2f3a01 from memory into f1
fnmadd.h f13, f5, f19, f1, dyn # perform operation
fnmadd.h f13, f5, f19, f1, rdn # perform operation
fnmadd.h f13, f5, f19, f1, rmm # perform operation
fnmadd.h f13, f5, f19, f1, rne # perform operation
fnmadd.h f13, f5, f19, f1, rtz # perform operation
fnmadd.h f13, f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c00)
li x15, 0x2b554107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x4a655f6a # load x3 with value 0x4a655f6a
sw x3, 0(x2) # store 0x4a655f6a in memory
flh f25, 0(x2) # load 0x4a655f6a from memory into f25
fnmadd.h f15, f30, f20, f25, dyn # perform operation
fnmadd.h f15, f30, f20, f25, rdn # perform operation
fnmadd.h f15, f30, f20, f25, rmm # perform operation
fnmadd.h f15, f30, f20, f25, rne # perform operation
fnmadd.h f15, f30, f20, f25, rtz # perform operation
fnmadd.h f15, f30, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc00)
li x29, 0xf6c7cee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
li x3, 0x8dc5c425 # load x3 with value 0x8dc5c425
sw x3, 0(x2) # store 0x8dc5c425 in memory
flh f6, 0(x2) # load 0x8dc5c425 from memory into f6
fnmadd.h f29, f8, f10, f6, dyn # perform operation
fnmadd.h f29, f8, f10, f6, rdn # perform operation
fnmadd.h f29, f8, f10, f6, rmm # perform operation
fnmadd.h f29, f8, f10, f6, rne # perform operation
fnmadd.h f29, f8, f10, f6, rtz # perform operation
fnmadd.h f29, f8, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f8, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f8, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f8, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f8, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f8, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7e00)
li x10, 0xa1031bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
li x3, 0x423c9f60 # load x3 with value 0x423c9f60
sw x3, 0(x2) # store 0x423c9f60 in memory
flh f9, 0(x2) # load 0x423c9f60 from memory into f9
fnmadd.h f10, f28, f1, f9, dyn # perform operation
fnmadd.h f10, f28, f1, f9, rdn # perform operation
fnmadd.h f10, f28, f1, f9, rmm # perform operation
fnmadd.h f10, f28, f1, f9, rne # perform operation
fnmadd.h f10, f28, f1, f9, rtz # perform operation
fnmadd.h f10, f28, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7fff)
li x24, 0xdfa1edc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f4, 0(x2) # load 0x00007fff from memory into f4
li x3, 0x19169a6b # load x3 with value 0x19169a6b
sw x3, 0(x2) # store 0x19169a6b in memory
flh f20, 0(x2) # load 0x19169a6b from memory into f20
fnmadd.h f24, f27, f4, f20, dyn # perform operation
fnmadd.h f24, f27, f4, f20, rdn # perform operation
fnmadd.h f24, f27, f4, f20, rmm # perform operation
fnmadd.h f24, f27, f4, f20, rne # perform operation
fnmadd.h f24, f27, f4, f20, rtz # perform operation
fnmadd.h f24, f27, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c01)
li x14, 0xe88796af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
li x3, 0x149c0d36 # load x3 with value 0x149c0d36
sw x3, 0(x2) # store 0x149c0d36 in memory
flh f29, 0(x2) # load 0x149c0d36 from memory into f29
fnmadd.h f14, f30, f28, f29, dyn # perform operation
fnmadd.h f14, f30, f28, f29, rdn # perform operation
fnmadd.h f14, f30, f28, f29, rmm # perform operation
fnmadd.h f14, f30, f28, f29, rne # perform operation
fnmadd.h f14, f30, f28, f29, rtz # perform operation
fnmadd.h f14, f30, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7dff)
li x27, 0x1f8a0a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0x5c588c53 # load x3 with value 0x5c588c53
sw x3, 0(x2) # store 0x5c588c53 in memory
flh f21, 0(x2) # load 0x5c588c53 from memory into f21
fnmadd.h f27, f13, f4, f21, dyn # perform operation
fnmadd.h f27, f13, f4, f21, rdn # perform operation
fnmadd.h f27, f13, f4, f21, rmm # perform operation
fnmadd.h f27, f13, f4, f21, rne # perform operation
fnmadd.h f27, f13, f4, f21, rtz # perform operation
fnmadd.h f27, f13, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x58b4)
li x1, 0x4f37a1c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
li x3, 0x208a29b1 # load x3 with value 0x208a29b1
sw x3, 0(x2) # store 0x208a29b1 in memory
flh f6, 0(x2) # load 0x208a29b1 from memory into f6
fnmadd.h f1, f27, f11, f6, dyn # perform operation
fnmadd.h f1, f27, f11, f6, rdn # perform operation
fnmadd.h f1, f27, f11, f6, rmm # perform operation
fnmadd.h f1, f27, f11, f6, rne # perform operation
fnmadd.h f1, f27, f11, f6, rtz # perform operation
fnmadd.h f1, f27, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f27, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc93a)
li x24, 0xa7e62bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
li x3, 0xbdda72e6 # load x3 with value 0xbdda72e6
sw x3, 0(x2) # store 0xbdda72e6 in memory
flh f18, 0(x2) # load 0xbdda72e6 from memory into f18
fnmadd.h f24, f2, f7, f18, dyn # perform operation
fnmadd.h f24, f2, f7, f18, rdn # perform operation
fnmadd.h f24, f2, f7, f18, rmm # perform operation
fnmadd.h f24, f2, f7, f18, rne # perform operation
fnmadd.h f24, f2, f7, f18, rtz # perform operation
fnmadd.h f24, f2, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x0)
li x20, 0x7a54b3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x207ec040 # load x3 with value 0x207ec040
sw x3, 0(x2) # store 0x207ec040 in memory
flh f26, 0(x2) # load 0x207ec040 from memory into f26
fnmadd.h f20, f19, f13, f26, dyn # perform operation
fnmadd.h f20, f19, f13, f26, rdn # perform operation
fnmadd.h f20, f19, f13, f26, rmm # perform operation
fnmadd.h f20, f19, f13, f26, rne # perform operation
fnmadd.h f20, f19, f13, f26, rtz # perform operation
fnmadd.h f20, f19, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8000)
li x31, 0xbf2951ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
li x3, 0x32b55a01 # load x3 with value 0x32b55a01
sw x3, 0(x2) # store 0x32b55a01 in memory
flh f11, 0(x2) # load 0x32b55a01 from memory into f11
fnmadd.h f31, f14, f24, f11, dyn # perform operation
fnmadd.h f31, f14, f24, f11, rdn # perform operation
fnmadd.h f31, f14, f24, f11, rmm # perform operation
fnmadd.h f31, f14, f24, f11, rne # perform operation
fnmadd.h f31, f14, f24, f11, rtz # perform operation
fnmadd.h f31, f14, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f14, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3c00)
li x29, 0x83a6f506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0xf1b00a38 # load x3 with value 0xf1b00a38
sw x3, 0(x2) # store 0xf1b00a38 in memory
flh f4, 0(x2) # load 0xf1b00a38 from memory into f4
fnmadd.h f29, f13, f3, f4, dyn # perform operation
fnmadd.h f29, f13, f3, f4, rdn # perform operation
fnmadd.h f29, f13, f3, f4, rmm # perform operation
fnmadd.h f29, f13, f3, f4, rne # perform operation
fnmadd.h f29, f13, f3, f4, rtz # perform operation
fnmadd.h f29, f13, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbc00)
li x27, 0x2ef99638 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x67e89347 # load x3 with value 0x67e89347
sw x3, 0(x2) # store 0x67e89347 in memory
flh f11, 0(x2) # load 0x67e89347 from memory into f11
fnmadd.h f27, f26, f21, f11, dyn # perform operation
fnmadd.h f27, f26, f21, f11, rdn # perform operation
fnmadd.h f27, f26, f21, f11, rmm # perform operation
fnmadd.h f27, f26, f21, f11, rne # perform operation
fnmadd.h f27, f26, f21, f11, rtz # perform operation
fnmadd.h f27, f26, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3e00)
li x23, 0x0f25cb5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
li x3, 0x5dbc5612 # load x3 with value 0x5dbc5612
sw x3, 0(x2) # store 0x5dbc5612 in memory
flh f9, 0(x2) # load 0x5dbc5612 from memory into f9
fnmadd.h f23, f13, f14, f9, dyn # perform operation
fnmadd.h f23, f13, f14, f9, rdn # perform operation
fnmadd.h f23, f13, f14, f9, rmm # perform operation
fnmadd.h f23, f13, f14, f9, rne # perform operation
fnmadd.h f23, f13, f14, f9, rtz # perform operation
fnmadd.h f23, f13, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbe00)
li x6, 0x4ae8d823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
li x3, 0x38e9aa06 # load x3 with value 0x38e9aa06
sw x3, 0(x2) # store 0x38e9aa06 in memory
flh f18, 0(x2) # load 0x38e9aa06 from memory into f18
fnmadd.h f6, f29, f8, f18, dyn # perform operation
fnmadd.h f6, f29, f8, f18, rdn # perform operation
fnmadd.h f6, f29, f8, f18, rmm # perform operation
fnmadd.h f6, f29, f8, f18, rne # perform operation
fnmadd.h f6, f29, f8, f18, rtz # perform operation
fnmadd.h f6, f29, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x4000)
li x14, 0xc2f0d9f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
li x3, 0x3417fd2d # load x3 with value 0x3417fd2d
sw x3, 0(x2) # store 0x3417fd2d in memory
flh f15, 0(x2) # load 0x3417fd2d from memory into f15
fnmadd.h f14, f29, f3, f15, dyn # perform operation
fnmadd.h f14, f29, f3, f15, rdn # perform operation
fnmadd.h f14, f29, f3, f15, rmm # perform operation
fnmadd.h f14, f29, f3, f15, rne # perform operation
fnmadd.h f14, f29, f3, f15, rtz # perform operation
fnmadd.h f14, f29, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc000)
li x20, 0xf97aae49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0xa3690687 # load x3 with value 0xa3690687
sw x3, 0(x2) # store 0xa3690687 in memory
flh f12, 0(x2) # load 0xa3690687 from memory into f12
fnmadd.h f20, f29, f8, f12, dyn # perform operation
fnmadd.h f20, f29, f8, f12, rdn # perform operation
fnmadd.h f20, f29, f8, f12, rmm # perform operation
fnmadd.h f20, f29, f8, f12, rne # perform operation
fnmadd.h f20, f29, f8, f12, rtz # perform operation
fnmadd.h f20, f29, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f29, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f29, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f29, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f29, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f29, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x400)
li x21, 0xd83be52c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x8a1af791 # load x3 with value 0x8a1af791
sw x3, 0(x2) # store 0x8a1af791 in memory
flh f6, 0(x2) # load 0x8a1af791 from memory into f6
fnmadd.h f21, f14, f10, f6, dyn # perform operation
fnmadd.h f21, f14, f10, f6, rdn # perform operation
fnmadd.h f21, f14, f10, f6, rmm # perform operation
fnmadd.h f21, f14, f10, f6, rne # perform operation
fnmadd.h f21, f14, f10, f6, rtz # perform operation
fnmadd.h f21, f14, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8400)
li x25, 0x6b3dfee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0xabce1995 # load x3 with value 0xabce1995
sw x3, 0(x2) # store 0xabce1995 in memory
flh f26, 0(x2) # load 0xabce1995 from memory into f26
fnmadd.h f25, f6, f15, f26, dyn # perform operation
fnmadd.h f25, f6, f15, f26, rdn # perform operation
fnmadd.h f25, f6, f15, f26, rmm # perform operation
fnmadd.h f25, f6, f15, f26, rne # perform operation
fnmadd.h f25, f6, f15, f26, rtz # perform operation
fnmadd.h f25, f6, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7bff)
li x7, 0xab705aec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
li x3, 0x87aa6c23 # load x3 with value 0x87aa6c23
sw x3, 0(x2) # store 0x87aa6c23 in memory
flh f31, 0(x2) # load 0x87aa6c23 from memory into f31
fnmadd.h f7, f6, f14, f31, dyn # perform operation
fnmadd.h f7, f6, f14, f31, rdn # perform operation
fnmadd.h f7, f6, f14, f31, rmm # perform operation
fnmadd.h f7, f6, f14, f31, rne # perform operation
fnmadd.h f7, f6, f14, f31, rtz # perform operation
fnmadd.h f7, f6, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfbff)
li x11, 0xe28f0e98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
li x3, 0xc3fe646e # load x3 with value 0xc3fe646e
sw x3, 0(x2) # store 0xc3fe646e in memory
flh f1, 0(x2) # load 0xc3fe646e from memory into f1
fnmadd.h f11, f5, f19, f1, dyn # perform operation
fnmadd.h f11, f5, f19, f1, rdn # perform operation
fnmadd.h f11, f5, f19, f1, rmm # perform operation
fnmadd.h f11, f5, f19, f1, rne # perform operation
fnmadd.h f11, f5, f19, f1, rtz # perform operation
fnmadd.h f11, f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3ff)
li x22, 0xcf5e018c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
li x3, 0x86b7fdab # load x3 with value 0x86b7fdab
sw x3, 0(x2) # store 0x86b7fdab in memory
flh f9, 0(x2) # load 0x86b7fdab from memory into f9
fnmadd.h f22, f23, f8, f9, dyn # perform operation
fnmadd.h f22, f23, f8, f9, rdn # perform operation
fnmadd.h f22, f23, f8, f9, rmm # perform operation
fnmadd.h f22, f23, f8, f9, rne # perform operation
fnmadd.h f22, f23, f8, f9, rtz # perform operation
fnmadd.h f22, f23, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x83ff)
li x11, 0x3fb11810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0x785a6b5f # load x3 with value 0x785a6b5f
sw x3, 0(x2) # store 0x785a6b5f in memory
flh f26, 0(x2) # load 0x785a6b5f from memory into f26
fnmadd.h f11, f9, f25, f26, dyn # perform operation
fnmadd.h f11, f9, f25, f26, rdn # perform operation
fnmadd.h f11, f9, f25, f26, rmm # perform operation
fnmadd.h f11, f9, f25, f26, rne # perform operation
fnmadd.h f11, f9, f25, f26, rtz # perform operation
fnmadd.h f11, f9, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x200)
li x29, 0x01797bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0x6205938e # load x3 with value 0x6205938e
sw x3, 0(x2) # store 0x6205938e in memory
flh f12, 0(x2) # load 0x6205938e from memory into f12
fnmadd.h f29, f15, f18, f12, dyn # perform operation
fnmadd.h f29, f15, f18, f12, rdn # perform operation
fnmadd.h f29, f15, f18, f12, rmm # perform operation
fnmadd.h f29, f15, f18, f12, rne # perform operation
fnmadd.h f29, f15, f18, f12, rtz # perform operation
fnmadd.h f29, f15, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8200)
li x19, 0x5e2baf20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
li x3, 0xa36f4b82 # load x3 with value 0xa36f4b82
sw x3, 0(x2) # store 0xa36f4b82 in memory
flh f30, 0(x2) # load 0xa36f4b82 from memory into f30
fnmadd.h f19, f18, f9, f30, dyn # perform operation
fnmadd.h f19, f18, f9, f30, rdn # perform operation
fnmadd.h f19, f18, f9, f30, rmm # perform operation
fnmadd.h f19, f18, f9, f30, rne # perform operation
fnmadd.h f19, f18, f9, f30, rtz # perform operation
fnmadd.h f19, f18, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x1)
li x18, 0x96e2d926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x9897c9d0 # load x3 with value 0x9897c9d0
sw x3, 0(x2) # store 0x9897c9d0 in memory
flh f4, 0(x2) # load 0x9897c9d0 from memory into f4
fnmadd.h f18, f3, f21, f4, dyn # perform operation
fnmadd.h f18, f3, f21, f4, rdn # perform operation
fnmadd.h f18, f3, f21, f4, rmm # perform operation
fnmadd.h f18, f3, f21, f4, rne # perform operation
fnmadd.h f18, f3, f21, f4, rtz # perform operation
fnmadd.h f18, f3, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8001)
li x31, 0xf7ddf320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
li x3, 0x67ec7689 # load x3 with value 0x67ec7689
sw x3, 0(x2) # store 0x67ec7689 in memory
flh f20, 0(x2) # load 0x67ec7689 from memory into f20
fnmadd.h f31, f9, f13, f20, dyn # perform operation
fnmadd.h f31, f9, f13, f20, rdn # perform operation
fnmadd.h f31, f9, f13, f20, rmm # perform operation
fnmadd.h f31, f9, f13, f20, rne # perform operation
fnmadd.h f31, f9, f13, f20, rtz # perform operation
fnmadd.h f31, f9, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c00)
li x25, 0xac77234b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x98c2b2f5 # load x3 with value 0x98c2b2f5
sw x3, 0(x2) # store 0x98c2b2f5 in memory
flh f14, 0(x2) # load 0x98c2b2f5 from memory into f14
fnmadd.h f25, f6, f30, f14, dyn # perform operation
fnmadd.h f25, f6, f30, f14, rdn # perform operation
fnmadd.h f25, f6, f30, f14, rmm # perform operation
fnmadd.h f25, f6, f30, f14, rne # perform operation
fnmadd.h f25, f6, f30, f14, rtz # perform operation
fnmadd.h f25, f6, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc00)
li x29, 0xa6f510cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0xc1b5f55f # load x3 with value 0xc1b5f55f
sw x3, 0(x2) # store 0xc1b5f55f in memory
flh f23, 0(x2) # load 0xc1b5f55f from memory into f23
fnmadd.h f29, f13, f11, f23, dyn # perform operation
fnmadd.h f29, f13, f11, f23, rdn # perform operation
fnmadd.h f29, f13, f11, f23, rmm # perform operation
fnmadd.h f29, f13, f11, f23, rne # perform operation
fnmadd.h f29, f13, f11, f23, rtz # perform operation
fnmadd.h f29, f13, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7e00)
li x2, 0x9c22b576 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f21, 0(x2) # load 0x00007e00 from memory into f21
li x3, 0x083e231d # load x3 with value 0x083e231d
sw x3, 0(x2) # store 0x083e231d in memory
flh f20, 0(x2) # load 0x083e231d from memory into f20
fnmadd.h f2, f31, f21, f20, dyn # perform operation
fnmadd.h f2, f31, f21, f20, rdn # perform operation
fnmadd.h f2, f31, f21, f20, rmm # perform operation
fnmadd.h f2, f31, f21, f20, rne # perform operation
fnmadd.h f2, f31, f21, f20, rtz # perform operation
fnmadd.h f2, f31, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7fff)
li x29, 0x9bf218ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0xbbc52afc # load x3 with value 0xbbc52afc
sw x3, 0(x2) # store 0xbbc52afc in memory
flh f12, 0(x2) # load 0xbbc52afc from memory into f12
fnmadd.h f29, f1, f23, f12, dyn # perform operation
fnmadd.h f29, f1, f23, f12, rdn # perform operation
fnmadd.h f29, f1, f23, f12, rmm # perform operation
fnmadd.h f29, f1, f23, f12, rne # perform operation
fnmadd.h f29, f1, f23, f12, rtz # perform operation
fnmadd.h f29, f1, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c01)
li x12, 0x6b658e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0xe69719e9 # load x3 with value 0xe69719e9
sw x3, 0(x2) # store 0xe69719e9 in memory
flh f15, 0(x2) # load 0xe69719e9 from memory into f15
fnmadd.h f12, f14, f20, f15, dyn # perform operation
fnmadd.h f12, f14, f20, f15, rdn # perform operation
fnmadd.h f12, f14, f20, f15, rmm # perform operation
fnmadd.h f12, f14, f20, f15, rne # perform operation
fnmadd.h f12, f14, f20, f15, rtz # perform operation
fnmadd.h f12, f14, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7dff)
li x6, 0x2bc28e57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
li x3, 0xa2db4576 # load x3 with value 0xa2db4576
sw x3, 0(x2) # store 0xa2db4576 in memory
flh f28, 0(x2) # load 0xa2db4576 from memory into f28
fnmadd.h f6, f24, f30, f28, dyn # perform operation
fnmadd.h f6, f24, f30, f28, rdn # perform operation
fnmadd.h f6, f24, f30, f28, rmm # perform operation
fnmadd.h f6, f24, f30, f28, rne # perform operation
fnmadd.h f6, f24, f30, f28, rtz # perform operation
fnmadd.h f6, f24, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x58b4)
li x24, 0x2d27f5db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
li x3, 0x565e8f6e # load x3 with value 0x565e8f6e
sw x3, 0(x2) # store 0x565e8f6e in memory
flh f15, 0(x2) # load 0x565e8f6e from memory into f15
fnmadd.h f24, f28, f14, f15, dyn # perform operation
fnmadd.h f24, f28, f14, f15, rdn # perform operation
fnmadd.h f24, f28, f14, f15, rmm # perform operation
fnmadd.h f24, f28, f14, f15, rne # perform operation
fnmadd.h f24, f28, f14, f15, rtz # perform operation
fnmadd.h f24, f28, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f28, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc93a)
li x4, 0x36e8f5e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
li x3, 0xf2c939e4 # load x3 with value 0xf2c939e4
sw x3, 0(x2) # store 0xf2c939e4 in memory
flh f3, 0(x2) # load 0xf2c939e4 from memory into f3
fnmadd.h f4, f5, f28, f3, dyn # perform operation
fnmadd.h f4, f5, f28, f3, rdn # perform operation
fnmadd.h f4, f5, f28, f3, rmm # perform operation
fnmadd.h f4, f5, f28, f3, rne # perform operation
fnmadd.h f4, f5, f28, f3, rtz # perform operation
fnmadd.h f4, f5, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f5, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x0)
li x9, 0xedbd642e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x1417d796 # load x3 with value 0x1417d796
sw x3, 0(x2) # store 0x1417d796 in memory
flh f25, 0(x2) # load 0x1417d796 from memory into f25
fnmadd.h f9, f21, f31, f25, dyn # perform operation
fnmadd.h f9, f21, f31, f25, rdn # perform operation
fnmadd.h f9, f21, f31, f25, rmm # perform operation
fnmadd.h f9, f21, f31, f25, rne # perform operation
fnmadd.h f9, f21, f31, f25, rtz # perform operation
fnmadd.h f9, f21, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8000)
li x31, 0x7b2d1b74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
li x3, 0xd969ada7 # load x3 with value 0xd969ada7
sw x3, 0(x2) # store 0xd969ada7 in memory
flh f10, 0(x2) # load 0xd969ada7 from memory into f10
fnmadd.h f31, f29, f13, f10, dyn # perform operation
fnmadd.h f31, f29, f13, f10, rdn # perform operation
fnmadd.h f31, f29, f13, f10, rmm # perform operation
fnmadd.h f31, f29, f13, f10, rne # perform operation
fnmadd.h f31, f29, f13, f10, rtz # perform operation
fnmadd.h f31, f29, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3c00)
li x4, 0x5829b72c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0xf5f0b761 # load x3 with value 0xf5f0b761
sw x3, 0(x2) # store 0xf5f0b761 in memory
flh f13, 0(x2) # load 0xf5f0b761 from memory into f13
fnmadd.h f4, f27, f6, f13, dyn # perform operation
fnmadd.h f4, f27, f6, f13, rdn # perform operation
fnmadd.h f4, f27, f6, f13, rmm # perform operation
fnmadd.h f4, f27, f6, f13, rne # perform operation
fnmadd.h f4, f27, f6, f13, rtz # perform operation
fnmadd.h f4, f27, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbc00)
li x9, 0x810841b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
li x3, 0x5aa92345 # load x3 with value 0x5aa92345
sw x3, 0(x2) # store 0x5aa92345 in memory
flh f24, 0(x2) # load 0x5aa92345 from memory into f24
fnmadd.h f9, f30, f20, f24, dyn # perform operation
fnmadd.h f9, f30, f20, f24, rdn # perform operation
fnmadd.h f9, f30, f20, f24, rmm # perform operation
fnmadd.h f9, f30, f20, f24, rne # perform operation
fnmadd.h f9, f30, f20, f24, rtz # perform operation
fnmadd.h f9, f30, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3e00)
li x26, 0x224c7d84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0xf1e6351a # load x3 with value 0xf1e6351a
sw x3, 0(x2) # store 0xf1e6351a in memory
flh f8, 0(x2) # load 0xf1e6351a from memory into f8
fnmadd.h f26, f27, f3, f8, dyn # perform operation
fnmadd.h f26, f27, f3, f8, rdn # perform operation
fnmadd.h f26, f27, f3, f8, rmm # perform operation
fnmadd.h f26, f27, f3, f8, rne # perform operation
fnmadd.h f26, f27, f3, f8, rtz # perform operation
fnmadd.h f26, f27, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbe00)
li x30, 0xcfd5e4fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x16eeb4c1 # load x3 with value 0x16eeb4c1
sw x3, 0(x2) # store 0x16eeb4c1 in memory
flh f28, 0(x2) # load 0x16eeb4c1 from memory into f28
fnmadd.h f30, f13, f18, f28, dyn # perform operation
fnmadd.h f30, f13, f18, f28, rdn # perform operation
fnmadd.h f30, f13, f18, f28, rmm # perform operation
fnmadd.h f30, f13, f18, f28, rne # perform operation
fnmadd.h f30, f13, f18, f28, rtz # perform operation
fnmadd.h f30, f13, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x4000)
li x26, 0x87c63290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
li x3, 0x0d95ad12 # load x3 with value 0x0d95ad12
sw x3, 0(x2) # store 0x0d95ad12 in memory
flh f18, 0(x2) # load 0x0d95ad12 from memory into f18
fnmadd.h f26, f10, f7, f18, dyn # perform operation
fnmadd.h f26, f10, f7, f18, rdn # perform operation
fnmadd.h f26, f10, f7, f18, rmm # perform operation
fnmadd.h f26, f10, f7, f18, rne # perform operation
fnmadd.h f26, f10, f7, f18, rtz # perform operation
fnmadd.h f26, f10, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc000)
li x10, 0xe0c06d90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0x490e9864 # load x3 with value 0x490e9864
sw x3, 0(x2) # store 0x490e9864 in memory
flh f9, 0(x2) # load 0x490e9864 from memory into f9
fnmadd.h f10, f20, f17, f9, dyn # perform operation
fnmadd.h f10, f20, f17, f9, rdn # perform operation
fnmadd.h f10, f20, f17, f9, rmm # perform operation
fnmadd.h f10, f20, f17, f9, rne # perform operation
fnmadd.h f10, f20, f17, f9, rtz # perform operation
fnmadd.h f10, f20, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x400)
li x10, 0x9cdb00a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0xc28e2f37 # load x3 with value 0xc28e2f37
sw x3, 0(x2) # store 0xc28e2f37 in memory
flh f22, 0(x2) # load 0xc28e2f37 from memory into f22
fnmadd.h f10, f23, f3, f22, dyn # perform operation
fnmadd.h f10, f23, f3, f22, rdn # perform operation
fnmadd.h f10, f23, f3, f22, rmm # perform operation
fnmadd.h f10, f23, f3, f22, rne # perform operation
fnmadd.h f10, f23, f3, f22, rtz # perform operation
fnmadd.h f10, f23, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8400)
li x16, 0x88931a51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0xb2cbbc63 # load x3 with value 0xb2cbbc63
sw x3, 0(x2) # store 0xb2cbbc63 in memory
flh f13, 0(x2) # load 0xb2cbbc63 from memory into f13
fnmadd.h f16, f24, f9, f13, dyn # perform operation
fnmadd.h f16, f24, f9, f13, rdn # perform operation
fnmadd.h f16, f24, f9, f13, rmm # perform operation
fnmadd.h f16, f24, f9, f13, rne # perform operation
fnmadd.h f16, f24, f9, f13, rtz # perform operation
fnmadd.h f16, f24, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7bff)
li x5, 0xb5acbf4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x45c9bbed # load x3 with value 0x45c9bbed
sw x3, 0(x2) # store 0x45c9bbed in memory
flh f27, 0(x2) # load 0x45c9bbed from memory into f27
fnmadd.h f5, f9, f16, f27, dyn # perform operation
fnmadd.h f5, f9, f16, f27, rdn # perform operation
fnmadd.h f5, f9, f16, f27, rmm # perform operation
fnmadd.h f5, f9, f16, f27, rne # perform operation
fnmadd.h f5, f9, f16, f27, rtz # perform operation
fnmadd.h f5, f9, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f9, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfbff)
li x11, 0x2e6eee17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0xe05362d5 # load x3 with value 0xe05362d5
sw x3, 0(x2) # store 0xe05362d5 in memory
flh f20, 0(x2) # load 0xe05362d5 from memory into f20
fnmadd.h f11, f21, f31, f20, dyn # perform operation
fnmadd.h f11, f21, f31, f20, rdn # perform operation
fnmadd.h f11, f21, f31, f20, rmm # perform operation
fnmadd.h f11, f21, f31, f20, rne # perform operation
fnmadd.h f11, f21, f31, f20, rtz # perform operation
fnmadd.h f11, f21, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3ff)
li x5, 0x7d637032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
li x3, 0x1501ac14 # load x3 with value 0x1501ac14
sw x3, 0(x2) # store 0x1501ac14 in memory
flh f21, 0(x2) # load 0x1501ac14 from memory into f21
fnmadd.h f5, f17, f10, f21, dyn # perform operation
fnmadd.h f5, f17, f10, f21, rdn # perform operation
fnmadd.h f5, f17, f10, f21, rmm # perform operation
fnmadd.h f5, f17, f10, f21, rne # perform operation
fnmadd.h f5, f17, f10, f21, rtz # perform operation
fnmadd.h f5, f17, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x83ff)
li x18, 0xc0ed2255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x14c49387 # load x3 with value 0x14c49387
sw x3, 0(x2) # store 0x14c49387 in memory
flh f3, 0(x2) # load 0x14c49387 from memory into f3
fnmadd.h f18, f16, f1, f3, dyn # perform operation
fnmadd.h f18, f16, f1, f3, rdn # perform operation
fnmadd.h f18, f16, f1, f3, rmm # perform operation
fnmadd.h f18, f16, f1, f3, rne # perform operation
fnmadd.h f18, f16, f1, f3, rtz # perform operation
fnmadd.h f18, f16, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x200)
li x10, 0x40dc97c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
li x3, 0x980197f6 # load x3 with value 0x980197f6
sw x3, 0(x2) # store 0x980197f6 in memory
flh f22, 0(x2) # load 0x980197f6 from memory into f22
fnmadd.h f10, f16, f31, f22, dyn # perform operation
fnmadd.h f10, f16, f31, f22, rdn # perform operation
fnmadd.h f10, f16, f31, f22, rmm # perform operation
fnmadd.h f10, f16, f31, f22, rne # perform operation
fnmadd.h f10, f16, f31, f22, rtz # perform operation
fnmadd.h f10, f16, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f16, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8200)
li x18, 0xccf87193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0x51771615 # load x3 with value 0x51771615
sw x3, 0(x2) # store 0x51771615 in memory
flh f23, 0(x2) # load 0x51771615 from memory into f23
fnmadd.h f18, f26, f16, f23, dyn # perform operation
fnmadd.h f18, f26, f16, f23, rdn # perform operation
fnmadd.h f18, f26, f16, f23, rmm # perform operation
fnmadd.h f18, f26, f16, f23, rne # perform operation
fnmadd.h f18, f26, f16, f23, rtz # perform operation
fnmadd.h f18, f26, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x1)
li x6, 0xa009bc4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x68b2157e # load x3 with value 0x68b2157e
sw x3, 0(x2) # store 0x68b2157e in memory
flh f18, 0(x2) # load 0x68b2157e from memory into f18
fnmadd.h f6, f2, f20, f18, dyn # perform operation
fnmadd.h f6, f2, f20, f18, rdn # perform operation
fnmadd.h f6, f2, f20, f18, rmm # perform operation
fnmadd.h f6, f2, f20, f18, rne # perform operation
fnmadd.h f6, f2, f20, f18, rtz # perform operation
fnmadd.h f6, f2, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f2, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f2, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f2, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f2, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f2, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8001)
li x14, 0xc615b949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
li x3, 0x0941c18e # load x3 with value 0x0941c18e
sw x3, 0(x2) # store 0x0941c18e in memory
flh f12, 0(x2) # load 0x0941c18e from memory into f12
fnmadd.h f14, f27, f18, f12, dyn # perform operation
fnmadd.h f14, f27, f18, f12, rdn # perform operation
fnmadd.h f14, f27, f18, f12, rmm # perform operation
fnmadd.h f14, f27, f18, f12, rne # perform operation
fnmadd.h f14, f27, f18, f12, rtz # perform operation
fnmadd.h f14, f27, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c00)
li x16, 0x61741dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0x35d604d9 # load x3 with value 0x35d604d9
sw x3, 0(x2) # store 0x35d604d9 in memory
flh f1, 0(x2) # load 0x35d604d9 from memory into f1
fnmadd.h f16, f11, f10, f1, dyn # perform operation
fnmadd.h f16, f11, f10, f1, rdn # perform operation
fnmadd.h f16, f11, f10, f1, rmm # perform operation
fnmadd.h f16, f11, f10, f1, rne # perform operation
fnmadd.h f16, f11, f10, f1, rtz # perform operation
fnmadd.h f16, f11, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc00)
li x27, 0x46976b55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0x483ff2ef # load x3 with value 0x483ff2ef
sw x3, 0(x2) # store 0x483ff2ef in memory
flh f3, 0(x2) # load 0x483ff2ef from memory into f3
fnmadd.h f27, f28, f20, f3, dyn # perform operation
fnmadd.h f27, f28, f20, f3, rdn # perform operation
fnmadd.h f27, f28, f20, f3, rmm # perform operation
fnmadd.h f27, f28, f20, f3, rne # perform operation
fnmadd.h f27, f28, f20, f3, rtz # perform operation
fnmadd.h f27, f28, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7e00)
li x17, 0x42964eac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
li x3, 0xbabe912f # load x3 with value 0xbabe912f
sw x3, 0(x2) # store 0xbabe912f in memory
flh f5, 0(x2) # load 0xbabe912f from memory into f5
fnmadd.h f17, f11, f22, f5, dyn # perform operation
fnmadd.h f17, f11, f22, f5, rdn # perform operation
fnmadd.h f17, f11, f22, f5, rmm # perform operation
fnmadd.h f17, f11, f22, f5, rne # perform operation
fnmadd.h f17, f11, f22, f5, rtz # perform operation
fnmadd.h f17, f11, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7fff)
li x28, 0x67175156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x2ef3a667 # load x3 with value 0x2ef3a667
sw x3, 0(x2) # store 0x2ef3a667 in memory
flh f19, 0(x2) # load 0x2ef3a667 from memory into f19
fnmadd.h f28, f15, f8, f19, dyn # perform operation
fnmadd.h f28, f15, f8, f19, rdn # perform operation
fnmadd.h f28, f15, f8, f19, rmm # perform operation
fnmadd.h f28, f15, f8, f19, rne # perform operation
fnmadd.h f28, f15, f8, f19, rtz # perform operation
fnmadd.h f28, f15, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c01)
li x9, 0xb3adc0c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
li x3, 0x97fc4a43 # load x3 with value 0x97fc4a43
sw x3, 0(x2) # store 0x97fc4a43 in memory
flh f19, 0(x2) # load 0x97fc4a43 from memory into f19
fnmadd.h f9, f4, f10, f19, dyn # perform operation
fnmadd.h f9, f4, f10, f19, rdn # perform operation
fnmadd.h f9, f4, f10, f19, rmm # perform operation
fnmadd.h f9, f4, f10, f19, rne # perform operation
fnmadd.h f9, f4, f10, f19, rtz # perform operation
fnmadd.h f9, f4, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f4, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7dff)
li x18, 0x8f23e07c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0x20da08ad # load x3 with value 0x20da08ad
sw x3, 0(x2) # store 0x20da08ad in memory
flh f24, 0(x2) # load 0x20da08ad from memory into f24
fnmadd.h f18, f16, f9, f24, dyn # perform operation
fnmadd.h f18, f16, f9, f24, rdn # perform operation
fnmadd.h f18, f16, f9, f24, rmm # perform operation
fnmadd.h f18, f16, f9, f24, rne # perform operation
fnmadd.h f18, f16, f9, f24, rtz # perform operation
fnmadd.h f18, f16, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x58b4)
li x9, 0x78e4aef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0x702db36e # load x3 with value 0x702db36e
sw x3, 0(x2) # store 0x702db36e in memory
flh f11, 0(x2) # load 0x702db36e from memory into f11
fnmadd.h f9, f1, f27, f11, dyn # perform operation
fnmadd.h f9, f1, f27, f11, rdn # perform operation
fnmadd.h f9, f1, f27, f11, rmm # perform operation
fnmadd.h f9, f1, f27, f11, rne # perform operation
fnmadd.h f9, f1, f27, f11, rtz # perform operation
fnmadd.h f9, f1, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc93a)
li x17, 0x7f4f5cf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
li x3, 0x88bfa8d3 # load x3 with value 0x88bfa8d3
sw x3, 0(x2) # store 0x88bfa8d3 in memory
flh f6, 0(x2) # load 0x88bfa8d3 from memory into f6
fnmadd.h f17, f11, f7, f6, dyn # perform operation
fnmadd.h f17, f11, f7, f6, rdn # perform operation
fnmadd.h f17, f11, f7, f6, rmm # perform operation
fnmadd.h f17, f11, f7, f6, rne # perform operation
fnmadd.h f17, f11, f7, f6, rtz # perform operation
fnmadd.h f17, f11, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x0)
li x16, 0xd73c2af6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xf1aa102c # load x3 with value 0xf1aa102c
sw x3, 0(x2) # store 0xf1aa102c in memory
flh f7, 0(x2) # load 0xf1aa102c from memory into f7
fnmadd.h f16, f3, f11, f7, dyn # perform operation
fnmadd.h f16, f3, f11, f7, rdn # perform operation
fnmadd.h f16, f3, f11, f7, rmm # perform operation
fnmadd.h f16, f3, f11, f7, rne # perform operation
fnmadd.h f16, f3, f11, f7, rtz # perform operation
fnmadd.h f16, f3, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8000)
li x6, 0xd4073e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
li x3, 0xd26fd51d # load x3 with value 0xd26fd51d
sw x3, 0(x2) # store 0xd26fd51d in memory
flh f13, 0(x2) # load 0xd26fd51d from memory into f13
fnmadd.h f6, f22, f3, f13, dyn # perform operation
fnmadd.h f6, f22, f3, f13, rdn # perform operation
fnmadd.h f6, f22, f3, f13, rmm # perform operation
fnmadd.h f6, f22, f3, f13, rne # perform operation
fnmadd.h f6, f22, f3, f13, rtz # perform operation
fnmadd.h f6, f22, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3c00)
li x6, 0xfcb49745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
li x3, 0xbf54dfdf # load x3 with value 0xbf54dfdf
sw x3, 0(x2) # store 0xbf54dfdf in memory
flh f1, 0(x2) # load 0xbf54dfdf from memory into f1
fnmadd.h f6, f22, f12, f1, dyn # perform operation
fnmadd.h f6, f22, f12, f1, rdn # perform operation
fnmadd.h f6, f22, f12, f1, rmm # perform operation
fnmadd.h f6, f22, f12, f1, rne # perform operation
fnmadd.h f6, f22, f12, f1, rtz # perform operation
fnmadd.h f6, f22, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbc00)
li x23, 0xbc4cba3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
li x3, 0x0c3842a5 # load x3 with value 0x0c3842a5
sw x3, 0(x2) # store 0x0c3842a5 in memory
flh f13, 0(x2) # load 0x0c3842a5 from memory into f13
fnmadd.h f23, f10, f18, f13, dyn # perform operation
fnmadd.h f23, f10, f18, f13, rdn # perform operation
fnmadd.h f23, f10, f18, f13, rmm # perform operation
fnmadd.h f23, f10, f18, f13, rne # perform operation
fnmadd.h f23, f10, f18, f13, rtz # perform operation
fnmadd.h f23, f10, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3e00)
li x18, 0x1fc0f747 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x8d72576f # load x3 with value 0x8d72576f
sw x3, 0(x2) # store 0x8d72576f in memory
flh f20, 0(x2) # load 0x8d72576f from memory into f20
fnmadd.h f18, f21, f15, f20, dyn # perform operation
fnmadd.h f18, f21, f15, f20, rdn # perform operation
fnmadd.h f18, f21, f15, f20, rmm # perform operation
fnmadd.h f18, f21, f15, f20, rne # perform operation
fnmadd.h f18, f21, f15, f20, rtz # perform operation
fnmadd.h f18, f21, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbe00)
li x27, 0x0aefd045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x0e3cb1d3 # load x3 with value 0x0e3cb1d3
sw x3, 0(x2) # store 0x0e3cb1d3 in memory
flh f16, 0(x2) # load 0x0e3cb1d3 from memory into f16
fnmadd.h f27, f22, f23, f16, dyn # perform operation
fnmadd.h f27, f22, f23, f16, rdn # perform operation
fnmadd.h f27, f22, f23, f16, rmm # perform operation
fnmadd.h f27, f22, f23, f16, rne # perform operation
fnmadd.h f27, f22, f23, f16, rtz # perform operation
fnmadd.h f27, f22, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x4000)
li x19, 0x04cd5d2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
li x3, 0xf7b961e0 # load x3 with value 0xf7b961e0
sw x3, 0(x2) # store 0xf7b961e0 in memory
flh f12, 0(x2) # load 0xf7b961e0 from memory into f12
fnmadd.h f19, f7, f2, f12, dyn # perform operation
fnmadd.h f19, f7, f2, f12, rdn # perform operation
fnmadd.h f19, f7, f2, f12, rmm # perform operation
fnmadd.h f19, f7, f2, f12, rne # perform operation
fnmadd.h f19, f7, f2, f12, rtz # perform operation
fnmadd.h f19, f7, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f7, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f7, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f7, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f7, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f7, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc000)
li x2, 0x6a55e7c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x27cdbf02 # load x3 with value 0x27cdbf02
sw x3, 0(x2) # store 0x27cdbf02 in memory
flh f1, 0(x2) # load 0x27cdbf02 from memory into f1
fnmadd.h f2, f6, f30, f1, dyn # perform operation
fnmadd.h f2, f6, f30, f1, rdn # perform operation
fnmadd.h f2, f6, f30, f1, rmm # perform operation
fnmadd.h f2, f6, f30, f1, rne # perform operation
fnmadd.h f2, f6, f30, f1, rtz # perform operation
fnmadd.h f2, f6, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f6, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f6, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f6, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f6, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f6, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x400)
li x19, 0x069a8d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0xfb3e8156 # load x3 with value 0xfb3e8156
sw x3, 0(x2) # store 0xfb3e8156 in memory
flh f15, 0(x2) # load 0xfb3e8156 from memory into f15
fnmadd.h f19, f21, f1, f15, dyn # perform operation
fnmadd.h f19, f21, f1, f15, rdn # perform operation
fnmadd.h f19, f21, f1, f15, rmm # perform operation
fnmadd.h f19, f21, f1, f15, rne # perform operation
fnmadd.h f19, f21, f1, f15, rtz # perform operation
fnmadd.h f19, f21, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8400)
li x6, 0xae4c901a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x2ae3a5af # load x3 with value 0x2ae3a5af
sw x3, 0(x2) # store 0x2ae3a5af in memory
flh f12, 0(x2) # load 0x2ae3a5af from memory into f12
fnmadd.h f6, f19, f25, f12, dyn # perform operation
fnmadd.h f6, f19, f25, f12, rdn # perform operation
fnmadd.h f6, f19, f25, f12, rmm # perform operation
fnmadd.h f6, f19, f25, f12, rne # perform operation
fnmadd.h f6, f19, f25, f12, rtz # perform operation
fnmadd.h f6, f19, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7bff)
li x7, 0x2a4b9286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0xa3dc5096 # load x3 with value 0xa3dc5096
sw x3, 0(x2) # store 0xa3dc5096 in memory
flh f11, 0(x2) # load 0xa3dc5096 from memory into f11
fnmadd.h f7, f12, f24, f11, dyn # perform operation
fnmadd.h f7, f12, f24, f11, rdn # perform operation
fnmadd.h f7, f12, f24, f11, rmm # perform operation
fnmadd.h f7, f12, f24, f11, rne # perform operation
fnmadd.h f7, f12, f24, f11, rtz # perform operation
fnmadd.h f7, f12, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfbff)
li x3, 0xe428dbfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0xd7872628 # load x3 with value 0xd7872628
sw x3, 0(x2) # store 0xd7872628 in memory
flh f24, 0(x2) # load 0xd7872628 from memory into f24
fnmadd.h f3, f2, f13, f24, dyn # perform operation
fnmadd.h f3, f2, f13, f24, rdn # perform operation
fnmadd.h f3, f2, f13, f24, rmm # perform operation
fnmadd.h f3, f2, f13, f24, rne # perform operation
fnmadd.h f3, f2, f13, f24, rtz # perform operation
fnmadd.h f3, f2, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3ff)
li x14, 0xbd64170b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
li x3, 0x839033d5 # load x3 with value 0x839033d5
sw x3, 0(x2) # store 0x839033d5 in memory
flh f8, 0(x2) # load 0x839033d5 from memory into f8
fnmadd.h f14, f4, f2, f8, dyn # perform operation
fnmadd.h f14, f4, f2, f8, rdn # perform operation
fnmadd.h f14, f4, f2, f8, rmm # perform operation
fnmadd.h f14, f4, f2, f8, rne # perform operation
fnmadd.h f14, f4, f2, f8, rtz # perform operation
fnmadd.h f14, f4, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f4, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f4, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f4, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f4, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f4, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x83ff)
li x27, 0xebf06f81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
li x3, 0x6ff7c877 # load x3 with value 0x6ff7c877
sw x3, 0(x2) # store 0x6ff7c877 in memory
flh f15, 0(x2) # load 0x6ff7c877 from memory into f15
fnmadd.h f27, f17, f7, f15, dyn # perform operation
fnmadd.h f27, f17, f7, f15, rdn # perform operation
fnmadd.h f27, f17, f7, f15, rmm # perform operation
fnmadd.h f27, f17, f7, f15, rne # perform operation
fnmadd.h f27, f17, f7, f15, rtz # perform operation
fnmadd.h f27, f17, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x200)
li x10, 0xdcde12cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
li x3, 0xa4104672 # load x3 with value 0xa4104672
sw x3, 0(x2) # store 0xa4104672 in memory
flh f27, 0(x2) # load 0xa4104672 from memory into f27
fnmadd.h f10, f4, f26, f27, dyn # perform operation
fnmadd.h f10, f4, f26, f27, rdn # perform operation
fnmadd.h f10, f4, f26, f27, rmm # perform operation
fnmadd.h f10, f4, f26, f27, rne # perform operation
fnmadd.h f10, f4, f26, f27, rtz # perform operation
fnmadd.h f10, f4, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8200)
li x27, 0xec599037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
li x3, 0x327bf2a9 # load x3 with value 0x327bf2a9
sw x3, 0(x2) # store 0x327bf2a9 in memory
flh f19, 0(x2) # load 0x327bf2a9 from memory into f19
fnmadd.h f27, f7, f5, f19, dyn # perform operation
fnmadd.h f27, f7, f5, f19, rdn # perform operation
fnmadd.h f27, f7, f5, f19, rmm # perform operation
fnmadd.h f27, f7, f5, f19, rne # perform operation
fnmadd.h f27, f7, f5, f19, rtz # perform operation
fnmadd.h f27, f7, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x1)
li x30, 0xf155a4e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x3801e5f3 # load x3 with value 0x3801e5f3
sw x3, 0(x2) # store 0x3801e5f3 in memory
flh f26, 0(x2) # load 0x3801e5f3 from memory into f26
fnmadd.h f30, f8, f24, f26, dyn # perform operation
fnmadd.h f30, f8, f24, f26, rdn # perform operation
fnmadd.h f30, f8, f24, f26, rmm # perform operation
fnmadd.h f30, f8, f24, f26, rne # perform operation
fnmadd.h f30, f8, f24, f26, rtz # perform operation
fnmadd.h f30, f8, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8001)
li x28, 0xaa21ecae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0xe97f37bc # load x3 with value 0xe97f37bc
sw x3, 0(x2) # store 0xe97f37bc in memory
flh f16, 0(x2) # load 0xe97f37bc from memory into f16
fnmadd.h f28, f23, f21, f16, dyn # perform operation
fnmadd.h f28, f23, f21, f16, rdn # perform operation
fnmadd.h f28, f23, f21, f16, rmm # perform operation
fnmadd.h f28, f23, f21, f16, rne # perform operation
fnmadd.h f28, f23, f21, f16, rtz # perform operation
fnmadd.h f28, f23, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f23, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f23, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f23, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f23, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f23, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c00)
li x6, 0x0a467a02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x27de11d1 # load x3 with value 0x27de11d1
sw x3, 0(x2) # store 0x27de11d1 in memory
flh f27, 0(x2) # load 0x27de11d1 from memory into f27
fnmadd.h f6, f16, f19, f27, dyn # perform operation
fnmadd.h f6, f16, f19, f27, rdn # perform operation
fnmadd.h f6, f16, f19, f27, rmm # perform operation
fnmadd.h f6, f16, f19, f27, rne # perform operation
fnmadd.h f6, f16, f19, f27, rtz # perform operation
fnmadd.h f6, f16, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc00)
li x13, 0x9475b4dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
li x3, 0xc1307aac # load x3 with value 0xc1307aac
sw x3, 0(x2) # store 0xc1307aac in memory
flh f3, 0(x2) # load 0xc1307aac from memory into f3
fnmadd.h f13, f23, f8, f3, dyn # perform operation
fnmadd.h f13, f23, f8, f3, rdn # perform operation
fnmadd.h f13, f23, f8, f3, rmm # perform operation
fnmadd.h f13, f23, f8, f3, rne # perform operation
fnmadd.h f13, f23, f8, f3, rtz # perform operation
fnmadd.h f13, f23, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f23, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f23, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f23, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f23, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f23, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7e00)
li x30, 0xe20cd452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x103861f9 # load x3 with value 0x103861f9
sw x3, 0(x2) # store 0x103861f9 in memory
flh f10, 0(x2) # load 0x103861f9 from memory into f10
fnmadd.h f30, f13, f23, f10, dyn # perform operation
fnmadd.h f30, f13, f23, f10, rdn # perform operation
fnmadd.h f30, f13, f23, f10, rmm # perform operation
fnmadd.h f30, f13, f23, f10, rne # perform operation
fnmadd.h f30, f13, f23, f10, rtz # perform operation
fnmadd.h f30, f13, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7fff)
li x2, 0x9fa5aa2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
li x3, 0xe5f03c7f # load x3 with value 0xe5f03c7f
sw x3, 0(x2) # store 0xe5f03c7f in memory
flh f28, 0(x2) # load 0xe5f03c7f from memory into f28
fnmadd.h f2, f27, f17, f28, dyn # perform operation
fnmadd.h f2, f27, f17, f28, rdn # perform operation
fnmadd.h f2, f27, f17, f28, rmm # perform operation
fnmadd.h f2, f27, f17, f28, rne # perform operation
fnmadd.h f2, f27, f17, f28, rtz # perform operation
fnmadd.h f2, f27, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c01)
li x25, 0x843acf0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
li x3, 0xac0cebc1 # load x3 with value 0xac0cebc1
sw x3, 0(x2) # store 0xac0cebc1 in memory
flh f1, 0(x2) # load 0xac0cebc1 from memory into f1
fnmadd.h f25, f12, f7, f1, dyn # perform operation
fnmadd.h f25, f12, f7, f1, rdn # perform operation
fnmadd.h f25, f12, f7, f1, rmm # perform operation
fnmadd.h f25, f12, f7, f1, rne # perform operation
fnmadd.h f25, f12, f7, f1, rtz # perform operation
fnmadd.h f25, f12, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7dff)
li x17, 0xe6ba7bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x2bd3e3f2 # load x3 with value 0x2bd3e3f2
sw x3, 0(x2) # store 0x2bd3e3f2 in memory
flh f20, 0(x2) # load 0x2bd3e3f2 from memory into f20
fnmadd.h f17, f1, f16, f20, dyn # perform operation
fnmadd.h f17, f1, f16, f20, rdn # perform operation
fnmadd.h f17, f1, f16, f20, rmm # perform operation
fnmadd.h f17, f1, f16, f20, rne # perform operation
fnmadd.h f17, f1, f16, f20, rtz # perform operation
fnmadd.h f17, f1, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x58b4)
li x13, 0x8e715d2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
li x3, 0xc4cb9324 # load x3 with value 0xc4cb9324
sw x3, 0(x2) # store 0xc4cb9324 in memory
flh f16, 0(x2) # load 0xc4cb9324 from memory into f16
fnmadd.h f13, f8, f4, f16, dyn # perform operation
fnmadd.h f13, f8, f4, f16, rdn # perform operation
fnmadd.h f13, f8, f4, f16, rmm # perform operation
fnmadd.h f13, f8, f4, f16, rne # perform operation
fnmadd.h f13, f8, f4, f16, rtz # perform operation
fnmadd.h f13, f8, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f8, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f8, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f8, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f8, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f8, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc93a)
li x4, 0x729d4f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0xd208eadc # load x3 with value 0xd208eadc
sw x3, 0(x2) # store 0xd208eadc in memory
flh f16, 0(x2) # load 0xd208eadc from memory into f16
fnmadd.h f4, f28, f13, f16, dyn # perform operation
fnmadd.h f4, f28, f13, f16, rdn # perform operation
fnmadd.h f4, f28, f13, f16, rmm # perform operation
fnmadd.h f4, f28, f13, f16, rne # perform operation
fnmadd.h f4, f28, f13, f16, rtz # perform operation
fnmadd.h f4, f28, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f28, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x0)
li x17, 0xb3b67410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x9a49bfe9 # load x3 with value 0x9a49bfe9
sw x3, 0(x2) # store 0x9a49bfe9 in memory
flh f31, 0(x2) # load 0x9a49bfe9 from memory into f31
fnmadd.h f17, f14, f20, f31, dyn # perform operation
fnmadd.h f17, f14, f20, f31, rdn # perform operation
fnmadd.h f17, f14, f20, f31, rmm # perform operation
fnmadd.h f17, f14, f20, f31, rne # perform operation
fnmadd.h f17, f14, f20, f31, rtz # perform operation
fnmadd.h f17, f14, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f14, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8000)
li x27, 0x30cc1800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f4, 0(x2) # load 0x00008000 from memory into f4
li x3, 0x9254d83b # load x3 with value 0x9254d83b
sw x3, 0(x2) # store 0x9254d83b in memory
flh f10, 0(x2) # load 0x9254d83b from memory into f10
fnmadd.h f27, f26, f4, f10, dyn # perform operation
fnmadd.h f27, f26, f4, f10, rdn # perform operation
fnmadd.h f27, f26, f4, f10, rmm # perform operation
fnmadd.h f27, f26, f4, f10, rne # perform operation
fnmadd.h f27, f26, f4, f10, rtz # perform operation
fnmadd.h f27, f26, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3c00)
li x21, 0x8341b4a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
li x3, 0xb4038d0f # load x3 with value 0xb4038d0f
sw x3, 0(x2) # store 0xb4038d0f in memory
flh f2, 0(x2) # load 0xb4038d0f from memory into f2
fnmadd.h f21, f13, f29, f2, dyn # perform operation
fnmadd.h f21, f13, f29, f2, rdn # perform operation
fnmadd.h f21, f13, f29, f2, rmm # perform operation
fnmadd.h f21, f13, f29, f2, rne # perform operation
fnmadd.h f21, f13, f29, f2, rtz # perform operation
fnmadd.h f21, f13, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbc00)
li x17, 0x0ce19972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
li x3, 0xcdcf6a48 # load x3 with value 0xcdcf6a48
sw x3, 0(x2) # store 0xcdcf6a48 in memory
flh f21, 0(x2) # load 0xcdcf6a48 from memory into f21
fnmadd.h f17, f18, f29, f21, dyn # perform operation
fnmadd.h f17, f18, f29, f21, rdn # perform operation
fnmadd.h f17, f18, f29, f21, rmm # perform operation
fnmadd.h f17, f18, f29, f21, rne # perform operation
fnmadd.h f17, f18, f29, f21, rtz # perform operation
fnmadd.h f17, f18, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3e00)
li x1, 0xf8645e50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
li x3, 0x7b6b92b8 # load x3 with value 0x7b6b92b8
sw x3, 0(x2) # store 0x7b6b92b8 in memory
flh f5, 0(x2) # load 0x7b6b92b8 from memory into f5
fnmadd.h f1, f18, f14, f5, dyn # perform operation
fnmadd.h f1, f18, f14, f5, rdn # perform operation
fnmadd.h f1, f18, f14, f5, rmm # perform operation
fnmadd.h f1, f18, f14, f5, rne # perform operation
fnmadd.h f1, f18, f14, f5, rtz # perform operation
fnmadd.h f1, f18, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f18, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f18, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f18, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f18, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f18, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbe00)
li x3, 0xc674ada3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
li x3, 0xdebfe9ad # load x3 with value 0xdebfe9ad
sw x3, 0(x2) # store 0xdebfe9ad in memory
flh f9, 0(x2) # load 0xdebfe9ad from memory into f9
fnmadd.h f3, f25, f8, f9, dyn # perform operation
fnmadd.h f3, f25, f8, f9, rdn # perform operation
fnmadd.h f3, f25, f8, f9, rmm # perform operation
fnmadd.h f3, f25, f8, f9, rne # perform operation
fnmadd.h f3, f25, f8, f9, rtz # perform operation
fnmadd.h f3, f25, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x4000)
li x7, 0x15a13980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0xe7b668f1 # load x3 with value 0xe7b668f1
sw x3, 0(x2) # store 0xe7b668f1 in memory
flh f29, 0(x2) # load 0xe7b668f1 from memory into f29
fnmadd.h f7, f15, f19, f29, dyn # perform operation
fnmadd.h f7, f15, f19, f29, rdn # perform operation
fnmadd.h f7, f15, f19, f29, rmm # perform operation
fnmadd.h f7, f15, f19, f29, rne # perform operation
fnmadd.h f7, f15, f19, f29, rtz # perform operation
fnmadd.h f7, f15, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc000)
li x1, 0xacb55ab6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
li x3, 0x1dba1481 # load x3 with value 0x1dba1481
sw x3, 0(x2) # store 0x1dba1481 in memory
flh f13, 0(x2) # load 0x1dba1481 from memory into f13
fnmadd.h f1, f19, f15, f13, dyn # perform operation
fnmadd.h f1, f19, f15, f13, rdn # perform operation
fnmadd.h f1, f19, f15, f13, rmm # perform operation
fnmadd.h f1, f19, f15, f13, rne # perform operation
fnmadd.h f1, f19, f15, f13, rtz # perform operation
fnmadd.h f1, f19, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x400)
li x26, 0x9f8c4919 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
li x3, 0x6ff6ad1b # load x3 with value 0x6ff6ad1b
sw x3, 0(x2) # store 0x6ff6ad1b in memory
flh f29, 0(x2) # load 0x6ff6ad1b from memory into f29
fnmadd.h f26, f22, f17, f29, dyn # perform operation
fnmadd.h f26, f22, f17, f29, rdn # perform operation
fnmadd.h f26, f22, f17, f29, rmm # perform operation
fnmadd.h f26, f22, f17, f29, rne # perform operation
fnmadd.h f26, f22, f17, f29, rtz # perform operation
fnmadd.h f26, f22, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f22, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f22, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f22, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f22, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f22, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8400)
li x28, 0x43007f74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0x4d897e4e # load x3 with value 0x4d897e4e
sw x3, 0(x2) # store 0x4d897e4e in memory
flh f16, 0(x2) # load 0x4d897e4e from memory into f16
fnmadd.h f28, f26, f12, f16, dyn # perform operation
fnmadd.h f28, f26, f12, f16, rdn # perform operation
fnmadd.h f28, f26, f12, f16, rmm # perform operation
fnmadd.h f28, f26, f12, f16, rne # perform operation
fnmadd.h f28, f26, f12, f16, rtz # perform operation
fnmadd.h f28, f26, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f12, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7bff)
li x21, 0x1308e761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x9a5eb6ff # load x3 with value 0x9a5eb6ff
sw x3, 0(x2) # store 0x9a5eb6ff in memory
flh f16, 0(x2) # load 0x9a5eb6ff from memory into f16
fnmadd.h f21, f2, f24, f16, dyn # perform operation
fnmadd.h f21, f2, f24, f16, rdn # perform operation
fnmadd.h f21, f2, f24, f16, rmm # perform operation
fnmadd.h f21, f2, f24, f16, rne # perform operation
fnmadd.h f21, f2, f24, f16, rtz # perform operation
fnmadd.h f21, f2, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f2, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfbff)
li x4, 0xd0aa4124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x7752a177 # load x3 with value 0x7752a177
sw x3, 0(x2) # store 0x7752a177 in memory
flh f14, 0(x2) # load 0x7752a177 from memory into f14
fnmadd.h f4, f3, f15, f14, dyn # perform operation
fnmadd.h f4, f3, f15, f14, rdn # perform operation
fnmadd.h f4, f3, f15, f14, rmm # perform operation
fnmadd.h f4, f3, f15, f14, rne # perform operation
fnmadd.h f4, f3, f15, f14, rtz # perform operation
fnmadd.h f4, f3, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3ff)
li x7, 0x759799ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
li x3, 0x57c45a21 # load x3 with value 0x57c45a21
sw x3, 0(x2) # store 0x57c45a21 in memory
flh f25, 0(x2) # load 0x57c45a21 from memory into f25
fnmadd.h f7, f17, f8, f25, dyn # perform operation
fnmadd.h f7, f17, f8, f25, rdn # perform operation
fnmadd.h f7, f17, f8, f25, rmm # perform operation
fnmadd.h f7, f17, f8, f25, rne # perform operation
fnmadd.h f7, f17, f8, f25, rtz # perform operation
fnmadd.h f7, f17, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x83ff)
li x23, 0xcf9c04f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
li x3, 0xeeb10bb2 # load x3 with value 0xeeb10bb2
sw x3, 0(x2) # store 0xeeb10bb2 in memory
flh f25, 0(x2) # load 0xeeb10bb2 from memory into f25
fnmadd.h f23, f29, f12, f25, dyn # perform operation
fnmadd.h f23, f29, f12, f25, rdn # perform operation
fnmadd.h f23, f29, f12, f25, rmm # perform operation
fnmadd.h f23, f29, f12, f25, rne # perform operation
fnmadd.h f23, f29, f12, f25, rtz # perform operation
fnmadd.h f23, f29, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x200)
li x5, 0xd5fd0dad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
li x3, 0x831809a8 # load x3 with value 0x831809a8
sw x3, 0(x2) # store 0x831809a8 in memory
flh f20, 0(x2) # load 0x831809a8 from memory into f20
fnmadd.h f5, f28, f2, f20, dyn # perform operation
fnmadd.h f5, f28, f2, f20, rdn # perform operation
fnmadd.h f5, f28, f2, f20, rmm # perform operation
fnmadd.h f5, f28, f2, f20, rne # perform operation
fnmadd.h f5, f28, f2, f20, rtz # perform operation
fnmadd.h f5, f28, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8200)
li x17, 0x1b01165d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0xc5daceca # load x3 with value 0xc5daceca
sw x3, 0(x2) # store 0xc5daceca in memory
flh f26, 0(x2) # load 0xc5daceca from memory into f26
fnmadd.h f17, f30, f27, f26, dyn # perform operation
fnmadd.h f17, f30, f27, f26, rdn # perform operation
fnmadd.h f17, f30, f27, f26, rmm # perform operation
fnmadd.h f17, f30, f27, f26, rne # perform operation
fnmadd.h f17, f30, f27, f26, rtz # perform operation
fnmadd.h f17, f30, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x1)
li x7, 0x0dd894ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x733ede84 # load x3 with value 0x733ede84
sw x3, 0(x2) # store 0x733ede84 in memory
flh f18, 0(x2) # load 0x733ede84 from memory into f18
fnmadd.h f7, f20, f29, f18, dyn # perform operation
fnmadd.h f7, f20, f29, f18, rdn # perform operation
fnmadd.h f7, f20, f29, f18, rmm # perform operation
fnmadd.h f7, f20, f29, f18, rne # perform operation
fnmadd.h f7, f20, f29, f18, rtz # perform operation
fnmadd.h f7, f20, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8001)
li x4, 0x2a1c7212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0xdd0064a2 # load x3 with value 0xdd0064a2
sw x3, 0(x2) # store 0xdd0064a2 in memory
flh f24, 0(x2) # load 0xdd0064a2 from memory into f24
fnmadd.h f4, f23, f2, f24, dyn # perform operation
fnmadd.h f4, f23, f2, f24, rdn # perform operation
fnmadd.h f4, f23, f2, f24, rmm # perform operation
fnmadd.h f4, f23, f2, f24, rne # perform operation
fnmadd.h f4, f23, f2, f24, rtz # perform operation
fnmadd.h f4, f23, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f23, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f23, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f23, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f23, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f23, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c00)
li x22, 0x6cb60501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
li x3, 0xf0a19ace # load x3 with value 0xf0a19ace
sw x3, 0(x2) # store 0xf0a19ace in memory
flh f7, 0(x2) # load 0xf0a19ace from memory into f7
fnmadd.h f22, f27, f4, f7, dyn # perform operation
fnmadd.h f22, f27, f4, f7, rdn # perform operation
fnmadd.h f22, f27, f4, f7, rmm # perform operation
fnmadd.h f22, f27, f4, f7, rne # perform operation
fnmadd.h f22, f27, f4, f7, rtz # perform operation
fnmadd.h f22, f27, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc00)
li x28, 0x688a93f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0x11e08bee # load x3 with value 0x11e08bee
sw x3, 0(x2) # store 0x11e08bee in memory
flh f15, 0(x2) # load 0x11e08bee from memory into f15
fnmadd.h f28, f26, f1, f15, dyn # perform operation
fnmadd.h f28, f26, f1, f15, rdn # perform operation
fnmadd.h f28, f26, f1, f15, rmm # perform operation
fnmadd.h f28, f26, f1, f15, rne # perform operation
fnmadd.h f28, f26, f1, f15, rtz # perform operation
fnmadd.h f28, f26, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7e00)
li x27, 0xe618ad0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0x2c2b2053 # load x3 with value 0x2c2b2053
sw x3, 0(x2) # store 0x2c2b2053 in memory
flh f4, 0(x2) # load 0x2c2b2053 from memory into f4
fnmadd.h f27, f13, f9, f4, dyn # perform operation
fnmadd.h f27, f13, f9, f4, rdn # perform operation
fnmadd.h f27, f13, f9, f4, rmm # perform operation
fnmadd.h f27, f13, f9, f4, rne # perform operation
fnmadd.h f27, f13, f9, f4, rtz # perform operation
fnmadd.h f27, f13, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7fff)
li x31, 0xbc9e13bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
li x3, 0xf00189de # load x3 with value 0xf00189de
sw x3, 0(x2) # store 0xf00189de in memory
flh f5, 0(x2) # load 0xf00189de from memory into f5
fnmadd.h f31, f10, f26, f5, dyn # perform operation
fnmadd.h f31, f10, f26, f5, rdn # perform operation
fnmadd.h f31, f10, f26, f5, rmm # perform operation
fnmadd.h f31, f10, f26, f5, rne # perform operation
fnmadd.h f31, f10, f26, f5, rtz # perform operation
fnmadd.h f31, f10, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f10, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c01)
li x7, 0x3e5dc857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0x6ee1f6ef # load x3 with value 0x6ee1f6ef
sw x3, 0(x2) # store 0x6ee1f6ef in memory
flh f10, 0(x2) # load 0x6ee1f6ef from memory into f10
fnmadd.h f7, f20, f22, f10, dyn # perform operation
fnmadd.h f7, f20, f22, f10, rdn # perform operation
fnmadd.h f7, f20, f22, f10, rmm # perform operation
fnmadd.h f7, f20, f22, f10, rne # perform operation
fnmadd.h f7, f20, f22, f10, rtz # perform operation
fnmadd.h f7, f20, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7dff)
li x27, 0xb10a5521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0xd7845192 # load x3 with value 0xd7845192
sw x3, 0(x2) # store 0xd7845192 in memory
flh f18, 0(x2) # load 0xd7845192 from memory into f18
fnmadd.h f27, f21, f1, f18, dyn # perform operation
fnmadd.h f27, f21, f1, f18, rdn # perform operation
fnmadd.h f27, f21, f1, f18, rmm # perform operation
fnmadd.h f27, f21, f1, f18, rne # perform operation
fnmadd.h f27, f21, f1, f18, rtz # perform operation
fnmadd.h f27, f21, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x58b4)
li x1, 0xb06cc313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0xe5044fb4 # load x3 with value 0xe5044fb4
sw x3, 0(x2) # store 0xe5044fb4 in memory
flh f17, 0(x2) # load 0xe5044fb4 from memory into f17
fnmadd.h f1, f19, f27, f17, dyn # perform operation
fnmadd.h f1, f19, f27, f17, rdn # perform operation
fnmadd.h f1, f19, f27, f17, rmm # perform operation
fnmadd.h f1, f19, f27, f17, rne # perform operation
fnmadd.h f1, f19, f27, f17, rtz # perform operation
fnmadd.h f1, f19, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc93a)
li x31, 0x324530c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0xec72e8ec # load x3 with value 0xec72e8ec
sw x3, 0(x2) # store 0xec72e8ec in memory
flh f10, 0(x2) # load 0xec72e8ec from memory into f10
fnmadd.h f31, f25, f27, f10, dyn # perform operation
fnmadd.h f31, f25, f27, f10, rdn # perform operation
fnmadd.h f31, f25, f27, f10, rmm # perform operation
fnmadd.h f31, f25, f27, f10, rne # perform operation
fnmadd.h f31, f25, f27, f10, rtz # perform operation
fnmadd.h f31, f25, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x0)
li x16, 0x1a7e36d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xef048f99 # load x3 with value 0xef048f99
sw x3, 0(x2) # store 0xef048f99 in memory
flh f1, 0(x2) # load 0xef048f99 from memory into f1
fnmadd.h f16, f24, f10, f1, dyn # perform operation
fnmadd.h f16, f24, f10, f1, rdn # perform operation
fnmadd.h f16, f24, f10, f1, rmm # perform operation
fnmadd.h f16, f24, f10, f1, rne # perform operation
fnmadd.h f16, f24, f10, f1, rtz # perform operation
fnmadd.h f16, f24, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8000)
li x6, 0x298cfb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0xaeec1ab9 # load x3 with value 0xaeec1ab9
sw x3, 0(x2) # store 0xaeec1ab9 in memory
flh f31, 0(x2) # load 0xaeec1ab9 from memory into f31
fnmadd.h f6, f9, f28, f31, dyn # perform operation
fnmadd.h f6, f9, f28, f31, rdn # perform operation
fnmadd.h f6, f9, f28, f31, rmm # perform operation
fnmadd.h f6, f9, f28, f31, rne # perform operation
fnmadd.h f6, f9, f28, f31, rtz # perform operation
fnmadd.h f6, f9, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f9, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3c00)
li x21, 0x3120b43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
li x3, 0x97a59e4a # load x3 with value 0x97a59e4a
sw x3, 0(x2) # store 0x97a59e4a in memory
flh f20, 0(x2) # load 0x97a59e4a from memory into f20
fnmadd.h f21, f25, f4, f20, dyn # perform operation
fnmadd.h f21, f25, f4, f20, rdn # perform operation
fnmadd.h f21, f25, f4, f20, rmm # perform operation
fnmadd.h f21, f25, f4, f20, rne # perform operation
fnmadd.h f21, f25, f4, f20, rtz # perform operation
fnmadd.h f21, f25, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f25, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f25, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f25, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f25, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f25, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbc00)
li x14, 0x9ff0901d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0x138319f8 # load x3 with value 0x138319f8
sw x3, 0(x2) # store 0x138319f8 in memory
flh f29, 0(x2) # load 0x138319f8 from memory into f29
fnmadd.h f14, f26, f13, f29, dyn # perform operation
fnmadd.h f14, f26, f13, f29, rdn # perform operation
fnmadd.h f14, f26, f13, f29, rmm # perform operation
fnmadd.h f14, f26, f13, f29, rne # perform operation
fnmadd.h f14, f26, f13, f29, rtz # perform operation
fnmadd.h f14, f26, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3e00)
li x3, 0x7d8842a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
li x3, 0x7a94c818 # load x3 with value 0x7a94c818
sw x3, 0(x2) # store 0x7a94c818 in memory
flh f10, 0(x2) # load 0x7a94c818 from memory into f10
fnmadd.h f3, f15, f23, f10, dyn # perform operation
fnmadd.h f3, f15, f23, f10, rdn # perform operation
fnmadd.h f3, f15, f23, f10, rmm # perform operation
fnmadd.h f3, f15, f23, f10, rne # perform operation
fnmadd.h f3, f15, f23, f10, rtz # perform operation
fnmadd.h f3, f15, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbe00)
li x17, 0x6cee48ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f4, 0(x2) # load 0x0000be00 from memory into f4
li x3, 0xe6a44d24 # load x3 with value 0xe6a44d24
sw x3, 0(x2) # store 0xe6a44d24 in memory
flh f6, 0(x2) # load 0xe6a44d24 from memory into f6
fnmadd.h f17, f1, f4, f6, dyn # perform operation
fnmadd.h f17, f1, f4, f6, rdn # perform operation
fnmadd.h f17, f1, f4, f6, rmm # perform operation
fnmadd.h f17, f1, f4, f6, rne # perform operation
fnmadd.h f17, f1, f4, f6, rtz # perform operation
fnmadd.h f17, f1, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x4000)
li x26, 0xe70bff07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0xccd6e34c # load x3 with value 0xccd6e34c
sw x3, 0(x2) # store 0xccd6e34c in memory
flh f12, 0(x2) # load 0xccd6e34c from memory into f12
fnmadd.h f26, f30, f5, f12, dyn # perform operation
fnmadd.h f26, f30, f5, f12, rdn # perform operation
fnmadd.h f26, f30, f5, f12, rmm # perform operation
fnmadd.h f26, f30, f5, f12, rne # perform operation
fnmadd.h f26, f30, f5, f12, rtz # perform operation
fnmadd.h f26, f30, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc000)
li x1, 0x62eebf86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0xde7cce4d # load x3 with value 0xde7cce4d
sw x3, 0(x2) # store 0xde7cce4d in memory
flh f19, 0(x2) # load 0xde7cce4d from memory into f19
fnmadd.h f1, f23, f29, f19, dyn # perform operation
fnmadd.h f1, f23, f29, f19, rdn # perform operation
fnmadd.h f1, f23, f29, f19, rmm # perform operation
fnmadd.h f1, f23, f29, f19, rne # perform operation
fnmadd.h f1, f23, f29, f19, rtz # perform operation
fnmadd.h f1, f23, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f23, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f23, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f23, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f23, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f23, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x400)
li x18, 0xbef5ed0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0xc82ef394 # load x3 with value 0xc82ef394
sw x3, 0(x2) # store 0xc82ef394 in memory
flh f2, 0(x2) # load 0xc82ef394 from memory into f2
fnmadd.h f18, f28, f7, f2, dyn # perform operation
fnmadd.h f18, f28, f7, f2, rdn # perform operation
fnmadd.h f18, f28, f7, f2, rmm # perform operation
fnmadd.h f18, f28, f7, f2, rne # perform operation
fnmadd.h f18, f28, f7, f2, rtz # perform operation
fnmadd.h f18, f28, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8400)
li x15, 0xe6c1687b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
li x3, 0xdae4ca24 # load x3 with value 0xdae4ca24
sw x3, 0(x2) # store 0xdae4ca24 in memory
flh f28, 0(x2) # load 0xdae4ca24 from memory into f28
fnmadd.h f15, f10, f31, f28, dyn # perform operation
fnmadd.h f15, f10, f31, f28, rdn # perform operation
fnmadd.h f15, f10, f31, f28, rmm # perform operation
fnmadd.h f15, f10, f31, f28, rne # perform operation
fnmadd.h f15, f10, f31, f28, rtz # perform operation
fnmadd.h f15, f10, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f10, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f10, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f10, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f10, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f10, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7bff)
li x9, 0x3d5992e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
li x3, 0xd3401820 # load x3 with value 0xd3401820
sw x3, 0(x2) # store 0xd3401820 in memory
flh f28, 0(x2) # load 0xd3401820 from memory into f28
fnmadd.h f9, f1, f14, f28, dyn # perform operation
fnmadd.h f9, f1, f14, f28, rdn # perform operation
fnmadd.h f9, f1, f14, f28, rmm # perform operation
fnmadd.h f9, f1, f14, f28, rne # perform operation
fnmadd.h f9, f1, f14, f28, rtz # perform operation
fnmadd.h f9, f1, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfbff)
li x17, 0x537f9411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x0f7a106d # load x3 with value 0x0f7a106d
sw x3, 0(x2) # store 0x0f7a106d in memory
flh f26, 0(x2) # load 0x0f7a106d from memory into f26
fnmadd.h f17, f8, f16, f26, dyn # perform operation
fnmadd.h f17, f8, f16, f26, rdn # perform operation
fnmadd.h f17, f8, f16, f26, rmm # perform operation
fnmadd.h f17, f8, f16, f26, rne # perform operation
fnmadd.h f17, f8, f16, f26, rtz # perform operation
fnmadd.h f17, f8, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3ff)
li x9, 0xbbaad3e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
li x3, 0xff02a870 # load x3 with value 0xff02a870
sw x3, 0(x2) # store 0xff02a870 in memory
flh f12, 0(x2) # load 0xff02a870 from memory into f12
fnmadd.h f9, f8, f28, f12, dyn # perform operation
fnmadd.h f9, f8, f28, f12, rdn # perform operation
fnmadd.h f9, f8, f28, f12, rmm # perform operation
fnmadd.h f9, f8, f28, f12, rne # perform operation
fnmadd.h f9, f8, f28, f12, rtz # perform operation
fnmadd.h f9, f8, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x83ff)
li x1, 0x32e604ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0xcfcdea7a # load x3 with value 0xcfcdea7a
sw x3, 0(x2) # store 0xcfcdea7a in memory
flh f14, 0(x2) # load 0xcfcdea7a from memory into f14
fnmadd.h f1, f10, f26, f14, dyn # perform operation
fnmadd.h f1, f10, f26, f14, rdn # perform operation
fnmadd.h f1, f10, f26, f14, rmm # perform operation
fnmadd.h f1, f10, f26, f14, rne # perform operation
fnmadd.h f1, f10, f26, f14, rtz # perform operation
fnmadd.h f1, f10, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x200)
li x5, 0xe15aa5f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0xd2db3da0 # load x3 with value 0xd2db3da0
sw x3, 0(x2) # store 0xd2db3da0 in memory
flh f29, 0(x2) # load 0xd2db3da0 from memory into f29
fnmadd.h f5, f3, f18, f29, dyn # perform operation
fnmadd.h f5, f3, f18, f29, rdn # perform operation
fnmadd.h f5, f3, f18, f29, rmm # perform operation
fnmadd.h f5, f3, f18, f29, rne # perform operation
fnmadd.h f5, f3, f18, f29, rtz # perform operation
fnmadd.h f5, f3, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8200)
li x31, 0xd2110b99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f4, 0(x2) # load 0x0000c93a from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0xf69f06fe # load x3 with value 0xf69f06fe
sw x3, 0(x2) # store 0xf69f06fe in memory
flh f20, 0(x2) # load 0xf69f06fe from memory into f20
fnmadd.h f31, f4, f1, f20, dyn # perform operation
fnmadd.h f31, f4, f1, f20, rdn # perform operation
fnmadd.h f31, f4, f1, f20, rmm # perform operation
fnmadd.h f31, f4, f1, f20, rne # perform operation
fnmadd.h f31, f4, f1, f20, rtz # perform operation
fnmadd.h f31, f4, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f4, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x1)
li x28, 0x55ea4d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x058533c8 # load x3 with value 0x058533c8
sw x3, 0(x2) # store 0x058533c8 in memory
flh f26, 0(x2) # load 0x058533c8 from memory into f26
fnmadd.h f28, f2, f14, f26, dyn # perform operation
fnmadd.h f28, f2, f14, f26, rdn # perform operation
fnmadd.h f28, f2, f14, f26, rmm # perform operation
fnmadd.h f28, f2, f14, f26, rne # perform operation
fnmadd.h f28, f2, f14, f26, rtz # perform operation
fnmadd.h f28, f2, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8001)
li x4, 0x776a7f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0xd39fd6f4 # load x3 with value 0xd39fd6f4
sw x3, 0(x2) # store 0xd39fd6f4 in memory
flh f26, 0(x2) # load 0xd39fd6f4 from memory into f26
fnmadd.h f4, f9, f10, f26, dyn # perform operation
fnmadd.h f4, f9, f10, f26, rdn # perform operation
fnmadd.h f4, f9, f10, f26, rmm # perform operation
fnmadd.h f4, f9, f10, f26, rne # perform operation
fnmadd.h f4, f9, f10, f26, rtz # perform operation
fnmadd.h f4, f9, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f9, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c00)
li x8, 0xe838e8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0xb3fc5e6b # load x3 with value 0xb3fc5e6b
sw x3, 0(x2) # store 0xb3fc5e6b in memory
flh f3, 0(x2) # load 0xb3fc5e6b from memory into f3
fnmadd.h f8, f16, f14, f3, dyn # perform operation
fnmadd.h f8, f16, f14, f3, rdn # perform operation
fnmadd.h f8, f16, f14, f3, rmm # perform operation
fnmadd.h f8, f16, f14, f3, rne # perform operation
fnmadd.h f8, f16, f14, f3, rtz # perform operation
fnmadd.h f8, f16, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc00)
li x23, 0xac1133d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x8eafcd8b # load x3 with value 0x8eafcd8b
sw x3, 0(x2) # store 0x8eafcd8b in memory
flh f12, 0(x2) # load 0x8eafcd8b from memory into f12
fnmadd.h f23, f27, f14, f12, dyn # perform operation
fnmadd.h f23, f27, f14, f12, rdn # perform operation
fnmadd.h f23, f27, f14, f12, rmm # perform operation
fnmadd.h f23, f27, f14, f12, rne # perform operation
fnmadd.h f23, f27, f14, f12, rtz # perform operation
fnmadd.h f23, f27, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7e00)
li x30, 0x03502a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
li x3, 0x1df4c47c # load x3 with value 0x1df4c47c
sw x3, 0(x2) # store 0x1df4c47c in memory
flh f2, 0(x2) # load 0x1df4c47c from memory into f2
fnmadd.h f30, f12, f19, f2, dyn # perform operation
fnmadd.h f30, f12, f19, f2, rdn # perform operation
fnmadd.h f30, f12, f19, f2, rmm # perform operation
fnmadd.h f30, f12, f19, f2, rne # perform operation
fnmadd.h f30, f12, f19, f2, rtz # perform operation
fnmadd.h f30, f12, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7fff)
li x26, 0x3814a999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
li x3, 0x3360d162 # load x3 with value 0x3360d162
sw x3, 0(x2) # store 0x3360d162 in memory
flh f21, 0(x2) # load 0x3360d162 from memory into f21
fnmadd.h f26, f10, f2, f21, dyn # perform operation
fnmadd.h f26, f10, f2, f21, rdn # perform operation
fnmadd.h f26, f10, f2, f21, rmm # perform operation
fnmadd.h f26, f10, f2, f21, rne # perform operation
fnmadd.h f26, f10, f2, f21, rtz # perform operation
fnmadd.h f26, f10, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c01)
li x28, 0x187c34a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
li x3, 0x95fb9831 # load x3 with value 0x95fb9831
sw x3, 0(x2) # store 0x95fb9831 in memory
flh f15, 0(x2) # load 0x95fb9831 from memory into f15
fnmadd.h f28, f17, f5, f15, dyn # perform operation
fnmadd.h f28, f17, f5, f15, rdn # perform operation
fnmadd.h f28, f17, f5, f15, rmm # perform operation
fnmadd.h f28, f17, f5, f15, rne # perform operation
fnmadd.h f28, f17, f5, f15, rtz # perform operation
fnmadd.h f28, f17, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7dff)
li x8, 0x4f502c89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0x96c516b3 # load x3 with value 0x96c516b3
sw x3, 0(x2) # store 0x96c516b3 in memory
flh f4, 0(x2) # load 0x96c516b3 from memory into f4
fnmadd.h f8, f24, f3, f4, dyn # perform operation
fnmadd.h f8, f24, f3, f4, rdn # perform operation
fnmadd.h f8, f24, f3, f4, rmm # perform operation
fnmadd.h f8, f24, f3, f4, rne # perform operation
fnmadd.h f8, f24, f3, f4, rtz # perform operation
fnmadd.h f8, f24, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f24, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x58b4)
li x20, 0x5350c9f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x7baa0b85 # load x3 with value 0x7baa0b85
sw x3, 0(x2) # store 0x7baa0b85 in memory
flh f19, 0(x2) # load 0x7baa0b85 from memory into f19
fnmadd.h f20, f13, f29, f19, dyn # perform operation
fnmadd.h f20, f13, f29, f19, rdn # perform operation
fnmadd.h f20, f13, f29, f19, rmm # perform operation
fnmadd.h f20, f13, f29, f19, rne # perform operation
fnmadd.h f20, f13, f29, f19, rtz # perform operation
fnmadd.h f20, f13, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f13, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc93a)
li x11, 0x0715f6a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
li x3, 0x16c1329d # load x3 with value 0x16c1329d
sw x3, 0(x2) # store 0x16c1329d in memory
flh f28, 0(x2) # load 0x16c1329d from memory into f28
fnmadd.h f11, f3, f20, f28, dyn # perform operation
fnmadd.h f11, f3, f20, f28, rdn # perform operation
fnmadd.h f11, f3, f20, f28, rmm # perform operation
fnmadd.h f11, f3, f20, f28, rne # perform operation
fnmadd.h f11, f3, f20, f28, rtz # perform operation
fnmadd.h f11, f3, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x28, 0x51444789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x009284d9 # load x3 with value 0x009284d9
sw x3, 0(x2) # store 0x009284d9 in memory
flh f5, 0(x2) # load 0x009284d9 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.h f28, f18, f5, f13, dyn # perform operation
fnmadd.h f28, f18, f5, f13, rdn # perform operation
fnmadd.h f28, f18, f5, f13, rmm # perform operation
fnmadd.h f28, f18, f5, f13, rne # perform operation
fnmadd.h f28, f18, f5, f13, rtz # perform operation
fnmadd.h f28, f18, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f18, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000)
li x24, 0xfe44d786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x92c6e5e2 # load x3 with value 0x92c6e5e2
sw x3, 0(x2) # store 0x92c6e5e2 in memory
flh f13, 0(x2) # load 0x92c6e5e2 from memory into f13
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
fnmadd.h f24, f31, f13, f18, dyn # perform operation
fnmadd.h f24, f31, f13, f18, rdn # perform operation
fnmadd.h f24, f31, f13, f18, rmm # perform operation
fnmadd.h f24, f31, f13, f18, rne # perform operation
fnmadd.h f24, f31, f13, f18, rtz # perform operation
fnmadd.h f24, f31, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3c00)
li x10, 0xdb88bad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x6f2dd660 # load x3 with value 0x6f2dd660
sw x3, 0(x2) # store 0x6f2dd660 in memory
flh f27, 0(x2) # load 0x6f2dd660 from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
fnmadd.h f10, f31, f27, f15, dyn # perform operation
fnmadd.h f10, f31, f27, f15, rdn # perform operation
fnmadd.h f10, f31, f27, f15, rmm # perform operation
fnmadd.h f10, f31, f27, f15, rne # perform operation
fnmadd.h f10, f31, f27, f15, rtz # perform operation
fnmadd.h f10, f31, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbc00)
li x19, 0xefde54f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xa59e888a # load x3 with value 0xa59e888a
sw x3, 0(x2) # store 0xa59e888a in memory
flh f9, 0(x2) # load 0xa59e888a from memory into f9
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
fnmadd.h f19, f11, f9, f2, dyn # perform operation
fnmadd.h f19, f11, f9, f2, rdn # perform operation
fnmadd.h f19, f11, f9, f2, rmm # perform operation
fnmadd.h f19, f11, f9, f2, rne # perform operation
fnmadd.h f19, f11, f9, f2, rtz # perform operation
fnmadd.h f19, f11, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3e00)
li x9, 0xfaf00d02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x6a2e9e9c # load x3 with value 0x6a2e9e9c
sw x3, 0(x2) # store 0x6a2e9e9c in memory
flh f11, 0(x2) # load 0x6a2e9e9c from memory into f11
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
fnmadd.h f9, f21, f11, f29, dyn # perform operation
fnmadd.h f9, f21, f11, f29, rdn # perform operation
fnmadd.h f9, f21, f11, f29, rmm # perform operation
fnmadd.h f9, f21, f11, f29, rne # perform operation
fnmadd.h f9, f21, f11, f29, rtz # perform operation
fnmadd.h f9, f21, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbe00)
li x29, 0x62cd7c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x2af39f99 # load x3 with value 0x2af39f99
sw x3, 0(x2) # store 0x2af39f99 in memory
flh f27, 0(x2) # load 0x2af39f99 from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
fnmadd.h f29, f5, f27, f9, dyn # perform operation
fnmadd.h f29, f5, f27, f9, rdn # perform operation
fnmadd.h f29, f5, f27, f9, rmm # perform operation
fnmadd.h f29, f5, f27, f9, rne # perform operation
fnmadd.h f29, f5, f27, f9, rtz # perform operation
fnmadd.h f29, f5, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000)
li x7, 0x3d9543c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x6b9488c6 # load x3 with value 0x6b9488c6
sw x3, 0(x2) # store 0x6b9488c6 in memory
flh f14, 0(x2) # load 0x6b9488c6 from memory into f14
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
fnmadd.h f7, f10, f14, f6, dyn # perform operation
fnmadd.h f7, f10, f14, f6, rdn # perform operation
fnmadd.h f7, f10, f14, f6, rmm # perform operation
fnmadd.h f7, f10, f14, f6, rne # perform operation
fnmadd.h f7, f10, f14, f6, rtz # perform operation
fnmadd.h f7, f10, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000)
li x20, 0x7bf0a2d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x70f2cc8c # load x3 with value 0x70f2cc8c
sw x3, 0(x2) # store 0x70f2cc8c in memory
flh f21, 0(x2) # load 0x70f2cc8c from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
fnmadd.h f20, f22, f21, f12, dyn # perform operation
fnmadd.h f20, f22, f21, f12, rdn # perform operation
fnmadd.h f20, f22, f21, f12, rmm # perform operation
fnmadd.h f20, f22, f21, f12, rne # perform operation
fnmadd.h f20, f22, f21, f12, rtz # perform operation
fnmadd.h f20, f22, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400)
li x12, 0x7b2236ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x271716de # load x3 with value 0x271716de
sw x3, 0(x2) # store 0x271716de in memory
flh f22, 0(x2) # load 0x271716de from memory into f22
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
fnmadd.h f12, f13, f22, f8, dyn # perform operation
fnmadd.h f12, f13, f22, f8, rdn # perform operation
fnmadd.h f12, f13, f22, f8, rmm # perform operation
fnmadd.h f12, f13, f22, f8, rne # perform operation
fnmadd.h f12, f13, f22, f8, rtz # perform operation
fnmadd.h f12, f13, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f13, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f13, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f13, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f13, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f13, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8400)
li x29, 0x91fa2e95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xd711635b # load x3 with value 0xd711635b
sw x3, 0(x2) # store 0xd711635b in memory
flh f5, 0(x2) # load 0xd711635b from memory into f5
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f29, f18, f5, f15, dyn # perform operation
fnmadd.h f29, f18, f5, f15, rdn # perform operation
fnmadd.h f29, f18, f5, f15, rmm # perform operation
fnmadd.h f29, f18, f5, f15, rne # perform operation
fnmadd.h f29, f18, f5, f15, rtz # perform operation
fnmadd.h f29, f18, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7bff)
li x27, 0x7449fe0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x4814bf66 # load x3 with value 0x4814bf66
sw x3, 0(x2) # store 0x4814bf66 in memory
flh f5, 0(x2) # load 0x4814bf66 from memory into f5
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
fnmadd.h f27, f20, f5, f2, dyn # perform operation
fnmadd.h f27, f20, f5, f2, rdn # perform operation
fnmadd.h f27, f20, f5, f2, rmm # perform operation
fnmadd.h f27, f20, f5, f2, rne # perform operation
fnmadd.h f27, f20, f5, f2, rtz # perform operation
fnmadd.h f27, f20, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfbff)
li x30, 0x91c83ba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xd3769e15 # load x3 with value 0xd3769e15
sw x3, 0(x2) # store 0xd3769e15 in memory
flh f10, 0(x2) # load 0xd3769e15 from memory into f10
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f30, f17, f10, f15, dyn # perform operation
fnmadd.h f30, f17, f10, f15, rdn # perform operation
fnmadd.h f30, f17, f10, f15, rmm # perform operation
fnmadd.h f30, f17, f10, f15, rne # perform operation
fnmadd.h f30, f17, f10, f15, rtz # perform operation
fnmadd.h f30, f17, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff)
li x31, 0xea1e96ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xbb964e4c # load x3 with value 0xbb964e4c
sw x3, 0(x2) # store 0xbb964e4c in memory
flh f18, 0(x2) # load 0xbb964e4c from memory into f18
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
fnmadd.h f31, f11, f18, f1, dyn # perform operation
fnmadd.h f31, f11, f18, f1, rdn # perform operation
fnmadd.h f31, f11, f18, f1, rmm # perform operation
fnmadd.h f31, f11, f18, f1, rne # perform operation
fnmadd.h f31, f11, f18, f1, rtz # perform operation
fnmadd.h f31, f11, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f18, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x83ff)
li x13, 0xfa9359e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x918b9406 # load x3 with value 0x918b9406
sw x3, 0(x2) # store 0x918b9406 in memory
flh f28, 0(x2) # load 0x918b9406 from memory into f28
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f13, f17, f28, f22, dyn # perform operation
fnmadd.h f13, f17, f28, f22, rdn # perform operation
fnmadd.h f13, f17, f28, f22, rmm # perform operation
fnmadd.h f13, f17, f28, f22, rne # perform operation
fnmadd.h f13, f17, f28, f22, rtz # perform operation
fnmadd.h f13, f17, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x200)
li x15, 0x5ce5dade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x27a94295 # load x3 with value 0x27a94295
sw x3, 0(x2) # store 0x27a94295 in memory
flh f7, 0(x2) # load 0x27a94295 from memory into f7
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f15, f30, f7, f8, dyn # perform operation
fnmadd.h f15, f30, f7, f8, rdn # perform operation
fnmadd.h f15, f30, f7, f8, rmm # perform operation
fnmadd.h f15, f30, f7, f8, rne # perform operation
fnmadd.h f15, f30, f7, f8, rtz # perform operation
fnmadd.h f15, f30, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8200)
li x24, 0x0e165426 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xbad60578 # load x3 with value 0xbad60578
sw x3, 0(x2) # store 0xbad60578 in memory
flh f22, 0(x2) # load 0xbad60578 from memory into f22
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
fnmadd.h f24, f30, f22, f17, dyn # perform operation
fnmadd.h f24, f30, f22, f17, rdn # perform operation
fnmadd.h f24, f30, f22, f17, rmm # perform operation
fnmadd.h f24, f30, f22, f17, rne # perform operation
fnmadd.h f24, f30, f22, f17, rtz # perform operation
fnmadd.h f24, f30, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x11, 0xbb2400f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x2f428372 # load x3 with value 0x2f428372
sw x3, 0(x2) # store 0x2f428372 in memory
flh f25, 0(x2) # load 0x2f428372 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.h f11, f8, f25, f14, dyn # perform operation
fnmadd.h f11, f8, f25, f14, rdn # perform operation
fnmadd.h f11, f8, f25, f14, rmm # perform operation
fnmadd.h f11, f8, f25, f14, rne # perform operation
fnmadd.h f11, f8, f25, f14, rtz # perform operation
fnmadd.h f11, f8, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8001)
li x25, 0xb07d2603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x124ce467 # load x3 with value 0x124ce467
sw x3, 0(x2) # store 0x124ce467 in memory
flh f23, 0(x2) # load 0x124ce467 from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
fnmadd.h f25, f14, f23, f11, dyn # perform operation
fnmadd.h f25, f14, f23, f11, rdn # perform operation
fnmadd.h f25, f14, f23, f11, rmm # perform operation
fnmadd.h f25, f14, f23, f11, rne # perform operation
fnmadd.h f25, f14, f23, f11, rtz # perform operation
fnmadd.h f25, f14, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c00)
li x1, 0x0f51fcfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x9c7110e0 # load x3 with value 0x9c7110e0
sw x3, 0(x2) # store 0x9c7110e0 in memory
flh f26, 0(x2) # load 0x9c7110e0 from memory into f26
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f1, f21, f26, f29, dyn # perform operation
fnmadd.h f1, f21, f26, f29, rdn # perform operation
fnmadd.h f1, f21, f26, f29, rmm # perform operation
fnmadd.h f1, f21, f26, f29, rne # perform operation
fnmadd.h f1, f21, f26, f29, rtz # perform operation
fnmadd.h f1, f21, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc00)
li x8, 0x02eaff28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x05eeb6dc # load x3 with value 0x05eeb6dc
sw x3, 0(x2) # store 0x05eeb6dc in memory
flh f13, 0(x2) # load 0x05eeb6dc from memory into f13
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
fnmadd.h f8, f16, f13, f20, dyn # perform operation
fnmadd.h f8, f16, f13, f20, rdn # perform operation
fnmadd.h f8, f16, f13, f20, rmm # perform operation
fnmadd.h f8, f16, f13, f20, rne # perform operation
fnmadd.h f8, f16, f13, f20, rtz # perform operation
fnmadd.h f8, f16, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7e00)
li x6, 0xc0598337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x08ca9ddf # load x3 with value 0x08ca9ddf
sw x3, 0(x2) # store 0x08ca9ddf in memory
flh f16, 0(x2) # load 0x08ca9ddf from memory into f16
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f6, f17, f16, f5, dyn # perform operation
fnmadd.h f6, f17, f16, f5, rdn # perform operation
fnmadd.h f6, f17, f16, f5, rmm # perform operation
fnmadd.h f6, f17, f16, f5, rne # perform operation
fnmadd.h f6, f17, f16, f5, rtz # perform operation
fnmadd.h f6, f17, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f17, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f17, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f17, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f17, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f17, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fff)
li x25, 0xc1e6d76b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x6c02bd11 # load x3 with value 0x6c02bd11
sw x3, 0(x2) # store 0x6c02bd11 in memory
flh f18, 0(x2) # load 0x6c02bd11 from memory into f18
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f25, f9, f18, f15, dyn # perform operation
fnmadd.h f25, f9, f18, f15, rdn # perform operation
fnmadd.h f25, f9, f18, f15, rmm # perform operation
fnmadd.h f25, f9, f18, f15, rne # perform operation
fnmadd.h f25, f9, f18, f15, rtz # perform operation
fnmadd.h f25, f9, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c01)
li x19, 0x6118a856 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xbd39cc5f # load x3 with value 0xbd39cc5f
sw x3, 0(x2) # store 0xbd39cc5f in memory
flh f4, 0(x2) # load 0xbd39cc5f from memory into f4
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f19, f26, f4, f5, dyn # perform operation
fnmadd.h f19, f26, f4, f5, rdn # perform operation
fnmadd.h f19, f26, f4, f5, rmm # perform operation
fnmadd.h f19, f26, f4, f5, rne # perform operation
fnmadd.h f19, f26, f4, f5, rtz # perform operation
fnmadd.h f19, f26, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7dff)
li x1, 0xc98a1e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0xad185d09 # load x3 with value 0xad185d09
sw x3, 0(x2) # store 0xad185d09 in memory
flh f20, 0(x2) # load 0xad185d09 from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
fnmadd.h f1, f24, f20, f12, dyn # perform operation
fnmadd.h f1, f24, f20, f12, rdn # perform operation
fnmadd.h f1, f24, f20, f12, rmm # perform operation
fnmadd.h f1, f24, f20, f12, rne # perform operation
fnmadd.h f1, f24, f20, f12, rtz # perform operation
fnmadd.h f1, f24, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x58b4)
li x2, 0xe7296c72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x5ed6e1c4 # load x3 with value 0x5ed6e1c4
sw x3, 0(x2) # store 0x5ed6e1c4 in memory
flh f24, 0(x2) # load 0x5ed6e1c4 from memory into f24
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
fnmadd.h f2, f6, f24, f31, dyn # perform operation
fnmadd.h f2, f6, f24, f31, rdn # perform operation
fnmadd.h f2, f6, f24, f31, rmm # perform operation
fnmadd.h f2, f6, f24, f31, rne # perform operation
fnmadd.h f2, f6, f24, f31, rtz # perform operation
fnmadd.h f2, f6, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f6, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc93a)
li x19, 0xb05db2a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x4bdcc5c2 # load x3 with value 0x4bdcc5c2
sw x3, 0(x2) # store 0x4bdcc5c2 in memory
flh f8, 0(x2) # load 0x4bdcc5c2 from memory into f8
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f29, 0(x2) # load 0x0000c93a from memory into f29
fnmadd.h f19, f23, f8, f29, dyn # perform operation
fnmadd.h f19, f23, f8, f29, rdn # perform operation
fnmadd.h f19, f23, f8, f29, rmm # perform operation
fnmadd.h f19, f23, f8, f29, rne # perform operation
fnmadd.h f19, f23, f8, f29, rtz # perform operation
fnmadd.h f19, f23, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x0)
li x9, 0x62624ef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
li x3, 0x52b47a37 # load x3 with value 0x52b47a37
sw x3, 0(x2) # store 0x52b47a37 in memory
flh f17, 0(x2) # load 0x52b47a37 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.h f9, f10, f17, f22, dyn # perform operation
fnmadd.h f9, f10, f17, f22, rdn # perform operation
fnmadd.h f9, f10, f17, f22, rmm # perform operation
fnmadd.h f9, f10, f17, f22, rne # perform operation
fnmadd.h f9, f10, f17, f22, rtz # perform operation
fnmadd.h f9, f10, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f10, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8000)
li x9, 0xfdbedd1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x9266c30a # load x3 with value 0x9266c30a
sw x3, 0(x2) # store 0x9266c30a in memory
flh f14, 0(x2) # load 0x9266c30a from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
fnmadd.h f9, f12, f14, f22, dyn # perform operation
fnmadd.h f9, f12, f14, f22, rdn # perform operation
fnmadd.h f9, f12, f14, f22, rmm # perform operation
fnmadd.h f9, f12, f14, f22, rne # perform operation
fnmadd.h f9, f12, f14, f22, rtz # perform operation
fnmadd.h f9, f12, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3c00)
li x10, 0x746bf2d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x4cedd1ff # load x3 with value 0x4cedd1ff
sw x3, 0(x2) # store 0x4cedd1ff in memory
flh f6, 0(x2) # load 0x4cedd1ff from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
fnmadd.h f10, f22, f6, f24, dyn # perform operation
fnmadd.h f10, f22, f6, f24, rdn # perform operation
fnmadd.h f10, f22, f6, f24, rmm # perform operation
fnmadd.h f10, f22, f6, f24, rne # perform operation
fnmadd.h f10, f22, f6, f24, rtz # perform operation
fnmadd.h f10, f22, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbc00)
li x14, 0xfa447b27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0x909eb12d # load x3 with value 0x909eb12d
sw x3, 0(x2) # store 0x909eb12d in memory
flh f4, 0(x2) # load 0x909eb12d from memory into f4
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
fnmadd.h f14, f28, f4, f26, dyn # perform operation
fnmadd.h f14, f28, f4, f26, rdn # perform operation
fnmadd.h f14, f28, f4, f26, rmm # perform operation
fnmadd.h f14, f28, f4, f26, rne # perform operation
fnmadd.h f14, f28, f4, f26, rtz # perform operation
fnmadd.h f14, f28, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f4, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3e00)
li x30, 0x6d85b425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
li x3, 0x2dee9db0 # load x3 with value 0x2dee9db0
sw x3, 0(x2) # store 0x2dee9db0 in memory
flh f8, 0(x2) # load 0x2dee9db0 from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
fnmadd.h f30, f19, f8, f23, dyn # perform operation
fnmadd.h f30, f19, f8, f23, rdn # perform operation
fnmadd.h f30, f19, f8, f23, rmm # perform operation
fnmadd.h f30, f19, f8, f23, rne # perform operation
fnmadd.h f30, f19, f8, f23, rtz # perform operation
fnmadd.h f30, f19, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f19, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbe00)
li x17, 0xcfc9a9b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
li x3, 0x0b22e830 # load x3 with value 0x0b22e830
sw x3, 0(x2) # store 0x0b22e830 in memory
flh f21, 0(x2) # load 0x0b22e830 from memory into f21
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
fnmadd.h f17, f19, f21, f30, dyn # perform operation
fnmadd.h f17, f19, f21, f30, rdn # perform operation
fnmadd.h f17, f19, f21, f30, rmm # perform operation
fnmadd.h f17, f19, f21, f30, rne # perform operation
fnmadd.h f17, f19, f21, f30, rtz # perform operation
fnmadd.h f17, f19, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f19, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x4000)
li x7, 0x1deb31fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
li x3, 0xaecb5aa5 # load x3 with value 0xaecb5aa5
sw x3, 0(x2) # store 0xaecb5aa5 in memory
flh f16, 0(x2) # load 0xaecb5aa5 from memory into f16
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
fnmadd.h f7, f19, f16, f2, dyn # perform operation
fnmadd.h f7, f19, f16, f2, rdn # perform operation
fnmadd.h f7, f19, f16, f2, rmm # perform operation
fnmadd.h f7, f19, f16, f2, rne # perform operation
fnmadd.h f7, f19, f16, f2, rtz # perform operation
fnmadd.h f7, f19, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc000)
li x27, 0x13fec62a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0x8e8e7467 # load x3 with value 0x8e8e7467
sw x3, 0(x2) # store 0x8e8e7467 in memory
flh f16, 0(x2) # load 0x8e8e7467 from memory into f16
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
fnmadd.h f27, f20, f16, f13, dyn # perform operation
fnmadd.h f27, f20, f16, f13, rdn # perform operation
fnmadd.h f27, f20, f16, f13, rmm # perform operation
fnmadd.h f27, f20, f16, f13, rne # perform operation
fnmadd.h f27, f20, f16, f13, rtz # perform operation
fnmadd.h f27, f20, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x400)
li x27, 0x1626e484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
li x3, 0xb7bef3c6 # load x3 with value 0xb7bef3c6
sw x3, 0(x2) # store 0xb7bef3c6 in memory
flh f9, 0(x2) # load 0xb7bef3c6 from memory into f9
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
fnmadd.h f27, f13, f9, f8, dyn # perform operation
fnmadd.h f27, f13, f9, f8, rdn # perform operation
fnmadd.h f27, f13, f9, f8, rmm # perform operation
fnmadd.h f27, f13, f9, f8, rne # perform operation
fnmadd.h f27, f13, f9, f8, rtz # perform operation
fnmadd.h f27, f13, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8400)
li x24, 0x1db1ae6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0xb96ecd03 # load x3 with value 0xb96ecd03
sw x3, 0(x2) # store 0xb96ecd03 in memory
flh f19, 0(x2) # load 0xb96ecd03 from memory into f19
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
fnmadd.h f24, f27, f19, f31, dyn # perform operation
fnmadd.h f24, f27, f19, f31, rdn # perform operation
fnmadd.h f24, f27, f19, f31, rmm # perform operation
fnmadd.h f24, f27, f19, f31, rne # perform operation
fnmadd.h f24, f27, f19, f31, rtz # perform operation
fnmadd.h f24, f27, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7bff)
li x17, 0x8f073cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0x66b2234c # load x3 with value 0x66b2234c
sw x3, 0(x2) # store 0x66b2234c in memory
flh f10, 0(x2) # load 0x66b2234c from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
fnmadd.h f17, f7, f10, f3, dyn # perform operation
fnmadd.h f17, f7, f10, f3, rdn # perform operation
fnmadd.h f17, f7, f10, f3, rmm # perform operation
fnmadd.h f17, f7, f10, f3, rne # perform operation
fnmadd.h f17, f7, f10, f3, rtz # perform operation
fnmadd.h f17, f7, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfbff)
li x27, 0x8119b5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x379d6f7d # load x3 with value 0x379d6f7d
sw x3, 0(x2) # store 0x379d6f7d in memory
flh f6, 0(x2) # load 0x379d6f7d from memory into f6
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
fnmadd.h f27, f18, f6, f17, dyn # perform operation
fnmadd.h f27, f18, f6, f17, rdn # perform operation
fnmadd.h f27, f18, f6, f17, rmm # perform operation
fnmadd.h f27, f18, f6, f17, rne # perform operation
fnmadd.h f27, f18, f6, f17, rtz # perform operation
fnmadd.h f27, f18, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3ff)
li x19, 0x592cdc6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
li x3, 0xd52728f7 # load x3 with value 0xd52728f7
sw x3, 0(x2) # store 0xd52728f7 in memory
flh f15, 0(x2) # load 0xd52728f7 from memory into f15
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
fnmadd.h f19, f23, f15, f18, dyn # perform operation
fnmadd.h f19, f23, f15, f18, rdn # perform operation
fnmadd.h f19, f23, f15, f18, rmm # perform operation
fnmadd.h f19, f23, f15, f18, rne # perform operation
fnmadd.h f19, f23, f15, f18, rtz # perform operation
fnmadd.h f19, f23, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f15, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x83ff)
li x10, 0xafa9edd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f4, 0(x2) # load 0x00008000 from memory into f4
li x3, 0xa765a4fc # load x3 with value 0xa765a4fc
sw x3, 0(x2) # store 0xa765a4fc in memory
flh f12, 0(x2) # load 0xa765a4fc from memory into f12
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f10, f4, f12, f18, dyn # perform operation
fnmadd.h f10, f4, f12, f18, rdn # perform operation
fnmadd.h f10, f4, f12, f18, rmm # perform operation
fnmadd.h f10, f4, f12, f18, rne # perform operation
fnmadd.h f10, f4, f12, f18, rtz # perform operation
fnmadd.h f10, f4, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x200)
li x21, 0xdd96c22e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
li x3, 0xefb1d66c # load x3 with value 0xefb1d66c
sw x3, 0(x2) # store 0xefb1d66c in memory
flh f18, 0(x2) # load 0xefb1d66c from memory into f18
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f21, f5, f18, f26, dyn # perform operation
fnmadd.h f21, f5, f18, f26, rdn # perform operation
fnmadd.h f21, f5, f18, f26, rmm # perform operation
fnmadd.h f21, f5, f18, f26, rne # perform operation
fnmadd.h f21, f5, f18, f26, rtz # perform operation
fnmadd.h f21, f5, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8200)
li x18, 0x2fe198f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
li x3, 0xf247c6e3 # load x3 with value 0xf247c6e3
sw x3, 0(x2) # store 0xf247c6e3 in memory
flh f28, 0(x2) # load 0xf247c6e3 from memory into f28
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
fnmadd.h f18, f6, f28, f16, dyn # perform operation
fnmadd.h f18, f6, f28, f16, rdn # perform operation
fnmadd.h f18, f6, f28, f16, rmm # perform operation
fnmadd.h f18, f6, f28, f16, rne # perform operation
fnmadd.h f18, f6, f28, f16, rtz # perform operation
fnmadd.h f18, f6, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x1)
li x30, 0x083478ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x16cb861e # load x3 with value 0x16cb861e
sw x3, 0(x2) # store 0x16cb861e in memory
flh f21, 0(x2) # load 0x16cb861e from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
fnmadd.h f30, f12, f21, f16, dyn # perform operation
fnmadd.h f30, f12, f21, f16, rdn # perform operation
fnmadd.h f30, f12, f21, f16, rmm # perform operation
fnmadd.h f30, f12, f21, f16, rne # perform operation
fnmadd.h f30, f12, f21, f16, rtz # perform operation
fnmadd.h f30, f12, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8001)
li x2, 0xea439cf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0x0279840c # load x3 with value 0x0279840c
sw x3, 0(x2) # store 0x0279840c in memory
flh f19, 0(x2) # load 0x0279840c from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
fnmadd.h f2, f26, f19, f9, dyn # perform operation
fnmadd.h f2, f26, f19, f9, rdn # perform operation
fnmadd.h f2, f26, f19, f9, rmm # perform operation
fnmadd.h f2, f26, f19, f9, rne # perform operation
fnmadd.h f2, f26, f19, f9, rtz # perform operation
fnmadd.h f2, f26, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f19, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c00)
li x14, 0x62c80f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
li x3, 0x2dc31a48 # load x3 with value 0x2dc31a48
sw x3, 0(x2) # store 0x2dc31a48 in memory
flh f11, 0(x2) # load 0x2dc31a48 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
fnmadd.h f14, f19, f11, f30, dyn # perform operation
fnmadd.h f14, f19, f11, f30, rdn # perform operation
fnmadd.h f14, f19, f11, f30, rmm # perform operation
fnmadd.h f14, f19, f11, f30, rne # perform operation
fnmadd.h f14, f19, f11, f30, rtz # perform operation
fnmadd.h f14, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc00)
li x17, 0xdd95c07a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
li x3, 0xeee38330 # load x3 with value 0xeee38330
sw x3, 0(x2) # store 0xeee38330 in memory
flh f27, 0(x2) # load 0xeee38330 from memory into f27
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
fnmadd.h f17, f3, f27, f15, dyn # perform operation
fnmadd.h f17, f3, f27, f15, rdn # perform operation
fnmadd.h f17, f3, f27, f15, rmm # perform operation
fnmadd.h f17, f3, f27, f15, rne # perform operation
fnmadd.h f17, f3, f27, f15, rtz # perform operation
fnmadd.h f17, f3, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7e00)
li x9, 0x9edea857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x9df28ff7 # load x3 with value 0x9df28ff7
sw x3, 0(x2) # store 0x9df28ff7 in memory
flh f3, 0(x2) # load 0x9df28ff7 from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
fnmadd.h f9, f22, f3, f19, dyn # perform operation
fnmadd.h f9, f22, f3, f19, rdn # perform operation
fnmadd.h f9, f22, f3, f19, rmm # perform operation
fnmadd.h f9, f22, f3, f19, rne # perform operation
fnmadd.h f9, f22, f3, f19, rtz # perform operation
fnmadd.h f9, f22, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7fff)
li x3, 0x367a3fde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0xfea0581c # load x3 with value 0xfea0581c
sw x3, 0(x2) # store 0xfea0581c in memory
flh f7, 0(x2) # load 0xfea0581c from memory into f7
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
fnmadd.h f3, f27, f7, f13, dyn # perform operation
fnmadd.h f3, f27, f7, f13, rdn # perform operation
fnmadd.h f3, f27, f7, f13, rmm # perform operation
fnmadd.h f3, f27, f7, f13, rne # perform operation
fnmadd.h f3, f27, f7, f13, rtz # perform operation
fnmadd.h f3, f27, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c01)
li x2, 0x2793068f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0x34486a15 # load x3 with value 0x34486a15
sw x3, 0(x2) # store 0x34486a15 in memory
flh f31, 0(x2) # load 0x34486a15 from memory into f31
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
fnmadd.h f2, f27, f31, f14, dyn # perform operation
fnmadd.h f2, f27, f31, f14, rdn # perform operation
fnmadd.h f2, f27, f31, f14, rmm # perform operation
fnmadd.h f2, f27, f31, f14, rne # perform operation
fnmadd.h f2, f27, f31, f14, rtz # perform operation
fnmadd.h f2, f27, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7dff)
li x28, 0x3d49273d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0xe1dbfd1d # load x3 with value 0xe1dbfd1d
sw x3, 0(x2) # store 0xe1dbfd1d in memory
flh f5, 0(x2) # load 0xe1dbfd1d from memory into f5
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
fnmadd.h f28, f31, f5, f3, dyn # perform operation
fnmadd.h f28, f31, f5, f3, rdn # perform operation
fnmadd.h f28, f31, f5, f3, rmm # perform operation
fnmadd.h f28, f31, f5, f3, rne # perform operation
fnmadd.h f28, f31, f5, f3, rtz # perform operation
fnmadd.h f28, f31, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x58b4)
li x11, 0x14a61d75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
li x3, 0x9668746d # load x3 with value 0x9668746d
sw x3, 0(x2) # store 0x9668746d in memory
flh f4, 0(x2) # load 0x9668746d from memory into f4
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
fnmadd.h f11, f13, f4, f7, dyn # perform operation
fnmadd.h f11, f13, f4, f7, rdn # perform operation
fnmadd.h f11, f13, f4, f7, rmm # perform operation
fnmadd.h f11, f13, f4, f7, rne # perform operation
fnmadd.h f11, f13, f4, f7, rtz # perform operation
fnmadd.h f11, f13, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc93a)
li x19, 0xf051f2ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
li x3, 0xb626aea6 # load x3 with value 0xb626aea6
sw x3, 0(x2) # store 0xb626aea6 in memory
flh f23, 0(x2) # load 0xb626aea6 from memory into f23
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
fnmadd.h f19, f3, f23, f20, dyn # perform operation
fnmadd.h f19, f3, f23, f20, rdn # perform operation
fnmadd.h f19, f3, f23, f20, rmm # perform operation
fnmadd.h f19, f3, f23, f20, rne # perform operation
fnmadd.h f19, f3, f23, f20, rtz # perform operation
fnmadd.h f19, f3, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x0)
li x25, 0xa1ab1b1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
li x3, 0xc8f63d63 # load x3 with value 0xc8f63d63
sw x3, 0(x2) # store 0xc8f63d63 in memory
flh f9, 0(x2) # load 0xc8f63d63 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
fnmadd.h f25, f10, f9, f14, dyn # perform operation
fnmadd.h f25, f10, f9, f14, rdn # perform operation
fnmadd.h f25, f10, f9, f14, rmm # perform operation
fnmadd.h f25, f10, f9, f14, rne # perform operation
fnmadd.h f25, f10, f9, f14, rtz # perform operation
fnmadd.h f25, f10, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8000)
li x16, 0xce2fc89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0xed3effd0 # load x3 with value 0xed3effd0
sw x3, 0(x2) # store 0xed3effd0 in memory
flh f14, 0(x2) # load 0xed3effd0 from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f16, f31, f14, f29, dyn # perform operation
fnmadd.h f16, f31, f14, f29, rdn # perform operation
fnmadd.h f16, f31, f14, f29, rmm # perform operation
fnmadd.h f16, f31, f14, f29, rne # perform operation
fnmadd.h f16, f31, f14, f29, rtz # perform operation
fnmadd.h f16, f31, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3c00)
li x31, 0x944f8fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
li x3, 0xdd6d2a61 # load x3 with value 0xdd6d2a61
sw x3, 0(x2) # store 0xdd6d2a61 in memory
flh f7, 0(x2) # load 0xdd6d2a61 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f31, f28, f7, f14, dyn # perform operation
fnmadd.h f31, f28, f7, f14, rdn # perform operation
fnmadd.h f31, f28, f7, f14, rmm # perform operation
fnmadd.h f31, f28, f7, f14, rne # perform operation
fnmadd.h f31, f28, f7, f14, rtz # perform operation
fnmadd.h f31, f28, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f28, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbc00)
li x26, 0xfa37acf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
li x3, 0xadfc0961 # load x3 with value 0xadfc0961
sw x3, 0(x2) # store 0xadfc0961 in memory
flh f12, 0(x2) # load 0xadfc0961 from memory into f12
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
fnmadd.h f26, f25, f12, f23, dyn # perform operation
fnmadd.h f26, f25, f12, f23, rdn # perform operation
fnmadd.h f26, f25, f12, f23, rmm # perform operation
fnmadd.h f26, f25, f12, f23, rne # perform operation
fnmadd.h f26, f25, f12, f23, rtz # perform operation
fnmadd.h f26, f25, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3e00)
li x15, 0x6579511b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
li x3, 0x8573a03d # load x3 with value 0x8573a03d
sw x3, 0(x2) # store 0x8573a03d in memory
flh f3, 0(x2) # load 0x8573a03d from memory into f3
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
fnmadd.h f15, f4, f3, f9, dyn # perform operation
fnmadd.h f15, f4, f3, f9, rdn # perform operation
fnmadd.h f15, f4, f3, f9, rmm # perform operation
fnmadd.h f15, f4, f3, f9, rne # perform operation
fnmadd.h f15, f4, f3, f9, rtz # perform operation
fnmadd.h f15, f4, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f4, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbe00)
li x14, 0x52d1f137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0x238dbcc7 # load x3 with value 0x238dbcc7
sw x3, 0(x2) # store 0x238dbcc7 in memory
flh f21, 0(x2) # load 0x238dbcc7 from memory into f21
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
fnmadd.h f14, f27, f21, f11, dyn # perform operation
fnmadd.h f14, f27, f21, f11, rdn # perform operation
fnmadd.h f14, f27, f21, f11, rmm # perform operation
fnmadd.h f14, f27, f21, f11, rne # perform operation
fnmadd.h f14, f27, f21, f11, rtz # perform operation
fnmadd.h f14, f27, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x4000)
li x29, 0x6949a674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
li x3, 0xa9af23f7 # load x3 with value 0xa9af23f7
sw x3, 0(x2) # store 0xa9af23f7 in memory
flh f6, 0(x2) # load 0xa9af23f7 from memory into f6
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
fnmadd.h f29, f11, f6, f16, dyn # perform operation
fnmadd.h f29, f11, f6, f16, rdn # perform operation
fnmadd.h f29, f11, f6, f16, rmm # perform operation
fnmadd.h f29, f11, f6, f16, rne # perform operation
fnmadd.h f29, f11, f6, f16, rtz # perform operation
fnmadd.h f29, f11, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc000)
li x9, 0x5de35f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0xba8b58b4 # load x3 with value 0xba8b58b4
sw x3, 0(x2) # store 0xba8b58b4 in memory
flh f22, 0(x2) # load 0xba8b58b4 from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f9, f27, f22, f2, dyn # perform operation
fnmadd.h f9, f27, f22, f2, rdn # perform operation
fnmadd.h f9, f27, f22, f2, rmm # perform operation
fnmadd.h f9, f27, f22, f2, rne # perform operation
fnmadd.h f9, f27, f22, f2, rtz # perform operation
fnmadd.h f9, f27, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x400)
li x19, 0x732d2acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
li x3, 0xdb798256 # load x3 with value 0xdb798256
sw x3, 0(x2) # store 0xdb798256 in memory
flh f24, 0(x2) # load 0xdb798256 from memory into f24
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
fnmadd.h f19, f28, f24, f1, dyn # perform operation
fnmadd.h f19, f28, f24, f1, rdn # perform operation
fnmadd.h f19, f28, f24, f1, rmm # perform operation
fnmadd.h f19, f28, f24, f1, rne # perform operation
fnmadd.h f19, f28, f24, f1, rtz # perform operation
fnmadd.h f19, f28, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f28, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f28, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f28, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f28, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f28, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8400)
li x14, 0xa55604f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x7eef16a5 # load x3 with value 0x7eef16a5
sw x3, 0(x2) # store 0x7eef16a5 in memory
flh f30, 0(x2) # load 0x7eef16a5 from memory into f30
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
fnmadd.h f14, f2, f30, f27, dyn # perform operation
fnmadd.h f14, f2, f30, f27, rdn # perform operation
fnmadd.h f14, f2, f30, f27, rmm # perform operation
fnmadd.h f14, f2, f30, f27, rne # perform operation
fnmadd.h f14, f2, f30, f27, rtz # perform operation
fnmadd.h f14, f2, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f2, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7bff)
li x8, 0xa82a5cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x7573c0f3 # load x3 with value 0x7573c0f3
sw x3, 0(x2) # store 0x7573c0f3 in memory
flh f21, 0(x2) # load 0x7573c0f3 from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
fnmadd.h f8, f18, f21, f16, dyn # perform operation
fnmadd.h f8, f18, f21, f16, rdn # perform operation
fnmadd.h f8, f18, f21, f16, rmm # perform operation
fnmadd.h f8, f18, f21, f16, rne # perform operation
fnmadd.h f8, f18, f21, f16, rtz # perform operation
fnmadd.h f8, f18, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f18, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfbff)
li x6, 0x67527c75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0xce3f0602 # load x3 with value 0xce3f0602
sw x3, 0(x2) # store 0xce3f0602 in memory
flh f31, 0(x2) # load 0xce3f0602 from memory into f31
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
fnmadd.h f6, f30, f31, f27, dyn # perform operation
fnmadd.h f6, f30, f31, f27, rdn # perform operation
fnmadd.h f6, f30, f31, f27, rmm # perform operation
fnmadd.h f6, f30, f31, f27, rne # perform operation
fnmadd.h f6, f30, f31, f27, rtz # perform operation
fnmadd.h f6, f30, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3ff)
li x3, 0x383768c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
li x3, 0x71beb493 # load x3 with value 0x71beb493
sw x3, 0(x2) # store 0x71beb493 in memory
flh f31, 0(x2) # load 0x71beb493 from memory into f31
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f3, f22, f31, f7, dyn # perform operation
fnmadd.h f3, f22, f31, f7, rdn # perform operation
fnmadd.h f3, f22, f31, f7, rmm # perform operation
fnmadd.h f3, f22, f31, f7, rne # perform operation
fnmadd.h f3, f22, f31, f7, rtz # perform operation
fnmadd.h f3, f22, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x83ff)
li x6, 0x7281783d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0x90c04286 # load x3 with value 0x90c04286
sw x3, 0(x2) # store 0x90c04286 in memory
flh f11, 0(x2) # load 0x90c04286 from memory into f11
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
fnmadd.h f6, f26, f11, f25, dyn # perform operation
fnmadd.h f6, f26, f11, f25, rdn # perform operation
fnmadd.h f6, f26, f11, f25, rmm # perform operation
fnmadd.h f6, f26, f11, f25, rne # perform operation
fnmadd.h f6, f26, f11, f25, rtz # perform operation
fnmadd.h f6, f26, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f26, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x200)
li x25, 0x955c4fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
li x3, 0x2eacbaf0 # load x3 with value 0x2eacbaf0
sw x3, 0(x2) # store 0x2eacbaf0 in memory
flh f5, 0(x2) # load 0x2eacbaf0 from memory into f5
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
fnmadd.h f25, f1, f5, f21, dyn # perform operation
fnmadd.h f25, f1, f5, f21, rdn # perform operation
fnmadd.h f25, f1, f5, f21, rmm # perform operation
fnmadd.h f25, f1, f5, f21, rne # perform operation
fnmadd.h f25, f1, f5, f21, rtz # perform operation
fnmadd.h f25, f1, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8200)
li x16, 0xe5344a42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
li x3, 0x5240f7f8 # load x3 with value 0x5240f7f8
sw x3, 0(x2) # store 0x5240f7f8 in memory
flh f9, 0(x2) # load 0x5240f7f8 from memory into f9
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
fnmadd.h f16, f11, f9, f24, dyn # perform operation
fnmadd.h f16, f11, f9, f24, rdn # perform operation
fnmadd.h f16, f11, f9, f24, rmm # perform operation
fnmadd.h f16, f11, f9, f24, rne # perform operation
fnmadd.h f16, f11, f9, f24, rtz # perform operation
fnmadd.h f16, f11, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x1)
li x9, 0x69898d10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0xb4f87613 # load x3 with value 0xb4f87613
sw x3, 0(x2) # store 0xb4f87613 in memory
flh f28, 0(x2) # load 0xb4f87613 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.h f9, f6, f28, f23, dyn # perform operation
fnmadd.h f9, f6, f28, f23, rdn # perform operation
fnmadd.h f9, f6, f28, f23, rmm # perform operation
fnmadd.h f9, f6, f28, f23, rne # perform operation
fnmadd.h f9, f6, f28, f23, rtz # perform operation
fnmadd.h f9, f6, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8001)
li x24, 0x38dcc6bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0x6b788181 # load x3 with value 0x6b788181
sw x3, 0(x2) # store 0x6b788181 in memory
flh f16, 0(x2) # load 0x6b788181 from memory into f16
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
fnmadd.h f24, f26, f16, f20, dyn # perform operation
fnmadd.h f24, f26, f16, f20, rdn # perform operation
fnmadd.h f24, f26, f16, f20, rmm # perform operation
fnmadd.h f24, f26, f16, f20, rne # perform operation
fnmadd.h f24, f26, f16, f20, rtz # perform operation
fnmadd.h f24, f26, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c00)
li x29, 0x13b93e8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
li x3, 0xb726b5f0 # load x3 with value 0xb726b5f0
sw x3, 0(x2) # store 0xb726b5f0 in memory
flh f6, 0(x2) # load 0xb726b5f0 from memory into f6
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
fnmadd.h f29, f8, f6, f2, dyn # perform operation
fnmadd.h f29, f8, f6, f2, rdn # perform operation
fnmadd.h f29, f8, f6, f2, rmm # perform operation
fnmadd.h f29, f8, f6, f2, rne # perform operation
fnmadd.h f29, f8, f6, f2, rtz # perform operation
fnmadd.h f29, f8, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f8, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc00)
li x6, 0x33ae36ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
li x3, 0xf018f946 # load x3 with value 0xf018f946
sw x3, 0(x2) # store 0xf018f946 in memory
flh f18, 0(x2) # load 0xf018f946 from memory into f18
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
fnmadd.h f6, f5, f18, f4, dyn # perform operation
fnmadd.h f6, f5, f18, f4, rdn # perform operation
fnmadd.h f6, f5, f18, f4, rmm # perform operation
fnmadd.h f6, f5, f18, f4, rne # perform operation
fnmadd.h f6, f5, f18, f4, rtz # perform operation
fnmadd.h f6, f5, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7e00)
li x5, 0x18759bc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0xa7184555 # load x3 with value 0xa7184555
sw x3, 0(x2) # store 0xa7184555 in memory
flh f15, 0(x2) # load 0xa7184555 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
fnmadd.h f5, f26, f15, f7, dyn # perform operation
fnmadd.h f5, f26, f15, f7, rdn # perform operation
fnmadd.h f5, f26, f15, f7, rmm # perform operation
fnmadd.h f5, f26, f15, f7, rne # perform operation
fnmadd.h f5, f26, f15, f7, rtz # perform operation
fnmadd.h f5, f26, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f26, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7fff)
li x27, 0xf5137b85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
li x3, 0x96ea9586 # load x3 with value 0x96ea9586
sw x3, 0(x2) # store 0x96ea9586 in memory
flh f28, 0(x2) # load 0x96ea9586 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f27, f5, f28, f16, dyn # perform operation
fnmadd.h f27, f5, f28, f16, rdn # perform operation
fnmadd.h f27, f5, f28, f16, rmm # perform operation
fnmadd.h f27, f5, f28, f16, rne # perform operation
fnmadd.h f27, f5, f28, f16, rtz # perform operation
fnmadd.h f27, f5, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c01)
li x22, 0xa49cbe9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
li x3, 0x0c9a2300 # load x3 with value 0x0c9a2300
sw x3, 0(x2) # store 0x0c9a2300 in memory
flh f10, 0(x2) # load 0x0c9a2300 from memory into f10
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
fnmadd.h f22, f7, f10, f18, dyn # perform operation
fnmadd.h f22, f7, f10, f18, rdn # perform operation
fnmadd.h f22, f7, f10, f18, rmm # perform operation
fnmadd.h f22, f7, f10, f18, rne # perform operation
fnmadd.h f22, f7, f10, f18, rtz # perform operation
fnmadd.h f22, f7, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f7, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7dff)
li x26, 0x2d26ffd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
li x3, 0x260c43f0 # load x3 with value 0x260c43f0
sw x3, 0(x2) # store 0x260c43f0 in memory
flh f24, 0(x2) # load 0x260c43f0 from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
fnmadd.h f26, f1, f24, f11, dyn # perform operation
fnmadd.h f26, f1, f24, f11, rdn # perform operation
fnmadd.h f26, f1, f24, f11, rmm # perform operation
fnmadd.h f26, f1, f24, f11, rne # perform operation
fnmadd.h f26, f1, f24, f11, rtz # perform operation
fnmadd.h f26, f1, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x58b4)
li x24, 0x461ed2de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0xf2f0b14d # load x3 with value 0xf2f0b14d
sw x3, 0(x2) # store 0xf2f0b14d in memory
flh f25, 0(x2) # load 0xf2f0b14d from memory into f25
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
fnmadd.h f24, f16, f25, f17, dyn # perform operation
fnmadd.h f24, f16, f25, f17, rdn # perform operation
fnmadd.h f24, f16, f25, f17, rmm # perform operation
fnmadd.h f24, f16, f25, f17, rne # perform operation
fnmadd.h f24, f16, f25, f17, rtz # perform operation
fnmadd.h f24, f16, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc93a)
li x6, 0x47e5a713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
li x3, 0x64653bd2 # load x3 with value 0x64653bd2
sw x3, 0(x2) # store 0x64653bd2 in memory
flh f7, 0(x2) # load 0x64653bd2 from memory into f7
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
fnmadd.h f6, f8, f7, f14, dyn # perform operation
fnmadd.h f6, f8, f7, f14, rdn # perform operation
fnmadd.h f6, f8, f7, f14, rmm # perform operation
fnmadd.h f6, f8, f7, f14, rne # perform operation
fnmadd.h f6, f8, f7, f14, rtz # perform operation
fnmadd.h f6, f8, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f8, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f8, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f8, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f8, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f8, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x0)
li x18, 0xc142045e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0xb16798c3 # load x3 with value 0xb16798c3
sw x3, 0(x2) # store 0xb16798c3 in memory
flh f16, 0(x2) # load 0xb16798c3 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.h f18, f13, f16, f2, dyn # perform operation
fnmadd.h f18, f13, f16, f2, rdn # perform operation
fnmadd.h f18, f13, f16, f2, rmm # perform operation
fnmadd.h f18, f13, f16, f2, rne # perform operation
fnmadd.h f18, f13, f16, f2, rtz # perform operation
fnmadd.h f18, f13, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8000)
li x21, 0xf6123ae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0xf419d8e8 # load x3 with value 0xf419d8e8
sw x3, 0(x2) # store 0xf419d8e8 in memory
flh f28, 0(x2) # load 0xf419d8e8 from memory into f28
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
fnmadd.h f21, f30, f28, f12, dyn # perform operation
fnmadd.h f21, f30, f28, f12, rdn # perform operation
fnmadd.h f21, f30, f28, f12, rmm # perform operation
fnmadd.h f21, f30, f28, f12, rne # perform operation
fnmadd.h f21, f30, f28, f12, rtz # perform operation
fnmadd.h f21, f30, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f28, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3c00)
li x6, 0x8f2ce8ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0xe6eae5c1 # load x3 with value 0xe6eae5c1
sw x3, 0(x2) # store 0xe6eae5c1 in memory
flh f11, 0(x2) # load 0xe6eae5c1 from memory into f11
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
fnmadd.h f6, f28, f11, f25, dyn # perform operation
fnmadd.h f6, f28, f11, f25, rdn # perform operation
fnmadd.h f6, f28, f11, f25, rmm # perform operation
fnmadd.h f6, f28, f11, f25, rne # perform operation
fnmadd.h f6, f28, f11, f25, rtz # perform operation
fnmadd.h f6, f28, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbc00)
li x10, 0xef8caf85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0xa00386ec # load x3 with value 0xa00386ec
sw x3, 0(x2) # store 0xa00386ec in memory
flh f5, 0(x2) # load 0xa00386ec from memory into f5
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
fnmadd.h f10, f7, f5, f17, dyn # perform operation
fnmadd.h f10, f7, f5, f17, rdn # perform operation
fnmadd.h f10, f7, f5, f17, rmm # perform operation
fnmadd.h f10, f7, f5, f17, rne # perform operation
fnmadd.h f10, f7, f5, f17, rtz # perform operation
fnmadd.h f10, f7, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3e00)
li x23, 0xd241b57a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x2bcd7a97 # load x3 with value 0x2bcd7a97
sw x3, 0(x2) # store 0x2bcd7a97 in memory
flh f14, 0(x2) # load 0x2bcd7a97 from memory into f14
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
fnmadd.h f23, f24, f14, f18, dyn # perform operation
fnmadd.h f23, f24, f14, f18, rdn # perform operation
fnmadd.h f23, f24, f14, f18, rmm # perform operation
fnmadd.h f23, f24, f14, f18, rne # perform operation
fnmadd.h f23, f24, f14, f18, rtz # perform operation
fnmadd.h f23, f24, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f24, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbe00)
li x18, 0xbcdc783d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0xbbddad25 # load x3 with value 0xbbddad25
sw x3, 0(x2) # store 0xbbddad25 in memory
flh f15, 0(x2) # load 0xbbddad25 from memory into f15
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f18, f7, f15, f10, dyn # perform operation
fnmadd.h f18, f7, f15, f10, rdn # perform operation
fnmadd.h f18, f7, f15, f10, rmm # perform operation
fnmadd.h f18, f7, f15, f10, rne # perform operation
fnmadd.h f18, f7, f15, f10, rtz # perform operation
fnmadd.h f18, f7, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f7, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x4000)
li x3, 0xbf7fa4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
li x3, 0x9cc8f6c9 # load x3 with value 0x9cc8f6c9
sw x3, 0(x2) # store 0x9cc8f6c9 in memory
flh f23, 0(x2) # load 0x9cc8f6c9 from memory into f23
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f3, f29, f23, f12, dyn # perform operation
fnmadd.h f3, f29, f23, f12, rdn # perform operation
fnmadd.h f3, f29, f23, f12, rmm # perform operation
fnmadd.h f3, f29, f23, f12, rne # perform operation
fnmadd.h f3, f29, f23, f12, rtz # perform operation
fnmadd.h f3, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc000)
li x8, 0x9256697b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0xd5b3b091 # load x3 with value 0xd5b3b091
sw x3, 0(x2) # store 0xd5b3b091 in memory
flh f23, 0(x2) # load 0xd5b3b091 from memory into f23
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f8, f7, f23, f2, dyn # perform operation
fnmadd.h f8, f7, f23, f2, rdn # perform operation
fnmadd.h f8, f7, f23, f2, rmm # perform operation
fnmadd.h f8, f7, f23, f2, rne # perform operation
fnmadd.h f8, f7, f23, f2, rtz # perform operation
fnmadd.h f8, f7, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f7, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x400)
li x26, 0xb356a866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0x5eaaea52 # load x3 with value 0x5eaaea52
sw x3, 0(x2) # store 0x5eaaea52 in memory
flh f10, 0(x2) # load 0x5eaaea52 from memory into f10
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
fnmadd.h f26, f4, f10, f24, dyn # perform operation
fnmadd.h f26, f4, f10, f24, rdn # perform operation
fnmadd.h f26, f4, f10, f24, rmm # perform operation
fnmadd.h f26, f4, f10, f24, rne # perform operation
fnmadd.h f26, f4, f10, f24, rtz # perform operation
fnmadd.h f26, f4, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f4, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8400)
li x10, 0x815ed5db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0xf85aad35 # load x3 with value 0xf85aad35
sw x3, 0(x2) # store 0xf85aad35 in memory
flh f4, 0(x2) # load 0xf85aad35 from memory into f4
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
fnmadd.h f10, f6, f4, f25, dyn # perform operation
fnmadd.h f10, f6, f4, f25, rdn # perform operation
fnmadd.h f10, f6, f4, f25, rmm # perform operation
fnmadd.h f10, f6, f4, f25, rne # perform operation
fnmadd.h f10, f6, f4, f25, rtz # perform operation
fnmadd.h f10, f6, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7bff)
li x12, 0x1324777e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0x03296653 # load x3 with value 0x03296653
sw x3, 0(x2) # store 0x03296653 in memory
flh f21, 0(x2) # load 0x03296653 from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f12, f2, f21, f15, dyn # perform operation
fnmadd.h f12, f2, f21, f15, rdn # perform operation
fnmadd.h f12, f2, f21, f15, rmm # perform operation
fnmadd.h f12, f2, f21, f15, rne # perform operation
fnmadd.h f12, f2, f21, f15, rtz # perform operation
fnmadd.h f12, f2, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f2, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfbff)
li x10, 0x492d2476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x831c9957 # load x3 with value 0x831c9957
sw x3, 0(x2) # store 0x831c9957 in memory
flh f1, 0(x2) # load 0x831c9957 from memory into f1
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
fnmadd.h f10, f21, f1, f28, dyn # perform operation
fnmadd.h f10, f21, f1, f28, rdn # perform operation
fnmadd.h f10, f21, f1, f28, rmm # perform operation
fnmadd.h f10, f21, f1, f28, rne # perform operation
fnmadd.h f10, f21, f1, f28, rtz # perform operation
fnmadd.h f10, f21, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f21, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3ff)
li x16, 0x85cf23b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x44956d69 # load x3 with value 0x44956d69
sw x3, 0(x2) # store 0x44956d69 in memory
flh f26, 0(x2) # load 0x44956d69 from memory into f26
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
fnmadd.h f16, f30, f26, f8, dyn # perform operation
fnmadd.h f16, f30, f26, f8, rdn # perform operation
fnmadd.h f16, f30, f26, f8, rmm # perform operation
fnmadd.h f16, f30, f26, f8, rne # perform operation
fnmadd.h f16, f30, f26, f8, rtz # perform operation
fnmadd.h f16, f30, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f30, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f30, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f30, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f30, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f30, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x83ff)
li x14, 0x7e685d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0xd5d1f67f # load x3 with value 0xd5d1f67f
sw x3, 0(x2) # store 0xd5d1f67f in memory
flh f3, 0(x2) # load 0xd5d1f67f from memory into f3
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
fnmadd.h f14, f13, f3, f1, dyn # perform operation
fnmadd.h f14, f13, f3, f1, rdn # perform operation
fnmadd.h f14, f13, f3, f1, rmm # perform operation
fnmadd.h f14, f13, f3, f1, rne # perform operation
fnmadd.h f14, f13, f3, f1, rtz # perform operation
fnmadd.h f14, f13, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f13, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f13, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f13, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f13, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f13, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x200)
li x12, 0xa6fd67c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x684d2dda # load x3 with value 0x684d2dda
sw x3, 0(x2) # store 0x684d2dda in memory
flh f8, 0(x2) # load 0x684d2dda from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f12, f11, f8, f23, dyn # perform operation
fnmadd.h f12, f11, f8, f23, rdn # perform operation
fnmadd.h f12, f11, f8, f23, rmm # perform operation
fnmadd.h f12, f11, f8, f23, rne # perform operation
fnmadd.h f12, f11, f8, f23, rtz # perform operation
fnmadd.h f12, f11, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8200)
li x4, 0x5bc7f891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
li x3, 0xf21fb752 # load x3 with value 0xf21fb752
sw x3, 0(x2) # store 0xf21fb752 in memory
flh f13, 0(x2) # load 0xf21fb752 from memory into f13
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
fnmadd.h f4, f29, f13, f19, dyn # perform operation
fnmadd.h f4, f29, f13, f19, rdn # perform operation
fnmadd.h f4, f29, f13, f19, rmm # perform operation
fnmadd.h f4, f29, f13, f19, rne # perform operation
fnmadd.h f4, f29, f13, f19, rtz # perform operation
fnmadd.h f4, f29, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x1)
li x29, 0x4120065e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x3c334f18 # load x3 with value 0x3c334f18
sw x3, 0(x2) # store 0x3c334f18 in memory
flh f4, 0(x2) # load 0x3c334f18 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f29, f30, f4, f5, dyn # perform operation
fnmadd.h f29, f30, f4, f5, rdn # perform operation
fnmadd.h f29, f30, f4, f5, rmm # perform operation
fnmadd.h f29, f30, f4, f5, rne # perform operation
fnmadd.h f29, f30, f4, f5, rtz # perform operation
fnmadd.h f29, f30, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f30, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8001)
li x28, 0x09a2d522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0x66e6912d # load x3 with value 0x66e6912d
sw x3, 0(x2) # store 0x66e6912d in memory
flh f3, 0(x2) # load 0x66e6912d from memory into f3
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
fnmadd.h f28, f2, f3, f11, dyn # perform operation
fnmadd.h f28, f2, f3, f11, rdn # perform operation
fnmadd.h f28, f2, f3, f11, rmm # perform operation
fnmadd.h f28, f2, f3, f11, rne # perform operation
fnmadd.h f28, f2, f3, f11, rtz # perform operation
fnmadd.h f28, f2, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c00)
li x14, 0xdf1f4841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
li x3, 0xb6411910 # load x3 with value 0xb6411910
sw x3, 0(x2) # store 0xb6411910 in memory
flh f1, 0(x2) # load 0xb6411910 from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f14, f26, f1, f12, dyn # perform operation
fnmadd.h f14, f26, f1, f12, rdn # perform operation
fnmadd.h f14, f26, f1, f12, rmm # perform operation
fnmadd.h f14, f26, f1, f12, rne # perform operation
fnmadd.h f14, f26, f1, f12, rtz # perform operation
fnmadd.h f14, f26, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc00)
li x8, 0x6c017418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
li x3, 0x8f6183c5 # load x3 with value 0x8f6183c5
sw x3, 0(x2) # store 0x8f6183c5 in memory
flh f30, 0(x2) # load 0x8f6183c5 from memory into f30
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
fnmadd.h f8, f26, f30, f23, dyn # perform operation
fnmadd.h f8, f26, f30, f23, rdn # perform operation
fnmadd.h f8, f26, f30, f23, rmm # perform operation
fnmadd.h f8, f26, f30, f23, rne # perform operation
fnmadd.h f8, f26, f30, f23, rtz # perform operation
fnmadd.h f8, f26, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7e00)
li x16, 0xe28171d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
li x3, 0x62fa52ce # load x3 with value 0x62fa52ce
sw x3, 0(x2) # store 0x62fa52ce in memory
flh f3, 0(x2) # load 0x62fa52ce from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
fnmadd.h f16, f5, f3, f1, dyn # perform operation
fnmadd.h f16, f5, f3, f1, rdn # perform operation
fnmadd.h f16, f5, f3, f1, rmm # perform operation
fnmadd.h f16, f5, f3, f1, rne # perform operation
fnmadd.h f16, f5, f3, f1, rtz # perform operation
fnmadd.h f16, f5, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7fff)
li x27, 0x0ce02e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0xc971ab0b # load x3 with value 0xc971ab0b
sw x3, 0(x2) # store 0xc971ab0b in memory
flh f2, 0(x2) # load 0xc971ab0b from memory into f2
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
fnmadd.h f27, f4, f2, f13, dyn # perform operation
fnmadd.h f27, f4, f2, f13, rdn # perform operation
fnmadd.h f27, f4, f2, f13, rmm # perform operation
fnmadd.h f27, f4, f2, f13, rne # perform operation
fnmadd.h f27, f4, f2, f13, rtz # perform operation
fnmadd.h f27, f4, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f4, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c01)
li x19, 0x3be7516a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
li x3, 0x9666cd86 # load x3 with value 0x9666cd86
sw x3, 0(x2) # store 0x9666cd86 in memory
flh f11, 0(x2) # load 0x9666cd86 from memory into f11
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
fnmadd.h f19, f16, f11, f3, dyn # perform operation
fnmadd.h f19, f16, f11, f3, rdn # perform operation
fnmadd.h f19, f16, f11, f3, rmm # perform operation
fnmadd.h f19, f16, f11, f3, rne # perform operation
fnmadd.h f19, f16, f11, f3, rtz # perform operation
fnmadd.h f19, f16, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7dff)
li x16, 0x2cab891b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
li x3, 0x6c424cab # load x3 with value 0x6c424cab
sw x3, 0(x2) # store 0x6c424cab in memory
flh f15, 0(x2) # load 0x6c424cab from memory into f15
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f16, f14, f15, f10, dyn # perform operation
fnmadd.h f16, f14, f15, f10, rdn # perform operation
fnmadd.h f16, f14, f15, f10, rmm # perform operation
fnmadd.h f16, f14, f15, f10, rne # perform operation
fnmadd.h f16, f14, f15, f10, rtz # perform operation
fnmadd.h f16, f14, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f14, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f14, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f14, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f14, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f14, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x58b4)
li x14, 0x70a8ba67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0xc047ec04 # load x3 with value 0xc047ec04
sw x3, 0(x2) # store 0xc047ec04 in memory
flh f5, 0(x2) # load 0xc047ec04 from memory into f5
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
fnmadd.h f14, f7, f5, f3, dyn # perform operation
fnmadd.h f14, f7, f5, f3, rdn # perform operation
fnmadd.h f14, f7, f5, f3, rmm # perform operation
fnmadd.h f14, f7, f5, f3, rne # perform operation
fnmadd.h f14, f7, f5, f3, rtz # perform operation
fnmadd.h f14, f7, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f7, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f7, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f7, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f7, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f7, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc93a)
li x21, 0x4db9ee24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0xa35effd9 # load x3 with value 0xa35effd9
sw x3, 0(x2) # store 0xa35effd9 in memory
flh f2, 0(x2) # load 0xa35effd9 from memory into f2
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
fnmadd.h f21, f6, f2, f3, dyn # perform operation
fnmadd.h f21, f6, f2, f3, rdn # perform operation
fnmadd.h f21, f6, f2, f3, rmm # perform operation
fnmadd.h f21, f6, f2, f3, rne # perform operation
fnmadd.h f21, f6, f2, f3, rtz # perform operation
fnmadd.h f21, f6, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f6, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f6, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f6, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f6, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f6, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x0)
li x1, 0xaea40d94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x8fc92d8b # load x3 with value 0x8fc92d8b
sw x3, 0(x2) # store 0x8fc92d8b in memory
flh f23, 0(x2) # load 0x8fc92d8b from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.h f1, f6, f23, f29, dyn # perform operation
fnmadd.h f1, f6, f23, f29, rdn # perform operation
fnmadd.h f1, f6, f23, f29, rmm # perform operation
fnmadd.h f1, f6, f23, f29, rne # perform operation
fnmadd.h f1, f6, f23, f29, rtz # perform operation
fnmadd.h f1, f6, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8000)
li x16, 0x771b3956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
li x3, 0x2078361a # load x3 with value 0x2078361a
sw x3, 0(x2) # store 0x2078361a in memory
flh f23, 0(x2) # load 0x2078361a from memory into f23
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
fnmadd.h f16, f28, f23, f6, dyn # perform operation
fnmadd.h f16, f28, f23, f6, rdn # perform operation
fnmadd.h f16, f28, f23, f6, rmm # perform operation
fnmadd.h f16, f28, f23, f6, rne # perform operation
fnmadd.h f16, f28, f23, f6, rtz # perform operation
fnmadd.h f16, f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3c00)
li x13, 0x49fe1deb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
li x3, 0x1bde7b4a # load x3 with value 0x1bde7b4a
sw x3, 0(x2) # store 0x1bde7b4a in memory
flh f9, 0(x2) # load 0x1bde7b4a from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f13, f25, f9, f1, dyn # perform operation
fnmadd.h f13, f25, f9, f1, rdn # perform operation
fnmadd.h f13, f25, f9, f1, rmm # perform operation
fnmadd.h f13, f25, f9, f1, rne # perform operation
fnmadd.h f13, f25, f9, f1, rtz # perform operation
fnmadd.h f13, f25, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbc00)
li x26, 0xdb37f7ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x2b85cd6a # load x3 with value 0x2b85cd6a
sw x3, 0(x2) # store 0x2b85cd6a in memory
flh f22, 0(x2) # load 0x2b85cd6a from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
fnmadd.h f26, f6, f22, f21, dyn # perform operation
fnmadd.h f26, f6, f22, f21, rdn # perform operation
fnmadd.h f26, f6, f22, f21, rmm # perform operation
fnmadd.h f26, f6, f22, f21, rne # perform operation
fnmadd.h f26, f6, f22, f21, rtz # perform operation
fnmadd.h f26, f6, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3e00)
li x21, 0xa24cad2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x0a915831 # load x3 with value 0x0a915831
sw x3, 0(x2) # store 0x0a915831 in memory
flh f10, 0(x2) # load 0x0a915831 from memory into f10
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
fnmadd.h f21, f15, f10, f16, dyn # perform operation
fnmadd.h f21, f15, f10, f16, rdn # perform operation
fnmadd.h f21, f15, f10, f16, rmm # perform operation
fnmadd.h f21, f15, f10, f16, rne # perform operation
fnmadd.h f21, f15, f10, f16, rtz # perform operation
fnmadd.h f21, f15, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbe00)
li x24, 0x07fb0ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
li x3, 0xcbddd52b # load x3 with value 0xcbddd52b
sw x3, 0(x2) # store 0xcbddd52b in memory
flh f19, 0(x2) # load 0xcbddd52b from memory into f19
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f24, f14, f19, f22, dyn # perform operation
fnmadd.h f24, f14, f19, f22, rdn # perform operation
fnmadd.h f24, f14, f19, f22, rmm # perform operation
fnmadd.h f24, f14, f19, f22, rne # perform operation
fnmadd.h f24, f14, f19, f22, rtz # perform operation
fnmadd.h f24, f14, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x4000)
li x27, 0xa0f3ad76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
li x3, 0xe9f06538 # load x3 with value 0xe9f06538
sw x3, 0(x2) # store 0xe9f06538 in memory
flh f16, 0(x2) # load 0xe9f06538 from memory into f16
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
fnmadd.h f27, f5, f16, f8, dyn # perform operation
fnmadd.h f27, f5, f16, f8, rdn # perform operation
fnmadd.h f27, f5, f16, f8, rmm # perform operation
fnmadd.h f27, f5, f16, f8, rne # perform operation
fnmadd.h f27, f5, f16, f8, rtz # perform operation
fnmadd.h f27, f5, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc000)
li x17, 0x2a4fa16a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x689f6628 # load x3 with value 0x689f6628
sw x3, 0(x2) # store 0x689f6628 in memory
flh f25, 0(x2) # load 0x689f6628 from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f17, f15, f25, f2, dyn # perform operation
fnmadd.h f17, f15, f25, f2, rdn # perform operation
fnmadd.h f17, f15, f25, f2, rmm # perform operation
fnmadd.h f17, f15, f25, f2, rne # perform operation
fnmadd.h f17, f15, f25, f2, rtz # perform operation
fnmadd.h f17, f15, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x400)
li x15, 0xb08b5c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
li x3, 0x9a5638af # load x3 with value 0x9a5638af
sw x3, 0(x2) # store 0x9a5638af in memory
flh f31, 0(x2) # load 0x9a5638af from memory into f31
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
fnmadd.h f15, f21, f31, f26, dyn # perform operation
fnmadd.h f15, f21, f31, f26, rdn # perform operation
fnmadd.h f15, f21, f31, f26, rmm # perform operation
fnmadd.h f15, f21, f31, f26, rne # perform operation
fnmadd.h f15, f21, f31, f26, rtz # perform operation
fnmadd.h f15, f21, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f21, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8400)
li x18, 0xa5cd0353 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x1c18206d # load x3 with value 0x1c18206d
sw x3, 0(x2) # store 0x1c18206d in memory
flh f16, 0(x2) # load 0x1c18206d from memory into f16
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
fnmadd.h f18, f15, f16, f30, dyn # perform operation
fnmadd.h f18, f15, f16, f30, rdn # perform operation
fnmadd.h f18, f15, f16, f30, rmm # perform operation
fnmadd.h f18, f15, f16, f30, rne # perform operation
fnmadd.h f18, f15, f16, f30, rtz # perform operation
fnmadd.h f18, f15, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f15, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f15, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7bff)
li x1, 0x409b2a72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
li x3, 0xcda63ab1 # load x3 with value 0xcda63ab1
sw x3, 0(x2) # store 0xcda63ab1 in memory
flh f7, 0(x2) # load 0xcda63ab1 from memory into f7
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
fnmadd.h f1, f21, f7, f19, dyn # perform operation
fnmadd.h f1, f21, f7, f19, rdn # perform operation
fnmadd.h f1, f21, f7, f19, rmm # perform operation
fnmadd.h f1, f21, f7, f19, rne # perform operation
fnmadd.h f1, f21, f7, f19, rtz # perform operation
fnmadd.h f1, f21, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f7, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfbff)
li x29, 0xdde03e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x9d7294f9 # load x3 with value 0x9d7294f9
sw x3, 0(x2) # store 0x9d7294f9 in memory
flh f26, 0(x2) # load 0x9d7294f9 from memory into f26
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
fnmadd.h f29, f2, f26, f11, dyn # perform operation
fnmadd.h f29, f2, f26, f11, rdn # perform operation
fnmadd.h f29, f2, f26, f11, rmm # perform operation
fnmadd.h f29, f2, f26, f11, rne # perform operation
fnmadd.h f29, f2, f26, f11, rtz # perform operation
fnmadd.h f29, f2, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3ff)
li x8, 0x58fc9959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
li x3, 0x7c0c84bd # load x3 with value 0x7c0c84bd
sw x3, 0(x2) # store 0x7c0c84bd in memory
flh f10, 0(x2) # load 0x7c0c84bd from memory into f10
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f8, f1, f10, f7, dyn # perform operation
fnmadd.h f8, f1, f10, f7, rdn # perform operation
fnmadd.h f8, f1, f10, f7, rmm # perform operation
fnmadd.h f8, f1, f10, f7, rne # perform operation
fnmadd.h f8, f1, f10, f7, rtz # perform operation
fnmadd.h f8, f1, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f10, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x83ff)
li x16, 0x5244ff4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
li x3, 0x19a41f17 # load x3 with value 0x19a41f17
sw x3, 0(x2) # store 0x19a41f17 in memory
flh f23, 0(x2) # load 0x19a41f17 from memory into f23
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f16, f24, f23, f9, dyn # perform operation
fnmadd.h f16, f24, f23, f9, rdn # perform operation
fnmadd.h f16, f24, f23, f9, rmm # perform operation
fnmadd.h f16, f24, f23, f9, rne # perform operation
fnmadd.h f16, f24, f23, f9, rtz # perform operation
fnmadd.h f16, f24, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x200)
li x1, 0x64e0b157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0xb2580e6f # load x3 with value 0xb2580e6f
sw x3, 0(x2) # store 0xb2580e6f in memory
flh f28, 0(x2) # load 0xb2580e6f from memory into f28
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f1, f2, f28, f8, dyn # perform operation
fnmadd.h f1, f2, f28, f8, rdn # perform operation
fnmadd.h f1, f2, f28, f8, rmm # perform operation
fnmadd.h f1, f2, f28, f8, rne # perform operation
fnmadd.h f1, f2, f28, f8, rtz # perform operation
fnmadd.h f1, f2, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8200)
li x15, 0xb6369883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0x4b01ad22 # load x3 with value 0x4b01ad22
sw x3, 0(x2) # store 0x4b01ad22 in memory
flh f25, 0(x2) # load 0x4b01ad22 from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f15, f22, f25, f14, dyn # perform operation
fnmadd.h f15, f22, f25, f14, rdn # perform operation
fnmadd.h f15, f22, f25, f14, rmm # perform operation
fnmadd.h f15, f22, f25, f14, rne # perform operation
fnmadd.h f15, f22, f25, f14, rtz # perform operation
fnmadd.h f15, f22, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x1)
li x23, 0x1dcf984f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0x2a25d26f # load x3 with value 0x2a25d26f
sw x3, 0(x2) # store 0x2a25d26f in memory
flh f15, 0(x2) # load 0x2a25d26f from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.h f23, f7, f15, f9, dyn # perform operation
fnmadd.h f23, f7, f15, f9, rdn # perform operation
fnmadd.h f23, f7, f15, f9, rmm # perform operation
fnmadd.h f23, f7, f15, f9, rne # perform operation
fnmadd.h f23, f7, f15, f9, rtz # perform operation
fnmadd.h f23, f7, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8001)
li x23, 0xa918e9b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
li x3, 0x15fc6bc2 # load x3 with value 0x15fc6bc2
sw x3, 0(x2) # store 0x15fc6bc2 in memory
flh f4, 0(x2) # load 0x15fc6bc2 from memory into f4
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f23, f24, f4, f31, dyn # perform operation
fnmadd.h f23, f24, f4, f31, rdn # perform operation
fnmadd.h f23, f24, f4, f31, rmm # perform operation
fnmadd.h f23, f24, f4, f31, rne # perform operation
fnmadd.h f23, f24, f4, f31, rtz # perform operation
fnmadd.h f23, f24, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f24, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f24, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f24, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f24, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f24, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c00)
li x1, 0x2f2e03d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
li x3, 0x3ed56163 # load x3 with value 0x3ed56163
sw x3, 0(x2) # store 0x3ed56163 in memory
flh f30, 0(x2) # load 0x3ed56163 from memory into f30
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
fnmadd.h f1, f24, f30, f13, dyn # perform operation
fnmadd.h f1, f24, f30, f13, rdn # perform operation
fnmadd.h f1, f24, f30, f13, rmm # perform operation
fnmadd.h f1, f24, f30, f13, rne # perform operation
fnmadd.h f1, f24, f30, f13, rtz # perform operation
fnmadd.h f1, f24, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f30, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc00)
li x10, 0x231ec72f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0xce54785b # load x3 with value 0xce54785b
sw x3, 0(x2) # store 0xce54785b in memory
flh f5, 0(x2) # load 0xce54785b from memory into f5
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f10, f26, f5, f13, dyn # perform operation
fnmadd.h f10, f26, f5, f13, rdn # perform operation
fnmadd.h f10, f26, f5, f13, rmm # perform operation
fnmadd.h f10, f26, f5, f13, rne # perform operation
fnmadd.h f10, f26, f5, f13, rtz # perform operation
fnmadd.h f10, f26, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7e00)
li x17, 0x5711bbcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
li x3, 0x6f2593d7 # load x3 with value 0x6f2593d7
sw x3, 0(x2) # store 0x6f2593d7 in memory
flh f13, 0(x2) # load 0x6f2593d7 from memory into f13
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f17, f21, f13, f28, dyn # perform operation
fnmadd.h f17, f21, f13, f28, rdn # perform operation
fnmadd.h f17, f21, f13, f28, rmm # perform operation
fnmadd.h f17, f21, f13, f28, rne # perform operation
fnmadd.h f17, f21, f13, f28, rtz # perform operation
fnmadd.h f17, f21, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7fff)
li x2, 0x9033d7d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x952e1e67 # load x3 with value 0x952e1e67
sw x3, 0(x2) # store 0x952e1e67 in memory
flh f5, 0(x2) # load 0x952e1e67 from memory into f5
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f2, f10, f5, f23, dyn # perform operation
fnmadd.h f2, f10, f5, f23, rdn # perform operation
fnmadd.h f2, f10, f5, f23, rmm # perform operation
fnmadd.h f2, f10, f5, f23, rne # perform operation
fnmadd.h f2, f10, f5, f23, rtz # perform operation
fnmadd.h f2, f10, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c01)
li x28, 0x4d4c47ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0x48389980 # load x3 with value 0x48389980
sw x3, 0(x2) # store 0x48389980 in memory
flh f20, 0(x2) # load 0x48389980 from memory into f20
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
fnmadd.h f28, f12, f20, f9, dyn # perform operation
fnmadd.h f28, f12, f20, f9, rdn # perform operation
fnmadd.h f28, f12, f20, f9, rmm # perform operation
fnmadd.h f28, f12, f20, f9, rne # perform operation
fnmadd.h f28, f12, f20, f9, rtz # perform operation
fnmadd.h f28, f12, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7dff)
li x14, 0xa7d2b65c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
li x3, 0x7295c241 # load x3 with value 0x7295c241
sw x3, 0(x2) # store 0x7295c241 in memory
flh f7, 0(x2) # load 0x7295c241 from memory into f7
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
fnmadd.h f14, f4, f7, f24, dyn # perform operation
fnmadd.h f14, f4, f7, f24, rdn # perform operation
fnmadd.h f14, f4, f7, f24, rmm # perform operation
fnmadd.h f14, f4, f7, f24, rne # perform operation
fnmadd.h f14, f4, f7, f24, rtz # perform operation
fnmadd.h f14, f4, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f4, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x58b4)
li x27, 0xddee3ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0x0339e05a # load x3 with value 0x0339e05a
sw x3, 0(x2) # store 0x0339e05a in memory
flh f8, 0(x2) # load 0x0339e05a from memory into f8
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
fnmadd.h f27, f7, f8, f30, dyn # perform operation
fnmadd.h f27, f7, f8, f30, rdn # perform operation
fnmadd.h f27, f7, f8, f30, rmm # perform operation
fnmadd.h f27, f7, f8, f30, rne # perform operation
fnmadd.h f27, f7, f8, f30, rtz # perform operation
fnmadd.h f27, f7, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc93a)
li x18, 0x2c0e9399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
li x3, 0x241f7594 # load x3 with value 0x241f7594
sw x3, 0(x2) # store 0x241f7594 in memory
flh f16, 0(x2) # load 0x241f7594 from memory into f16
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f18, f17, f16, f12, dyn # perform operation
fnmadd.h f18, f17, f16, f12, rdn # perform operation
fnmadd.h f18, f17, f16, f12, rmm # perform operation
fnmadd.h f18, f17, f16, f12, rne # perform operation
fnmadd.h f18, f17, f16, f12, rtz # perform operation
fnmadd.h f18, f17, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x0)
li x30, 0x1517e05d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
li x3, 0xdb01a96a # load x3 with value 0xdb01a96a
sw x3, 0(x2) # store 0xdb01a96a in memory
flh f24, 0(x2) # load 0xdb01a96a from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.h f30, f29, f24, f20, dyn # perform operation
fnmadd.h f30, f29, f24, f20, rdn # perform operation
fnmadd.h f30, f29, f24, f20, rmm # perform operation
fnmadd.h f30, f29, f24, f20, rne # perform operation
fnmadd.h f30, f29, f24, f20, rtz # perform operation
fnmadd.h f30, f29, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f29, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8000)
li x12, 0x7cd1e788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x5c82cf20 # load x3 with value 0x5c82cf20
sw x3, 0(x2) # store 0x5c82cf20 in memory
flh f8, 0(x2) # load 0x5c82cf20 from memory into f8
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
fnmadd.h f12, f23, f8, f24, dyn # perform operation
fnmadd.h f12, f23, f8, f24, rdn # perform operation
fnmadd.h f12, f23, f8, f24, rmm # perform operation
fnmadd.h f12, f23, f8, f24, rne # perform operation
fnmadd.h f12, f23, f8, f24, rtz # perform operation
fnmadd.h f12, f23, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3c00)
li x24, 0x440a1eda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
li x3, 0xced632e5 # load x3 with value 0xced632e5
sw x3, 0(x2) # store 0xced632e5 in memory
flh f16, 0(x2) # load 0xced632e5 from memory into f16
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f24, f5, f16, f14, dyn # perform operation
fnmadd.h f24, f5, f16, f14, rdn # perform operation
fnmadd.h f24, f5, f16, f14, rmm # perform operation
fnmadd.h f24, f5, f16, f14, rne # perform operation
fnmadd.h f24, f5, f16, f14, rtz # perform operation
fnmadd.h f24, f5, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbc00)
li x16, 0x95b99ca5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x94618424 # load x3 with value 0x94618424
sw x3, 0(x2) # store 0x94618424 in memory
flh f15, 0(x2) # load 0x94618424 from memory into f15
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
fnmadd.h f16, f11, f15, f1, dyn # perform operation
fnmadd.h f16, f11, f15, f1, rdn # perform operation
fnmadd.h f16, f11, f15, f1, rmm # perform operation
fnmadd.h f16, f11, f15, f1, rne # perform operation
fnmadd.h f16, f11, f15, f1, rtz # perform operation
fnmadd.h f16, f11, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3e00)
li x1, 0x395dc832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
li x3, 0xfb8b2c7e # load x3 with value 0xfb8b2c7e
sw x3, 0(x2) # store 0xfb8b2c7e in memory
flh f24, 0(x2) # load 0xfb8b2c7e from memory into f24
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
fnmadd.h f1, f25, f24, f16, dyn # perform operation
fnmadd.h f1, f25, f24, f16, rdn # perform operation
fnmadd.h f1, f25, f24, f16, rmm # perform operation
fnmadd.h f1, f25, f24, f16, rne # perform operation
fnmadd.h f1, f25, f24, f16, rtz # perform operation
fnmadd.h f1, f25, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbe00)
li x9, 0xa4ea23e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
li x3, 0xaba876df # load x3 with value 0xaba876df
sw x3, 0(x2) # store 0xaba876df in memory
flh f21, 0(x2) # load 0xaba876df from memory into f21
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
fnmadd.h f9, f8, f21, f3, dyn # perform operation
fnmadd.h f9, f8, f21, f3, rdn # perform operation
fnmadd.h f9, f8, f21, f3, rmm # perform operation
fnmadd.h f9, f8, f21, f3, rne # perform operation
fnmadd.h f9, f8, f21, f3, rtz # perform operation
fnmadd.h f9, f8, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x4000)
li x22, 0xfd4e43d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0xcb64979e # load x3 with value 0xcb64979e
sw x3, 0(x2) # store 0xcb64979e in memory
flh f24, 0(x2) # load 0xcb64979e from memory into f24
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
fnmadd.h f22, f19, f24, f31, dyn # perform operation
fnmadd.h f22, f19, f24, f31, rdn # perform operation
fnmadd.h f22, f19, f24, f31, rmm # perform operation
fnmadd.h f22, f19, f24, f31, rne # perform operation
fnmadd.h f22, f19, f24, f31, rtz # perform operation
fnmadd.h f22, f19, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc000)
li x21, 0x3edb5a9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0x82023571 # load x3 with value 0x82023571
sw x3, 0(x2) # store 0x82023571 in memory
flh f27, 0(x2) # load 0x82023571 from memory into f27
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
fnmadd.h f21, f6, f27, f19, dyn # perform operation
fnmadd.h f21, f6, f27, f19, rdn # perform operation
fnmadd.h f21, f6, f27, f19, rmm # perform operation
fnmadd.h f21, f6, f27, f19, rne # perform operation
fnmadd.h f21, f6, f27, f19, rtz # perform operation
fnmadd.h f21, f6, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f6, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x400)
li x6, 0x125a27a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
li x3, 0x390df311 # load x3 with value 0x390df311
sw x3, 0(x2) # store 0x390df311 in memory
flh f2, 0(x2) # load 0x390df311 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
fnmadd.h f6, f7, f2, f31, dyn # perform operation
fnmadd.h f6, f7, f2, f31, rdn # perform operation
fnmadd.h f6, f7, f2, f31, rmm # perform operation
fnmadd.h f6, f7, f2, f31, rne # perform operation
fnmadd.h f6, f7, f2, f31, rtz # perform operation
fnmadd.h f6, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8400)
li x16, 0x00f7bcd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
li x3, 0x2887aa77 # load x3 with value 0x2887aa77
sw x3, 0(x2) # store 0x2887aa77 in memory
flh f28, 0(x2) # load 0x2887aa77 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
fnmadd.h f16, f20, f28, f27, dyn # perform operation
fnmadd.h f16, f20, f28, f27, rdn # perform operation
fnmadd.h f16, f20, f28, f27, rmm # perform operation
fnmadd.h f16, f20, f28, f27, rne # perform operation
fnmadd.h f16, f20, f28, f27, rtz # perform operation
fnmadd.h f16, f20, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7bff)
li x22, 0x31b49bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0xc4b66b4d # load x3 with value 0xc4b66b4d
sw x3, 0(x2) # store 0xc4b66b4d in memory
flh f28, 0(x2) # load 0xc4b66b4d from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f22, f12, f28, f21, dyn # perform operation
fnmadd.h f22, f12, f28, f21, rdn # perform operation
fnmadd.h f22, f12, f28, f21, rmm # perform operation
fnmadd.h f22, f12, f28, f21, rne # perform operation
fnmadd.h f22, f12, f28, f21, rtz # perform operation
fnmadd.h f22, f12, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfbff)
li x10, 0x9b711384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x4bbf942a # load x3 with value 0x4bbf942a
sw x3, 0(x2) # store 0x4bbf942a in memory
flh f30, 0(x2) # load 0x4bbf942a from memory into f30
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f10, f11, f30, f15, dyn # perform operation
fnmadd.h f10, f11, f30, f15, rdn # perform operation
fnmadd.h f10, f11, f30, f15, rmm # perform operation
fnmadd.h f10, f11, f30, f15, rne # perform operation
fnmadd.h f10, f11, f30, f15, rtz # perform operation
fnmadd.h f10, f11, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f11, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f11, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3ff)
li x21, 0x601205e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
li x3, 0x5841782c # load x3 with value 0x5841782c
sw x3, 0(x2) # store 0x5841782c in memory
flh f11, 0(x2) # load 0x5841782c from memory into f11
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
fnmadd.h f21, f9, f11, f29, dyn # perform operation
fnmadd.h f21, f9, f11, f29, rdn # perform operation
fnmadd.h f21, f9, f11, f29, rmm # perform operation
fnmadd.h f21, f9, f11, f29, rne # perform operation
fnmadd.h f21, f9, f11, f29, rtz # perform operation
fnmadd.h f21, f9, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x83ff)
li x25, 0x72618e54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x50c776a5 # load x3 with value 0x50c776a5
sw x3, 0(x2) # store 0x50c776a5 in memory
flh f3, 0(x2) # load 0x50c776a5 from memory into f3
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
fnmadd.h f25, f23, f3, f1, dyn # perform operation
fnmadd.h f25, f23, f3, f1, rdn # perform operation
fnmadd.h f25, f23, f3, f1, rmm # perform operation
fnmadd.h f25, f23, f3, f1, rne # perform operation
fnmadd.h f25, f23, f3, f1, rtz # perform operation
fnmadd.h f25, f23, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x200)
li x19, 0x6f835030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
li x3, 0x95ca9517 # load x3 with value 0x95ca9517
sw x3, 0(x2) # store 0x95ca9517 in memory
flh f8, 0(x2) # load 0x95ca9517 from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
fnmadd.h f19, f3, f8, f18, dyn # perform operation
fnmadd.h f19, f3, f8, f18, rdn # perform operation
fnmadd.h f19, f3, f8, f18, rmm # perform operation
fnmadd.h f19, f3, f8, f18, rne # perform operation
fnmadd.h f19, f3, f8, f18, rtz # perform operation
fnmadd.h f19, f3, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8200)
li x22, 0xdb3b694a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x0609b6b5 # load x3 with value 0x0609b6b5
sw x3, 0(x2) # store 0x0609b6b5 in memory
flh f25, 0(x2) # load 0x0609b6b5 from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f22, f30, f25, f14, dyn # perform operation
fnmadd.h f22, f30, f25, f14, rdn # perform operation
fnmadd.h f22, f30, f25, f14, rmm # perform operation
fnmadd.h f22, f30, f25, f14, rne # perform operation
fnmadd.h f22, f30, f25, f14, rtz # perform operation
fnmadd.h f22, f30, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x1)
li x18, 0xb8f1ba75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
li x3, 0x1b8180d8 # load x3 with value 0x1b8180d8
sw x3, 0(x2) # store 0x1b8180d8 in memory
flh f11, 0(x2) # load 0x1b8180d8 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f18, f10, f11, f26, dyn # perform operation
fnmadd.h f18, f10, f11, f26, rdn # perform operation
fnmadd.h f18, f10, f11, f26, rmm # perform operation
fnmadd.h f18, f10, f11, f26, rne # perform operation
fnmadd.h f18, f10, f11, f26, rtz # perform operation
fnmadd.h f18, f10, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8001)
li x12, 0x12d0d613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
li x3, 0x5a3118bc # load x3 with value 0x5a3118bc
sw x3, 0(x2) # store 0x5a3118bc in memory
flh f10, 0(x2) # load 0x5a3118bc from memory into f10
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
fnmadd.h f12, f9, f10, f22, dyn # perform operation
fnmadd.h f12, f9, f10, f22, rdn # perform operation
fnmadd.h f12, f9, f10, f22, rmm # perform operation
fnmadd.h f12, f9, f10, f22, rne # perform operation
fnmadd.h f12, f9, f10, f22, rtz # perform operation
fnmadd.h f12, f9, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c00)
li x12, 0x9feb6463 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
li x3, 0x4b524239 # load x3 with value 0x4b524239
sw x3, 0(x2) # store 0x4b524239 in memory
flh f31, 0(x2) # load 0x4b524239 from memory into f31
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
fnmadd.h f12, f3, f31, f2, dyn # perform operation
fnmadd.h f12, f3, f31, f2, rdn # perform operation
fnmadd.h f12, f3, f31, f2, rmm # perform operation
fnmadd.h f12, f3, f31, f2, rne # perform operation
fnmadd.h f12, f3, f31, f2, rtz # perform operation
fnmadd.h f12, f3, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f3, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc00)
li x2, 0x23e8cd57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0xaf8d5485 # load x3 with value 0xaf8d5485
sw x3, 0(x2) # store 0xaf8d5485 in memory
flh f10, 0(x2) # load 0xaf8d5485 from memory into f10
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
fnmadd.h f2, f1, f10, f29, dyn # perform operation
fnmadd.h f2, f1, f10, f29, rdn # perform operation
fnmadd.h f2, f1, f10, f29, rmm # perform operation
fnmadd.h f2, f1, f10, f29, rne # perform operation
fnmadd.h f2, f1, f10, f29, rtz # perform operation
fnmadd.h f2, f1, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f1, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7e00)
li x17, 0xfe8f56c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
li x3, 0x5bd7e805 # load x3 with value 0x5bd7e805
sw x3, 0(x2) # store 0x5bd7e805 in memory
flh f15, 0(x2) # load 0x5bd7e805 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f4, 0(x2) # load 0x00007e00 from memory into f4
fnmadd.h f17, f16, f15, f4, dyn # perform operation
fnmadd.h f17, f16, f15, f4, rdn # perform operation
fnmadd.h f17, f16, f15, f4, rmm # perform operation
fnmadd.h f17, f16, f15, f4, rne # perform operation
fnmadd.h f17, f16, f15, f4, rtz # perform operation
fnmadd.h f17, f16, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7fff)
li x13, 0xe968e60f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0xcfeca66e # load x3 with value 0xcfeca66e
sw x3, 0(x2) # store 0xcfeca66e in memory
flh f15, 0(x2) # load 0xcfeca66e from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
fnmadd.h f13, f12, f15, f24, dyn # perform operation
fnmadd.h f13, f12, f15, f24, rdn # perform operation
fnmadd.h f13, f12, f15, f24, rmm # perform operation
fnmadd.h f13, f12, f15, f24, rne # perform operation
fnmadd.h f13, f12, f15, f24, rtz # perform operation
fnmadd.h f13, f12, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f12, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c01)
li x6, 0x26f59814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0xee7e98bc # load x3 with value 0xee7e98bc
sw x3, 0(x2) # store 0xee7e98bc in memory
flh f14, 0(x2) # load 0xee7e98bc from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
fnmadd.h f6, f13, f14, f25, dyn # perform operation
fnmadd.h f6, f13, f14, f25, rdn # perform operation
fnmadd.h f6, f13, f14, f25, rmm # perform operation
fnmadd.h f6, f13, f14, f25, rne # perform operation
fnmadd.h f6, f13, f14, f25, rtz # perform operation
fnmadd.h f6, f13, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f13, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7dff)
li x4, 0x2ba0fa92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x61d1e2e4 # load x3 with value 0x61d1e2e4
sw x3, 0(x2) # store 0x61d1e2e4 in memory
flh f22, 0(x2) # load 0x61d1e2e4 from memory into f22
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f4, f30, f22, f26, dyn # perform operation
fnmadd.h f4, f30, f22, f26, rdn # perform operation
fnmadd.h f4, f30, f22, f26, rmm # perform operation
fnmadd.h f4, f30, f22, f26, rne # perform operation
fnmadd.h f4, f30, f22, f26, rtz # perform operation
fnmadd.h f4, f30, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f30, f22, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x58b4)
li x19, 0x6e0b5358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0xa994ba4b # load x3 with value 0xa994ba4b
sw x3, 0(x2) # store 0xa994ba4b in memory
flh f24, 0(x2) # load 0xa994ba4b from memory into f24
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
fnmadd.h f19, f2, f24, f22, dyn # perform operation
fnmadd.h f19, f2, f24, f22, rdn # perform operation
fnmadd.h f19, f2, f24, f22, rmm # perform operation
fnmadd.h f19, f2, f24, f22, rne # perform operation
fnmadd.h f19, f2, f24, f22, rtz # perform operation
fnmadd.h f19, f2, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f2, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc93a)
li x6, 0xa6e019f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x2392f899 # load x3 with value 0x2392f899
sw x3, 0(x2) # store 0x2392f899 in memory
flh f26, 0(x2) # load 0x2392f899 from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
fnmadd.h f6, f11, f26, f25, dyn # perform operation
fnmadd.h f6, f11, f26, f25, rdn # perform operation
fnmadd.h f6, f11, f26, f25, rmm # perform operation
fnmadd.h f6, f11, f26, f25, rne # perform operation
fnmadd.h f6, f11, f26, f25, rtz # perform operation
fnmadd.h f6, f11, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x0)
li x13, 0x3bca7b92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x0785930e # load x3 with value 0x0785930e
sw x3, 0(x2) # store 0x0785930e in memory
flh f21, 0(x2) # load 0x0785930e from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.h f13, f25, f21, f10, dyn # perform operation
fnmadd.h f13, f25, f21, f10, rdn # perform operation
fnmadd.h f13, f25, f21, f10, rmm # perform operation
fnmadd.h f13, f25, f21, f10, rne # perform operation
fnmadd.h f13, f25, f21, f10, rtz # perform operation
fnmadd.h f13, f25, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8000)
li x23, 0xecc767dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
li x3, 0x27d51f65 # load x3 with value 0x27d51f65
sw x3, 0(x2) # store 0x27d51f65 in memory
flh f2, 0(x2) # load 0x27d51f65 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
fnmadd.h f23, f17, f2, f26, dyn # perform operation
fnmadd.h f23, f17, f2, f26, rdn # perform operation
fnmadd.h f23, f17, f2, f26, rmm # perform operation
fnmadd.h f23, f17, f2, f26, rne # perform operation
fnmadd.h f23, f17, f2, f26, rtz # perform operation
fnmadd.h f23, f17, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3c00)
li x3, 0x7ba38467 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x53ebc14d # load x3 with value 0x53ebc14d
sw x3, 0(x2) # store 0x53ebc14d in memory
flh f8, 0(x2) # load 0x53ebc14d from memory into f8
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
fnmadd.h f3, f23, f8, f17, dyn # perform operation
fnmadd.h f3, f23, f8, f17, rdn # perform operation
fnmadd.h f3, f23, f8, f17, rmm # perform operation
fnmadd.h f3, f23, f8, f17, rne # perform operation
fnmadd.h f3, f23, f8, f17, rtz # perform operation
fnmadd.h f3, f23, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f23, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f23, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f23, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f23, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f23, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbc00)
li x14, 0x41b96d1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x3f939f02 # load x3 with value 0x3f939f02
sw x3, 0(x2) # store 0x3f939f02 in memory
flh f12, 0(x2) # load 0x3f939f02 from memory into f12
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f14, f25, f12, f18, dyn # perform operation
fnmadd.h f14, f25, f12, f18, rdn # perform operation
fnmadd.h f14, f25, f12, f18, rmm # perform operation
fnmadd.h f14, f25, f12, f18, rne # perform operation
fnmadd.h f14, f25, f12, f18, rtz # perform operation
fnmadd.h f14, f25, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f25, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3e00)
li x8, 0xf08ab6bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
li x3, 0x99be01f8 # load x3 with value 0x99be01f8
sw x3, 0(x2) # store 0x99be01f8 in memory
flh f10, 0(x2) # load 0x99be01f8 from memory into f10
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
fnmadd.h f8, f20, f10, f1, dyn # perform operation
fnmadd.h f8, f20, f10, f1, rdn # perform operation
fnmadd.h f8, f20, f10, f1, rmm # perform operation
fnmadd.h f8, f20, f10, f1, rne # perform operation
fnmadd.h f8, f20, f10, f1, rtz # perform operation
fnmadd.h f8, f20, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbe00)
li x7, 0x74e2dac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x32a3a432 # load x3 with value 0x32a3a432
sw x3, 0(x2) # store 0x32a3a432 in memory
flh f21, 0(x2) # load 0x32a3a432 from memory into f21
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f7, f5, f21, f14, dyn # perform operation
fnmadd.h f7, f5, f21, f14, rdn # perform operation
fnmadd.h f7, f5, f21, f14, rmm # perform operation
fnmadd.h f7, f5, f21, f14, rne # perform operation
fnmadd.h f7, f5, f21, f14, rtz # perform operation
fnmadd.h f7, f5, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x4000)
li x26, 0xd294ad65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x8146d8a1 # load x3 with value 0x8146d8a1
sw x3, 0(x2) # store 0x8146d8a1 in memory
flh f9, 0(x2) # load 0x8146d8a1 from memory into f9
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
fnmadd.h f26, f5, f9, f22, dyn # perform operation
fnmadd.h f26, f5, f9, f22, rdn # perform operation
fnmadd.h f26, f5, f9, f22, rmm # perform operation
fnmadd.h f26, f5, f9, f22, rne # perform operation
fnmadd.h f26, f5, f9, f22, rtz # perform operation
fnmadd.h f26, f5, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc000)
li x3, 0x44cff47d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
li x3, 0x5afff2af # load x3 with value 0x5afff2af
sw x3, 0(x2) # store 0x5afff2af in memory
flh f1, 0(x2) # load 0x5afff2af from memory into f1
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
fnmadd.h f3, f26, f1, f16, dyn # perform operation
fnmadd.h f3, f26, f1, f16, rdn # perform operation
fnmadd.h f3, f26, f1, f16, rmm # perform operation
fnmadd.h f3, f26, f1, f16, rne # perform operation
fnmadd.h f3, f26, f1, f16, rtz # perform operation
fnmadd.h f3, f26, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x400)
li x9, 0x340db672 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0xf88d5522 # load x3 with value 0xf88d5522
sw x3, 0(x2) # store 0xf88d5522 in memory
flh f3, 0(x2) # load 0xf88d5522 from memory into f3
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
fnmadd.h f9, f12, f3, f11, dyn # perform operation
fnmadd.h f9, f12, f3, f11, rdn # perform operation
fnmadd.h f9, f12, f3, f11, rmm # perform operation
fnmadd.h f9, f12, f3, f11, rne # perform operation
fnmadd.h f9, f12, f3, f11, rtz # perform operation
fnmadd.h f9, f12, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8400)
li x3, 0xc8e83290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0xd55108bf # load x3 with value 0xd55108bf
sw x3, 0(x2) # store 0xd55108bf in memory
flh f4, 0(x2) # load 0xd55108bf from memory into f4
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
fnmadd.h f3, f12, f4, f16, dyn # perform operation
fnmadd.h f3, f12, f4, f16, rdn # perform operation
fnmadd.h f3, f12, f4, f16, rmm # perform operation
fnmadd.h f3, f12, f4, f16, rne # perform operation
fnmadd.h f3, f12, f4, f16, rtz # perform operation
fnmadd.h f3, f12, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7bff)
li x30, 0x6ec6d2a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x57aaf82f # load x3 with value 0x57aaf82f
sw x3, 0(x2) # store 0x57aaf82f in memory
flh f25, 0(x2) # load 0x57aaf82f from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f30, f5, f25, f15, dyn # perform operation
fnmadd.h f30, f5, f25, f15, rdn # perform operation
fnmadd.h f30, f5, f25, f15, rmm # perform operation
fnmadd.h f30, f5, f25, f15, rne # perform operation
fnmadd.h f30, f5, f25, f15, rtz # perform operation
fnmadd.h f30, f5, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfbff)
li x6, 0xacb8c3fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
li x3, 0x7270ec49 # load x3 with value 0x7270ec49
sw x3, 0(x2) # store 0x7270ec49 in memory
flh f2, 0(x2) # load 0x7270ec49 from memory into f2
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
fnmadd.h f6, f20, f2, f24, dyn # perform operation
fnmadd.h f6, f20, f2, f24, rdn # perform operation
fnmadd.h f6, f20, f2, f24, rmm # perform operation
fnmadd.h f6, f20, f2, f24, rne # perform operation
fnmadd.h f6, f20, f2, f24, rtz # perform operation
fnmadd.h f6, f20, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3ff)
li x8, 0x71d706fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0x680d1311 # load x3 with value 0x680d1311
sw x3, 0(x2) # store 0x680d1311 in memory
flh f24, 0(x2) # load 0x680d1311 from memory into f24
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
fnmadd.h f8, f12, f24, f20, dyn # perform operation
fnmadd.h f8, f12, f24, f20, rdn # perform operation
fnmadd.h f8, f12, f24, f20, rmm # perform operation
fnmadd.h f8, f12, f24, f20, rne # perform operation
fnmadd.h f8, f12, f24, f20, rtz # perform operation
fnmadd.h f8, f12, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x83ff)
li x10, 0x351935fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0xbe15a7d0 # load x3 with value 0xbe15a7d0
sw x3, 0(x2) # store 0xbe15a7d0 in memory
flh f8, 0(x2) # load 0xbe15a7d0 from memory into f8
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
fnmadd.h f10, f28, f8, f31, dyn # perform operation
fnmadd.h f10, f28, f8, f31, rdn # perform operation
fnmadd.h f10, f28, f8, f31, rmm # perform operation
fnmadd.h f10, f28, f8, f31, rne # perform operation
fnmadd.h f10, f28, f8, f31, rtz # perform operation
fnmadd.h f10, f28, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x200)
li x31, 0x27d6e6f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0xa32e9b88 # load x3 with value 0xa32e9b88
sw x3, 0(x2) # store 0xa32e9b88 in memory
flh f27, 0(x2) # load 0xa32e9b88 from memory into f27
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f31, f5, f27, f14, dyn # perform operation
fnmadd.h f31, f5, f27, f14, rdn # perform operation
fnmadd.h f31, f5, f27, f14, rmm # perform operation
fnmadd.h f31, f5, f27, f14, rne # perform operation
fnmadd.h f31, f5, f27, f14, rtz # perform operation
fnmadd.h f31, f5, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8200)
li x30, 0x59020450 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
li x3, 0x4095542f # load x3 with value 0x4095542f
sw x3, 0(x2) # store 0x4095542f in memory
flh f17, 0(x2) # load 0x4095542f from memory into f17
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
fnmadd.h f30, f14, f17, f7, dyn # perform operation
fnmadd.h f30, f14, f17, f7, rdn # perform operation
fnmadd.h f30, f14, f17, f7, rmm # perform operation
fnmadd.h f30, f14, f17, f7, rne # perform operation
fnmadd.h f30, f14, f17, f7, rtz # perform operation
fnmadd.h f30, f14, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x1)
li x17, 0x090c6044 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
li x3, 0x27b6b873 # load x3 with value 0x27b6b873
sw x3, 0(x2) # store 0x27b6b873 in memory
flh f19, 0(x2) # load 0x27b6b873 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f17, f22, f19, f31, dyn # perform operation
fnmadd.h f17, f22, f19, f31, rdn # perform operation
fnmadd.h f17, f22, f19, f31, rmm # perform operation
fnmadd.h f17, f22, f19, f31, rne # perform operation
fnmadd.h f17, f22, f19, f31, rtz # perform operation
fnmadd.h f17, f22, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8001)
li x14, 0x73671f0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
li x3, 0x531f1b4b # load x3 with value 0x531f1b4b
sw x3, 0(x2) # store 0x531f1b4b in memory
flh f16, 0(x2) # load 0x531f1b4b from memory into f16
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
fnmadd.h f14, f11, f16, f25, dyn # perform operation
fnmadd.h f14, f11, f16, f25, rdn # perform operation
fnmadd.h f14, f11, f16, f25, rmm # perform operation
fnmadd.h f14, f11, f16, f25, rne # perform operation
fnmadd.h f14, f11, f16, f25, rtz # perform operation
fnmadd.h f14, f11, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c00)
li x14, 0x45102b08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
li x3, 0x06b9bc95 # load x3 with value 0x06b9bc95
sw x3, 0(x2) # store 0x06b9bc95 in memory
flh f23, 0(x2) # load 0x06b9bc95 from memory into f23
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
fnmadd.h f14, f3, f23, f27, dyn # perform operation
fnmadd.h f14, f3, f23, f27, rdn # perform operation
fnmadd.h f14, f3, f23, f27, rmm # perform operation
fnmadd.h f14, f3, f23, f27, rne # perform operation
fnmadd.h f14, f3, f23, f27, rtz # perform operation
fnmadd.h f14, f3, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc00)
li x9, 0x9fe9d9d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0xd2cc39de # load x3 with value 0xd2cc39de
sw x3, 0(x2) # store 0xd2cc39de in memory
flh f7, 0(x2) # load 0xd2cc39de from memory into f7
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
fnmadd.h f9, f23, f7, f16, dyn # perform operation
fnmadd.h f9, f23, f7, f16, rdn # perform operation
fnmadd.h f9, f23, f7, f16, rmm # perform operation
fnmadd.h f9, f23, f7, f16, rne # perform operation
fnmadd.h f9, f23, f7, f16, rtz # perform operation
fnmadd.h f9, f23, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f23, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f23, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f23, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f23, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f23, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7e00)
li x25, 0x49cfe748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0xca841a7e # load x3 with value 0xca841a7e
sw x3, 0(x2) # store 0xca841a7e in memory
flh f20, 0(x2) # load 0xca841a7e from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f25, f5, f20, f16, dyn # perform operation
fnmadd.h f25, f5, f20, f16, rdn # perform operation
fnmadd.h f25, f5, f20, f16, rmm # perform operation
fnmadd.h f25, f5, f20, f16, rne # perform operation
fnmadd.h f25, f5, f20, f16, rtz # perform operation
fnmadd.h f25, f5, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7fff)
li x13, 0xe2df5376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
li x3, 0x366a7f40 # load x3 with value 0x366a7f40
sw x3, 0(x2) # store 0x366a7f40 in memory
flh f8, 0(x2) # load 0x366a7f40 from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f13, f17, f8, f21, dyn # perform operation
fnmadd.h f13, f17, f8, f21, rdn # perform operation
fnmadd.h f13, f17, f8, f21, rmm # perform operation
fnmadd.h f13, f17, f8, f21, rne # perform operation
fnmadd.h f13, f17, f8, f21, rtz # perform operation
fnmadd.h f13, f17, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c01)
li x15, 0xdd95477d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
li x3, 0x457b3f3d # load x3 with value 0x457b3f3d
sw x3, 0(x2) # store 0x457b3f3d in memory
flh f7, 0(x2) # load 0x457b3f3d from memory into f7
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f15, f31, f7, f23, dyn # perform operation
fnmadd.h f15, f31, f7, f23, rdn # perform operation
fnmadd.h f15, f31, f7, f23, rmm # perform operation
fnmadd.h f15, f31, f7, f23, rne # perform operation
fnmadd.h f15, f31, f7, f23, rtz # perform operation
fnmadd.h f15, f31, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7dff)
li x7, 0x3368df51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0xc4d82277 # load x3 with value 0xc4d82277
sw x3, 0(x2) # store 0xc4d82277 in memory
flh f6, 0(x2) # load 0xc4d82277 from memory into f6
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
fnmadd.h f7, f27, f6, f18, dyn # perform operation
fnmadd.h f7, f27, f6, f18, rdn # perform operation
fnmadd.h f7, f27, f6, f18, rmm # perform operation
fnmadd.h f7, f27, f6, f18, rne # perform operation
fnmadd.h f7, f27, f6, f18, rtz # perform operation
fnmadd.h f7, f27, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x58b4)
li x17, 0x80091de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0xe7b54969 # load x3 with value 0xe7b54969
sw x3, 0(x2) # store 0xe7b54969 in memory
flh f13, 0(x2) # load 0xe7b54969 from memory into f13
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
fnmadd.h f17, f24, f13, f23, dyn # perform operation
fnmadd.h f17, f24, f13, f23, rdn # perform operation
fnmadd.h f17, f24, f13, f23, rmm # perform operation
fnmadd.h f17, f24, f13, f23, rne # perform operation
fnmadd.h f17, f24, f13, f23, rtz # perform operation
fnmadd.h f17, f24, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc93a)
li x16, 0x664bd413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0x79f3b949 # load x3 with value 0x79f3b949
sw x3, 0(x2) # store 0x79f3b949 in memory
flh f29, 0(x2) # load 0x79f3b949 from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
fnmadd.h f16, f27, f29, f1, dyn # perform operation
fnmadd.h f16, f27, f29, f1, rdn # perform operation
fnmadd.h f16, f27, f29, f1, rmm # perform operation
fnmadd.h f16, f27, f29, f1, rne # perform operation
fnmadd.h f16, f27, f29, f1, rtz # perform operation
fnmadd.h f16, f27, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f29, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x0)
li x22, 0x5b45c186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
li x3, 0xfd641c4f # load x3 with value 0xfd641c4f
sw x3, 0(x2) # store 0xfd641c4f in memory
flh f21, 0(x2) # load 0xfd641c4f from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.h f22, f15, f21, f29, dyn # perform operation
fnmadd.h f22, f15, f21, f29, rdn # perform operation
fnmadd.h f22, f15, f21, f29, rmm # perform operation
fnmadd.h f22, f15, f21, f29, rne # perform operation
fnmadd.h f22, f15, f21, f29, rtz # perform operation
fnmadd.h f22, f15, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8000)
li x23, 0x261a7f41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0xe1257686 # load x3 with value 0xe1257686
sw x3, 0(x2) # store 0xe1257686 in memory
flh f6, 0(x2) # load 0xe1257686 from memory into f6
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f23, f10, f6, f2, dyn # perform operation
fnmadd.h f23, f10, f6, f2, rdn # perform operation
fnmadd.h f23, f10, f6, f2, rmm # perform operation
fnmadd.h f23, f10, f6, f2, rne # perform operation
fnmadd.h f23, f10, f6, f2, rtz # perform operation
fnmadd.h f23, f10, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3c00)
li x27, 0x5aa9b6b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
li x3, 0xdc2634dc # load x3 with value 0xdc2634dc
sw x3, 0(x2) # store 0xdc2634dc in memory
flh f25, 0(x2) # load 0xdc2634dc from memory into f25
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
fnmadd.h f27, f2, f25, f6, dyn # perform operation
fnmadd.h f27, f2, f25, f6, rdn # perform operation
fnmadd.h f27, f2, f25, f6, rmm # perform operation
fnmadd.h f27, f2, f25, f6, rne # perform operation
fnmadd.h f27, f2, f25, f6, rtz # perform operation
fnmadd.h f27, f2, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f25, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbc00)
li x2, 0xc3e82cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0xd63bf3f9 # load x3 with value 0xd63bf3f9
sw x3, 0(x2) # store 0xd63bf3f9 in memory
flh f1, 0(x2) # load 0xd63bf3f9 from memory into f1
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f2, f17, f1, f31, dyn # perform operation
fnmadd.h f2, f17, f1, f31, rdn # perform operation
fnmadd.h f2, f17, f1, f31, rmm # perform operation
fnmadd.h f2, f17, f1, f31, rne # perform operation
fnmadd.h f2, f17, f1, f31, rtz # perform operation
fnmadd.h f2, f17, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3e00)
li x2, 0xc8fc18e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
li x3, 0xb89b6604 # load x3 with value 0xb89b6604
sw x3, 0(x2) # store 0xb89b6604 in memory
flh f27, 0(x2) # load 0xb89b6604 from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
fnmadd.h f2, f13, f27, f26, dyn # perform operation
fnmadd.h f2, f13, f27, f26, rdn # perform operation
fnmadd.h f2, f13, f27, f26, rmm # perform operation
fnmadd.h f2, f13, f27, f26, rne # perform operation
fnmadd.h f2, f13, f27, f26, rtz # perform operation
fnmadd.h f2, f13, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f13, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbe00)
li x31, 0x96a82918 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0x4d371a3b # load x3 with value 0x4d371a3b
sw x3, 0(x2) # store 0x4d371a3b in memory
flh f20, 0(x2) # load 0x4d371a3b from memory into f20
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f31, f26, f20, f23, dyn # perform operation
fnmadd.h f31, f26, f20, f23, rdn # perform operation
fnmadd.h f31, f26, f20, f23, rmm # perform operation
fnmadd.h f31, f26, f20, f23, rne # perform operation
fnmadd.h f31, f26, f20, f23, rtz # perform operation
fnmadd.h f31, f26, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x4000)
li x2, 0xd84e5092 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
li x3, 0x8d376e22 # load x3 with value 0x8d376e22
sw x3, 0(x2) # store 0x8d376e22 in memory
flh f28, 0(x2) # load 0x8d376e22 from memory into f28
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
fnmadd.h f2, f16, f28, f30, dyn # perform operation
fnmadd.h f2, f16, f28, f30, rdn # perform operation
fnmadd.h f2, f16, f28, f30, rmm # perform operation
fnmadd.h f2, f16, f28, f30, rne # perform operation
fnmadd.h f2, f16, f28, f30, rtz # perform operation
fnmadd.h f2, f16, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f16, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc000)
li x20, 0xcbb147e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0x63b43ca8 # load x3 with value 0x63b43ca8
sw x3, 0(x2) # store 0x63b43ca8 in memory
flh f16, 0(x2) # load 0x63b43ca8 from memory into f16
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
fnmadd.h f20, f12, f16, f13, dyn # perform operation
fnmadd.h f20, f12, f16, f13, rdn # perform operation
fnmadd.h f20, f12, f16, f13, rmm # perform operation
fnmadd.h f20, f12, f16, f13, rne # perform operation
fnmadd.h f20, f12, f16, f13, rtz # perform operation
fnmadd.h f20, f12, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f12, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x400)
li x12, 0x36494382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
li x3, 0xadefd27a # load x3 with value 0xadefd27a
sw x3, 0(x2) # store 0xadefd27a in memory
flh f1, 0(x2) # load 0xadefd27a from memory into f1
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
fnmadd.h f12, f15, f1, f20, dyn # perform operation
fnmadd.h f12, f15, f1, f20, rdn # perform operation
fnmadd.h f12, f15, f1, f20, rmm # perform operation
fnmadd.h f12, f15, f1, f20, rne # perform operation
fnmadd.h f12, f15, f1, f20, rtz # perform operation
fnmadd.h f12, f15, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8400)
li x20, 0x648d5c1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
li x3, 0x9335ee9d # load x3 with value 0x9335ee9d
sw x3, 0(x2) # store 0x9335ee9d in memory
flh f25, 0(x2) # load 0x9335ee9d from memory into f25
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
fnmadd.h f20, f2, f25, f21, dyn # perform operation
fnmadd.h f20, f2, f25, f21, rdn # perform operation
fnmadd.h f20, f2, f25, f21, rmm # perform operation
fnmadd.h f20, f2, f25, f21, rne # perform operation
fnmadd.h f20, f2, f25, f21, rtz # perform operation
fnmadd.h f20, f2, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7bff)
li x26, 0x7acca415 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0xa9656e23 # load x3 with value 0xa9656e23
sw x3, 0(x2) # store 0xa9656e23 in memory
flh f18, 0(x2) # load 0xa9656e23 from memory into f18
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
fnmadd.h f26, f8, f18, f23, dyn # perform operation
fnmadd.h f26, f8, f18, f23, rdn # perform operation
fnmadd.h f26, f8, f18, f23, rmm # perform operation
fnmadd.h f26, f8, f18, f23, rne # perform operation
fnmadd.h f26, f8, f18, f23, rtz # perform operation
fnmadd.h f26, f8, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfbff)
li x24, 0xebabdfb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
li x3, 0x3fec748b # load x3 with value 0x3fec748b
sw x3, 0(x2) # store 0x3fec748b in memory
flh f15, 0(x2) # load 0x3fec748b from memory into f15
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
fnmadd.h f24, f31, f15, f12, dyn # perform operation
fnmadd.h f24, f31, f15, f12, rdn # perform operation
fnmadd.h f24, f31, f15, f12, rmm # perform operation
fnmadd.h f24, f31, f15, f12, rne # perform operation
fnmadd.h f24, f31, f15, f12, rtz # perform operation
fnmadd.h f24, f31, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3ff)
li x17, 0xf10773b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0xd5db823b # load x3 with value 0xd5db823b
sw x3, 0(x2) # store 0xd5db823b in memory
flh f27, 0(x2) # load 0xd5db823b from memory into f27
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
fnmadd.h f17, f28, f27, f14, dyn # perform operation
fnmadd.h f17, f28, f27, f14, rdn # perform operation
fnmadd.h f17, f28, f27, f14, rmm # perform operation
fnmadd.h f17, f28, f27, f14, rne # perform operation
fnmadd.h f17, f28, f27, f14, rtz # perform operation
fnmadd.h f17, f28, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x83ff)
li x23, 0x70738133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
li x3, 0x02069a15 # load x3 with value 0x02069a15
sw x3, 0(x2) # store 0x02069a15 in memory
flh f6, 0(x2) # load 0x02069a15 from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
fnmadd.h f23, f31, f6, f8, dyn # perform operation
fnmadd.h f23, f31, f6, f8, rdn # perform operation
fnmadd.h f23, f31, f6, f8, rmm # perform operation
fnmadd.h f23, f31, f6, f8, rne # perform operation
fnmadd.h f23, f31, f6, f8, rtz # perform operation
fnmadd.h f23, f31, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f31, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f31, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f31, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f31, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f31, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x200)
li x19, 0x3af9e37f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
li x3, 0x29deba68 # load x3 with value 0x29deba68
sw x3, 0(x2) # store 0x29deba68 in memory
flh f5, 0(x2) # load 0x29deba68 from memory into f5
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f19, f21, f5, f6, dyn # perform operation
fnmadd.h f19, f21, f5, f6, rdn # perform operation
fnmadd.h f19, f21, f5, f6, rmm # perform operation
fnmadd.h f19, f21, f5, f6, rne # perform operation
fnmadd.h f19, f21, f5, f6, rtz # perform operation
fnmadd.h f19, f21, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8200)
li x17, 0x7e4e8f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0x93ac9206 # load x3 with value 0x93ac9206
sw x3, 0(x2) # store 0x93ac9206 in memory
flh f27, 0(x2) # load 0x93ac9206 from memory into f27
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f17, f29, f27, f9, dyn # perform operation
fnmadd.h f17, f29, f27, f9, rdn # perform operation
fnmadd.h f17, f29, f27, f9, rmm # perform operation
fnmadd.h f17, f29, f27, f9, rne # perform operation
fnmadd.h f17, f29, f27, f9, rtz # perform operation
fnmadd.h f17, f29, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x1)
li x7, 0xf916176f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
li x3, 0xa983d31d # load x3 with value 0xa983d31d
sw x3, 0(x2) # store 0xa983d31d in memory
flh f14, 0(x2) # load 0xa983d31d from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
fnmadd.h f7, f4, f14, f24, dyn # perform operation
fnmadd.h f7, f4, f14, f24, rdn # perform operation
fnmadd.h f7, f4, f14, f24, rmm # perform operation
fnmadd.h f7, f4, f14, f24, rne # perform operation
fnmadd.h f7, f4, f14, f24, rtz # perform operation
fnmadd.h f7, f4, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f4, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f4, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f4, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f4, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f4, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8001)
li x23, 0x7169d3d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0x444af13b # load x3 with value 0x444af13b
sw x3, 0(x2) # store 0x444af13b in memory
flh f19, 0(x2) # load 0x444af13b from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
fnmadd.h f23, f6, f19, f27, dyn # perform operation
fnmadd.h f23, f6, f19, f27, rdn # perform operation
fnmadd.h f23, f6, f19, f27, rmm # perform operation
fnmadd.h f23, f6, f19, f27, rne # perform operation
fnmadd.h f23, f6, f19, f27, rtz # perform operation
fnmadd.h f23, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c00)
li x2, 0x1f028c46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0x0e760be4 # load x3 with value 0x0e760be4
sw x3, 0(x2) # store 0x0e760be4 in memory
flh f11, 0(x2) # load 0x0e760be4 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
fnmadd.h f2, f10, f11, f23, dyn # perform operation
fnmadd.h f2, f10, f11, f23, rdn # perform operation
fnmadd.h f2, f10, f11, f23, rmm # perform operation
fnmadd.h f2, f10, f11, f23, rne # perform operation
fnmadd.h f2, f10, f11, f23, rtz # perform operation
fnmadd.h f2, f10, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc00)
li x13, 0x2e769665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
li x3, 0x2e94ec9b # load x3 with value 0x2e94ec9b
sw x3, 0(x2) # store 0x2e94ec9b in memory
flh f8, 0(x2) # load 0x2e94ec9b from memory into f8
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
fnmadd.h f13, f25, f8, f27, dyn # perform operation
fnmadd.h f13, f25, f8, f27, rdn # perform operation
fnmadd.h f13, f25, f8, f27, rmm # perform operation
fnmadd.h f13, f25, f8, f27, rne # perform operation
fnmadd.h f13, f25, f8, f27, rtz # perform operation
fnmadd.h f13, f25, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7e00)
li x28, 0xffccf889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0xf0c0daa6 # load x3 with value 0xf0c0daa6
sw x3, 0(x2) # store 0xf0c0daa6 in memory
flh f13, 0(x2) # load 0xf0c0daa6 from memory into f13
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
fnmadd.h f28, f5, f13, f22, dyn # perform operation
fnmadd.h f28, f5, f13, f22, rdn # perform operation
fnmadd.h f28, f5, f13, f22, rmm # perform operation
fnmadd.h f28, f5, f13, f22, rne # perform operation
fnmadd.h f28, f5, f13, f22, rtz # perform operation
fnmadd.h f28, f5, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7fff)
li x31, 0x4dafa256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x59cc8332 # load x3 with value 0x59cc8332
sw x3, 0(x2) # store 0x59cc8332 in memory
flh f18, 0(x2) # load 0x59cc8332 from memory into f18
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
fnmadd.h f31, f28, f18, f9, dyn # perform operation
fnmadd.h f31, f28, f18, f9, rdn # perform operation
fnmadd.h f31, f28, f18, f9, rmm # perform operation
fnmadd.h f31, f28, f18, f9, rne # perform operation
fnmadd.h f31, f28, f18, f9, rtz # perform operation
fnmadd.h f31, f28, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f28, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c01)
li x26, 0xf784cf38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
li x3, 0xc2a0e7db # load x3 with value 0xc2a0e7db
sw x3, 0(x2) # store 0xc2a0e7db in memory
flh f7, 0(x2) # load 0xc2a0e7db from memory into f7
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
fnmadd.h f26, f13, f7, f9, dyn # perform operation
fnmadd.h f26, f13, f7, f9, rdn # perform operation
fnmadd.h f26, f13, f7, f9, rmm # perform operation
fnmadd.h f26, f13, f7, f9, rne # perform operation
fnmadd.h f26, f13, f7, f9, rtz # perform operation
fnmadd.h f26, f13, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7dff)
li x31, 0x0dc34010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x1533cfea # load x3 with value 0x1533cfea
sw x3, 0(x2) # store 0x1533cfea in memory
flh f23, 0(x2) # load 0x1533cfea from memory into f23
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
fnmadd.h f31, f8, f23, f25, dyn # perform operation
fnmadd.h f31, f8, f23, f25, rdn # perform operation
fnmadd.h f31, f8, f23, f25, rmm # perform operation
fnmadd.h f31, f8, f23, f25, rne # perform operation
fnmadd.h f31, f8, f23, f25, rtz # perform operation
fnmadd.h f31, f8, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f8, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x58b4)
li x31, 0x26f8d11e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0x3bc98817 # load x3 with value 0x3bc98817
sw x3, 0(x2) # store 0x3bc98817 in memory
flh f18, 0(x2) # load 0x3bc98817 from memory into f18
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f31, f5, f18, f14, dyn # perform operation
fnmadd.h f31, f5, f18, f14, rdn # perform operation
fnmadd.h f31, f5, f18, f14, rmm # perform operation
fnmadd.h f31, f5, f18, f14, rne # perform operation
fnmadd.h f31, f5, f18, f14, rtz # perform operation
fnmadd.h f31, f5, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc93a)
li x5, 0xe80c52b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
li x3, 0xb2096f84 # load x3 with value 0xb2096f84
sw x3, 0(x2) # store 0xb2096f84 in memory
flh f18, 0(x2) # load 0xb2096f84 from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
fnmadd.h f5, f1, f18, f17, dyn # perform operation
fnmadd.h f5, f1, f18, f17, rdn # perform operation
fnmadd.h f5, f1, f18, f17, rmm # perform operation
fnmadd.h f5, f1, f18, f17, rne # perform operation
fnmadd.h f5, f1, f18, f17, rtz # perform operation
fnmadd.h f5, f1, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x0)
li x16, 0x6904d5d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0x4052206b # load x3 with value 0x4052206b
sw x3, 0(x2) # store 0x4052206b in memory
flh f25, 0(x2) # load 0x4052206b from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.h f16, f7, f25, f13, dyn # perform operation
fnmadd.h f16, f7, f25, f13, rdn # perform operation
fnmadd.h f16, f7, f25, f13, rmm # perform operation
fnmadd.h f16, f7, f25, f13, rne # perform operation
fnmadd.h f16, f7, f25, f13, rtz # perform operation
fnmadd.h f16, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8000)
li x23, 0x075e2aae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0x1395a34a # load x3 with value 0x1395a34a
sw x3, 0(x2) # store 0x1395a34a in memory
flh f11, 0(x2) # load 0x1395a34a from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f4, 0(x2) # load 0x00008000 from memory into f4
fnmadd.h f23, f9, f11, f4, dyn # perform operation
fnmadd.h f23, f9, f11, f4, rdn # perform operation
fnmadd.h f23, f9, f11, f4, rmm # perform operation
fnmadd.h f23, f9, f11, f4, rne # perform operation
fnmadd.h f23, f9, f11, f4, rtz # perform operation
fnmadd.h f23, f9, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3c00)
li x10, 0xcfb3940f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0xfb26b178 # load x3 with value 0xfb26b178
sw x3, 0(x2) # store 0xfb26b178 in memory
flh f23, 0(x2) # load 0xfb26b178 from memory into f23
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
fnmadd.h f10, f14, f23, f31, dyn # perform operation
fnmadd.h f10, f14, f23, f31, rdn # perform operation
fnmadd.h f10, f14, f23, f31, rmm # perform operation
fnmadd.h f10, f14, f23, f31, rne # perform operation
fnmadd.h f10, f14, f23, f31, rtz # perform operation
fnmadd.h f10, f14, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbc00)
li x16, 0xb6dbcdb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
li x3, 0x59b457d3 # load x3 with value 0x59b457d3
sw x3, 0(x2) # store 0x59b457d3 in memory
flh f3, 0(x2) # load 0x59b457d3 from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
fnmadd.h f16, f15, f3, f25, dyn # perform operation
fnmadd.h f16, f15, f3, f25, rdn # perform operation
fnmadd.h f16, f15, f3, f25, rmm # perform operation
fnmadd.h f16, f15, f3, f25, rne # perform operation
fnmadd.h f16, f15, f3, f25, rtz # perform operation
fnmadd.h f16, f15, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3e00)
li x4, 0xdb21f5c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0x1cd50aa2 # load x3 with value 0x1cd50aa2
sw x3, 0(x2) # store 0x1cd50aa2 in memory
flh f21, 0(x2) # load 0x1cd50aa2 from memory into f21
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f4, f3, f21, f10, dyn # perform operation
fnmadd.h f4, f3, f21, f10, rdn # perform operation
fnmadd.h f4, f3, f21, f10, rmm # perform operation
fnmadd.h f4, f3, f21, f10, rne # perform operation
fnmadd.h f4, f3, f21, f10, rtz # perform operation
fnmadd.h f4, f3, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbe00)
li x29, 0xc3a48fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
li x3, 0xa2d82582 # load x3 with value 0xa2d82582
sw x3, 0(x2) # store 0xa2d82582 in memory
flh f16, 0(x2) # load 0xa2d82582 from memory into f16
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
fnmadd.h f29, f30, f16, f31, dyn # perform operation
fnmadd.h f29, f30, f16, f31, rdn # perform operation
fnmadd.h f29, f30, f16, f31, rmm # perform operation
fnmadd.h f29, f30, f16, f31, rne # perform operation
fnmadd.h f29, f30, f16, f31, rtz # perform operation
fnmadd.h f29, f30, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f30, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f30, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f30, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f30, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f30, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x4000)
li x23, 0xb0e2d542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0xbe1cbd1a # load x3 with value 0xbe1cbd1a
sw x3, 0(x2) # store 0xbe1cbd1a in memory
flh f3, 0(x2) # load 0xbe1cbd1a from memory into f3
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
fnmadd.h f23, f11, f3, f17, dyn # perform operation
fnmadd.h f23, f11, f3, f17, rdn # perform operation
fnmadd.h f23, f11, f3, f17, rmm # perform operation
fnmadd.h f23, f11, f3, f17, rne # perform operation
fnmadd.h f23, f11, f3, f17, rtz # perform operation
fnmadd.h f23, f11, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc000)
li x22, 0x211a7330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
li x3, 0x7d404cd6 # load x3 with value 0x7d404cd6
sw x3, 0(x2) # store 0x7d404cd6 in memory
flh f21, 0(x2) # load 0x7d404cd6 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
fnmadd.h f22, f17, f21, f25, dyn # perform operation
fnmadd.h f22, f17, f21, f25, rdn # perform operation
fnmadd.h f22, f17, f21, f25, rmm # perform operation
fnmadd.h f22, f17, f21, f25, rne # perform operation
fnmadd.h f22, f17, f21, f25, rtz # perform operation
fnmadd.h f22, f17, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x400)
li x23, 0x13d28382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
li x3, 0xc3e424e4 # load x3 with value 0xc3e424e4
sw x3, 0(x2) # store 0xc3e424e4 in memory
flh f26, 0(x2) # load 0xc3e424e4 from memory into f26
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
fnmadd.h f23, f20, f26, f13, dyn # perform operation
fnmadd.h f23, f20, f26, f13, rdn # perform operation
fnmadd.h f23, f20, f26, f13, rmm # perform operation
fnmadd.h f23, f20, f26, f13, rne # perform operation
fnmadd.h f23, f20, f26, f13, rtz # perform operation
fnmadd.h f23, f20, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8400)
li x25, 0x04e20cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
li x3, 0x8629b937 # load x3 with value 0x8629b937
sw x3, 0(x2) # store 0x8629b937 in memory
flh f3, 0(x2) # load 0x8629b937 from memory into f3
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f25, f22, f3, f9, dyn # perform operation
fnmadd.h f25, f22, f3, f9, rdn # perform operation
fnmadd.h f25, f22, f3, f9, rmm # perform operation
fnmadd.h f25, f22, f3, f9, rne # perform operation
fnmadd.h f25, f22, f3, f9, rtz # perform operation
fnmadd.h f25, f22, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7bff)
li x30, 0x8766c32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
li x3, 0x8b291526 # load x3 with value 0x8b291526
sw x3, 0(x2) # store 0x8b291526 in memory
flh f2, 0(x2) # load 0x8b291526 from memory into f2
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
fnmadd.h f30, f27, f2, f19, dyn # perform operation
fnmadd.h f30, f27, f2, f19, rdn # perform operation
fnmadd.h f30, f27, f2, f19, rmm # perform operation
fnmadd.h f30, f27, f2, f19, rne # perform operation
fnmadd.h f30, f27, f2, f19, rtz # perform operation
fnmadd.h f30, f27, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfbff)
li x30, 0x0da45788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0xd054ae46 # load x3 with value 0xd054ae46
sw x3, 0(x2) # store 0xd054ae46 in memory
flh f2, 0(x2) # load 0xd054ae46 from memory into f2
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
fnmadd.h f30, f6, f2, f20, dyn # perform operation
fnmadd.h f30, f6, f2, f20, rdn # perform operation
fnmadd.h f30, f6, f2, f20, rmm # perform operation
fnmadd.h f30, f6, f2, f20, rne # perform operation
fnmadd.h f30, f6, f2, f20, rtz # perform operation
fnmadd.h f30, f6, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3ff)
li x23, 0x94263ca6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0x2d233e9a # load x3 with value 0x2d233e9a
sw x3, 0(x2) # store 0x2d233e9a in memory
flh f7, 0(x2) # load 0x2d233e9a from memory into f7
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
fnmadd.h f23, f6, f7, f13, dyn # perform operation
fnmadd.h f23, f6, f7, f13, rdn # perform operation
fnmadd.h f23, f6, f7, f13, rmm # perform operation
fnmadd.h f23, f6, f7, f13, rne # perform operation
fnmadd.h f23, f6, f7, f13, rtz # perform operation
fnmadd.h f23, f6, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x83ff)
li x29, 0x08875748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
li x3, 0x9eb6531d # load x3 with value 0x9eb6531d
sw x3, 0(x2) # store 0x9eb6531d in memory
flh f8, 0(x2) # load 0x9eb6531d from memory into f8
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
fnmadd.h f29, f12, f8, f31, dyn # perform operation
fnmadd.h f29, f12, f8, f31, rdn # perform operation
fnmadd.h f29, f12, f8, f31, rmm # perform operation
fnmadd.h f29, f12, f8, f31, rne # perform operation
fnmadd.h f29, f12, f8, f31, rtz # perform operation
fnmadd.h f29, f12, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f12, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x200)
li x10, 0x7742e1a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
li x3, 0xf7b1bae5 # load x3 with value 0xf7b1bae5
sw x3, 0(x2) # store 0xf7b1bae5 in memory
flh f8, 0(x2) # load 0xf7b1bae5 from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
fnmadd.h f10, f4, f8, f19, dyn # perform operation
fnmadd.h f10, f4, f8, f19, rdn # perform operation
fnmadd.h f10, f4, f8, f19, rmm # perform operation
fnmadd.h f10, f4, f8, f19, rne # perform operation
fnmadd.h f10, f4, f8, f19, rtz # perform operation
fnmadd.h f10, f4, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8200)
li x15, 0x92ca0456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
li x3, 0xc8fedf8b # load x3 with value 0xc8fedf8b
sw x3, 0(x2) # store 0xc8fedf8b in memory
flh f24, 0(x2) # load 0xc8fedf8b from memory into f24
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f15, f26, f24, f20, dyn # perform operation
fnmadd.h f15, f26, f24, f20, rdn # perform operation
fnmadd.h f15, f26, f24, f20, rmm # perform operation
fnmadd.h f15, f26, f24, f20, rne # perform operation
fnmadd.h f15, f26, f24, f20, rtz # perform operation
fnmadd.h f15, f26, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f26, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x1)
li x12, 0x0172e62b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
li x3, 0x8fa4aac4 # load x3 with value 0x8fa4aac4
sw x3, 0(x2) # store 0x8fa4aac4 in memory
flh f20, 0(x2) # load 0x8fa4aac4 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
fnmadd.h f12, f31, f20, f29, dyn # perform operation
fnmadd.h f12, f31, f20, f29, rdn # perform operation
fnmadd.h f12, f31, f20, f29, rmm # perform operation
fnmadd.h f12, f31, f20, f29, rne # perform operation
fnmadd.h f12, f31, f20, f29, rtz # perform operation
fnmadd.h f12, f31, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8001)
li x9, 0x9fa0ec2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0xd7fb68c2 # load x3 with value 0xd7fb68c2
sw x3, 0(x2) # store 0xd7fb68c2 in memory
flh f12, 0(x2) # load 0xd7fb68c2 from memory into f12
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
fnmadd.h f9, f5, f12, f18, dyn # perform operation
fnmadd.h f9, f5, f12, f18, rdn # perform operation
fnmadd.h f9, f5, f12, f18, rmm # perform operation
fnmadd.h f9, f5, f12, f18, rne # perform operation
fnmadd.h f9, f5, f12, f18, rtz # perform operation
fnmadd.h f9, f5, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f5, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f5, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f5, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f5, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f5, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c00)
li x3, 0x4c42a082 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
li x3, 0x0c6b46e0 # load x3 with value 0x0c6b46e0
sw x3, 0(x2) # store 0x0c6b46e0 in memory
flh f17, 0(x2) # load 0x0c6b46e0 from memory into f17
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
fnmadd.h f3, f6, f17, f21, dyn # perform operation
fnmadd.h f3, f6, f17, f21, rdn # perform operation
fnmadd.h f3, f6, f17, f21, rmm # perform operation
fnmadd.h f3, f6, f17, f21, rne # perform operation
fnmadd.h f3, f6, f17, f21, rtz # perform operation
fnmadd.h f3, f6, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc00)
li x30, 0xade123ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x6baac14b # load x3 with value 0x6baac14b
sw x3, 0(x2) # store 0x6baac14b in memory
flh f12, 0(x2) # load 0x6baac14b from memory into f12
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
fnmadd.h f30, f10, f12, f28, dyn # perform operation
fnmadd.h f30, f10, f12, f28, rdn # perform operation
fnmadd.h f30, f10, f12, f28, rmm # perform operation
fnmadd.h f30, f10, f12, f28, rne # perform operation
fnmadd.h f30, f10, f12, f28, rtz # perform operation
fnmadd.h f30, f10, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7e00)
li x4, 0xf9ead01a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
li x3, 0x1b372d98 # load x3 with value 0x1b372d98
sw x3, 0(x2) # store 0x1b372d98 in memory
flh f3, 0(x2) # load 0x1b372d98 from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f4, f27, f3, f18, dyn # perform operation
fnmadd.h f4, f27, f3, f18, rdn # perform operation
fnmadd.h f4, f27, f3, f18, rmm # perform operation
fnmadd.h f4, f27, f3, f18, rne # perform operation
fnmadd.h f4, f27, f3, f18, rtz # perform operation
fnmadd.h f4, f27, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7fff)
li x6, 0x64d3600c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0xbcfd200d # load x3 with value 0xbcfd200d
sw x3, 0(x2) # store 0xbcfd200d in memory
flh f31, 0(x2) # load 0xbcfd200d from memory into f31
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f6, f1, f31, f19, dyn # perform operation
fnmadd.h f6, f1, f31, f19, rdn # perform operation
fnmadd.h f6, f1, f31, f19, rmm # perform operation
fnmadd.h f6, f1, f31, f19, rne # perform operation
fnmadd.h f6, f1, f31, f19, rtz # perform operation
fnmadd.h f6, f1, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f1, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c01)
li x3, 0x3032ecae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
li x3, 0xa72c159c # load x3 with value 0xa72c159c
sw x3, 0(x2) # store 0xa72c159c in memory
flh f29, 0(x2) # load 0xa72c159c from memory into f29
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
fnmadd.h f3, f27, f29, f22, dyn # perform operation
fnmadd.h f3, f27, f29, f22, rdn # perform operation
fnmadd.h f3, f27, f29, f22, rmm # perform operation
fnmadd.h f3, f27, f29, f22, rne # perform operation
fnmadd.h f3, f27, f29, f22, rtz # perform operation
fnmadd.h f3, f27, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7dff)
li x30, 0xc9bdece1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0xa702e5ba # load x3 with value 0xa702e5ba
sw x3, 0(x2) # store 0xa702e5ba in memory
flh f11, 0(x2) # load 0xa702e5ba from memory into f11
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f30, f14, f11, f26, dyn # perform operation
fnmadd.h f30, f14, f11, f26, rdn # perform operation
fnmadd.h f30, f14, f11, f26, rmm # perform operation
fnmadd.h f30, f14, f11, f26, rne # perform operation
fnmadd.h f30, f14, f11, f26, rtz # perform operation
fnmadd.h f30, f14, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x58b4)
li x12, 0xe169df99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x15af933f # load x3 with value 0x15af933f
sw x3, 0(x2) # store 0x15af933f in memory
flh f20, 0(x2) # load 0x15af933f from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f12, f11, f20, f10, dyn # perform operation
fnmadd.h f12, f11, f20, f10, rdn # perform operation
fnmadd.h f12, f11, f20, f10, rmm # perform operation
fnmadd.h f12, f11, f20, f10, rne # perform operation
fnmadd.h f12, f11, f20, f10, rtz # perform operation
fnmadd.h f12, f11, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc93a)
li x22, 0x4084ff99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0x31f094cb # load x3 with value 0x31f094cb
sw x3, 0(x2) # store 0x31f094cb in memory
flh f23, 0(x2) # load 0x31f094cb from memory into f23
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
fnmadd.h f22, f14, f23, f28, dyn # perform operation
fnmadd.h f22, f14, f23, f28, rdn # perform operation
fnmadd.h f22, f14, f23, f28, rmm # perform operation
fnmadd.h f22, f14, f23, f28, rne # perform operation
fnmadd.h f22, f14, f23, f28, rtz # perform operation
fnmadd.h f22, f14, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x0)
li x18, 0xfbed0c4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
li x3, 0xea3c211b # load x3 with value 0xea3c211b
sw x3, 0(x2) # store 0xea3c211b in memory
flh f11, 0(x2) # load 0xea3c211b from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.h f18, f31, f11, f26, dyn # perform operation
fnmadd.h f18, f31, f11, f26, rdn # perform operation
fnmadd.h f18, f31, f11, f26, rmm # perform operation
fnmadd.h f18, f31, f11, f26, rne # perform operation
fnmadd.h f18, f31, f11, f26, rtz # perform operation
fnmadd.h f18, f31, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f31, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f31, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f31, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f31, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f31, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8000)
li x22, 0x85179b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x5ef14d9c # load x3 with value 0x5ef14d9c
sw x3, 0(x2) # store 0x5ef14d9c in memory
flh f14, 0(x2) # load 0x5ef14d9c from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f22, f13, f14, f2, dyn # perform operation
fnmadd.h f22, f13, f14, f2, rdn # perform operation
fnmadd.h f22, f13, f14, f2, rmm # perform operation
fnmadd.h f22, f13, f14, f2, rne # perform operation
fnmadd.h f22, f13, f14, f2, rtz # perform operation
fnmadd.h f22, f13, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3c00)
li x12, 0x440c3643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
li x3, 0x896278af # load x3 with value 0x896278af
sw x3, 0(x2) # store 0x896278af in memory
flh f9, 0(x2) # load 0x896278af from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f12, f14, f9, f18, dyn # perform operation
fnmadd.h f12, f14, f9, f18, rdn # perform operation
fnmadd.h f12, f14, f9, f18, rmm # perform operation
fnmadd.h f12, f14, f9, f18, rne # perform operation
fnmadd.h f12, f14, f9, f18, rtz # perform operation
fnmadd.h f12, f14, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbc00)
li x5, 0xae1bec7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
li x3, 0xd605d86b # load x3 with value 0xd605d86b
sw x3, 0(x2) # store 0xd605d86b in memory
flh f18, 0(x2) # load 0xd605d86b from memory into f18
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
fnmadd.h f5, f17, f18, f3, dyn # perform operation
fnmadd.h f5, f17, f18, f3, rdn # perform operation
fnmadd.h f5, f17, f18, f3, rmm # perform operation
fnmadd.h f5, f17, f18, f3, rne # perform operation
fnmadd.h f5, f17, f18, f3, rtz # perform operation
fnmadd.h f5, f17, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3e00)
li x15, 0x45b7de5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
li x3, 0x2da1d420 # load x3 with value 0x2da1d420
sw x3, 0(x2) # store 0x2da1d420 in memory
flh f2, 0(x2) # load 0x2da1d420 from memory into f2
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f15, f8, f2, f13, dyn # perform operation
fnmadd.h f15, f8, f2, f13, rdn # perform operation
fnmadd.h f15, f8, f2, f13, rmm # perform operation
fnmadd.h f15, f8, f2, f13, rne # perform operation
fnmadd.h f15, f8, f2, f13, rtz # perform operation
fnmadd.h f15, f8, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbe00)
li x7, 0x3188f349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
li x3, 0x3f3d177b # load x3 with value 0x3f3d177b
sw x3, 0(x2) # store 0x3f3d177b in memory
flh f5, 0(x2) # load 0x3f3d177b from memory into f5
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
fnmadd.h f7, f3, f5, f18, dyn # perform operation
fnmadd.h f7, f3, f5, f18, rdn # perform operation
fnmadd.h f7, f3, f5, f18, rmm # perform operation
fnmadd.h f7, f3, f5, f18, rne # perform operation
fnmadd.h f7, f3, f5, f18, rtz # perform operation
fnmadd.h f7, f3, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f5, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x4000)
li x6, 0xce018938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x53884d1f # load x3 with value 0x53884d1f
sw x3, 0(x2) # store 0x53884d1f in memory
flh f27, 0(x2) # load 0x53884d1f from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
fnmadd.h f6, f13, f27, f15, dyn # perform operation
fnmadd.h f6, f13, f27, f15, rdn # perform operation
fnmadd.h f6, f13, f27, f15, rmm # perform operation
fnmadd.h f6, f13, f27, f15, rne # perform operation
fnmadd.h f6, f13, f27, f15, rtz # perform operation
fnmadd.h f6, f13, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f13, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc000)
li x24, 0x97973b2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
li x3, 0x2f4a062a # load x3 with value 0x2f4a062a
sw x3, 0(x2) # store 0x2f4a062a in memory
flh f25, 0(x2) # load 0x2f4a062a from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
fnmadd.h f24, f18, f25, f27, dyn # perform operation
fnmadd.h f24, f18, f25, f27, rdn # perform operation
fnmadd.h f24, f18, f25, f27, rmm # perform operation
fnmadd.h f24, f18, f25, f27, rne # perform operation
fnmadd.h f24, f18, f25, f27, rtz # perform operation
fnmadd.h f24, f18, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x400)
li x13, 0xf9f2c5b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
li x3, 0x6ea17591 # load x3 with value 0x6ea17591
sw x3, 0(x2) # store 0x6ea17591 in memory
flh f2, 0(x2) # load 0x6ea17591 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
fnmadd.h f13, f29, f2, f23, dyn # perform operation
fnmadd.h f13, f29, f2, f23, rdn # perform operation
fnmadd.h f13, f29, f2, f23, rmm # perform operation
fnmadd.h f13, f29, f2, f23, rne # perform operation
fnmadd.h f13, f29, f2, f23, rtz # perform operation
fnmadd.h f13, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8400)
li x12, 0x4bd46737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x0a89b0bd # load x3 with value 0x0a89b0bd
sw x3, 0(x2) # store 0x0a89b0bd in memory
flh f31, 0(x2) # load 0x0a89b0bd from memory into f31
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
fnmadd.h f12, f24, f31, f30, dyn # perform operation
fnmadd.h f12, f24, f31, f30, rdn # perform operation
fnmadd.h f12, f24, f31, f30, rmm # perform operation
fnmadd.h f12, f24, f31, f30, rne # perform operation
fnmadd.h f12, f24, f31, f30, rtz # perform operation
fnmadd.h f12, f24, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7bff)
li x29, 0x91fc281b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
li x3, 0xf267d9e6 # load x3 with value 0xf267d9e6
sw x3, 0(x2) # store 0xf267d9e6 in memory
flh f25, 0(x2) # load 0xf267d9e6 from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f29, f10, f25, f21, dyn # perform operation
fnmadd.h f29, f10, f25, f21, rdn # perform operation
fnmadd.h f29, f10, f25, f21, rmm # perform operation
fnmadd.h f29, f10, f25, f21, rne # perform operation
fnmadd.h f29, f10, f25, f21, rtz # perform operation
fnmadd.h f29, f10, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfbff)
li x14, 0x4326298b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
li x3, 0xe6b209b7 # load x3 with value 0xe6b209b7
sw x3, 0(x2) # store 0xe6b209b7 in memory
flh f18, 0(x2) # load 0xe6b209b7 from memory into f18
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
fnmadd.h f14, f27, f18, f22, dyn # perform operation
fnmadd.h f14, f27, f18, f22, rdn # perform operation
fnmadd.h f14, f27, f18, f22, rmm # perform operation
fnmadd.h f14, f27, f18, f22, rne # perform operation
fnmadd.h f14, f27, f18, f22, rtz # perform operation
fnmadd.h f14, f27, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3ff)
li x18, 0x415259f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0xb0faa35e # load x3 with value 0xb0faa35e
sw x3, 0(x2) # store 0xb0faa35e in memory
flh f24, 0(x2) # load 0xb0faa35e from memory into f24
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
fnmadd.h f18, f6, f24, f25, dyn # perform operation
fnmadd.h f18, f6, f24, f25, rdn # perform operation
fnmadd.h f18, f6, f24, f25, rmm # perform operation
fnmadd.h f18, f6, f24, f25, rne # perform operation
fnmadd.h f18, f6, f24, f25, rtz # perform operation
fnmadd.h f18, f6, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x83ff)
li x28, 0xd54d7e3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x9d874a8e # load x3 with value 0x9d874a8e
sw x3, 0(x2) # store 0x9d874a8e in memory
flh f5, 0(x2) # load 0x9d874a8e from memory into f5
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f28, f20, f5, f14, dyn # perform operation
fnmadd.h f28, f20, f5, f14, rdn # perform operation
fnmadd.h f28, f20, f5, f14, rmm # perform operation
fnmadd.h f28, f20, f5, f14, rne # perform operation
fnmadd.h f28, f20, f5, f14, rtz # perform operation
fnmadd.h f28, f20, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x200)
li x8, 0xfc42b9e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0xfa46f169 # load x3 with value 0xfa46f169
sw x3, 0(x2) # store 0xfa46f169 in memory
flh f18, 0(x2) # load 0xfa46f169 from memory into f18
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
fnmadd.h f8, f15, f18, f24, dyn # perform operation
fnmadd.h f8, f15, f18, f24, rdn # perform operation
fnmadd.h f8, f15, f18, f24, rmm # perform operation
fnmadd.h f8, f15, f18, f24, rne # perform operation
fnmadd.h f8, f15, f18, f24, rtz # perform operation
fnmadd.h f8, f15, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8200)
li x28, 0x5425a8d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0x5963528b # load x3 with value 0x5963528b
sw x3, 0(x2) # store 0x5963528b in memory
flh f25, 0(x2) # load 0x5963528b from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f28, f15, f25, f29, dyn # perform operation
fnmadd.h f28, f15, f25, f29, rdn # perform operation
fnmadd.h f28, f15, f25, f29, rmm # perform operation
fnmadd.h f28, f15, f25, f29, rne # perform operation
fnmadd.h f28, f15, f25, f29, rtz # perform operation
fnmadd.h f28, f15, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x1)
li x3, 0x2dfe0498 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0xc6522942 # load x3 with value 0xc6522942
sw x3, 0(x2) # store 0xc6522942 in memory
flh f17, 0(x2) # load 0xc6522942 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.h f3, f24, f17, f25, dyn # perform operation
fnmadd.h f3, f24, f17, f25, rdn # perform operation
fnmadd.h f3, f24, f17, f25, rmm # perform operation
fnmadd.h f3, f24, f17, f25, rne # perform operation
fnmadd.h f3, f24, f17, f25, rtz # perform operation
fnmadd.h f3, f24, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8001)
li x5, 0x5ec57e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0xea950384 # load x3 with value 0xea950384
sw x3, 0(x2) # store 0xea950384 in memory
flh f19, 0(x2) # load 0xea950384 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f5, f13, f19, f31, dyn # perform operation
fnmadd.h f5, f13, f19, f31, rdn # perform operation
fnmadd.h f5, f13, f19, f31, rmm # perform operation
fnmadd.h f5, f13, f19, f31, rne # perform operation
fnmadd.h f5, f13, f19, f31, rtz # perform operation
fnmadd.h f5, f13, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c00)
li x17, 0xf9052bbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0xbde9d888 # load x3 with value 0xbde9d888
sw x3, 0(x2) # store 0xbde9d888 in memory
flh f11, 0(x2) # load 0xbde9d888 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
fnmadd.h f17, f13, f11, f20, dyn # perform operation
fnmadd.h f17, f13, f11, f20, rdn # perform operation
fnmadd.h f17, f13, f11, f20, rmm # perform operation
fnmadd.h f17, f13, f11, f20, rne # perform operation
fnmadd.h f17, f13, f11, f20, rtz # perform operation
fnmadd.h f17, f13, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc00)
li x3, 0x2da4dcfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0xe57e3690 # load x3 with value 0xe57e3690
sw x3, 0(x2) # store 0xe57e3690 in memory
flh f9, 0(x2) # load 0xe57e3690 from memory into f9
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
fnmadd.h f3, f12, f9, f15, dyn # perform operation
fnmadd.h f3, f12, f9, f15, rdn # perform operation
fnmadd.h f3, f12, f9, f15, rmm # perform operation
fnmadd.h f3, f12, f9, f15, rne # perform operation
fnmadd.h f3, f12, f9, f15, rtz # perform operation
fnmadd.h f3, f12, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7e00)
li x31, 0x16ea2f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0xf7266237 # load x3 with value 0xf7266237
sw x3, 0(x2) # store 0xf7266237 in memory
flh f23, 0(x2) # load 0xf7266237 from memory into f23
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f31, f13, f23, f16, dyn # perform operation
fnmadd.h f31, f13, f23, f16, rdn # perform operation
fnmadd.h f31, f13, f23, f16, rmm # perform operation
fnmadd.h f31, f13, f23, f16, rne # perform operation
fnmadd.h f31, f13, f23, f16, rtz # perform operation
fnmadd.h f31, f13, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7fff)
li x8, 0x96159714 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
li x3, 0x57eab672 # load x3 with value 0x57eab672
sw x3, 0(x2) # store 0x57eab672 in memory
flh f16, 0(x2) # load 0x57eab672 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
fnmadd.h f8, f22, f16, f29, dyn # perform operation
fnmadd.h f8, f22, f16, f29, rdn # perform operation
fnmadd.h f8, f22, f16, f29, rmm # perform operation
fnmadd.h f8, f22, f16, f29, rne # perform operation
fnmadd.h f8, f22, f16, f29, rtz # perform operation
fnmadd.h f8, f22, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c01)
li x3, 0xf2d32de6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
li x3, 0x43fb0809 # load x3 with value 0x43fb0809
sw x3, 0(x2) # store 0x43fb0809 in memory
flh f9, 0(x2) # load 0x43fb0809 from memory into f9
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
fnmadd.h f3, f22, f9, f26, dyn # perform operation
fnmadd.h f3, f22, f9, f26, rdn # perform operation
fnmadd.h f3, f22, f9, f26, rmm # perform operation
fnmadd.h f3, f22, f9, f26, rne # perform operation
fnmadd.h f3, f22, f9, f26, rtz # perform operation
fnmadd.h f3, f22, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7dff)
li x26, 0x078f948f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0x23245444 # load x3 with value 0x23245444
sw x3, 0(x2) # store 0x23245444 in memory
flh f13, 0(x2) # load 0x23245444 from memory into f13
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f26, f15, f13, f10, dyn # perform operation
fnmadd.h f26, f15, f13, f10, rdn # perform operation
fnmadd.h f26, f15, f13, f10, rmm # perform operation
fnmadd.h f26, f15, f13, f10, rne # perform operation
fnmadd.h f26, f15, f13, f10, rtz # perform operation
fnmadd.h f26, f15, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x58b4)
li x2, 0xa898c2e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
li x3, 0x5f9bb107 # load x3 with value 0x5f9bb107
sw x3, 0(x2) # store 0x5f9bb107 in memory
flh f25, 0(x2) # load 0x5f9bb107 from memory into f25
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
fnmadd.h f2, f26, f25, f18, dyn # perform operation
fnmadd.h f2, f26, f25, f18, rdn # perform operation
fnmadd.h f2, f26, f25, f18, rmm # perform operation
fnmadd.h f2, f26, f25, f18, rne # perform operation
fnmadd.h f2, f26, f25, f18, rtz # perform operation
fnmadd.h f2, f26, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc93a)
li x7, 0xe6f4c04c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
li x3, 0x81f62b90 # load x3 with value 0x81f62b90
sw x3, 0(x2) # store 0x81f62b90 in memory
flh f9, 0(x2) # load 0x81f62b90 from memory into f9
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f7, f10, f9, f12, dyn # perform operation
fnmadd.h f7, f10, f9, f12, rdn # perform operation
fnmadd.h f7, f10, f9, f12, rmm # perform operation
fnmadd.h f7, f10, f9, f12, rne # perform operation
fnmadd.h f7, f10, f9, f12, rtz # perform operation
fnmadd.h f7, f10, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x0)
li x6, 0x1e2e8b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
li x3, 0x50843944 # load x3 with value 0x50843944
sw x3, 0(x2) # store 0x50843944 in memory
flh f19, 0(x2) # load 0x50843944 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f6, f23, f19, f7, dyn # perform operation
fnmadd.h f6, f23, f19, f7, rdn # perform operation
fnmadd.h f6, f23, f19, f7, rmm # perform operation
fnmadd.h f6, f23, f19, f7, rne # perform operation
fnmadd.h f6, f23, f19, f7, rtz # perform operation
fnmadd.h f6, f23, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f23, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f23, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f23, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f23, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f23, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8000)
li x16, 0xcfc64163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0xc7c3fa7b # load x3 with value 0xc7c3fa7b
sw x3, 0(x2) # store 0xc7c3fa7b in memory
flh f12, 0(x2) # load 0xc7c3fa7b from memory into f12
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
fnmadd.h f16, f24, f12, f9, dyn # perform operation
fnmadd.h f16, f24, f12, f9, rdn # perform operation
fnmadd.h f16, f24, f12, f9, rmm # perform operation
fnmadd.h f16, f24, f12, f9, rne # perform operation
fnmadd.h f16, f24, f12, f9, rtz # perform operation
fnmadd.h f16, f24, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3c00)
li x31, 0xbdfbc2d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0x6a72d4e2 # load x3 with value 0x6a72d4e2
sw x3, 0(x2) # store 0x6a72d4e2 in memory
flh f28, 0(x2) # load 0x6a72d4e2 from memory into f28
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f31, f20, f28, f18, dyn # perform operation
fnmadd.h f31, f20, f28, f18, rdn # perform operation
fnmadd.h f31, f20, f28, f18, rmm # perform operation
fnmadd.h f31, f20, f28, f18, rne # perform operation
fnmadd.h f31, f20, f28, f18, rtz # perform operation
fnmadd.h f31, f20, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f20, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbc00)
li x16, 0x7bca0994 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
li x3, 0xbae753f8 # load x3 with value 0xbae753f8
sw x3, 0(x2) # store 0xbae753f8 in memory
flh f29, 0(x2) # load 0xbae753f8 from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
fnmadd.h f16, f22, f29, f10, dyn # perform operation
fnmadd.h f16, f22, f29, f10, rdn # perform operation
fnmadd.h f16, f22, f29, f10, rmm # perform operation
fnmadd.h f16, f22, f29, f10, rne # perform operation
fnmadd.h f16, f22, f29, f10, rtz # perform operation
fnmadd.h f16, f22, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f22, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3e00)
li x30, 0x29d46be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
li x3, 0x019c2d25 # load x3 with value 0x019c2d25
sw x3, 0(x2) # store 0x019c2d25 in memory
flh f15, 0(x2) # load 0x019c2d25 from memory into f15
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
fnmadd.h f30, f11, f15, f7, dyn # perform operation
fnmadd.h f30, f11, f15, f7, rdn # perform operation
fnmadd.h f30, f11, f15, f7, rmm # perform operation
fnmadd.h f30, f11, f15, f7, rne # perform operation
fnmadd.h f30, f11, f15, f7, rtz # perform operation
fnmadd.h f30, f11, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbe00)
li x13, 0x9218b570 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
li x3, 0x47bcba1b # load x3 with value 0x47bcba1b
sw x3, 0(x2) # store 0x47bcba1b in memory
flh f27, 0(x2) # load 0x47bcba1b from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f13, f28, f27, f10, dyn # perform operation
fnmadd.h f13, f28, f27, f10, rdn # perform operation
fnmadd.h f13, f28, f27, f10, rmm # perform operation
fnmadd.h f13, f28, f27, f10, rne # perform operation
fnmadd.h f13, f28, f27, f10, rtz # perform operation
fnmadd.h f13, f28, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f28, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x4000)
li x8, 0x7448ee41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
li x3, 0xed6efefa # load x3 with value 0xed6efefa
sw x3, 0(x2) # store 0xed6efefa in memory
flh f2, 0(x2) # load 0xed6efefa from memory into f2
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
fnmadd.h f8, f29, f2, f21, dyn # perform operation
fnmadd.h f8, f29, f2, f21, rdn # perform operation
fnmadd.h f8, f29, f2, f21, rmm # perform operation
fnmadd.h f8, f29, f2, f21, rne # perform operation
fnmadd.h f8, f29, f2, f21, rtz # perform operation
fnmadd.h f8, f29, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f29, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f29, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f29, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f29, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f29, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc000)
li x15, 0x850d31a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
li x3, 0x276ea82d # load x3 with value 0x276ea82d
sw x3, 0(x2) # store 0x276ea82d in memory
flh f24, 0(x2) # load 0x276ea82d from memory into f24
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
fnmadd.h f15, f23, f24, f8, dyn # perform operation
fnmadd.h f15, f23, f24, f8, rdn # perform operation
fnmadd.h f15, f23, f24, f8, rmm # perform operation
fnmadd.h f15, f23, f24, f8, rne # perform operation
fnmadd.h f15, f23, f24, f8, rtz # perform operation
fnmadd.h f15, f23, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x400)
li x20, 0x670214a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0xe87356b0 # load x3 with value 0xe87356b0
sw x3, 0(x2) # store 0xe87356b0 in memory
flh f27, 0(x2) # load 0xe87356b0 from memory into f27
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f20, f8, f27, f17, dyn # perform operation
fnmadd.h f20, f8, f27, f17, rdn # perform operation
fnmadd.h f20, f8, f27, f17, rmm # perform operation
fnmadd.h f20, f8, f27, f17, rne # perform operation
fnmadd.h f20, f8, f27, f17, rtz # perform operation
fnmadd.h f20, f8, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8400)
li x15, 0x217e78aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x0a35dfb7 # load x3 with value 0x0a35dfb7
sw x3, 0(x2) # store 0x0a35dfb7 in memory
flh f5, 0(x2) # load 0x0a35dfb7 from memory into f5
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f15, f24, f5, f17, dyn # perform operation
fnmadd.h f15, f24, f5, f17, rdn # perform operation
fnmadd.h f15, f24, f5, f17, rmm # perform operation
fnmadd.h f15, f24, f5, f17, rne # perform operation
fnmadd.h f15, f24, f5, f17, rtz # perform operation
fnmadd.h f15, f24, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f24, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7bff)
li x31, 0x9b2014d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x5f6ca87a # load x3 with value 0x5f6ca87a
sw x3, 0(x2) # store 0x5f6ca87a in memory
flh f29, 0(x2) # load 0x5f6ca87a from memory into f29
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
fnmadd.h f31, f6, f29, f7, dyn # perform operation
fnmadd.h f31, f6, f29, f7, rdn # perform operation
fnmadd.h f31, f6, f29, f7, rmm # perform operation
fnmadd.h f31, f6, f29, f7, rne # perform operation
fnmadd.h f31, f6, f29, f7, rtz # perform operation
fnmadd.h f31, f6, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfbff)
li x12, 0x985baaaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
li x3, 0x7a973abd # load x3 with value 0x7a973abd
sw x3, 0(x2) # store 0x7a973abd in memory
flh f23, 0(x2) # load 0x7a973abd from memory into f23
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
fnmadd.h f12, f19, f23, f4, dyn # perform operation
fnmadd.h f12, f19, f23, f4, rdn # perform operation
fnmadd.h f12, f19, f23, f4, rmm # perform operation
fnmadd.h f12, f19, f23, f4, rne # perform operation
fnmadd.h f12, f19, f23, f4, rtz # perform operation
fnmadd.h f12, f19, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3ff)
li x23, 0xf8266d59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0xae283940 # load x3 with value 0xae283940
sw x3, 0(x2) # store 0xae283940 in memory
flh f10, 0(x2) # load 0xae283940 from memory into f10
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
fnmadd.h f23, f3, f10, f28, dyn # perform operation
fnmadd.h f23, f3, f10, f28, rdn # perform operation
fnmadd.h f23, f3, f10, f28, rmm # perform operation
fnmadd.h f23, f3, f10, f28, rne # perform operation
fnmadd.h f23, f3, f10, f28, rtz # perform operation
fnmadd.h f23, f3, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f3, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x83ff)
li x25, 0x037edb3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0xb5e3e7cb # load x3 with value 0xb5e3e7cb
sw x3, 0(x2) # store 0xb5e3e7cb in memory
flh f4, 0(x2) # load 0xb5e3e7cb from memory into f4
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
fnmadd.h f25, f15, f4, f11, dyn # perform operation
fnmadd.h f25, f15, f4, f11, rdn # perform operation
fnmadd.h f25, f15, f4, f11, rmm # perform operation
fnmadd.h f25, f15, f4, f11, rne # perform operation
fnmadd.h f25, f15, f4, f11, rtz # perform operation
fnmadd.h f25, f15, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x200)
li x24, 0xa3b796f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
li x3, 0xadcb66af # load x3 with value 0xadcb66af
sw x3, 0(x2) # store 0xadcb66af in memory
flh f2, 0(x2) # load 0xadcb66af from memory into f2
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f24, f9, f2, f23, dyn # perform operation
fnmadd.h f24, f9, f2, f23, rdn # perform operation
fnmadd.h f24, f9, f2, f23, rmm # perform operation
fnmadd.h f24, f9, f2, f23, rne # perform operation
fnmadd.h f24, f9, f2, f23, rtz # perform operation
fnmadd.h f24, f9, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8200)
li x6, 0x0527bf17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
li x3, 0x453992d1 # load x3 with value 0x453992d1
sw x3, 0(x2) # store 0x453992d1 in memory
flh f16, 0(x2) # load 0x453992d1 from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
fnmadd.h f6, f7, f16, f13, dyn # perform operation
fnmadd.h f6, f7, f16, f13, rdn # perform operation
fnmadd.h f6, f7, f16, f13, rmm # perform operation
fnmadd.h f6, f7, f16, f13, rne # perform operation
fnmadd.h f6, f7, f16, f13, rtz # perform operation
fnmadd.h f6, f7, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x1)
li x5, 0x6952e63f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0x77486e75 # load x3 with value 0x77486e75
sw x3, 0(x2) # store 0x77486e75 in memory
flh f31, 0(x2) # load 0x77486e75 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.h f5, f3, f31, f14, dyn # perform operation
fnmadd.h f5, f3, f31, f14, rdn # perform operation
fnmadd.h f5, f3, f31, f14, rmm # perform operation
fnmadd.h f5, f3, f31, f14, rne # perform operation
fnmadd.h f5, f3, f31, f14, rtz # perform operation
fnmadd.h f5, f3, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8001)
li x5, 0xcc16a1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
li x3, 0x809655c9 # load x3 with value 0x809655c9
sw x3, 0(x2) # store 0x809655c9 in memory
flh f11, 0(x2) # load 0x809655c9 from memory into f11
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f5, f21, f11, f24, dyn # perform operation
fnmadd.h f5, f21, f11, f24, rdn # perform operation
fnmadd.h f5, f21, f11, f24, rmm # perform operation
fnmadd.h f5, f21, f11, f24, rne # perform operation
fnmadd.h f5, f21, f11, f24, rtz # perform operation
fnmadd.h f5, f21, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f21, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c00)
li x24, 0x985a0ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0x9f1e6de7 # load x3 with value 0x9f1e6de7
sw x3, 0(x2) # store 0x9f1e6de7 in memory
flh f5, 0(x2) # load 0x9f1e6de7 from memory into f5
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
fnmadd.h f24, f15, f5, f28, dyn # perform operation
fnmadd.h f24, f15, f5, f28, rdn # perform operation
fnmadd.h f24, f15, f5, f28, rmm # perform operation
fnmadd.h f24, f15, f5, f28, rne # perform operation
fnmadd.h f24, f15, f5, f28, rtz # perform operation
fnmadd.h f24, f15, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc00)
li x22, 0x21a07f87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0x9b99c985 # load x3 with value 0x9b99c985
sw x3, 0(x2) # store 0x9b99c985 in memory
flh f2, 0(x2) # load 0x9b99c985 from memory into f2
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
fnmadd.h f22, f15, f2, f4, dyn # perform operation
fnmadd.h f22, f15, f2, f4, rdn # perform operation
fnmadd.h f22, f15, f2, f4, rmm # perform operation
fnmadd.h f22, f15, f2, f4, rne # perform operation
fnmadd.h f22, f15, f2, f4, rtz # perform operation
fnmadd.h f22, f15, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7e00)
li x6, 0x3973a4d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
li x3, 0xb11f5905 # load x3 with value 0xb11f5905
sw x3, 0(x2) # store 0xb11f5905 in memory
flh f23, 0(x2) # load 0xb11f5905 from memory into f23
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f6, f21, f23, f28, dyn # perform operation
fnmadd.h f6, f21, f23, f28, rdn # perform operation
fnmadd.h f6, f21, f23, f28, rmm # perform operation
fnmadd.h f6, f21, f23, f28, rne # perform operation
fnmadd.h f6, f21, f23, f28, rtz # perform operation
fnmadd.h f6, f21, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7fff)
li x26, 0xca23b64b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
li x3, 0x35e11c0c # load x3 with value 0x35e11c0c
sw x3, 0(x2) # store 0x35e11c0c in memory
flh f17, 0(x2) # load 0x35e11c0c from memory into f17
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
fnmadd.h f26, f2, f17, f14, dyn # perform operation
fnmadd.h f26, f2, f17, f14, rdn # perform operation
fnmadd.h f26, f2, f17, f14, rmm # perform operation
fnmadd.h f26, f2, f17, f14, rne # perform operation
fnmadd.h f26, f2, f17, f14, rtz # perform operation
fnmadd.h f26, f2, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f2, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f2, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f2, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f2, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f2, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c01)
li x18, 0x67b0b02c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
li x3, 0x97bb1e1c # load x3 with value 0x97bb1e1c
sw x3, 0(x2) # store 0x97bb1e1c in memory
flh f23, 0(x2) # load 0x97bb1e1c from memory into f23
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
fnmadd.h f18, f21, f23, f6, dyn # perform operation
fnmadd.h f18, f21, f23, f6, rdn # perform operation
fnmadd.h f18, f21, f23, f6, rmm # perform operation
fnmadd.h f18, f21, f23, f6, rne # perform operation
fnmadd.h f18, f21, f23, f6, rtz # perform operation
fnmadd.h f18, f21, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7dff)
li x7, 0xcca36508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0x286b3efb # load x3 with value 0x286b3efb
sw x3, 0(x2) # store 0x286b3efb in memory
flh f26, 0(x2) # load 0x286b3efb from memory into f26
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
fnmadd.h f7, f15, f26, f3, dyn # perform operation
fnmadd.h f7, f15, f26, f3, rdn # perform operation
fnmadd.h f7, f15, f26, f3, rmm # perform operation
fnmadd.h f7, f15, f26, f3, rne # perform operation
fnmadd.h f7, f15, f26, f3, rtz # perform operation
fnmadd.h f7, f15, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x58b4)
li x6, 0x3bb821fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x033f36d3 # load x3 with value 0x033f36d3
sw x3, 0(x2) # store 0x033f36d3 in memory
flh f4, 0(x2) # load 0x033f36d3 from memory into f4
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
fnmadd.h f6, f25, f4, f15, dyn # perform operation
fnmadd.h f6, f25, f4, f15, rdn # perform operation
fnmadd.h f6, f25, f4, f15, rmm # perform operation
fnmadd.h f6, f25, f4, f15, rne # perform operation
fnmadd.h f6, f25, f4, f15, rtz # perform operation
fnmadd.h f6, f25, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc93a)
li x22, 0xfb541ff2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0xfdd97ba8 # load x3 with value 0xfdd97ba8
sw x3, 0(x2) # store 0xfdd97ba8 in memory
flh f6, 0(x2) # load 0xfdd97ba8 from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
fnmadd.h f22, f12, f6, f15, dyn # perform operation
fnmadd.h f22, f12, f6, f15, rdn # perform operation
fnmadd.h f22, f12, f6, f15, rmm # perform operation
fnmadd.h f22, f12, f6, f15, rne # perform operation
fnmadd.h f22, f12, f6, f15, rtz # perform operation
fnmadd.h f22, f12, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x0)
li x8, 0x1c67575c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0xbbe248ff # load x3 with value 0xbbe248ff
sw x3, 0(x2) # store 0xbbe248ff in memory
flh f22, 0(x2) # load 0xbbe248ff from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f8, f11, f22, f3, dyn # perform operation
fnmadd.h f8, f11, f22, f3, rdn # perform operation
fnmadd.h f8, f11, f22, f3, rmm # perform operation
fnmadd.h f8, f11, f22, f3, rne # perform operation
fnmadd.h f8, f11, f22, f3, rtz # perform operation
fnmadd.h f8, f11, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8000)
li x18, 0x1d6d5cc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0x006d2b8c # load x3 with value 0x006d2b8c
sw x3, 0(x2) # store 0x006d2b8c in memory
flh f2, 0(x2) # load 0x006d2b8c from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
fnmadd.h f18, f22, f2, f7, dyn # perform operation
fnmadd.h f18, f22, f2, f7, rdn # perform operation
fnmadd.h f18, f22, f2, f7, rmm # perform operation
fnmadd.h f18, f22, f2, f7, rne # perform operation
fnmadd.h f18, f22, f2, f7, rtz # perform operation
fnmadd.h f18, f22, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3c00)
li x13, 0x5d0eb2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0xac976170 # load x3 with value 0xac976170
sw x3, 0(x2) # store 0xac976170 in memory
flh f29, 0(x2) # load 0xac976170 from memory into f29
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
fnmadd.h f13, f5, f29, f21, dyn # perform operation
fnmadd.h f13, f5, f29, f21, rdn # perform operation
fnmadd.h f13, f5, f29, f21, rmm # perform operation
fnmadd.h f13, f5, f29, f21, rne # perform operation
fnmadd.h f13, f5, f29, f21, rtz # perform operation
fnmadd.h f13, f5, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbc00)
li x21, 0x420e8c4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0x4288780e # load x3 with value 0x4288780e
sw x3, 0(x2) # store 0x4288780e in memory
flh f31, 0(x2) # load 0x4288780e from memory into f31
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f21, f7, f31, f24, dyn # perform operation
fnmadd.h f21, f7, f31, f24, rdn # perform operation
fnmadd.h f21, f7, f31, f24, rmm # perform operation
fnmadd.h f21, f7, f31, f24, rne # perform operation
fnmadd.h f21, f7, f31, f24, rtz # perform operation
fnmadd.h f21, f7, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f7, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3e00)
li x21, 0x0aba083a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0xe0faa75d # load x3 with value 0xe0faa75d
sw x3, 0(x2) # store 0xe0faa75d in memory
flh f13, 0(x2) # load 0xe0faa75d from memory into f13
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
fnmadd.h f21, f29, f13, f4, dyn # perform operation
fnmadd.h f21, f29, f13, f4, rdn # perform operation
fnmadd.h f21, f29, f13, f4, rmm # perform operation
fnmadd.h f21, f29, f13, f4, rne # perform operation
fnmadd.h f21, f29, f13, f4, rtz # perform operation
fnmadd.h f21, f29, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbe00)
li x13, 0xf9c4e576 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x793ea561 # load x3 with value 0x793ea561
sw x3, 0(x2) # store 0x793ea561 in memory
flh f5, 0(x2) # load 0x793ea561 from memory into f5
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
fnmadd.h f13, f12, f5, f6, dyn # perform operation
fnmadd.h f13, f12, f5, f6, rdn # perform operation
fnmadd.h f13, f12, f5, f6, rmm # perform operation
fnmadd.h f13, f12, f5, f6, rne # perform operation
fnmadd.h f13, f12, f5, f6, rtz # perform operation
fnmadd.h f13, f12, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f12, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x4000)
li x19, 0x6d9ddc84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
li x3, 0x63dfe82f # load x3 with value 0x63dfe82f
sw x3, 0(x2) # store 0x63dfe82f in memory
flh f15, 0(x2) # load 0x63dfe82f from memory into f15
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
fnmadd.h f19, f28, f15, f10, dyn # perform operation
fnmadd.h f19, f28, f15, f10, rdn # perform operation
fnmadd.h f19, f28, f15, f10, rmm # perform operation
fnmadd.h f19, f28, f15, f10, rne # perform operation
fnmadd.h f19, f28, f15, f10, rtz # perform operation
fnmadd.h f19, f28, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f28, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc000)
li x14, 0x625da6c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0xafb974c5 # load x3 with value 0xafb974c5
sw x3, 0(x2) # store 0xafb974c5 in memory
flh f7, 0(x2) # load 0xafb974c5 from memory into f7
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
fnmadd.h f14, f31, f7, f16, dyn # perform operation
fnmadd.h f14, f31, f7, f16, rdn # perform operation
fnmadd.h f14, f31, f7, f16, rmm # perform operation
fnmadd.h f14, f31, f7, f16, rne # perform operation
fnmadd.h f14, f31, f7, f16, rtz # perform operation
fnmadd.h f14, f31, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x400)
li x1, 0x49b5e7c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0xc498c297 # load x3 with value 0xc498c297
sw x3, 0(x2) # store 0xc498c297 in memory
flh f2, 0(x2) # load 0xc498c297 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
fnmadd.h f1, f12, f2, f19, dyn # perform operation
fnmadd.h f1, f12, f2, f19, rdn # perform operation
fnmadd.h f1, f12, f2, f19, rmm # perform operation
fnmadd.h f1, f12, f2, f19, rne # perform operation
fnmadd.h f1, f12, f2, f19, rtz # perform operation
fnmadd.h f1, f12, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f12, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8400)
li x7, 0xf98c3992 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0x330e51c1 # load x3 with value 0x330e51c1
sw x3, 0(x2) # store 0x330e51c1 in memory
flh f8, 0(x2) # load 0x330e51c1 from memory into f8
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f7, f5, f8, f15, dyn # perform operation
fnmadd.h f7, f5, f8, f15, rdn # perform operation
fnmadd.h f7, f5, f8, f15, rmm # perform operation
fnmadd.h f7, f5, f8, f15, rne # perform operation
fnmadd.h f7, f5, f8, f15, rtz # perform operation
fnmadd.h f7, f5, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7bff)
li x26, 0x8bbec0d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
li x3, 0x3e6c13e7 # load x3 with value 0x3e6c13e7
sw x3, 0(x2) # store 0x3e6c13e7 in memory
flh f6, 0(x2) # load 0x3e6c13e7 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
fnmadd.h f26, f19, f6, f11, dyn # perform operation
fnmadd.h f26, f19, f6, f11, rdn # perform operation
fnmadd.h f26, f19, f6, f11, rmm # perform operation
fnmadd.h f26, f19, f6, f11, rne # perform operation
fnmadd.h f26, f19, f6, f11, rtz # perform operation
fnmadd.h f26, f19, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfbff)
li x15, 0x52638bc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0xc0def3b4 # load x3 with value 0xc0def3b4
sw x3, 0(x2) # store 0xc0def3b4 in memory
flh f14, 0(x2) # load 0xc0def3b4 from memory into f14
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
fnmadd.h f15, f30, f14, f4, dyn # perform operation
fnmadd.h f15, f30, f14, f4, rdn # perform operation
fnmadd.h f15, f30, f14, f4, rmm # perform operation
fnmadd.h f15, f30, f14, f4, rne # perform operation
fnmadd.h f15, f30, f14, f4, rtz # perform operation
fnmadd.h f15, f30, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3ff)
li x14, 0x61d9a640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
li x3, 0x09485f6e # load x3 with value 0x09485f6e
sw x3, 0(x2) # store 0x09485f6e in memory
flh f21, 0(x2) # load 0x09485f6e from memory into f21
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
fnmadd.h f14, f2, f21, f15, dyn # perform operation
fnmadd.h f14, f2, f21, f15, rdn # perform operation
fnmadd.h f14, f2, f21, f15, rmm # perform operation
fnmadd.h f14, f2, f21, f15, rne # perform operation
fnmadd.h f14, f2, f21, f15, rtz # perform operation
fnmadd.h f14, f2, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f2, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f2, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x83ff)
li x24, 0xc3e18414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0x9e2f71b1 # load x3 with value 0x9e2f71b1
sw x3, 0(x2) # store 0x9e2f71b1 in memory
flh f20, 0(x2) # load 0x9e2f71b1 from memory into f20
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f24, f11, f20, f9, dyn # perform operation
fnmadd.h f24, f11, f20, f9, rdn # perform operation
fnmadd.h f24, f11, f20, f9, rmm # perform operation
fnmadd.h f24, f11, f20, f9, rne # perform operation
fnmadd.h f24, f11, f20, f9, rtz # perform operation
fnmadd.h f24, f11, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f11, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x200)
li x8, 0x54b3225a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x90dd4924 # load x3 with value 0x90dd4924
sw x3, 0(x2) # store 0x90dd4924 in memory
flh f11, 0(x2) # load 0x90dd4924 from memory into f11
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
fnmadd.h f8, f29, f11, f17, dyn # perform operation
fnmadd.h f8, f29, f11, f17, rdn # perform operation
fnmadd.h f8, f29, f11, f17, rmm # perform operation
fnmadd.h f8, f29, f11, f17, rne # perform operation
fnmadd.h f8, f29, f11, f17, rtz # perform operation
fnmadd.h f8, f29, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f29, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f29, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f29, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f29, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f29, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8200)
li x5, 0x0bb1e6f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
li x3, 0x38e4d00d # load x3 with value 0x38e4d00d
sw x3, 0(x2) # store 0x38e4d00d in memory
flh f15, 0(x2) # load 0x38e4d00d from memory into f15
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
fnmadd.h f5, f27, f15, f7, dyn # perform operation
fnmadd.h f5, f27, f15, f7, rdn # perform operation
fnmadd.h f5, f27, f15, f7, rmm # perform operation
fnmadd.h f5, f27, f15, f7, rne # perform operation
fnmadd.h f5, f27, f15, f7, rtz # perform operation
fnmadd.h f5, f27, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x1)
li x4, 0xedf77bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
li x3, 0xb4cc1282 # load x3 with value 0xb4cc1282
sw x3, 0(x2) # store 0xb4cc1282 in memory
flh f8, 0(x2) # load 0xb4cc1282 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.h f4, f19, f8, f10, dyn # perform operation
fnmadd.h f4, f19, f8, f10, rdn # perform operation
fnmadd.h f4, f19, f8, f10, rmm # perform operation
fnmadd.h f4, f19, f8, f10, rne # perform operation
fnmadd.h f4, f19, f8, f10, rtz # perform operation
fnmadd.h f4, f19, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f19, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8001)
li x19, 0x12f58333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0xceba0c21 # load x3 with value 0xceba0c21
sw x3, 0(x2) # store 0xceba0c21 in memory
flh f6, 0(x2) # load 0xceba0c21 from memory into f6
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
fnmadd.h f19, f25, f6, f2, dyn # perform operation
fnmadd.h f19, f25, f6, f2, rdn # perform operation
fnmadd.h f19, f25, f6, f2, rmm # perform operation
fnmadd.h f19, f25, f6, f2, rne # perform operation
fnmadd.h f19, f25, f6, f2, rtz # perform operation
fnmadd.h f19, f25, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c00)
li x27, 0x82071555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0x21e5b2c3 # load x3 with value 0x21e5b2c3
sw x3, 0(x2) # store 0x21e5b2c3 in memory
flh f24, 0(x2) # load 0x21e5b2c3 from memory into f24
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f27, f30, f24, f29, dyn # perform operation
fnmadd.h f27, f30, f24, f29, rdn # perform operation
fnmadd.h f27, f30, f24, f29, rmm # perform operation
fnmadd.h f27, f30, f24, f29, rne # perform operation
fnmadd.h f27, f30, f24, f29, rtz # perform operation
fnmadd.h f27, f30, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc00)
li x21, 0xe874e915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
li x3, 0x4c0b0192 # load x3 with value 0x4c0b0192
sw x3, 0(x2) # store 0x4c0b0192 in memory
flh f11, 0(x2) # load 0x4c0b0192 from memory into f11
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
fnmadd.h f21, f9, f11, f15, dyn # perform operation
fnmadd.h f21, f9, f11, f15, rdn # perform operation
fnmadd.h f21, f9, f11, f15, rmm # perform operation
fnmadd.h f21, f9, f11, f15, rne # perform operation
fnmadd.h f21, f9, f11, f15, rtz # perform operation
fnmadd.h f21, f9, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7e00)
li x2, 0x32250dca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
li x3, 0xdf6a20cc # load x3 with value 0xdf6a20cc
sw x3, 0(x2) # store 0xdf6a20cc in memory
flh f24, 0(x2) # load 0xdf6a20cc from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
fnmadd.h f2, f6, f24, f12, dyn # perform operation
fnmadd.h f2, f6, f24, f12, rdn # perform operation
fnmadd.h f2, f6, f24, f12, rmm # perform operation
fnmadd.h f2, f6, f24, f12, rne # perform operation
fnmadd.h f2, f6, f24, f12, rtz # perform operation
fnmadd.h f2, f6, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f6, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f6, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f6, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f6, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f6, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7fff)
li x12, 0x14d370e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0x1e48463c # load x3 with value 0x1e48463c
sw x3, 0(x2) # store 0x1e48463c in memory
flh f11, 0(x2) # load 0x1e48463c from memory into f11
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f12, f31, f11, f16, dyn # perform operation
fnmadd.h f12, f31, f11, f16, rdn # perform operation
fnmadd.h f12, f31, f11, f16, rmm # perform operation
fnmadd.h f12, f31, f11, f16, rne # perform operation
fnmadd.h f12, f31, f11, f16, rtz # perform operation
fnmadd.h f12, f31, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c01)
li x24, 0x0ed599ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
li x3, 0x3aac9df7 # load x3 with value 0x3aac9df7
sw x3, 0(x2) # store 0x3aac9df7 in memory
flh f5, 0(x2) # load 0x3aac9df7 from memory into f5
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
fnmadd.h f24, f27, f5, f21, dyn # perform operation
fnmadd.h f24, f27, f5, f21, rdn # perform operation
fnmadd.h f24, f27, f5, f21, rmm # perform operation
fnmadd.h f24, f27, f5, f21, rne # perform operation
fnmadd.h f24, f27, f5, f21, rtz # perform operation
fnmadd.h f24, f27, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7dff)
li x15, 0x9fb467cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0xbff6a149 # load x3 with value 0xbff6a149
sw x3, 0(x2) # store 0xbff6a149 in memory
flh f9, 0(x2) # load 0xbff6a149 from memory into f9
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
fnmadd.h f15, f25, f9, f18, dyn # perform operation
fnmadd.h f15, f25, f9, f18, rdn # perform operation
fnmadd.h f15, f25, f9, f18, rmm # perform operation
fnmadd.h f15, f25, f9, f18, rne # perform operation
fnmadd.h f15, f25, f9, f18, rtz # perform operation
fnmadd.h f15, f25, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x58b4)
li x12, 0xd5960e6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0xfff8b6a4 # load x3 with value 0xfff8b6a4
sw x3, 0(x2) # store 0xfff8b6a4 in memory
flh f31, 0(x2) # load 0xfff8b6a4 from memory into f31
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f12, f16, f31, f14, dyn # perform operation
fnmadd.h f12, f16, f31, f14, rdn # perform operation
fnmadd.h f12, f16, f31, f14, rmm # perform operation
fnmadd.h f12, f16, f31, f14, rne # perform operation
fnmadd.h f12, f16, f31, f14, rtz # perform operation
fnmadd.h f12, f16, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc93a)
li x9, 0xf02d3f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
li x3, 0x33a09fb8 # load x3 with value 0x33a09fb8
sw x3, 0(x2) # store 0x33a09fb8 in memory
flh f29, 0(x2) # load 0x33a09fb8 from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
fnmadd.h f9, f20, f29, f31, dyn # perform operation
fnmadd.h f9, f20, f29, f31, rdn # perform operation
fnmadd.h f9, f20, f29, f31, rmm # perform operation
fnmadd.h f9, f20, f29, f31, rne # perform operation
fnmadd.h f9, f20, f29, f31, rtz # perform operation
fnmadd.h f9, f20, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f20, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x0)
li x10, 0x097fb46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
li x3, 0xe7098c20 # load x3 with value 0xe7098c20
sw x3, 0(x2) # store 0xe7098c20 in memory
flh f2, 0(x2) # load 0xe7098c20 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.h f10, f8, f2, f11, dyn # perform operation
fnmadd.h f10, f8, f2, f11, rdn # perform operation
fnmadd.h f10, f8, f2, f11, rmm # perform operation
fnmadd.h f10, f8, f2, f11, rne # perform operation
fnmadd.h f10, f8, f2, f11, rtz # perform operation
fnmadd.h f10, f8, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8000)
li x16, 0x7b25eb53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x41d4ee5f # load x3 with value 0x41d4ee5f
sw x3, 0(x2) # store 0x41d4ee5f in memory
flh f17, 0(x2) # load 0x41d4ee5f from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
fnmadd.h f16, f1, f17, f24, dyn # perform operation
fnmadd.h f16, f1, f17, f24, rdn # perform operation
fnmadd.h f16, f1, f17, f24, rmm # perform operation
fnmadd.h f16, f1, f17, f24, rne # perform operation
fnmadd.h f16, f1, f17, f24, rtz # perform operation
fnmadd.h f16, f1, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3c00)
li x31, 0x766b626c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0xa121b9a9 # load x3 with value 0xa121b9a9
sw x3, 0(x2) # store 0xa121b9a9 in memory
flh f23, 0(x2) # load 0xa121b9a9 from memory into f23
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
fnmadd.h f31, f24, f23, f4, dyn # perform operation
fnmadd.h f31, f24, f23, f4, rdn # perform operation
fnmadd.h f31, f24, f23, f4, rmm # perform operation
fnmadd.h f31, f24, f23, f4, rne # perform operation
fnmadd.h f31, f24, f23, f4, rtz # perform operation
fnmadd.h f31, f24, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f24, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f24, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f24, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f24, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f24, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbc00)
li x17, 0x62a3aa81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
li x3, 0xc4aa2697 # load x3 with value 0xc4aa2697
sw x3, 0(x2) # store 0xc4aa2697 in memory
flh f19, 0(x2) # load 0xc4aa2697 from memory into f19
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
fnmadd.h f17, f22, f19, f27, dyn # perform operation
fnmadd.h f17, f22, f19, f27, rdn # perform operation
fnmadd.h f17, f22, f19, f27, rmm # perform operation
fnmadd.h f17, f22, f19, f27, rne # perform operation
fnmadd.h f17, f22, f19, f27, rtz # perform operation
fnmadd.h f17, f22, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3e00)
li x6, 0xc5be830d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x058441b2 # load x3 with value 0x058441b2
sw x3, 0(x2) # store 0x058441b2 in memory
flh f11, 0(x2) # load 0x058441b2 from memory into f11
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f6, f3, f11, f28, dyn # perform operation
fnmadd.h f6, f3, f11, f28, rdn # perform operation
fnmadd.h f6, f3, f11, f28, rmm # perform operation
fnmadd.h f6, f3, f11, f28, rne # perform operation
fnmadd.h f6, f3, f11, f28, rtz # perform operation
fnmadd.h f6, f3, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbe00)
li x15, 0x49369f80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
li x3, 0x973bf274 # load x3 with value 0x973bf274
sw x3, 0(x2) # store 0x973bf274 in memory
flh f20, 0(x2) # load 0x973bf274 from memory into f20
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
fnmadd.h f15, f14, f20, f25, dyn # perform operation
fnmadd.h f15, f14, f20, f25, rdn # perform operation
fnmadd.h f15, f14, f20, f25, rmm # perform operation
fnmadd.h f15, f14, f20, f25, rne # perform operation
fnmadd.h f15, f14, f20, f25, rtz # perform operation
fnmadd.h f15, f14, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x4000)
li x12, 0x5789889e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x743c9286 # load x3 with value 0x743c9286
sw x3, 0(x2) # store 0x743c9286 in memory
flh f9, 0(x2) # load 0x743c9286 from memory into f9
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
fnmadd.h f12, f5, f9, f6, dyn # perform operation
fnmadd.h f12, f5, f9, f6, rdn # perform operation
fnmadd.h f12, f5, f9, f6, rmm # perform operation
fnmadd.h f12, f5, f9, f6, rne # perform operation
fnmadd.h f12, f5, f9, f6, rtz # perform operation
fnmadd.h f12, f5, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc000)
li x18, 0x2e652249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x9af5ed22 # load x3 with value 0x9af5ed22
sw x3, 0(x2) # store 0x9af5ed22 in memory
flh f21, 0(x2) # load 0x9af5ed22 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
fnmadd.h f18, f4, f21, f9, dyn # perform operation
fnmadd.h f18, f4, f21, f9, rdn # perform operation
fnmadd.h f18, f4, f21, f9, rmm # perform operation
fnmadd.h f18, f4, f21, f9, rne # perform operation
fnmadd.h f18, f4, f21, f9, rtz # perform operation
fnmadd.h f18, f4, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f4, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f4, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f4, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f4, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f4, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x400)
li x22, 0x3e370965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x8a9fa809 # load x3 with value 0x8a9fa809
sw x3, 0(x2) # store 0x8a9fa809 in memory
flh f3, 0(x2) # load 0x8a9fa809 from memory into f3
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
fnmadd.h f22, f25, f3, f11, dyn # perform operation
fnmadd.h f22, f25, f3, f11, rdn # perform operation
fnmadd.h f22, f25, f3, f11, rmm # perform operation
fnmadd.h f22, f25, f3, f11, rne # perform operation
fnmadd.h f22, f25, f3, f11, rtz # perform operation
fnmadd.h f22, f25, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8400)
li x1, 0x358f6884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x25334880 # load x3 with value 0x25334880
sw x3, 0(x2) # store 0x25334880 in memory
flh f10, 0(x2) # load 0x25334880 from memory into f10
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
fnmadd.h f1, f4, f10, f22, dyn # perform operation
fnmadd.h f1, f4, f10, f22, rdn # perform operation
fnmadd.h f1, f4, f10, f22, rmm # perform operation
fnmadd.h f1, f4, f10, f22, rne # perform operation
fnmadd.h f1, f4, f10, f22, rtz # perform operation
fnmadd.h f1, f4, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f4, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f4, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f4, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f4, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f4, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7bff)
li x19, 0x6fdb9c67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0x8d7a427d # load x3 with value 0x8d7a427d
sw x3, 0(x2) # store 0x8d7a427d in memory
flh f31, 0(x2) # load 0x8d7a427d from memory into f31
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
fnmadd.h f19, f11, f31, f27, dyn # perform operation
fnmadd.h f19, f11, f31, f27, rdn # perform operation
fnmadd.h f19, f11, f31, f27, rmm # perform operation
fnmadd.h f19, f11, f31, f27, rne # perform operation
fnmadd.h f19, f11, f31, f27, rtz # perform operation
fnmadd.h f19, f11, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfbff)
li x13, 0xb9dc2dd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x2ac1e15c # load x3 with value 0x2ac1e15c
sw x3, 0(x2) # store 0x2ac1e15c in memory
flh f5, 0(x2) # load 0x2ac1e15c from memory into f5
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f13, f18, f5, f21, dyn # perform operation
fnmadd.h f13, f18, f5, f21, rdn # perform operation
fnmadd.h f13, f18, f5, f21, rmm # perform operation
fnmadd.h f13, f18, f5, f21, rne # perform operation
fnmadd.h f13, f18, f5, f21, rtz # perform operation
fnmadd.h f13, f18, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f18, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3ff)
li x6, 0xc903dce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0x299751b1 # load x3 with value 0x299751b1
sw x3, 0(x2) # store 0x299751b1 in memory
flh f21, 0(x2) # load 0x299751b1 from memory into f21
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
fnmadd.h f6, f24, f21, f1, dyn # perform operation
fnmadd.h f6, f24, f21, f1, rdn # perform operation
fnmadd.h f6, f24, f21, f1, rmm # perform operation
fnmadd.h f6, f24, f21, f1, rne # perform operation
fnmadd.h f6, f24, f21, f1, rtz # perform operation
fnmadd.h f6, f24, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x83ff)
li x4, 0xc14d9b62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0xb64ba80b # load x3 with value 0xb64ba80b
sw x3, 0(x2) # store 0xb64ba80b in memory
flh f16, 0(x2) # load 0xb64ba80b from memory into f16
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f4, f24, f16, f9, dyn # perform operation
fnmadd.h f4, f24, f16, f9, rdn # perform operation
fnmadd.h f4, f24, f16, f9, rmm # perform operation
fnmadd.h f4, f24, f16, f9, rne # perform operation
fnmadd.h f4, f24, f16, f9, rtz # perform operation
fnmadd.h f4, f24, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f24, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f24, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f24, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f24, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f24, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x200)
li x27, 0x0a9d9a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x5b2ae822 # load x3 with value 0x5b2ae822
sw x3, 0(x2) # store 0x5b2ae822 in memory
flh f4, 0(x2) # load 0x5b2ae822 from memory into f4
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
fnmadd.h f27, f25, f4, f16, dyn # perform operation
fnmadd.h f27, f25, f4, f16, rdn # perform operation
fnmadd.h f27, f25, f4, f16, rmm # perform operation
fnmadd.h f27, f25, f4, f16, rne # perform operation
fnmadd.h f27, f25, f4, f16, rtz # perform operation
fnmadd.h f27, f25, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8200)
li x10, 0x10fffda9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0xcf0adf28 # load x3 with value 0xcf0adf28
sw x3, 0(x2) # store 0xcf0adf28 in memory
flh f4, 0(x2) # load 0xcf0adf28 from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f10, f23, f4, f9, dyn # perform operation
fnmadd.h f10, f23, f4, f9, rdn # perform operation
fnmadd.h f10, f23, f4, f9, rmm # perform operation
fnmadd.h f10, f23, f4, f9, rne # perform operation
fnmadd.h f10, f23, f4, f9, rtz # perform operation
fnmadd.h f10, f23, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f4, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x1)
li x8, 0xb0a4baec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0x09c6b8a2 # load x3 with value 0x09c6b8a2
sw x3, 0(x2) # store 0x09c6b8a2 in memory
flh f13, 0(x2) # load 0x09c6b8a2 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f8, f23, f13, f3, dyn # perform operation
fnmadd.h f8, f23, f13, f3, rdn # perform operation
fnmadd.h f8, f23, f13, f3, rmm # perform operation
fnmadd.h f8, f23, f13, f3, rne # perform operation
fnmadd.h f8, f23, f13, f3, rtz # perform operation
fnmadd.h f8, f23, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8001)
li x29, 0xd73a4dab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x5f330bf6 # load x3 with value 0x5f330bf6
sw x3, 0(x2) # store 0x5f330bf6 in memory
flh f19, 0(x2) # load 0x5f330bf6 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
fnmadd.h f29, f1, f19, f10, dyn # perform operation
fnmadd.h f29, f1, f19, f10, rdn # perform operation
fnmadd.h f29, f1, f19, f10, rmm # perform operation
fnmadd.h f29, f1, f19, f10, rne # perform operation
fnmadd.h f29, f1, f19, f10, rtz # perform operation
fnmadd.h f29, f1, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c00)
li x2, 0x70219927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0x1af0fcb3 # load x3 with value 0x1af0fcb3
sw x3, 0(x2) # store 0x1af0fcb3 in memory
flh f23, 0(x2) # load 0x1af0fcb3 from memory into f23
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
fnmadd.h f2, f11, f23, f3, dyn # perform operation
fnmadd.h f2, f11, f23, f3, rdn # perform operation
fnmadd.h f2, f11, f23, f3, rmm # perform operation
fnmadd.h f2, f11, f23, f3, rne # perform operation
fnmadd.h f2, f11, f23, f3, rtz # perform operation
fnmadd.h f2, f11, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc00)
li x31, 0xe49951a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x0ea72bb1 # load x3 with value 0x0ea72bb1
sw x3, 0(x2) # store 0x0ea72bb1 in memory
flh f11, 0(x2) # load 0x0ea72bb1 from memory into f11
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
fnmadd.h f31, f5, f11, f28, dyn # perform operation
fnmadd.h f31, f5, f11, f28, rdn # perform operation
fnmadd.h f31, f5, f11, f28, rmm # perform operation
fnmadd.h f31, f5, f11, f28, rne # perform operation
fnmadd.h f31, f5, f11, f28, rtz # perform operation
fnmadd.h f31, f5, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7e00)
li x30, 0x5f811665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x8ed8888c # load x3 with value 0x8ed8888c
sw x3, 0(x2) # store 0x8ed8888c in memory
flh f18, 0(x2) # load 0x8ed8888c from memory into f18
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f30, f1, f18, f24, dyn # perform operation
fnmadd.h f30, f1, f18, f24, rdn # perform operation
fnmadd.h f30, f1, f18, f24, rmm # perform operation
fnmadd.h f30, f1, f18, f24, rne # perform operation
fnmadd.h f30, f1, f18, f24, rtz # perform operation
fnmadd.h f30, f1, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7fff)
li x27, 0xb74f3080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
li x3, 0x478eb867 # load x3 with value 0x478eb867
sw x3, 0(x2) # store 0x478eb867 in memory
flh f6, 0(x2) # load 0x478eb867 from memory into f6
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
fnmadd.h f27, f28, f6, f8, dyn # perform operation
fnmadd.h f27, f28, f6, f8, rdn # perform operation
fnmadd.h f27, f28, f6, f8, rmm # perform operation
fnmadd.h f27, f28, f6, f8, rne # perform operation
fnmadd.h f27, f28, f6, f8, rtz # perform operation
fnmadd.h f27, f28, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c01)
li x10, 0x7dad2207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
li x3, 0xe5e5527a # load x3 with value 0xe5e5527a
sw x3, 0(x2) # store 0xe5e5527a in memory
flh f29, 0(x2) # load 0xe5e5527a from memory into f29
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f10, f2, f29, f7, dyn # perform operation
fnmadd.h f10, f2, f29, f7, rdn # perform operation
fnmadd.h f10, f2, f29, f7, rmm # perform operation
fnmadd.h f10, f2, f29, f7, rne # perform operation
fnmadd.h f10, f2, f29, f7, rtz # perform operation
fnmadd.h f10, f2, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7dff)
li x29, 0xa43b6549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x4d05ca88 # load x3 with value 0x4d05ca88
sw x3, 0(x2) # store 0x4d05ca88 in memory
flh f15, 0(x2) # load 0x4d05ca88 from memory into f15
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
fnmadd.h f29, f5, f15, f24, dyn # perform operation
fnmadd.h f29, f5, f15, f24, rdn # perform operation
fnmadd.h f29, f5, f15, f24, rmm # perform operation
fnmadd.h f29, f5, f15, f24, rne # perform operation
fnmadd.h f29, f5, f15, f24, rtz # perform operation
fnmadd.h f29, f5, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x58b4)
li x4, 0x0015a109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
li x3, 0x35739277 # load x3 with value 0x35739277
sw x3, 0(x2) # store 0x35739277 in memory
flh f10, 0(x2) # load 0x35739277 from memory into f10
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
fnmadd.h f4, f9, f10, f11, dyn # perform operation
fnmadd.h f4, f9, f10, f11, rdn # perform operation
fnmadd.h f4, f9, f10, f11, rmm # perform operation
fnmadd.h f4, f9, f10, f11, rne # perform operation
fnmadd.h f4, f9, f10, f11, rtz # perform operation
fnmadd.h f4, f9, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f9, f10, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc93a)
li x4, 0x306d8aa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
li x3, 0x70d63072 # load x3 with value 0x70d63072
sw x3, 0(x2) # store 0x70d63072 in memory
flh f9, 0(x2) # load 0x70d63072 from memory into f9
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
fnmadd.h f4, f17, f9, f19, dyn # perform operation
fnmadd.h f4, f17, f9, f19, rdn # perform operation
fnmadd.h f4, f17, f9, f19, rmm # perform operation
fnmadd.h f4, f17, f9, f19, rne # perform operation
fnmadd.h f4, f17, f9, f19, rtz # perform operation
fnmadd.h f4, f17, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f17, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x0)
li x22, 0x680bc8c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
li x3, 0x4135bff8 # load x3 with value 0x4135bff8
sw x3, 0(x2) # store 0x4135bff8 in memory
flh f5, 0(x2) # load 0x4135bff8 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.h f22, f14, f5, f21, dyn # perform operation
fnmadd.h f22, f14, f5, f21, rdn # perform operation
fnmadd.h f22, f14, f5, f21, rmm # perform operation
fnmadd.h f22, f14, f5, f21, rne # perform operation
fnmadd.h f22, f14, f5, f21, rtz # perform operation
fnmadd.h f22, f14, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8000)
li x2, 0x715c77e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
li x3, 0x99a9908c # load x3 with value 0x99a9908c
sw x3, 0(x2) # store 0x99a9908c in memory
flh f26, 0(x2) # load 0x99a9908c from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
fnmadd.h f2, f7, f26, f10, dyn # perform operation
fnmadd.h f2, f7, f26, f10, rdn # perform operation
fnmadd.h f2, f7, f26, f10, rmm # perform operation
fnmadd.h f2, f7, f26, f10, rne # perform operation
fnmadd.h f2, f7, f26, f10, rtz # perform operation
fnmadd.h f2, f7, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3c00)
li x2, 0x7d5eee92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x89b16c63 # load x3 with value 0x89b16c63
sw x3, 0(x2) # store 0x89b16c63 in memory
flh f14, 0(x2) # load 0x89b16c63 from memory into f14
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
fnmadd.h f2, f18, f14, f29, dyn # perform operation
fnmadd.h f2, f18, f14, f29, rdn # perform operation
fnmadd.h f2, f18, f14, f29, rmm # perform operation
fnmadd.h f2, f18, f14, f29, rne # perform operation
fnmadd.h f2, f18, f14, f29, rtz # perform operation
fnmadd.h f2, f18, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbc00)
li x21, 0xdcea54d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
li x3, 0xec92a6e3 # load x3 with value 0xec92a6e3
sw x3, 0(x2) # store 0xec92a6e3 in memory
flh f22, 0(x2) # load 0xec92a6e3 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
fnmadd.h f21, f3, f22, f11, dyn # perform operation
fnmadd.h f21, f3, f22, f11, rdn # perform operation
fnmadd.h f21, f3, f22, f11, rmm # perform operation
fnmadd.h f21, f3, f22, f11, rne # perform operation
fnmadd.h f21, f3, f22, f11, rtz # perform operation
fnmadd.h f21, f3, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f3, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3e00)
li x7, 0x8e3d1e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x7b6c21c6 # load x3 with value 0x7b6c21c6
sw x3, 0(x2) # store 0x7b6c21c6 in memory
flh f28, 0(x2) # load 0x7b6c21c6 from memory into f28
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f7, f1, f28, f13, dyn # perform operation
fnmadd.h f7, f1, f28, f13, rdn # perform operation
fnmadd.h f7, f1, f28, f13, rmm # perform operation
fnmadd.h f7, f1, f28, f13, rne # perform operation
fnmadd.h f7, f1, f28, f13, rtz # perform operation
fnmadd.h f7, f1, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbe00)
li x7, 0x5b401492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0x100959d2 # load x3 with value 0x100959d2
sw x3, 0(x2) # store 0x100959d2 in memory
flh f15, 0(x2) # load 0x100959d2 from memory into f15
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f7, f5, f15, f28, dyn # perform operation
fnmadd.h f7, f5, f15, f28, rdn # perform operation
fnmadd.h f7, f5, f15, f28, rmm # perform operation
fnmadd.h f7, f5, f15, f28, rne # perform operation
fnmadd.h f7, f5, f15, f28, rtz # perform operation
fnmadd.h f7, f5, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x4000)
li x21, 0xd5972bb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0xcd716e69 # load x3 with value 0xcd716e69
sw x3, 0(x2) # store 0xcd716e69 in memory
flh f13, 0(x2) # load 0xcd716e69 from memory into f13
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
fnmadd.h f21, f1, f13, f22, dyn # perform operation
fnmadd.h f21, f1, f13, f22, rdn # perform operation
fnmadd.h f21, f1, f13, f22, rmm # perform operation
fnmadd.h f21, f1, f13, f22, rne # perform operation
fnmadd.h f21, f1, f13, f22, rtz # perform operation
fnmadd.h f21, f1, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc000)
li x18, 0xbfb2c3e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x8fc2cd0b # load x3 with value 0x8fc2cd0b
sw x3, 0(x2) # store 0x8fc2cd0b in memory
flh f4, 0(x2) # load 0x8fc2cd0b from memory into f4
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f18, f17, f4, f2, dyn # perform operation
fnmadd.h f18, f17, f4, f2, rdn # perform operation
fnmadd.h f18, f17, f4, f2, rmm # perform operation
fnmadd.h f18, f17, f4, f2, rne # perform operation
fnmadd.h f18, f17, f4, f2, rtz # perform operation
fnmadd.h f18, f17, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x400)
li x1, 0x55f20b05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x4669e2d6 # load x3 with value 0x4669e2d6
sw x3, 0(x2) # store 0x4669e2d6 in memory
flh f30, 0(x2) # load 0x4669e2d6 from memory into f30
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
fnmadd.h f1, f18, f30, f2, dyn # perform operation
fnmadd.h f1, f18, f30, f2, rdn # perform operation
fnmadd.h f1, f18, f30, f2, rmm # perform operation
fnmadd.h f1, f18, f30, f2, rne # perform operation
fnmadd.h f1, f18, f30, f2, rtz # perform operation
fnmadd.h f1, f18, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f18, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8400)
li x21, 0xa1ed2fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0x326dde74 # load x3 with value 0x326dde74
sw x3, 0(x2) # store 0x326dde74 in memory
flh f24, 0(x2) # load 0x326dde74 from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
fnmadd.h f21, f13, f24, f19, dyn # perform operation
fnmadd.h f21, f13, f24, f19, rdn # perform operation
fnmadd.h f21, f13, f24, f19, rmm # perform operation
fnmadd.h f21, f13, f24, f19, rne # perform operation
fnmadd.h f21, f13, f24, f19, rtz # perform operation
fnmadd.h f21, f13, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7bff)
li x10, 0x05fd817f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
li x3, 0xef48cc36 # load x3 with value 0xef48cc36
sw x3, 0(x2) # store 0xef48cc36 in memory
flh f25, 0(x2) # load 0xef48cc36 from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
fnmadd.h f10, f23, f25, f4, dyn # perform operation
fnmadd.h f10, f23, f25, f4, rdn # perform operation
fnmadd.h f10, f23, f25, f4, rmm # perform operation
fnmadd.h f10, f23, f25, f4, rne # perform operation
fnmadd.h f10, f23, f25, f4, rtz # perform operation
fnmadd.h f10, f23, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfbff)
li x3, 0x2f823ff1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0xbf46e0e0 # load x3 with value 0xbf46e0e0
sw x3, 0(x2) # store 0xbf46e0e0 in memory
flh f20, 0(x2) # load 0xbf46e0e0 from memory into f20
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f3, f25, f20, f7, dyn # perform operation
fnmadd.h f3, f25, f20, f7, rdn # perform operation
fnmadd.h f3, f25, f20, f7, rmm # perform operation
fnmadd.h f3, f25, f20, f7, rne # perform operation
fnmadd.h f3, f25, f20, f7, rtz # perform operation
fnmadd.h f3, f25, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3ff)
li x19, 0x9929dc09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0xf3c83334 # load x3 with value 0xf3c83334
sw x3, 0(x2) # store 0xf3c83334 in memory
flh f3, 0(x2) # load 0xf3c83334 from memory into f3
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
fnmadd.h f19, f20, f3, f21, dyn # perform operation
fnmadd.h f19, f20, f3, f21, rdn # perform operation
fnmadd.h f19, f20, f3, f21, rmm # perform operation
fnmadd.h f19, f20, f3, f21, rne # perform operation
fnmadd.h f19, f20, f3, f21, rtz # perform operation
fnmadd.h f19, f20, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x83ff)
li x15, 0xfe9b30b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
li x3, 0xe0457093 # load x3 with value 0xe0457093
sw x3, 0(x2) # store 0xe0457093 in memory
flh f12, 0(x2) # load 0xe0457093 from memory into f12
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
fnmadd.h f15, f14, f12, f24, dyn # perform operation
fnmadd.h f15, f14, f12, f24, rdn # perform operation
fnmadd.h f15, f14, f12, f24, rmm # perform operation
fnmadd.h f15, f14, f12, f24, rne # perform operation
fnmadd.h f15, f14, f12, f24, rtz # perform operation
fnmadd.h f15, f14, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x200)
li x27, 0x9bba630b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0x178eab28 # load x3 with value 0x178eab28
sw x3, 0(x2) # store 0x178eab28 in memory
flh f30, 0(x2) # load 0x178eab28 from memory into f30
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
fnmadd.h f27, f5, f30, f28, dyn # perform operation
fnmadd.h f27, f5, f30, f28, rdn # perform operation
fnmadd.h f27, f5, f30, f28, rmm # perform operation
fnmadd.h f27, f5, f30, f28, rne # perform operation
fnmadd.h f27, f5, f30, f28, rtz # perform operation
fnmadd.h f27, f5, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8200)
li x1, 0x4c81f185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x08608c76 # load x3 with value 0x08608c76
sw x3, 0(x2) # store 0x08608c76 in memory
flh f6, 0(x2) # load 0x08608c76 from memory into f6
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
fnmadd.h f1, f18, f6, f5, dyn # perform operation
fnmadd.h f1, f18, f6, f5, rdn # perform operation
fnmadd.h f1, f18, f6, f5, rmm # perform operation
fnmadd.h f1, f18, f6, f5, rne # perform operation
fnmadd.h f1, f18, f6, f5, rtz # perform operation
fnmadd.h f1, f18, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f18, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x1)
li x28, 0x3dcf134f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0xcc442cf0 # load x3 with value 0xcc442cf0
sw x3, 0(x2) # store 0xcc442cf0 in memory
flh f5, 0(x2) # load 0xcc442cf0 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.h f28, f31, f5, f11, dyn # perform operation
fnmadd.h f28, f31, f5, f11, rdn # perform operation
fnmadd.h f28, f31, f5, f11, rmm # perform operation
fnmadd.h f28, f31, f5, f11, rne # perform operation
fnmadd.h f28, f31, f5, f11, rtz # perform operation
fnmadd.h f28, f31, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8001)
li x11, 0xef7184d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x698a41c4 # load x3 with value 0x698a41c4
sw x3, 0(x2) # store 0x698a41c4 in memory
flh f8, 0(x2) # load 0x698a41c4 from memory into f8
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
fnmadd.h f11, f18, f8, f16, dyn # perform operation
fnmadd.h f11, f18, f8, f16, rdn # perform operation
fnmadd.h f11, f18, f8, f16, rmm # perform operation
fnmadd.h f11, f18, f8, f16, rne # perform operation
fnmadd.h f11, f18, f8, f16, rtz # perform operation
fnmadd.h f11, f18, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c00)
li x16, 0x7cf48400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0x86d9da26 # load x3 with value 0x86d9da26
sw x3, 0(x2) # store 0x86d9da26 in memory
flh f22, 0(x2) # load 0x86d9da26 from memory into f22
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
fnmadd.h f16, f31, f22, f24, dyn # perform operation
fnmadd.h f16, f31, f22, f24, rdn # perform operation
fnmadd.h f16, f31, f22, f24, rmm # perform operation
fnmadd.h f16, f31, f22, f24, rne # perform operation
fnmadd.h f16, f31, f22, f24, rtz # perform operation
fnmadd.h f16, f31, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc00)
li x28, 0xa64e28b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
li x3, 0x07e0fff3 # load x3 with value 0x07e0fff3
sw x3, 0(x2) # store 0x07e0fff3 in memory
flh f24, 0(x2) # load 0x07e0fff3 from memory into f24
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
fnmadd.h f28, f11, f24, f3, dyn # perform operation
fnmadd.h f28, f11, f24, f3, rdn # perform operation
fnmadd.h f28, f11, f24, f3, rmm # perform operation
fnmadd.h f28, f11, f24, f3, rne # perform operation
fnmadd.h f28, f11, f24, f3, rtz # perform operation
fnmadd.h f28, f11, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7e00)
li x25, 0x520bcfb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x2e3ed3b3 # load x3 with value 0x2e3ed3b3
sw x3, 0(x2) # store 0x2e3ed3b3 in memory
flh f16, 0(x2) # load 0x2e3ed3b3 from memory into f16
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
fnmadd.h f25, f17, f16, f14, dyn # perform operation
fnmadd.h f25, f17, f16, f14, rdn # perform operation
fnmadd.h f25, f17, f16, f14, rmm # perform operation
fnmadd.h f25, f17, f16, f14, rne # perform operation
fnmadd.h f25, f17, f16, f14, rtz # perform operation
fnmadd.h f25, f17, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7fff)
li x5, 0x3e0bbeed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0xd45b1cca # load x3 with value 0xd45b1cca
sw x3, 0(x2) # store 0xd45b1cca in memory
flh f15, 0(x2) # load 0xd45b1cca from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f5, f1, f15, f21, dyn # perform operation
fnmadd.h f5, f1, f15, f21, rdn # perform operation
fnmadd.h f5, f1, f15, f21, rmm # perform operation
fnmadd.h f5, f1, f15, f21, rne # perform operation
fnmadd.h f5, f1, f15, f21, rtz # perform operation
fnmadd.h f5, f1, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c01)
li x3, 0x6e168038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0x773c4219 # load x3 with value 0x773c4219
sw x3, 0(x2) # store 0x773c4219 in memory
flh f11, 0(x2) # load 0x773c4219 from memory into f11
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f3, f20, f11, f28, dyn # perform operation
fnmadd.h f3, f20, f11, f28, rdn # perform operation
fnmadd.h f3, f20, f11, f28, rmm # perform operation
fnmadd.h f3, f20, f11, f28, rne # perform operation
fnmadd.h f3, f20, f11, f28, rtz # perform operation
fnmadd.h f3, f20, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7dff)
li x23, 0x975340ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x8ea8e9fa # load x3 with value 0x8ea8e9fa
sw x3, 0(x2) # store 0x8ea8e9fa in memory
flh f19, 0(x2) # load 0x8ea8e9fa from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
fnmadd.h f23, f1, f19, f27, dyn # perform operation
fnmadd.h f23, f1, f19, f27, rdn # perform operation
fnmadd.h f23, f1, f19, f27, rmm # perform operation
fnmadd.h f23, f1, f19, f27, rne # perform operation
fnmadd.h f23, f1, f19, f27, rtz # perform operation
fnmadd.h f23, f1, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x58b4)
li x27, 0xdd944ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
li x3, 0xe73d6c48 # load x3 with value 0xe73d6c48
sw x3, 0(x2) # store 0xe73d6c48 in memory
flh f7, 0(x2) # load 0xe73d6c48 from memory into f7
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
fnmadd.h f27, f22, f7, f17, dyn # perform operation
fnmadd.h f27, f22, f7, f17, rdn # perform operation
fnmadd.h f27, f22, f7, f17, rmm # perform operation
fnmadd.h f27, f22, f7, f17, rne # perform operation
fnmadd.h f27, f22, f7, f17, rtz # perform operation
fnmadd.h f27, f22, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc93a)
li x20, 0x7e651f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0xd2d00d17 # load x3 with value 0xd2d00d17
sw x3, 0(x2) # store 0xd2d00d17 in memory
flh f21, 0(x2) # load 0xd2d00d17 from memory into f21
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
fnmadd.h f20, f24, f21, f1, dyn # perform operation
fnmadd.h f20, f24, f21, f1, rdn # perform operation
fnmadd.h f20, f24, f21, f1, rmm # perform operation
fnmadd.h f20, f24, f21, f1, rne # perform operation
fnmadd.h f20, f24, f21, f1, rtz # perform operation
fnmadd.h f20, f24, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x0)
li x21, 0x35fc9682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
li x3, 0x930927f4 # load x3 with value 0x930927f4
sw x3, 0(x2) # store 0x930927f4 in memory
flh f22, 0(x2) # load 0x930927f4 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f21, f12, f22, f7, dyn # perform operation
fnmadd.h f21, f12, f22, f7, rdn # perform operation
fnmadd.h f21, f12, f22, f7, rmm # perform operation
fnmadd.h f21, f12, f22, f7, rne # perform operation
fnmadd.h f21, f12, f22, f7, rtz # perform operation
fnmadd.h f21, f12, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8000)
li x9, 0xafecb699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0x13f1ac60 # load x3 with value 0x13f1ac60
sw x3, 0(x2) # store 0x13f1ac60 in memory
flh f17, 0(x2) # load 0x13f1ac60 from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
fnmadd.h f9, f24, f17, f30, dyn # perform operation
fnmadd.h f9, f24, f17, f30, rdn # perform operation
fnmadd.h f9, f24, f17, f30, rmm # perform operation
fnmadd.h f9, f24, f17, f30, rne # perform operation
fnmadd.h f9, f24, f17, f30, rtz # perform operation
fnmadd.h f9, f24, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3c00)
li x31, 0x0230acc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
li x3, 0x5e7739ab # load x3 with value 0x5e7739ab
sw x3, 0(x2) # store 0x5e7739ab in memory
flh f23, 0(x2) # load 0x5e7739ab from memory into f23
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f31, f12, f23, f8, dyn # perform operation
fnmadd.h f31, f12, f23, f8, rdn # perform operation
fnmadd.h f31, f12, f23, f8, rmm # perform operation
fnmadd.h f31, f12, f23, f8, rne # perform operation
fnmadd.h f31, f12, f23, f8, rtz # perform operation
fnmadd.h f31, f12, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f12, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f12, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f12, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f12, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f12, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbc00)
li x2, 0x18fd714d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
li x3, 0xe2840219 # load x3 with value 0xe2840219
sw x3, 0(x2) # store 0xe2840219 in memory
flh f21, 0(x2) # load 0xe2840219 from memory into f21
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
fnmadd.h f2, f4, f21, f20, dyn # perform operation
fnmadd.h f2, f4, f21, f20, rdn # perform operation
fnmadd.h f2, f4, f21, f20, rmm # perform operation
fnmadd.h f2, f4, f21, f20, rne # perform operation
fnmadd.h f2, f4, f21, f20, rtz # perform operation
fnmadd.h f2, f4, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f4, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3e00)
li x11, 0x776ddb28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0xd01a24b5 # load x3 with value 0xd01a24b5
sw x3, 0(x2) # store 0xd01a24b5 in memory
flh f22, 0(x2) # load 0xd01a24b5 from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
fnmadd.h f11, f19, f22, f20, dyn # perform operation
fnmadd.h f11, f19, f22, f20, rdn # perform operation
fnmadd.h f11, f19, f22, f20, rmm # perform operation
fnmadd.h f11, f19, f22, f20, rne # perform operation
fnmadd.h f11, f19, f22, f20, rtz # perform operation
fnmadd.h f11, f19, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbe00)
li x10, 0x4a85af8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0x7f61a4e3 # load x3 with value 0x7f61a4e3
sw x3, 0(x2) # store 0x7f61a4e3 in memory
flh f22, 0(x2) # load 0x7f61a4e3 from memory into f22
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
fnmadd.h f10, f19, f22, f18, dyn # perform operation
fnmadd.h f10, f19, f22, f18, rdn # perform operation
fnmadd.h f10, f19, f22, f18, rmm # perform operation
fnmadd.h f10, f19, f22, f18, rne # perform operation
fnmadd.h f10, f19, f22, f18, rtz # perform operation
fnmadd.h f10, f19, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x4000)
li x16, 0x48220523 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
li x3, 0xa28aff7f # load x3 with value 0xa28aff7f
sw x3, 0(x2) # store 0xa28aff7f in memory
flh f30, 0(x2) # load 0xa28aff7f from memory into f30
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f16, f31, f30, f1, dyn # perform operation
fnmadd.h f16, f31, f30, f1, rdn # perform operation
fnmadd.h f16, f31, f30, f1, rmm # perform operation
fnmadd.h f16, f31, f30, f1, rne # perform operation
fnmadd.h f16, f31, f30, f1, rtz # perform operation
fnmadd.h f16, f31, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc000)
li x17, 0xa229ce45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x1e77cd71 # load x3 with value 0x1e77cd71
sw x3, 0(x2) # store 0x1e77cd71 in memory
flh f9, 0(x2) # load 0x1e77cd71 from memory into f9
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
fnmadd.h f17, f1, f9, f22, dyn # perform operation
fnmadd.h f17, f1, f9, f22, rdn # perform operation
fnmadd.h f17, f1, f9, f22, rmm # perform operation
fnmadd.h f17, f1, f9, f22, rne # perform operation
fnmadd.h f17, f1, f9, f22, rtz # perform operation
fnmadd.h f17, f1, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x400)
li x8, 0xcc42e4a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x00ec6e4f # load x3 with value 0x00ec6e4f
sw x3, 0(x2) # store 0x00ec6e4f in memory
flh f15, 0(x2) # load 0x00ec6e4f from memory into f15
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
fnmadd.h f8, f13, f15, f24, dyn # perform operation
fnmadd.h f8, f13, f15, f24, rdn # perform operation
fnmadd.h f8, f13, f15, f24, rmm # perform operation
fnmadd.h f8, f13, f15, f24, rne # perform operation
fnmadd.h f8, f13, f15, f24, rtz # perform operation
fnmadd.h f8, f13, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8400)
li x31, 0x854235c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
li x3, 0x5338a2cb # load x3 with value 0x5338a2cb
sw x3, 0(x2) # store 0x5338a2cb in memory
flh f20, 0(x2) # load 0x5338a2cb from memory into f20
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f31, f4, f20, f23, dyn # perform operation
fnmadd.h f31, f4, f20, f23, rdn # perform operation
fnmadd.h f31, f4, f20, f23, rmm # perform operation
fnmadd.h f31, f4, f20, f23, rne # perform operation
fnmadd.h f31, f4, f20, f23, rtz # perform operation
fnmadd.h f31, f4, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f4, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f4, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f4, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f4, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f4, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7bff)
li x28, 0x3b96bacf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0x17c8cc7e # load x3 with value 0x17c8cc7e
sw x3, 0(x2) # store 0x17c8cc7e in memory
flh f4, 0(x2) # load 0x17c8cc7e from memory into f4
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
fnmadd.h f28, f18, f4, f11, dyn # perform operation
fnmadd.h f28, f18, f4, f11, rdn # perform operation
fnmadd.h f28, f18, f4, f11, rmm # perform operation
fnmadd.h f28, f18, f4, f11, rne # perform operation
fnmadd.h f28, f18, f4, f11, rtz # perform operation
fnmadd.h f28, f18, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f18, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfbff)
li x10, 0xd958a264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
li x3, 0xcb9d2732 # load x3 with value 0xcb9d2732
sw x3, 0(x2) # store 0xcb9d2732 in memory
flh f30, 0(x2) # load 0xcb9d2732 from memory into f30
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f10, f26, f30, f6, dyn # perform operation
fnmadd.h f10, f26, f30, f6, rdn # perform operation
fnmadd.h f10, f26, f30, f6, rmm # perform operation
fnmadd.h f10, f26, f30, f6, rne # perform operation
fnmadd.h f10, f26, f30, f6, rtz # perform operation
fnmadd.h f10, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3ff)
li x14, 0x540ce165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0xa9b93283 # load x3 with value 0xa9b93283
sw x3, 0(x2) # store 0xa9b93283 in memory
flh f4, 0(x2) # load 0xa9b93283 from memory into f4
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
fnmadd.h f14, f28, f4, f13, dyn # perform operation
fnmadd.h f14, f28, f4, f13, rdn # perform operation
fnmadd.h f14, f28, f4, f13, rmm # perform operation
fnmadd.h f14, f28, f4, f13, rne # perform operation
fnmadd.h f14, f28, f4, f13, rtz # perform operation
fnmadd.h f14, f28, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x83ff)
li x31, 0x5ea9bc1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x89635432 # load x3 with value 0x89635432
sw x3, 0(x2) # store 0x89635432 in memory
flh f11, 0(x2) # load 0x89635432 from memory into f11
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
fnmadd.h f31, f29, f11, f23, dyn # perform operation
fnmadd.h f31, f29, f11, f23, rdn # perform operation
fnmadd.h f31, f29, f11, f23, rmm # perform operation
fnmadd.h f31, f29, f11, f23, rne # perform operation
fnmadd.h f31, f29, f11, f23, rtz # perform operation
fnmadd.h f31, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x200)
li x9, 0x20fbab39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x5a7ea4e3 # load x3 with value 0x5a7ea4e3
sw x3, 0(x2) # store 0x5a7ea4e3 in memory
flh f26, 0(x2) # load 0x5a7ea4e3 from memory into f26
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
fnmadd.h f9, f29, f26, f17, dyn # perform operation
fnmadd.h f9, f29, f26, f17, rdn # perform operation
fnmadd.h f9, f29, f26, f17, rmm # perform operation
fnmadd.h f9, f29, f26, f17, rne # perform operation
fnmadd.h f9, f29, f26, f17, rtz # perform operation
fnmadd.h f9, f29, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8200)
li x17, 0xba61a5f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0x37b67993 # load x3 with value 0x37b67993
sw x3, 0(x2) # store 0x37b67993 in memory
flh f30, 0(x2) # load 0x37b67993 from memory into f30
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
fnmadd.h f17, f23, f30, f22, dyn # perform operation
fnmadd.h f17, f23, f30, f22, rdn # perform operation
fnmadd.h f17, f23, f30, f22, rmm # perform operation
fnmadd.h f17, f23, f30, f22, rne # perform operation
fnmadd.h f17, f23, f30, f22, rtz # perform operation
fnmadd.h f17, f23, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f23, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f23, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f23, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f23, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f23, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x1)
li x15, 0xe03f5adf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x18f2c3ce # load x3 with value 0x18f2c3ce
sw x3, 0(x2) # store 0x18f2c3ce in memory
flh f18, 0(x2) # load 0x18f2c3ce from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f15, f29, f18, f26, dyn # perform operation
fnmadd.h f15, f29, f18, f26, rdn # perform operation
fnmadd.h f15, f29, f18, f26, rmm # perform operation
fnmadd.h f15, f29, f18, f26, rne # perform operation
fnmadd.h f15, f29, f18, f26, rtz # perform operation
fnmadd.h f15, f29, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f29, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8001)
li x3, 0x2e79477d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x5efbdc42 # load x3 with value 0x5efbdc42
sw x3, 0(x2) # store 0x5efbdc42 in memory
flh f24, 0(x2) # load 0x5efbdc42 from memory into f24
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
fnmadd.h f3, f29, f24, f20, dyn # perform operation
fnmadd.h f3, f29, f24, f20, rdn # perform operation
fnmadd.h f3, f29, f24, f20, rmm # perform operation
fnmadd.h f3, f29, f24, f20, rne # perform operation
fnmadd.h f3, f29, f24, f20, rtz # perform operation
fnmadd.h f3, f29, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c00)
li x9, 0x9538b2ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
li x3, 0x0a3c4ed8 # load x3 with value 0x0a3c4ed8
sw x3, 0(x2) # store 0x0a3c4ed8 in memory
flh f8, 0(x2) # load 0x0a3c4ed8 from memory into f8
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
fnmadd.h f9, f12, f8, f4, dyn # perform operation
fnmadd.h f9, f12, f8, f4, rdn # perform operation
fnmadd.h f9, f12, f8, f4, rmm # perform operation
fnmadd.h f9, f12, f8, f4, rne # perform operation
fnmadd.h f9, f12, f8, f4, rtz # perform operation
fnmadd.h f9, f12, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc00)
li x26, 0x5d3847c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0xd9dde331 # load x3 with value 0xd9dde331
sw x3, 0(x2) # store 0xd9dde331 in memory
flh f14, 0(x2) # load 0xd9dde331 from memory into f14
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
fnmadd.h f26, f13, f14, f2, dyn # perform operation
fnmadd.h f26, f13, f14, f2, rdn # perform operation
fnmadd.h f26, f13, f14, f2, rmm # perform operation
fnmadd.h f26, f13, f14, f2, rne # perform operation
fnmadd.h f26, f13, f14, f2, rtz # perform operation
fnmadd.h f26, f13, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7e00)
li x12, 0x3432272e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
li x3, 0xe64bfadf # load x3 with value 0xe64bfadf
sw x3, 0(x2) # store 0xe64bfadf in memory
flh f15, 0(x2) # load 0xe64bfadf from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
fnmadd.h f12, f10, f15, f23, dyn # perform operation
fnmadd.h f12, f10, f15, f23, rdn # perform operation
fnmadd.h f12, f10, f15, f23, rmm # perform operation
fnmadd.h f12, f10, f15, f23, rne # perform operation
fnmadd.h f12, f10, f15, f23, rtz # perform operation
fnmadd.h f12, f10, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7fff)
li x14, 0xdd70d4d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0x4a0062a0 # load x3 with value 0x4a0062a0
sw x3, 0(x2) # store 0x4a0062a0 in memory
flh f15, 0(x2) # load 0x4a0062a0 from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
fnmadd.h f14, f23, f15, f28, dyn # perform operation
fnmadd.h f14, f23, f15, f28, rdn # perform operation
fnmadd.h f14, f23, f15, f28, rmm # perform operation
fnmadd.h f14, f23, f15, f28, rne # perform operation
fnmadd.h f14, f23, f15, f28, rtz # perform operation
fnmadd.h f14, f23, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c01)
li x11, 0x6c2387e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0xac1a5703 # load x3 with value 0xac1a5703
sw x3, 0(x2) # store 0xac1a5703 in memory
flh f15, 0(x2) # load 0xac1a5703 from memory into f15
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
fnmadd.h f11, f19, f15, f1, dyn # perform operation
fnmadd.h f11, f19, f15, f1, rdn # perform operation
fnmadd.h f11, f19, f15, f1, rmm # perform operation
fnmadd.h f11, f19, f15, f1, rne # perform operation
fnmadd.h f11, f19, f15, f1, rtz # perform operation
fnmadd.h f11, f19, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7dff)
li x15, 0x3fad92e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0xbef10781 # load x3 with value 0xbef10781
sw x3, 0(x2) # store 0xbef10781 in memory
flh f7, 0(x2) # load 0xbef10781 from memory into f7
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
fnmadd.h f15, f23, f7, f22, dyn # perform operation
fnmadd.h f15, f23, f7, f22, rdn # perform operation
fnmadd.h f15, f23, f7, f22, rmm # perform operation
fnmadd.h f15, f23, f7, f22, rne # perform operation
fnmadd.h f15, f23, f7, f22, rtz # perform operation
fnmadd.h f15, f23, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x58b4)
li x27, 0x98de82eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x30516d80 # load x3 with value 0x30516d80
sw x3, 0(x2) # store 0x30516d80 in memory
flh f31, 0(x2) # load 0x30516d80 from memory into f31
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
fnmadd.h f27, f25, f31, f4, dyn # perform operation
fnmadd.h f27, f25, f31, f4, rdn # perform operation
fnmadd.h f27, f25, f31, f4, rmm # perform operation
fnmadd.h f27, f25, f31, f4, rne # perform operation
fnmadd.h f27, f25, f31, f4, rtz # perform operation
fnmadd.h f27, f25, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc93a)
li x18, 0xfcd6889d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
li x3, 0x34d021cd # load x3 with value 0x34d021cd
sw x3, 0(x2) # store 0x34d021cd in memory
flh f25, 0(x2) # load 0x34d021cd from memory into f25
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f29, 0(x2) # load 0x0000c93a from memory into f29
fnmadd.h f18, f30, f25, f29, dyn # perform operation
fnmadd.h f18, f30, f25, f29, rdn # perform operation
fnmadd.h f18, f30, f25, f29, rmm # perform operation
fnmadd.h f18, f30, f25, f29, rne # perform operation
fnmadd.h f18, f30, f25, f29, rtz # perform operation
fnmadd.h f18, f30, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f30, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x0)
li x20, 0x73feff52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
li x3, 0x53a565d3 # load x3 with value 0x53a565d3
sw x3, 0(x2) # store 0x53a565d3 in memory
flh f21, 0(x2) # load 0x53a565d3 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.h f20, f24, f21, f23, dyn # perform operation
fnmadd.h f20, f24, f21, f23, rdn # perform operation
fnmadd.h f20, f24, f21, f23, rmm # perform operation
fnmadd.h f20, f24, f21, f23, rne # perform operation
fnmadd.h f20, f24, f21, f23, rtz # perform operation
fnmadd.h f20, f24, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8000)
li x18, 0x12663d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
li x3, 0x4dca9187 # load x3 with value 0x4dca9187
sw x3, 0(x2) # store 0x4dca9187 in memory
flh f26, 0(x2) # load 0x4dca9187 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f18, f8, f26, f29, dyn # perform operation
fnmadd.h f18, f8, f26, f29, rdn # perform operation
fnmadd.h f18, f8, f26, f29, rmm # perform operation
fnmadd.h f18, f8, f26, f29, rne # perform operation
fnmadd.h f18, f8, f26, f29, rtz # perform operation
fnmadd.h f18, f8, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3c00)
li x21, 0x1a7d52d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0x1794f60d # load x3 with value 0x1794f60d
sw x3, 0(x2) # store 0x1794f60d in memory
flh f9, 0(x2) # load 0x1794f60d from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f21, f1, f9, f8, dyn # perform operation
fnmadd.h f21, f1, f9, f8, rdn # perform operation
fnmadd.h f21, f1, f9, f8, rmm # perform operation
fnmadd.h f21, f1, f9, f8, rne # perform operation
fnmadd.h f21, f1, f9, f8, rtz # perform operation
fnmadd.h f21, f1, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbc00)
li x12, 0x3c732834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0xf984f4e6 # load x3 with value 0xf984f4e6
sw x3, 0(x2) # store 0xf984f4e6 in memory
flh f20, 0(x2) # load 0xf984f4e6 from memory into f20
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
fnmadd.h f12, f6, f20, f19, dyn # perform operation
fnmadd.h f12, f6, f20, f19, rdn # perform operation
fnmadd.h f12, f6, f20, f19, rmm # perform operation
fnmadd.h f12, f6, f20, f19, rne # perform operation
fnmadd.h f12, f6, f20, f19, rtz # perform operation
fnmadd.h f12, f6, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3e00)
li x24, 0x3ebbc1f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0x76a74acc # load x3 with value 0x76a74acc
sw x3, 0(x2) # store 0x76a74acc in memory
flh f22, 0(x2) # load 0x76a74acc from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
fnmadd.h f24, f17, f22, f2, dyn # perform operation
fnmadd.h f24, f17, f22, f2, rdn # perform operation
fnmadd.h f24, f17, f22, f2, rmm # perform operation
fnmadd.h f24, f17, f22, f2, rne # perform operation
fnmadd.h f24, f17, f22, f2, rtz # perform operation
fnmadd.h f24, f17, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbe00)
li x31, 0x5273a1de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0xb3f64bc0 # load x3 with value 0xb3f64bc0
sw x3, 0(x2) # store 0xb3f64bc0 in memory
flh f8, 0(x2) # load 0xb3f64bc0 from memory into f8
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
fnmadd.h f31, f29, f8, f16, dyn # perform operation
fnmadd.h f31, f29, f8, f16, rdn # perform operation
fnmadd.h f31, f29, f8, f16, rmm # perform operation
fnmadd.h f31, f29, f8, f16, rne # perform operation
fnmadd.h f31, f29, f8, f16, rtz # perform operation
fnmadd.h f31, f29, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x4000)
li x27, 0x60490ccb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
li x3, 0xaec02adc # load x3 with value 0xaec02adc
sw x3, 0(x2) # store 0xaec02adc in memory
flh f9, 0(x2) # load 0xaec02adc from memory into f9
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
fnmadd.h f27, f25, f9, f22, dyn # perform operation
fnmadd.h f27, f25, f9, f22, rdn # perform operation
fnmadd.h f27, f25, f9, f22, rmm # perform operation
fnmadd.h f27, f25, f9, f22, rne # perform operation
fnmadd.h f27, f25, f9, f22, rtz # perform operation
fnmadd.h f27, f25, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc000)
li x25, 0xacbeb837 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0xa24e593f # load x3 with value 0xa24e593f
sw x3, 0(x2) # store 0xa24e593f in memory
flh f20, 0(x2) # load 0xa24e593f from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f25, f31, f20, f2, dyn # perform operation
fnmadd.h f25, f31, f20, f2, rdn # perform operation
fnmadd.h f25, f31, f20, f2, rmm # perform operation
fnmadd.h f25, f31, f20, f2, rne # perform operation
fnmadd.h f25, f31, f20, f2, rtz # perform operation
fnmadd.h f25, f31, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x400)
li x25, 0x1504cbf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x41a7b052 # load x3 with value 0x41a7b052
sw x3, 0(x2) # store 0x41a7b052 in memory
flh f22, 0(x2) # load 0x41a7b052 from memory into f22
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f25, f18, f22, f17, dyn # perform operation
fnmadd.h f25, f18, f22, f17, rdn # perform operation
fnmadd.h f25, f18, f22, f17, rmm # perform operation
fnmadd.h f25, f18, f22, f17, rne # perform operation
fnmadd.h f25, f18, f22, f17, rtz # perform operation
fnmadd.h f25, f18, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8400)
li x8, 0xfedbdc9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x305fd1d2 # load x3 with value 0x305fd1d2
sw x3, 0(x2) # store 0x305fd1d2 in memory
flh f27, 0(x2) # load 0x305fd1d2 from memory into f27
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f8, f21, f27, f15, dyn # perform operation
fnmadd.h f8, f21, f27, f15, rdn # perform operation
fnmadd.h f8, f21, f27, f15, rmm # perform operation
fnmadd.h f8, f21, f27, f15, rne # perform operation
fnmadd.h f8, f21, f27, f15, rtz # perform operation
fnmadd.h f8, f21, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f21, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7bff)
li x5, 0x484db18f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0x26d37923 # load x3 with value 0x26d37923
sw x3, 0(x2) # store 0x26d37923 in memory
flh f10, 0(x2) # load 0x26d37923 from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
fnmadd.h f5, f1, f10, f6, dyn # perform operation
fnmadd.h f5, f1, f10, f6, rdn # perform operation
fnmadd.h f5, f1, f10, f6, rmm # perform operation
fnmadd.h f5, f1, f10, f6, rne # perform operation
fnmadd.h f5, f1, f10, f6, rtz # perform operation
fnmadd.h f5, f1, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfbff)
li x9, 0xfabf64c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
li x3, 0x8548a124 # load x3 with value 0x8548a124
sw x3, 0(x2) # store 0x8548a124 in memory
flh f26, 0(x2) # load 0x8548a124 from memory into f26
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
fnmadd.h f9, f20, f26, f25, dyn # perform operation
fnmadd.h f9, f20, f26, f25, rdn # perform operation
fnmadd.h f9, f20, f26, f25, rmm # perform operation
fnmadd.h f9, f20, f26, f25, rne # perform operation
fnmadd.h f9, f20, f26, f25, rtz # perform operation
fnmadd.h f9, f20, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f20, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3ff)
li x2, 0xe31b5979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x048f7dc7 # load x3 with value 0x048f7dc7
sw x3, 0(x2) # store 0x048f7dc7 in memory
flh f6, 0(x2) # load 0x048f7dc7 from memory into f6
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
fnmadd.h f2, f12, f6, f27, dyn # perform operation
fnmadd.h f2, f12, f6, f27, rdn # perform operation
fnmadd.h f2, f12, f6, f27, rmm # perform operation
fnmadd.h f2, f12, f6, f27, rne # perform operation
fnmadd.h f2, f12, f6, f27, rtz # perform operation
fnmadd.h f2, f12, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x83ff)
li x5, 0x89201dfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
li x3, 0x6da529d2 # load x3 with value 0x6da529d2
sw x3, 0(x2) # store 0x6da529d2 in memory
flh f31, 0(x2) # load 0x6da529d2 from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f5, f20, f31, f12, dyn # perform operation
fnmadd.h f5, f20, f31, f12, rdn # perform operation
fnmadd.h f5, f20, f31, f12, rmm # perform operation
fnmadd.h f5, f20, f31, f12, rne # perform operation
fnmadd.h f5, f20, f31, f12, rtz # perform operation
fnmadd.h f5, f20, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x200)
li x3, 0xc21ad502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x726de0aa # load x3 with value 0x726de0aa
sw x3, 0(x2) # store 0x726de0aa in memory
flh f19, 0(x2) # load 0x726de0aa from memory into f19
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
fnmadd.h f3, f21, f19, f29, dyn # perform operation
fnmadd.h f3, f21, f19, f29, rdn # perform operation
fnmadd.h f3, f21, f19, f29, rmm # perform operation
fnmadd.h f3, f21, f19, f29, rne # perform operation
fnmadd.h f3, f21, f19, f29, rtz # perform operation
fnmadd.h f3, f21, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f21, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f21, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f21, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f21, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f21, f19, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8200)
li x13, 0x37d17c31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0xa60c2fc4 # load x3 with value 0xa60c2fc4
sw x3, 0(x2) # store 0xa60c2fc4 in memory
flh f20, 0(x2) # load 0xa60c2fc4 from memory into f20
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
fnmadd.h f13, f16, f20, f24, dyn # perform operation
fnmadd.h f13, f16, f20, f24, rdn # perform operation
fnmadd.h f13, f16, f20, f24, rmm # perform operation
fnmadd.h f13, f16, f20, f24, rne # perform operation
fnmadd.h f13, f16, f20, f24, rtz # perform operation
fnmadd.h f13, f16, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x1)
li x20, 0x52dae282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0x6c410ad8 # load x3 with value 0x6c410ad8
sw x3, 0(x2) # store 0x6c410ad8 in memory
flh f6, 0(x2) # load 0x6c410ad8 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.h f20, f23, f6, f8, dyn # perform operation
fnmadd.h f20, f23, f6, f8, rdn # perform operation
fnmadd.h f20, f23, f6, f8, rmm # perform operation
fnmadd.h f20, f23, f6, f8, rne # perform operation
fnmadd.h f20, f23, f6, f8, rtz # perform operation
fnmadd.h f20, f23, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f23, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f23, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f23, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f23, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f23, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8001)
li x29, 0xee7edf7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x997ae01b # load x3 with value 0x997ae01b
sw x3, 0(x2) # store 0x997ae01b in memory
flh f15, 0(x2) # load 0x997ae01b from memory into f15
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
fnmadd.h f29, f7, f15, f4, dyn # perform operation
fnmadd.h f29, f7, f15, f4, rdn # perform operation
fnmadd.h f29, f7, f15, f4, rmm # perform operation
fnmadd.h f29, f7, f15, f4, rne # perform operation
fnmadd.h f29, f7, f15, f4, rtz # perform operation
fnmadd.h f29, f7, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f7, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c00)
li x1, 0x2636a14c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0xbfe8ac19 # load x3 with value 0xbfe8ac19
sw x3, 0(x2) # store 0xbfe8ac19 in memory
flh f11, 0(x2) # load 0xbfe8ac19 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f1, f14, f11, f12, dyn # perform operation
fnmadd.h f1, f14, f11, f12, rdn # perform operation
fnmadd.h f1, f14, f11, f12, rmm # perform operation
fnmadd.h f1, f14, f11, f12, rne # perform operation
fnmadd.h f1, f14, f11, f12, rtz # perform operation
fnmadd.h f1, f14, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc00)
li x8, 0x41621a03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
li x3, 0xf87ff212 # load x3 with value 0xf87ff212
sw x3, 0(x2) # store 0xf87ff212 in memory
flh f17, 0(x2) # load 0xf87ff212 from memory into f17
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
fnmadd.h f8, f25, f17, f26, dyn # perform operation
fnmadd.h f8, f25, f17, f26, rdn # perform operation
fnmadd.h f8, f25, f17, f26, rmm # perform operation
fnmadd.h f8, f25, f17, f26, rne # perform operation
fnmadd.h f8, f25, f17, f26, rtz # perform operation
fnmadd.h f8, f25, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f25, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7e00)
li x27, 0x69ba49ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
li x3, 0xa2390727 # load x3 with value 0xa2390727
sw x3, 0(x2) # store 0xa2390727 in memory
flh f17, 0(x2) # load 0xa2390727 from memory into f17
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
fnmadd.h f27, f8, f17, f29, dyn # perform operation
fnmadd.h f27, f8, f17, f29, rdn # perform operation
fnmadd.h f27, f8, f17, f29, rmm # perform operation
fnmadd.h f27, f8, f17, f29, rne # perform operation
fnmadd.h f27, f8, f17, f29, rtz # perform operation
fnmadd.h f27, f8, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7fff)
li x27, 0x173bd9cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x7a4888a9 # load x3 with value 0x7a4888a9
sw x3, 0(x2) # store 0x7a4888a9 in memory
flh f26, 0(x2) # load 0x7a4888a9 from memory into f26
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f27, f7, f26, f1, dyn # perform operation
fnmadd.h f27, f7, f26, f1, rdn # perform operation
fnmadd.h f27, f7, f26, f1, rmm # perform operation
fnmadd.h f27, f7, f26, f1, rne # perform operation
fnmadd.h f27, f7, f26, f1, rtz # perform operation
fnmadd.h f27, f7, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c01)
li x10, 0xa373d036 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x5384ac51 # load x3 with value 0x5384ac51
sw x3, 0(x2) # store 0x5384ac51 in memory
flh f26, 0(x2) # load 0x5384ac51 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
fnmadd.h f10, f12, f26, f14, dyn # perform operation
fnmadd.h f10, f12, f26, f14, rdn # perform operation
fnmadd.h f10, f12, f26, f14, rmm # perform operation
fnmadd.h f10, f12, f26, f14, rne # perform operation
fnmadd.h f10, f12, f26, f14, rtz # perform operation
fnmadd.h f10, f12, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7dff)
li x10, 0xc449ca90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x5970d441 # load x3 with value 0x5970d441
sw x3, 0(x2) # store 0x5970d441 in memory
flh f23, 0(x2) # load 0x5970d441 from memory into f23
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
fnmadd.h f10, f12, f23, f18, dyn # perform operation
fnmadd.h f10, f12, f23, f18, rdn # perform operation
fnmadd.h f10, f12, f23, f18, rmm # perform operation
fnmadd.h f10, f12, f23, f18, rne # perform operation
fnmadd.h f10, f12, f23, f18, rtz # perform operation
fnmadd.h f10, f12, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x58b4)
li x30, 0xea08e5bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0x297d3758 # load x3 with value 0x297d3758
sw x3, 0(x2) # store 0x297d3758 in memory
flh f25, 0(x2) # load 0x297d3758 from memory into f25
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f30, f31, f25, f27, dyn # perform operation
fnmadd.h f30, f31, f25, f27, rdn # perform operation
fnmadd.h f30, f31, f25, f27, rmm # perform operation
fnmadd.h f30, f31, f25, f27, rne # perform operation
fnmadd.h f30, f31, f25, f27, rtz # perform operation
fnmadd.h f30, f31, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc93a)
li x16, 0x7fa21ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
li x3, 0xd7cfb470 # load x3 with value 0xd7cfb470
sw x3, 0(x2) # store 0xd7cfb470 in memory
flh f27, 0(x2) # load 0xd7cfb470 from memory into f27
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
fnmadd.h f16, f15, f27, f17, dyn # perform operation
fnmadd.h f16, f15, f27, f17, rdn # perform operation
fnmadd.h f16, f15, f27, f17, rmm # perform operation
fnmadd.h f16, f15, f27, f17, rne # perform operation
fnmadd.h f16, f15, f27, f17, rtz # perform operation
fnmadd.h f16, f15, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x12, 0x8a042fca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x0b4fc2a9 # load x3 with value 0x0b4fc2a9
sw x3, 0(x2) # store 0x0b4fc2a9 in memory
flh f16, 0(x2) # load 0x0b4fc2a9 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f12, f14, f16, f3, dyn # perform operation
fnmadd.h f12, f14, f16, f3, rdn # perform operation
fnmadd.h f12, f14, f16, f3, rmm # perform operation
fnmadd.h f12, f14, f16, f3, rne # perform operation
fnmadd.h f12, f14, f16, f3, rtz # perform operation
fnmadd.h f12, f14, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000)
li x21, 0xabfb56bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xe3b24700 # load x3 with value 0xe3b24700
sw x3, 0(x2) # store 0xe3b24700 in memory
flh f16, 0(x2) # load 0xe3b24700 from memory into f16
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
fnmadd.h f21, f10, f16, f8, dyn # perform operation
fnmadd.h f21, f10, f16, f8, rdn # perform operation
fnmadd.h f21, f10, f16, f8, rmm # perform operation
fnmadd.h f21, f10, f16, f8, rne # perform operation
fnmadd.h f21, f10, f16, f8, rtz # perform operation
fnmadd.h f21, f10, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f10, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3c00)
li x14, 0x36f5ae32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xa6d018f3 # load x3 with value 0xa6d018f3
sw x3, 0(x2) # store 0xa6d018f3 in memory
flh f24, 0(x2) # load 0xa6d018f3 from memory into f24
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
fnmadd.h f14, f5, f24, f19, dyn # perform operation
fnmadd.h f14, f5, f24, f19, rdn # perform operation
fnmadd.h f14, f5, f24, f19, rmm # perform operation
fnmadd.h f14, f5, f24, f19, rne # perform operation
fnmadd.h f14, f5, f24, f19, rtz # perform operation
fnmadd.h f14, f5, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f5, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbc00)
li x16, 0x16bdbb73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x1e89c976 # load x3 with value 0x1e89c976
sw x3, 0(x2) # store 0x1e89c976 in memory
flh f22, 0(x2) # load 0x1e89c976 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f16, f12, f22, f18, dyn # perform operation
fnmadd.h f16, f12, f22, f18, rdn # perform operation
fnmadd.h f16, f12, f22, f18, rmm # perform operation
fnmadd.h f16, f12, f22, f18, rne # perform operation
fnmadd.h f16, f12, f22, f18, rtz # perform operation
fnmadd.h f16, f12, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3e00)
li x15, 0x58649ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x88e5ece2 # load x3 with value 0x88e5ece2
sw x3, 0(x2) # store 0x88e5ece2 in memory
flh f28, 0(x2) # load 0x88e5ece2 from memory into f28
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
fnmadd.h f15, f12, f28, f23, dyn # perform operation
fnmadd.h f15, f12, f28, f23, rdn # perform operation
fnmadd.h f15, f12, f28, f23, rmm # perform operation
fnmadd.h f15, f12, f28, f23, rne # perform operation
fnmadd.h f15, f12, f28, f23, rtz # perform operation
fnmadd.h f15, f12, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbe00)
li x14, 0xcf50e8d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xabdb18b1 # load x3 with value 0xabdb18b1
sw x3, 0(x2) # store 0xabdb18b1 in memory
flh f6, 0(x2) # load 0xabdb18b1 from memory into f6
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
fnmadd.h f14, f26, f6, f18, dyn # perform operation
fnmadd.h f14, f26, f6, f18, rdn # perform operation
fnmadd.h f14, f26, f6, f18, rmm # perform operation
fnmadd.h f14, f26, f6, f18, rne # perform operation
fnmadd.h f14, f26, f6, f18, rtz # perform operation
fnmadd.h f14, f26, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000)
li x14, 0x1cd78734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x68da2dac # load x3 with value 0x68da2dac
sw x3, 0(x2) # store 0x68da2dac in memory
flh f22, 0(x2) # load 0x68da2dac from memory into f22
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
fnmadd.h f14, f6, f22, f25, dyn # perform operation
fnmadd.h f14, f6, f22, f25, rdn # perform operation
fnmadd.h f14, f6, f22, f25, rmm # perform operation
fnmadd.h f14, f6, f22, f25, rne # perform operation
fnmadd.h f14, f6, f22, f25, rtz # perform operation
fnmadd.h f14, f6, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000)
li x13, 0xcd69c823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x3d1a0113 # load x3 with value 0x3d1a0113
sw x3, 0(x2) # store 0x3d1a0113 in memory
flh f4, 0(x2) # load 0x3d1a0113 from memory into f4
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
fnmadd.h f13, f5, f4, f29, dyn # perform operation
fnmadd.h f13, f5, f4, f29, rdn # perform operation
fnmadd.h f13, f5, f4, f29, rmm # perform operation
fnmadd.h f13, f5, f4, f29, rne # perform operation
fnmadd.h f13, f5, f4, f29, rtz # perform operation
fnmadd.h f13, f5, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400)
li x13, 0xf9016b78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xd086657e # load x3 with value 0xd086657e
sw x3, 0(x2) # store 0xd086657e in memory
flh f17, 0(x2) # load 0xd086657e from memory into f17
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
fnmadd.h f13, f4, f17, f12, dyn # perform operation
fnmadd.h f13, f4, f17, f12, rdn # perform operation
fnmadd.h f13, f4, f17, f12, rmm # perform operation
fnmadd.h f13, f4, f17, f12, rne # perform operation
fnmadd.h f13, f4, f17, f12, rtz # perform operation
fnmadd.h f13, f4, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f4, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8400)
li x3, 0x1e765db2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x402a7276 # load x3 with value 0x402a7276
sw x3, 0(x2) # store 0x402a7276 in memory
flh f27, 0(x2) # load 0x402a7276 from memory into f27
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f3, f7, f27, f17, dyn # perform operation
fnmadd.h f3, f7, f27, f17, rdn # perform operation
fnmadd.h f3, f7, f27, f17, rmm # perform operation
fnmadd.h f3, f7, f27, f17, rne # perform operation
fnmadd.h f3, f7, f27, f17, rtz # perform operation
fnmadd.h f3, f7, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7bff)
li x31, 0x92a04def # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x89fd019e # load x3 with value 0x89fd019e
sw x3, 0(x2) # store 0x89fd019e in memory
flh f18, 0(x2) # load 0x89fd019e from memory into f18
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
fnmadd.h f31, f15, f18, f22, dyn # perform operation
fnmadd.h f31, f15, f18, f22, rdn # perform operation
fnmadd.h f31, f15, f18, f22, rmm # perform operation
fnmadd.h f31, f15, f18, f22, rne # perform operation
fnmadd.h f31, f15, f18, f22, rtz # perform operation
fnmadd.h f31, f15, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfbff)
li x27, 0xd2f11249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x207226a0 # load x3 with value 0x207226a0
sw x3, 0(x2) # store 0x207226a0 in memory
flh f17, 0(x2) # load 0x207226a0 from memory into f17
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
fnmadd.h f27, f21, f17, f20, dyn # perform operation
fnmadd.h f27, f21, f17, f20, rdn # perform operation
fnmadd.h f27, f21, f17, f20, rmm # perform operation
fnmadd.h f27, f21, f17, f20, rne # perform operation
fnmadd.h f27, f21, f17, f20, rtz # perform operation
fnmadd.h f27, f21, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff)
li x5, 0x7a75835c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xc7c1ab55 # load x3 with value 0xc7c1ab55
sw x3, 0(x2) # store 0xc7c1ab55 in memory
flh f29, 0(x2) # load 0xc7c1ab55 from memory into f29
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
fnmadd.h f5, f21, f29, f12, dyn # perform operation
fnmadd.h f5, f21, f29, f12, rdn # perform operation
fnmadd.h f5, f21, f29, f12, rmm # perform operation
fnmadd.h f5, f21, f29, f12, rne # perform operation
fnmadd.h f5, f21, f29, f12, rtz # perform operation
fnmadd.h f5, f21, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f21, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x83ff)
li x24, 0x3e5bf252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xc80b2304 # load x3 with value 0xc80b2304
sw x3, 0(x2) # store 0xc80b2304 in memory
flh f21, 0(x2) # load 0xc80b2304 from memory into f21
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
fnmadd.h f24, f14, f21, f8, dyn # perform operation
fnmadd.h f24, f14, f21, f8, rdn # perform operation
fnmadd.h f24, f14, f21, f8, rmm # perform operation
fnmadd.h f24, f14, f21, f8, rne # perform operation
fnmadd.h f24, f14, f21, f8, rtz # perform operation
fnmadd.h f24, f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x200)
li x25, 0xbb9d03db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xd545e55d # load x3 with value 0xd545e55d
sw x3, 0(x2) # store 0xd545e55d in memory
flh f23, 0(x2) # load 0xd545e55d from memory into f23
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
fnmadd.h f25, f15, f23, f11, dyn # perform operation
fnmadd.h f25, f15, f23, f11, rdn # perform operation
fnmadd.h f25, f15, f23, f11, rmm # perform operation
fnmadd.h f25, f15, f23, f11, rne # perform operation
fnmadd.h f25, f15, f23, f11, rtz # perform operation
fnmadd.h f25, f15, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8200)
li x21, 0x304e0edd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x51163270 # load x3 with value 0x51163270
sw x3, 0(x2) # store 0x51163270 in memory
flh f26, 0(x2) # load 0x51163270 from memory into f26
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
fnmadd.h f21, f1, f26, f31, dyn # perform operation
fnmadd.h f21, f1, f26, f31, rdn # perform operation
fnmadd.h f21, f1, f26, f31, rmm # perform operation
fnmadd.h f21, f1, f26, f31, rne # perform operation
fnmadd.h f21, f1, f26, f31, rtz # perform operation
fnmadd.h f21, f1, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x14, 0x013d45df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x41be1832 # load x3 with value 0x41be1832
sw x3, 0(x2) # store 0x41be1832 in memory
flh f20, 0(x2) # load 0x41be1832 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.h f14, f2, f20, f25, dyn # perform operation
fnmadd.h f14, f2, f20, f25, rdn # perform operation
fnmadd.h f14, f2, f20, f25, rmm # perform operation
fnmadd.h f14, f2, f20, f25, rne # perform operation
fnmadd.h f14, f2, f20, f25, rtz # perform operation
fnmadd.h f14, f2, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f2, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8001)
li x2, 0xe1af85ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0xa5d1c704 # load x3 with value 0xa5d1c704
sw x3, 0(x2) # store 0xa5d1c704 in memory
flh f18, 0(x2) # load 0xa5d1c704 from memory into f18
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
fnmadd.h f2, f27, f18, f15, dyn # perform operation
fnmadd.h f2, f27, f18, f15, rdn # perform operation
fnmadd.h f2, f27, f18, f15, rmm # perform operation
fnmadd.h f2, f27, f18, f15, rne # perform operation
fnmadd.h f2, f27, f18, f15, rtz # perform operation
fnmadd.h f2, f27, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c00)
li x26, 0x3b382cdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x1e53b64a # load x3 with value 0x1e53b64a
sw x3, 0(x2) # store 0x1e53b64a in memory
flh f1, 0(x2) # load 0x1e53b64a from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
fnmadd.h f26, f19, f1, f17, dyn # perform operation
fnmadd.h f26, f19, f1, f17, rdn # perform operation
fnmadd.h f26, f19, f1, f17, rmm # perform operation
fnmadd.h f26, f19, f1, f17, rne # perform operation
fnmadd.h f26, f19, f1, f17, rtz # perform operation
fnmadd.h f26, f19, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc00)
li x28, 0x0e046117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0xf71fcf5f # load x3 with value 0xf71fcf5f
sw x3, 0(x2) # store 0xf71fcf5f in memory
flh f15, 0(x2) # load 0xf71fcf5f from memory into f15
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
fnmadd.h f28, f3, f15, f25, dyn # perform operation
fnmadd.h f28, f3, f15, f25, rdn # perform operation
fnmadd.h f28, f3, f15, f25, rmm # perform operation
fnmadd.h f28, f3, f15, f25, rne # perform operation
fnmadd.h f28, f3, f15, f25, rtz # perform operation
fnmadd.h f28, f3, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f3, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f3, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f3, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f3, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f3, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7e00)
li x10, 0xf5e07b01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xe577e412 # load x3 with value 0xe577e412
sw x3, 0(x2) # store 0xe577e412 in memory
flh f25, 0(x2) # load 0xe577e412 from memory into f25
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
fnmadd.h f10, f6, f25, f31, dyn # perform operation
fnmadd.h f10, f6, f25, f31, rdn # perform operation
fnmadd.h f10, f6, f25, f31, rmm # perform operation
fnmadd.h f10, f6, f25, f31, rne # perform operation
fnmadd.h f10, f6, f25, f31, rtz # perform operation
fnmadd.h f10, f6, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fff)
li x23, 0xd416ebc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x45e62b76 # load x3 with value 0x45e62b76
sw x3, 0(x2) # store 0x45e62b76 in memory
flh f21, 0(x2) # load 0x45e62b76 from memory into f21
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f23, f7, f21, f16, dyn # perform operation
fnmadd.h f23, f7, f21, f16, rdn # perform operation
fnmadd.h f23, f7, f21, f16, rmm # perform operation
fnmadd.h f23, f7, f21, f16, rne # perform operation
fnmadd.h f23, f7, f21, f16, rtz # perform operation
fnmadd.h f23, f7, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c01)
li x7, 0xb2a09bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x6d12aa65 # load x3 with value 0x6d12aa65
sw x3, 0(x2) # store 0x6d12aa65 in memory
flh f26, 0(x2) # load 0x6d12aa65 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f7, f18, f26, f28, dyn # perform operation
fnmadd.h f7, f18, f26, f28, rdn # perform operation
fnmadd.h f7, f18, f26, f28, rmm # perform operation
fnmadd.h f7, f18, f26, f28, rne # perform operation
fnmadd.h f7, f18, f26, f28, rtz # perform operation
fnmadd.h f7, f18, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7dff)
li x28, 0x5f649f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xa6872619 # load x3 with value 0xa6872619
sw x3, 0(x2) # store 0xa6872619 in memory
flh f4, 0(x2) # load 0xa6872619 from memory into f4
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
fnmadd.h f28, f16, f4, f19, dyn # perform operation
fnmadd.h f28, f16, f4, f19, rdn # perform operation
fnmadd.h f28, f16, f4, f19, rmm # perform operation
fnmadd.h f28, f16, f4, f19, rne # perform operation
fnmadd.h f28, f16, f4, f19, rtz # perform operation
fnmadd.h f28, f16, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x58b4)
li x7, 0xbe329ed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x22f89e74 # load x3 with value 0x22f89e74
sw x3, 0(x2) # store 0x22f89e74 in memory
flh f19, 0(x2) # load 0x22f89e74 from memory into f19
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
fnmadd.h f7, f1, f19, f15, dyn # perform operation
fnmadd.h f7, f1, f19, f15, rdn # perform operation
fnmadd.h f7, f1, f19, f15, rmm # perform operation
fnmadd.h f7, f1, f19, f15, rne # perform operation
fnmadd.h f7, f1, f19, f15, rtz # perform operation
fnmadd.h f7, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc93a)
li x26, 0x3e1d7c34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x596e7235 # load x3 with value 0x596e7235
sw x3, 0(x2) # store 0x596e7235 in memory
flh f4, 0(x2) # load 0x596e7235 from memory into f4
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
fnmadd.h f26, f14, f4, f28, dyn # perform operation
fnmadd.h f26, f14, f4, f28, rdn # perform operation
fnmadd.h f26, f14, f4, f28, rmm # perform operation
fnmadd.h f26, f14, f4, f28, rne # perform operation
fnmadd.h f26, f14, f4, f28, rtz # perform operation
fnmadd.h f26, f14, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f14, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x0)
li x25, 0xd33acf20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
li x3, 0x479b8898 # load x3 with value 0x479b8898
sw x3, 0(x2) # store 0x479b8898 in memory
flh f7, 0(x2) # load 0x479b8898 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.h f25, f23, f7, f15, dyn # perform operation
fnmadd.h f25, f23, f7, f15, rdn # perform operation
fnmadd.h f25, f23, f7, f15, rmm # perform operation
fnmadd.h f25, f23, f7, f15, rne # perform operation
fnmadd.h f25, f23, f7, f15, rtz # perform operation
fnmadd.h f25, f23, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8000)
li x13, 0xad44ca1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
li x3, 0x72fd4814 # load x3 with value 0x72fd4814
sw x3, 0(x2) # store 0x72fd4814 in memory
flh f2, 0(x2) # load 0x72fd4814 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
fnmadd.h f13, f29, f2, f23, dyn # perform operation
fnmadd.h f13, f29, f2, f23, rdn # perform operation
fnmadd.h f13, f29, f2, f23, rmm # perform operation
fnmadd.h f13, f29, f2, f23, rne # perform operation
fnmadd.h f13, f29, f2, f23, rtz # perform operation
fnmadd.h f13, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3c00)
li x13, 0x2ce70376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0x29c9edfe # load x3 with value 0x29c9edfe
sw x3, 0(x2) # store 0x29c9edfe in memory
flh f1, 0(x2) # load 0x29c9edfe from memory into f1
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
fnmadd.h f13, f27, f1, f4, dyn # perform operation
fnmadd.h f13, f27, f1, f4, rdn # perform operation
fnmadd.h f13, f27, f1, f4, rmm # perform operation
fnmadd.h f13, f27, f1, f4, rne # perform operation
fnmadd.h f13, f27, f1, f4, rtz # perform operation
fnmadd.h f13, f27, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f27, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f27, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f27, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f27, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f27, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbc00)
li x17, 0xaf8206a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
li x3, 0xf01d61d4 # load x3 with value 0xf01d61d4
sw x3, 0(x2) # store 0xf01d61d4 in memory
flh f24, 0(x2) # load 0xf01d61d4 from memory into f24
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
fnmadd.h f17, f28, f24, f2, dyn # perform operation
fnmadd.h f17, f28, f24, f2, rdn # perform operation
fnmadd.h f17, f28, f24, f2, rmm # perform operation
fnmadd.h f17, f28, f24, f2, rne # perform operation
fnmadd.h f17, f28, f24, f2, rtz # perform operation
fnmadd.h f17, f28, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3e00)
li x10, 0xded7b9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0x6d20fb4f # load x3 with value 0x6d20fb4f
sw x3, 0(x2) # store 0x6d20fb4f in memory
flh f16, 0(x2) # load 0x6d20fb4f from memory into f16
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
fnmadd.h f10, f4, f16, f6, dyn # perform operation
fnmadd.h f10, f4, f16, f6, rdn # perform operation
fnmadd.h f10, f4, f16, f6, rmm # perform operation
fnmadd.h f10, f4, f16, f6, rne # perform operation
fnmadd.h f10, f4, f16, f6, rtz # perform operation
fnmadd.h f10, f4, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbe00)
li x14, 0x2ae82e1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0x3eba8c2e # load x3 with value 0x3eba8c2e
sw x3, 0(x2) # store 0x3eba8c2e in memory
flh f26, 0(x2) # load 0x3eba8c2e from memory into f26
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f24, 0(x2) # load 0x0000be00 from memory into f24
fnmadd.h f14, f10, f26, f24, dyn # perform operation
fnmadd.h f14, f10, f26, f24, rdn # perform operation
fnmadd.h f14, f10, f26, f24, rmm # perform operation
fnmadd.h f14, f10, f26, f24, rne # perform operation
fnmadd.h f14, f10, f26, f24, rtz # perform operation
fnmadd.h f14, f10, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f10, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x4000)
li x11, 0xf1e6d77b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
li x3, 0x1b42489f # load x3 with value 0x1b42489f
sw x3, 0(x2) # store 0x1b42489f in memory
flh f12, 0(x2) # load 0x1b42489f from memory into f12
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
fnmadd.h f11, f3, f12, f17, dyn # perform operation
fnmadd.h f11, f3, f12, f17, rdn # perform operation
fnmadd.h f11, f3, f12, f17, rmm # perform operation
fnmadd.h f11, f3, f12, f17, rne # perform operation
fnmadd.h f11, f3, f12, f17, rtz # perform operation
fnmadd.h f11, f3, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc000)
li x7, 0x99cb4c1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
li x3, 0xbafb6dc3 # load x3 with value 0xbafb6dc3
sw x3, 0(x2) # store 0xbafb6dc3 in memory
flh f11, 0(x2) # load 0xbafb6dc3 from memory into f11
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f7, f18, f11, f23, dyn # perform operation
fnmadd.h f7, f18, f11, f23, rdn # perform operation
fnmadd.h f7, f18, f11, f23, rmm # perform operation
fnmadd.h f7, f18, f11, f23, rne # perform operation
fnmadd.h f7, f18, f11, f23, rtz # perform operation
fnmadd.h f7, f18, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x400)
li x30, 0x1376b4a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0xf37e1f08 # load x3 with value 0xf37e1f08
sw x3, 0(x2) # store 0xf37e1f08 in memory
flh f11, 0(x2) # load 0xf37e1f08 from memory into f11
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
fnmadd.h f30, f15, f11, f22, dyn # perform operation
fnmadd.h f30, f15, f11, f22, rdn # perform operation
fnmadd.h f30, f15, f11, f22, rmm # perform operation
fnmadd.h f30, f15, f11, f22, rne # perform operation
fnmadd.h f30, f15, f11, f22, rtz # perform operation
fnmadd.h f30, f15, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8400)
li x6, 0xe554561f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xee51cd91 # load x3 with value 0xee51cd91
sw x3, 0(x2) # store 0xee51cd91 in memory
flh f1, 0(x2) # load 0xee51cd91 from memory into f1
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
fnmadd.h f6, f7, f1, f28, dyn # perform operation
fnmadd.h f6, f7, f1, f28, rdn # perform operation
fnmadd.h f6, f7, f1, f28, rmm # perform operation
fnmadd.h f6, f7, f1, f28, rne # perform operation
fnmadd.h f6, f7, f1, f28, rtz # perform operation
fnmadd.h f6, f7, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7bff)
li x13, 0x47f48792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
li x3, 0x2ee6eabd # load x3 with value 0x2ee6eabd
sw x3, 0(x2) # store 0x2ee6eabd in memory
flh f18, 0(x2) # load 0x2ee6eabd from memory into f18
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
fnmadd.h f13, f8, f18, f24, dyn # perform operation
fnmadd.h f13, f8, f18, f24, rdn # perform operation
fnmadd.h f13, f8, f18, f24, rmm # perform operation
fnmadd.h f13, f8, f18, f24, rne # perform operation
fnmadd.h f13, f8, f18, f24, rtz # perform operation
fnmadd.h f13, f8, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f8, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfbff)
li x7, 0x1fd19ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0x2535aa85 # load x3 with value 0x2535aa85
sw x3, 0(x2) # store 0x2535aa85 in memory
flh f17, 0(x2) # load 0x2535aa85 from memory into f17
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f7, f19, f17, f1, dyn # perform operation
fnmadd.h f7, f19, f17, f1, rdn # perform operation
fnmadd.h f7, f19, f17, f1, rmm # perform operation
fnmadd.h f7, f19, f17, f1, rne # perform operation
fnmadd.h f7, f19, f17, f1, rtz # perform operation
fnmadd.h f7, f19, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3ff)
li x13, 0x21e9597b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0xa8b30dcd # load x3 with value 0xa8b30dcd
sw x3, 0(x2) # store 0xa8b30dcd in memory
flh f9, 0(x2) # load 0xa8b30dcd from memory into f9
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
fnmadd.h f13, f2, f9, f21, dyn # perform operation
fnmadd.h f13, f2, f9, f21, rdn # perform operation
fnmadd.h f13, f2, f9, f21, rmm # perform operation
fnmadd.h f13, f2, f9, f21, rne # perform operation
fnmadd.h f13, f2, f9, f21, rtz # perform operation
fnmadd.h f13, f2, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x83ff)
li x4, 0xb3dac8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
li x3, 0x2a354715 # load x3 with value 0x2a354715
sw x3, 0(x2) # store 0x2a354715 in memory
flh f15, 0(x2) # load 0x2a354715 from memory into f15
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
fnmadd.h f4, f28, f15, f29, dyn # perform operation
fnmadd.h f4, f28, f15, f29, rdn # perform operation
fnmadd.h f4, f28, f15, f29, rmm # perform operation
fnmadd.h f4, f28, f15, f29, rne # perform operation
fnmadd.h f4, f28, f15, f29, rtz # perform operation
fnmadd.h f4, f28, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f28, f15, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x200)
li x4, 0xcae739aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0xacee3f02 # load x3 with value 0xacee3f02
sw x3, 0(x2) # store 0xacee3f02 in memory
flh f28, 0(x2) # load 0xacee3f02 from memory into f28
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f4, f12, f28, f8, dyn # perform operation
fnmadd.h f4, f12, f28, f8, rdn # perform operation
fnmadd.h f4, f12, f28, f8, rmm # perform operation
fnmadd.h f4, f12, f28, f8, rne # perform operation
fnmadd.h f4, f12, f28, f8, rtz # perform operation
fnmadd.h f4, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f12, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8200)
li x22, 0x2704895c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0xdc2aeac8 # load x3 with value 0xdc2aeac8
sw x3, 0(x2) # store 0xdc2aeac8 in memory
flh f19, 0(x2) # load 0xdc2aeac8 from memory into f19
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
fnmadd.h f22, f2, f19, f27, dyn # perform operation
fnmadd.h f22, f2, f19, f27, rdn # perform operation
fnmadd.h f22, f2, f19, f27, rmm # perform operation
fnmadd.h f22, f2, f19, f27, rne # perform operation
fnmadd.h f22, f2, f19, f27, rtz # perform operation
fnmadd.h f22, f2, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f2, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x1)
li x12, 0x6bbb11fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0xa8926c20 # load x3 with value 0xa8926c20
sw x3, 0(x2) # store 0xa8926c20 in memory
flh f14, 0(x2) # load 0xa8926c20 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f12, f10, f14, f31, dyn # perform operation
fnmadd.h f12, f10, f14, f31, rdn # perform operation
fnmadd.h f12, f10, f14, f31, rmm # perform operation
fnmadd.h f12, f10, f14, f31, rne # perform operation
fnmadd.h f12, f10, f14, f31, rtz # perform operation
fnmadd.h f12, f10, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8001)
li x11, 0x7c10838c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
li x3, 0xa2f59ed6 # load x3 with value 0xa2f59ed6
sw x3, 0(x2) # store 0xa2f59ed6 in memory
flh f5, 0(x2) # load 0xa2f59ed6 from memory into f5
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
fnmadd.h f11, f16, f5, f6, dyn # perform operation
fnmadd.h f11, f16, f5, f6, rdn # perform operation
fnmadd.h f11, f16, f5, f6, rmm # perform operation
fnmadd.h f11, f16, f5, f6, rne # perform operation
fnmadd.h f11, f16, f5, f6, rtz # perform operation
fnmadd.h f11, f16, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c00)
li x28, 0xcd5b60f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x652fd851 # load x3 with value 0x652fd851
sw x3, 0(x2) # store 0x652fd851 in memory
flh f17, 0(x2) # load 0x652fd851 from memory into f17
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
fnmadd.h f28, f12, f17, f15, dyn # perform operation
fnmadd.h f28, f12, f17, f15, rdn # perform operation
fnmadd.h f28, f12, f17, f15, rmm # perform operation
fnmadd.h f28, f12, f17, f15, rne # perform operation
fnmadd.h f28, f12, f17, f15, rtz # perform operation
fnmadd.h f28, f12, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc00)
li x18, 0x3cccc571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x809b83f8 # load x3 with value 0x809b83f8
sw x3, 0(x2) # store 0x809b83f8 in memory
flh f3, 0(x2) # load 0x809b83f8 from memory into f3
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
fnmadd.h f18, f12, f3, f25, dyn # perform operation
fnmadd.h f18, f12, f3, f25, rdn # perform operation
fnmadd.h f18, f12, f3, f25, rmm # perform operation
fnmadd.h f18, f12, f3, f25, rne # perform operation
fnmadd.h f18, f12, f3, f25, rtz # perform operation
fnmadd.h f18, f12, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7e00)
li x10, 0xe4676cec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
li x3, 0xe016bb7d # load x3 with value 0xe016bb7d
sw x3, 0(x2) # store 0xe016bb7d in memory
flh f25, 0(x2) # load 0xe016bb7d from memory into f25
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f10, f29, f25, f24, dyn # perform operation
fnmadd.h f10, f29, f25, f24, rdn # perform operation
fnmadd.h f10, f29, f25, f24, rmm # perform operation
fnmadd.h f10, f29, f25, f24, rne # perform operation
fnmadd.h f10, f29, f25, f24, rtz # perform operation
fnmadd.h f10, f29, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f29, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7fff)
li x4, 0xfcca1cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
li x3, 0x15c8df67 # load x3 with value 0x15c8df67
sw x3, 0(x2) # store 0x15c8df67 in memory
flh f16, 0(x2) # load 0x15c8df67 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f4, f20, f16, f3, dyn # perform operation
fnmadd.h f4, f20, f16, f3, rdn # perform operation
fnmadd.h f4, f20, f16, f3, rmm # perform operation
fnmadd.h f4, f20, f16, f3, rne # perform operation
fnmadd.h f4, f20, f16, f3, rtz # perform operation
fnmadd.h f4, f20, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f20, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c01)
li x24, 0x42faf958 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
li x3, 0xaa78cab2 # load x3 with value 0xaa78cab2
sw x3, 0(x2) # store 0xaa78cab2 in memory
flh f27, 0(x2) # load 0xaa78cab2 from memory into f27
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
fnmadd.h f24, f23, f27, f30, dyn # perform operation
fnmadd.h f24, f23, f27, f30, rdn # perform operation
fnmadd.h f24, f23, f27, f30, rmm # perform operation
fnmadd.h f24, f23, f27, f30, rne # perform operation
fnmadd.h f24, f23, f27, f30, rtz # perform operation
fnmadd.h f24, f23, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7dff)
li x14, 0x20e5d43f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x5b276c7f # load x3 with value 0x5b276c7f
sw x3, 0(x2) # store 0x5b276c7f in memory
flh f12, 0(x2) # load 0x5b276c7f from memory into f12
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
fnmadd.h f14, f22, f12, f1, dyn # perform operation
fnmadd.h f14, f22, f12, f1, rdn # perform operation
fnmadd.h f14, f22, f12, f1, rmm # perform operation
fnmadd.h f14, f22, f12, f1, rne # perform operation
fnmadd.h f14, f22, f12, f1, rtz # perform operation
fnmadd.h f14, f22, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x58b4)
li x5, 0xd9a5ddd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
li x3, 0x9a791e5e # load x3 with value 0x9a791e5e
sw x3, 0(x2) # store 0x9a791e5e in memory
flh f8, 0(x2) # load 0x9a791e5e from memory into f8
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f5, f16, f8, f14, dyn # perform operation
fnmadd.h f5, f16, f8, f14, rdn # perform operation
fnmadd.h f5, f16, f8, f14, rmm # perform operation
fnmadd.h f5, f16, f8, f14, rne # perform operation
fnmadd.h f5, f16, f8, f14, rtz # perform operation
fnmadd.h f5, f16, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f16, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f16, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f16, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f16, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f16, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc93a)
li x26, 0xdf3c8ab3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0x144d5d6c # load x3 with value 0x144d5d6c
sw x3, 0(x2) # store 0x144d5d6c in memory
flh f15, 0(x2) # load 0x144d5d6c from memory into f15
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
fnmadd.h f26, f24, f15, f20, dyn # perform operation
fnmadd.h f26, f24, f15, f20, rdn # perform operation
fnmadd.h f26, f24, f15, f20, rmm # perform operation
fnmadd.h f26, f24, f15, f20, rne # perform operation
fnmadd.h f26, f24, f15, f20, rtz # perform operation
fnmadd.h f26, f24, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f24, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x0)
li x19, 0xba0836fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
li x3, 0xa2fe5af4 # load x3 with value 0xa2fe5af4
sw x3, 0(x2) # store 0xa2fe5af4 in memory
flh f4, 0(x2) # load 0xa2fe5af4 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f19, f1, f4, f18, dyn # perform operation
fnmadd.h f19, f1, f4, f18, rdn # perform operation
fnmadd.h f19, f1, f4, f18, rmm # perform operation
fnmadd.h f19, f1, f4, f18, rne # perform operation
fnmadd.h f19, f1, f4, f18, rtz # perform operation
fnmadd.h f19, f1, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8000)
li x26, 0x941385c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0xab16e18f # load x3 with value 0xab16e18f
sw x3, 0(x2) # store 0xab16e18f in memory
flh f20, 0(x2) # load 0xab16e18f from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f26, f8, f20, f1, dyn # perform operation
fnmadd.h f26, f8, f20, f1, rdn # perform operation
fnmadd.h f26, f8, f20, f1, rmm # perform operation
fnmadd.h f26, f8, f20, f1, rne # perform operation
fnmadd.h f26, f8, f20, f1, rtz # perform operation
fnmadd.h f26, f8, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3c00)
li x15, 0x127b2678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x3723066e # load x3 with value 0x3723066e
sw x3, 0(x2) # store 0x3723066e in memory
flh f21, 0(x2) # load 0x3723066e from memory into f21
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
fnmadd.h f15, f22, f21, f4, dyn # perform operation
fnmadd.h f15, f22, f21, f4, rdn # perform operation
fnmadd.h f15, f22, f21, f4, rmm # perform operation
fnmadd.h f15, f22, f21, f4, rne # perform operation
fnmadd.h f15, f22, f21, f4, rtz # perform operation
fnmadd.h f15, f22, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbc00)
li x7, 0xb61e72cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
li x3, 0x5853675b # load x3 with value 0x5853675b
sw x3, 0(x2) # store 0x5853675b in memory
flh f8, 0(x2) # load 0x5853675b from memory into f8
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
fnmadd.h f7, f28, f8, f1, dyn # perform operation
fnmadd.h f7, f28, f8, f1, rdn # perform operation
fnmadd.h f7, f28, f8, f1, rmm # perform operation
fnmadd.h f7, f28, f8, f1, rne # perform operation
fnmadd.h f7, f28, f8, f1, rtz # perform operation
fnmadd.h f7, f28, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f28, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f28, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f28, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f28, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f28, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3e00)
li x6, 0x9abedb6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x2b8cdad6 # load x3 with value 0x2b8cdad6
sw x3, 0(x2) # store 0x2b8cdad6 in memory
flh f25, 0(x2) # load 0x2b8cdad6 from memory into f25
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
fnmadd.h f6, f14, f25, f12, dyn # perform operation
fnmadd.h f6, f14, f25, f12, rdn # perform operation
fnmadd.h f6, f14, f25, f12, rmm # perform operation
fnmadd.h f6, f14, f25, f12, rne # perform operation
fnmadd.h f6, f14, f25, f12, rtz # perform operation
fnmadd.h f6, f14, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f14, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbe00)
li x8, 0xa7ffeacb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0x3682ff41 # load x3 with value 0x3682ff41
sw x3, 0(x2) # store 0x3682ff41 in memory
flh f10, 0(x2) # load 0x3682ff41 from memory into f10
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
fnmadd.h f8, f6, f10, f5, dyn # perform operation
fnmadd.h f8, f6, f10, f5, rdn # perform operation
fnmadd.h f8, f6, f10, f5, rmm # perform operation
fnmadd.h f8, f6, f10, f5, rne # perform operation
fnmadd.h f8, f6, f10, f5, rtz # perform operation
fnmadd.h f8, f6, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x4000)
li x23, 0x2af2f026 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0xd62d3039 # load x3 with value 0xd62d3039
sw x3, 0(x2) # store 0xd62d3039 in memory
flh f27, 0(x2) # load 0xd62d3039 from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
fnmadd.h f23, f22, f27, f29, dyn # perform operation
fnmadd.h f23, f22, f27, f29, rdn # perform operation
fnmadd.h f23, f22, f27, f29, rmm # perform operation
fnmadd.h f23, f22, f27, f29, rne # perform operation
fnmadd.h f23, f22, f27, f29, rtz # perform operation
fnmadd.h f23, f22, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc000)
li x30, 0xdd6e6b65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0xad0c5d95 # load x3 with value 0xad0c5d95
sw x3, 0(x2) # store 0xad0c5d95 in memory
flh f8, 0(x2) # load 0xad0c5d95 from memory into f8
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
fnmadd.h f30, f27, f8, f14, dyn # perform operation
fnmadd.h f30, f27, f8, f14, rdn # perform operation
fnmadd.h f30, f27, f8, f14, rmm # perform operation
fnmadd.h f30, f27, f8, f14, rne # perform operation
fnmadd.h f30, f27, f8, f14, rtz # perform operation
fnmadd.h f30, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x400)
li x6, 0x2376bd52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
li x3, 0x0792734c # load x3 with value 0x0792734c
sw x3, 0(x2) # store 0x0792734c in memory
flh f18, 0(x2) # load 0x0792734c from memory into f18
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
fnmadd.h f6, f4, f18, f15, dyn # perform operation
fnmadd.h f6, f4, f18, f15, rdn # perform operation
fnmadd.h f6, f4, f18, f15, rmm # perform operation
fnmadd.h f6, f4, f18, f15, rne # perform operation
fnmadd.h f6, f4, f18, f15, rtz # perform operation
fnmadd.h f6, f4, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f4, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8400)
li x25, 0xe063b53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x7013c053 # load x3 with value 0x7013c053
sw x3, 0(x2) # store 0x7013c053 in memory
flh f22, 0(x2) # load 0x7013c053 from memory into f22
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f25, f14, f22, f17, dyn # perform operation
fnmadd.h f25, f14, f22, f17, rdn # perform operation
fnmadd.h f25, f14, f22, f17, rmm # perform operation
fnmadd.h f25, f14, f22, f17, rne # perform operation
fnmadd.h f25, f14, f22, f17, rtz # perform operation
fnmadd.h f25, f14, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7bff)
li x15, 0x41c5ee2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0xf2d04008 # load x3 with value 0xf2d04008
sw x3, 0(x2) # store 0xf2d04008 in memory
flh f5, 0(x2) # load 0xf2d04008 from memory into f5
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
fnmadd.h f15, f6, f5, f13, dyn # perform operation
fnmadd.h f15, f6, f5, f13, rdn # perform operation
fnmadd.h f15, f6, f5, f13, rmm # perform operation
fnmadd.h f15, f6, f5, f13, rne # perform operation
fnmadd.h f15, f6, f5, f13, rtz # perform operation
fnmadd.h f15, f6, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfbff)
li x25, 0xbf8f7ece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
li x3, 0x4cec66c3 # load x3 with value 0x4cec66c3
sw x3, 0(x2) # store 0x4cec66c3 in memory
flh f3, 0(x2) # load 0x4cec66c3 from memory into f3
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
fnmadd.h f25, f16, f3, f13, dyn # perform operation
fnmadd.h f25, f16, f3, f13, rdn # perform operation
fnmadd.h f25, f16, f3, f13, rmm # perform operation
fnmadd.h f25, f16, f3, f13, rne # perform operation
fnmadd.h f25, f16, f3, f13, rtz # perform operation
fnmadd.h f25, f16, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3ff)
li x21, 0xc5e3efbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0xc56416fb # load x3 with value 0xc56416fb
sw x3, 0(x2) # store 0xc56416fb in memory
flh f10, 0(x2) # load 0xc56416fb from memory into f10
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
fnmadd.h f21, f29, f10, f30, dyn # perform operation
fnmadd.h f21, f29, f10, f30, rdn # perform operation
fnmadd.h f21, f29, f10, f30, rmm # perform operation
fnmadd.h f21, f29, f10, f30, rne # perform operation
fnmadd.h f21, f29, f10, f30, rtz # perform operation
fnmadd.h f21, f29, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x83ff)
li x30, 0x7782279c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
li x3, 0x62e744c9 # load x3 with value 0x62e744c9
sw x3, 0(x2) # store 0x62e744c9 in memory
flh f22, 0(x2) # load 0x62e744c9 from memory into f22
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
fnmadd.h f30, f11, f22, f31, dyn # perform operation
fnmadd.h f30, f11, f22, f31, rdn # perform operation
fnmadd.h f30, f11, f22, f31, rmm # perform operation
fnmadd.h f30, f11, f22, f31, rne # perform operation
fnmadd.h f30, f11, f22, f31, rtz # perform operation
fnmadd.h f30, f11, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x200)
li x1, 0xd4ccfd54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
li x3, 0x3910e711 # load x3 with value 0x3910e711
sw x3, 0(x2) # store 0x3910e711 in memory
flh f5, 0(x2) # load 0x3910e711 from memory into f5
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f1, f24, f5, f13, dyn # perform operation
fnmadd.h f1, f24, f5, f13, rdn # perform operation
fnmadd.h f1, f24, f5, f13, rmm # perform operation
fnmadd.h f1, f24, f5, f13, rne # perform operation
fnmadd.h f1, f24, f5, f13, rtz # perform operation
fnmadd.h f1, f24, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8200)
li x31, 0xbca02f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x38710f51 # load x3 with value 0x38710f51
sw x3, 0(x2) # store 0x38710f51 in memory
flh f11, 0(x2) # load 0x38710f51 from memory into f11
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
fnmadd.h f31, f27, f11, f24, dyn # perform operation
fnmadd.h f31, f27, f11, f24, rdn # perform operation
fnmadd.h f31, f27, f11, f24, rmm # perform operation
fnmadd.h f31, f27, f11, f24, rne # perform operation
fnmadd.h f31, f27, f11, f24, rtz # perform operation
fnmadd.h f31, f27, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f27, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x1)
li x17, 0xb15bcada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
li x3, 0x1a235f11 # load x3 with value 0x1a235f11
sw x3, 0(x2) # store 0x1a235f11 in memory
flh f16, 0(x2) # load 0x1a235f11 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f17, f15, f16, f28, dyn # perform operation
fnmadd.h f17, f15, f16, f28, rdn # perform operation
fnmadd.h f17, f15, f16, f28, rmm # perform operation
fnmadd.h f17, f15, f16, f28, rne # perform operation
fnmadd.h f17, f15, f16, f28, rtz # perform operation
fnmadd.h f17, f15, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8001)
li x12, 0x88d60e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0xfff684b9 # load x3 with value 0xfff684b9
sw x3, 0(x2) # store 0xfff684b9 in memory
flh f29, 0(x2) # load 0xfff684b9 from memory into f29
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
fnmadd.h f12, f20, f29, f3, dyn # perform operation
fnmadd.h f12, f20, f29, f3, rdn # perform operation
fnmadd.h f12, f20, f29, f3, rmm # perform operation
fnmadd.h f12, f20, f29, f3, rne # perform operation
fnmadd.h f12, f20, f29, f3, rtz # perform operation
fnmadd.h f12, f20, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c00)
li x27, 0xb77b4add # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0xac431bb7 # load x3 with value 0xac431bb7
sw x3, 0(x2) # store 0xac431bb7 in memory
flh f11, 0(x2) # load 0xac431bb7 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
fnmadd.h f27, f8, f11, f10, dyn # perform operation
fnmadd.h f27, f8, f11, f10, rdn # perform operation
fnmadd.h f27, f8, f11, f10, rmm # perform operation
fnmadd.h f27, f8, f11, f10, rne # perform operation
fnmadd.h f27, f8, f11, f10, rtz # perform operation
fnmadd.h f27, f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc00)
li x28, 0x5e7aae32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0xc613d2de # load x3 with value 0xc613d2de
sw x3, 0(x2) # store 0xc613d2de in memory
flh f10, 0(x2) # load 0xc613d2de from memory into f10
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
fnmadd.h f28, f21, f10, f26, dyn # perform operation
fnmadd.h f28, f21, f10, f26, rdn # perform operation
fnmadd.h f28, f21, f10, f26, rmm # perform operation
fnmadd.h f28, f21, f10, f26, rne # perform operation
fnmadd.h f28, f21, f10, f26, rtz # perform operation
fnmadd.h f28, f21, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7e00)
li x19, 0x452b1d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0x880f838d # load x3 with value 0x880f838d
sw x3, 0(x2) # store 0x880f838d in memory
flh f5, 0(x2) # load 0x880f838d from memory into f5
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
fnmadd.h f19, f10, f5, f6, dyn # perform operation
fnmadd.h f19, f10, f5, f6, rdn # perform operation
fnmadd.h f19, f10, f5, f6, rmm # perform operation
fnmadd.h f19, f10, f5, f6, rne # perform operation
fnmadd.h f19, f10, f5, f6, rtz # perform operation
fnmadd.h f19, f10, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f10, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7fff)
li x27, 0x48fe2c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0xc3ab5971 # load x3 with value 0xc3ab5971
sw x3, 0(x2) # store 0xc3ab5971 in memory
flh f18, 0(x2) # load 0xc3ab5971 from memory into f18
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
fnmadd.h f27, f6, f18, f17, dyn # perform operation
fnmadd.h f27, f6, f18, f17, rdn # perform operation
fnmadd.h f27, f6, f18, f17, rmm # perform operation
fnmadd.h f27, f6, f18, f17, rne # perform operation
fnmadd.h f27, f6, f18, f17, rtz # perform operation
fnmadd.h f27, f6, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f6, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c01)
li x2, 0x0baa954a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
li x3, 0xf68a7ac2 # load x3 with value 0xf68a7ac2
sw x3, 0(x2) # store 0xf68a7ac2 in memory
flh f4, 0(x2) # load 0xf68a7ac2 from memory into f4
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
fnmadd.h f2, f12, f4, f30, dyn # perform operation
fnmadd.h f2, f12, f4, f30, rdn # perform operation
fnmadd.h f2, f12, f4, f30, rmm # perform operation
fnmadd.h f2, f12, f4, f30, rne # perform operation
fnmadd.h f2, f12, f4, f30, rtz # perform operation
fnmadd.h f2, f12, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7dff)
li x29, 0x5ab68ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x6b8863fc # load x3 with value 0x6b8863fc
sw x3, 0(x2) # store 0x6b8863fc in memory
flh f3, 0(x2) # load 0x6b8863fc from memory into f3
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
fnmadd.h f29, f19, f3, f28, dyn # perform operation
fnmadd.h f29, f19, f3, f28, rdn # perform operation
fnmadd.h f29, f19, f3, f28, rmm # perform operation
fnmadd.h f29, f19, f3, f28, rne # perform operation
fnmadd.h f29, f19, f3, f28, rtz # perform operation
fnmadd.h f29, f19, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f19, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f19, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f19, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f19, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f19, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x58b4)
li x20, 0x68dd3f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x4e52c8eb # load x3 with value 0x4e52c8eb
sw x3, 0(x2) # store 0x4e52c8eb in memory
flh f27, 0(x2) # load 0x4e52c8eb from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
fnmadd.h f20, f14, f27, f7, dyn # perform operation
fnmadd.h f20, f14, f27, f7, rdn # perform operation
fnmadd.h f20, f14, f27, f7, rmm # perform operation
fnmadd.h f20, f14, f27, f7, rne # perform operation
fnmadd.h f20, f14, f27, f7, rtz # perform operation
fnmadd.h f20, f14, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc93a)
li x16, 0x42a9826d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
li x3, 0xb2100e6c # load x3 with value 0xb2100e6c
sw x3, 0(x2) # store 0xb2100e6c in memory
flh f21, 0(x2) # load 0xb2100e6c from memory into f21
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
fnmadd.h f16, f17, f21, f26, dyn # perform operation
fnmadd.h f16, f17, f21, f26, rdn # perform operation
fnmadd.h f16, f17, f21, f26, rmm # perform operation
fnmadd.h f16, f17, f21, f26, rne # perform operation
fnmadd.h f16, f17, f21, f26, rtz # perform operation
fnmadd.h f16, f17, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x0)
li x23, 0x2c15ed8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
li x3, 0xd223fceb # load x3 with value 0xd223fceb
sw x3, 0(x2) # store 0xd223fceb in memory
flh f15, 0(x2) # load 0xd223fceb from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.h f23, f13, f15, f11, dyn # perform operation
fnmadd.h f23, f13, f15, f11, rdn # perform operation
fnmadd.h f23, f13, f15, f11, rmm # perform operation
fnmadd.h f23, f13, f15, f11, rne # perform operation
fnmadd.h f23, f13, f15, f11, rtz # perform operation
fnmadd.h f23, f13, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8000)
li x10, 0x915dd68f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
li x3, 0x2fb9c405 # load x3 with value 0x2fb9c405
sw x3, 0(x2) # store 0x2fb9c405 in memory
flh f6, 0(x2) # load 0x2fb9c405 from memory into f6
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
fnmadd.h f10, f2, f6, f13, dyn # perform operation
fnmadd.h f10, f2, f6, f13, rdn # perform operation
fnmadd.h f10, f2, f6, f13, rmm # perform operation
fnmadd.h f10, f2, f6, f13, rne # perform operation
fnmadd.h f10, f2, f6, f13, rtz # perform operation
fnmadd.h f10, f2, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3c00)
li x13, 0x74b9603b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0x240b3641 # load x3 with value 0x240b3641
sw x3, 0(x2) # store 0x240b3641 in memory
flh f26, 0(x2) # load 0x240b3641 from memory into f26
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f13, f12, f26, f18, dyn # perform operation
fnmadd.h f13, f12, f26, f18, rdn # perform operation
fnmadd.h f13, f12, f26, f18, rmm # perform operation
fnmadd.h f13, f12, f26, f18, rne # perform operation
fnmadd.h f13, f12, f26, f18, rtz # perform operation
fnmadd.h f13, f12, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f12, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbc00)
li x3, 0xacd76ad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0x03954ed1 # load x3 with value 0x03954ed1
sw x3, 0(x2) # store 0x03954ed1 in memory
flh f10, 0(x2) # load 0x03954ed1 from memory into f10
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
fnmadd.h f3, f24, f10, f16, dyn # perform operation
fnmadd.h f3, f24, f10, f16, rdn # perform operation
fnmadd.h f3, f24, f10, f16, rmm # perform operation
fnmadd.h f3, f24, f10, f16, rne # perform operation
fnmadd.h f3, f24, f10, f16, rtz # perform operation
fnmadd.h f3, f24, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3e00)
li x10, 0x965b3726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
li x3, 0x4a606b67 # load x3 with value 0x4a606b67
sw x3, 0(x2) # store 0x4a606b67 in memory
flh f27, 0(x2) # load 0x4a606b67 from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f10, f4, f27, f17, dyn # perform operation
fnmadd.h f10, f4, f27, f17, rdn # perform operation
fnmadd.h f10, f4, f27, f17, rmm # perform operation
fnmadd.h f10, f4, f27, f17, rne # perform operation
fnmadd.h f10, f4, f27, f17, rtz # perform operation
fnmadd.h f10, f4, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbe00)
li x6, 0xa0e582e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
li x3, 0xd1f7ca7a # load x3 with value 0xd1f7ca7a
sw x3, 0(x2) # store 0xd1f7ca7a in memory
flh f26, 0(x2) # load 0xd1f7ca7a from memory into f26
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f6, f7, f26, f10, dyn # perform operation
fnmadd.h f6, f7, f26, f10, rdn # perform operation
fnmadd.h f6, f7, f26, f10, rmm # perform operation
fnmadd.h f6, f7, f26, f10, rne # perform operation
fnmadd.h f6, f7, f26, f10, rtz # perform operation
fnmadd.h f6, f7, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x4000)
li x12, 0x3c2c9042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x1f5fede0 # load x3 with value 0x1f5fede0
sw x3, 0(x2) # store 0x1f5fede0 in memory
flh f2, 0(x2) # load 0x1f5fede0 from memory into f2
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
fnmadd.h f12, f11, f2, f6, dyn # perform operation
fnmadd.h f12, f11, f2, f6, rdn # perform operation
fnmadd.h f12, f11, f2, f6, rmm # perform operation
fnmadd.h f12, f11, f2, f6, rne # perform operation
fnmadd.h f12, f11, f2, f6, rtz # perform operation
fnmadd.h f12, f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc000)
li x27, 0x3e8050f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0xa2a6dedb # load x3 with value 0xa2a6dedb
sw x3, 0(x2) # store 0xa2a6dedb in memory
flh f25, 0(x2) # load 0xa2a6dedb from memory into f25
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
fnmadd.h f27, f24, f25, f21, dyn # perform operation
fnmadd.h f27, f24, f25, f21, rdn # perform operation
fnmadd.h f27, f24, f25, f21, rmm # perform operation
fnmadd.h f27, f24, f25, f21, rne # perform operation
fnmadd.h f27, f24, f25, f21, rtz # perform operation
fnmadd.h f27, f24, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x400)
li x29, 0x054c6384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
li x3, 0x18cbdf2a # load x3 with value 0x18cbdf2a
sw x3, 0(x2) # store 0x18cbdf2a in memory
flh f16, 0(x2) # load 0x18cbdf2a from memory into f16
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
fnmadd.h f29, f22, f16, f8, dyn # perform operation
fnmadd.h f29, f22, f16, f8, rdn # perform operation
fnmadd.h f29, f22, f16, f8, rmm # perform operation
fnmadd.h f29, f22, f16, f8, rne # perform operation
fnmadd.h f29, f22, f16, f8, rtz # perform operation
fnmadd.h f29, f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f22, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8400)
li x10, 0x858c5cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
li x3, 0x4b0315c0 # load x3 with value 0x4b0315c0
sw x3, 0(x2) # store 0x4b0315c0 in memory
flh f26, 0(x2) # load 0x4b0315c0 from memory into f26
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
fnmadd.h f10, f8, f26, f6, dyn # perform operation
fnmadd.h f10, f8, f26, f6, rdn # perform operation
fnmadd.h f10, f8, f26, f6, rmm # perform operation
fnmadd.h f10, f8, f26, f6, rne # perform operation
fnmadd.h f10, f8, f26, f6, rtz # perform operation
fnmadd.h f10, f8, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7bff)
li x31, 0x9b0a68a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0x21be310a # load x3 with value 0x21be310a
sw x3, 0(x2) # store 0x21be310a in memory
flh f19, 0(x2) # load 0x21be310a from memory into f19
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
fnmadd.h f31, f15, f19, f25, dyn # perform operation
fnmadd.h f31, f15, f19, f25, rdn # perform operation
fnmadd.h f31, f15, f19, f25, rmm # perform operation
fnmadd.h f31, f15, f19, f25, rne # perform operation
fnmadd.h f31, f15, f19, f25, rtz # perform operation
fnmadd.h f31, f15, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfbff)
li x21, 0x3f9a956e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0xb6b82fac # load x3 with value 0xb6b82fac
sw x3, 0(x2) # store 0xb6b82fac in memory
flh f28, 0(x2) # load 0xb6b82fac from memory into f28
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
fnmadd.h f21, f15, f28, f5, dyn # perform operation
fnmadd.h f21, f15, f28, f5, rdn # perform operation
fnmadd.h f21, f15, f28, f5, rmm # perform operation
fnmadd.h f21, f15, f28, f5, rne # perform operation
fnmadd.h f21, f15, f28, f5, rtz # perform operation
fnmadd.h f21, f15, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f28, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3ff)
li x25, 0x38f4c50f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x739a3c4e # load x3 with value 0x739a3c4e
sw x3, 0(x2) # store 0x739a3c4e in memory
flh f15, 0(x2) # load 0x739a3c4e from memory into f15
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
fnmadd.h f25, f18, f15, f21, dyn # perform operation
fnmadd.h f25, f18, f15, f21, rdn # perform operation
fnmadd.h f25, f18, f15, f21, rmm # perform operation
fnmadd.h f25, f18, f15, f21, rne # perform operation
fnmadd.h f25, f18, f15, f21, rtz # perform operation
fnmadd.h f25, f18, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x83ff)
li x26, 0x9f404722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x4c97faa2 # load x3 with value 0x4c97faa2
sw x3, 0(x2) # store 0x4c97faa2 in memory
flh f2, 0(x2) # load 0x4c97faa2 from memory into f2
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
fnmadd.h f26, f18, f2, f8, dyn # perform operation
fnmadd.h f26, f18, f2, f8, rdn # perform operation
fnmadd.h f26, f18, f2, f8, rmm # perform operation
fnmadd.h f26, f18, f2, f8, rne # perform operation
fnmadd.h f26, f18, f2, f8, rtz # perform operation
fnmadd.h f26, f18, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x200)
li x31, 0xf5665d9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x1328a37c # load x3 with value 0x1328a37c
sw x3, 0(x2) # store 0x1328a37c in memory
flh f25, 0(x2) # load 0x1328a37c from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
fnmadd.h f31, f11, f25, f19, dyn # perform operation
fnmadd.h f31, f11, f25, f19, rdn # perform operation
fnmadd.h f31, f11, f25, f19, rmm # perform operation
fnmadd.h f31, f11, f25, f19, rne # perform operation
fnmadd.h f31, f11, f25, f19, rtz # perform operation
fnmadd.h f31, f11, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8200)
li x7, 0x8554e9d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0x29a26a63 # load x3 with value 0x29a26a63
sw x3, 0(x2) # store 0x29a26a63 in memory
flh f6, 0(x2) # load 0x29a26a63 from memory into f6
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f7, f23, f6, f20, dyn # perform operation
fnmadd.h f7, f23, f6, f20, rdn # perform operation
fnmadd.h f7, f23, f6, f20, rmm # perform operation
fnmadd.h f7, f23, f6, f20, rne # perform operation
fnmadd.h f7, f23, f6, f20, rtz # perform operation
fnmadd.h f7, f23, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x1)
li x27, 0x72b34ce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0xeb5a3f78 # load x3 with value 0xeb5a3f78
sw x3, 0(x2) # store 0xeb5a3f78 in memory
flh f26, 0(x2) # load 0xeb5a3f78 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.h f27, f1, f26, f12, dyn # perform operation
fnmadd.h f27, f1, f26, f12, rdn # perform operation
fnmadd.h f27, f1, f26, f12, rmm # perform operation
fnmadd.h f27, f1, f26, f12, rne # perform operation
fnmadd.h f27, f1, f26, f12, rtz # perform operation
fnmadd.h f27, f1, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8001)
li x16, 0x068d8a8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0xeb191226 # load x3 with value 0xeb191226
sw x3, 0(x2) # store 0xeb191226 in memory
flh f19, 0(x2) # load 0xeb191226 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f16, f3, f19, f24, dyn # perform operation
fnmadd.h f16, f3, f19, f24, rdn # perform operation
fnmadd.h f16, f3, f19, f24, rmm # perform operation
fnmadd.h f16, f3, f19, f24, rne # perform operation
fnmadd.h f16, f3, f19, f24, rtz # perform operation
fnmadd.h f16, f3, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c00)
li x18, 0x9675fa1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
li x3, 0xf1005dde # load x3 with value 0xf1005dde
sw x3, 0(x2) # store 0xf1005dde in memory
flh f13, 0(x2) # load 0xf1005dde from memory into f13
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
fnmadd.h f18, f6, f13, f5, dyn # perform operation
fnmadd.h f18, f6, f13, f5, rdn # perform operation
fnmadd.h f18, f6, f13, f5, rmm # perform operation
fnmadd.h f18, f6, f13, f5, rne # perform operation
fnmadd.h f18, f6, f13, f5, rtz # perform operation
fnmadd.h f18, f6, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc00)
li x11, 0x9ac01cf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
li x3, 0x07643512 # load x3 with value 0x07643512
sw x3, 0(x2) # store 0x07643512 in memory
flh f25, 0(x2) # load 0x07643512 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
fnmadd.h f11, f22, f25, f18, dyn # perform operation
fnmadd.h f11, f22, f25, f18, rdn # perform operation
fnmadd.h f11, f22, f25, f18, rmm # perform operation
fnmadd.h f11, f22, f25, f18, rne # perform operation
fnmadd.h f11, f22, f25, f18, rtz # perform operation
fnmadd.h f11, f22, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7e00)
li x15, 0xa261701d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
li x3, 0x10b152c0 # load x3 with value 0x10b152c0
sw x3, 0(x2) # store 0x10b152c0 in memory
flh f25, 0(x2) # load 0x10b152c0 from memory into f25
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f15, f27, f25, f24, dyn # perform operation
fnmadd.h f15, f27, f25, f24, rdn # perform operation
fnmadd.h f15, f27, f25, f24, rmm # perform operation
fnmadd.h f15, f27, f25, f24, rne # perform operation
fnmadd.h f15, f27, f25, f24, rtz # perform operation
fnmadd.h f15, f27, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7fff)
li x30, 0x8bd67e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
li x3, 0x31779092 # load x3 with value 0x31779092
sw x3, 0(x2) # store 0x31779092 in memory
flh f28, 0(x2) # load 0x31779092 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f22, 0(x2) # load 0x00007fff from memory into f22
fnmadd.h f30, f6, f28, f22, dyn # perform operation
fnmadd.h f30, f6, f28, f22, rdn # perform operation
fnmadd.h f30, f6, f28, f22, rmm # perform operation
fnmadd.h f30, f6, f28, f22, rne # perform operation
fnmadd.h f30, f6, f28, f22, rtz # perform operation
fnmadd.h f30, f6, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c01)
li x10, 0x6853294d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x22f22148 # load x3 with value 0x22f22148
sw x3, 0(x2) # store 0x22f22148 in memory
flh f29, 0(x2) # load 0x22f22148 from memory into f29
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f10, f16, f29, f7, dyn # perform operation
fnmadd.h f10, f16, f29, f7, rdn # perform operation
fnmadd.h f10, f16, f29, f7, rmm # perform operation
fnmadd.h f10, f16, f29, f7, rne # perform operation
fnmadd.h f10, f16, f29, f7, rtz # perform operation
fnmadd.h f10, f16, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f16, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7dff)
li x17, 0xc0add748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x68cab39e # load x3 with value 0x68cab39e
sw x3, 0(x2) # store 0x68cab39e in memory
flh f12, 0(x2) # load 0x68cab39e from memory into f12
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
fnmadd.h f17, f3, f12, f16, dyn # perform operation
fnmadd.h f17, f3, f12, f16, rdn # perform operation
fnmadd.h f17, f3, f12, f16, rmm # perform operation
fnmadd.h f17, f3, f12, f16, rne # perform operation
fnmadd.h f17, f3, f12, f16, rtz # perform operation
fnmadd.h f17, f3, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x58b4)
li x31, 0x54b2ab16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0x0f99e1d6 # load x3 with value 0x0f99e1d6
sw x3, 0(x2) # store 0x0f99e1d6 in memory
flh f20, 0(x2) # load 0x0f99e1d6 from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f31, f26, f20, f25, dyn # perform operation
fnmadd.h f31, f26, f20, f25, rdn # perform operation
fnmadd.h f31, f26, f20, f25, rmm # perform operation
fnmadd.h f31, f26, f20, f25, rne # perform operation
fnmadd.h f31, f26, f20, f25, rtz # perform operation
fnmadd.h f31, f26, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc93a)
li x10, 0xae270d0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x86370a19 # load x3 with value 0x86370a19
sw x3, 0(x2) # store 0x86370a19 in memory
flh f19, 0(x2) # load 0x86370a19 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f10, f29, f19, f8, dyn # perform operation
fnmadd.h f10, f29, f19, f8, rdn # perform operation
fnmadd.h f10, f29, f19, f8, rmm # perform operation
fnmadd.h f10, f29, f19, f8, rne # perform operation
fnmadd.h f10, f29, f19, f8, rtz # perform operation
fnmadd.h f10, f29, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f29, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x0)
li x12, 0x67f596a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
li x3, 0x7ce8c38a # load x3 with value 0x7ce8c38a
sw x3, 0(x2) # store 0x7ce8c38a in memory
flh f22, 0(x2) # load 0x7ce8c38a from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.h f12, f6, f22, f23, dyn # perform operation
fnmadd.h f12, f6, f22, f23, rdn # perform operation
fnmadd.h f12, f6, f22, f23, rmm # perform operation
fnmadd.h f12, f6, f22, f23, rne # perform operation
fnmadd.h f12, f6, f22, f23, rtz # perform operation
fnmadd.h f12, f6, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8000)
li x8, 0x1b699d84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0xb49b8d83 # load x3 with value 0xb49b8d83
sw x3, 0(x2) # store 0xb49b8d83 in memory
flh f24, 0(x2) # load 0xb49b8d83 from memory into f24
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
fnmadd.h f8, f11, f24, f5, dyn # perform operation
fnmadd.h f8, f11, f24, f5, rdn # perform operation
fnmadd.h f8, f11, f24, f5, rmm # perform operation
fnmadd.h f8, f11, f24, f5, rne # perform operation
fnmadd.h f8, f11, f24, f5, rtz # perform operation
fnmadd.h f8, f11, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3c00)
li x7, 0xf8b342d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
li x3, 0x97377aee # load x3 with value 0x97377aee
sw x3, 0(x2) # store 0x97377aee in memory
flh f27, 0(x2) # load 0x97377aee from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
fnmadd.h f7, f10, f27, f12, dyn # perform operation
fnmadd.h f7, f10, f27, f12, rdn # perform operation
fnmadd.h f7, f10, f27, f12, rmm # perform operation
fnmadd.h f7, f10, f27, f12, rne # perform operation
fnmadd.h f7, f10, f27, f12, rtz # perform operation
fnmadd.h f7, f10, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbc00)
li x17, 0x06ebb39c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
li x3, 0x0c5270a8 # load x3 with value 0x0c5270a8
sw x3, 0(x2) # store 0x0c5270a8 in memory
flh f6, 0(x2) # load 0x0c5270a8 from memory into f6
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
fnmadd.h f17, f10, f6, f28, dyn # perform operation
fnmadd.h f17, f10, f6, f28, rdn # perform operation
fnmadd.h f17, f10, f6, f28, rmm # perform operation
fnmadd.h f17, f10, f6, f28, rne # perform operation
fnmadd.h f17, f10, f6, f28, rtz # perform operation
fnmadd.h f17, f10, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f10, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3e00)
li x21, 0x8494e4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
li x3, 0x9417689c # load x3 with value 0x9417689c
sw x3, 0(x2) # store 0x9417689c in memory
flh f10, 0(x2) # load 0x9417689c from memory into f10
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f21, f17, f10, f22, dyn # perform operation
fnmadd.h f21, f17, f10, f22, rdn # perform operation
fnmadd.h f21, f17, f10, f22, rmm # perform operation
fnmadd.h f21, f17, f10, f22, rne # perform operation
fnmadd.h f21, f17, f10, f22, rtz # perform operation
fnmadd.h f21, f17, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbe00)
li x6, 0x6ac5d6e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
li x3, 0xc49bff5b # load x3 with value 0xc49bff5b
sw x3, 0(x2) # store 0xc49bff5b in memory
flh f4, 0(x2) # load 0xc49bff5b from memory into f4
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
fnmadd.h f6, f5, f4, f2, dyn # perform operation
fnmadd.h f6, f5, f4, f2, rdn # perform operation
fnmadd.h f6, f5, f4, f2, rmm # perform operation
fnmadd.h f6, f5, f4, f2, rne # perform operation
fnmadd.h f6, f5, f4, f2, rtz # perform operation
fnmadd.h f6, f5, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x4000)
li x3, 0x46ba0071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
li x3, 0x2c000f4d # load x3 with value 0x2c000f4d
sw x3, 0(x2) # store 0x2c000f4d in memory
flh f20, 0(x2) # load 0x2c000f4d from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f3, f15, f20, f12, dyn # perform operation
fnmadd.h f3, f15, f20, f12, rdn # perform operation
fnmadd.h f3, f15, f20, f12, rmm # perform operation
fnmadd.h f3, f15, f20, f12, rne # perform operation
fnmadd.h f3, f15, f20, f12, rtz # perform operation
fnmadd.h f3, f15, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc000)
li x15, 0x00dd6091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
li x3, 0x113c9f24 # load x3 with value 0x113c9f24
sw x3, 0(x2) # store 0x113c9f24 in memory
flh f24, 0(x2) # load 0x113c9f24 from memory into f24
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
fnmadd.h f15, f25, f24, f1, dyn # perform operation
fnmadd.h f15, f25, f24, f1, rdn # perform operation
fnmadd.h f15, f25, f24, f1, rmm # perform operation
fnmadd.h f15, f25, f24, f1, rne # perform operation
fnmadd.h f15, f25, f24, f1, rtz # perform operation
fnmadd.h f15, f25, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x400)
li x22, 0x8468c058 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
li x3, 0xeb2374ca # load x3 with value 0xeb2374ca
sw x3, 0(x2) # store 0xeb2374ca in memory
flh f21, 0(x2) # load 0xeb2374ca from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
fnmadd.h f22, f8, f21, f14, dyn # perform operation
fnmadd.h f22, f8, f21, f14, rdn # perform operation
fnmadd.h f22, f8, f21, f14, rmm # perform operation
fnmadd.h f22, f8, f21, f14, rne # perform operation
fnmadd.h f22, f8, f21, f14, rtz # perform operation
fnmadd.h f22, f8, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f8, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8400)
li x11, 0xdefe8bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0xcfce3907 # load x3 with value 0xcfce3907
sw x3, 0(x2) # store 0xcfce3907 in memory
flh f28, 0(x2) # load 0xcfce3907 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f11, f12, f28, f9, dyn # perform operation
fnmadd.h f11, f12, f28, f9, rdn # perform operation
fnmadd.h f11, f12, f28, f9, rmm # perform operation
fnmadd.h f11, f12, f28, f9, rne # perform operation
fnmadd.h f11, f12, f28, f9, rtz # perform operation
fnmadd.h f11, f12, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7bff)
li x13, 0xaf15296f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
li x3, 0xfed1129a # load x3 with value 0xfed1129a
sw x3, 0(x2) # store 0xfed1129a in memory
flh f11, 0(x2) # load 0xfed1129a from memory into f11
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
fnmadd.h f13, f19, f11, f17, dyn # perform operation
fnmadd.h f13, f19, f11, f17, rdn # perform operation
fnmadd.h f13, f19, f11, f17, rmm # perform operation
fnmadd.h f13, f19, f11, f17, rne # perform operation
fnmadd.h f13, f19, f11, f17, rtz # perform operation
fnmadd.h f13, f19, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfbff)
li x7, 0x7f58019f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x5a071acf # load x3 with value 0x5a071acf
sw x3, 0(x2) # store 0x5a071acf in memory
flh f31, 0(x2) # load 0x5a071acf from memory into f31
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
fnmadd.h f7, f13, f31, f18, dyn # perform operation
fnmadd.h f7, f13, f31, f18, rdn # perform operation
fnmadd.h f7, f13, f31, f18, rmm # perform operation
fnmadd.h f7, f13, f31, f18, rne # perform operation
fnmadd.h f7, f13, f31, f18, rtz # perform operation
fnmadd.h f7, f13, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f13, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f13, f31, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3ff)
li x21, 0x1b829a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x0183ec70 # load x3 with value 0x0183ec70
sw x3, 0(x2) # store 0x0183ec70 in memory
flh f23, 0(x2) # load 0x0183ec70 from memory into f23
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
fnmadd.h f21, f18, f23, f1, dyn # perform operation
fnmadd.h f21, f18, f23, f1, rdn # perform operation
fnmadd.h f21, f18, f23, f1, rmm # perform operation
fnmadd.h f21, f18, f23, f1, rne # perform operation
fnmadd.h f21, f18, f23, f1, rtz # perform operation
fnmadd.h f21, f18, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x83ff)
li x14, 0xddbbd9ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x130e96ce # load x3 with value 0x130e96ce
sw x3, 0(x2) # store 0x130e96ce in memory
flh f15, 0(x2) # load 0x130e96ce from memory into f15
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
fnmadd.h f14, f31, f15, f11, dyn # perform operation
fnmadd.h f14, f31, f15, f11, rdn # perform operation
fnmadd.h f14, f31, f15, f11, rmm # perform operation
fnmadd.h f14, f31, f15, f11, rne # perform operation
fnmadd.h f14, f31, f15, f11, rtz # perform operation
fnmadd.h f14, f31, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x200)
li x21, 0xe134bee3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x21bcc369 # load x3 with value 0x21bcc369
sw x3, 0(x2) # store 0x21bcc369 in memory
flh f15, 0(x2) # load 0x21bcc369 from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
fnmadd.h f21, f30, f15, f12, dyn # perform operation
fnmadd.h f21, f30, f15, f12, rdn # perform operation
fnmadd.h f21, f30, f15, f12, rmm # perform operation
fnmadd.h f21, f30, f15, f12, rne # perform operation
fnmadd.h f21, f30, f15, f12, rtz # perform operation
fnmadd.h f21, f30, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8200)
li x24, 0x57ce6623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0xc3d04461 # load x3 with value 0xc3d04461
sw x3, 0(x2) # store 0xc3d04461 in memory
flh f10, 0(x2) # load 0xc3d04461 from memory into f10
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f24, f23, f10, f9, dyn # perform operation
fnmadd.h f24, f23, f10, f9, rdn # perform operation
fnmadd.h f24, f23, f10, f9, rmm # perform operation
fnmadd.h f24, f23, f10, f9, rne # perform operation
fnmadd.h f24, f23, f10, f9, rtz # perform operation
fnmadd.h f24, f23, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x1)
li x24, 0xe796d478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0xd8099b88 # load x3 with value 0xd8099b88
sw x3, 0(x2) # store 0xd8099b88 in memory
flh f23, 0(x2) # load 0xd8099b88 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f24, f9, f23, f30, dyn # perform operation
fnmadd.h f24, f9, f23, f30, rdn # perform operation
fnmadd.h f24, f9, f23, f30, rmm # perform operation
fnmadd.h f24, f9, f23, f30, rne # perform operation
fnmadd.h f24, f9, f23, f30, rtz # perform operation
fnmadd.h f24, f9, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8001)
li x27, 0xd4a0187e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x820661c9 # load x3 with value 0x820661c9
sw x3, 0(x2) # store 0x820661c9 in memory
flh f6, 0(x2) # load 0x820661c9 from memory into f6
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
fnmadd.h f27, f31, f6, f21, dyn # perform operation
fnmadd.h f27, f31, f6, f21, rdn # perform operation
fnmadd.h f27, f31, f6, f21, rmm # perform operation
fnmadd.h f27, f31, f6, f21, rne # perform operation
fnmadd.h f27, f31, f6, f21, rtz # perform operation
fnmadd.h f27, f31, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c00)
li x29, 0xc5b0316b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
li x3, 0x1230f703 # load x3 with value 0x1230f703
sw x3, 0(x2) # store 0x1230f703 in memory
flh f6, 0(x2) # load 0x1230f703 from memory into f6
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
fnmadd.h f29, f7, f6, f1, dyn # perform operation
fnmadd.h f29, f7, f6, f1, rdn # perform operation
fnmadd.h f29, f7, f6, f1, rmm # perform operation
fnmadd.h f29, f7, f6, f1, rne # perform operation
fnmadd.h f29, f7, f6, f1, rtz # perform operation
fnmadd.h f29, f7, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f7, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f7, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f7, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f7, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f7, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc00)
li x3, 0x3d93db5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
li x3, 0x9528e405 # load x3 with value 0x9528e405
sw x3, 0(x2) # store 0x9528e405 in memory
flh f8, 0(x2) # load 0x9528e405 from memory into f8
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
fnmadd.h f3, f6, f8, f27, dyn # perform operation
fnmadd.h f3, f6, f8, f27, rdn # perform operation
fnmadd.h f3, f6, f8, f27, rmm # perform operation
fnmadd.h f3, f6, f8, f27, rne # perform operation
fnmadd.h f3, f6, f8, f27, rtz # perform operation
fnmadd.h f3, f6, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7e00)
li x21, 0x8c5e340d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0x957cb0fa # load x3 with value 0x957cb0fa
sw x3, 0(x2) # store 0x957cb0fa in memory
flh f24, 0(x2) # load 0x957cb0fa from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
fnmadd.h f21, f20, f24, f1, dyn # perform operation
fnmadd.h f21, f20, f24, f1, rdn # perform operation
fnmadd.h f21, f20, f24, f1, rmm # perform operation
fnmadd.h f21, f20, f24, f1, rne # perform operation
fnmadd.h f21, f20, f24, f1, rtz # perform operation
fnmadd.h f21, f20, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7fff)
li x5, 0x21350774 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
li x3, 0xdad8a38f # load x3 with value 0xdad8a38f
sw x3, 0(x2) # store 0xdad8a38f in memory
flh f21, 0(x2) # load 0xdad8a38f from memory into f21
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f5, f22, f21, f7, dyn # perform operation
fnmadd.h f5, f22, f21, f7, rdn # perform operation
fnmadd.h f5, f22, f21, f7, rmm # perform operation
fnmadd.h f5, f22, f21, f7, rne # perform operation
fnmadd.h f5, f22, f21, f7, rtz # perform operation
fnmadd.h f5, f22, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c01)
li x13, 0x1e49930b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
li x3, 0x57d68767 # load x3 with value 0x57d68767
sw x3, 0(x2) # store 0x57d68767 in memory
flh f26, 0(x2) # load 0x57d68767 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
fnmadd.h f13, f1, f26, f18, dyn # perform operation
fnmadd.h f13, f1, f26, f18, rdn # perform operation
fnmadd.h f13, f1, f26, f18, rmm # perform operation
fnmadd.h f13, f1, f26, f18, rne # perform operation
fnmadd.h f13, f1, f26, f18, rtz # perform operation
fnmadd.h f13, f1, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f1, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f1, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f1, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f1, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f1, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7dff)
li x26, 0x3b69f371 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x44bd5f22 # load x3 with value 0x44bd5f22
sw x3, 0(x2) # store 0x44bd5f22 in memory
flh f24, 0(x2) # load 0x44bd5f22 from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
fnmadd.h f26, f11, f24, f4, dyn # perform operation
fnmadd.h f26, f11, f24, f4, rdn # perform operation
fnmadd.h f26, f11, f24, f4, rmm # perform operation
fnmadd.h f26, f11, f24, f4, rne # perform operation
fnmadd.h f26, f11, f24, f4, rtz # perform operation
fnmadd.h f26, f11, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x58b4)
li x3, 0x67c0df4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f4, 0(x2) # load 0x00007e00 from memory into f4
li x3, 0x5251d54b # load x3 with value 0x5251d54b
sw x3, 0(x2) # store 0x5251d54b in memory
flh f22, 0(x2) # load 0x5251d54b from memory into f22
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
fnmadd.h f3, f4, f22, f7, dyn # perform operation
fnmadd.h f3, f4, f22, f7, rdn # perform operation
fnmadd.h f3, f4, f22, f7, rmm # perform operation
fnmadd.h f3, f4, f22, f7, rne # perform operation
fnmadd.h f3, f4, f22, f7, rtz # perform operation
fnmadd.h f3, f4, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f4, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f4, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f4, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f4, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f4, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc93a)
li x29, 0x6d324dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0x8ba62b07 # load x3 with value 0x8ba62b07
sw x3, 0(x2) # store 0x8ba62b07 in memory
flh f1, 0(x2) # load 0x8ba62b07 from memory into f1
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
fnmadd.h f29, f12, f1, f9, dyn # perform operation
fnmadd.h f29, f12, f1, f9, rdn # perform operation
fnmadd.h f29, f12, f1, f9, rmm # perform operation
fnmadd.h f29, f12, f1, f9, rne # perform operation
fnmadd.h f29, f12, f1, f9, rtz # perform operation
fnmadd.h f29, f12, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f12, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x0)
li x1, 0x993a9eee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
li x3, 0x7363d683 # load x3 with value 0x7363d683
sw x3, 0(x2) # store 0x7363d683 in memory
flh f20, 0(x2) # load 0x7363d683 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f1, f21, f20, f7, dyn # perform operation
fnmadd.h f1, f21, f20, f7, rdn # perform operation
fnmadd.h f1, f21, f20, f7, rmm # perform operation
fnmadd.h f1, f21, f20, f7, rne # perform operation
fnmadd.h f1, f21, f20, f7, rtz # perform operation
fnmadd.h f1, f21, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8000)
li x8, 0x9925fb06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x6825d808 # load x3 with value 0x6825d808
sw x3, 0(x2) # store 0x6825d808 in memory
flh f10, 0(x2) # load 0x6825d808 from memory into f10
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
fnmadd.h f8, f6, f10, f12, dyn # perform operation
fnmadd.h f8, f6, f10, f12, rdn # perform operation
fnmadd.h f8, f6, f10, f12, rmm # perform operation
fnmadd.h f8, f6, f10, f12, rne # perform operation
fnmadd.h f8, f6, f10, f12, rtz # perform operation
fnmadd.h f8, f6, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3c00)
li x3, 0xfbb956d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0xe4e725dd # load x3 with value 0xe4e725dd
sw x3, 0(x2) # store 0xe4e725dd in memory
flh f6, 0(x2) # load 0xe4e725dd from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
fnmadd.h f3, f1, f6, f2, dyn # perform operation
fnmadd.h f3, f1, f6, f2, rdn # perform operation
fnmadd.h f3, f1, f6, f2, rmm # perform operation
fnmadd.h f3, f1, f6, f2, rne # perform operation
fnmadd.h f3, f1, f6, f2, rtz # perform operation
fnmadd.h f3, f1, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f1, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbc00)
li x8, 0xb1f22a26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x2e77cee3 # load x3 with value 0x2e77cee3
sw x3, 0(x2) # store 0x2e77cee3 in memory
flh f3, 0(x2) # load 0x2e77cee3 from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
fnmadd.h f8, f6, f3, f27, dyn # perform operation
fnmadd.h f8, f6, f3, f27, rdn # perform operation
fnmadd.h f8, f6, f3, f27, rmm # perform operation
fnmadd.h f8, f6, f3, f27, rne # perform operation
fnmadd.h f8, f6, f3, f27, rtz # perform operation
fnmadd.h f8, f6, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3e00)
li x17, 0xef078598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x693b5447 # load x3 with value 0x693b5447
sw x3, 0(x2) # store 0x693b5447 in memory
flh f9, 0(x2) # load 0x693b5447 from memory into f9
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
fnmadd.h f17, f29, f9, f3, dyn # perform operation
fnmadd.h f17, f29, f9, f3, rdn # perform operation
fnmadd.h f17, f29, f9, f3, rmm # perform operation
fnmadd.h f17, f29, f9, f3, rne # perform operation
fnmadd.h f17, f29, f9, f3, rtz # perform operation
fnmadd.h f17, f29, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbe00)
li x10, 0xaf7342c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0xe1a39a21 # load x3 with value 0xe1a39a21
sw x3, 0(x2) # store 0xe1a39a21 in memory
flh f11, 0(x2) # load 0xe1a39a21 from memory into f11
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f10, f9, f11, f23, dyn # perform operation
fnmadd.h f10, f9, f11, f23, rdn # perform operation
fnmadd.h f10, f9, f11, f23, rmm # perform operation
fnmadd.h f10, f9, f11, f23, rne # perform operation
fnmadd.h f10, f9, f11, f23, rtz # perform operation
fnmadd.h f10, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x4000)
li x1, 0x43817aa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0xe970ae94 # load x3 with value 0xe970ae94
sw x3, 0(x2) # store 0xe970ae94 in memory
flh f7, 0(x2) # load 0xe970ae94 from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f1, f5, f7, f12, dyn # perform operation
fnmadd.h f1, f5, f7, f12, rdn # perform operation
fnmadd.h f1, f5, f7, f12, rmm # perform operation
fnmadd.h f1, f5, f7, f12, rne # perform operation
fnmadd.h f1, f5, f7, f12, rtz # perform operation
fnmadd.h f1, f5, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f5, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc000)
li x30, 0xecf8fe24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x2384cd9a # load x3 with value 0x2384cd9a
sw x3, 0(x2) # store 0x2384cd9a in memory
flh f24, 0(x2) # load 0x2384cd9a from memory into f24
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
fnmadd.h f30, f6, f24, f21, dyn # perform operation
fnmadd.h f30, f6, f24, f21, rdn # perform operation
fnmadd.h f30, f6, f24, f21, rmm # perform operation
fnmadd.h f30, f6, f24, f21, rne # perform operation
fnmadd.h f30, f6, f24, f21, rtz # perform operation
fnmadd.h f30, f6, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x400)
li x18, 0x0dcc8195 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
li x3, 0x21730854 # load x3 with value 0x21730854
sw x3, 0(x2) # store 0x21730854 in memory
flh f21, 0(x2) # load 0x21730854 from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
fnmadd.h f18, f19, f21, f25, dyn # perform operation
fnmadd.h f18, f19, f21, f25, rdn # perform operation
fnmadd.h f18, f19, f21, f25, rmm # perform operation
fnmadd.h f18, f19, f21, f25, rne # perform operation
fnmadd.h f18, f19, f21, f25, rtz # perform operation
fnmadd.h f18, f19, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8400)
li x1, 0x18ffe9e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
li x3, 0xb3393a09 # load x3 with value 0xb3393a09
sw x3, 0(x2) # store 0xb3393a09 in memory
flh f15, 0(x2) # load 0xb3393a09 from memory into f15
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
fnmadd.h f1, f7, f15, f22, dyn # perform operation
fnmadd.h f1, f7, f15, f22, rdn # perform operation
fnmadd.h f1, f7, f15, f22, rmm # perform operation
fnmadd.h f1, f7, f15, f22, rne # perform operation
fnmadd.h f1, f7, f15, f22, rtz # perform operation
fnmadd.h f1, f7, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f7, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7bff)
li x27, 0x83615427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
li x3, 0x46250c5a # load x3 with value 0x46250c5a
sw x3, 0(x2) # store 0x46250c5a in memory
flh f2, 0(x2) # load 0x46250c5a from memory into f2
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
fnmadd.h f27, f17, f2, f25, dyn # perform operation
fnmadd.h f27, f17, f2, f25, rdn # perform operation
fnmadd.h f27, f17, f2, f25, rmm # perform operation
fnmadd.h f27, f17, f2, f25, rne # perform operation
fnmadd.h f27, f17, f2, f25, rtz # perform operation
fnmadd.h f27, f17, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfbff)
li x16, 0x38c729cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
li x3, 0x87488cdc # load x3 with value 0x87488cdc
sw x3, 0(x2) # store 0x87488cdc in memory
flh f24, 0(x2) # load 0x87488cdc from memory into f24
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
fnmadd.h f16, f27, f24, f19, dyn # perform operation
fnmadd.h f16, f27, f24, f19, rdn # perform operation
fnmadd.h f16, f27, f24, f19, rmm # perform operation
fnmadd.h f16, f27, f24, f19, rne # perform operation
fnmadd.h f16, f27, f24, f19, rtz # perform operation
fnmadd.h f16, f27, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3ff)
li x29, 0x600225ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
li x3, 0xff3068fb # load x3 with value 0xff3068fb
sw x3, 0(x2) # store 0xff3068fb in memory
flh f1, 0(x2) # load 0xff3068fb from memory into f1
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
fnmadd.h f29, f26, f1, f16, dyn # perform operation
fnmadd.h f29, f26, f1, f16, rdn # perform operation
fnmadd.h f29, f26, f1, f16, rmm # perform operation
fnmadd.h f29, f26, f1, f16, rne # perform operation
fnmadd.h f29, f26, f1, f16, rtz # perform operation
fnmadd.h f29, f26, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x83ff)
li x29, 0x79f54233 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
li x3, 0xbf372e3f # load x3 with value 0xbf372e3f
sw x3, 0(x2) # store 0xbf372e3f in memory
flh f19, 0(x2) # load 0xbf372e3f from memory into f19
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f29, f25, f19, f22, dyn # perform operation
fnmadd.h f29, f25, f19, f22, rdn # perform operation
fnmadd.h f29, f25, f19, f22, rmm # perform operation
fnmadd.h f29, f25, f19, f22, rne # perform operation
fnmadd.h f29, f25, f19, f22, rtz # perform operation
fnmadd.h f29, f25, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f25, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f25, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f25, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f25, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f25, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x200)
li x26, 0x8e47de65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x11e57efc # load x3 with value 0x11e57efc
sw x3, 0(x2) # store 0x11e57efc in memory
flh f1, 0(x2) # load 0x11e57efc from memory into f1
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
fnmadd.h f26, f28, f1, f17, dyn # perform operation
fnmadd.h f26, f28, f1, f17, rdn # perform operation
fnmadd.h f26, f28, f1, f17, rmm # perform operation
fnmadd.h f26, f28, f1, f17, rne # perform operation
fnmadd.h f26, f28, f1, f17, rtz # perform operation
fnmadd.h f26, f28, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8200)
li x16, 0xd8b05ab6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0xf943e5ca # load x3 with value 0xf943e5ca
sw x3, 0(x2) # store 0xf943e5ca in memory
flh f17, 0(x2) # load 0xf943e5ca from memory into f17
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
fnmadd.h f16, f23, f17, f19, dyn # perform operation
fnmadd.h f16, f23, f17, f19, rdn # perform operation
fnmadd.h f16, f23, f17, f19, rmm # perform operation
fnmadd.h f16, f23, f17, f19, rne # perform operation
fnmadd.h f16, f23, f17, f19, rtz # perform operation
fnmadd.h f16, f23, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x1)
li x24, 0x9336de36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
li x3, 0x79b4318d # load x3 with value 0x79b4318d
sw x3, 0(x2) # store 0x79b4318d in memory
flh f23, 0(x2) # load 0x79b4318d from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
fnmadd.h f24, f31, f23, f20, dyn # perform operation
fnmadd.h f24, f31, f23, f20, rdn # perform operation
fnmadd.h f24, f31, f23, f20, rmm # perform operation
fnmadd.h f24, f31, f23, f20, rne # perform operation
fnmadd.h f24, f31, f23, f20, rtz # perform operation
fnmadd.h f24, f31, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8001)
li x10, 0xe009fc8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0xc0c64c66 # load x3 with value 0xc0c64c66
sw x3, 0(x2) # store 0xc0c64c66 in memory
flh f28, 0(x2) # load 0xc0c64c66 from memory into f28
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f10, f23, f28, f24, dyn # perform operation
fnmadd.h f10, f23, f28, f24, rdn # perform operation
fnmadd.h f10, f23, f28, f24, rmm # perform operation
fnmadd.h f10, f23, f28, f24, rne # perform operation
fnmadd.h f10, f23, f28, f24, rtz # perform operation
fnmadd.h f10, f23, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c00)
li x5, 0x248cee3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x9ae988a5 # load x3 with value 0x9ae988a5
sw x3, 0(x2) # store 0x9ae988a5 in memory
flh f23, 0(x2) # load 0x9ae988a5 from memory into f23
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
fnmadd.h f5, f29, f23, f2, dyn # perform operation
fnmadd.h f5, f29, f23, f2, rdn # perform operation
fnmadd.h f5, f29, f23, f2, rmm # perform operation
fnmadd.h f5, f29, f23, f2, rne # perform operation
fnmadd.h f5, f29, f23, f2, rtz # perform operation
fnmadd.h f5, f29, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f29, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc00)
li x19, 0xda2ce69f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x3eac58e6 # load x3 with value 0x3eac58e6
sw x3, 0(x2) # store 0x3eac58e6 in memory
flh f25, 0(x2) # load 0x3eac58e6 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f19, f14, f25, f9, dyn # perform operation
fnmadd.h f19, f14, f25, f9, rdn # perform operation
fnmadd.h f19, f14, f25, f9, rmm # perform operation
fnmadd.h f19, f14, f25, f9, rne # perform operation
fnmadd.h f19, f14, f25, f9, rtz # perform operation
fnmadd.h f19, f14, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7e00)
li x20, 0xfaf6dfd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x3e78b3a0 # load x3 with value 0x3e78b3a0
sw x3, 0(x2) # store 0x3e78b3a0 in memory
flh f6, 0(x2) # load 0x3e78b3a0 from memory into f6
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f20, f28, f6, f5, dyn # perform operation
fnmadd.h f20, f28, f6, f5, rdn # perform operation
fnmadd.h f20, f28, f6, f5, rmm # perform operation
fnmadd.h f20, f28, f6, f5, rne # perform operation
fnmadd.h f20, f28, f6, f5, rtz # perform operation
fnmadd.h f20, f28, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7fff)
li x20, 0xb33f159d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x7c4207a7 # load x3 with value 0x7c4207a7
sw x3, 0(x2) # store 0x7c4207a7 in memory
flh f2, 0(x2) # load 0x7c4207a7 from memory into f2
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f20, f5, f2, f15, dyn # perform operation
fnmadd.h f20, f5, f2, f15, rdn # perform operation
fnmadd.h f20, f5, f2, f15, rmm # perform operation
fnmadd.h f20, f5, f2, f15, rne # perform operation
fnmadd.h f20, f5, f2, f15, rtz # perform operation
fnmadd.h f20, f5, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c01)
li x11, 0xdb5378d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x5e3e50a1 # load x3 with value 0x5e3e50a1
sw x3, 0(x2) # store 0x5e3e50a1 in memory
flh f21, 0(x2) # load 0x5e3e50a1 from memory into f21
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
fnmadd.h f11, f14, f21, f31, dyn # perform operation
fnmadd.h f11, f14, f21, f31, rdn # perform operation
fnmadd.h f11, f14, f21, f31, rmm # perform operation
fnmadd.h f11, f14, f21, f31, rne # perform operation
fnmadd.h f11, f14, f21, f31, rtz # perform operation
fnmadd.h f11, f14, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7dff)
li x3, 0x0ed423b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x76967853 # load x3 with value 0x76967853
sw x3, 0(x2) # store 0x76967853 in memory
flh f20, 0(x2) # load 0x76967853 from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
fnmadd.h f3, f8, f20, f30, dyn # perform operation
fnmadd.h f3, f8, f20, f30, rdn # perform operation
fnmadd.h f3, f8, f20, f30, rmm # perform operation
fnmadd.h f3, f8, f20, f30, rne # perform operation
fnmadd.h f3, f8, f20, f30, rtz # perform operation
fnmadd.h f3, f8, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x58b4)
li x30, 0x11d8eb4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
li x3, 0x64a222a3 # load x3 with value 0x64a222a3
sw x3, 0(x2) # store 0x64a222a3 in memory
flh f26, 0(x2) # load 0x64a222a3 from memory into f26
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
fnmadd.h f30, f3, f26, f9, dyn # perform operation
fnmadd.h f30, f3, f26, f9, rdn # perform operation
fnmadd.h f30, f3, f26, f9, rmm # perform operation
fnmadd.h f30, f3, f26, f9, rne # perform operation
fnmadd.h f30, f3, f26, f9, rtz # perform operation
fnmadd.h f30, f3, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc93a)
li x10, 0x9bfa4501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x927afb40 # load x3 with value 0x927afb40
sw x3, 0(x2) # store 0x927afb40 in memory
flh f12, 0(x2) # load 0x927afb40 from memory into f12
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f10, f13, f12, f23, dyn # perform operation
fnmadd.h f10, f13, f12, f23, rdn # perform operation
fnmadd.h f10, f13, f12, f23, rmm # perform operation
fnmadd.h f10, f13, f12, f23, rne # perform operation
fnmadd.h f10, f13, f12, f23, rtz # perform operation
fnmadd.h f10, f13, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x0)
li x15, 0x25587e84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
li x3, 0x8bd76f21 # load x3 with value 0x8bd76f21
sw x3, 0(x2) # store 0x8bd76f21 in memory
flh f31, 0(x2) # load 0x8bd76f21 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.h f15, f8, f31, f11, dyn # perform operation
fnmadd.h f15, f8, f31, f11, rdn # perform operation
fnmadd.h f15, f8, f31, f11, rmm # perform operation
fnmadd.h f15, f8, f31, f11, rne # perform operation
fnmadd.h f15, f8, f31, f11, rtz # perform operation
fnmadd.h f15, f8, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8000)
li x30, 0xaefe16f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0x439d2f0d # load x3 with value 0x439d2f0d
sw x3, 0(x2) # store 0x439d2f0d in memory
flh f12, 0(x2) # load 0x439d2f0d from memory into f12
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
fnmadd.h f30, f20, f12, f23, dyn # perform operation
fnmadd.h f30, f20, f12, f23, rdn # perform operation
fnmadd.h f30, f20, f12, f23, rmm # perform operation
fnmadd.h f30, f20, f12, f23, rne # perform operation
fnmadd.h f30, f20, f12, f23, rtz # perform operation
fnmadd.h f30, f20, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3c00)
li x21, 0x9906ddd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
li x3, 0xf7dd3400 # load x3 with value 0xf7dd3400
sw x3, 0(x2) # store 0xf7dd3400 in memory
flh f20, 0(x2) # load 0xf7dd3400 from memory into f20
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
fnmadd.h f21, f29, f20, f30, dyn # perform operation
fnmadd.h f21, f29, f20, f30, rdn # perform operation
fnmadd.h f21, f29, f20, f30, rmm # perform operation
fnmadd.h f21, f29, f20, f30, rne # perform operation
fnmadd.h f21, f29, f20, f30, rtz # perform operation
fnmadd.h f21, f29, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbc00)
li x24, 0x5c997b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
li x3, 0xa6064b60 # load x3 with value 0xa6064b60
sw x3, 0(x2) # store 0xa6064b60 in memory
flh f8, 0(x2) # load 0xa6064b60 from memory into f8
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f24, f6, f8, f7, dyn # perform operation
fnmadd.h f24, f6, f8, f7, rdn # perform operation
fnmadd.h f24, f6, f8, f7, rmm # perform operation
fnmadd.h f24, f6, f8, f7, rne # perform operation
fnmadd.h f24, f6, f8, f7, rtz # perform operation
fnmadd.h f24, f6, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f6, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3e00)
li x17, 0xc3efb930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
li x3, 0x0259888c # load x3 with value 0x0259888c
sw x3, 0(x2) # store 0x0259888c in memory
flh f1, 0(x2) # load 0x0259888c from memory into f1
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
fnmadd.h f17, f25, f1, f5, dyn # perform operation
fnmadd.h f17, f25, f1, f5, rdn # perform operation
fnmadd.h f17, f25, f1, f5, rmm # perform operation
fnmadd.h f17, f25, f1, f5, rne # perform operation
fnmadd.h f17, f25, f1, f5, rtz # perform operation
fnmadd.h f17, f25, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbe00)
li x27, 0x782fc05a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x3ca0b859 # load x3 with value 0x3ca0b859
sw x3, 0(x2) # store 0x3ca0b859 in memory
flh f4, 0(x2) # load 0x3ca0b859 from memory into f4
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
fnmadd.h f27, f30, f4, f15, dyn # perform operation
fnmadd.h f27, f30, f4, f15, rdn # perform operation
fnmadd.h f27, f30, f4, f15, rmm # perform operation
fnmadd.h f27, f30, f4, f15, rne # perform operation
fnmadd.h f27, f30, f4, f15, rtz # perform operation
fnmadd.h f27, f30, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x4000)
li x20, 0xe91fdd6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0xdaf2e158 # load x3 with value 0xdaf2e158
sw x3, 0(x2) # store 0xdaf2e158 in memory
flh f7, 0(x2) # load 0xdaf2e158 from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
fnmadd.h f20, f30, f7, f14, dyn # perform operation
fnmadd.h f20, f30, f7, f14, rdn # perform operation
fnmadd.h f20, f30, f7, f14, rmm # perform operation
fnmadd.h f20, f30, f7, f14, rne # perform operation
fnmadd.h f20, f30, f7, f14, rtz # perform operation
fnmadd.h f20, f30, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc000)
li x22, 0xc0fe268c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0xff1a0472 # load x3 with value 0xff1a0472
sw x3, 0(x2) # store 0xff1a0472 in memory
flh f4, 0(x2) # load 0xff1a0472 from memory into f4
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
fnmadd.h f22, f30, f4, f12, dyn # perform operation
fnmadd.h f22, f30, f4, f12, rdn # perform operation
fnmadd.h f22, f30, f4, f12, rmm # perform operation
fnmadd.h f22, f30, f4, f12, rne # perform operation
fnmadd.h f22, f30, f4, f12, rtz # perform operation
fnmadd.h f22, f30, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x400)
li x9, 0xdccc23b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
li x3, 0x33766cdf # load x3 with value 0x33766cdf
sw x3, 0(x2) # store 0x33766cdf in memory
flh f15, 0(x2) # load 0x33766cdf from memory into f15
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
fnmadd.h f9, f14, f15, f27, dyn # perform operation
fnmadd.h f9, f14, f15, f27, rdn # perform operation
fnmadd.h f9, f14, f15, f27, rmm # perform operation
fnmadd.h f9, f14, f15, f27, rne # perform operation
fnmadd.h f9, f14, f15, f27, rtz # perform operation
fnmadd.h f9, f14, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f15, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8400)
li x5, 0xa4b2b625 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0xd021fcf2 # load x3 with value 0xd021fcf2
sw x3, 0(x2) # store 0xd021fcf2 in memory
flh f13, 0(x2) # load 0xd021fcf2 from memory into f13
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
fnmadd.h f5, f20, f13, f18, dyn # perform operation
fnmadd.h f5, f20, f13, f18, rdn # perform operation
fnmadd.h f5, f20, f13, f18, rmm # perform operation
fnmadd.h f5, f20, f13, f18, rne # perform operation
fnmadd.h f5, f20, f13, f18, rtz # perform operation
fnmadd.h f5, f20, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7bff)
li x14, 0x2689c4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0x4fe7971a # load x3 with value 0x4fe7971a
sw x3, 0(x2) # store 0x4fe7971a in memory
flh f3, 0(x2) # load 0x4fe7971a from memory into f3
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
fnmadd.h f14, f31, f3, f13, dyn # perform operation
fnmadd.h f14, f31, f3, f13, rdn # perform operation
fnmadd.h f14, f31, f3, f13, rmm # perform operation
fnmadd.h f14, f31, f3, f13, rne # perform operation
fnmadd.h f14, f31, f3, f13, rtz # perform operation
fnmadd.h f14, f31, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfbff)
li x12, 0x5d154181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0xeb69376e # load x3 with value 0xeb69376e
sw x3, 0(x2) # store 0xeb69376e in memory
flh f9, 0(x2) # load 0xeb69376e from memory into f9
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
fnmadd.h f12, f31, f9, f19, dyn # perform operation
fnmadd.h f12, f31, f9, f19, rdn # perform operation
fnmadd.h f12, f31, f9, f19, rmm # perform operation
fnmadd.h f12, f31, f9, f19, rne # perform operation
fnmadd.h f12, f31, f9, f19, rtz # perform operation
fnmadd.h f12, f31, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3ff)
li x7, 0x04bc44ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x5cc6fd35 # load x3 with value 0x5cc6fd35
sw x3, 0(x2) # store 0x5cc6fd35 in memory
flh f15, 0(x2) # load 0x5cc6fd35 from memory into f15
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
fnmadd.h f7, f27, f15, f11, dyn # perform operation
fnmadd.h f7, f27, f15, f11, rdn # perform operation
fnmadd.h f7, f27, f15, f11, rmm # perform operation
fnmadd.h f7, f27, f15, f11, rne # perform operation
fnmadd.h f7, f27, f15, f11, rtz # perform operation
fnmadd.h f7, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x83ff)
li x20, 0xbde412f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0xc257792b # load x3 with value 0xc257792b
sw x3, 0(x2) # store 0xc257792b in memory
flh f3, 0(x2) # load 0xc257792b from memory into f3
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f20, f31, f3, f19, dyn # perform operation
fnmadd.h f20, f31, f3, f19, rdn # perform operation
fnmadd.h f20, f31, f3, f19, rmm # perform operation
fnmadd.h f20, f31, f3, f19, rne # perform operation
fnmadd.h f20, f31, f3, f19, rtz # perform operation
fnmadd.h f20, f31, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x200)
li x13, 0xa02e1b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
li x3, 0x22948eb0 # load x3 with value 0x22948eb0
sw x3, 0(x2) # store 0x22948eb0 in memory
flh f23, 0(x2) # load 0x22948eb0 from memory into f23
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f13, f21, f23, f6, dyn # perform operation
fnmadd.h f13, f21, f23, f6, rdn # perform operation
fnmadd.h f13, f21, f23, f6, rmm # perform operation
fnmadd.h f13, f21, f23, f6, rne # perform operation
fnmadd.h f13, f21, f23, f6, rtz # perform operation
fnmadd.h f13, f21, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8200)
li x30, 0x905482af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
li x3, 0x69758b8f # load x3 with value 0x69758b8f
sw x3, 0(x2) # store 0x69758b8f in memory
flh f21, 0(x2) # load 0x69758b8f from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
fnmadd.h f30, f18, f21, f1, dyn # perform operation
fnmadd.h f30, f18, f21, f1, rdn # perform operation
fnmadd.h f30, f18, f21, f1, rmm # perform operation
fnmadd.h f30, f18, f21, f1, rne # perform operation
fnmadd.h f30, f18, f21, f1, rtz # perform operation
fnmadd.h f30, f18, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x1)
li x18, 0xd1fefb4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x9496497b # load x3 with value 0x9496497b
sw x3, 0(x2) # store 0x9496497b in memory
flh f5, 0(x2) # load 0x9496497b from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f18, f9, f5, f31, dyn # perform operation
fnmadd.h f18, f9, f5, f31, rdn # perform operation
fnmadd.h f18, f9, f5, f31, rmm # perform operation
fnmadd.h f18, f9, f5, f31, rne # perform operation
fnmadd.h f18, f9, f5, f31, rtz # perform operation
fnmadd.h f18, f9, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f9, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8001)
li x15, 0x9ec9bc28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0x21ee16a8 # load x3 with value 0x21ee16a8
sw x3, 0(x2) # store 0x21ee16a8 in memory
flh f4, 0(x2) # load 0x21ee16a8 from memory into f4
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f15, f11, f4, f19, dyn # perform operation
fnmadd.h f15, f11, f4, f19, rdn # perform operation
fnmadd.h f15, f11, f4, f19, rmm # perform operation
fnmadd.h f15, f11, f4, f19, rne # perform operation
fnmadd.h f15, f11, f4, f19, rtz # perform operation
fnmadd.h f15, f11, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c00)
li x5, 0x5a0fdbc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x0ccbb43e # load x3 with value 0x0ccbb43e
sw x3, 0(x2) # store 0x0ccbb43e in memory
flh f22, 0(x2) # load 0x0ccbb43e from memory into f22
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
fnmadd.h f5, f19, f22, f4, dyn # perform operation
fnmadd.h f5, f19, f22, f4, rdn # perform operation
fnmadd.h f5, f19, f22, f4, rmm # perform operation
fnmadd.h f5, f19, f22, f4, rne # perform operation
fnmadd.h f5, f19, f22, f4, rtz # perform operation
fnmadd.h f5, f19, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc00)
li x3, 0x666535a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0xf0be63d2 # load x3 with value 0xf0be63d2
sw x3, 0(x2) # store 0xf0be63d2 in memory
flh f19, 0(x2) # load 0xf0be63d2 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
fnmadd.h f3, f22, f19, f24, dyn # perform operation
fnmadd.h f3, f22, f19, f24, rdn # perform operation
fnmadd.h f3, f22, f19, f24, rmm # perform operation
fnmadd.h f3, f22, f19, f24, rne # perform operation
fnmadd.h f3, f22, f19, f24, rtz # perform operation
fnmadd.h f3, f22, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7e00)
li x24, 0x6a6c54c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0x8c99db64 # load x3 with value 0x8c99db64
sw x3, 0(x2) # store 0x8c99db64 in memory
flh f1, 0(x2) # load 0x8c99db64 from memory into f1
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
fnmadd.h f24, f26, f1, f25, dyn # perform operation
fnmadd.h f24, f26, f1, f25, rdn # perform operation
fnmadd.h f24, f26, f1, f25, rmm # perform operation
fnmadd.h f24, f26, f1, f25, rne # perform operation
fnmadd.h f24, f26, f1, f25, rtz # perform operation
fnmadd.h f24, f26, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7fff)
li x27, 0x9cdb6c92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
li x3, 0x4855ed80 # load x3 with value 0x4855ed80
sw x3, 0(x2) # store 0x4855ed80 in memory
flh f28, 0(x2) # load 0x4855ed80 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
fnmadd.h f27, f23, f28, f20, dyn # perform operation
fnmadd.h f27, f23, f28, f20, rdn # perform operation
fnmadd.h f27, f23, f28, f20, rmm # perform operation
fnmadd.h f27, f23, f28, f20, rne # perform operation
fnmadd.h f27, f23, f28, f20, rtz # perform operation
fnmadd.h f27, f23, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f23, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c01)
li x21, 0xab1fd194 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x2c0eb550 # load x3 with value 0x2c0eb550
sw x3, 0(x2) # store 0x2c0eb550 in memory
flh f6, 0(x2) # load 0x2c0eb550 from memory into f6
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
fnmadd.h f21, f30, f6, f4, dyn # perform operation
fnmadd.h f21, f30, f6, f4, rdn # perform operation
fnmadd.h f21, f30, f6, f4, rmm # perform operation
fnmadd.h f21, f30, f6, f4, rne # perform operation
fnmadd.h f21, f30, f6, f4, rtz # perform operation
fnmadd.h f21, f30, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7dff)
li x3, 0xdce57c6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0x26ad243f # load x3 with value 0x26ad243f
sw x3, 0(x2) # store 0x26ad243f in memory
flh f19, 0(x2) # load 0x26ad243f from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
fnmadd.h f3, f15, f19, f5, dyn # perform operation
fnmadd.h f3, f15, f19, f5, rdn # perform operation
fnmadd.h f3, f15, f19, f5, rmm # perform operation
fnmadd.h f3, f15, f19, f5, rne # perform operation
fnmadd.h f3, f15, f19, f5, rtz # perform operation
fnmadd.h f3, f15, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x58b4)
li x22, 0x578c8294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x20f02fc1 # load x3 with value 0x20f02fc1
sw x3, 0(x2) # store 0x20f02fc1 in memory
flh f8, 0(x2) # load 0x20f02fc1 from memory into f8
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
fnmadd.h f22, f9, f8, f18, dyn # perform operation
fnmadd.h f22, f9, f8, f18, rdn # perform operation
fnmadd.h f22, f9, f8, f18, rmm # perform operation
fnmadd.h f22, f9, f8, f18, rne # perform operation
fnmadd.h f22, f9, f8, f18, rtz # perform operation
fnmadd.h f22, f9, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc93a)
li x23, 0x7f911041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x35419efc # load x3 with value 0x35419efc
sw x3, 0(x2) # store 0x35419efc in memory
flh f2, 0(x2) # load 0x35419efc from memory into f2
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
fnmadd.h f23, f19, f2, f7, dyn # perform operation
fnmadd.h f23, f19, f2, f7, rdn # perform operation
fnmadd.h f23, f19, f2, f7, rmm # perform operation
fnmadd.h f23, f19, f2, f7, rne # perform operation
fnmadd.h f23, f19, f2, f7, rtz # perform operation
fnmadd.h f23, f19, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x0)
li x10, 0x66a56a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x1123f206 # load x3 with value 0x1123f206
sw x3, 0(x2) # store 0x1123f206 in memory
flh f16, 0(x2) # load 0x1123f206 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.h f10, f1, f16, f4, dyn # perform operation
fnmadd.h f10, f1, f16, f4, rdn # perform operation
fnmadd.h f10, f1, f16, f4, rmm # perform operation
fnmadd.h f10, f1, f16, f4, rne # perform operation
fnmadd.h f10, f1, f16, f4, rtz # perform operation
fnmadd.h f10, f1, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8000)
li x19, 0x12b50f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0x0283736b # load x3 with value 0x0283736b
sw x3, 0(x2) # store 0x0283736b in memory
flh f4, 0(x2) # load 0x0283736b from memory into f4
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f19, f23, f4, f21, dyn # perform operation
fnmadd.h f19, f23, f4, f21, rdn # perform operation
fnmadd.h f19, f23, f4, f21, rmm # perform operation
fnmadd.h f19, f23, f4, f21, rne # perform operation
fnmadd.h f19, f23, f4, f21, rtz # perform operation
fnmadd.h f19, f23, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3c00)
li x27, 0x2c267620 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
li x3, 0x48c315bd # load x3 with value 0x48c315bd
sw x3, 0(x2) # store 0x48c315bd in memory
flh f30, 0(x2) # load 0x48c315bd from memory into f30
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
fnmadd.h f27, f17, f30, f2, dyn # perform operation
fnmadd.h f27, f17, f30, f2, rdn # perform operation
fnmadd.h f27, f17, f30, f2, rmm # perform operation
fnmadd.h f27, f17, f30, f2, rne # perform operation
fnmadd.h f27, f17, f30, f2, rtz # perform operation
fnmadd.h f27, f17, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbc00)
li x8, 0x608a201e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0x117c4be6 # load x3 with value 0x117c4be6
sw x3, 0(x2) # store 0x117c4be6 in memory
flh f7, 0(x2) # load 0x117c4be6 from memory into f7
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
fnmadd.h f8, f10, f7, f26, dyn # perform operation
fnmadd.h f8, f10, f7, f26, rdn # perform operation
fnmadd.h f8, f10, f7, f26, rmm # perform operation
fnmadd.h f8, f10, f7, f26, rne # perform operation
fnmadd.h f8, f10, f7, f26, rtz # perform operation
fnmadd.h f8, f10, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f10, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f10, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f10, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f10, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f10, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3e00)
li x24, 0xb8d43a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0xdb3401a3 # load x3 with value 0xdb3401a3
sw x3, 0(x2) # store 0xdb3401a3 in memory
flh f7, 0(x2) # load 0xdb3401a3 from memory into f7
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
fnmadd.h f24, f9, f7, f30, dyn # perform operation
fnmadd.h f24, f9, f7, f30, rdn # perform operation
fnmadd.h f24, f9, f7, f30, rmm # perform operation
fnmadd.h f24, f9, f7, f30, rne # perform operation
fnmadd.h f24, f9, f7, f30, rtz # perform operation
fnmadd.h f24, f9, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbe00)
li x12, 0x13ee11fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x3ef80d9f # load x3 with value 0x3ef80d9f
sw x3, 0(x2) # store 0x3ef80d9f in memory
flh f9, 0(x2) # load 0x3ef80d9f from memory into f9
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f12, f28, f9, f10, dyn # perform operation
fnmadd.h f12, f28, f9, f10, rdn # perform operation
fnmadd.h f12, f28, f9, f10, rmm # perform operation
fnmadd.h f12, f28, f9, f10, rne # perform operation
fnmadd.h f12, f28, f9, f10, rtz # perform operation
fnmadd.h f12, f28, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x4000)
li x20, 0x6465cab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
li x3, 0x35ad4924 # load x3 with value 0x35ad4924
sw x3, 0(x2) # store 0x35ad4924 in memory
flh f22, 0(x2) # load 0x35ad4924 from memory into f22
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
fnmadd.h f20, f12, f22, f2, dyn # perform operation
fnmadd.h f20, f12, f22, f2, rdn # perform operation
fnmadd.h f20, f12, f22, f2, rmm # perform operation
fnmadd.h f20, f12, f22, f2, rne # perform operation
fnmadd.h f20, f12, f22, f2, rtz # perform operation
fnmadd.h f20, f12, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f12, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc000)
li x19, 0x328a03fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
li x3, 0xe97b9495 # load x3 with value 0xe97b9495
sw x3, 0(x2) # store 0xe97b9495 in memory
flh f15, 0(x2) # load 0xe97b9495 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f19, f18, f15, f2, dyn # perform operation
fnmadd.h f19, f18, f15, f2, rdn # perform operation
fnmadd.h f19, f18, f15, f2, rmm # perform operation
fnmadd.h f19, f18, f15, f2, rne # perform operation
fnmadd.h f19, f18, f15, f2, rtz # perform operation
fnmadd.h f19, f18, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x400)
li x1, 0x2c3e4fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
li x3, 0xee9c9779 # load x3 with value 0xee9c9779
sw x3, 0(x2) # store 0xee9c9779 in memory
flh f5, 0(x2) # load 0xee9c9779 from memory into f5
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
fnmadd.h f1, f11, f5, f26, dyn # perform operation
fnmadd.h f1, f11, f5, f26, rdn # perform operation
fnmadd.h f1, f11, f5, f26, rmm # perform operation
fnmadd.h f1, f11, f5, f26, rne # perform operation
fnmadd.h f1, f11, f5, f26, rtz # perform operation
fnmadd.h f1, f11, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8400)
li x13, 0x956367d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
li x3, 0x1dcc3593 # load x3 with value 0x1dcc3593
sw x3, 0(x2) # store 0x1dcc3593 in memory
flh f17, 0(x2) # load 0x1dcc3593 from memory into f17
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
fnmadd.h f13, f30, f17, f21, dyn # perform operation
fnmadd.h f13, f30, f17, f21, rdn # perform operation
fnmadd.h f13, f30, f17, f21, rmm # perform operation
fnmadd.h f13, f30, f17, f21, rne # perform operation
fnmadd.h f13, f30, f17, f21, rtz # perform operation
fnmadd.h f13, f30, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f30, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f30, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f30, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f30, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f30, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7bff)
li x24, 0x26ca5cb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x1407aa26 # load x3 with value 0x1407aa26
sw x3, 0(x2) # store 0x1407aa26 in memory
flh f10, 0(x2) # load 0x1407aa26 from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f24, f21, f10, f18, dyn # perform operation
fnmadd.h f24, f21, f10, f18, rdn # perform operation
fnmadd.h f24, f21, f10, f18, rmm # perform operation
fnmadd.h f24, f21, f10, f18, rne # perform operation
fnmadd.h f24, f21, f10, f18, rtz # perform operation
fnmadd.h f24, f21, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfbff)
li x2, 0x8f32fb5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0xf4ac9612 # load x3 with value 0xf4ac9612
sw x3, 0(x2) # store 0xf4ac9612 in memory
flh f29, 0(x2) # load 0xf4ac9612 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f2, f21, f29, f10, dyn # perform operation
fnmadd.h f2, f21, f29, f10, rdn # perform operation
fnmadd.h f2, f21, f29, f10, rmm # perform operation
fnmadd.h f2, f21, f29, f10, rne # perform operation
fnmadd.h f2, f21, f29, f10, rtz # perform operation
fnmadd.h f2, f21, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3ff)
li x25, 0xfc69b245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
li x3, 0x0a2a84ab # load x3 with value 0x0a2a84ab
sw x3, 0(x2) # store 0x0a2a84ab in memory
flh f5, 0(x2) # load 0x0a2a84ab from memory into f5
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
fnmadd.h f25, f24, f5, f18, dyn # perform operation
fnmadd.h f25, f24, f5, f18, rdn # perform operation
fnmadd.h f25, f24, f5, f18, rmm # perform operation
fnmadd.h f25, f24, f5, f18, rne # perform operation
fnmadd.h f25, f24, f5, f18, rtz # perform operation
fnmadd.h f25, f24, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f5, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x83ff)
li x21, 0xddae71f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
li x3, 0x77a193d6 # load x3 with value 0x77a193d6
sw x3, 0(x2) # store 0x77a193d6 in memory
flh f17, 0(x2) # load 0x77a193d6 from memory into f17
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
fnmadd.h f21, f24, f17, f11, dyn # perform operation
fnmadd.h f21, f24, f17, f11, rdn # perform operation
fnmadd.h f21, f24, f17, f11, rmm # perform operation
fnmadd.h f21, f24, f17, f11, rne # perform operation
fnmadd.h f21, f24, f17, f11, rtz # perform operation
fnmadd.h f21, f24, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f24, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x200)
li x30, 0xfb4099d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
li x3, 0x6e8a72e7 # load x3 with value 0x6e8a72e7
sw x3, 0(x2) # store 0x6e8a72e7 in memory
flh f23, 0(x2) # load 0x6e8a72e7 from memory into f23
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f30, f27, f23, f13, dyn # perform operation
fnmadd.h f30, f27, f23, f13, rdn # perform operation
fnmadd.h f30, f27, f23, f13, rmm # perform operation
fnmadd.h f30, f27, f23, f13, rne # perform operation
fnmadd.h f30, f27, f23, f13, rtz # perform operation
fnmadd.h f30, f27, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8200)
li x8, 0x465827d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0x0c94f53e # load x3 with value 0x0c94f53e
sw x3, 0(x2) # store 0x0c94f53e in memory
flh f27, 0(x2) # load 0x0c94f53e from memory into f27
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
fnmadd.h f8, f13, f27, f28, dyn # perform operation
fnmadd.h f8, f13, f27, f28, rdn # perform operation
fnmadd.h f8, f13, f27, f28, rmm # perform operation
fnmadd.h f8, f13, f27, f28, rne # perform operation
fnmadd.h f8, f13, f27, f28, rtz # perform operation
fnmadd.h f8, f13, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x1)
li x5, 0x6194fb0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
li x3, 0x8b51f1a1 # load x3 with value 0x8b51f1a1
sw x3, 0(x2) # store 0x8b51f1a1 in memory
flh f13, 0(x2) # load 0x8b51f1a1 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f5, f6, f13, f28, dyn # perform operation
fnmadd.h f5, f6, f13, f28, rdn # perform operation
fnmadd.h f5, f6, f13, f28, rmm # perform operation
fnmadd.h f5, f6, f13, f28, rne # perform operation
fnmadd.h f5, f6, f13, f28, rtz # perform operation
fnmadd.h f5, f6, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8001)
li x7, 0x8916b272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
li x3, 0x5ba4a07f # load x3 with value 0x5ba4a07f
sw x3, 0(x2) # store 0x5ba4a07f in memory
flh f12, 0(x2) # load 0x5ba4a07f from memory into f12
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
fnmadd.h f7, f14, f12, f18, dyn # perform operation
fnmadd.h f7, f14, f12, f18, rdn # perform operation
fnmadd.h f7, f14, f12, f18, rmm # perform operation
fnmadd.h f7, f14, f12, f18, rne # perform operation
fnmadd.h f7, f14, f12, f18, rtz # perform operation
fnmadd.h f7, f14, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c00)
li x8, 0x5e058ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0xa9f7fa65 # load x3 with value 0xa9f7fa65
sw x3, 0(x2) # store 0xa9f7fa65 in memory
flh f5, 0(x2) # load 0xa9f7fa65 from memory into f5
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
fnmadd.h f8, f23, f5, f1, dyn # perform operation
fnmadd.h f8, f23, f5, f1, rdn # perform operation
fnmadd.h f8, f23, f5, f1, rmm # perform operation
fnmadd.h f8, f23, f5, f1, rne # perform operation
fnmadd.h f8, f23, f5, f1, rtz # perform operation
fnmadd.h f8, f23, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc00)
li x4, 0x4dd5c113 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
li x3, 0x0cf79052 # load x3 with value 0x0cf79052
sw x3, 0(x2) # store 0x0cf79052 in memory
flh f6, 0(x2) # load 0x0cf79052 from memory into f6
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f4, f29, f6, f9, dyn # perform operation
fnmadd.h f4, f29, f6, f9, rdn # perform operation
fnmadd.h f4, f29, f6, f9, rmm # perform operation
fnmadd.h f4, f29, f6, f9, rne # perform operation
fnmadd.h f4, f29, f6, f9, rtz # perform operation
fnmadd.h f4, f29, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7e00)
li x31, 0x0a48faa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
li x3, 0xfc1524bb # load x3 with value 0xfc1524bb
sw x3, 0(x2) # store 0xfc1524bb in memory
flh f28, 0(x2) # load 0xfc1524bb from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
fnmadd.h f31, f20, f28, f11, dyn # perform operation
fnmadd.h f31, f20, f28, f11, rdn # perform operation
fnmadd.h f31, f20, f28, f11, rmm # perform operation
fnmadd.h f31, f20, f28, f11, rne # perform operation
fnmadd.h f31, f20, f28, f11, rtz # perform operation
fnmadd.h f31, f20, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f20, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7fff)
li x25, 0x8799d40d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0xa8e5e9a3 # load x3 with value 0xa8e5e9a3
sw x3, 0(x2) # store 0xa8e5e9a3 in memory
flh f28, 0(x2) # load 0xa8e5e9a3 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f25, f16, f28, f1, dyn # perform operation
fnmadd.h f25, f16, f28, f1, rdn # perform operation
fnmadd.h f25, f16, f28, f1, rmm # perform operation
fnmadd.h f25, f16, f28, f1, rne # perform operation
fnmadd.h f25, f16, f28, f1, rtz # perform operation
fnmadd.h f25, f16, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c01)
li x6, 0x0b877a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0x6b88b1f2 # load x3 with value 0x6b88b1f2
sw x3, 0(x2) # store 0x6b88b1f2 in memory
flh f28, 0(x2) # load 0x6b88b1f2 from memory into f28
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
fnmadd.h f6, f10, f28, f24, dyn # perform operation
fnmadd.h f6, f10, f28, f24, rdn # perform operation
fnmadd.h f6, f10, f28, f24, rmm # perform operation
fnmadd.h f6, f10, f28, f24, rne # perform operation
fnmadd.h f6, f10, f28, f24, rtz # perform operation
fnmadd.h f6, f10, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7dff)
li x18, 0x3e1edfa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
li x3, 0xc8a872de # load x3 with value 0xc8a872de
sw x3, 0(x2) # store 0xc8a872de in memory
flh f19, 0(x2) # load 0xc8a872de from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
fnmadd.h f18, f23, f19, f8, dyn # perform operation
fnmadd.h f18, f23, f19, f8, rdn # perform operation
fnmadd.h f18, f23, f19, f8, rmm # perform operation
fnmadd.h f18, f23, f19, f8, rne # perform operation
fnmadd.h f18, f23, f19, f8, rtz # perform operation
fnmadd.h f18, f23, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x58b4)
li x23, 0x4ea66844 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
li x3, 0x5b1723be # load x3 with value 0x5b1723be
sw x3, 0(x2) # store 0x5b1723be in memory
flh f16, 0(x2) # load 0x5b1723be from memory into f16
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
fnmadd.h f23, f27, f16, f13, dyn # perform operation
fnmadd.h f23, f27, f16, f13, rdn # perform operation
fnmadd.h f23, f27, f16, f13, rmm # perform operation
fnmadd.h f23, f27, f16, f13, rne # perform operation
fnmadd.h f23, f27, f16, f13, rtz # perform operation
fnmadd.h f23, f27, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc93a)
li x11, 0x1b03cbbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0x077b2907 # load x3 with value 0x077b2907
sw x3, 0(x2) # store 0x077b2907 in memory
flh f18, 0(x2) # load 0x077b2907 from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
fnmadd.h f11, f13, f18, f24, dyn # perform operation
fnmadd.h f11, f13, f18, f24, rdn # perform operation
fnmadd.h f11, f13, f18, f24, rmm # perform operation
fnmadd.h f11, f13, f18, f24, rne # perform operation
fnmadd.h f11, f13, f18, f24, rtz # perform operation
fnmadd.h f11, f13, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x0)
li x31, 0xbf506a3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0x126c6eb5 # load x3 with value 0x126c6eb5
sw x3, 0(x2) # store 0x126c6eb5 in memory
flh f3, 0(x2) # load 0x126c6eb5 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f31, f13, f3, f7, dyn # perform operation
fnmadd.h f31, f13, f3, f7, rdn # perform operation
fnmadd.h f31, f13, f3, f7, rmm # perform operation
fnmadd.h f31, f13, f3, f7, rne # perform operation
fnmadd.h f31, f13, f3, f7, rtz # perform operation
fnmadd.h f31, f13, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8000)
li x6, 0xc6d942c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
li x3, 0x2cac1a0e # load x3 with value 0x2cac1a0e
sw x3, 0(x2) # store 0x2cac1a0e in memory
flh f17, 0(x2) # load 0x2cac1a0e from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
fnmadd.h f6, f2, f17, f15, dyn # perform operation
fnmadd.h f6, f2, f17, f15, rdn # perform operation
fnmadd.h f6, f2, f17, f15, rmm # perform operation
fnmadd.h f6, f2, f17, f15, rne # perform operation
fnmadd.h f6, f2, f17, f15, rtz # perform operation
fnmadd.h f6, f2, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f2, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3c00)
li x11, 0x2e4e71d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x50343267 # load x3 with value 0x50343267
sw x3, 0(x2) # store 0x50343267 in memory
flh f9, 0(x2) # load 0x50343267 from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
fnmadd.h f11, f26, f9, f5, dyn # perform operation
fnmadd.h f11, f26, f9, f5, rdn # perform operation
fnmadd.h f11, f26, f9, f5, rmm # perform operation
fnmadd.h f11, f26, f9, f5, rne # perform operation
fnmadd.h f11, f26, f9, f5, rtz # perform operation
fnmadd.h f11, f26, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbc00)
li x1, 0x311fe3bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x01e8841c # load x3 with value 0x01e8841c
sw x3, 0(x2) # store 0x01e8841c in memory
flh f19, 0(x2) # load 0x01e8841c from memory into f19
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
fnmadd.h f1, f26, f19, f20, dyn # perform operation
fnmadd.h f1, f26, f19, f20, rdn # perform operation
fnmadd.h f1, f26, f19, f20, rmm # perform operation
fnmadd.h f1, f26, f19, f20, rne # perform operation
fnmadd.h f1, f26, f19, f20, rtz # perform operation
fnmadd.h f1, f26, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3e00)
li x13, 0xe7e31ba7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0xfcf0833a # load x3 with value 0xfcf0833a
sw x3, 0(x2) # store 0xfcf0833a in memory
flh f29, 0(x2) # load 0xfcf0833a from memory into f29
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
fnmadd.h f13, f25, f29, f3, dyn # perform operation
fnmadd.h f13, f25, f29, f3, rdn # perform operation
fnmadd.h f13, f25, f29, f3, rmm # perform operation
fnmadd.h f13, f25, f29, f3, rne # perform operation
fnmadd.h f13, f25, f29, f3, rtz # perform operation
fnmadd.h f13, f25, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbe00)
li x30, 0xa0a867a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0x53e49e60 # load x3 with value 0x53e49e60
sw x3, 0(x2) # store 0x53e49e60 in memory
flh f18, 0(x2) # load 0x53e49e60 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
fnmadd.h f30, f7, f18, f16, dyn # perform operation
fnmadd.h f30, f7, f18, f16, rdn # perform operation
fnmadd.h f30, f7, f18, f16, rmm # perform operation
fnmadd.h f30, f7, f18, f16, rne # perform operation
fnmadd.h f30, f7, f18, f16, rtz # perform operation
fnmadd.h f30, f7, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f7, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x4000)
li x30, 0x4cb0125f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
li x3, 0x2516148f # load x3 with value 0x2516148f
sw x3, 0(x2) # store 0x2516148f in memory
flh f2, 0(x2) # load 0x2516148f from memory into f2
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
fnmadd.h f30, f9, f2, f8, dyn # perform operation
fnmadd.h f30, f9, f2, f8, rdn # perform operation
fnmadd.h f30, f9, f2, f8, rmm # perform operation
fnmadd.h f30, f9, f2, f8, rne # perform operation
fnmadd.h f30, f9, f2, f8, rtz # perform operation
fnmadd.h f30, f9, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc000)
li x18, 0x4b31b162 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
li x3, 0xdbeb74f8 # load x3 with value 0xdbeb74f8
sw x3, 0(x2) # store 0xdbeb74f8 in memory
flh f3, 0(x2) # load 0xdbeb74f8 from memory into f3
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
fnmadd.h f18, f9, f3, f4, dyn # perform operation
fnmadd.h f18, f9, f3, f4, rdn # perform operation
fnmadd.h f18, f9, f3, f4, rmm # perform operation
fnmadd.h f18, f9, f3, f4, rne # perform operation
fnmadd.h f18, f9, f3, f4, rtz # perform operation
fnmadd.h f18, f9, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f9, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x400)
li x5, 0xd2bdc1ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
li x3, 0x3f8705e4 # load x3 with value 0x3f8705e4
sw x3, 0(x2) # store 0x3f8705e4 in memory
flh f23, 0(x2) # load 0x3f8705e4 from memory into f23
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
fnmadd.h f5, f30, f23, f28, dyn # perform operation
fnmadd.h f5, f30, f23, f28, rdn # perform operation
fnmadd.h f5, f30, f23, f28, rmm # perform operation
fnmadd.h f5, f30, f23, f28, rne # perform operation
fnmadd.h f5, f30, f23, f28, rtz # perform operation
fnmadd.h f5, f30, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f30, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f30, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f30, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f30, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f30, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8400)
li x30, 0x1d57c12c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
li x3, 0xe8b46b5a # load x3 with value 0xe8b46b5a
sw x3, 0(x2) # store 0xe8b46b5a in memory
flh f24, 0(x2) # load 0xe8b46b5a from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f30, f6, f24, f15, dyn # perform operation
fnmadd.h f30, f6, f24, f15, rdn # perform operation
fnmadd.h f30, f6, f24, f15, rmm # perform operation
fnmadd.h f30, f6, f24, f15, rne # perform operation
fnmadd.h f30, f6, f24, f15, rtz # perform operation
fnmadd.h f30, f6, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7bff)
li x11, 0xe963b9e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
li x3, 0xf76758c7 # load x3 with value 0xf76758c7
sw x3, 0(x2) # store 0xf76758c7 in memory
flh f30, 0(x2) # load 0xf76758c7 from memory into f30
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f11, f25, f30, f21, dyn # perform operation
fnmadd.h f11, f25, f30, f21, rdn # perform operation
fnmadd.h f11, f25, f30, f21, rmm # perform operation
fnmadd.h f11, f25, f30, f21, rne # perform operation
fnmadd.h f11, f25, f30, f21, rtz # perform operation
fnmadd.h f11, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfbff)
li x8, 0x3fce2439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
li x3, 0xcab332da # load x3 with value 0xcab332da
sw x3, 0(x2) # store 0xcab332da in memory
flh f25, 0(x2) # load 0xcab332da from memory into f25
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
fnmadd.h f8, f2, f25, f26, dyn # perform operation
fnmadd.h f8, f2, f25, f26, rdn # perform operation
fnmadd.h f8, f2, f25, f26, rmm # perform operation
fnmadd.h f8, f2, f25, f26, rne # perform operation
fnmadd.h f8, f2, f25, f26, rtz # perform operation
fnmadd.h f8, f2, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f2, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3ff)
li x23, 0xbef5bc4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
li x3, 0xe5eccf97 # load x3 with value 0xe5eccf97
sw x3, 0(x2) # store 0xe5eccf97 in memory
flh f1, 0(x2) # load 0xe5eccf97 from memory into f1
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
fnmadd.h f23, f13, f1, f21, dyn # perform operation
fnmadd.h f23, f13, f1, f21, rdn # perform operation
fnmadd.h f23, f13, f1, f21, rmm # perform operation
fnmadd.h f23, f13, f1, f21, rne # perform operation
fnmadd.h f23, f13, f1, f21, rtz # perform operation
fnmadd.h f23, f13, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x83ff)
li x28, 0x7755fd89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0xd85907e1 # load x3 with value 0xd85907e1
sw x3, 0(x2) # store 0xd85907e1 in memory
flh f29, 0(x2) # load 0xd85907e1 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f28, f21, f29, f18, dyn # perform operation
fnmadd.h f28, f21, f29, f18, rdn # perform operation
fnmadd.h f28, f21, f29, f18, rmm # perform operation
fnmadd.h f28, f21, f29, f18, rne # perform operation
fnmadd.h f28, f21, f29, f18, rtz # perform operation
fnmadd.h f28, f21, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x200)
li x19, 0xf3d1d1c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
li x3, 0x4c55a430 # load x3 with value 0x4c55a430
sw x3, 0(x2) # store 0x4c55a430 in memory
flh f2, 0(x2) # load 0x4c55a430 from memory into f2
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
fnmadd.h f19, f23, f2, f3, dyn # perform operation
fnmadd.h f19, f23, f2, f3, rdn # perform operation
fnmadd.h f19, f23, f2, f3, rmm # perform operation
fnmadd.h f19, f23, f2, f3, rne # perform operation
fnmadd.h f19, f23, f2, f3, rtz # perform operation
fnmadd.h f19, f23, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8200)
li x15, 0xbf29e666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
li x3, 0x340116c1 # load x3 with value 0x340116c1
sw x3, 0(x2) # store 0x340116c1 in memory
flh f18, 0(x2) # load 0x340116c1 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f15, f17, f18, f29, dyn # perform operation
fnmadd.h f15, f17, f18, f29, rdn # perform operation
fnmadd.h f15, f17, f18, f29, rmm # perform operation
fnmadd.h f15, f17, f18, f29, rne # perform operation
fnmadd.h f15, f17, f18, f29, rtz # perform operation
fnmadd.h f15, f17, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x1)
li x17, 0xdd31f5cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x26182b98 # load x3 with value 0x26182b98
sw x3, 0(x2) # store 0x26182b98 in memory
flh f8, 0(x2) # load 0x26182b98 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f17, f20, f8, f26, dyn # perform operation
fnmadd.h f17, f20, f8, f26, rdn # perform operation
fnmadd.h f17, f20, f8, f26, rmm # perform operation
fnmadd.h f17, f20, f8, f26, rne # perform operation
fnmadd.h f17, f20, f8, f26, rtz # perform operation
fnmadd.h f17, f20, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8001)
li x29, 0x2dbeac1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0xae7f6265 # load x3 with value 0xae7f6265
sw x3, 0(x2) # store 0xae7f6265 in memory
flh f2, 0(x2) # load 0xae7f6265 from memory into f2
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f29, f7, f2, f31, dyn # perform operation
fnmadd.h f29, f7, f2, f31, rdn # perform operation
fnmadd.h f29, f7, f2, f31, rmm # perform operation
fnmadd.h f29, f7, f2, f31, rne # perform operation
fnmadd.h f29, f7, f2, f31, rtz # perform operation
fnmadd.h f29, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c00)
li x3, 0xd59f402d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x5ae9f8b5 # load x3 with value 0x5ae9f8b5
sw x3, 0(x2) # store 0x5ae9f8b5 in memory
flh f28, 0(x2) # load 0x5ae9f8b5 from memory into f28
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
fnmadd.h f3, f21, f28, f20, dyn # perform operation
fnmadd.h f3, f21, f28, f20, rdn # perform operation
fnmadd.h f3, f21, f28, f20, rmm # perform operation
fnmadd.h f3, f21, f28, f20, rne # perform operation
fnmadd.h f3, f21, f28, f20, rtz # perform operation
fnmadd.h f3, f21, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f21, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc00)
li x25, 0xaafd9226 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0xf8d8a2c7 # load x3 with value 0xf8d8a2c7
sw x3, 0(x2) # store 0xf8d8a2c7 in memory
flh f23, 0(x2) # load 0xf8d8a2c7 from memory into f23
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
fnmadd.h f25, f3, f23, f30, dyn # perform operation
fnmadd.h f25, f3, f23, f30, rdn # perform operation
fnmadd.h f25, f3, f23, f30, rmm # perform operation
fnmadd.h f25, f3, f23, f30, rne # perform operation
fnmadd.h f25, f3, f23, f30, rtz # perform operation
fnmadd.h f25, f3, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f3, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7e00)
li x26, 0x77494418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
li x3, 0xe677084e # load x3 with value 0xe677084e
sw x3, 0(x2) # store 0xe677084e in memory
flh f7, 0(x2) # load 0xe677084e from memory into f7
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
fnmadd.h f26, f12, f7, f29, dyn # perform operation
fnmadd.h f26, f12, f7, f29, rdn # perform operation
fnmadd.h f26, f12, f7, f29, rmm # perform operation
fnmadd.h f26, f12, f7, f29, rne # perform operation
fnmadd.h f26, f12, f7, f29, rtz # perform operation
fnmadd.h f26, f12, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7fff)
li x14, 0xb442ef34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
li x3, 0xb1ffcead # load x3 with value 0xb1ffcead
sw x3, 0(x2) # store 0xb1ffcead in memory
flh f9, 0(x2) # load 0xb1ffcead from memory into f9
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
fnmadd.h f14, f30, f9, f2, dyn # perform operation
fnmadd.h f14, f30, f9, f2, rdn # perform operation
fnmadd.h f14, f30, f9, f2, rmm # perform operation
fnmadd.h f14, f30, f9, f2, rne # perform operation
fnmadd.h f14, f30, f9, f2, rtz # perform operation
fnmadd.h f14, f30, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c01)
li x31, 0x1dcd40b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
li x3, 0x2fd75353 # load x3 with value 0x2fd75353
sw x3, 0(x2) # store 0x2fd75353 in memory
flh f22, 0(x2) # load 0x2fd75353 from memory into f22
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
fnmadd.h f31, f30, f22, f25, dyn # perform operation
fnmadd.h f31, f30, f22, f25, rdn # perform operation
fnmadd.h f31, f30, f22, f25, rmm # perform operation
fnmadd.h f31, f30, f22, f25, rne # perform operation
fnmadd.h f31, f30, f22, f25, rtz # perform operation
fnmadd.h f31, f30, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7dff)
li x15, 0x52622dd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
li x3, 0x2022cf1a # load x3 with value 0x2022cf1a
sw x3, 0(x2) # store 0x2022cf1a in memory
flh f30, 0(x2) # load 0x2022cf1a from memory into f30
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
fnmadd.h f15, f11, f30, f27, dyn # perform operation
fnmadd.h f15, f11, f30, f27, rdn # perform operation
fnmadd.h f15, f11, f30, f27, rmm # perform operation
fnmadd.h f15, f11, f30, f27, rne # perform operation
fnmadd.h f15, f11, f30, f27, rtz # perform operation
fnmadd.h f15, f11, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x58b4)
li x16, 0x17f6f862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0xf9f70914 # load x3 with value 0xf9f70914
sw x3, 0(x2) # store 0xf9f70914 in memory
flh f26, 0(x2) # load 0xf9f70914 from memory into f26
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f16, f29, f26, f8, dyn # perform operation
fnmadd.h f16, f29, f26, f8, rdn # perform operation
fnmadd.h f16, f29, f26, f8, rmm # perform operation
fnmadd.h f16, f29, f26, f8, rne # perform operation
fnmadd.h f16, f29, f26, f8, rtz # perform operation
fnmadd.h f16, f29, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f29, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc93a)
li x25, 0x524e5664 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0x5889cf55 # load x3 with value 0x5889cf55
sw x3, 0(x2) # store 0x5889cf55 in memory
flh f18, 0(x2) # load 0x5889cf55 from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
fnmadd.h f25, f24, f18, f3, dyn # perform operation
fnmadd.h f25, f24, f18, f3, rdn # perform operation
fnmadd.h f25, f24, f18, f3, rmm # perform operation
fnmadd.h f25, f24, f18, f3, rne # perform operation
fnmadd.h f25, f24, f18, f3, rtz # perform operation
fnmadd.h f25, f24, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x0)
li x15, 0xf4030e2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x8d7887bd # load x3 with value 0x8d7887bd
sw x3, 0(x2) # store 0x8d7887bd in memory
flh f27, 0(x2) # load 0x8d7887bd from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.h f15, f2, f27, f28, dyn # perform operation
fnmadd.h f15, f2, f27, f28, rdn # perform operation
fnmadd.h f15, f2, f27, f28, rmm # perform operation
fnmadd.h f15, f2, f27, f28, rne # perform operation
fnmadd.h f15, f2, f27, f28, rtz # perform operation
fnmadd.h f15, f2, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f2, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8000)
li x27, 0xbd423161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
li x3, 0x887df700 # load x3 with value 0x887df700
sw x3, 0(x2) # store 0x887df700 in memory
flh f11, 0(x2) # load 0x887df700 from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
fnmadd.h f27, f25, f11, f9, dyn # perform operation
fnmadd.h f27, f25, f11, f9, rdn # perform operation
fnmadd.h f27, f25, f11, f9, rmm # perform operation
fnmadd.h f27, f25, f11, f9, rne # perform operation
fnmadd.h f27, f25, f11, f9, rtz # perform operation
fnmadd.h f27, f25, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f11, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3c00)
li x22, 0x4a9985c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
li x3, 0x74857aaf # load x3 with value 0x74857aaf
sw x3, 0(x2) # store 0x74857aaf in memory
flh f7, 0(x2) # load 0x74857aaf from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
fnmadd.h f22, f14, f7, f30, dyn # perform operation
fnmadd.h f22, f14, f7, f30, rdn # perform operation
fnmadd.h f22, f14, f7, f30, rmm # perform operation
fnmadd.h f22, f14, f7, f30, rne # perform operation
fnmadd.h f22, f14, f7, f30, rtz # perform operation
fnmadd.h f22, f14, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbc00)
li x31, 0xe3874fc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
li x3, 0x112e8853 # load x3 with value 0x112e8853
sw x3, 0(x2) # store 0x112e8853 in memory
flh f9, 0(x2) # load 0x112e8853 from memory into f9
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
fnmadd.h f31, f6, f9, f30, dyn # perform operation
fnmadd.h f31, f6, f9, f30, rdn # perform operation
fnmadd.h f31, f6, f9, f30, rmm # perform operation
fnmadd.h f31, f6, f9, f30, rne # perform operation
fnmadd.h f31, f6, f9, f30, rtz # perform operation
fnmadd.h f31, f6, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3e00)
li x6, 0x2f9325d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0xad9e7bd2 # load x3 with value 0xad9e7bd2
sw x3, 0(x2) # store 0xad9e7bd2 in memory
flh f3, 0(x2) # load 0xad9e7bd2 from memory into f3
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
fnmadd.h f6, f10, f3, f5, dyn # perform operation
fnmadd.h f6, f10, f3, f5, rdn # perform operation
fnmadd.h f6, f10, f3, f5, rmm # perform operation
fnmadd.h f6, f10, f3, f5, rne # perform operation
fnmadd.h f6, f10, f3, f5, rtz # perform operation
fnmadd.h f6, f10, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbe00)
li x11, 0x9330f38a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
li x3, 0xbbc85488 # load x3 with value 0xbbc85488
sw x3, 0(x2) # store 0xbbc85488 in memory
flh f6, 0(x2) # load 0xbbc85488 from memory into f6
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
fnmadd.h f11, f25, f6, f20, dyn # perform operation
fnmadd.h f11, f25, f6, f20, rdn # perform operation
fnmadd.h f11, f25, f6, f20, rmm # perform operation
fnmadd.h f11, f25, f6, f20, rne # perform operation
fnmadd.h f11, f25, f6, f20, rtz # perform operation
fnmadd.h f11, f25, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x4000)
li x6, 0x8fcebb24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0x1beaa6b5 # load x3 with value 0x1beaa6b5
sw x3, 0(x2) # store 0x1beaa6b5 in memory
flh f20, 0(x2) # load 0x1beaa6b5 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
fnmadd.h f6, f5, f20, f10, dyn # perform operation
fnmadd.h f6, f5, f20, f10, rdn # perform operation
fnmadd.h f6, f5, f20, f10, rmm # perform operation
fnmadd.h f6, f5, f20, f10, rne # perform operation
fnmadd.h f6, f5, f20, f10, rtz # perform operation
fnmadd.h f6, f5, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc000)
li x16, 0xc9441995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0xea44f1d0 # load x3 with value 0xea44f1d0
sw x3, 0(x2) # store 0xea44f1d0 in memory
flh f7, 0(x2) # load 0xea44f1d0 from memory into f7
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
fnmadd.h f16, f2, f7, f25, dyn # perform operation
fnmadd.h f16, f2, f7, f25, rdn # perform operation
fnmadd.h f16, f2, f7, f25, rmm # perform operation
fnmadd.h f16, f2, f7, f25, rne # perform operation
fnmadd.h f16, f2, f7, f25, rtz # perform operation
fnmadd.h f16, f2, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f2, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x400)
li x8, 0x8aab31db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
li x3, 0xd6b8d31f # load x3 with value 0xd6b8d31f
sw x3, 0(x2) # store 0xd6b8d31f in memory
flh f21, 0(x2) # load 0xd6b8d31f from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
fnmadd.h f8, f1, f21, f23, dyn # perform operation
fnmadd.h f8, f1, f21, f23, rdn # perform operation
fnmadd.h f8, f1, f21, f23, rmm # perform operation
fnmadd.h f8, f1, f21, f23, rne # perform operation
fnmadd.h f8, f1, f21, f23, rtz # perform operation
fnmadd.h f8, f1, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8400)
li x21, 0xb9594fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
li x3, 0xd7e5e489 # load x3 with value 0xd7e5e489
sw x3, 0(x2) # store 0xd7e5e489 in memory
flh f7, 0(x2) # load 0xd7e5e489 from memory into f7
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
fnmadd.h f21, f15, f7, f6, dyn # perform operation
fnmadd.h f21, f15, f7, f6, rdn # perform operation
fnmadd.h f21, f15, f7, f6, rmm # perform operation
fnmadd.h f21, f15, f7, f6, rne # perform operation
fnmadd.h f21, f15, f7, f6, rtz # perform operation
fnmadd.h f21, f15, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7bff)
li x21, 0x1f02a7a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
li x3, 0xf4478c4d # load x3 with value 0xf4478c4d
sw x3, 0(x2) # store 0xf4478c4d in memory
flh f5, 0(x2) # load 0xf4478c4d from memory into f5
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
fnmadd.h f21, f14, f5, f26, dyn # perform operation
fnmadd.h f21, f14, f5, f26, rdn # perform operation
fnmadd.h f21, f14, f5, f26, rmm # perform operation
fnmadd.h f21, f14, f5, f26, rne # perform operation
fnmadd.h f21, f14, f5, f26, rtz # perform operation
fnmadd.h f21, f14, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfbff)
li x18, 0x08279037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
li x3, 0xc30ce0cf # load x3 with value 0xc30ce0cf
sw x3, 0(x2) # store 0xc30ce0cf in memory
flh f14, 0(x2) # load 0xc30ce0cf from memory into f14
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f18, f7, f14, f1, dyn # perform operation
fnmadd.h f18, f7, f14, f1, rdn # perform operation
fnmadd.h f18, f7, f14, f1, rmm # perform operation
fnmadd.h f18, f7, f14, f1, rne # perform operation
fnmadd.h f18, f7, f14, f1, rtz # perform operation
fnmadd.h f18, f7, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f7, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3ff)
li x2, 0x393a12d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
li x3, 0x46d0b3ea # load x3 with value 0x46d0b3ea
sw x3, 0(x2) # store 0x46d0b3ea in memory
flh f22, 0(x2) # load 0x46d0b3ea from memory into f22
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
fnmadd.h f2, f28, f22, f10, dyn # perform operation
fnmadd.h f2, f28, f22, f10, rdn # perform operation
fnmadd.h f2, f28, f22, f10, rmm # perform operation
fnmadd.h f2, f28, f22, f10, rne # perform operation
fnmadd.h f2, f28, f22, f10, rtz # perform operation
fnmadd.h f2, f28, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x83ff)
li x8, 0x47adde9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x8769f102 # load x3 with value 0x8769f102
sw x3, 0(x2) # store 0x8769f102 in memory
flh f27, 0(x2) # load 0x8769f102 from memory into f27
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
fnmadd.h f8, f16, f27, f20, dyn # perform operation
fnmadd.h f8, f16, f27, f20, rdn # perform operation
fnmadd.h f8, f16, f27, f20, rmm # perform operation
fnmadd.h f8, f16, f27, f20, rne # perform operation
fnmadd.h f8, f16, f27, f20, rtz # perform operation
fnmadd.h f8, f16, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x200)
li x25, 0x4084a13d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0xb4cf87d2 # load x3 with value 0xb4cf87d2
sw x3, 0(x2) # store 0xb4cf87d2 in memory
flh f13, 0(x2) # load 0xb4cf87d2 from memory into f13
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
fnmadd.h f25, f24, f13, f29, dyn # perform operation
fnmadd.h f25, f24, f13, f29, rdn # perform operation
fnmadd.h f25, f24, f13, f29, rmm # perform operation
fnmadd.h f25, f24, f13, f29, rne # perform operation
fnmadd.h f25, f24, f13, f29, rtz # perform operation
fnmadd.h f25, f24, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8200)
li x22, 0xbc0c3d1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x31af650e # load x3 with value 0x31af650e
sw x3, 0(x2) # store 0x31af650e in memory
flh f15, 0(x2) # load 0x31af650e from memory into f15
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
fnmadd.h f22, f3, f15, f12, dyn # perform operation
fnmadd.h f22, f3, f15, f12, rdn # perform operation
fnmadd.h f22, f3, f15, f12, rmm # perform operation
fnmadd.h f22, f3, f15, f12, rne # perform operation
fnmadd.h f22, f3, f15, f12, rtz # perform operation
fnmadd.h f22, f3, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x1)
li x17, 0xbe17c8c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x5be5d272 # load x3 with value 0x5be5d272
sw x3, 0(x2) # store 0x5be5d272 in memory
flh f24, 0(x2) # load 0x5be5d272 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.h f17, f3, f24, f23, dyn # perform operation
fnmadd.h f17, f3, f24, f23, rdn # perform operation
fnmadd.h f17, f3, f24, f23, rmm # perform operation
fnmadd.h f17, f3, f24, f23, rne # perform operation
fnmadd.h f17, f3, f24, f23, rtz # perform operation
fnmadd.h f17, f3, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8001)
li x11, 0x508f69d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
li x3, 0x07d0a8e0 # load x3 with value 0x07d0a8e0
sw x3, 0(x2) # store 0x07d0a8e0 in memory
flh f22, 0(x2) # load 0x07d0a8e0 from memory into f22
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f11, f7, f22, f1, dyn # perform operation
fnmadd.h f11, f7, f22, f1, rdn # perform operation
fnmadd.h f11, f7, f22, f1, rmm # perform operation
fnmadd.h f11, f7, f22, f1, rne # perform operation
fnmadd.h f11, f7, f22, f1, rtz # perform operation
fnmadd.h f11, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c00)
li x6, 0x5b31f649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
li x3, 0xa9ebfcb1 # load x3 with value 0xa9ebfcb1
sw x3, 0(x2) # store 0xa9ebfcb1 in memory
flh f16, 0(x2) # load 0xa9ebfcb1 from memory into f16
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f6, f17, f16, f12, dyn # perform operation
fnmadd.h f6, f17, f16, f12, rdn # perform operation
fnmadd.h f6, f17, f16, f12, rmm # perform operation
fnmadd.h f6, f17, f16, f12, rne # perform operation
fnmadd.h f6, f17, f16, f12, rtz # perform operation
fnmadd.h f6, f17, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f17, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f17, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc00)
li x16, 0x34c7b5eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0x5a80d353 # load x3 with value 0x5a80d353
sw x3, 0(x2) # store 0x5a80d353 in memory
flh f20, 0(x2) # load 0x5a80d353 from memory into f20
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
fnmadd.h f16, f27, f20, f18, dyn # perform operation
fnmadd.h f16, f27, f20, f18, rdn # perform operation
fnmadd.h f16, f27, f20, f18, rmm # perform operation
fnmadd.h f16, f27, f20, f18, rne # perform operation
fnmadd.h f16, f27, f20, f18, rtz # perform operation
fnmadd.h f16, f27, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7e00)
li x20, 0x1aeb6d48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x6997e346 # load x3 with value 0x6997e346
sw x3, 0(x2) # store 0x6997e346 in memory
flh f6, 0(x2) # load 0x6997e346 from memory into f6
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
fnmadd.h f20, f2, f6, f17, dyn # perform operation
fnmadd.h f20, f2, f6, f17, rdn # perform operation
fnmadd.h f20, f2, f6, f17, rmm # perform operation
fnmadd.h f20, f2, f6, f17, rne # perform operation
fnmadd.h f20, f2, f6, f17, rtz # perform operation
fnmadd.h f20, f2, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7fff)
li x28, 0x35ee512a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
li x3, 0x2e8e89bc # load x3 with value 0x2e8e89bc
sw x3, 0(x2) # store 0x2e8e89bc in memory
flh f8, 0(x2) # load 0x2e8e89bc from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f28, f6, f8, f7, dyn # perform operation
fnmadd.h f28, f6, f8, f7, rdn # perform operation
fnmadd.h f28, f6, f8, f7, rmm # perform operation
fnmadd.h f28, f6, f8, f7, rne # perform operation
fnmadd.h f28, f6, f8, f7, rtz # perform operation
fnmadd.h f28, f6, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c01)
li x14, 0x96ffce20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0xd817b91b # load x3 with value 0xd817b91b
sw x3, 0(x2) # store 0xd817b91b in memory
flh f28, 0(x2) # load 0xd817b91b from memory into f28
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f14, f23, f28, f7, dyn # perform operation
fnmadd.h f14, f23, f28, f7, rdn # perform operation
fnmadd.h f14, f23, f28, f7, rmm # perform operation
fnmadd.h f14, f23, f28, f7, rne # perform operation
fnmadd.h f14, f23, f28, f7, rtz # perform operation
fnmadd.h f14, f23, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7dff)
li x17, 0x5488618d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0xf106b390 # load x3 with value 0xf106b390
sw x3, 0(x2) # store 0xf106b390 in memory
flh f27, 0(x2) # load 0xf106b390 from memory into f27
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
fnmadd.h f17, f24, f27, f31, dyn # perform operation
fnmadd.h f17, f24, f27, f31, rdn # perform operation
fnmadd.h f17, f24, f27, f31, rmm # perform operation
fnmadd.h f17, f24, f27, f31, rne # perform operation
fnmadd.h f17, f24, f27, f31, rtz # perform operation
fnmadd.h f17, f24, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x58b4)
li x22, 0x653dae1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
li x3, 0xb15fb20f # load x3 with value 0xb15fb20f
sw x3, 0(x2) # store 0xb15fb20f in memory
flh f9, 0(x2) # load 0xb15fb20f from memory into f9
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
fnmadd.h f22, f18, f9, f16, dyn # perform operation
fnmadd.h f22, f18, f9, f16, rdn # perform operation
fnmadd.h f22, f18, f9, f16, rmm # perform operation
fnmadd.h f22, f18, f9, f16, rne # perform operation
fnmadd.h f22, f18, f9, f16, rtz # perform operation
fnmadd.h f22, f18, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc93a)
li x25, 0xe0450ecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
li x3, 0xed961d77 # load x3 with value 0xed961d77
sw x3, 0(x2) # store 0xed961d77 in memory
flh f31, 0(x2) # load 0xed961d77 from memory into f31
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f25, f19, f31, f12, dyn # perform operation
fnmadd.h f25, f19, f31, f12, rdn # perform operation
fnmadd.h f25, f19, f31, f12, rmm # perform operation
fnmadd.h f25, f19, f31, f12, rne # perform operation
fnmadd.h f25, f19, f31, f12, rtz # perform operation
fnmadd.h f25, f19, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f19, f31, f12 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xe464463e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8a17792 # load x3 with value 0xf8a17792
sw x3, 0(x2) # store 0xf8a17792 in memory
flh f16, 0(x2) # load 0xf8a17792 from memory into f16
li x3, 0x3da2a664 # load x3 with value 0x3da2a664
sw x3, 0(x2) # store 0x3da2a664 in memory
flh f4, 0(x2) # load 0x3da2a664 from memory into f4
li x3, 0x1ce5c253 # load x3 with value 0x1ce5c253
sw x3, 0(x2) # store 0x1ce5c253 in memory
flh f25, 0(x2) # load 0x1ce5c253 from memory into f25
fnmadd.h f0, f16, f4, f25 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x24d3e60c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5f2fda1 # load x3 with value 0xf5f2fda1
sw x3, 0(x2) # store 0xf5f2fda1 in memory
flh f16, 0(x2) # load 0xf5f2fda1 from memory into f16
li x3, 0x20bb88d2 # load x3 with value 0x20bb88d2
sw x3, 0(x2) # store 0x20bb88d2 in memory
flh f24, 0(x2) # load 0x20bb88d2 from memory into f24
li x3, 0xec2ebef7 # load x3 with value 0xec2ebef7
sw x3, 0(x2) # store 0xec2ebef7 in memory
flh f19, 0(x2) # load 0xec2ebef7 from memory into f19
fnmadd.h f1, f16, f24, f19 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x1c64b6f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe74297bc # load x3 with value 0xe74297bc
sw x3, 0(x2) # store 0xe74297bc in memory
flh f16, 0(x2) # load 0xe74297bc from memory into f16
li x3, 0xfd154488 # load x3 with value 0xfd154488
sw x3, 0(x2) # store 0xfd154488 in memory
flh f26, 0(x2) # load 0xfd154488 from memory into f26
li x3, 0x2258efc5 # load x3 with value 0x2258efc5
sw x3, 0(x2) # store 0x2258efc5 in memory
flh f15, 0(x2) # load 0x2258efc5 from memory into f15
fnmadd.h f2, f16, f26, f15 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x0ba17d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9af6f5e # load x3 with value 0xf9af6f5e
sw x3, 0(x2) # store 0xf9af6f5e in memory
flh f31, 0(x2) # load 0xf9af6f5e from memory into f31
li x3, 0xf036a7ce # load x3 with value 0xf036a7ce
sw x3, 0(x2) # store 0xf036a7ce in memory
flh f15, 0(x2) # load 0xf036a7ce from memory into f15
li x3, 0x0cb190bb # load x3 with value 0x0cb190bb
sw x3, 0(x2) # store 0x0cb190bb in memory
flh f22, 0(x2) # load 0x0cb190bb from memory into f22
fnmadd.h f3, f31, f15, f22 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x8b202a69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaea25030 # load x3 with value 0xaea25030
sw x3, 0(x2) # store 0xaea25030 in memory
flh f22, 0(x2) # load 0xaea25030 from memory into f22
li x3, 0xfd90aa85 # load x3 with value 0xfd90aa85
sw x3, 0(x2) # store 0xfd90aa85 in memory
flh f28, 0(x2) # load 0xfd90aa85 from memory into f28
li x3, 0x3e94ec04 # load x3 with value 0x3e94ec04
sw x3, 0(x2) # store 0x3e94ec04 in memory
flh f6, 0(x2) # load 0x3e94ec04 from memory into f6
fnmadd.h f4, f22, f28, f6 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x329ad5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5214fc0c # load x3 with value 0x5214fc0c
sw x3, 0(x2) # store 0x5214fc0c in memory
flh f24, 0(x2) # load 0x5214fc0c from memory into f24
li x3, 0xeb93fce8 # load x3 with value 0xeb93fce8
sw x3, 0(x2) # store 0xeb93fce8 in memory
flh f18, 0(x2) # load 0xeb93fce8 from memory into f18
li x3, 0x95ed27a1 # load x3 with value 0x95ed27a1
sw x3, 0(x2) # store 0x95ed27a1 in memory
flh f20, 0(x2) # load 0x95ed27a1 from memory into f20
fnmadd.h f5, f24, f18, f20 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xca2c5428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5dad0cb4 # load x3 with value 0x5dad0cb4
sw x3, 0(x2) # store 0x5dad0cb4 in memory
flh f7, 0(x2) # load 0x5dad0cb4 from memory into f7
li x3, 0x71b98e82 # load x3 with value 0x71b98e82
sw x3, 0(x2) # store 0x71b98e82 in memory
flh f31, 0(x2) # load 0x71b98e82 from memory into f31
li x3, 0x25d0564f # load x3 with value 0x25d0564f
sw x3, 0(x2) # store 0x25d0564f in memory
flh f21, 0(x2) # load 0x25d0564f from memory into f21
fnmadd.h f6, f7, f31, f21 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xd4621a7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9f3d61f # load x3 with value 0xf9f3d61f
sw x3, 0(x2) # store 0xf9f3d61f in memory
flh f14, 0(x2) # load 0xf9f3d61f from memory into f14
li x3, 0x55cfc206 # load x3 with value 0x55cfc206
sw x3, 0(x2) # store 0x55cfc206 in memory
flh f23, 0(x2) # load 0x55cfc206 from memory into f23
li x3, 0x60d40baa # load x3 with value 0x60d40baa
sw x3, 0(x2) # store 0x60d40baa in memory
flh f18, 0(x2) # load 0x60d40baa from memory into f18
fnmadd.h f7, f14, f23, f18 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x730000b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2f349e2 # load x3 with value 0xd2f349e2
sw x3, 0(x2) # store 0xd2f349e2 in memory
flh f29, 0(x2) # load 0xd2f349e2 from memory into f29
li x3, 0xcbffd407 # load x3 with value 0xcbffd407
sw x3, 0(x2) # store 0xcbffd407 in memory
flh f24, 0(x2) # load 0xcbffd407 from memory into f24
li x3, 0x3d34f961 # load x3 with value 0x3d34f961
sw x3, 0(x2) # store 0x3d34f961 in memory
flh f1, 0(x2) # load 0x3d34f961 from memory into f1
fnmadd.h f8, f29, f24, f1 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xbb9cf945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5bdad9a1 # load x3 with value 0x5bdad9a1
sw x3, 0(x2) # store 0x5bdad9a1 in memory
flh f19, 0(x2) # load 0x5bdad9a1 from memory into f19
li x3, 0x4c8984ed # load x3 with value 0x4c8984ed
sw x3, 0(x2) # store 0x4c8984ed in memory
flh f17, 0(x2) # load 0x4c8984ed from memory into f17
li x3, 0x73b370dd # load x3 with value 0x73b370dd
sw x3, 0(x2) # store 0x73b370dd in memory
flh f1, 0(x2) # load 0x73b370dd from memory into f1
fnmadd.h f9, f19, f17, f1 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x4628d48f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a51db66 # load x3 with value 0x0a51db66
sw x3, 0(x2) # store 0x0a51db66 in memory
flh f29, 0(x2) # load 0x0a51db66 from memory into f29
li x3, 0xe222ffe0 # load x3 with value 0xe222ffe0
sw x3, 0(x2) # store 0xe222ffe0 in memory
flh f30, 0(x2) # load 0xe222ffe0 from memory into f30
li x3, 0xabc3814e # load x3 with value 0xabc3814e
sw x3, 0(x2) # store 0xabc3814e in memory
flh f31, 0(x2) # load 0xabc3814e from memory into f31
fnmadd.h f10, f29, f30, f31 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x4f253154 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96456039 # load x3 with value 0x96456039
sw x3, 0(x2) # store 0x96456039 in memory
flh f6, 0(x2) # load 0x96456039 from memory into f6
li x3, 0x62067ca8 # load x3 with value 0x62067ca8
sw x3, 0(x2) # store 0x62067ca8 in memory
flh f30, 0(x2) # load 0x62067ca8 from memory into f30
li x3, 0x5e6430f2 # load x3 with value 0x5e6430f2
sw x3, 0(x2) # store 0x5e6430f2 in memory
flh f11, 0(x2) # load 0x5e6430f2 from memory into f11
fnmadd.h f11, f6, f30, f11 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xf060c973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5b77b5f # load x3 with value 0xe5b77b5f
sw x3, 0(x2) # store 0xe5b77b5f in memory
flh f21, 0(x2) # load 0xe5b77b5f from memory into f21
li x3, 0xbbb302c2 # load x3 with value 0xbbb302c2
sw x3, 0(x2) # store 0xbbb302c2 in memory
flh f24, 0(x2) # load 0xbbb302c2 from memory into f24
li x3, 0x3a2166ca # load x3 with value 0x3a2166ca
sw x3, 0(x2) # store 0x3a2166ca in memory
flh f19, 0(x2) # load 0x3a2166ca from memory into f19
fnmadd.h f12, f21, f24, f19 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x7537f4c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c3846c1 # load x3 with value 0x6c3846c1
sw x3, 0(x2) # store 0x6c3846c1 in memory
flh f25, 0(x2) # load 0x6c3846c1 from memory into f25
li x3, 0xa5f88f07 # load x3 with value 0xa5f88f07
sw x3, 0(x2) # store 0xa5f88f07 in memory
flh f30, 0(x2) # load 0xa5f88f07 from memory into f30
li x3, 0x53bca394 # load x3 with value 0x53bca394
sw x3, 0(x2) # store 0x53bca394 in memory
flh f18, 0(x2) # load 0x53bca394 from memory into f18
fnmadd.h f13, f25, f30, f18 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xc09ec89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1721b0f1 # load x3 with value 0x1721b0f1
sw x3, 0(x2) # store 0x1721b0f1 in memory
flh f9, 0(x2) # load 0x1721b0f1 from memory into f9
li x3, 0x510bbf12 # load x3 with value 0x510bbf12
sw x3, 0(x2) # store 0x510bbf12 in memory
flh f21, 0(x2) # load 0x510bbf12 from memory into f21
li x3, 0xf32ab50f # load x3 with value 0xf32ab50f
sw x3, 0(x2) # store 0xf32ab50f in memory
flh f23, 0(x2) # load 0xf32ab50f from memory into f23
fnmadd.h f14, f9, f21, f23 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x00d870ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e379a20 # load x3 with value 0x3e379a20
sw x3, 0(x2) # store 0x3e379a20 in memory
flh f15, 0(x2) # load 0x3e379a20 from memory into f15
li x3, 0x9b3cba48 # load x3 with value 0x9b3cba48
sw x3, 0(x2) # store 0x9b3cba48 in memory
flh f8, 0(x2) # load 0x9b3cba48 from memory into f8
li x3, 0xd1b08e7a # load x3 with value 0xd1b08e7a
sw x3, 0(x2) # store 0xd1b08e7a in memory
flh f11, 0(x2) # load 0xd1b08e7a from memory into f11
fnmadd.h f15, f15, f8, f11 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0xadce03c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x946bb5e8 # load x3 with value 0x946bb5e8
sw x3, 0(x2) # store 0x946bb5e8 in memory
flh f8, 0(x2) # load 0x946bb5e8 from memory into f8
li x3, 0xbccf84f1 # load x3 with value 0xbccf84f1
sw x3, 0(x2) # store 0xbccf84f1 in memory
flh f5, 0(x2) # load 0xbccf84f1 from memory into f5
li x3, 0xa8452e74 # load x3 with value 0xa8452e74
sw x3, 0(x2) # store 0xa8452e74 in memory
flh f28, 0(x2) # load 0xa8452e74 from memory into f28
fnmadd.h f16, f8, f5, f28 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x51b1295e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4ee8b6f # load x3 with value 0xa4ee8b6f
sw x3, 0(x2) # store 0xa4ee8b6f in memory
flh f1, 0(x2) # load 0xa4ee8b6f from memory into f1
li x3, 0xf2f708f2 # load x3 with value 0xf2f708f2
sw x3, 0(x2) # store 0xf2f708f2 in memory
flh f31, 0(x2) # load 0xf2f708f2 from memory into f31
li x3, 0x450fdadc # load x3 with value 0x450fdadc
sw x3, 0(x2) # store 0x450fdadc in memory
flh f9, 0(x2) # load 0x450fdadc from memory into f9
fnmadd.h f17, f1, f31, f9 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x255543c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29acd989 # load x3 with value 0x29acd989
sw x3, 0(x2) # store 0x29acd989 in memory
flh f24, 0(x2) # load 0x29acd989 from memory into f24
li x3, 0x91505e72 # load x3 with value 0x91505e72
sw x3, 0(x2) # store 0x91505e72 in memory
flh f7, 0(x2) # load 0x91505e72 from memory into f7
li x3, 0x39d9a9e9 # load x3 with value 0x39d9a9e9
sw x3, 0(x2) # store 0x39d9a9e9 in memory
flh f25, 0(x2) # load 0x39d9a9e9 from memory into f25
fnmadd.h f18, f24, f7, f25 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x02465c6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb652bc0d # load x3 with value 0xb652bc0d
sw x3, 0(x2) # store 0xb652bc0d in memory
flh f9, 0(x2) # load 0xb652bc0d from memory into f9
li x3, 0x6ff96cbf # load x3 with value 0x6ff96cbf
sw x3, 0(x2) # store 0x6ff96cbf in memory
flh f19, 0(x2) # load 0x6ff96cbf from memory into f19
li x3, 0xd17da978 # load x3 with value 0xd17da978
sw x3, 0(x2) # store 0xd17da978 in memory
flh f17, 0(x2) # load 0xd17da978 from memory into f17
fnmadd.h f19, f9, f19, f17 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x2ad95adc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70dae897 # load x3 with value 0x70dae897
sw x3, 0(x2) # store 0x70dae897 in memory
flh f12, 0(x2) # load 0x70dae897 from memory into f12
li x3, 0x2fbfa000 # load x3 with value 0x2fbfa000
sw x3, 0(x2) # store 0x2fbfa000 in memory
flh f17, 0(x2) # load 0x2fbfa000 from memory into f17
li x3, 0xe68b42f8 # load x3 with value 0xe68b42f8
sw x3, 0(x2) # store 0xe68b42f8 in memory
flh f21, 0(x2) # load 0xe68b42f8 from memory into f21
fnmadd.h f20, f12, f17, f21 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x0e9cdb50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19335b9d # load x3 with value 0x19335b9d
sw x3, 0(x2) # store 0x19335b9d in memory
flh f17, 0(x2) # load 0x19335b9d from memory into f17
li x3, 0xd0f8f14f # load x3 with value 0xd0f8f14f
sw x3, 0(x2) # store 0xd0f8f14f in memory
flh f26, 0(x2) # load 0xd0f8f14f from memory into f26
li x3, 0x1c9834ce # load x3 with value 0x1c9834ce
sw x3, 0(x2) # store 0x1c9834ce in memory
flh f24, 0(x2) # load 0x1c9834ce from memory into f24
fnmadd.h f21, f17, f26, f24 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xbcca9b1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeae157f4 # load x3 with value 0xeae157f4
sw x3, 0(x2) # store 0xeae157f4 in memory
flh f12, 0(x2) # load 0xeae157f4 from memory into f12
li x3, 0xc405510a # load x3 with value 0xc405510a
sw x3, 0(x2) # store 0xc405510a in memory
flh f29, 0(x2) # load 0xc405510a from memory into f29
li x3, 0x03bb37e7 # load x3 with value 0x03bb37e7
sw x3, 0(x2) # store 0x03bb37e7 in memory
flh f19, 0(x2) # load 0x03bb37e7 from memory into f19
fnmadd.h f22, f12, f29, f19 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x0a023f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3329e649 # load x3 with value 0x3329e649
sw x3, 0(x2) # store 0x3329e649 in memory
flh f22, 0(x2) # load 0x3329e649 from memory into f22
li x3, 0x8bc11981 # load x3 with value 0x8bc11981
sw x3, 0(x2) # store 0x8bc11981 in memory
flh f30, 0(x2) # load 0x8bc11981 from memory into f30
li x3, 0x5534320e # load x3 with value 0x5534320e
sw x3, 0(x2) # store 0x5534320e in memory
flh f19, 0(x2) # load 0x5534320e from memory into f19
fnmadd.h f23, f22, f30, f19 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x9219c379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23846a29 # load x3 with value 0x23846a29
sw x3, 0(x2) # store 0x23846a29 in memory
flh f10, 0(x2) # load 0x23846a29 from memory into f10
li x3, 0xe2b69282 # load x3 with value 0xe2b69282
sw x3, 0(x2) # store 0xe2b69282 in memory
flh f20, 0(x2) # load 0xe2b69282 from memory into f20
li x3, 0xc2661908 # load x3 with value 0xc2661908
sw x3, 0(x2) # store 0xc2661908 in memory
flh f4, 0(x2) # load 0xc2661908 from memory into f4
fnmadd.h f24, f10, f20, f4 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x2b6cb2b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd97939e6 # load x3 with value 0xd97939e6
sw x3, 0(x2) # store 0xd97939e6 in memory
flh f30, 0(x2) # load 0xd97939e6 from memory into f30
li x3, 0x6a9053a1 # load x3 with value 0x6a9053a1
sw x3, 0(x2) # store 0x6a9053a1 in memory
flh f28, 0(x2) # load 0x6a9053a1 from memory into f28
li x3, 0xe4671d88 # load x3 with value 0xe4671d88
sw x3, 0(x2) # store 0xe4671d88 in memory
flh f21, 0(x2) # load 0xe4671d88 from memory into f21
fnmadd.h f25, f30, f28, f21 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x49550807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71a73767 # load x3 with value 0x71a73767
sw x3, 0(x2) # store 0x71a73767 in memory
flh f15, 0(x2) # load 0x71a73767 from memory into f15
li x3, 0x93b15fde # load x3 with value 0x93b15fde
sw x3, 0(x2) # store 0x93b15fde in memory
flh f25, 0(x2) # load 0x93b15fde from memory into f25
li x3, 0xef997e1e # load x3 with value 0xef997e1e
sw x3, 0(x2) # store 0xef997e1e in memory
flh f20, 0(x2) # load 0xef997e1e from memory into f20
fnmadd.h f26, f15, f25, f20 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xb55fa243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e3bdbbc # load x3 with value 0x4e3bdbbc
sw x3, 0(x2) # store 0x4e3bdbbc in memory
flh f13, 0(x2) # load 0x4e3bdbbc from memory into f13
li x3, 0x79e99529 # load x3 with value 0x79e99529
sw x3, 0(x2) # store 0x79e99529 in memory
flh f8, 0(x2) # load 0x79e99529 from memory into f8
li x3, 0xaec00f12 # load x3 with value 0xaec00f12
sw x3, 0(x2) # store 0xaec00f12 in memory
flh f29, 0(x2) # load 0xaec00f12 from memory into f29
fnmadd.h f27, f13, f8, f29 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x41a98348 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27274581 # load x3 with value 0x27274581
sw x3, 0(x2) # store 0x27274581 in memory
flh f4, 0(x2) # load 0x27274581 from memory into f4
li x3, 0xf372bff0 # load x3 with value 0xf372bff0
sw x3, 0(x2) # store 0xf372bff0 in memory
flh f16, 0(x2) # load 0xf372bff0 from memory into f16
li x3, 0x7da35fec # load x3 with value 0x7da35fec
sw x3, 0(x2) # store 0x7da35fec in memory
flh f12, 0(x2) # load 0x7da35fec from memory into f12
fnmadd.h f28, f4, f16, f12 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xd3610a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc851935 # load x3 with value 0xfc851935
sw x3, 0(x2) # store 0xfc851935 in memory
flh f10, 0(x2) # load 0xfc851935 from memory into f10
li x3, 0xa03bdc0d # load x3 with value 0xa03bdc0d
sw x3, 0(x2) # store 0xa03bdc0d in memory
flh f31, 0(x2) # load 0xa03bdc0d from memory into f31
li x3, 0x97d1f715 # load x3 with value 0x97d1f715
sw x3, 0(x2) # store 0x97d1f715 in memory
flh f25, 0(x2) # load 0x97d1f715 from memory into f25
fnmadd.h f29, f10, f31, f25 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x2c5202ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4877546d # load x3 with value 0x4877546d
sw x3, 0(x2) # store 0x4877546d in memory
flh f1, 0(x2) # load 0x4877546d from memory into f1
li x3, 0xdedd6acf # load x3 with value 0xdedd6acf
sw x3, 0(x2) # store 0xdedd6acf in memory
flh f29, 0(x2) # load 0xdedd6acf from memory into f29
li x3, 0xc7bb8d83 # load x3 with value 0xc7bb8d83
sw x3, 0(x2) # store 0xc7bb8d83 in memory
flh f14, 0(x2) # load 0xc7bb8d83 from memory into f14
fnmadd.h f30, f1, f29, f14 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xc35c652d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7827d29e # load x3 with value 0x7827d29e
sw x3, 0(x2) # store 0x7827d29e in memory
flh f19, 0(x2) # load 0x7827d29e from memory into f19
li x3, 0xe1325b47 # load x3 with value 0xe1325b47
sw x3, 0(x2) # store 0xe1325b47 in memory
flh f16, 0(x2) # load 0xe1325b47 from memory into f16
li x3, 0x4cdf6a84 # load x3 with value 0x4cdf6a84
sw x3, 0(x2) # store 0x4cdf6a84 in memory
flh f4, 0(x2) # load 0x4cdf6a84 from memory into f4
fnmadd.h f31, f19, f16, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x5, 0x77426fea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d070ef2 # load x3 with value 0x8d070ef2
sw x3, 0(x2) # store 0x8d070ef2 in memory
flh f0, 0(x2) # load 0x8d070ef2 from memory into f0
li x3, 0x987182b9 # load x3 with value 0x987182b9
sw x3, 0(x2) # store 0x987182b9 in memory
flh f17, 0(x2) # load 0x987182b9 from memory into f17
li x3, 0x32c21f06 # load x3 with value 0x32c21f06
sw x3, 0(x2) # store 0x32c21f06 in memory
flh f4, 0(x2) # load 0x32c21f06 from memory into f4
fnmadd.h f5, f0, f17, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x21, 0xc0446f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x427346b8 # load x3 with value 0x427346b8
sw x3, 0(x2) # store 0x427346b8 in memory
flh f1, 0(x2) # load 0x427346b8 from memory into f1
li x3, 0xb13089f6 # load x3 with value 0xb13089f6
sw x3, 0(x2) # store 0xb13089f6 in memory
flh f17, 0(x2) # load 0xb13089f6 from memory into f17
li x3, 0xa2d9982e # load x3 with value 0xa2d9982e
sw x3, 0(x2) # store 0xa2d9982e in memory
flh f31, 0(x2) # load 0xa2d9982e from memory into f31
fnmadd.h f21, f1, f17, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x10, 0x6296ec8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x322bdcc1 # load x3 with value 0x322bdcc1
sw x3, 0(x2) # store 0x322bdcc1 in memory
flh f2, 0(x2) # load 0x322bdcc1 from memory into f2
li x3, 0x7e9e8d90 # load x3 with value 0x7e9e8d90
sw x3, 0(x2) # store 0x7e9e8d90 in memory
flh f13, 0(x2) # load 0x7e9e8d90 from memory into f13
li x3, 0x174bc42c # load x3 with value 0x174bc42c
sw x3, 0(x2) # store 0x174bc42c in memory
flh f1, 0(x2) # load 0x174bc42c from memory into f1
fnmadd.h f10, f2, f13, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x21, 0xd03e2230 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8afa349d # load x3 with value 0x8afa349d
sw x3, 0(x2) # store 0x8afa349d in memory
flh f3, 0(x2) # load 0x8afa349d from memory into f3
li x3, 0xfcd6cd12 # load x3 with value 0xfcd6cd12
sw x3, 0(x2) # store 0xfcd6cd12 in memory
flh f18, 0(x2) # load 0xfcd6cd12 from memory into f18
li x3, 0xff1c0c0b # load x3 with value 0xff1c0c0b
sw x3, 0(x2) # store 0xff1c0c0b in memory
flh f26, 0(x2) # load 0xff1c0c0b from memory into f26
fnmadd.h f21, f3, f18, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x27, 0x3e6d75d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc409be6b # load x3 with value 0xc409be6b
sw x3, 0(x2) # store 0xc409be6b in memory
flh f4, 0(x2) # load 0xc409be6b from memory into f4
li x3, 0x750da3e0 # load x3 with value 0x750da3e0
sw x3, 0(x2) # store 0x750da3e0 in memory
flh f7, 0(x2) # load 0x750da3e0 from memory into f7
li x3, 0xaccfd7a8 # load x3 with value 0xaccfd7a8
sw x3, 0(x2) # store 0xaccfd7a8 in memory
flh f14, 0(x2) # load 0xaccfd7a8 from memory into f14
fnmadd.h f27, f4, f7, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x23, 0xad8e5c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52220b54 # load x3 with value 0x52220b54
sw x3, 0(x2) # store 0x52220b54 in memory
flh f5, 0(x2) # load 0x52220b54 from memory into f5
li x3, 0x0c78654a # load x3 with value 0x0c78654a
sw x3, 0(x2) # store 0x0c78654a in memory
flh f22, 0(x2) # load 0x0c78654a from memory into f22
li x3, 0x882119bd # load x3 with value 0x882119bd
sw x3, 0(x2) # store 0x882119bd in memory
flh f26, 0(x2) # load 0x882119bd from memory into f26
fnmadd.h f23, f5, f22, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x19, 0x9bccbe89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37bb5395 # load x3 with value 0x37bb5395
sw x3, 0(x2) # store 0x37bb5395 in memory
flh f6, 0(x2) # load 0x37bb5395 from memory into f6
li x3, 0xf9c809de # load x3 with value 0xf9c809de
sw x3, 0(x2) # store 0xf9c809de in memory
flh f23, 0(x2) # load 0xf9c809de from memory into f23
li x3, 0x5570b2eb # load x3 with value 0x5570b2eb
sw x3, 0(x2) # store 0x5570b2eb in memory
flh f10, 0(x2) # load 0x5570b2eb from memory into f10
fnmadd.h f19, f6, f23, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x18, 0x002b9f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77728beb # load x3 with value 0x77728beb
sw x3, 0(x2) # store 0x77728beb in memory
flh f7, 0(x2) # load 0x77728beb from memory into f7
li x3, 0xf912905f # load x3 with value 0xf912905f
sw x3, 0(x2) # store 0xf912905f in memory
flh f1, 0(x2) # load 0xf912905f from memory into f1
li x3, 0xb0bb842a # load x3 with value 0xb0bb842a
sw x3, 0(x2) # store 0xb0bb842a in memory
flh f19, 0(x2) # load 0xb0bb842a from memory into f19
fnmadd.h f18, f7, f1, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x5, 0xba27c516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf71944d3 # load x3 with value 0xf71944d3
sw x3, 0(x2) # store 0xf71944d3 in memory
flh f8, 0(x2) # load 0xf71944d3 from memory into f8
li x3, 0x70071223 # load x3 with value 0x70071223
sw x3, 0(x2) # store 0x70071223 in memory
flh f20, 0(x2) # load 0x70071223 from memory into f20
li x3, 0x982a7050 # load x3 with value 0x982a7050
sw x3, 0(x2) # store 0x982a7050 in memory
flh f6, 0(x2) # load 0x982a7050 from memory into f6
fnmadd.h f5, f8, f20, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x11, 0xa2ac0404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x088a3081 # load x3 with value 0x088a3081
sw x3, 0(x2) # store 0x088a3081 in memory
flh f9, 0(x2) # load 0x088a3081 from memory into f9
li x3, 0x1773f624 # load x3 with value 0x1773f624
sw x3, 0(x2) # store 0x1773f624 in memory
flh f28, 0(x2) # load 0x1773f624 from memory into f28
li x3, 0x6b1f462d # load x3 with value 0x6b1f462d
sw x3, 0(x2) # store 0x6b1f462d in memory
flh f26, 0(x2) # load 0x6b1f462d from memory into f26
fnmadd.h f11, f9, f28, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x12, 0x2899bf68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x571575dd # load x3 with value 0x571575dd
sw x3, 0(x2) # store 0x571575dd in memory
flh f10, 0(x2) # load 0x571575dd from memory into f10
li x3, 0x53146e61 # load x3 with value 0x53146e61
sw x3, 0(x2) # store 0x53146e61 in memory
flh f3, 0(x2) # load 0x53146e61 from memory into f3
li x3, 0xb137b5ae # load x3 with value 0xb137b5ae
sw x3, 0(x2) # store 0xb137b5ae in memory
flh f26, 0(x2) # load 0xb137b5ae from memory into f26
fnmadd.h f12, f10, f3, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x23, 0xbdd32330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a634bec # load x3 with value 0x6a634bec
sw x3, 0(x2) # store 0x6a634bec in memory
flh f11, 0(x2) # load 0x6a634bec from memory into f11
li x3, 0x15300725 # load x3 with value 0x15300725
sw x3, 0(x2) # store 0x15300725 in memory
flh f2, 0(x2) # load 0x15300725 from memory into f2
li x3, 0xffda118e # load x3 with value 0xffda118e
sw x3, 0(x2) # store 0xffda118e in memory
flh f24, 0(x2) # load 0xffda118e from memory into f24
fnmadd.h f23, f11, f2, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x11, 0x64c1edfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51fece28 # load x3 with value 0x51fece28
sw x3, 0(x2) # store 0x51fece28 in memory
flh f12, 0(x2) # load 0x51fece28 from memory into f12
li x3, 0x158acb61 # load x3 with value 0x158acb61
sw x3, 0(x2) # store 0x158acb61 in memory
flh f2, 0(x2) # load 0x158acb61 from memory into f2
li x3, 0x72a8a25d # load x3 with value 0x72a8a25d
sw x3, 0(x2) # store 0x72a8a25d in memory
flh f25, 0(x2) # load 0x72a8a25d from memory into f25
fnmadd.h f11, f12, f2, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x3, 0xa92706d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x600021b7 # load x3 with value 0x600021b7
sw x3, 0(x2) # store 0x600021b7 in memory
flh f13, 0(x2) # load 0x600021b7 from memory into f13
li x3, 0x89aceec6 # load x3 with value 0x89aceec6
sw x3, 0(x2) # store 0x89aceec6 in memory
flh f6, 0(x2) # load 0x89aceec6 from memory into f6
li x3, 0xb35a1be8 # load x3 with value 0xb35a1be8
sw x3, 0(x2) # store 0xb35a1be8 in memory
flh f27, 0(x2) # load 0xb35a1be8 from memory into f27
fnmadd.h f3, f13, f6, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x27, 0xd9d2b770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f4a4ddc # load x3 with value 0x0f4a4ddc
sw x3, 0(x2) # store 0x0f4a4ddc in memory
flh f14, 0(x2) # load 0x0f4a4ddc from memory into f14
li x3, 0xbac11723 # load x3 with value 0xbac11723
sw x3, 0(x2) # store 0xbac11723 in memory
flh f26, 0(x2) # load 0xbac11723 from memory into f26
li x3, 0x528a042d # load x3 with value 0x528a042d
sw x3, 0(x2) # store 0x528a042d in memory
flh f5, 0(x2) # load 0x528a042d from memory into f5
fnmadd.h f27, f14, f26, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x30, 0xa8e8659c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec3396e4 # load x3 with value 0xec3396e4
sw x3, 0(x2) # store 0xec3396e4 in memory
flh f15, 0(x2) # load 0xec3396e4 from memory into f15
li x3, 0xa1d86425 # load x3 with value 0xa1d86425
sw x3, 0(x2) # store 0xa1d86425 in memory
flh f8, 0(x2) # load 0xa1d86425 from memory into f8
li x3, 0x9ab2a847 # load x3 with value 0x9ab2a847
sw x3, 0(x2) # store 0x9ab2a847 in memory
flh f12, 0(x2) # load 0x9ab2a847 from memory into f12
fnmadd.h f30, f15, f8, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x4, 0x0cc7b163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37ceb244 # load x3 with value 0x37ceb244
sw x3, 0(x2) # store 0x37ceb244 in memory
flh f16, 0(x2) # load 0x37ceb244 from memory into f16
li x3, 0xaecf2006 # load x3 with value 0xaecf2006
sw x3, 0(x2) # store 0xaecf2006 in memory
flh f30, 0(x2) # load 0xaecf2006 from memory into f30
li x3, 0x74e8db35 # load x3 with value 0x74e8db35
sw x3, 0(x2) # store 0x74e8db35 in memory
flh f5, 0(x2) # load 0x74e8db35 from memory into f5
fnmadd.h f4, f16, f30, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x16, 0x768d2e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x544c71dd # load x3 with value 0x544c71dd
sw x3, 0(x2) # store 0x544c71dd in memory
flh f17, 0(x2) # load 0x544c71dd from memory into f17
li x3, 0xbf9ad77f # load x3 with value 0xbf9ad77f
sw x3, 0(x2) # store 0xbf9ad77f in memory
flh f21, 0(x2) # load 0xbf9ad77f from memory into f21
li x3, 0xb01432dd # load x3 with value 0xb01432dd
sw x3, 0(x2) # store 0xb01432dd in memory
flh f18, 0(x2) # load 0xb01432dd from memory into f18
fnmadd.h f16, f17, f21, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x18, 0xa32d6f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x325a0d5f # load x3 with value 0x325a0d5f
sw x3, 0(x2) # store 0x325a0d5f in memory
flh f18, 0(x2) # load 0x325a0d5f from memory into f18
li x3, 0xaa81d639 # load x3 with value 0xaa81d639
sw x3, 0(x2) # store 0xaa81d639 in memory
flh f10, 0(x2) # load 0xaa81d639 from memory into f10
li x3, 0x6a2d237a # load x3 with value 0x6a2d237a
sw x3, 0(x2) # store 0x6a2d237a in memory
flh f16, 0(x2) # load 0x6a2d237a from memory into f16
fnmadd.h f18, f18, f10, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x2, 0x3b3b4252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4225eb25 # load x3 with value 0x4225eb25
sw x3, 0(x2) # store 0x4225eb25 in memory
flh f19, 0(x2) # load 0x4225eb25 from memory into f19
li x3, 0x4cfd91af # load x3 with value 0x4cfd91af
sw x3, 0(x2) # store 0x4cfd91af in memory
flh f26, 0(x2) # load 0x4cfd91af from memory into f26
li x3, 0x5c6a4762 # load x3 with value 0x5c6a4762
sw x3, 0(x2) # store 0x5c6a4762 in memory
flh f7, 0(x2) # load 0x5c6a4762 from memory into f7
fnmadd.h f2, f19, f26, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x21, 0x9b9b6e37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf250dfa0 # load x3 with value 0xf250dfa0
sw x3, 0(x2) # store 0xf250dfa0 in memory
flh f20, 0(x2) # load 0xf250dfa0 from memory into f20
li x3, 0x65e2161c # load x3 with value 0x65e2161c
sw x3, 0(x2) # store 0x65e2161c in memory
flh f22, 0(x2) # load 0x65e2161c from memory into f22
li x3, 0x5a76c278 # load x3 with value 0x5a76c278
sw x3, 0(x2) # store 0x5a76c278 in memory
flh f24, 0(x2) # load 0x5a76c278 from memory into f24
fnmadd.h f21, f20, f22, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x20, 0x6d696f84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85d847fe # load x3 with value 0x85d847fe
sw x3, 0(x2) # store 0x85d847fe in memory
flh f21, 0(x2) # load 0x85d847fe from memory into f21
li x3, 0x11b4404f # load x3 with value 0x11b4404f
sw x3, 0(x2) # store 0x11b4404f in memory
flh f5, 0(x2) # load 0x11b4404f from memory into f5
li x3, 0x3dec959c # load x3 with value 0x3dec959c
sw x3, 0(x2) # store 0x3dec959c in memory
flh f17, 0(x2) # load 0x3dec959c from memory into f17
fnmadd.h f20, f21, f5, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x13, 0x682bbe9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x105793b5 # load x3 with value 0x105793b5
sw x3, 0(x2) # store 0x105793b5 in memory
flh f22, 0(x2) # load 0x105793b5 from memory into f22
li x3, 0xba9898bf # load x3 with value 0xba9898bf
sw x3, 0(x2) # store 0xba9898bf in memory
flh f30, 0(x2) # load 0xba9898bf from memory into f30
li x3, 0xc1ee872f # load x3 with value 0xc1ee872f
sw x3, 0(x2) # store 0xc1ee872f in memory
flh f23, 0(x2) # load 0xc1ee872f from memory into f23
fnmadd.h f13, f22, f30, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x25, 0x61490fca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0aa6d68 # load x3 with value 0xe0aa6d68
sw x3, 0(x2) # store 0xe0aa6d68 in memory
flh f23, 0(x2) # load 0xe0aa6d68 from memory into f23
li x3, 0xaeb80e1b # load x3 with value 0xaeb80e1b
sw x3, 0(x2) # store 0xaeb80e1b in memory
flh f20, 0(x2) # load 0xaeb80e1b from memory into f20
li x3, 0xdbee5d3a # load x3 with value 0xdbee5d3a
sw x3, 0(x2) # store 0xdbee5d3a in memory
flh f8, 0(x2) # load 0xdbee5d3a from memory into f8
fnmadd.h f25, f23, f20, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x18, 0x42b8c913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92157f0f # load x3 with value 0x92157f0f
sw x3, 0(x2) # store 0x92157f0f in memory
flh f24, 0(x2) # load 0x92157f0f from memory into f24
li x3, 0xf5d5b3de # load x3 with value 0xf5d5b3de
sw x3, 0(x2) # store 0xf5d5b3de in memory
flh f31, 0(x2) # load 0xf5d5b3de from memory into f31
li x3, 0xe6ee5720 # load x3 with value 0xe6ee5720
sw x3, 0(x2) # store 0xe6ee5720 in memory
flh f4, 0(x2) # load 0xe6ee5720 from memory into f4
fnmadd.h f18, f24, f31, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x12, 0x9b0f5549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa570b09 # load x3 with value 0xaa570b09
sw x3, 0(x2) # store 0xaa570b09 in memory
flh f25, 0(x2) # load 0xaa570b09 from memory into f25
li x3, 0x7e80f48f # load x3 with value 0x7e80f48f
sw x3, 0(x2) # store 0x7e80f48f in memory
flh f22, 0(x2) # load 0x7e80f48f from memory into f22
li x3, 0xb765f0aa # load x3 with value 0xb765f0aa
sw x3, 0(x2) # store 0xb765f0aa in memory
flh f16, 0(x2) # load 0xb765f0aa from memory into f16
fnmadd.h f12, f25, f22, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x2, 0xbc6c84a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2fdd546 # load x3 with value 0xb2fdd546
sw x3, 0(x2) # store 0xb2fdd546 in memory
flh f26, 0(x2) # load 0xb2fdd546 from memory into f26
li x3, 0x2aeb4b13 # load x3 with value 0x2aeb4b13
sw x3, 0(x2) # store 0x2aeb4b13 in memory
flh f1, 0(x2) # load 0x2aeb4b13 from memory into f1
li x3, 0xd2c0ae9d # load x3 with value 0xd2c0ae9d
sw x3, 0(x2) # store 0xd2c0ae9d in memory
flh f13, 0(x2) # load 0xd2c0ae9d from memory into f13
fnmadd.h f2, f26, f1, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x9, 0x05765229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3e5acfc # load x3 with value 0xb3e5acfc
sw x3, 0(x2) # store 0xb3e5acfc in memory
flh f27, 0(x2) # load 0xb3e5acfc from memory into f27
li x3, 0xd6ef49c1 # load x3 with value 0xd6ef49c1
sw x3, 0(x2) # store 0xd6ef49c1 in memory
flh f5, 0(x2) # load 0xd6ef49c1 from memory into f5
li x3, 0xc1cd439c # load x3 with value 0xc1cd439c
sw x3, 0(x2) # store 0xc1cd439c in memory
flh f7, 0(x2) # load 0xc1cd439c from memory into f7
fnmadd.h f9, f27, f5, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x11, 0x04fb9a54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x912b0d03 # load x3 with value 0x912b0d03
sw x3, 0(x2) # store 0x912b0d03 in memory
flh f28, 0(x2) # load 0x912b0d03 from memory into f28
li x3, 0xb84564af # load x3 with value 0xb84564af
sw x3, 0(x2) # store 0xb84564af in memory
flh f5, 0(x2) # load 0xb84564af from memory into f5
li x3, 0xe8b642ac # load x3 with value 0xe8b642ac
sw x3, 0(x2) # store 0xe8b642ac in memory
flh f29, 0(x2) # load 0xe8b642ac from memory into f29
fnmadd.h f11, f28, f5, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x5, 0x30f8ca43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42b08705 # load x3 with value 0x42b08705
sw x3, 0(x2) # store 0x42b08705 in memory
flh f29, 0(x2) # load 0x42b08705 from memory into f29
li x3, 0xc5795ad9 # load x3 with value 0xc5795ad9
sw x3, 0(x2) # store 0xc5795ad9 in memory
flh f19, 0(x2) # load 0xc5795ad9 from memory into f19
li x3, 0x42b213c7 # load x3 with value 0x42b213c7
sw x3, 0(x2) # store 0x42b213c7 in memory
flh f14, 0(x2) # load 0x42b213c7 from memory into f14
fnmadd.h f5, f29, f19, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x28, 0x2d24b8c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10a4f4a5 # load x3 with value 0x10a4f4a5
sw x3, 0(x2) # store 0x10a4f4a5 in memory
flh f30, 0(x2) # load 0x10a4f4a5 from memory into f30
li x3, 0xdb10d426 # load x3 with value 0xdb10d426
sw x3, 0(x2) # store 0xdb10d426 in memory
flh f22, 0(x2) # load 0xdb10d426 from memory into f22
li x3, 0xe8bb57ed # load x3 with value 0xe8bb57ed
sw x3, 0(x2) # store 0xe8bb57ed in memory
flh f7, 0(x2) # load 0xe8bb57ed from memory into f7
fnmadd.h f28, f30, f22, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x2, 0x52b88c1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8bcf22b # load x3 with value 0xd8bcf22b
sw x3, 0(x2) # store 0xd8bcf22b in memory
flh f31, 0(x2) # load 0xd8bcf22b from memory into f31
li x3, 0x63796a07 # load x3 with value 0x63796a07
sw x3, 0(x2) # store 0x63796a07 in memory
flh f24, 0(x2) # load 0x63796a07 from memory into f24
li x3, 0xa807e381 # load x3 with value 0xa807e381
sw x3, 0(x2) # store 0xa807e381 in memory
flh f25, 0(x2) # load 0xa807e381 from memory into f25
fnmadd.h f2, f31, f24, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x12, 0xbe40e8f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b8643bc # load x3 with value 0x6b8643bc
sw x3, 0(x2) # store 0x6b8643bc in memory
flh f22, 0(x2) # load 0x6b8643bc from memory into f22
li x3, 0xb954653a # load x3 with value 0xb954653a
sw x3, 0(x2) # store 0xb954653a in memory
flh f0, 0(x2) # load 0xb954653a from memory into f0
li x3, 0xe7388244 # load x3 with value 0xe7388244
sw x3, 0(x2) # store 0xe7388244 in memory
flh f16, 0(x2) # load 0xe7388244 from memory into f16
fnmadd.h f12, f22, f0, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x8, 0xb997aa9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe4fc49da # load x3 with value 0xe4fc49da
sw x3, 0(x2) # store 0xe4fc49da in memory
flh f4, 0(x2) # load 0xe4fc49da from memory into f4
li x3, 0xbd65783a # load x3 with value 0xbd65783a
sw x3, 0(x2) # store 0xbd65783a in memory
flh f1, 0(x2) # load 0xbd65783a from memory into f1
li x3, 0x9de8bc82 # load x3 with value 0x9de8bc82
sw x3, 0(x2) # store 0x9de8bc82 in memory
flh f25, 0(x2) # load 0x9de8bc82 from memory into f25
fnmadd.h f8, f4, f1, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x23, 0x773ec8a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x79340f29 # load x3 with value 0x79340f29
sw x3, 0(x2) # store 0x79340f29 in memory
flh f31, 0(x2) # load 0x79340f29 from memory into f31
li x3, 0x80d7bb1c # load x3 with value 0x80d7bb1c
sw x3, 0(x2) # store 0x80d7bb1c in memory
flh f2, 0(x2) # load 0x80d7bb1c from memory into f2
li x3, 0x16bd6152 # load x3 with value 0x16bd6152
sw x3, 0(x2) # store 0x16bd6152 in memory
flh f1, 0(x2) # load 0x16bd6152 from memory into f1
fnmadd.h f23, f31, f2, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x7, 0xb0377d62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3bbbaa93 # load x3 with value 0x3bbbaa93
sw x3, 0(x2) # store 0x3bbbaa93 in memory
flh f24, 0(x2) # load 0x3bbbaa93 from memory into f24
li x3, 0x19ef8e97 # load x3 with value 0x19ef8e97
sw x3, 0(x2) # store 0x19ef8e97 in memory
flh f3, 0(x2) # load 0x19ef8e97 from memory into f3
li x3, 0xfaaf44a6 # load x3 with value 0xfaaf44a6
sw x3, 0(x2) # store 0xfaaf44a6 in memory
flh f21, 0(x2) # load 0xfaaf44a6 from memory into f21
fnmadd.h f7, f24, f3, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x29, 0xbf845ee2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5e0ee22 # load x3 with value 0xd5e0ee22
sw x3, 0(x2) # store 0xd5e0ee22 in memory
flh f30, 0(x2) # load 0xd5e0ee22 from memory into f30
li x3, 0x76bfd4d1 # load x3 with value 0x76bfd4d1
sw x3, 0(x2) # store 0x76bfd4d1 in memory
flh f4, 0(x2) # load 0x76bfd4d1 from memory into f4
li x3, 0xdf6746d7 # load x3 with value 0xdf6746d7
sw x3, 0(x2) # store 0xdf6746d7 in memory
flh f18, 0(x2) # load 0xdf6746d7 from memory into f18
fnmadd.h f29, f30, f4, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x30, 0xe142485d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80d7bb36 # load x3 with value 0x80d7bb36
sw x3, 0(x2) # store 0x80d7bb36 in memory
flh f21, 0(x2) # load 0x80d7bb36 from memory into f21
li x3, 0x7f20287e # load x3 with value 0x7f20287e
sw x3, 0(x2) # store 0x7f20287e in memory
flh f5, 0(x2) # load 0x7f20287e from memory into f5
li x3, 0xf4259220 # load x3 with value 0xf4259220
sw x3, 0(x2) # store 0xf4259220 in memory
flh f26, 0(x2) # load 0xf4259220 from memory into f26
fnmadd.h f30, f21, f5, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x26, 0xded718ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbf07875 # load x3 with value 0xdbf07875
sw x3, 0(x2) # store 0xdbf07875 in memory
flh f31, 0(x2) # load 0xdbf07875 from memory into f31
li x3, 0xbde61116 # load x3 with value 0xbde61116
sw x3, 0(x2) # store 0xbde61116 in memory
flh f6, 0(x2) # load 0xbde61116 from memory into f6
li x3, 0x2f03e5eb # load x3 with value 0x2f03e5eb
sw x3, 0(x2) # store 0x2f03e5eb in memory
flh f3, 0(x2) # load 0x2f03e5eb from memory into f3
fnmadd.h f26, f31, f6, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x22, 0xae656995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87b28cd2 # load x3 with value 0x87b28cd2
sw x3, 0(x2) # store 0x87b28cd2 in memory
flh f14, 0(x2) # load 0x87b28cd2 from memory into f14
li x3, 0x15e211f8 # load x3 with value 0x15e211f8
sw x3, 0(x2) # store 0x15e211f8 in memory
flh f7, 0(x2) # load 0x15e211f8 from memory into f7
li x3, 0xa35cea5a # load x3 with value 0xa35cea5a
sw x3, 0(x2) # store 0xa35cea5a in memory
flh f1, 0(x2) # load 0xa35cea5a from memory into f1
fnmadd.h f22, f14, f7, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x30, 0x60f104f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbbbde5df # load x3 with value 0xbbbde5df
sw x3, 0(x2) # store 0xbbbde5df in memory
flh f18, 0(x2) # load 0xbbbde5df from memory into f18
li x3, 0x3a7b8717 # load x3 with value 0x3a7b8717
sw x3, 0(x2) # store 0x3a7b8717 in memory
flh f8, 0(x2) # load 0x3a7b8717 from memory into f8
li x3, 0x2622375c # load x3 with value 0x2622375c
sw x3, 0(x2) # store 0x2622375c in memory
flh f14, 0(x2) # load 0x2622375c from memory into f14
fnmadd.h f30, f18, f8, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x7, 0x259049d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x82d9955e # load x3 with value 0x82d9955e
sw x3, 0(x2) # store 0x82d9955e in memory
flh f28, 0(x2) # load 0x82d9955e from memory into f28
li x3, 0x22bb3027 # load x3 with value 0x22bb3027
sw x3, 0(x2) # store 0x22bb3027 in memory
flh f9, 0(x2) # load 0x22bb3027 from memory into f9
li x3, 0xc4727b53 # load x3 with value 0xc4727b53
sw x3, 0(x2) # store 0xc4727b53 in memory
flh f24, 0(x2) # load 0xc4727b53 from memory into f24
fnmadd.h f7, f28, f9, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x24, 0x4ba310bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74c28ed9 # load x3 with value 0x74c28ed9
sw x3, 0(x2) # store 0x74c28ed9 in memory
flh f20, 0(x2) # load 0x74c28ed9 from memory into f20
li x3, 0xfb496981 # load x3 with value 0xfb496981
sw x3, 0(x2) # store 0xfb496981 in memory
flh f10, 0(x2) # load 0xfb496981 from memory into f10
li x3, 0x037eac2b # load x3 with value 0x037eac2b
sw x3, 0(x2) # store 0x037eac2b in memory
flh f30, 0(x2) # load 0x037eac2b from memory into f30
fnmadd.h f24, f20, f10, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x25, 0xad6f6705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x36724eaf # load x3 with value 0x36724eaf
sw x3, 0(x2) # store 0x36724eaf in memory
flh f6, 0(x2) # load 0x36724eaf from memory into f6
li x3, 0x1da1f1a6 # load x3 with value 0x1da1f1a6
sw x3, 0(x2) # store 0x1da1f1a6 in memory
flh f11, 0(x2) # load 0x1da1f1a6 from memory into f11
li x3, 0xaed2bd56 # load x3 with value 0xaed2bd56
sw x3, 0(x2) # store 0xaed2bd56 in memory
flh f11, 0(x2) # load 0xaed2bd56 from memory into f11
fnmadd.h f25, f6, f11, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x16, 0x062bd7fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x893c1017 # load x3 with value 0x893c1017
sw x3, 0(x2) # store 0x893c1017 in memory
flh f8, 0(x2) # load 0x893c1017 from memory into f8
li x3, 0xa2bd7ae7 # load x3 with value 0xa2bd7ae7
sw x3, 0(x2) # store 0xa2bd7ae7 in memory
flh f12, 0(x2) # load 0xa2bd7ae7 from memory into f12
li x3, 0x90d8a802 # load x3 with value 0x90d8a802
sw x3, 0(x2) # store 0x90d8a802 in memory
flh f28, 0(x2) # load 0x90d8a802 from memory into f28
fnmadd.h f16, f8, f12, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x2, 0xb486ec0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09b857d4 # load x3 with value 0x09b857d4
sw x3, 0(x2) # store 0x09b857d4 in memory
flh f8, 0(x2) # load 0x09b857d4 from memory into f8
li x3, 0x587e2bbd # load x3 with value 0x587e2bbd
sw x3, 0(x2) # store 0x587e2bbd in memory
flh f13, 0(x2) # load 0x587e2bbd from memory into f13
li x3, 0x79370374 # load x3 with value 0x79370374
sw x3, 0(x2) # store 0x79370374 in memory
flh f13, 0(x2) # load 0x79370374 from memory into f13
fnmadd.h f2, f8, f13, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x2, 0x435e44c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5898adc # load x3 with value 0xc5898adc
sw x3, 0(x2) # store 0xc5898adc in memory
flh f15, 0(x2) # load 0xc5898adc from memory into f15
li x3, 0xa56e9e87 # load x3 with value 0xa56e9e87
sw x3, 0(x2) # store 0xa56e9e87 in memory
flh f14, 0(x2) # load 0xa56e9e87 from memory into f14
li x3, 0xbcb49343 # load x3 with value 0xbcb49343
sw x3, 0(x2) # store 0xbcb49343 in memory
flh f29, 0(x2) # load 0xbcb49343 from memory into f29
fnmadd.h f2, f15, f14, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x12, 0xbaf86ff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4ff179c # load x3 with value 0xf4ff179c
sw x3, 0(x2) # store 0xf4ff179c in memory
flh f18, 0(x2) # load 0xf4ff179c from memory into f18
li x3, 0x101f04eb # load x3 with value 0x101f04eb
sw x3, 0(x2) # store 0x101f04eb in memory
flh f15, 0(x2) # load 0x101f04eb from memory into f15
li x3, 0x639b9eeb # load x3 with value 0x639b9eeb
sw x3, 0(x2) # store 0x639b9eeb in memory
flh f20, 0(x2) # load 0x639b9eeb from memory into f20
fnmadd.h f12, f18, f15, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x11, 0x0a5fcc22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x382fe7a8 # load x3 with value 0x382fe7a8
sw x3, 0(x2) # store 0x382fe7a8 in memory
flh f4, 0(x2) # load 0x382fe7a8 from memory into f4
li x3, 0x996537c3 # load x3 with value 0x996537c3
sw x3, 0(x2) # store 0x996537c3 in memory
flh f16, 0(x2) # load 0x996537c3 from memory into f16
li x3, 0x346f7e2b # load x3 with value 0x346f7e2b
sw x3, 0(x2) # store 0x346f7e2b in memory
flh f8, 0(x2) # load 0x346f7e2b from memory into f8
fnmadd.h f11, f4, f16, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x24, 0x26491be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x405df2ad # load x3 with value 0x405df2ad
sw x3, 0(x2) # store 0x405df2ad in memory
flh f22, 0(x2) # load 0x405df2ad from memory into f22
li x3, 0x728ee86e # load x3 with value 0x728ee86e
sw x3, 0(x2) # store 0x728ee86e in memory
flh f17, 0(x2) # load 0x728ee86e from memory into f17
li x3, 0x3ad59748 # load x3 with value 0x3ad59748
sw x3, 0(x2) # store 0x3ad59748 in memory
flh f14, 0(x2) # load 0x3ad59748 from memory into f14
fnmadd.h f24, f22, f17, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x22, 0xa7fda1d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x495e9894 # load x3 with value 0x495e9894
sw x3, 0(x2) # store 0x495e9894 in memory
flh f24, 0(x2) # load 0x495e9894 from memory into f24
li x3, 0x73da8d02 # load x3 with value 0x73da8d02
sw x3, 0(x2) # store 0x73da8d02 in memory
flh f18, 0(x2) # load 0x73da8d02 from memory into f18
li x3, 0x485fbb1e # load x3 with value 0x485fbb1e
sw x3, 0(x2) # store 0x485fbb1e in memory
flh f20, 0(x2) # load 0x485fbb1e from memory into f20
fnmadd.h f22, f24, f18, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x29, 0x3dc4bca1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44db3439 # load x3 with value 0x44db3439
sw x3, 0(x2) # store 0x44db3439 in memory
flh f31, 0(x2) # load 0x44db3439 from memory into f31
li x3, 0xd768eaef # load x3 with value 0xd768eaef
sw x3, 0(x2) # store 0xd768eaef in memory
flh f19, 0(x2) # load 0xd768eaef from memory into f19
li x3, 0x39baae9a # load x3 with value 0x39baae9a
sw x3, 0(x2) # store 0x39baae9a in memory
flh f4, 0(x2) # load 0x39baae9a from memory into f4
fnmadd.h f29, f31, f19, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x19, 0xc7fd1dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa198c7d # load x3 with value 0xfa198c7d
sw x3, 0(x2) # store 0xfa198c7d in memory
flh f11, 0(x2) # load 0xfa198c7d from memory into f11
li x3, 0x4d5804f5 # load x3 with value 0x4d5804f5
sw x3, 0(x2) # store 0x4d5804f5 in memory
flh f20, 0(x2) # load 0x4d5804f5 from memory into f20
li x3, 0x4fdf1410 # load x3 with value 0x4fdf1410
sw x3, 0(x2) # store 0x4fdf1410 in memory
flh f13, 0(x2) # load 0x4fdf1410 from memory into f13
fnmadd.h f19, f11, f20, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x21, 0xb68f1b8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x79680595 # load x3 with value 0x79680595
sw x3, 0(x2) # store 0x79680595 in memory
flh f31, 0(x2) # load 0x79680595 from memory into f31
li x3, 0x83351f1c # load x3 with value 0x83351f1c
sw x3, 0(x2) # store 0x83351f1c in memory
flh f21, 0(x2) # load 0x83351f1c from memory into f21
li x3, 0x1f8ca958 # load x3 with value 0x1f8ca958
sw x3, 0(x2) # store 0x1f8ca958 in memory
flh f10, 0(x2) # load 0x1f8ca958 from memory into f10
fnmadd.h f21, f31, f21, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x30, 0x7aa57153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x937fac12 # load x3 with value 0x937fac12
sw x3, 0(x2) # store 0x937fac12 in memory
flh f10, 0(x2) # load 0x937fac12 from memory into f10
li x3, 0xa2e83d8d # load x3 with value 0xa2e83d8d
sw x3, 0(x2) # store 0xa2e83d8d in memory
flh f22, 0(x2) # load 0xa2e83d8d from memory into f22
li x3, 0x334cc08a # load x3 with value 0x334cc08a
sw x3, 0(x2) # store 0x334cc08a in memory
flh f8, 0(x2) # load 0x334cc08a from memory into f8
fnmadd.h f30, f10, f22, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x10, 0xdd974148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab1a9024 # load x3 with value 0xab1a9024
sw x3, 0(x2) # store 0xab1a9024 in memory
flh f11, 0(x2) # load 0xab1a9024 from memory into f11
li x3, 0x90000754 # load x3 with value 0x90000754
sw x3, 0(x2) # store 0x90000754 in memory
flh f23, 0(x2) # load 0x90000754 from memory into f23
li x3, 0xddb2f1de # load x3 with value 0xddb2f1de
sw x3, 0(x2) # store 0xddb2f1de in memory
flh f26, 0(x2) # load 0xddb2f1de from memory into f26
fnmadd.h f10, f11, f23, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x12, 0x45d46bad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9289b611 # load x3 with value 0x9289b611
sw x3, 0(x2) # store 0x9289b611 in memory
flh f8, 0(x2) # load 0x9289b611 from memory into f8
li x3, 0x3acbc9e6 # load x3 with value 0x3acbc9e6
sw x3, 0(x2) # store 0x3acbc9e6 in memory
flh f24, 0(x2) # load 0x3acbc9e6 from memory into f24
li x3, 0xc5c5a16d # load x3 with value 0xc5c5a16d
sw x3, 0(x2) # store 0xc5c5a16d in memory
flh f15, 0(x2) # load 0xc5c5a16d from memory into f15
fnmadd.h f12, f8, f24, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x26, 0xfe415506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98893e75 # load x3 with value 0x98893e75
sw x3, 0(x2) # store 0x98893e75 in memory
flh f23, 0(x2) # load 0x98893e75 from memory into f23
li x3, 0x1aa61e86 # load x3 with value 0x1aa61e86
sw x3, 0(x2) # store 0x1aa61e86 in memory
flh f25, 0(x2) # load 0x1aa61e86 from memory into f25
li x3, 0x3c0ab6a3 # load x3 with value 0x3c0ab6a3
sw x3, 0(x2) # store 0x3c0ab6a3 in memory
flh f1, 0(x2) # load 0x3c0ab6a3 from memory into f1
fnmadd.h f26, f23, f25, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x28, 0x8de7672a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd76ab381 # load x3 with value 0xd76ab381
sw x3, 0(x2) # store 0xd76ab381 in memory
flh f14, 0(x2) # load 0xd76ab381 from memory into f14
li x3, 0xf5676a47 # load x3 with value 0xf5676a47
sw x3, 0(x2) # store 0xf5676a47 in memory
flh f26, 0(x2) # load 0xf5676a47 from memory into f26
li x3, 0x7e04d41e # load x3 with value 0x7e04d41e
sw x3, 0(x2) # store 0x7e04d41e in memory
flh f22, 0(x2) # load 0x7e04d41e from memory into f22
fnmadd.h f28, f14, f26, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x11, 0x72b3401e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01d3fbd1 # load x3 with value 0x01d3fbd1
sw x3, 0(x2) # store 0x01d3fbd1 in memory
flh f29, 0(x2) # load 0x01d3fbd1 from memory into f29
li x3, 0x316bc07b # load x3 with value 0x316bc07b
sw x3, 0(x2) # store 0x316bc07b in memory
flh f27, 0(x2) # load 0x316bc07b from memory into f27
li x3, 0xf16f768a # load x3 with value 0xf16f768a
sw x3, 0(x2) # store 0xf16f768a in memory
flh f9, 0(x2) # load 0xf16f768a from memory into f9
fnmadd.h f11, f29, f27, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x17, 0xd0b4cde3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87eaa170 # load x3 with value 0x87eaa170
sw x3, 0(x2) # store 0x87eaa170 in memory
flh f19, 0(x2) # load 0x87eaa170 from memory into f19
li x3, 0x36ba419e # load x3 with value 0x36ba419e
sw x3, 0(x2) # store 0x36ba419e in memory
flh f28, 0(x2) # load 0x36ba419e from memory into f28
li x3, 0xec71da0d # load x3 with value 0xec71da0d
sw x3, 0(x2) # store 0xec71da0d in memory
flh f3, 0(x2) # load 0xec71da0d from memory into f3
fnmadd.h f17, f19, f28, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x7, 0x678d6360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8338ea7 # load x3 with value 0xd8338ea7
sw x3, 0(x2) # store 0xd8338ea7 in memory
flh f24, 0(x2) # load 0xd8338ea7 from memory into f24
li x3, 0x43d16c1a # load x3 with value 0x43d16c1a
sw x3, 0(x2) # store 0x43d16c1a in memory
flh f29, 0(x2) # load 0x43d16c1a from memory into f29
li x3, 0x45f614d9 # load x3 with value 0x45f614d9
sw x3, 0(x2) # store 0x45f614d9 in memory
flh f14, 0(x2) # load 0x45f614d9 from memory into f14
fnmadd.h f7, f24, f29, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x5, 0x8408af32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4a0559d # load x3 with value 0xd4a0559d
sw x3, 0(x2) # store 0xd4a0559d in memory
flh f11, 0(x2) # load 0xd4a0559d from memory into f11
li x3, 0xa1e05b82 # load x3 with value 0xa1e05b82
sw x3, 0(x2) # store 0xa1e05b82 in memory
flh f30, 0(x2) # load 0xa1e05b82 from memory into f30
li x3, 0x2747273a # load x3 with value 0x2747273a
sw x3, 0(x2) # store 0x2747273a in memory
flh f8, 0(x2) # load 0x2747273a from memory into f8
fnmadd.h f5, f11, f30, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x27, 0xdcd7ef52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd8fd9d1 # load x3 with value 0xbd8fd9d1
sw x3, 0(x2) # store 0xbd8fd9d1 in memory
flh f10, 0(x2) # load 0xbd8fd9d1 from memory into f10
li x3, 0x84c4f498 # load x3 with value 0x84c4f498
sw x3, 0(x2) # store 0x84c4f498 in memory
flh f31, 0(x2) # load 0x84c4f498 from memory into f31
li x3, 0xc124a7b6 # load x3 with value 0xc124a7b6
sw x3, 0(x2) # store 0xc124a7b6 in memory
flh f8, 0(x2) # load 0xc124a7b6 from memory into f8
fnmadd.h f27, f10, f31, f8 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
