///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv64/F/WALLY-COV-fnmadd.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x23, x1, x26 # perform first operation
fnmadd.s f12, f9, f16, f14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x2, x31 # perform first operation
fnmadd.s f26, f22, f10, f13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x24, x5 # perform first operation
fnmadd.s f21, f16, f30, f20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f28, f21, f12 # perform first operation
fnmadd.s f12, f28, f28, f23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f1, f31, f6 # perform first operation
fnmadd.s f1, f25, f1, f12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f11, f19, f29 # perform first operation
fnmadd.s f25, f19, f10, f11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f17, f14, f23 # perform first operation
fnmadd.s f17, f9, f10, f20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f9, f14, f13 # perform first operation
fnmadd.s f9, f6, f29, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f3, f5, f9 # perform first operation
fnmadd.s f3, f1, f14, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f22, f17, f21 # perform first operation
fnmadd.s f17, f14, f24, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f31, f16, f23 # perform first operation
fnmadd.s f23, f26, f17, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f16, f5, f20 # perform first operation
fnmadd.s f14, f8, f21, f28 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xfc01b02db9136b6d # load x3 with value 0xfc01b02db9136b6d
sw x3, 0(x2) # store 0xfc01b02db9136b6d in memory
flw f0, 0(x2) # load 0xfc01b02db9136b6d from memory into f0
la x2, scratch
li x3, 0xf8da13ceb937ed40 # load x3 with value 0xf8da13ceb937ed40
sw x3, 0(x2) # store 0xf8da13ceb937ed40 in memory
flw f22, 0(x2) # load 0xf8da13ceb937ed40 from memory into f22
la x2, scratch
li x3, 0x71b7dafde3a21f89 # load x3 with value 0x71b7dafde3a21f89
sw x3, 0(x2) # store 0x71b7dafde3a21f89 in memory
flw f14, 0(x2) # load 0x71b7dafde3a21f89 from memory into f14
fnmadd.s f7, f0, f22, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xc719ce9f6978c2b2 # load x3 with value 0xc719ce9f6978c2b2
sw x3, 0(x2) # store 0xc719ce9f6978c2b2 in memory
flw f1, 0(x2) # load 0xc719ce9f6978c2b2 from memory into f1
la x2, scratch
li x3, 0x6908e85e301711b1 # load x3 with value 0x6908e85e301711b1
sw x3, 0(x2) # store 0x6908e85e301711b1 in memory
flw f29, 0(x2) # load 0x6908e85e301711b1 from memory into f29
la x2, scratch
li x3, 0xbca95916f3450b4a # load x3 with value 0xbca95916f3450b4a
sw x3, 0(x2) # store 0xbca95916f3450b4a in memory
flw f22, 0(x2) # load 0xbca95916f3450b4a from memory into f22
fnmadd.s f3, f1, f29, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x77d77be4cff7c8f4 # load x3 with value 0x77d77be4cff7c8f4
sw x3, 0(x2) # store 0x77d77be4cff7c8f4 in memory
flw f2, 0(x2) # load 0x77d77be4cff7c8f4 from memory into f2
la x2, scratch
li x3, 0x84033ddf1ca23b6a # load x3 with value 0x84033ddf1ca23b6a
sw x3, 0(x2) # store 0x84033ddf1ca23b6a in memory
flw f18, 0(x2) # load 0x84033ddf1ca23b6a from memory into f18
la x2, scratch
li x3, 0x2494337751c35d6d # load x3 with value 0x2494337751c35d6d
sw x3, 0(x2) # store 0x2494337751c35d6d in memory
flw f14, 0(x2) # load 0x2494337751c35d6d from memory into f14
fnmadd.s f15, f2, f18, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x7784fe6d650e2561 # load x3 with value 0x7784fe6d650e2561
sw x3, 0(x2) # store 0x7784fe6d650e2561 in memory
flw f3, 0(x2) # load 0x7784fe6d650e2561 from memory into f3
la x2, scratch
li x3, 0x755ea198905b2ccb # load x3 with value 0x755ea198905b2ccb
sw x3, 0(x2) # store 0x755ea198905b2ccb in memory
flw f29, 0(x2) # load 0x755ea198905b2ccb from memory into f29
la x2, scratch
li x3, 0x9cfcd420d8fa38ed # load x3 with value 0x9cfcd420d8fa38ed
sw x3, 0(x2) # store 0x9cfcd420d8fa38ed in memory
flw f1, 0(x2) # load 0x9cfcd420d8fa38ed from memory into f1
fnmadd.s f6, f3, f29, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x93830c87952a4b5c # load x3 with value 0x93830c87952a4b5c
sw x3, 0(x2) # store 0x93830c87952a4b5c in memory
flw f4, 0(x2) # load 0x93830c87952a4b5c from memory into f4
la x2, scratch
li x3, 0x90581b97242815e1 # load x3 with value 0x90581b97242815e1
sw x3, 0(x2) # store 0x90581b97242815e1 in memory
flw f14, 0(x2) # load 0x90581b97242815e1 from memory into f14
la x2, scratch
li x3, 0x92ef25576645d6b4 # load x3 with value 0x92ef25576645d6b4
sw x3, 0(x2) # store 0x92ef25576645d6b4 in memory
flw f10, 0(x2) # load 0x92ef25576645d6b4 from memory into f10
fnmadd.s f3, f4, f14, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x139cb184c1696913 # load x3 with value 0x139cb184c1696913
sw x3, 0(x2) # store 0x139cb184c1696913 in memory
flw f5, 0(x2) # load 0x139cb184c1696913 from memory into f5
la x2, scratch
li x3, 0xd55985129f0b464c # load x3 with value 0xd55985129f0b464c
sw x3, 0(x2) # store 0xd55985129f0b464c in memory
flw f21, 0(x2) # load 0xd55985129f0b464c from memory into f21
la x2, scratch
li x3, 0x904ef63d166a788e # load x3 with value 0x904ef63d166a788e
sw x3, 0(x2) # store 0x904ef63d166a788e in memory
flw f15, 0(x2) # load 0x904ef63d166a788e from memory into f15
fnmadd.s f12, f5, f21, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3d410133e11a76a7 # load x3 with value 0x3d410133e11a76a7
sw x3, 0(x2) # store 0x3d410133e11a76a7 in memory
flw f6, 0(x2) # load 0x3d410133e11a76a7 from memory into f6
la x2, scratch
li x3, 0x7de3d7f5aa3cb392 # load x3 with value 0x7de3d7f5aa3cb392
sw x3, 0(x2) # store 0x7de3d7f5aa3cb392 in memory
flw f20, 0(x2) # load 0x7de3d7f5aa3cb392 from memory into f20
la x2, scratch
li x3, 0x3b157520a472ac9 # load x3 with value 0x3b157520a472ac9
sw x3, 0(x2) # store 0x3b157520a472ac9 in memory
flw f30, 0(x2) # load 0x3b157520a472ac9 from memory into f30
fnmadd.s f26, f6, f20, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3953d478380e3125 # load x3 with value 0x3953d478380e3125
sw x3, 0(x2) # store 0x3953d478380e3125 in memory
flw f7, 0(x2) # load 0x3953d478380e3125 from memory into f7
la x2, scratch
li x3, 0x1e645c19d3572ddf # load x3 with value 0x1e645c19d3572ddf
sw x3, 0(x2) # store 0x1e645c19d3572ddf in memory
flw f17, 0(x2) # load 0x1e645c19d3572ddf from memory into f17
la x2, scratch
li x3, 0x404d1f4e5c373d90 # load x3 with value 0x404d1f4e5c373d90
sw x3, 0(x2) # store 0x404d1f4e5c373d90 in memory
flw f25, 0(x2) # load 0x404d1f4e5c373d90 from memory into f25
fnmadd.s f19, f7, f17, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x509576bc9515a9a9 # load x3 with value 0x509576bc9515a9a9
sw x3, 0(x2) # store 0x509576bc9515a9a9 in memory
flw f8, 0(x2) # load 0x509576bc9515a9a9 from memory into f8
la x2, scratch
li x3, 0x9540a05cea5ccbe0 # load x3 with value 0x9540a05cea5ccbe0
sw x3, 0(x2) # store 0x9540a05cea5ccbe0 in memory
flw f15, 0(x2) # load 0x9540a05cea5ccbe0 from memory into f15
la x2, scratch
li x3, 0x750c0bd650e37afc # load x3 with value 0x750c0bd650e37afc
sw x3, 0(x2) # store 0x750c0bd650e37afc in memory
flw f30, 0(x2) # load 0x750c0bd650e37afc from memory into f30
fnmadd.s f1, f8, f15, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x904acfbc84526464 # load x3 with value 0x904acfbc84526464
sw x3, 0(x2) # store 0x904acfbc84526464 in memory
flw f9, 0(x2) # load 0x904acfbc84526464 from memory into f9
la x2, scratch
li x3, 0xcf0929e9c2d6db21 # load x3 with value 0xcf0929e9c2d6db21
sw x3, 0(x2) # store 0xcf0929e9c2d6db21 in memory
flw f24, 0(x2) # load 0xcf0929e9c2d6db21 from memory into f24
la x2, scratch
li x3, 0x78e5c8398d5aff21 # load x3 with value 0x78e5c8398d5aff21
sw x3, 0(x2) # store 0x78e5c8398d5aff21 in memory
flw f5, 0(x2) # load 0x78e5c8398d5aff21 from memory into f5
fnmadd.s f25, f9, f24, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x39c3b6964bd5953e # load x3 with value 0x39c3b6964bd5953e
sw x3, 0(x2) # store 0x39c3b6964bd5953e in memory
flw f10, 0(x2) # load 0x39c3b6964bd5953e from memory into f10
la x2, scratch
li x3, 0x1d735abbb93a26dd # load x3 with value 0x1d735abbb93a26dd
sw x3, 0(x2) # store 0x1d735abbb93a26dd in memory
flw f14, 0(x2) # load 0x1d735abbb93a26dd from memory into f14
la x2, scratch
li x3, 0xa8516ac12f4371c8 # load x3 with value 0xa8516ac12f4371c8
sw x3, 0(x2) # store 0xa8516ac12f4371c8 in memory
flw f9, 0(x2) # load 0xa8516ac12f4371c8 from memory into f9
fnmadd.s f17, f10, f14, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0xa623e5bcdae2fda3 # load x3 with value 0xa623e5bcdae2fda3
sw x3, 0(x2) # store 0xa623e5bcdae2fda3 in memory
flw f11, 0(x2) # load 0xa623e5bcdae2fda3 from memory into f11
la x2, scratch
li x3, 0xd77c9e0823e6ac4b # load x3 with value 0xd77c9e0823e6ac4b
sw x3, 0(x2) # store 0xd77c9e0823e6ac4b in memory
flw f21, 0(x2) # load 0xd77c9e0823e6ac4b from memory into f21
la x2, scratch
li x3, 0x62355c17e33317dd # load x3 with value 0x62355c17e33317dd
sw x3, 0(x2) # store 0x62355c17e33317dd in memory
flw f29, 0(x2) # load 0x62355c17e33317dd from memory into f29
fnmadd.s f8, f11, f21, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0xdd2f259efc81037 # load x3 with value 0xdd2f259efc81037
sw x3, 0(x2) # store 0xdd2f259efc81037 in memory
flw f12, 0(x2) # load 0xdd2f259efc81037 from memory into f12
la x2, scratch
li x3, 0x78abd9b7ef949da2 # load x3 with value 0x78abd9b7ef949da2
sw x3, 0(x2) # store 0x78abd9b7ef949da2 in memory
flw f7, 0(x2) # load 0x78abd9b7ef949da2 from memory into f7
la x2, scratch
li x3, 0xe694d4996a00ce2a # load x3 with value 0xe694d4996a00ce2a
sw x3, 0(x2) # store 0xe694d4996a00ce2a in memory
flw f28, 0(x2) # load 0xe694d4996a00ce2a from memory into f28
fnmadd.s f26, f12, f7, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0x3df7f6236fec2c51 # load x3 with value 0x3df7f6236fec2c51
sw x3, 0(x2) # store 0x3df7f6236fec2c51 in memory
flw f13, 0(x2) # load 0x3df7f6236fec2c51 from memory into f13
la x2, scratch
li x3, 0x3bc5e5472664117f # load x3 with value 0x3bc5e5472664117f
sw x3, 0(x2) # store 0x3bc5e5472664117f in memory
flw f14, 0(x2) # load 0x3bc5e5472664117f from memory into f14
la x2, scratch
li x3, 0x846c686818d1a2e7 # load x3 with value 0x846c686818d1a2e7
sw x3, 0(x2) # store 0x846c686818d1a2e7 in memory
flw f5, 0(x2) # load 0x846c686818d1a2e7 from memory into f5
fnmadd.s f17, f13, f14, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x2f7bf0094c5654f1 # load x3 with value 0x2f7bf0094c5654f1
sw x3, 0(x2) # store 0x2f7bf0094c5654f1 in memory
flw f14, 0(x2) # load 0x2f7bf0094c5654f1 from memory into f14
la x2, scratch
li x3, 0xaf2208799784f158 # load x3 with value 0xaf2208799784f158
sw x3, 0(x2) # store 0xaf2208799784f158 in memory
flw f6, 0(x2) # load 0xaf2208799784f158 from memory into f6
la x2, scratch
li x3, 0x52505a363dcfcf7d # load x3 with value 0x52505a363dcfcf7d
sw x3, 0(x2) # store 0x52505a363dcfcf7d in memory
flw f22, 0(x2) # load 0x52505a363dcfcf7d from memory into f22
fnmadd.s f31, f14, f6, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x941f845c46f0435d # load x3 with value 0x941f845c46f0435d
sw x3, 0(x2) # store 0x941f845c46f0435d in memory
flw f15, 0(x2) # load 0x941f845c46f0435d from memory into f15
la x2, scratch
li x3, 0xa7c61ff8170af0e8 # load x3 with value 0xa7c61ff8170af0e8
sw x3, 0(x2) # store 0xa7c61ff8170af0e8 in memory
flw f23, 0(x2) # load 0xa7c61ff8170af0e8 from memory into f23
la x2, scratch
li x3, 0x77b984d823317df4 # load x3 with value 0x77b984d823317df4
sw x3, 0(x2) # store 0x77b984d823317df4 in memory
flw f31, 0(x2) # load 0x77b984d823317df4 from memory into f31
fnmadd.s f15, f15, f23, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x40869df115396dda # load x3 with value 0x40869df115396dda
sw x3, 0(x2) # store 0x40869df115396dda in memory
flw f16, 0(x2) # load 0x40869df115396dda from memory into f16
la x2, scratch
li x3, 0x500f84a464c5c6f6 # load x3 with value 0x500f84a464c5c6f6
sw x3, 0(x2) # store 0x500f84a464c5c6f6 in memory
flw f28, 0(x2) # load 0x500f84a464c5c6f6 from memory into f28
la x2, scratch
li x3, 0x29c65df9548b6720 # load x3 with value 0x29c65df9548b6720
sw x3, 0(x2) # store 0x29c65df9548b6720 in memory
flw f6, 0(x2) # load 0x29c65df9548b6720 from memory into f6
fnmadd.s f19, f16, f28, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xc2ff6879227c834a # load x3 with value 0xc2ff6879227c834a
sw x3, 0(x2) # store 0xc2ff6879227c834a in memory
flw f17, 0(x2) # load 0xc2ff6879227c834a from memory into f17
la x2, scratch
li x3, 0xc41b154f8c9d16fc # load x3 with value 0xc41b154f8c9d16fc
sw x3, 0(x2) # store 0xc41b154f8c9d16fc in memory
flw f9, 0(x2) # load 0xc41b154f8c9d16fc from memory into f9
la x2, scratch
li x3, 0x33256a8da0ac17a # load x3 with value 0x33256a8da0ac17a
sw x3, 0(x2) # store 0x33256a8da0ac17a in memory
flw f6, 0(x2) # load 0x33256a8da0ac17a from memory into f6
fnmadd.s f2, f17, f9, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xc03104206c1b2f43 # load x3 with value 0xc03104206c1b2f43
sw x3, 0(x2) # store 0xc03104206c1b2f43 in memory
flw f18, 0(x2) # load 0xc03104206c1b2f43 from memory into f18
la x2, scratch
li x3, 0x3a6ab25a8f818f8f # load x3 with value 0x3a6ab25a8f818f8f
sw x3, 0(x2) # store 0x3a6ab25a8f818f8f in memory
flw f7, 0(x2) # load 0x3a6ab25a8f818f8f from memory into f7
la x2, scratch
li x3, 0x36f1256622b1a7fb # load x3 with value 0x36f1256622b1a7fb
sw x3, 0(x2) # store 0x36f1256622b1a7fb in memory
flw f19, 0(x2) # load 0x36f1256622b1a7fb from memory into f19
fnmadd.s f21, f18, f7, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xc4cf9ae340acd0a5 # load x3 with value 0xc4cf9ae340acd0a5
sw x3, 0(x2) # store 0xc4cf9ae340acd0a5 in memory
flw f19, 0(x2) # load 0xc4cf9ae340acd0a5 from memory into f19
la x2, scratch
li x3, 0xfb3280c378351cc1 # load x3 with value 0xfb3280c378351cc1
sw x3, 0(x2) # store 0xfb3280c378351cc1 in memory
flw f29, 0(x2) # load 0xfb3280c378351cc1 from memory into f29
la x2, scratch
li x3, 0xd4520153c13201f3 # load x3 with value 0xd4520153c13201f3
sw x3, 0(x2) # store 0xd4520153c13201f3 in memory
flw f20, 0(x2) # load 0xd4520153c13201f3 from memory into f20
fnmadd.s f9, f19, f29, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x11ef0ab126eb2b70 # load x3 with value 0x11ef0ab126eb2b70
sw x3, 0(x2) # store 0x11ef0ab126eb2b70 in memory
flw f20, 0(x2) # load 0x11ef0ab126eb2b70 from memory into f20
la x2, scratch
li x3, 0xc4b92801d128a0fa # load x3 with value 0xc4b92801d128a0fa
sw x3, 0(x2) # store 0xc4b92801d128a0fa in memory
flw f24, 0(x2) # load 0xc4b92801d128a0fa from memory into f24
la x2, scratch
li x3, 0xbcdeb5d9a715d0b0 # load x3 with value 0xbcdeb5d9a715d0b0
sw x3, 0(x2) # store 0xbcdeb5d9a715d0b0 in memory
flw f13, 0(x2) # load 0xbcdeb5d9a715d0b0 from memory into f13
fnmadd.s f17, f20, f24, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0xf1e261a3bab61f68 # load x3 with value 0xf1e261a3bab61f68
sw x3, 0(x2) # store 0xf1e261a3bab61f68 in memory
flw f21, 0(x2) # load 0xf1e261a3bab61f68 from memory into f21
la x2, scratch
li x3, 0x9eda9cc484526203 # load x3 with value 0x9eda9cc484526203
sw x3, 0(x2) # store 0x9eda9cc484526203 in memory
flw f29, 0(x2) # load 0x9eda9cc484526203 from memory into f29
la x2, scratch
li x3, 0x9d4a517fe8f687f5 # load x3 with value 0x9d4a517fe8f687f5
sw x3, 0(x2) # store 0x9d4a517fe8f687f5 in memory
flw f12, 0(x2) # load 0x9d4a517fe8f687f5 from memory into f12
fnmadd.s f23, f21, f29, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x1d28dbe6a4b7b6e9 # load x3 with value 0x1d28dbe6a4b7b6e9
sw x3, 0(x2) # store 0x1d28dbe6a4b7b6e9 in memory
flw f22, 0(x2) # load 0x1d28dbe6a4b7b6e9 from memory into f22
la x2, scratch
li x3, 0xd22040d7b8d85d12 # load x3 with value 0xd22040d7b8d85d12
sw x3, 0(x2) # store 0xd22040d7b8d85d12 in memory
flw f19, 0(x2) # load 0xd22040d7b8d85d12 from memory into f19
la x2, scratch
li x3, 0x1489120bc220d466 # load x3 with value 0x1489120bc220d466
sw x3, 0(x2) # store 0x1489120bc220d466 in memory
flw f8, 0(x2) # load 0x1489120bc220d466 from memory into f8
fnmadd.s f18, f22, f19, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x62e0a88adf972a0f # load x3 with value 0x62e0a88adf972a0f
sw x3, 0(x2) # store 0x62e0a88adf972a0f in memory
flw f23, 0(x2) # load 0x62e0a88adf972a0f from memory into f23
la x2, scratch
li x3, 0x4c1b3593719f1324 # load x3 with value 0x4c1b3593719f1324
sw x3, 0(x2) # store 0x4c1b3593719f1324 in memory
flw f31, 0(x2) # load 0x4c1b3593719f1324 from memory into f31
la x2, scratch
li x3, 0x923501ccce564301 # load x3 with value 0x923501ccce564301
sw x3, 0(x2) # store 0x923501ccce564301 in memory
flw f21, 0(x2) # load 0x923501ccce564301 from memory into f21
fnmadd.s f6, f23, f31, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x63d9980fceb1cd49 # load x3 with value 0x63d9980fceb1cd49
sw x3, 0(x2) # store 0x63d9980fceb1cd49 in memory
flw f24, 0(x2) # load 0x63d9980fceb1cd49 from memory into f24
la x2, scratch
li x3, 0xe548d3953e376b42 # load x3 with value 0xe548d3953e376b42
sw x3, 0(x2) # store 0xe548d3953e376b42 in memory
flw f6, 0(x2) # load 0xe548d3953e376b42 from memory into f6
la x2, scratch
li x3, 0xc5bdfe7b307ddb19 # load x3 with value 0xc5bdfe7b307ddb19
sw x3, 0(x2) # store 0xc5bdfe7b307ddb19 in memory
flw f21, 0(x2) # load 0xc5bdfe7b307ddb19 from memory into f21
fnmadd.s f23, f24, f6, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x7b449b8dc4a15da0 # load x3 with value 0x7b449b8dc4a15da0
sw x3, 0(x2) # store 0x7b449b8dc4a15da0 in memory
flw f25, 0(x2) # load 0x7b449b8dc4a15da0 from memory into f25
la x2, scratch
li x3, 0x50cef28b5515b446 # load x3 with value 0x50cef28b5515b446
sw x3, 0(x2) # store 0x50cef28b5515b446 in memory
flw f31, 0(x2) # load 0x50cef28b5515b446 from memory into f31
la x2, scratch
li x3, 0xd35c8282ed3ef040 # load x3 with value 0xd35c8282ed3ef040
sw x3, 0(x2) # store 0xd35c8282ed3ef040 in memory
flw f1, 0(x2) # load 0xd35c8282ed3ef040 from memory into f1
fnmadd.s f11, f25, f31, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0xc04a60fe47d1db19 # load x3 with value 0xc04a60fe47d1db19
sw x3, 0(x2) # store 0xc04a60fe47d1db19 in memory
flw f26, 0(x2) # load 0xc04a60fe47d1db19 from memory into f26
la x2, scratch
li x3, 0x803bc960e86bdeb0 # load x3 with value 0x803bc960e86bdeb0
sw x3, 0(x2) # store 0x803bc960e86bdeb0 in memory
flw f17, 0(x2) # load 0x803bc960e86bdeb0 from memory into f17
la x2, scratch
li x3, 0xb24ce7415160fff4 # load x3 with value 0xb24ce7415160fff4
sw x3, 0(x2) # store 0xb24ce7415160fff4 in memory
flw f7, 0(x2) # load 0xb24ce7415160fff4 from memory into f7
fnmadd.s f1, f26, f17, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x32480ac7f24a02e2 # load x3 with value 0x32480ac7f24a02e2
sw x3, 0(x2) # store 0x32480ac7f24a02e2 in memory
flw f27, 0(x2) # load 0x32480ac7f24a02e2 from memory into f27
la x2, scratch
li x3, 0xa95a6f0aa5b09869 # load x3 with value 0xa95a6f0aa5b09869
sw x3, 0(x2) # store 0xa95a6f0aa5b09869 in memory
flw f28, 0(x2) # load 0xa95a6f0aa5b09869 from memory into f28
la x2, scratch
li x3, 0x34e8697e2f676dd1 # load x3 with value 0x34e8697e2f676dd1
sw x3, 0(x2) # store 0x34e8697e2f676dd1 in memory
flw f3, 0(x2) # load 0x34e8697e2f676dd1 from memory into f3
fnmadd.s f27, f27, f28, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x6b737987897000c0 # load x3 with value 0x6b737987897000c0
sw x3, 0(x2) # store 0x6b737987897000c0 in memory
flw f28, 0(x2) # load 0x6b737987897000c0 from memory into f28
la x2, scratch
li x3, 0xf0dd768d4ae47c9e # load x3 with value 0xf0dd768d4ae47c9e
sw x3, 0(x2) # store 0xf0dd768d4ae47c9e in memory
flw f8, 0(x2) # load 0xf0dd768d4ae47c9e from memory into f8
la x2, scratch
li x3, 0xd5b3135eb455964a # load x3 with value 0xd5b3135eb455964a
sw x3, 0(x2) # store 0xd5b3135eb455964a in memory
flw f26, 0(x2) # load 0xd5b3135eb455964a from memory into f26
fnmadd.s f28, f28, f8, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xde5a0d4368256bb9 # load x3 with value 0xde5a0d4368256bb9
sw x3, 0(x2) # store 0xde5a0d4368256bb9 in memory
flw f29, 0(x2) # load 0xde5a0d4368256bb9 from memory into f29
la x2, scratch
li x3, 0xad917a970c80a8f # load x3 with value 0xad917a970c80a8f
sw x3, 0(x2) # store 0xad917a970c80a8f in memory
flw f25, 0(x2) # load 0xad917a970c80a8f from memory into f25
la x2, scratch
li x3, 0xda9e6bdf4049e05d # load x3 with value 0xda9e6bdf4049e05d
sw x3, 0(x2) # store 0xda9e6bdf4049e05d in memory
flw f20, 0(x2) # load 0xda9e6bdf4049e05d from memory into f20
fnmadd.s f5, f29, f25, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0xa2d51df67d4ff924 # load x3 with value 0xa2d51df67d4ff924
sw x3, 0(x2) # store 0xa2d51df67d4ff924 in memory
flw f30, 0(x2) # load 0xa2d51df67d4ff924 from memory into f30
la x2, scratch
li x3, 0x3e8e351a97e49e91 # load x3 with value 0x3e8e351a97e49e91
sw x3, 0(x2) # store 0x3e8e351a97e49e91 in memory
flw f1, 0(x2) # load 0x3e8e351a97e49e91 from memory into f1
la x2, scratch
li x3, 0x51a2c8baa1023b78 # load x3 with value 0x51a2c8baa1023b78
sw x3, 0(x2) # store 0x51a2c8baa1023b78 in memory
flw f7, 0(x2) # load 0x51a2c8baa1023b78 from memory into f7
fnmadd.s f29, f30, f1, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x4b5dd18b02513f8e # load x3 with value 0x4b5dd18b02513f8e
sw x3, 0(x2) # store 0x4b5dd18b02513f8e in memory
flw f31, 0(x2) # load 0x4b5dd18b02513f8e from memory into f31
la x2, scratch
li x3, 0xef79739e67038b25 # load x3 with value 0xef79739e67038b25
sw x3, 0(x2) # store 0xef79739e67038b25 in memory
flw f23, 0(x2) # load 0xef79739e67038b25 from memory into f23
la x2, scratch
li x3, 0xe9ba5cab99cfae8 # load x3 with value 0xe9ba5cab99cfae8
sw x3, 0(x2) # store 0xe9ba5cab99cfae8 in memory
flw f24, 0(x2) # load 0xe9ba5cab99cfae8 from memory into f24
fnmadd.s f21, f31, f23, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x692cbad1c0378046 # load x3 with value 0x692cbad1c0378046
sw x3, 0(x2) # store 0x692cbad1c0378046 in memory
flw f11, 0(x2) # load 0x692cbad1c0378046 from memory into f11
la x2, scratch
li x3, 0x447ec5cce696496a # load x3 with value 0x447ec5cce696496a
sw x3, 0(x2) # store 0x447ec5cce696496a in memory
flw f0, 0(x2) # load 0x447ec5cce696496a from memory into f0
la x2, scratch
li x3, 0x802767655e86b065 # load x3 with value 0x802767655e86b065
sw x3, 0(x2) # store 0x802767655e86b065 in memory
flw f12, 0(x2) # load 0x802767655e86b065 from memory into f12
fnmadd.s f31, f11, f0, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x50d495f630d23d15 # load x3 with value 0x50d495f630d23d15
sw x3, 0(x2) # store 0x50d495f630d23d15 in memory
flw f12, 0(x2) # load 0x50d495f630d23d15 from memory into f12
la x2, scratch
li x3, 0x6c2a0a94955250b5 # load x3 with value 0x6c2a0a94955250b5
sw x3, 0(x2) # store 0x6c2a0a94955250b5 in memory
flw f1, 0(x2) # load 0x6c2a0a94955250b5 from memory into f1
la x2, scratch
li x3, 0x6b30743f9eb6e0b8 # load x3 with value 0x6b30743f9eb6e0b8
sw x3, 0(x2) # store 0x6b30743f9eb6e0b8 in memory
flw f25, 0(x2) # load 0x6b30743f9eb6e0b8 from memory into f25
fnmadd.s f7, f12, f1, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x4e7f3b9caa15112a # load x3 with value 0x4e7f3b9caa15112a
sw x3, 0(x2) # store 0x4e7f3b9caa15112a in memory
flw f13, 0(x2) # load 0x4e7f3b9caa15112a from memory into f13
la x2, scratch
li x3, 0x5df8c7f1660b1130 # load x3 with value 0x5df8c7f1660b1130
sw x3, 0(x2) # store 0x5df8c7f1660b1130 in memory
flw f2, 0(x2) # load 0x5df8c7f1660b1130 from memory into f2
la x2, scratch
li x3, 0xec2360c89a84ae8b # load x3 with value 0xec2360c89a84ae8b
sw x3, 0(x2) # store 0xec2360c89a84ae8b in memory
flw f6, 0(x2) # load 0xec2360c89a84ae8b from memory into f6
fnmadd.s f25, f13, f2, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x3043bfe4d348fcc0 # load x3 with value 0x3043bfe4d348fcc0
sw x3, 0(x2) # store 0x3043bfe4d348fcc0 in memory
flw f12, 0(x2) # load 0x3043bfe4d348fcc0 from memory into f12
la x2, scratch
li x3, 0x1a4d4cbdc5f07911 # load x3 with value 0x1a4d4cbdc5f07911
sw x3, 0(x2) # store 0x1a4d4cbdc5f07911 in memory
flw f3, 0(x2) # load 0x1a4d4cbdc5f07911 from memory into f3
la x2, scratch
li x3, 0x74e6d70aad7c0fc3 # load x3 with value 0x74e6d70aad7c0fc3
sw x3, 0(x2) # store 0x74e6d70aad7c0fc3 in memory
flw f25, 0(x2) # load 0x74e6d70aad7c0fc3 from memory into f25
fnmadd.s f17, f12, f3, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3471ff9ca4990de1 # load x3 with value 0x3471ff9ca4990de1
sw x3, 0(x2) # store 0x3471ff9ca4990de1 in memory
flw f17, 0(x2) # load 0x3471ff9ca4990de1 from memory into f17
la x2, scratch
li x3, 0xb84118d0c966c71d # load x3 with value 0xb84118d0c966c71d
sw x3, 0(x2) # store 0xb84118d0c966c71d in memory
flw f4, 0(x2) # load 0xb84118d0c966c71d from memory into f4
la x2, scratch
li x3, 0xdd57d283b521c66 # load x3 with value 0xdd57d283b521c66
sw x3, 0(x2) # store 0xdd57d283b521c66 in memory
flw f1, 0(x2) # load 0xdd57d283b521c66 from memory into f1
fnmadd.s f8, f17, f4, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x61688b932eba643d # load x3 with value 0x61688b932eba643d
sw x3, 0(x2) # store 0x61688b932eba643d in memory
flw f29, 0(x2) # load 0x61688b932eba643d from memory into f29
la x2, scratch
li x3, 0xb4ccdbe37fdae2c # load x3 with value 0xb4ccdbe37fdae2c
sw x3, 0(x2) # store 0xb4ccdbe37fdae2c in memory
flw f5, 0(x2) # load 0xb4ccdbe37fdae2c from memory into f5
la x2, scratch
li x3, 0x8b81a0ba1f573105 # load x3 with value 0x8b81a0ba1f573105
sw x3, 0(x2) # store 0x8b81a0ba1f573105 in memory
flw f28, 0(x2) # load 0x8b81a0ba1f573105 from memory into f28
fnmadd.s f7, f29, f5, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8b0f8b9088dc917e # load x3 with value 0x8b0f8b9088dc917e
sw x3, 0(x2) # store 0x8b0f8b9088dc917e in memory
flw f31, 0(x2) # load 0x8b0f8b9088dc917e from memory into f31
la x2, scratch
li x3, 0x40d326d0ab84f59d # load x3 with value 0x40d326d0ab84f59d
sw x3, 0(x2) # store 0x40d326d0ab84f59d in memory
flw f6, 0(x2) # load 0x40d326d0ab84f59d from memory into f6
la x2, scratch
li x3, 0xdd6139eb96a36389 # load x3 with value 0xdd6139eb96a36389
sw x3, 0(x2) # store 0xdd6139eb96a36389 in memory
flw f23, 0(x2) # load 0xdd6139eb96a36389 from memory into f23
fnmadd.s f10, f31, f6, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x306adef52b7f3492 # load x3 with value 0x306adef52b7f3492
sw x3, 0(x2) # store 0x306adef52b7f3492 in memory
flw f17, 0(x2) # load 0x306adef52b7f3492 from memory into f17
la x2, scratch
li x3, 0x7f905a7033810cb7 # load x3 with value 0x7f905a7033810cb7
sw x3, 0(x2) # store 0x7f905a7033810cb7 in memory
flw f7, 0(x2) # load 0x7f905a7033810cb7 from memory into f7
la x2, scratch
li x3, 0x92058831db83c682 # load x3 with value 0x92058831db83c682
sw x3, 0(x2) # store 0x92058831db83c682 in memory
flw f15, 0(x2) # load 0x92058831db83c682 from memory into f15
fnmadd.s f12, f17, f7, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0x523cad28689d1a51 # load x3 with value 0x523cad28689d1a51
sw x3, 0(x2) # store 0x523cad28689d1a51 in memory
flw f7, 0(x2) # load 0x523cad28689d1a51 from memory into f7
la x2, scratch
li x3, 0x2a1f76390533b20d # load x3 with value 0x2a1f76390533b20d
sw x3, 0(x2) # store 0x2a1f76390533b20d in memory
flw f8, 0(x2) # load 0x2a1f76390533b20d from memory into f8
la x2, scratch
li x3, 0xc4bc6c8b05ae2c61 # load x3 with value 0xc4bc6c8b05ae2c61
sw x3, 0(x2) # store 0xc4bc6c8b05ae2c61 in memory
flw f27, 0(x2) # load 0xc4bc6c8b05ae2c61 from memory into f27
fnmadd.s f22, f7, f8, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xc57cc531fb181091 # load x3 with value 0xc57cc531fb181091
sw x3, 0(x2) # store 0xc57cc531fb181091 in memory
flw f14, 0(x2) # load 0xc57cc531fb181091 from memory into f14
la x2, scratch
li x3, 0xe59f595fa84e04de # load x3 with value 0xe59f595fa84e04de
sw x3, 0(x2) # store 0xe59f595fa84e04de in memory
flw f9, 0(x2) # load 0xe59f595fa84e04de from memory into f9
la x2, scratch
li x3, 0xe1577c5759602cca # load x3 with value 0xe1577c5759602cca
sw x3, 0(x2) # store 0xe1577c5759602cca in memory
flw f18, 0(x2) # load 0xe1577c5759602cca from memory into f18
fnmadd.s f15, f14, f9, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x8752e00b09e61d17 # load x3 with value 0x8752e00b09e61d17
sw x3, 0(x2) # store 0x8752e00b09e61d17 in memory
flw f31, 0(x2) # load 0x8752e00b09e61d17 from memory into f31
la x2, scratch
li x3, 0xd580301cf923d424 # load x3 with value 0xd580301cf923d424
sw x3, 0(x2) # store 0xd580301cf923d424 in memory
flw f10, 0(x2) # load 0xd580301cf923d424 from memory into f10
la x2, scratch
li x3, 0x2ae79a0b2fe9724c # load x3 with value 0x2ae79a0b2fe9724c
sw x3, 0(x2) # store 0x2ae79a0b2fe9724c in memory
flw f19, 0(x2) # load 0x2ae79a0b2fe9724c from memory into f19
fnmadd.s f20, f31, f10, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x7ce0998eb8e5968c # load x3 with value 0x7ce0998eb8e5968c
sw x3, 0(x2) # store 0x7ce0998eb8e5968c in memory
flw f17, 0(x2) # load 0x7ce0998eb8e5968c from memory into f17
la x2, scratch
li x3, 0xa416c4a20a4a1651 # load x3 with value 0xa416c4a20a4a1651
sw x3, 0(x2) # store 0xa416c4a20a4a1651 in memory
flw f11, 0(x2) # load 0xa416c4a20a4a1651 from memory into f11
la x2, scratch
li x3, 0xa18f1b8cd7c358d4 # load x3 with value 0xa18f1b8cd7c358d4
sw x3, 0(x2) # store 0xa18f1b8cd7c358d4 in memory
flw f14, 0(x2) # load 0xa18f1b8cd7c358d4 from memory into f14
fnmadd.s f8, f17, f11, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xa96e7bc7bbe12ca3 # load x3 with value 0xa96e7bc7bbe12ca3
sw x3, 0(x2) # store 0xa96e7bc7bbe12ca3 in memory
flw f13, 0(x2) # load 0xa96e7bc7bbe12ca3 from memory into f13
la x2, scratch
li x3, 0xa3aada2d10975166 # load x3 with value 0xa3aada2d10975166
sw x3, 0(x2) # store 0xa3aada2d10975166 in memory
flw f12, 0(x2) # load 0xa3aada2d10975166 from memory into f12
la x2, scratch
li x3, 0xcd24a5cd7032c8 # load x3 with value 0xcd24a5cd7032c8
sw x3, 0(x2) # store 0xcd24a5cd7032c8 in memory
flw f23, 0(x2) # load 0xcd24a5cd7032c8 from memory into f23
fnmadd.s f25, f13, f12, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x85e1ad462e523393 # load x3 with value 0x85e1ad462e523393
sw x3, 0(x2) # store 0x85e1ad462e523393 in memory
flw f9, 0(x2) # load 0x85e1ad462e523393 from memory into f9
la x2, scratch
li x3, 0x3debee58396f3f5a # load x3 with value 0x3debee58396f3f5a
sw x3, 0(x2) # store 0x3debee58396f3f5a in memory
flw f13, 0(x2) # load 0x3debee58396f3f5a from memory into f13
la x2, scratch
li x3, 0xb690d5fef3ba3cb3 # load x3 with value 0xb690d5fef3ba3cb3
sw x3, 0(x2) # store 0xb690d5fef3ba3cb3 in memory
flw f12, 0(x2) # load 0xb690d5fef3ba3cb3 from memory into f12
fnmadd.s f7, f9, f13, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x2a4e2cea4eac4dfa # load x3 with value 0x2a4e2cea4eac4dfa
sw x3, 0(x2) # store 0x2a4e2cea4eac4dfa in memory
flw f9, 0(x2) # load 0x2a4e2cea4eac4dfa from memory into f9
la x2, scratch
li x3, 0x37b273dbc26a367 # load x3 with value 0x37b273dbc26a367
sw x3, 0(x2) # store 0x37b273dbc26a367 in memory
flw f14, 0(x2) # load 0x37b273dbc26a367 from memory into f14
la x2, scratch
li x3, 0x5ae807e048255460 # load x3 with value 0x5ae807e048255460
sw x3, 0(x2) # store 0x5ae807e048255460 in memory
flw f2, 0(x2) # load 0x5ae807e048255460 from memory into f2
fnmadd.s f8, f9, f14, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0xfea8a9a9f92d3a27 # load x3 with value 0xfea8a9a9f92d3a27
sw x3, 0(x2) # store 0xfea8a9a9f92d3a27 in memory
flw f5, 0(x2) # load 0xfea8a9a9f92d3a27 from memory into f5
la x2, scratch
li x3, 0xf4ac9e3968dccb6a # load x3 with value 0xf4ac9e3968dccb6a
sw x3, 0(x2) # store 0xf4ac9e3968dccb6a in memory
flw f15, 0(x2) # load 0xf4ac9e3968dccb6a from memory into f15
la x2, scratch
li x3, 0xf8679f2daa7e9849 # load x3 with value 0xf8679f2daa7e9849
sw x3, 0(x2) # store 0xf8679f2daa7e9849 in memory
flw f22, 0(x2) # load 0xf8679f2daa7e9849 from memory into f22
fnmadd.s f25, f5, f15, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x8b3974ff0df82890 # load x3 with value 0x8b3974ff0df82890
sw x3, 0(x2) # store 0x8b3974ff0df82890 in memory
flw f27, 0(x2) # load 0x8b3974ff0df82890 from memory into f27
la x2, scratch
li x3, 0x773c85fe71b7cc6e # load x3 with value 0x773c85fe71b7cc6e
sw x3, 0(x2) # store 0x773c85fe71b7cc6e in memory
flw f16, 0(x2) # load 0x773c85fe71b7cc6e from memory into f16
la x2, scratch
li x3, 0x59a645732153c3dc # load x3 with value 0x59a645732153c3dc
sw x3, 0(x2) # store 0x59a645732153c3dc in memory
flw f19, 0(x2) # load 0x59a645732153c3dc from memory into f19
fnmadd.s f9, f27, f16, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x35655f0863cef877 # load x3 with value 0x35655f0863cef877
sw x3, 0(x2) # store 0x35655f0863cef877 in memory
flw f29, 0(x2) # load 0x35655f0863cef877 from memory into f29
la x2, scratch
li x3, 0xc5b784d6de67551 # load x3 with value 0xc5b784d6de67551
sw x3, 0(x2) # store 0xc5b784d6de67551 in memory
flw f17, 0(x2) # load 0xc5b784d6de67551 from memory into f17
la x2, scratch
li x3, 0xac02963441074f7a # load x3 with value 0xac02963441074f7a
sw x3, 0(x2) # store 0xac02963441074f7a in memory
flw f12, 0(x2) # load 0xac02963441074f7a from memory into f12
fnmadd.s f19, f29, f17, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0xa32378b7972e09f7 # load x3 with value 0xa32378b7972e09f7
sw x3, 0(x2) # store 0xa32378b7972e09f7 in memory
flw f6, 0(x2) # load 0xa32378b7972e09f7 from memory into f6
la x2, scratch
li x3, 0x2318999f9dc55309 # load x3 with value 0x2318999f9dc55309
sw x3, 0(x2) # store 0x2318999f9dc55309 in memory
flw f18, 0(x2) # load 0x2318999f9dc55309 from memory into f18
la x2, scratch
li x3, 0x6e50727e3ebaed26 # load x3 with value 0x6e50727e3ebaed26
sw x3, 0(x2) # store 0x6e50727e3ebaed26 in memory
flw f28, 0(x2) # load 0x6e50727e3ebaed26 from memory into f28
fnmadd.s f29, f6, f18, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x7be2ae077fced62d # load x3 with value 0x7be2ae077fced62d
sw x3, 0(x2) # store 0x7be2ae077fced62d in memory
flw f23, 0(x2) # load 0x7be2ae077fced62d from memory into f23
la x2, scratch
li x3, 0x29750d8304c608dc # load x3 with value 0x29750d8304c608dc
sw x3, 0(x2) # store 0x29750d8304c608dc in memory
flw f19, 0(x2) # load 0x29750d8304c608dc from memory into f19
la x2, scratch
li x3, 0xf6a651e56f9fedee # load x3 with value 0xf6a651e56f9fedee
sw x3, 0(x2) # store 0xf6a651e56f9fedee in memory
flw f14, 0(x2) # load 0xf6a651e56f9fedee from memory into f14
fnmadd.s f26, f23, f19, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x3a9140fa59372595 # load x3 with value 0x3a9140fa59372595
sw x3, 0(x2) # store 0x3a9140fa59372595 in memory
flw f1, 0(x2) # load 0x3a9140fa59372595 from memory into f1
la x2, scratch
li x3, 0x6a01c73d2fa1f284 # load x3 with value 0x6a01c73d2fa1f284
sw x3, 0(x2) # store 0x6a01c73d2fa1f284 in memory
flw f20, 0(x2) # load 0x6a01c73d2fa1f284 from memory into f20
la x2, scratch
li x3, 0xe1b6fec8fe4e9ac3 # load x3 with value 0xe1b6fec8fe4e9ac3
sw x3, 0(x2) # store 0xe1b6fec8fe4e9ac3 in memory
flw f15, 0(x2) # load 0xe1b6fec8fe4e9ac3 from memory into f15
fnmadd.s f3, f1, f20, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x73584ec196f8f233 # load x3 with value 0x73584ec196f8f233
sw x3, 0(x2) # store 0x73584ec196f8f233 in memory
flw f12, 0(x2) # load 0x73584ec196f8f233 from memory into f12
la x2, scratch
li x3, 0x16a6748e3696851e # load x3 with value 0x16a6748e3696851e
sw x3, 0(x2) # store 0x16a6748e3696851e in memory
flw f21, 0(x2) # load 0x16a6748e3696851e from memory into f21
la x2, scratch
li x3, 0xd79ac0013d0f4d9 # load x3 with value 0xd79ac0013d0f4d9
sw x3, 0(x2) # store 0xd79ac0013d0f4d9 in memory
flw f30, 0(x2) # load 0xd79ac0013d0f4d9 from memory into f30
fnmadd.s f23, f12, f21, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x1982667be40e333f # load x3 with value 0x1982667be40e333f
sw x3, 0(x2) # store 0x1982667be40e333f in memory
flw f29, 0(x2) # load 0x1982667be40e333f from memory into f29
la x2, scratch
li x3, 0x279eaee17859faac # load x3 with value 0x279eaee17859faac
sw x3, 0(x2) # store 0x279eaee17859faac in memory
flw f22, 0(x2) # load 0x279eaee17859faac from memory into f22
la x2, scratch
li x3, 0xa03258f6744d08a5 # load x3 with value 0xa03258f6744d08a5
sw x3, 0(x2) # store 0xa03258f6744d08a5 in memory
flw f7, 0(x2) # load 0xa03258f6744d08a5 from memory into f7
fnmadd.s f26, f29, f22, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x521446e763dc2fef # load x3 with value 0x521446e763dc2fef
sw x3, 0(x2) # store 0x521446e763dc2fef in memory
flw f15, 0(x2) # load 0x521446e763dc2fef from memory into f15
la x2, scratch
li x3, 0xab50cfbd3a62bd8b # load x3 with value 0xab50cfbd3a62bd8b
sw x3, 0(x2) # store 0xab50cfbd3a62bd8b in memory
flw f23, 0(x2) # load 0xab50cfbd3a62bd8b from memory into f23
la x2, scratch
li x3, 0xdde61517d211136 # load x3 with value 0xdde61517d211136
sw x3, 0(x2) # store 0xdde61517d211136 in memory
flw f11, 0(x2) # load 0xdde61517d211136 from memory into f11
fnmadd.s f16, f15, f23, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xff8987b702b4144c # load x3 with value 0xff8987b702b4144c
sw x3, 0(x2) # store 0xff8987b702b4144c in memory
flw f31, 0(x2) # load 0xff8987b702b4144c from memory into f31
la x2, scratch
li x3, 0xb1f3e03147be4c28 # load x3 with value 0xb1f3e03147be4c28
sw x3, 0(x2) # store 0xb1f3e03147be4c28 in memory
flw f24, 0(x2) # load 0xb1f3e03147be4c28 from memory into f24
la x2, scratch
li x3, 0xb7dbcd533e8e2c68 # load x3 with value 0xb7dbcd533e8e2c68
sw x3, 0(x2) # store 0xb7dbcd533e8e2c68 in memory
flw f22, 0(x2) # load 0xb7dbcd533e8e2c68 from memory into f22
fnmadd.s f18, f31, f24, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x9d4989abafcb2114 # load x3 with value 0x9d4989abafcb2114
sw x3, 0(x2) # store 0x9d4989abafcb2114 in memory
flw f10, 0(x2) # load 0x9d4989abafcb2114 from memory into f10
la x2, scratch
li x3, 0x347416360f6545f5 # load x3 with value 0x347416360f6545f5
sw x3, 0(x2) # store 0x347416360f6545f5 in memory
flw f25, 0(x2) # load 0x347416360f6545f5 from memory into f25
la x2, scratch
li x3, 0xefe3ac26e0ecf2a # load x3 with value 0xefe3ac26e0ecf2a
sw x3, 0(x2) # store 0xefe3ac26e0ecf2a in memory
flw f30, 0(x2) # load 0xefe3ac26e0ecf2a from memory into f30
fnmadd.s f21, f10, f25, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0xe6cbab7174de0761 # load x3 with value 0xe6cbab7174de0761
sw x3, 0(x2) # store 0xe6cbab7174de0761 in memory
flw f22, 0(x2) # load 0xe6cbab7174de0761 from memory into f22
la x2, scratch
li x3, 0x702cf10e5bd2c1b8 # load x3 with value 0x702cf10e5bd2c1b8
sw x3, 0(x2) # store 0x702cf10e5bd2c1b8 in memory
flw f26, 0(x2) # load 0x702cf10e5bd2c1b8 from memory into f26
la x2, scratch
li x3, 0x5ec00826d9076e3e # load x3 with value 0x5ec00826d9076e3e
sw x3, 0(x2) # store 0x5ec00826d9076e3e in memory
flw f15, 0(x2) # load 0x5ec00826d9076e3e from memory into f15
fnmadd.s f8, f22, f26, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x4ce312955126b4e8 # load x3 with value 0x4ce312955126b4e8
sw x3, 0(x2) # store 0x4ce312955126b4e8 in memory
flw f11, 0(x2) # load 0x4ce312955126b4e8 from memory into f11
la x2, scratch
li x3, 0x6f396f9fb1ac628e # load x3 with value 0x6f396f9fb1ac628e
sw x3, 0(x2) # store 0x6f396f9fb1ac628e in memory
flw f27, 0(x2) # load 0x6f396f9fb1ac628e from memory into f27
la x2, scratch
li x3, 0x290a55c0725efc8d # load x3 with value 0x290a55c0725efc8d
sw x3, 0(x2) # store 0x290a55c0725efc8d in memory
flw f20, 0(x2) # load 0x290a55c0725efc8d from memory into f20
fnmadd.s f6, f11, f27, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x9cbddffa66e935a7 # load x3 with value 0x9cbddffa66e935a7
sw x3, 0(x2) # store 0x9cbddffa66e935a7 in memory
flw f19, 0(x2) # load 0x9cbddffa66e935a7 from memory into f19
la x2, scratch
li x3, 0x4d702d92060e1da7 # load x3 with value 0x4d702d92060e1da7
sw x3, 0(x2) # store 0x4d702d92060e1da7 in memory
flw f28, 0(x2) # load 0x4d702d92060e1da7 from memory into f28
la x2, scratch
li x3, 0x61ac50bf5d1e173 # load x3 with value 0x61ac50bf5d1e173
sw x3, 0(x2) # store 0x61ac50bf5d1e173 in memory
flw f7, 0(x2) # load 0x61ac50bf5d1e173 from memory into f7
fnmadd.s f28, f19, f28, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x109ceb9e6517af97 # load x3 with value 0x109ceb9e6517af97
sw x3, 0(x2) # store 0x109ceb9e6517af97 in memory
flw f15, 0(x2) # load 0x109ceb9e6517af97 from memory into f15
la x2, scratch
li x3, 0x61b089894ac56d7a # load x3 with value 0x61b089894ac56d7a
sw x3, 0(x2) # store 0x61b089894ac56d7a in memory
flw f29, 0(x2) # load 0x61b089894ac56d7a from memory into f29
la x2, scratch
li x3, 0x69cea83c0e57e397 # load x3 with value 0x69cea83c0e57e397
sw x3, 0(x2) # store 0x69cea83c0e57e397 in memory
flw f30, 0(x2) # load 0x69cea83c0e57e397 from memory into f30
fnmadd.s f13, f15, f29, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x88ca98823c71680a # load x3 with value 0x88ca98823c71680a
sw x3, 0(x2) # store 0x88ca98823c71680a in memory
flw f16, 0(x2) # load 0x88ca98823c71680a from memory into f16
la x2, scratch
li x3, 0xd8b07c92b21065b7 # load x3 with value 0xd8b07c92b21065b7
sw x3, 0(x2) # store 0xd8b07c92b21065b7 in memory
flw f30, 0(x2) # load 0xd8b07c92b21065b7 from memory into f30
la x2, scratch
li x3, 0xeee31bcbc1373661 # load x3 with value 0xeee31bcbc1373661
sw x3, 0(x2) # store 0xeee31bcbc1373661 in memory
flw f25, 0(x2) # load 0xeee31bcbc1373661 from memory into f25
fnmadd.s f30, f16, f30, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0xb3e25b3c4e2be3ec # load x3 with value 0xb3e25b3c4e2be3ec
sw x3, 0(x2) # store 0xb3e25b3c4e2be3ec in memory
flw f6, 0(x2) # load 0xb3e25b3c4e2be3ec from memory into f6
la x2, scratch
li x3, 0xc33fb035b4ca022d # load x3 with value 0xc33fb035b4ca022d
sw x3, 0(x2) # store 0xc33fb035b4ca022d in memory
flw f31, 0(x2) # load 0xc33fb035b4ca022d from memory into f31
la x2, scratch
li x3, 0x7f13216d5877eae0 # load x3 with value 0x7f13216d5877eae0
sw x3, 0(x2) # store 0x7f13216d5877eae0 in memory
flw f20, 0(x2) # load 0x7f13216d5877eae0 from memory into f20
fnmadd.s f28, f6, f31, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0xefaa0b88d507814e # load x3 with value 0xefaa0b88d507814e
sw x3, 0(x2) # store 0xefaa0b88d507814e in memory
flw f9, 0(x2) # load 0xefaa0b88d507814e from memory into f9
la x2, scratch
li x3, 0x48d88c3c65afbfce # load x3 with value 0x48d88c3c65afbfce
sw x3, 0(x2) # store 0x48d88c3c65afbfce in memory
flw f25, 0(x2) # load 0x48d88c3c65afbfce from memory into f25
la x2, scratch
li x3, 0xa66c1d60cd08b736 # load x3 with value 0xa66c1d60cd08b736
sw x3, 0(x2) # store 0xa66c1d60cd08b736 in memory
flw f0, 0(x2) # load 0xa66c1d60cd08b736 from memory into f0
fnmadd.s f19, f9, f25, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xac7e256dfcbb2da2 # load x3 with value 0xac7e256dfcbb2da2
sw x3, 0(x2) # store 0xac7e256dfcbb2da2 in memory
flw f27, 0(x2) # load 0xac7e256dfcbb2da2 from memory into f27
la x2, scratch
li x3, 0xca4ed8cbbfa17c1e # load x3 with value 0xca4ed8cbbfa17c1e
sw x3, 0(x2) # store 0xca4ed8cbbfa17c1e in memory
flw f7, 0(x2) # load 0xca4ed8cbbfa17c1e from memory into f7
la x2, scratch
li x3, 0x2db71f76a0bdb84 # load x3 with value 0x2db71f76a0bdb84
sw x3, 0(x2) # store 0x2db71f76a0bdb84 in memory
flw f1, 0(x2) # load 0x2db71f76a0bdb84 from memory into f1
fnmadd.s f18, f27, f7, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0x71d2a7bc3d4c868c # load x3 with value 0x71d2a7bc3d4c868c
sw x3, 0(x2) # store 0x71d2a7bc3d4c868c in memory
flw f18, 0(x2) # load 0x71d2a7bc3d4c868c from memory into f18
la x2, scratch
li x3, 0xc03e6284aa879f7d # load x3 with value 0xc03e6284aa879f7d
sw x3, 0(x2) # store 0xc03e6284aa879f7d in memory
flw f5, 0(x2) # load 0xc03e6284aa879f7d from memory into f5
la x2, scratch
li x3, 0x275e30edb4531ba7 # load x3 with value 0x275e30edb4531ba7
sw x3, 0(x2) # store 0x275e30edb4531ba7 in memory
flw f2, 0(x2) # load 0x275e30edb4531ba7 from memory into f2
fnmadd.s f28, f18, f5, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0xbd1d0691f0fcda08 # load x3 with value 0xbd1d0691f0fcda08
sw x3, 0(x2) # store 0xbd1d0691f0fcda08 in memory
flw f9, 0(x2) # load 0xbd1d0691f0fcda08 from memory into f9
la x2, scratch
li x3, 0x72aa3131feebc267 # load x3 with value 0x72aa3131feebc267
sw x3, 0(x2) # store 0x72aa3131feebc267 in memory
flw f7, 0(x2) # load 0x72aa3131feebc267 from memory into f7
la x2, scratch
li x3, 0x749ccb4897c82a67 # load x3 with value 0x749ccb4897c82a67
sw x3, 0(x2) # store 0x749ccb4897c82a67 in memory
flw f3, 0(x2) # load 0x749ccb4897c82a67 from memory into f3
fnmadd.s f13, f9, f7, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x4899ed5c9140dddb # load x3 with value 0x4899ed5c9140dddb
sw x3, 0(x2) # store 0x4899ed5c9140dddb in memory
flw f19, 0(x2) # load 0x4899ed5c9140dddb from memory into f19
la x2, scratch
li x3, 0x95b7728703d7fd8a # load x3 with value 0x95b7728703d7fd8a
sw x3, 0(x2) # store 0x95b7728703d7fd8a in memory
flw f1, 0(x2) # load 0x95b7728703d7fd8a from memory into f1
la x2, scratch
li x3, 0x48b1b2b6e6893e92 # load x3 with value 0x48b1b2b6e6893e92
sw x3, 0(x2) # store 0x48b1b2b6e6893e92 in memory
flw f4, 0(x2) # load 0x48b1b2b6e6893e92 from memory into f4
fnmadd.s f7, f19, f1, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0xcd775a895fbbb63f # load x3 with value 0xcd775a895fbbb63f
sw x3, 0(x2) # store 0xcd775a895fbbb63f in memory
flw f12, 0(x2) # load 0xcd775a895fbbb63f from memory into f12
la x2, scratch
li x3, 0x92349b358512cc2d # load x3 with value 0x92349b358512cc2d
sw x3, 0(x2) # store 0x92349b358512cc2d in memory
flw f17, 0(x2) # load 0x92349b358512cc2d from memory into f17
la x2, scratch
li x3, 0xcd5c455330388efd # load x3 with value 0xcd5c455330388efd
sw x3, 0(x2) # store 0xcd5c455330388efd in memory
flw f5, 0(x2) # load 0xcd5c455330388efd from memory into f5
fnmadd.s f13, f12, f17, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x2a8c105c4967e963 # load x3 with value 0x2a8c105c4967e963
sw x3, 0(x2) # store 0x2a8c105c4967e963 in memory
flw f25, 0(x2) # load 0x2a8c105c4967e963 from memory into f25
la x2, scratch
li x3, 0x82f4c072654f9158 # load x3 with value 0x82f4c072654f9158
sw x3, 0(x2) # store 0x82f4c072654f9158 in memory
flw f13, 0(x2) # load 0x82f4c072654f9158 from memory into f13
la x2, scratch
li x3, 0x9b2f511c1fe95a5 # load x3 with value 0x9b2f511c1fe95a5
sw x3, 0(x2) # store 0x9b2f511c1fe95a5 in memory
flw f6, 0(x2) # load 0x9b2f511c1fe95a5 from memory into f6
fnmadd.s f21, f25, f13, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0x2527789d8786474e # load x3 with value 0x2527789d8786474e
sw x3, 0(x2) # store 0x2527789d8786474e in memory
flw f2, 0(x2) # load 0x2527789d8786474e from memory into f2
la x2, scratch
li x3, 0x4ba6c18941b6b44c # load x3 with value 0x4ba6c18941b6b44c
sw x3, 0(x2) # store 0x4ba6c18941b6b44c in memory
flw f6, 0(x2) # load 0x4ba6c18941b6b44c from memory into f6
la x2, scratch
li x3, 0x1cc1d95e6cc5a869 # load x3 with value 0x1cc1d95e6cc5a869
sw x3, 0(x2) # store 0x1cc1d95e6cc5a869 in memory
flw f7, 0(x2) # load 0x1cc1d95e6cc5a869 from memory into f7
fnmadd.s f11, f2, f6, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0xa0c021d940f9823e # load x3 with value 0xa0c021d940f9823e
sw x3, 0(x2) # store 0xa0c021d940f9823e in memory
flw f27, 0(x2) # load 0xa0c021d940f9823e from memory into f27
la x2, scratch
li x3, 0x85c8f0ef5cd615a6 # load x3 with value 0x85c8f0ef5cd615a6
sw x3, 0(x2) # store 0x85c8f0ef5cd615a6 in memory
flw f6, 0(x2) # load 0x85c8f0ef5cd615a6 from memory into f6
la x2, scratch
li x3, 0xd0e1e165bf5f6512 # load x3 with value 0xd0e1e165bf5f6512
sw x3, 0(x2) # store 0xd0e1e165bf5f6512 in memory
flw f8, 0(x2) # load 0xd0e1e165bf5f6512 from memory into f8
fnmadd.s f10, f27, f6, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x82bc33c2bbcf1298 # load x3 with value 0x82bc33c2bbcf1298
sw x3, 0(x2) # store 0x82bc33c2bbcf1298 in memory
flw f15, 0(x2) # load 0x82bc33c2bbcf1298 from memory into f15
la x2, scratch
li x3, 0x7fbffd61fd3416b3 # load x3 with value 0x7fbffd61fd3416b3
sw x3, 0(x2) # store 0x7fbffd61fd3416b3 in memory
flw f3, 0(x2) # load 0x7fbffd61fd3416b3 from memory into f3
la x2, scratch
li x3, 0x77f84aea1a82618e # load x3 with value 0x77f84aea1a82618e
sw x3, 0(x2) # store 0x77f84aea1a82618e in memory
flw f9, 0(x2) # load 0x77f84aea1a82618e from memory into f9
fnmadd.s f2, f15, f3, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x698e61328687116a # load x3 with value 0x698e61328687116a
sw x3, 0(x2) # store 0x698e61328687116a in memory
flw f24, 0(x2) # load 0x698e61328687116a from memory into f24
la x2, scratch
li x3, 0x7d838808fcc7a438 # load x3 with value 0x7d838808fcc7a438
sw x3, 0(x2) # store 0x7d838808fcc7a438 in memory
flw f13, 0(x2) # load 0x7d838808fcc7a438 from memory into f13
la x2, scratch
li x3, 0x490177a3260d7af3 # load x3 with value 0x490177a3260d7af3
sw x3, 0(x2) # store 0x490177a3260d7af3 in memory
flw f10, 0(x2) # load 0x490177a3260d7af3 from memory into f10
fnmadd.s f19, f24, f13, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x3e4d25f6ab556638 # load x3 with value 0x3e4d25f6ab556638
sw x3, 0(x2) # store 0x3e4d25f6ab556638 in memory
flw f23, 0(x2) # load 0x3e4d25f6ab556638 from memory into f23
la x2, scratch
li x3, 0xa593a3884c9e8c6 # load x3 with value 0xa593a3884c9e8c6
sw x3, 0(x2) # store 0xa593a3884c9e8c6 in memory
flw f16, 0(x2) # load 0xa593a3884c9e8c6 from memory into f16
la x2, scratch
li x3, 0xf44af2b5986a1e17 # load x3 with value 0xf44af2b5986a1e17
sw x3, 0(x2) # store 0xf44af2b5986a1e17 in memory
flw f11, 0(x2) # load 0xf44af2b5986a1e17 from memory into f11
fnmadd.s f29, f23, f16, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0xff2ef1aab213c135 # load x3 with value 0xff2ef1aab213c135
sw x3, 0(x2) # store 0xff2ef1aab213c135 in memory
flw f31, 0(x2) # load 0xff2ef1aab213c135 from memory into f31
la x2, scratch
li x3, 0x50f1db3cd0dd2cba # load x3 with value 0x50f1db3cd0dd2cba
sw x3, 0(x2) # store 0x50f1db3cd0dd2cba in memory
flw f6, 0(x2) # load 0x50f1db3cd0dd2cba from memory into f6
la x2, scratch
li x3, 0x12cd613620791ee2 # load x3 with value 0x12cd613620791ee2
sw x3, 0(x2) # store 0x12cd613620791ee2 in memory
flw f12, 0(x2) # load 0x12cd613620791ee2 from memory into f12
fnmadd.s f16, f31, f6, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x4625bb11be428277 # load x3 with value 0x4625bb11be428277
sw x3, 0(x2) # store 0x4625bb11be428277 in memory
flw f10, 0(x2) # load 0x4625bb11be428277 from memory into f10
la x2, scratch
li x3, 0x8fbafb72b2bf053f # load x3 with value 0x8fbafb72b2bf053f
sw x3, 0(x2) # store 0x8fbafb72b2bf053f in memory
flw f6, 0(x2) # load 0x8fbafb72b2bf053f from memory into f6
la x2, scratch
li x3, 0xa00589f5a74eeb4e # load x3 with value 0xa00589f5a74eeb4e
sw x3, 0(x2) # store 0xa00589f5a74eeb4e in memory
flw f13, 0(x2) # load 0xa00589f5a74eeb4e from memory into f13
fnmadd.s f17, f10, f6, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x5d8fcd381627bfc6 # load x3 with value 0x5d8fcd381627bfc6
sw x3, 0(x2) # store 0x5d8fcd381627bfc6 in memory
flw f17, 0(x2) # load 0x5d8fcd381627bfc6 from memory into f17
la x2, scratch
li x3, 0xe84793e3f4d1ef7f # load x3 with value 0xe84793e3f4d1ef7f
sw x3, 0(x2) # store 0xe84793e3f4d1ef7f in memory
flw f29, 0(x2) # load 0xe84793e3f4d1ef7f from memory into f29
la x2, scratch
li x3, 0x5daaa0af14ba3221 # load x3 with value 0x5daaa0af14ba3221
sw x3, 0(x2) # store 0x5daaa0af14ba3221 in memory
flw f14, 0(x2) # load 0x5daaa0af14ba3221 from memory into f14
fnmadd.s f15, f17, f29, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0xd51311ef521a62c2 # load x3 with value 0xd51311ef521a62c2
sw x3, 0(x2) # store 0xd51311ef521a62c2 in memory
flw f2, 0(x2) # load 0xd51311ef521a62c2 from memory into f2
la x2, scratch
li x3, 0x78f8b4a3ecb01be1 # load x3 with value 0x78f8b4a3ecb01be1
sw x3, 0(x2) # store 0x78f8b4a3ecb01be1 in memory
flw f11, 0(x2) # load 0x78f8b4a3ecb01be1 from memory into f11
la x2, scratch
li x3, 0x3d22811cca68d735 # load x3 with value 0x3d22811cca68d735
sw x3, 0(x2) # store 0x3d22811cca68d735 in memory
flw f15, 0(x2) # load 0x3d22811cca68d735 from memory into f15
fnmadd.s f8, f2, f11, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x3fbdf4610e0cb014 # load x3 with value 0x3fbdf4610e0cb014
sw x3, 0(x2) # store 0x3fbdf4610e0cb014 in memory
flw f22, 0(x2) # load 0x3fbdf4610e0cb014 from memory into f22
la x2, scratch
li x3, 0x408f24f55a2f8138 # load x3 with value 0x408f24f55a2f8138
sw x3, 0(x2) # store 0x408f24f55a2f8138 in memory
flw f12, 0(x2) # load 0x408f24f55a2f8138 from memory into f12
la x2, scratch
li x3, 0x5d9d0e7460361344 # load x3 with value 0x5d9d0e7460361344
sw x3, 0(x2) # store 0x5d9d0e7460361344 in memory
flw f16, 0(x2) # load 0x5d9d0e7460361344 from memory into f16
fnmadd.s f25, f22, f12, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x4843ffb3d66198fe # load x3 with value 0x4843ffb3d66198fe
sw x3, 0(x2) # store 0x4843ffb3d66198fe in memory
flw f12, 0(x2) # load 0x4843ffb3d66198fe from memory into f12
la x2, scratch
li x3, 0xf2deea80ebeb20ec # load x3 with value 0xf2deea80ebeb20ec
sw x3, 0(x2) # store 0xf2deea80ebeb20ec in memory
flw f16, 0(x2) # load 0xf2deea80ebeb20ec from memory into f16
la x2, scratch
li x3, 0x1a032a2011de5c32 # load x3 with value 0x1a032a2011de5c32
sw x3, 0(x2) # store 0x1a032a2011de5c32 in memory
flw f17, 0(x2) # load 0x1a032a2011de5c32 from memory into f17
fnmadd.s f26, f12, f16, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x10eb6350cda40823 # load x3 with value 0x10eb6350cda40823
sw x3, 0(x2) # store 0x10eb6350cda40823 in memory
flw f24, 0(x2) # load 0x10eb6350cda40823 from memory into f24
la x2, scratch
li x3, 0x9147a23ad518774f # load x3 with value 0x9147a23ad518774f
sw x3, 0(x2) # store 0x9147a23ad518774f in memory
flw f5, 0(x2) # load 0x9147a23ad518774f from memory into f5
la x2, scratch
li x3, 0x387f37224f9523ff # load x3 with value 0x387f37224f9523ff
sw x3, 0(x2) # store 0x387f37224f9523ff in memory
flw f18, 0(x2) # load 0x387f37224f9523ff from memory into f18
fnmadd.s f29, f24, f5, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x2ddda6f6651d801c # load x3 with value 0x2ddda6f6651d801c
sw x3, 0(x2) # store 0x2ddda6f6651d801c in memory
flw f22, 0(x2) # load 0x2ddda6f6651d801c from memory into f22
la x2, scratch
li x3, 0xf90bd1590b985e5e # load x3 with value 0xf90bd1590b985e5e
sw x3, 0(x2) # store 0xf90bd1590b985e5e in memory
flw f14, 0(x2) # load 0xf90bd1590b985e5e from memory into f14
la x2, scratch
li x3, 0x47f2d05eb31c261a # load x3 with value 0x47f2d05eb31c261a
sw x3, 0(x2) # store 0x47f2d05eb31c261a in memory
flw f19, 0(x2) # load 0x47f2d05eb31c261a from memory into f19
fnmadd.s f27, f22, f14, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x9877d304c92edd58 # load x3 with value 0x9877d304c92edd58
sw x3, 0(x2) # store 0x9877d304c92edd58 in memory
flw f1, 0(x2) # load 0x9877d304c92edd58 from memory into f1
la x2, scratch
li x3, 0xae9a2bd1c7c97cb6 # load x3 with value 0xae9a2bd1c7c97cb6
sw x3, 0(x2) # store 0xae9a2bd1c7c97cb6 in memory
flw f18, 0(x2) # load 0xae9a2bd1c7c97cb6 from memory into f18
la x2, scratch
li x3, 0xe49412fb5b5dfe7f # load x3 with value 0xe49412fb5b5dfe7f
sw x3, 0(x2) # store 0xe49412fb5b5dfe7f in memory
flw f20, 0(x2) # load 0xe49412fb5b5dfe7f from memory into f20
fnmadd.s f7, f1, f18, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x509ea6cff2cfc232 # load x3 with value 0x509ea6cff2cfc232
sw x3, 0(x2) # store 0x509ea6cff2cfc232 in memory
flw f6, 0(x2) # load 0x509ea6cff2cfc232 from memory into f6
la x2, scratch
li x3, 0x7924ded870f9513f # load x3 with value 0x7924ded870f9513f
sw x3, 0(x2) # store 0x7924ded870f9513f in memory
flw f10, 0(x2) # load 0x7924ded870f9513f from memory into f10
la x2, scratch
li x3, 0x60433b22cdd061f1 # load x3 with value 0x60433b22cdd061f1
sw x3, 0(x2) # store 0x60433b22cdd061f1 in memory
flw f21, 0(x2) # load 0x60433b22cdd061f1 from memory into f21
fnmadd.s f20, f6, f10, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x9b4fb1e50e516347 # load x3 with value 0x9b4fb1e50e516347
sw x3, 0(x2) # store 0x9b4fb1e50e516347 in memory
flw f3, 0(x2) # load 0x9b4fb1e50e516347 from memory into f3
la x2, scratch
li x3, 0xc3c18faf8a63a1de # load x3 with value 0xc3c18faf8a63a1de
sw x3, 0(x2) # store 0xc3c18faf8a63a1de in memory
flw f10, 0(x2) # load 0xc3c18faf8a63a1de from memory into f10
la x2, scratch
li x3, 0xa2c285e87e1461f8 # load x3 with value 0xa2c285e87e1461f8
sw x3, 0(x2) # store 0xa2c285e87e1461f8 in memory
flw f22, 0(x2) # load 0xa2c285e87e1461f8 from memory into f22
fnmadd.s f1, f3, f10, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x10f9fc59b8514348 # load x3 with value 0x10f9fc59b8514348
sw x3, 0(x2) # store 0x10f9fc59b8514348 in memory
flw f21, 0(x2) # load 0x10f9fc59b8514348 from memory into f21
la x2, scratch
li x3, 0xa65702a5016d76bc # load x3 with value 0xa65702a5016d76bc
sw x3, 0(x2) # store 0xa65702a5016d76bc in memory
flw f14, 0(x2) # load 0xa65702a5016d76bc from memory into f14
la x2, scratch
li x3, 0xb44850509cd0fc67 # load x3 with value 0xb44850509cd0fc67
sw x3, 0(x2) # store 0xb44850509cd0fc67 in memory
flw f23, 0(x2) # load 0xb44850509cd0fc67 from memory into f23
fnmadd.s f17, f21, f14, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0x356ecf60f2a97859 # load x3 with value 0x356ecf60f2a97859
sw x3, 0(x2) # store 0x356ecf60f2a97859 in memory
flw f16, 0(x2) # load 0x356ecf60f2a97859 from memory into f16
la x2, scratch
li x3, 0x2c7c0ad6d4eb18f8 # load x3 with value 0x2c7c0ad6d4eb18f8
sw x3, 0(x2) # store 0x2c7c0ad6d4eb18f8 in memory
flw f2, 0(x2) # load 0x2c7c0ad6d4eb18f8 from memory into f2
la x2, scratch
li x3, 0x60b7854ef523fcc0 # load x3 with value 0x60b7854ef523fcc0
sw x3, 0(x2) # store 0x60b7854ef523fcc0 in memory
flw f24, 0(x2) # load 0x60b7854ef523fcc0 from memory into f24
fnmadd.s f5, f16, f2, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0xaa6ee6be0f6df629 # load x3 with value 0xaa6ee6be0f6df629
sw x3, 0(x2) # store 0xaa6ee6be0f6df629 in memory
flw f16, 0(x2) # load 0xaa6ee6be0f6df629 from memory into f16
la x2, scratch
li x3, 0xe0454243ba76ad9 # load x3 with value 0xe0454243ba76ad9
sw x3, 0(x2) # store 0xe0454243ba76ad9 in memory
flw f29, 0(x2) # load 0xe0454243ba76ad9 from memory into f29
la x2, scratch
li x3, 0xd5280c3b230f9297 # load x3 with value 0xd5280c3b230f9297
sw x3, 0(x2) # store 0xd5280c3b230f9297 in memory
flw f25, 0(x2) # load 0xd5280c3b230f9297 from memory into f25
fnmadd.s f22, f16, f29, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0x20400ea5727aa6cd # load x3 with value 0x20400ea5727aa6cd
sw x3, 0(x2) # store 0x20400ea5727aa6cd in memory
flw f31, 0(x2) # load 0x20400ea5727aa6cd from memory into f31
la x2, scratch
li x3, 0xa06e57b866bc0564 # load x3 with value 0xa06e57b866bc0564
sw x3, 0(x2) # store 0xa06e57b866bc0564 in memory
flw f17, 0(x2) # load 0xa06e57b866bc0564 from memory into f17
la x2, scratch
li x3, 0x2cf07800b440e3f7 # load x3 with value 0x2cf07800b440e3f7
sw x3, 0(x2) # store 0x2cf07800b440e3f7 in memory
flw f26, 0(x2) # load 0x2cf07800b440e3f7 from memory into f26
fnmadd.s f27, f31, f17, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0xf3630220c8e27f76 # load x3 with value 0xf3630220c8e27f76
sw x3, 0(x2) # store 0xf3630220c8e27f76 in memory
flw f5, 0(x2) # load 0xf3630220c8e27f76 from memory into f5
la x2, scratch
li x3, 0x27e3fbe965a399da # load x3 with value 0x27e3fbe965a399da
sw x3, 0(x2) # store 0x27e3fbe965a399da in memory
flw f20, 0(x2) # load 0x27e3fbe965a399da from memory into f20
la x2, scratch
li x3, 0xc3550d6b8aa55bfc # load x3 with value 0xc3550d6b8aa55bfc
sw x3, 0(x2) # store 0xc3550d6b8aa55bfc in memory
flw f27, 0(x2) # load 0xc3550d6b8aa55bfc from memory into f27
fnmadd.s f14, f5, f20, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x91377bb249bcaba0 # load x3 with value 0x91377bb249bcaba0
sw x3, 0(x2) # store 0x91377bb249bcaba0 in memory
flw f10, 0(x2) # load 0x91377bb249bcaba0 from memory into f10
la x2, scratch
li x3, 0xc171ef79b6a3088b # load x3 with value 0xc171ef79b6a3088b
sw x3, 0(x2) # store 0xc171ef79b6a3088b in memory
flw f26, 0(x2) # load 0xc171ef79b6a3088b from memory into f26
la x2, scratch
li x3, 0xf440dc3ffdde5de6 # load x3 with value 0xf440dc3ffdde5de6
sw x3, 0(x2) # store 0xf440dc3ffdde5de6 in memory
flw f28, 0(x2) # load 0xf440dc3ffdde5de6 from memory into f28
fnmadd.s f17, f10, f26, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x355e641d65c6c16d # load x3 with value 0x355e641d65c6c16d
sw x3, 0(x2) # store 0x355e641d65c6c16d in memory
flw f10, 0(x2) # load 0x355e641d65c6c16d from memory into f10
la x2, scratch
li x3, 0x2dcae0edb1caa690 # load x3 with value 0x2dcae0edb1caa690
sw x3, 0(x2) # store 0x2dcae0edb1caa690 in memory
flw f28, 0(x2) # load 0x2dcae0edb1caa690 from memory into f28
la x2, scratch
li x3, 0x9d44787080f02fa7 # load x3 with value 0x9d44787080f02fa7
sw x3, 0(x2) # store 0x9d44787080f02fa7 in memory
flw f29, 0(x2) # load 0x9d44787080f02fa7 from memory into f29
fnmadd.s f30, f10, f28, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0xd103b1d48eb7e6f6 # load x3 with value 0xd103b1d48eb7e6f6
sw x3, 0(x2) # store 0xd103b1d48eb7e6f6 in memory
flw f14, 0(x2) # load 0xd103b1d48eb7e6f6 from memory into f14
la x2, scratch
li x3, 0x1011cc28d6f825a9 # load x3 with value 0x1011cc28d6f825a9
sw x3, 0(x2) # store 0x1011cc28d6f825a9 in memory
flw f5, 0(x2) # load 0x1011cc28d6f825a9 from memory into f5
la x2, scratch
li x3, 0x4475f9068b8e75c5 # load x3 with value 0x4475f9068b8e75c5
sw x3, 0(x2) # store 0x4475f9068b8e75c5 in memory
flw f30, 0(x2) # load 0x4475f9068b8e75c5 from memory into f30
fnmadd.s f9, f14, f5, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x196757bd72ccfd2d # load x3 with value 0x196757bd72ccfd2d
sw x3, 0(x2) # store 0x196757bd72ccfd2d in memory
flw f18, 0(x2) # load 0x196757bd72ccfd2d from memory into f18
la x2, scratch
li x3, 0xb465595e9e484647 # load x3 with value 0xb465595e9e484647
sw x3, 0(x2) # store 0xb465595e9e484647 in memory
flw f7, 0(x2) # load 0xb465595e9e484647 from memory into f7
la x2, scratch
li x3, 0x11a8359adb77959c # load x3 with value 0x11a8359adb77959c
sw x3, 0(x2) # store 0x11a8359adb77959c in memory
flw f31, 0(x2) # load 0x11a8359adb77959c from memory into f31
fnmadd.s f8, f18, f7, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xb2f6af5b6eaff733 # load x3 with value 0xb2f6af5b6eaff733
sw x3, 0(x2) # store 0xb2f6af5b6eaff733 in memory
flw f28, 0(x2) # load 0xb2f6af5b6eaff733 from memory into f28
la x2, scratch
li x3, 0xb295b16db044caa1 # load x3 with value 0xb295b16db044caa1
sw x3, 0(x2) # store 0xb295b16db044caa1 in memory
flw f25, 0(x2) # load 0xb295b16db044caa1 from memory into f25
la x2, scratch
li x3, 0xebdf6ef76564ab78 # load x3 with value 0xebdf6ef76564ab78
sw x3, 0(x2) # store 0xebdf6ef76564ab78 in memory
flw f3, 0(x2) # load 0xebdf6ef76564ab78 from memory into f3
fnmadd.s f0, f28, f25, f3 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x2ccd13040f93b14d # load x3 with value 0x2ccd13040f93b14d
sw x3, 0(x2) # store 0x2ccd13040f93b14d in memory
flw f9, 0(x2) # load 0x2ccd13040f93b14d from memory into f9
la x2, scratch
li x3, 0xabeebc3710a6edfd # load x3 with value 0xabeebc3710a6edfd
sw x3, 0(x2) # store 0xabeebc3710a6edfd in memory
flw f26, 0(x2) # load 0xabeebc3710a6edfd from memory into f26
la x2, scratch
li x3, 0xfde63951f636e21c # load x3 with value 0xfde63951f636e21c
sw x3, 0(x2) # store 0xfde63951f636e21c in memory
flw f22, 0(x2) # load 0xfde63951f636e21c from memory into f22
fnmadd.s f1, f9, f26, f22 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x1d5cfbf6fd6b19ee # load x3 with value 0x1d5cfbf6fd6b19ee
sw x3, 0(x2) # store 0x1d5cfbf6fd6b19ee in memory
flw f16, 0(x2) # load 0x1d5cfbf6fd6b19ee from memory into f16
la x2, scratch
li x3, 0x85f7c71b8ea1a358 # load x3 with value 0x85f7c71b8ea1a358
sw x3, 0(x2) # store 0x85f7c71b8ea1a358 in memory
flw f27, 0(x2) # load 0x85f7c71b8ea1a358 from memory into f27
la x2, scratch
li x3, 0xb3c502a863f9c9cf # load x3 with value 0xb3c502a863f9c9cf
sw x3, 0(x2) # store 0xb3c502a863f9c9cf in memory
flw f29, 0(x2) # load 0xb3c502a863f9c9cf from memory into f29
fnmadd.s f2, f16, f27, f29 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x8dfd28d2f9439414 # load x3 with value 0x8dfd28d2f9439414
sw x3, 0(x2) # store 0x8dfd28d2f9439414 in memory
flw f26, 0(x2) # load 0x8dfd28d2f9439414 from memory into f26
la x2, scratch
li x3, 0xcce627d0a5075b6b # load x3 with value 0xcce627d0a5075b6b
sw x3, 0(x2) # store 0xcce627d0a5075b6b in memory
flw f19, 0(x2) # load 0xcce627d0a5075b6b from memory into f19
la x2, scratch
li x3, 0x4aefb452efc6cb40 # load x3 with value 0x4aefb452efc6cb40
sw x3, 0(x2) # store 0x4aefb452efc6cb40 in memory
flw f21, 0(x2) # load 0x4aefb452efc6cb40 from memory into f21
fnmadd.s f3, f26, f19, f21 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x39662a854096c801 # load x3 with value 0x39662a854096c801
sw x3, 0(x2) # store 0x39662a854096c801 in memory
flw f19, 0(x2) # load 0x39662a854096c801 from memory into f19
la x2, scratch
li x3, 0xd1d1eb10be2bd395 # load x3 with value 0xd1d1eb10be2bd395
sw x3, 0(x2) # store 0xd1d1eb10be2bd395 in memory
flw f10, 0(x2) # load 0xd1d1eb10be2bd395 from memory into f10
la x2, scratch
li x3, 0x9de25f5f9d3c3e09 # load x3 with value 0x9de25f5f9d3c3e09
sw x3, 0(x2) # store 0x9de25f5f9d3c3e09 in memory
flw f30, 0(x2) # load 0x9de25f5f9d3c3e09 from memory into f30
fnmadd.s f4, f19, f10, f30 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x476b842ff73c5466 # load x3 with value 0x476b842ff73c5466
sw x3, 0(x2) # store 0x476b842ff73c5466 in memory
flw f9, 0(x2) # load 0x476b842ff73c5466 from memory into f9
la x2, scratch
li x3, 0xfc09052994c4afa3 # load x3 with value 0xfc09052994c4afa3
sw x3, 0(x2) # store 0xfc09052994c4afa3 in memory
flw f8, 0(x2) # load 0xfc09052994c4afa3 from memory into f8
la x2, scratch
li x3, 0x995f1fce62d14ef9 # load x3 with value 0x995f1fce62d14ef9
sw x3, 0(x2) # store 0x995f1fce62d14ef9 in memory
flw f2, 0(x2) # load 0x995f1fce62d14ef9 from memory into f2
fnmadd.s f5, f9, f8, f2 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc39bb3430c7d1bca # load x3 with value 0xc39bb3430c7d1bca
sw x3, 0(x2) # store 0xc39bb3430c7d1bca in memory
flw f18, 0(x2) # load 0xc39bb3430c7d1bca from memory into f18
la x2, scratch
li x3, 0x8c171e32e1d54eb2 # load x3 with value 0x8c171e32e1d54eb2
sw x3, 0(x2) # store 0x8c171e32e1d54eb2 in memory
flw f26, 0(x2) # load 0x8c171e32e1d54eb2 from memory into f26
la x2, scratch
li x3, 0x5e4419d80bdf6d38 # load x3 with value 0x5e4419d80bdf6d38
sw x3, 0(x2) # store 0x5e4419d80bdf6d38 in memory
flw f28, 0(x2) # load 0x5e4419d80bdf6d38 from memory into f28
fnmadd.s f6, f18, f26, f28 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2766b750a345d2dd # load x3 with value 0x2766b750a345d2dd
sw x3, 0(x2) # store 0x2766b750a345d2dd in memory
flw f30, 0(x2) # load 0x2766b750a345d2dd from memory into f30
la x2, scratch
li x3, 0xaf1a8a1a2534a437 # load x3 with value 0xaf1a8a1a2534a437
sw x3, 0(x2) # store 0xaf1a8a1a2534a437 in memory
flw f25, 0(x2) # load 0xaf1a8a1a2534a437 from memory into f25
la x2, scratch
li x3, 0x6c802cff99593956 # load x3 with value 0x6c802cff99593956
sw x3, 0(x2) # store 0x6c802cff99593956 in memory
flw f21, 0(x2) # load 0x6c802cff99593956 from memory into f21
fnmadd.s f7, f30, f25, f21 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x67da26326c645ea0 # load x3 with value 0x67da26326c645ea0
sw x3, 0(x2) # store 0x67da26326c645ea0 in memory
flw f27, 0(x2) # load 0x67da26326c645ea0 from memory into f27
la x2, scratch
li x3, 0x738f4ebf61977227 # load x3 with value 0x738f4ebf61977227
sw x3, 0(x2) # store 0x738f4ebf61977227 in memory
flw f30, 0(x2) # load 0x738f4ebf61977227 from memory into f30
la x2, scratch
li x3, 0x6d0f696159869bb5 # load x3 with value 0x6d0f696159869bb5
sw x3, 0(x2) # store 0x6d0f696159869bb5 in memory
flw f17, 0(x2) # load 0x6d0f696159869bb5 from memory into f17
fnmadd.s f8, f27, f30, f17 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0xd88f44762618576d # load x3 with value 0xd88f44762618576d
sw x3, 0(x2) # store 0xd88f44762618576d in memory
flw f16, 0(x2) # load 0xd88f44762618576d from memory into f16
la x2, scratch
li x3, 0xf77a1e9ca8414f9c # load x3 with value 0xf77a1e9ca8414f9c
sw x3, 0(x2) # store 0xf77a1e9ca8414f9c in memory
flw f21, 0(x2) # load 0xf77a1e9ca8414f9c from memory into f21
la x2, scratch
li x3, 0x551c1964404b777e # load x3 with value 0x551c1964404b777e
sw x3, 0(x2) # store 0x551c1964404b777e in memory
flw f14, 0(x2) # load 0x551c1964404b777e from memory into f14
fnmadd.s f9, f16, f21, f14 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x8b2c737ba2be1420 # load x3 with value 0x8b2c737ba2be1420
sw x3, 0(x2) # store 0x8b2c737ba2be1420 in memory
flw f21, 0(x2) # load 0x8b2c737ba2be1420 from memory into f21
la x2, scratch
li x3, 0x2ca7b94ad96a6f4e # load x3 with value 0x2ca7b94ad96a6f4e
sw x3, 0(x2) # store 0x2ca7b94ad96a6f4e in memory
flw f16, 0(x2) # load 0x2ca7b94ad96a6f4e from memory into f16
la x2, scratch
li x3, 0xedbf728e22de3844 # load x3 with value 0xedbf728e22de3844
sw x3, 0(x2) # store 0xedbf728e22de3844 in memory
flw f11, 0(x2) # load 0xedbf728e22de3844 from memory into f11
fnmadd.s f10, f21, f16, f11 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x2def00e691448c03 # load x3 with value 0x2def00e691448c03
sw x3, 0(x2) # store 0x2def00e691448c03 in memory
flw f21, 0(x2) # load 0x2def00e691448c03 from memory into f21
la x2, scratch
li x3, 0xc0cb1f5c933fb58c # load x3 with value 0xc0cb1f5c933fb58c
sw x3, 0(x2) # store 0xc0cb1f5c933fb58c in memory
flw f23, 0(x2) # load 0xc0cb1f5c933fb58c from memory into f23
la x2, scratch
li x3, 0xf18fcb119663c335 # load x3 with value 0xf18fcb119663c335
sw x3, 0(x2) # store 0xf18fcb119663c335 in memory
flw f24, 0(x2) # load 0xf18fcb119663c335 from memory into f24
fnmadd.s f11, f21, f23, f24 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x5443f23f3ba0d77f # load x3 with value 0x5443f23f3ba0d77f
sw x3, 0(x2) # store 0x5443f23f3ba0d77f in memory
flw f6, 0(x2) # load 0x5443f23f3ba0d77f from memory into f6
la x2, scratch
li x3, 0x81e0118fb2b73b82 # load x3 with value 0x81e0118fb2b73b82
sw x3, 0(x2) # store 0x81e0118fb2b73b82 in memory
flw f9, 0(x2) # load 0x81e0118fb2b73b82 from memory into f9
la x2, scratch
li x3, 0xd9eb2e615e43e9e # load x3 with value 0xd9eb2e615e43e9e
sw x3, 0(x2) # store 0xd9eb2e615e43e9e in memory
flw f13, 0(x2) # load 0xd9eb2e615e43e9e from memory into f13
fnmadd.s f12, f6, f9, f13 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xfd452fcd3d7c5f40 # load x3 with value 0xfd452fcd3d7c5f40
sw x3, 0(x2) # store 0xfd452fcd3d7c5f40 in memory
flw f24, 0(x2) # load 0xfd452fcd3d7c5f40 from memory into f24
la x2, scratch
li x3, 0xdd1661e8778f6299 # load x3 with value 0xdd1661e8778f6299
sw x3, 0(x2) # store 0xdd1661e8778f6299 in memory
flw f9, 0(x2) # load 0xdd1661e8778f6299 from memory into f9
la x2, scratch
li x3, 0xc2fab65f664c6143 # load x3 with value 0xc2fab65f664c6143
sw x3, 0(x2) # store 0xc2fab65f664c6143 in memory
flw f31, 0(x2) # load 0xc2fab65f664c6143 from memory into f31
fnmadd.s f13, f24, f9, f31 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x1e6edaafec1cbc59 # load x3 with value 0x1e6edaafec1cbc59
sw x3, 0(x2) # store 0x1e6edaafec1cbc59 in memory
flw f17, 0(x2) # load 0x1e6edaafec1cbc59 from memory into f17
la x2, scratch
li x3, 0x2c89dee257a7af22 # load x3 with value 0x2c89dee257a7af22
sw x3, 0(x2) # store 0x2c89dee257a7af22 in memory
flw f26, 0(x2) # load 0x2c89dee257a7af22 from memory into f26
la x2, scratch
li x3, 0x9d9841a25fea3906 # load x3 with value 0x9d9841a25fea3906
sw x3, 0(x2) # store 0x9d9841a25fea3906 in memory
flw f5, 0(x2) # load 0x9d9841a25fea3906 from memory into f5
fnmadd.s f14, f17, f26, f5 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xf918e7dcc7e798fa # load x3 with value 0xf918e7dcc7e798fa
sw x3, 0(x2) # store 0xf918e7dcc7e798fa in memory
flw f2, 0(x2) # load 0xf918e7dcc7e798fa from memory into f2
la x2, scratch
li x3, 0xef6564b5ff7e7463 # load x3 with value 0xef6564b5ff7e7463
sw x3, 0(x2) # store 0xef6564b5ff7e7463 in memory
flw f19, 0(x2) # load 0xef6564b5ff7e7463 from memory into f19
la x2, scratch
li x3, 0xf6fface9e4d6219c # load x3 with value 0xf6fface9e4d6219c
sw x3, 0(x2) # store 0xf6fface9e4d6219c in memory
flw f28, 0(x2) # load 0xf6fface9e4d6219c from memory into f28
fnmadd.s f15, f2, f19, f28 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x9e80476751d83fd0 # load x3 with value 0x9e80476751d83fd0
sw x3, 0(x2) # store 0x9e80476751d83fd0 in memory
flw f21, 0(x2) # load 0x9e80476751d83fd0 from memory into f21
la x2, scratch
li x3, 0xfedc40ceade454a # load x3 with value 0xfedc40ceade454a
sw x3, 0(x2) # store 0xfedc40ceade454a in memory
flw f17, 0(x2) # load 0xfedc40ceade454a from memory into f17
la x2, scratch
li x3, 0x7d10eb2ebf5a5b1 # load x3 with value 0x7d10eb2ebf5a5b1
sw x3, 0(x2) # store 0x7d10eb2ebf5a5b1 in memory
flw f10, 0(x2) # load 0x7d10eb2ebf5a5b1 from memory into f10
fnmadd.s f16, f21, f17, f10 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xf7c6b486378564de # load x3 with value 0xf7c6b486378564de
sw x3, 0(x2) # store 0xf7c6b486378564de in memory
flw f28, 0(x2) # load 0xf7c6b486378564de from memory into f28
la x2, scratch
li x3, 0xdd2dc00470bc6d17 # load x3 with value 0xdd2dc00470bc6d17
sw x3, 0(x2) # store 0xdd2dc00470bc6d17 in memory
flw f29, 0(x2) # load 0xdd2dc00470bc6d17 from memory into f29
la x2, scratch
li x3, 0x486daada3aa69f89 # load x3 with value 0x486daada3aa69f89
sw x3, 0(x2) # store 0x486daada3aa69f89 in memory
flw f5, 0(x2) # load 0x486daada3aa69f89 from memory into f5
fnmadd.s f17, f28, f29, f5 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0xfbbf25eae875e2d1 # load x3 with value 0xfbbf25eae875e2d1
sw x3, 0(x2) # store 0xfbbf25eae875e2d1 in memory
flw f3, 0(x2) # load 0xfbbf25eae875e2d1 from memory into f3
la x2, scratch
li x3, 0x3e0f94303138c95d # load x3 with value 0x3e0f94303138c95d
sw x3, 0(x2) # store 0x3e0f94303138c95d in memory
flw f15, 0(x2) # load 0x3e0f94303138c95d from memory into f15
la x2, scratch
li x3, 0xc19107049ca6d236 # load x3 with value 0xc19107049ca6d236
sw x3, 0(x2) # store 0xc19107049ca6d236 in memory
flw f17, 0(x2) # load 0xc19107049ca6d236 from memory into f17
fnmadd.s f18, f3, f15, f17 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x898593356434e693 # load x3 with value 0x898593356434e693
sw x3, 0(x2) # store 0x898593356434e693 in memory
flw f29, 0(x2) # load 0x898593356434e693 from memory into f29
la x2, scratch
li x3, 0xb1aff61ee5da86e8 # load x3 with value 0xb1aff61ee5da86e8
sw x3, 0(x2) # store 0xb1aff61ee5da86e8 in memory
flw f21, 0(x2) # load 0xb1aff61ee5da86e8 from memory into f21
la x2, scratch
li x3, 0xa719692eae84f554 # load x3 with value 0xa719692eae84f554
sw x3, 0(x2) # store 0xa719692eae84f554 in memory
flw f18, 0(x2) # load 0xa719692eae84f554 from memory into f18
fnmadd.s f19, f29, f21, f18 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x5d1ea41eab104e37 # load x3 with value 0x5d1ea41eab104e37
sw x3, 0(x2) # store 0x5d1ea41eab104e37 in memory
flw f8, 0(x2) # load 0x5d1ea41eab104e37 from memory into f8
la x2, scratch
li x3, 0x997294c12b28fece # load x3 with value 0x997294c12b28fece
sw x3, 0(x2) # store 0x997294c12b28fece in memory
flw f21, 0(x2) # load 0x997294c12b28fece from memory into f21
la x2, scratch
li x3, 0xafa1955db5c2bc3b # load x3 with value 0xafa1955db5c2bc3b
sw x3, 0(x2) # store 0xafa1955db5c2bc3b in memory
flw f26, 0(x2) # load 0xafa1955db5c2bc3b from memory into f26
fnmadd.s f20, f8, f21, f26 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x2d4923e584fa8667 # load x3 with value 0x2d4923e584fa8667
sw x3, 0(x2) # store 0x2d4923e584fa8667 in memory
flw f2, 0(x2) # load 0x2d4923e584fa8667 from memory into f2
la x2, scratch
li x3, 0x956d2d6309216ad6 # load x3 with value 0x956d2d6309216ad6
sw x3, 0(x2) # store 0x956d2d6309216ad6 in memory
flw f20, 0(x2) # load 0x956d2d6309216ad6 from memory into f20
la x2, scratch
li x3, 0xd85df5f31b736ae0 # load x3 with value 0xd85df5f31b736ae0
sw x3, 0(x2) # store 0xd85df5f31b736ae0 in memory
flw f23, 0(x2) # load 0xd85df5f31b736ae0 from memory into f23
fnmadd.s f21, f2, f20, f23 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0xdd0c6615b05e2c30 # load x3 with value 0xdd0c6615b05e2c30
sw x3, 0(x2) # store 0xdd0c6615b05e2c30 in memory
flw f7, 0(x2) # load 0xdd0c6615b05e2c30 from memory into f7
la x2, scratch
li x3, 0xe2e98b7712c5d123 # load x3 with value 0xe2e98b7712c5d123
sw x3, 0(x2) # store 0xe2e98b7712c5d123 in memory
flw f20, 0(x2) # load 0xe2e98b7712c5d123 from memory into f20
la x2, scratch
li x3, 0x34f4353f51052f93 # load x3 with value 0x34f4353f51052f93
sw x3, 0(x2) # store 0x34f4353f51052f93 in memory
flw f22, 0(x2) # load 0x34f4353f51052f93 from memory into f22
fnmadd.s f22, f7, f20, f22 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0xa5807fa56d6b41ee # load x3 with value 0xa5807fa56d6b41ee
sw x3, 0(x2) # store 0xa5807fa56d6b41ee in memory
flw f21, 0(x2) # load 0xa5807fa56d6b41ee from memory into f21
la x2, scratch
li x3, 0x30686e2c6ec448e8 # load x3 with value 0x30686e2c6ec448e8
sw x3, 0(x2) # store 0x30686e2c6ec448e8 in memory
flw f10, 0(x2) # load 0x30686e2c6ec448e8 from memory into f10
la x2, scratch
li x3, 0x8ba37261fbf31a18 # load x3 with value 0x8ba37261fbf31a18
sw x3, 0(x2) # store 0x8ba37261fbf31a18 in memory
flw f13, 0(x2) # load 0x8ba37261fbf31a18 from memory into f13
fnmadd.s f23, f21, f10, f13 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xe95971a5c597345c # load x3 with value 0xe95971a5c597345c
sw x3, 0(x2) # store 0xe95971a5c597345c in memory
flw f16, 0(x2) # load 0xe95971a5c597345c from memory into f16
la x2, scratch
li x3, 0xb696fa0f11346a28 # load x3 with value 0xb696fa0f11346a28
sw x3, 0(x2) # store 0xb696fa0f11346a28 in memory
flw f15, 0(x2) # load 0xb696fa0f11346a28 from memory into f15
la x2, scratch
li x3, 0x7756a66132b70f2b # load x3 with value 0x7756a66132b70f2b
sw x3, 0(x2) # store 0x7756a66132b70f2b in memory
flw f28, 0(x2) # load 0x7756a66132b70f2b from memory into f28
fnmadd.s f24, f16, f15, f28 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x990aa00788e64dac # load x3 with value 0x990aa00788e64dac
sw x3, 0(x2) # store 0x990aa00788e64dac in memory
flw f9, 0(x2) # load 0x990aa00788e64dac from memory into f9
la x2, scratch
li x3, 0xc13dd8de48d7d4b1 # load x3 with value 0xc13dd8de48d7d4b1
sw x3, 0(x2) # store 0xc13dd8de48d7d4b1 in memory
flw f23, 0(x2) # load 0xc13dd8de48d7d4b1 from memory into f23
la x2, scratch
li x3, 0x577a431cebf7cd68 # load x3 with value 0x577a431cebf7cd68
sw x3, 0(x2) # store 0x577a431cebf7cd68 in memory
flw f6, 0(x2) # load 0x577a431cebf7cd68 from memory into f6
fnmadd.s f25, f9, f23, f6 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xe57b7b7d6f60bc89 # load x3 with value 0xe57b7b7d6f60bc89
sw x3, 0(x2) # store 0xe57b7b7d6f60bc89 in memory
flw f13, 0(x2) # load 0xe57b7b7d6f60bc89 from memory into f13
la x2, scratch
li x3, 0x3a690e0b7e54f0aa # load x3 with value 0x3a690e0b7e54f0aa
sw x3, 0(x2) # store 0x3a690e0b7e54f0aa in memory
flw f22, 0(x2) # load 0x3a690e0b7e54f0aa from memory into f22
la x2, scratch
li x3, 0x7a41562ae8f98a36 # load x3 with value 0x7a41562ae8f98a36
sw x3, 0(x2) # store 0x7a41562ae8f98a36 in memory
flw f23, 0(x2) # load 0x7a41562ae8f98a36 from memory into f23
fnmadd.s f26, f13, f22, f23 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x59e6a0d67cadf903 # load x3 with value 0x59e6a0d67cadf903
sw x3, 0(x2) # store 0x59e6a0d67cadf903 in memory
flw f6, 0(x2) # load 0x59e6a0d67cadf903 from memory into f6
la x2, scratch
li x3, 0x13fc6ba2c0034f66 # load x3 with value 0x13fc6ba2c0034f66
sw x3, 0(x2) # store 0x13fc6ba2c0034f66 in memory
flw f15, 0(x2) # load 0x13fc6ba2c0034f66 from memory into f15
la x2, scratch
li x3, 0x2c893dfaea6e9988 # load x3 with value 0x2c893dfaea6e9988
sw x3, 0(x2) # store 0x2c893dfaea6e9988 in memory
flw f26, 0(x2) # load 0x2c893dfaea6e9988 from memory into f26
fnmadd.s f27, f6, f15, f26 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x117d3175651d7d60 # load x3 with value 0x117d3175651d7d60
sw x3, 0(x2) # store 0x117d3175651d7d60 in memory
flw f25, 0(x2) # load 0x117d3175651d7d60 from memory into f25
la x2, scratch
li x3, 0xeb7e32e004b9df0d # load x3 with value 0xeb7e32e004b9df0d
sw x3, 0(x2) # store 0xeb7e32e004b9df0d in memory
flw f18, 0(x2) # load 0xeb7e32e004b9df0d from memory into f18
la x2, scratch
li x3, 0x56e07e8babcd47a6 # load x3 with value 0x56e07e8babcd47a6
sw x3, 0(x2) # store 0x56e07e8babcd47a6 in memory
flw f21, 0(x2) # load 0x56e07e8babcd47a6 from memory into f21
fnmadd.s f28, f25, f18, f21 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x1ffe7554dba6d8ca # load x3 with value 0x1ffe7554dba6d8ca
sw x3, 0(x2) # store 0x1ffe7554dba6d8ca in memory
flw f9, 0(x2) # load 0x1ffe7554dba6d8ca from memory into f9
la x2, scratch
li x3, 0x10acd6991b814337 # load x3 with value 0x10acd6991b814337
sw x3, 0(x2) # store 0x10acd6991b814337 in memory
flw f11, 0(x2) # load 0x10acd6991b814337 from memory into f11
la x2, scratch
li x3, 0xc01db5c472f64a5f # load x3 with value 0xc01db5c472f64a5f
sw x3, 0(x2) # store 0xc01db5c472f64a5f in memory
flw f10, 0(x2) # load 0xc01db5c472f64a5f from memory into f10
fnmadd.s f29, f9, f11, f10 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x2c00860e2862f85c # load x3 with value 0x2c00860e2862f85c
sw x3, 0(x2) # store 0x2c00860e2862f85c in memory
flw f20, 0(x2) # load 0x2c00860e2862f85c from memory into f20
la x2, scratch
li x3, 0xedac218bb594e130 # load x3 with value 0xedac218bb594e130
sw x3, 0(x2) # store 0xedac218bb594e130 in memory
flw f12, 0(x2) # load 0xedac218bb594e130 from memory into f12
la x2, scratch
li x3, 0x2ce63f5a6364da54 # load x3 with value 0x2ce63f5a6364da54
sw x3, 0(x2) # store 0x2ce63f5a6364da54 in memory
flw f8, 0(x2) # load 0x2ce63f5a6364da54 from memory into f8
fnmadd.s f30, f20, f12, f8 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xeb3f6402c6d2fd3f # load x3 with value 0xeb3f6402c6d2fd3f
sw x3, 0(x2) # store 0xeb3f6402c6d2fd3f in memory
flw f6, 0(x2) # load 0xeb3f6402c6d2fd3f from memory into f6
la x2, scratch
li x3, 0xc20ec717f2654bda # load x3 with value 0xc20ec717f2654bda
sw x3, 0(x2) # store 0xc20ec717f2654bda in memory
flw f21, 0(x2) # load 0xc20ec717f2654bda from memory into f21
la x2, scratch
li x3, 0x12314be3be3bea04 # load x3 with value 0x12314be3be3bea04
sw x3, 0(x2) # store 0x12314be3be3bea04 in memory
flw f20, 0(x2) # load 0x12314be3be3bea04 from memory into f20
fnmadd.s f31, f6, f21, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xcc2134075a494c50 # load x3 with value 0xcc2134075a494c50
sw x3, 0(x2) # store 0xcc2134075a494c50 in memory
flw f11, 0(x2) # load 0xcc2134075a494c50 from memory into f11
la x2, scratch
li x3, 0x626e6ebd83d89793 # load x3 with value 0x626e6ebd83d89793
sw x3, 0(x2) # store 0x626e6ebd83d89793 in memory
flw f2, 0(x2) # load 0x626e6ebd83d89793 from memory into f2
fnmadd.s f23, f27, f11, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0xca409e70f20a9c3f # load x3 with value 0xca409e70f20a9c3f
sw x3, 0(x2) # store 0xca409e70f20a9c3f in memory
flw f3, 0(x2) # load 0xca409e70f20a9c3f from memory into f3
la x2, scratch
li x3, 0xb1a2d81c2432eea4 # load x3 with value 0xb1a2d81c2432eea4
sw x3, 0(x2) # store 0xb1a2d81c2432eea4 in memory
flw f23, 0(x2) # load 0xb1a2d81c2432eea4 from memory into f23
fnmadd.s f18, f16, f3, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xbf8b348d5feac4ef # load x3 with value 0xbf8b348d5feac4ef
sw x3, 0(x2) # store 0xbf8b348d5feac4ef in memory
flw f9, 0(x2) # load 0xbf8b348d5feac4ef from memory into f9
la x2, scratch
li x3, 0x8ab66dfadbee238a # load x3 with value 0x8ab66dfadbee238a
sw x3, 0(x2) # store 0x8ab66dfadbee238a in memory
flw f7, 0(x2) # load 0x8ab66dfadbee238a from memory into f7
fnmadd.s f24, f17, f9, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x28cbf88b0302612d # load x3 with value 0x28cbf88b0302612d
sw x3, 0(x2) # store 0x28cbf88b0302612d in memory
flw f18, 0(x2) # load 0x28cbf88b0302612d from memory into f18
la x2, scratch
li x3, 0x2ed6f4a16b35b84d # load x3 with value 0x2ed6f4a16b35b84d
sw x3, 0(x2) # store 0x2ed6f4a16b35b84d in memory
flw f5, 0(x2) # load 0x2ed6f4a16b35b84d from memory into f5
fnmadd.s f20, f8, f18, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x97b9adbc3ff6497e # load x3 with value 0x97b9adbc3ff6497e
sw x3, 0(x2) # store 0x97b9adbc3ff6497e in memory
flw f11, 0(x2) # load 0x97b9adbc3ff6497e from memory into f11
la x2, scratch
li x3, 0xaba9bd78ef620708 # load x3 with value 0xaba9bd78ef620708
sw x3, 0(x2) # store 0xaba9bd78ef620708 in memory
flw f7, 0(x2) # load 0xaba9bd78ef620708 from memory into f7
fnmadd.s f24, f17, f11, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x4e95ea0175cbf9be # load x3 with value 0x4e95ea0175cbf9be
sw x3, 0(x2) # store 0x4e95ea0175cbf9be in memory
flw f14, 0(x2) # load 0x4e95ea0175cbf9be from memory into f14
la x2, scratch
li x3, 0x704a4787a5fb63d1 # load x3 with value 0x704a4787a5fb63d1
sw x3, 0(x2) # store 0x704a4787a5fb63d1 in memory
flw f16, 0(x2) # load 0x704a4787a5fb63d1 from memory into f16
fnmadd.s f26, f1, f14, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xd072d03b7213b066 # load x3 with value 0xd072d03b7213b066
sw x3, 0(x2) # store 0xd072d03b7213b066 in memory
flw f1, 0(x2) # load 0xd072d03b7213b066 from memory into f1
la x2, scratch
li x3, 0xb6d586ed766fafca # load x3 with value 0xb6d586ed766fafca
sw x3, 0(x2) # store 0xb6d586ed766fafca in memory
flw f17, 0(x2) # load 0xb6d586ed766fafca from memory into f17
fnmadd.s f12, f10, f1, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xc367928d575f96d5 # load x3 with value 0xc367928d575f96d5
sw x3, 0(x2) # store 0xc367928d575f96d5 in memory
flw f17, 0(x2) # load 0xc367928d575f96d5 from memory into f17
la x2, scratch
li x3, 0x5e772169a8a4bf4f # load x3 with value 0x5e772169a8a4bf4f
sw x3, 0(x2) # store 0x5e772169a8a4bf4f in memory
flw f27, 0(x2) # load 0x5e772169a8a4bf4f from memory into f27
fnmadd.s f13, f22, f17, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x2eaaef81410008f6 # load x3 with value 0x2eaaef81410008f6
sw x3, 0(x2) # store 0x2eaaef81410008f6 in memory
flw f27, 0(x2) # load 0x2eaaef81410008f6 from memory into f27
la x2, scratch
li x3, 0xca509b6a1829a88d # load x3 with value 0xca509b6a1829a88d
sw x3, 0(x2) # store 0xca509b6a1829a88d in memory
flw f12, 0(x2) # load 0xca509b6a1829a88d from memory into f12
fnmadd.s f15, f1, f27, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xf0cbbc70acb6a129 # load x3 with value 0xf0cbbc70acb6a129
sw x3, 0(x2) # store 0xf0cbbc70acb6a129 in memory
flw f28, 0(x2) # load 0xf0cbbc70acb6a129 from memory into f28
la x2, scratch
li x3, 0xec3ca1ccffac5666 # load x3 with value 0xec3ca1ccffac5666
sw x3, 0(x2) # store 0xec3ca1ccffac5666 in memory
flw f7, 0(x2) # load 0xec3ca1ccffac5666 from memory into f7
fnmadd.s f29, f17, f28, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x1595d4e2c7d1f4ab # load x3 with value 0x1595d4e2c7d1f4ab
sw x3, 0(x2) # store 0x1595d4e2c7d1f4ab in memory
flw f14, 0(x2) # load 0x1595d4e2c7d1f4ab from memory into f14
la x2, scratch
li x3, 0xc50848c660ce8739 # load x3 with value 0xc50848c660ce8739
sw x3, 0(x2) # store 0xc50848c660ce8739 in memory
flw f26, 0(x2) # load 0xc50848c660ce8739 from memory into f26
fnmadd.s f17, f11, f14, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x815b5f330c5e7e8 # load x3 with value 0x815b5f330c5e7e8
sw x3, 0(x2) # store 0x815b5f330c5e7e8 in memory
flw f2, 0(x2) # load 0x815b5f330c5e7e8 from memory into f2
la x2, scratch
li x3, 0x1bf6ddc9d8ad5fbb # load x3 with value 0x1bf6ddc9d8ad5fbb
sw x3, 0(x2) # store 0x1bf6ddc9d8ad5fbb in memory
flw f28, 0(x2) # load 0x1bf6ddc9d8ad5fbb from memory into f28
fnmadd.s f15, f9, f2, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x21fd8eda5a6d8277 # load x3 with value 0x21fd8eda5a6d8277
sw x3, 0(x2) # store 0x21fd8eda5a6d8277 in memory
flw f11, 0(x2) # load 0x21fd8eda5a6d8277 from memory into f11
la x2, scratch
li x3, 0x1c28afccf1b21f3e # load x3 with value 0x1c28afccf1b21f3e
sw x3, 0(x2) # store 0x1c28afccf1b21f3e in memory
flw f10, 0(x2) # load 0x1c28afccf1b21f3e from memory into f10
fnmadd.s f12, f18, f11, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x8ab5a66becfbefd7 # load x3 with value 0x8ab5a66becfbefd7
sw x3, 0(x2) # store 0x8ab5a66becfbefd7 in memory
flw f8, 0(x2) # load 0x8ab5a66becfbefd7 from memory into f8
la x2, scratch
li x3, 0xc5806fbf3aaa3691 # load x3 with value 0xc5806fbf3aaa3691
sw x3, 0(x2) # store 0xc5806fbf3aaa3691 in memory
flw f15, 0(x2) # load 0xc5806fbf3aaa3691 from memory into f15
fnmadd.s f17, f6, f8, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x932501dc35c39cb8 # load x3 with value 0x932501dc35c39cb8
sw x3, 0(x2) # store 0x932501dc35c39cb8 in memory
flw f9, 0(x2) # load 0x932501dc35c39cb8 from memory into f9
la x2, scratch
li x3, 0xa054fa478a401770 # load x3 with value 0xa054fa478a401770
sw x3, 0(x2) # store 0xa054fa478a401770 in memory
flw f23, 0(x2) # load 0xa054fa478a401770 from memory into f23
fnmadd.s f14, f26, f9, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xffdda38f66ee784 # load x3 with value 0xffdda38f66ee784
sw x3, 0(x2) # store 0xffdda38f66ee784 in memory
flw f13, 0(x2) # load 0xffdda38f66ee784 from memory into f13
la x2, scratch
li x3, 0x3fdc94e56ce06c94 # load x3 with value 0x3fdc94e56ce06c94
sw x3, 0(x2) # store 0x3fdc94e56ce06c94 in memory
flw f12, 0(x2) # load 0x3fdc94e56ce06c94 from memory into f12
fnmadd.s f9, f31, f13, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x1d419445f609b3f0 # load x3 with value 0x1d419445f609b3f0
sw x3, 0(x2) # store 0x1d419445f609b3f0 in memory
flw f11, 0(x2) # load 0x1d419445f609b3f0 from memory into f11
la x2, scratch
li x3, 0x91ed32f80091e4bd # load x3 with value 0x91ed32f80091e4bd
sw x3, 0(x2) # store 0x91ed32f80091e4bd in memory
flw f2, 0(x2) # load 0x91ed32f80091e4bd from memory into f2
fnmadd.s f8, f9, f11, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xbe20fbf0ca5873fa # load x3 with value 0xbe20fbf0ca5873fa
sw x3, 0(x2) # store 0xbe20fbf0ca5873fa in memory
flw f12, 0(x2) # load 0xbe20fbf0ca5873fa from memory into f12
la x2, scratch
li x3, 0xf0ee1d6e5d1c22c4 # load x3 with value 0xf0ee1d6e5d1c22c4
sw x3, 0(x2) # store 0xf0ee1d6e5d1c22c4 in memory
flw f1, 0(x2) # load 0xf0ee1d6e5d1c22c4 from memory into f1
fnmadd.s f9, f14, f12, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x80230712e867750 # load x3 with value 0x80230712e867750
sw x3, 0(x2) # store 0x80230712e867750 in memory
flw f14, 0(x2) # load 0x80230712e867750 from memory into f14
la x2, scratch
li x3, 0x8875390e2246a774 # load x3 with value 0x8875390e2246a774
sw x3, 0(x2) # store 0x8875390e2246a774 in memory
flw f23, 0(x2) # load 0x8875390e2246a774 from memory into f23
fnmadd.s f25, f30, f14, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xee880d1753f79c1c # load x3 with value 0xee880d1753f79c1c
sw x3, 0(x2) # store 0xee880d1753f79c1c in memory
flw f31, 0(x2) # load 0xee880d1753f79c1c from memory into f31
la x2, scratch
li x3, 0x30f5740aa7f34eec # load x3 with value 0x30f5740aa7f34eec
sw x3, 0(x2) # store 0x30f5740aa7f34eec in memory
flw f27, 0(x2) # load 0x30f5740aa7f34eec from memory into f27
fnmadd.s f15, f23, f31, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x4708e4406b2727a6 # load x3 with value 0x4708e4406b2727a6
sw x3, 0(x2) # store 0x4708e4406b2727a6 in memory
flw f17, 0(x2) # load 0x4708e4406b2727a6 from memory into f17
la x2, scratch
li x3, 0x29749f3861af1aab # load x3 with value 0x29749f3861af1aab
sw x3, 0(x2) # store 0x29749f3861af1aab in memory
flw f1, 0(x2) # load 0x29749f3861af1aab from memory into f1
fnmadd.s f30, f20, f17, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xbc2dab42bc79bd29 # load x3 with value 0xbc2dab42bc79bd29
sw x3, 0(x2) # store 0xbc2dab42bc79bd29 in memory
flw f12, 0(x2) # load 0xbc2dab42bc79bd29 from memory into f12
la x2, scratch
li x3, 0xb2380579903b1147 # load x3 with value 0xb2380579903b1147
sw x3, 0(x2) # store 0xb2380579903b1147 in memory
flw f2, 0(x2) # load 0xb2380579903b1147 from memory into f2
fnmadd.s f11, f27, f12, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x5392f8fd60b3459d # load x3 with value 0x5392f8fd60b3459d
sw x3, 0(x2) # store 0x5392f8fd60b3459d in memory
flw f9, 0(x2) # load 0x5392f8fd60b3459d from memory into f9
la x2, scratch
li x3, 0x79f2a82756bfc340 # load x3 with value 0x79f2a82756bfc340
sw x3, 0(x2) # store 0x79f2a82756bfc340 in memory
flw f6, 0(x2) # load 0x79f2a82756bfc340 from memory into f6
fnmadd.s f16, f11, f9, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x846835aab624af99 # load x3 with value 0x846835aab624af99
sw x3, 0(x2) # store 0x846835aab624af99 in memory
flw f22, 0(x2) # load 0x846835aab624af99 from memory into f22
la x2, scratch
li x3, 0xa2c2ec53ef6aeadb # load x3 with value 0xa2c2ec53ef6aeadb
sw x3, 0(x2) # store 0xa2c2ec53ef6aeadb in memory
flw f3, 0(x2) # load 0xa2c2ec53ef6aeadb from memory into f3
fnmadd.s f13, f9, f22, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x224047aaf6107645 # load x3 with value 0x224047aaf6107645
sw x3, 0(x2) # store 0x224047aaf6107645 in memory
flw f7, 0(x2) # load 0x224047aaf6107645 from memory into f7
la x2, scratch
li x3, 0xfb304702eb9b5ae9 # load x3 with value 0xfb304702eb9b5ae9
sw x3, 0(x2) # store 0xfb304702eb9b5ae9 in memory
flw f8, 0(x2) # load 0xfb304702eb9b5ae9 from memory into f8
fnmadd.s f20, f31, f7, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xef2dbb6d812f60cc # load x3 with value 0xef2dbb6d812f60cc
sw x3, 0(x2) # store 0xef2dbb6d812f60cc in memory
flw f23, 0(x2) # load 0xef2dbb6d812f60cc from memory into f23
la x2, scratch
li x3, 0xa7783503861db84e # load x3 with value 0xa7783503861db84e
sw x3, 0(x2) # store 0xa7783503861db84e in memory
flw f29, 0(x2) # load 0xa7783503861db84e from memory into f29
fnmadd.s f19, f31, f23, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0xb415e876dbbf796e # load x3 with value 0xb415e876dbbf796e
sw x3, 0(x2) # store 0xb415e876dbbf796e in memory
flw f13, 0(x2) # load 0xb415e876dbbf796e from memory into f13
la x2, scratch
li x3, 0x545ec78cc24d49cf # load x3 with value 0x545ec78cc24d49cf
sw x3, 0(x2) # store 0x545ec78cc24d49cf in memory
flw f23, 0(x2) # load 0x545ec78cc24d49cf from memory into f23
fnmadd.s f8, f5, f13, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x976655d1c4722d6c # load x3 with value 0x976655d1c4722d6c
sw x3, 0(x2) # store 0x976655d1c4722d6c in memory
flw f10, 0(x2) # load 0x976655d1c4722d6c from memory into f10
la x2, scratch
li x3, 0x958c77d02a964e65 # load x3 with value 0x958c77d02a964e65
sw x3, 0(x2) # store 0x958c77d02a964e65 in memory
flw f25, 0(x2) # load 0x958c77d02a964e65 from memory into f25
fnmadd.s f31, f21, f10, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x6130b9cdba082f4c # load x3 with value 0x6130b9cdba082f4c
sw x3, 0(x2) # store 0x6130b9cdba082f4c in memory
flw f25, 0(x2) # load 0x6130b9cdba082f4c from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xd65702e1b666cbc # load x3 with value 0xd65702e1b666cbc
sw x3, 0(x2) # store 0xd65702e1b666cbc in memory
flw f6, 0(x2) # load 0xd65702e1b666cbc from memory into f6
fnmadd.s f9, f25, f7, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x4c0ac5b85936452a # load x3 with value 0x4c0ac5b85936452a
sw x3, 0(x2) # store 0x4c0ac5b85936452a in memory
flw f12, 0(x2) # load 0x4c0ac5b85936452a from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xc867423d1c96a9fc # load x3 with value 0xc867423d1c96a9fc
sw x3, 0(x2) # store 0xc867423d1c96a9fc in memory
flw f10, 0(x2) # load 0xc867423d1c96a9fc from memory into f10
fnmadd.s f1, f12, f2, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0x8655860fea68b7a6 # load x3 with value 0x8655860fea68b7a6
sw x3, 0(x2) # store 0x8655860fea68b7a6 in memory
flw f29, 0(x2) # load 0x8655860fea68b7a6 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x51a8edfee7801efe # load x3 with value 0x51a8edfee7801efe
sw x3, 0(x2) # store 0x51a8edfee7801efe in memory
flw f18, 0(x2) # load 0x51a8edfee7801efe from memory into f18
fnmadd.s f15, f29, f6, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0x94bc8d3ec0ff638b # load x3 with value 0x94bc8d3ec0ff638b
sw x3, 0(x2) # store 0x94bc8d3ec0ff638b in memory
flw f1, 0(x2) # load 0x94bc8d3ec0ff638b from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x115fb4b1da6e1f40 # load x3 with value 0x115fb4b1da6e1f40
sw x3, 0(x2) # store 0x115fb4b1da6e1f40 in memory
flw f3, 0(x2) # load 0x115fb4b1da6e1f40 from memory into f3
fnmadd.s f18, f1, f11, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0xca507ce10312a1b5 # load x3 with value 0xca507ce10312a1b5
sw x3, 0(x2) # store 0xca507ce10312a1b5 in memory
flw f9, 0(x2) # load 0xca507ce10312a1b5 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0xdd929c352a201705 # load x3 with value 0xdd929c352a201705
sw x3, 0(x2) # store 0xdd929c352a201705 in memory
flw f18, 0(x2) # load 0xdd929c352a201705 from memory into f18
fnmadd.s f8, f9, f7, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0xe4b30b07aae2a6ba # load x3 with value 0xe4b30b07aae2a6ba
sw x3, 0(x2) # store 0xe4b30b07aae2a6ba in memory
flw f21, 0(x2) # load 0xe4b30b07aae2a6ba from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xd85779e82a20915f # load x3 with value 0xd85779e82a20915f
sw x3, 0(x2) # store 0xd85779e82a20915f in memory
flw f25, 0(x2) # load 0xd85779e82a20915f from memory into f25
fnmadd.s f7, f21, f6, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0x67498416c53a321e # load x3 with value 0x67498416c53a321e
sw x3, 0(x2) # store 0x67498416c53a321e in memory
flw f23, 0(x2) # load 0x67498416c53a321e from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xb52d63561b4206da # load x3 with value 0xb52d63561b4206da
sw x3, 0(x2) # store 0xb52d63561b4206da in memory
flw f13, 0(x2) # load 0xb52d63561b4206da from memory into f13
fnmadd.s f10, f23, f31, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0xce8709c158f40fc0 # load x3 with value 0xce8709c158f40fc0
sw x3, 0(x2) # store 0xce8709c158f40fc0 in memory
flw f17, 0(x2) # load 0xce8709c158f40fc0 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x103755d61c71c7be # load x3 with value 0x103755d61c71c7be
sw x3, 0(x2) # store 0x103755d61c71c7be in memory
flw f30, 0(x2) # load 0x103755d61c71c7be from memory into f30
fnmadd.s f6, f17, f8, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0x39a3c8ba5fb464e5 # load x3 with value 0x39a3c8ba5fb464e5
sw x3, 0(x2) # store 0x39a3c8ba5fb464e5 in memory
flw f7, 0(x2) # load 0x39a3c8ba5fb464e5 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xa0b0078c41b82bd3 # load x3 with value 0xa0b0078c41b82bd3
sw x3, 0(x2) # store 0xa0b0078c41b82bd3 in memory
flw f20, 0(x2) # load 0xa0b0078c41b82bd3 from memory into f20
fnmadd.s f18, f7, f29, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0xaac2e128bab8bd4c # load x3 with value 0xaac2e128bab8bd4c
sw x3, 0(x2) # store 0xaac2e128bab8bd4c in memory
flw f31, 0(x2) # load 0xaac2e128bab8bd4c from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x210407fefeacb663 # load x3 with value 0x210407fefeacb663
sw x3, 0(x2) # store 0x210407fefeacb663 in memory
flw f13, 0(x2) # load 0x210407fefeacb663 from memory into f13
fnmadd.s f7, f31, f1, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0xfe488dad951f6c0e # load x3 with value 0xfe488dad951f6c0e
sw x3, 0(x2) # store 0xfe488dad951f6c0e in memory
flw f28, 0(x2) # load 0xfe488dad951f6c0e from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x8032417763127f94 # load x3 with value 0x8032417763127f94
sw x3, 0(x2) # store 0x8032417763127f94 in memory
flw f24, 0(x2) # load 0x8032417763127f94 from memory into f24
fnmadd.s f27, f28, f22, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0xaf993e24f4099b4f # load x3 with value 0xaf993e24f4099b4f
sw x3, 0(x2) # store 0xaf993e24f4099b4f in memory
flw f18, 0(x2) # load 0xaf993e24f4099b4f from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x275e5a3702e6145e # load x3 with value 0x275e5a3702e6145e
sw x3, 0(x2) # store 0x275e5a3702e6145e in memory
flw f8, 0(x2) # load 0x275e5a3702e6145e from memory into f8
fnmadd.s f19, f18, f12, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xa40ce4ea66652697 # load x3 with value 0xa40ce4ea66652697
sw x3, 0(x2) # store 0xa40ce4ea66652697 in memory
flw f16, 0(x2) # load 0xa40ce4ea66652697 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x99a93891c13188b1 # load x3 with value 0x99a93891c13188b1
sw x3, 0(x2) # store 0x99a93891c13188b1 in memory
flw f14, 0(x2) # load 0x99a93891c13188b1 from memory into f14
fnmadd.s f3, f16, f24, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0xd5df7961e51fc6 # load x3 with value 0xd5df7961e51fc6
sw x3, 0(x2) # store 0xd5df7961e51fc6 in memory
flw f1, 0(x2) # load 0xd5df7961e51fc6 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x5162f115469f7c4c # load x3 with value 0x5162f115469f7c4c
sw x3, 0(x2) # store 0x5162f115469f7c4c in memory
flw f26, 0(x2) # load 0x5162f115469f7c4c from memory into f26
fnmadd.s f9, f1, f12, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0x55fd51d4924d5854 # load x3 with value 0x55fd51d4924d5854
sw x3, 0(x2) # store 0x55fd51d4924d5854 in memory
flw f16, 0(x2) # load 0x55fd51d4924d5854 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x89d7135392fde256 # load x3 with value 0x89d7135392fde256
sw x3, 0(x2) # store 0x89d7135392fde256 in memory
flw f19, 0(x2) # load 0x89d7135392fde256 from memory into f19
fnmadd.s f30, f16, f22, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0xc2bdf54f41b525d6 # load x3 with value 0xc2bdf54f41b525d6
sw x3, 0(x2) # store 0xc2bdf54f41b525d6 in memory
flw f24, 0(x2) # load 0xc2bdf54f41b525d6 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x802080daf2e2d2f # load x3 with value 0x802080daf2e2d2f
sw x3, 0(x2) # store 0x802080daf2e2d2f in memory
flw f2, 0(x2) # load 0x802080daf2e2d2f from memory into f2
fnmadd.s f11, f24, f29, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xefb4bf23192204df # load x3 with value 0xefb4bf23192204df
sw x3, 0(x2) # store 0xefb4bf23192204df in memory
flw f15, 0(x2) # load 0xefb4bf23192204df from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xbe622dcb08a29b58 # load x3 with value 0xbe622dcb08a29b58
sw x3, 0(x2) # store 0xbe622dcb08a29b58 in memory
flw f7, 0(x2) # load 0xbe622dcb08a29b58 from memory into f7
fnmadd.s f23, f15, f18, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0xade0391676ca0d16 # load x3 with value 0xade0391676ca0d16
sw x3, 0(x2) # store 0xade0391676ca0d16 in memory
flw f13, 0(x2) # load 0xade0391676ca0d16 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x6ab7129e9682a30c # load x3 with value 0x6ab7129e9682a30c
sw x3, 0(x2) # store 0x6ab7129e9682a30c in memory
flw f25, 0(x2) # load 0x6ab7129e9682a30c from memory into f25
fnmadd.s f10, f13, f26, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0x24526f775a2ec943 # load x3 with value 0x24526f775a2ec943
sw x3, 0(x2) # store 0x24526f775a2ec943 in memory
flw f20, 0(x2) # load 0x24526f775a2ec943 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x3543f5ea74ccce98 # load x3 with value 0x3543f5ea74ccce98
sw x3, 0(x2) # store 0x3543f5ea74ccce98 in memory
flw f2, 0(x2) # load 0x3543f5ea74ccce98 from memory into f2
fnmadd.s f1, f20, f17, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xf20660dc8aeb48f8 # load x3 with value 0xf20660dc8aeb48f8
sw x3, 0(x2) # store 0xf20660dc8aeb48f8 in memory
flw f22, 0(x2) # load 0xf20660dc8aeb48f8 from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x62fe4f8acfd0f82d # load x3 with value 0x62fe4f8acfd0f82d
sw x3, 0(x2) # store 0x62fe4f8acfd0f82d in memory
flw f28, 0(x2) # load 0x62fe4f8acfd0f82d from memory into f28
fnmadd.s f16, f22, f31, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0x64f3be1f98cdbc3a # load x3 with value 0x64f3be1f98cdbc3a
sw x3, 0(x2) # store 0x64f3be1f98cdbc3a in memory
flw f7, 0(x2) # load 0x64f3be1f98cdbc3a from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xb67e9ecbfa77fd7b # load x3 with value 0xb67e9ecbfa77fd7b
sw x3, 0(x2) # store 0xb67e9ecbfa77fd7b in memory
flw f15, 0(x2) # load 0xb67e9ecbfa77fd7b from memory into f15
fnmadd.s f9, f7, f31, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0xcc49f1bfeda28b9c # load x3 with value 0xcc49f1bfeda28b9c
sw x3, 0(x2) # store 0xcc49f1bfeda28b9c in memory
flw f26, 0(x2) # load 0xcc49f1bfeda28b9c from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xff617f049ec8dc46 # load x3 with value 0xff617f049ec8dc46
sw x3, 0(x2) # store 0xff617f049ec8dc46 in memory
flw f25, 0(x2) # load 0xff617f049ec8dc46 from memory into f25
fnmadd.s f11, f26, f23, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0x993a8f166057980d # load x3 with value 0x993a8f166057980d
sw x3, 0(x2) # store 0x993a8f166057980d in memory
flw f17, 0(x2) # load 0x993a8f166057980d from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xe89f3f10c2acbbab # load x3 with value 0xe89f3f10c2acbbab
sw x3, 0(x2) # store 0xe89f3f10c2acbbab in memory
flw f10, 0(x2) # load 0xe89f3f10c2acbbab from memory into f10
fnmadd.s f18, f17, f14, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x4aac3b9eda2bdfd # load x3 with value 0x4aac3b9eda2bdfd
sw x3, 0(x2) # store 0x4aac3b9eda2bdfd in memory
flw f31, 0(x2) # load 0x4aac3b9eda2bdfd from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x4de6417259b76078 # load x3 with value 0x4de6417259b76078
sw x3, 0(x2) # store 0x4de6417259b76078 in memory
flw f9, 0(x2) # load 0x4de6417259b76078 from memory into f9
fnmadd.s f25, f31, f22, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0xcc60685aaa1a6e80 # load x3 with value 0xcc60685aaa1a6e80
sw x3, 0(x2) # store 0xcc60685aaa1a6e80 in memory
flw f18, 0(x2) # load 0xcc60685aaa1a6e80 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xc115a58b7ff6c195 # load x3 with value 0xc115a58b7ff6c195
sw x3, 0(x2) # store 0xc115a58b7ff6c195 in memory
flw f7, 0(x2) # load 0xc115a58b7ff6c195 from memory into f7
fnmadd.s f20, f18, f23, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0xa186252181420028 # load x3 with value 0xa186252181420028
sw x3, 0(x2) # store 0xa186252181420028 in memory
flw f16, 0(x2) # load 0xa186252181420028 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xaf17a7cb21378e13 # load x3 with value 0xaf17a7cb21378e13
sw x3, 0(x2) # store 0xaf17a7cb21378e13 in memory
flw f2, 0(x2) # load 0xaf17a7cb21378e13 from memory into f2
fnmadd.s f14, f16, f17, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0x611f08d7be30b805 # load x3 with value 0x611f08d7be30b805
sw x3, 0(x2) # store 0x611f08d7be30b805 in memory
flw f18, 0(x2) # load 0x611f08d7be30b805 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x8d1ac87657da7d29 # load x3 with value 0x8d1ac87657da7d29
sw x3, 0(x2) # store 0x8d1ac87657da7d29 in memory
flw f17, 0(x2) # load 0x8d1ac87657da7d29 from memory into f17
fnmadd.s f14, f18, f2, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0xa757fe0bfdc6bf81 # load x3 with value 0xa757fe0bfdc6bf81
sw x3, 0(x2) # store 0xa757fe0bfdc6bf81 in memory
flw f19, 0(x2) # load 0xa757fe0bfdc6bf81 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x25422abad367db7f # load x3 with value 0x25422abad367db7f
sw x3, 0(x2) # store 0x25422abad367db7f in memory
flw f12, 0(x2) # load 0x25422abad367db7f from memory into f12
fnmadd.s f13, f19, f20, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xf3734ba19fb03d29 # load x3 with value 0xf3734ba19fb03d29
sw x3, 0(x2) # store 0xf3734ba19fb03d29 in memory
flw f3, 0(x2) # load 0xf3734ba19fb03d29 from memory into f3
la x2, scratch
li x3, 0x334210549594c0d # load x3 with value 0x334210549594c0d
sw x3, 0(x2) # store 0x334210549594c0d in memory
flw f30, 0(x2) # load 0x334210549594c0d from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.s f23, f3, f30, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0x60208d90b953467a # load x3 with value 0x60208d90b953467a
sw x3, 0(x2) # store 0x60208d90b953467a in memory
flw f17, 0(x2) # load 0x60208d90b953467a from memory into f17
la x2, scratch
li x3, 0x3bdb8f319cc2b5bf # load x3 with value 0x3bdb8f319cc2b5bf
sw x3, 0(x2) # store 0x3bdb8f319cc2b5bf in memory
flw f30, 0(x2) # load 0x3bdb8f319cc2b5bf from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f21, f17, f30, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x3ec2f16c3e9ffead # load x3 with value 0x3ec2f16c3e9ffead
sw x3, 0(x2) # store 0x3ec2f16c3e9ffead in memory
flw f8, 0(x2) # load 0x3ec2f16c3e9ffead from memory into f8
la x2, scratch
li x3, 0x405bf6917a6842ec # load x3 with value 0x405bf6917a6842ec
sw x3, 0(x2) # store 0x405bf6917a6842ec in memory
flw f12, 0(x2) # load 0x405bf6917a6842ec from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmadd.s f22, f8, f12, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x6175345449ad088e # load x3 with value 0x6175345449ad088e
sw x3, 0(x2) # store 0x6175345449ad088e in memory
flw f10, 0(x2) # load 0x6175345449ad088e from memory into f10
la x2, scratch
li x3, 0xe982342a60310b6e # load x3 with value 0xe982342a60310b6e
sw x3, 0(x2) # store 0xe982342a60310b6e in memory
flw f16, 0(x2) # load 0xe982342a60310b6e from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f19, f10, f16, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0xc677b05d35fe7f30 # load x3 with value 0xc677b05d35fe7f30
sw x3, 0(x2) # store 0xc677b05d35fe7f30 in memory
flw f24, 0(x2) # load 0xc677b05d35fe7f30 from memory into f24
la x2, scratch
li x3, 0xd6fb9a7ba14bb948 # load x3 with value 0xd6fb9a7ba14bb948
sw x3, 0(x2) # store 0xd6fb9a7ba14bb948 in memory
flw f13, 0(x2) # load 0xd6fb9a7ba14bb948 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmadd.s f27, f24, f13, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0xcfa3ef84f54506a8 # load x3 with value 0xcfa3ef84f54506a8
sw x3, 0(x2) # store 0xcfa3ef84f54506a8 in memory
flw f10, 0(x2) # load 0xcfa3ef84f54506a8 from memory into f10
la x2, scratch
li x3, 0x3a16aa5d968be5b7 # load x3 with value 0x3a16aa5d968be5b7
sw x3, 0(x2) # store 0x3a16aa5d968be5b7 in memory
flw f25, 0(x2) # load 0x3a16aa5d968be5b7 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmadd.s f26, f10, f25, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0x21ff0d060e88e5b6 # load x3 with value 0x21ff0d060e88e5b6
sw x3, 0(x2) # store 0x21ff0d060e88e5b6 in memory
flw f21, 0(x2) # load 0x21ff0d060e88e5b6 from memory into f21
la x2, scratch
li x3, 0xdcade6b6d8b39842 # load x3 with value 0xdcade6b6d8b39842
sw x3, 0(x2) # store 0xdcade6b6d8b39842 in memory
flw f8, 0(x2) # load 0xdcade6b6d8b39842 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmadd.s f1, f21, f8, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0x26afbf91691452dc # load x3 with value 0x26afbf91691452dc
sw x3, 0(x2) # store 0x26afbf91691452dc in memory
flw f1, 0(x2) # load 0x26afbf91691452dc from memory into f1
la x2, scratch
li x3, 0x56b649cc07b8a53c # load x3 with value 0x56b649cc07b8a53c
sw x3, 0(x2) # store 0x56b649cc07b8a53c in memory
flw f25, 0(x2) # load 0x56b649cc07b8a53c from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmadd.s f20, f1, f25, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0xf39f67aa1ea84aa5 # load x3 with value 0xf39f67aa1ea84aa5
sw x3, 0(x2) # store 0xf39f67aa1ea84aa5 in memory
flw f31, 0(x2) # load 0xf39f67aa1ea84aa5 from memory into f31
la x2, scratch
li x3, 0xd1a8bc016d7e7fbd # load x3 with value 0xd1a8bc016d7e7fbd
sw x3, 0(x2) # store 0xd1a8bc016d7e7fbd in memory
flw f16, 0(x2) # load 0xd1a8bc016d7e7fbd from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f12, f31, f16, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0xf7dbeb9180815232 # load x3 with value 0xf7dbeb9180815232
sw x3, 0(x2) # store 0xf7dbeb9180815232 in memory
flw f9, 0(x2) # load 0xf7dbeb9180815232 from memory into f9
la x2, scratch
li x3, 0x4c201e1f9d8f7f31 # load x3 with value 0x4c201e1f9d8f7f31
sw x3, 0(x2) # store 0x4c201e1f9d8f7f31 in memory
flw f22, 0(x2) # load 0x4c201e1f9d8f7f31 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmadd.s f30, f9, f22, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x47f266cb577fb472 # load x3 with value 0x47f266cb577fb472
sw x3, 0(x2) # store 0x47f266cb577fb472 in memory
flw f9, 0(x2) # load 0x47f266cb577fb472 from memory into f9
la x2, scratch
li x3, 0x7e78a08b4734e126 # load x3 with value 0x7e78a08b4734e126
sw x3, 0(x2) # store 0x7e78a08b4734e126 in memory
flw f1, 0(x2) # load 0x7e78a08b4734e126 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmadd.s f6, f9, f1, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0x12bcb500f90e45f2 # load x3 with value 0x12bcb500f90e45f2
sw x3, 0(x2) # store 0x12bcb500f90e45f2 in memory
flw f18, 0(x2) # load 0x12bcb500f90e45f2 from memory into f18
la x2, scratch
li x3, 0x61be0e8e3e77cd40 # load x3 with value 0x61be0e8e3e77cd40
sw x3, 0(x2) # store 0x61be0e8e3e77cd40 in memory
flw f2, 0(x2) # load 0x61be0e8e3e77cd40 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f13, f18, f2, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xb3046e2604accf3f # load x3 with value 0xb3046e2604accf3f
sw x3, 0(x2) # store 0xb3046e2604accf3f in memory
flw f16, 0(x2) # load 0xb3046e2604accf3f from memory into f16
la x2, scratch
li x3, 0x4a4b12fbc5077da1 # load x3 with value 0x4a4b12fbc5077da1
sw x3, 0(x2) # store 0x4a4b12fbc5077da1 in memory
flw f15, 0(x2) # load 0x4a4b12fbc5077da1 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f3, f16, f15, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0x6a4d7130b28b8b57 # load x3 with value 0x6a4d7130b28b8b57
sw x3, 0(x2) # store 0x6a4d7130b28b8b57 in memory
flw f19, 0(x2) # load 0x6a4d7130b28b8b57 from memory into f19
la x2, scratch
li x3, 0xb05892387dcdc5dc # load x3 with value 0xb05892387dcdc5dc
sw x3, 0(x2) # store 0xb05892387dcdc5dc in memory
flw f26, 0(x2) # load 0xb05892387dcdc5dc from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmadd.s f20, f19, f26, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0xa9ed5d1ea3e90590 # load x3 with value 0xa9ed5d1ea3e90590
sw x3, 0(x2) # store 0xa9ed5d1ea3e90590 in memory
flw f23, 0(x2) # load 0xa9ed5d1ea3e90590 from memory into f23
la x2, scratch
li x3, 0x19785c29fed3a35a # load x3 with value 0x19785c29fed3a35a
sw x3, 0(x2) # store 0x19785c29fed3a35a in memory
flw f30, 0(x2) # load 0x19785c29fed3a35a from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmadd.s f15, f23, f30, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0xc6f773016e063270 # load x3 with value 0xc6f773016e063270
sw x3, 0(x2) # store 0xc6f773016e063270 in memory
flw f30, 0(x2) # load 0xc6f773016e063270 from memory into f30
la x2, scratch
li x3, 0xd0ba5748aa9f755a # load x3 with value 0xd0ba5748aa9f755a
sw x3, 0(x2) # store 0xd0ba5748aa9f755a in memory
flw f1, 0(x2) # load 0xd0ba5748aa9f755a from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmadd.s f17, f30, f1, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0xbeb50edfd4c683ca # load x3 with value 0xbeb50edfd4c683ca
sw x3, 0(x2) # store 0xbeb50edfd4c683ca in memory
flw f13, 0(x2) # load 0xbeb50edfd4c683ca from memory into f13
la x2, scratch
li x3, 0xece94019649acb58 # load x3 with value 0xece94019649acb58
sw x3, 0(x2) # store 0xece94019649acb58 in memory
flw f18, 0(x2) # load 0xece94019649acb58 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.s f27, f13, f18, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0xe1aab68448e6457d # load x3 with value 0xe1aab68448e6457d
sw x3, 0(x2) # store 0xe1aab68448e6457d in memory
flw f9, 0(x2) # load 0xe1aab68448e6457d from memory into f9
la x2, scratch
li x3, 0x9f9774d698ebaaa5 # load x3 with value 0x9f9774d698ebaaa5
sw x3, 0(x2) # store 0x9f9774d698ebaaa5 in memory
flw f28, 0(x2) # load 0x9f9774d698ebaaa5 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fnmadd.s f21, f9, f28, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0xf2855d7a45b77672 # load x3 with value 0xf2855d7a45b77672
sw x3, 0(x2) # store 0xf2855d7a45b77672 in memory
flw f26, 0(x2) # load 0xf2855d7a45b77672 from memory into f26
la x2, scratch
li x3, 0x69591c09bc5d3c57 # load x3 with value 0x69591c09bc5d3c57
sw x3, 0(x2) # store 0x69591c09bc5d3c57 in memory
flw f7, 0(x2) # load 0x69591c09bc5d3c57 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmadd.s f21, f26, f7, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0x26e43d58261c3f87 # load x3 with value 0x26e43d58261c3f87
sw x3, 0(x2) # store 0x26e43d58261c3f87 in memory
flw f8, 0(x2) # load 0x26e43d58261c3f87 from memory into f8
la x2, scratch
li x3, 0x78ad92cc8af1051c # load x3 with value 0x78ad92cc8af1051c
sw x3, 0(x2) # store 0x78ad92cc8af1051c in memory
flw f31, 0(x2) # load 0x78ad92cc8af1051c from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f21, f8, f31, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0xe62e363ae581a048 # load x3 with value 0xe62e363ae581a048
sw x3, 0(x2) # store 0xe62e363ae581a048 in memory
flw f25, 0(x2) # load 0xe62e363ae581a048 from memory into f25
la x2, scratch
li x3, 0x67adc5bd7d9d7551 # load x3 with value 0x67adc5bd7d9d7551
sw x3, 0(x2) # store 0x67adc5bd7d9d7551 in memory
flw f7, 0(x2) # load 0x67adc5bd7d9d7551 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f10, f25, f7, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0xf6385e880da07dd9 # load x3 with value 0xf6385e880da07dd9
sw x3, 0(x2) # store 0xf6385e880da07dd9 in memory
flw f6, 0(x2) # load 0xf6385e880da07dd9 from memory into f6
la x2, scratch
li x3, 0xccb4e0b4c9be7e8e # load x3 with value 0xccb4e0b4c9be7e8e
sw x3, 0(x2) # store 0xccb4e0b4c9be7e8e in memory
flw f10, 0(x2) # load 0xccb4e0b4c9be7e8e from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmadd.s f28, f6, f10, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0xad79c8b8f35ff32f # load x3 with value 0xad79c8b8f35ff32f
sw x3, 0(x2) # store 0xad79c8b8f35ff32f in memory
flw f24, 0(x2) # load 0xad79c8b8f35ff32f from memory into f24
la x2, scratch
li x3, 0x181feb5bc79fd89a # load x3 with value 0x181feb5bc79fd89a
sw x3, 0(x2) # store 0x181feb5bc79fd89a in memory
flw f15, 0(x2) # load 0x181feb5bc79fd89a from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fnmadd.s f3, f24, f15, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0x7d4a782915694845 # load x3 with value 0x7d4a782915694845
sw x3, 0(x2) # store 0x7d4a782915694845 in memory
flw f25, 0(x2) # load 0x7d4a782915694845 from memory into f25
la x2, scratch
li x3, 0x576d78b93de15b67 # load x3 with value 0x576d78b93de15b67
sw x3, 0(x2) # store 0x576d78b93de15b67 in memory
flw f18, 0(x2) # load 0x576d78b93de15b67 from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f5, f25, f18, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x3104a42cfc18ebde # load x3 with value 0x3104a42cfc18ebde
sw x3, 0(x2) # store 0x3104a42cfc18ebde in memory
flw f12, 0(x2) # load 0x3104a42cfc18ebde from memory into f12
la x2, scratch
li x3, 0x605ed04b4900aad7 # load x3 with value 0x605ed04b4900aad7
sw x3, 0(x2) # store 0x605ed04b4900aad7 in memory
flw f16, 0(x2) # load 0x605ed04b4900aad7 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmadd.s f3, f12, f16, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0x512e773c64875815 # load x3 with value 0x512e773c64875815
sw x3, 0(x2) # store 0x512e773c64875815 in memory
flw f16, 0(x2) # load 0x512e773c64875815 from memory into f16
la x2, scratch
li x3, 0xcf9f7541f52c33b9 # load x3 with value 0xcf9f7541f52c33b9
sw x3, 0(x2) # store 0xcf9f7541f52c33b9 in memory
flw f5, 0(x2) # load 0xcf9f7541f52c33b9 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fnmadd.s f8, f16, f5, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x8c11999d0f97db63 # load x3 with value 0x8c11999d0f97db63
sw x3, 0(x2) # store 0x8c11999d0f97db63 in memory
flw f9, 0(x2) # load 0x8c11999d0f97db63 from memory into f9
la x2, scratch
li x3, 0xda652da65e5da818 # load x3 with value 0xda652da65e5da818
sw x3, 0(x2) # store 0xda652da65e5da818 in memory
flw f8, 0(x2) # load 0xda652da65e5da818 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fnmadd.s f19, f9, f8, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x417f627cebafb494 # load x3 with value 0x417f627cebafb494
sw x3, 0(x2) # store 0x417f627cebafb494 in memory
flw f15, 0(x2) # load 0x417f627cebafb494 from memory into f15
la x2, scratch
li x3, 0x134cf9d41345a149 # load x3 with value 0x134cf9d41345a149
sw x3, 0(x2) # store 0x134cf9d41345a149 in memory
flw f26, 0(x2) # load 0x134cf9d41345a149 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f23, f15, f26, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x7f372584e5f989d2 # load x3 with value 0x7f372584e5f989d2
sw x3, 0(x2) # store 0x7f372584e5f989d2 in memory
flw f0, 0(x2) # load 0x7f372584e5f989d2 from memory into f0
la x2, scratch
li x3, 0x196b6db72ae6a800 # load x3 with value 0x196b6db72ae6a800
sw x3, 0(x2) # store 0x196b6db72ae6a800 in memory
flw f7, 0(x2) # load 0x196b6db72ae6a800 from memory into f7
la x2, scratch
li x3, 0xc715997a299a611e # load x3 with value 0xc715997a299a611e
sw x3, 0(x2) # store 0xc715997a299a611e in memory
flw f17, 0(x2) # load 0xc715997a299a611e from memory into f17
fnmadd.s f0, f0, f7, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0xc65432eafa19cdb6 # load x3 with value 0xc65432eafa19cdb6
sw x3, 0(x2) # store 0xc65432eafa19cdb6 in memory
flw f1, 0(x2) # load 0xc65432eafa19cdb6 from memory into f1
la x2, scratch
li x3, 0xa6c0c6fc6b0181b7 # load x3 with value 0xa6c0c6fc6b0181b7
sw x3, 0(x2) # store 0xa6c0c6fc6b0181b7 in memory
flw f15, 0(x2) # load 0xa6c0c6fc6b0181b7 from memory into f15
la x2, scratch
li x3, 0x347b2bad0a177b23 # load x3 with value 0x347b2bad0a177b23
sw x3, 0(x2) # store 0x347b2bad0a177b23 in memory
flw f16, 0(x2) # load 0x347b2bad0a177b23 from memory into f16
fnmadd.s f1, f1, f15, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xd8c744ec96ea0310 # load x3 with value 0xd8c744ec96ea0310
sw x3, 0(x2) # store 0xd8c744ec96ea0310 in memory
flw f2, 0(x2) # load 0xd8c744ec96ea0310 from memory into f2
la x2, scratch
li x3, 0x22d0d0e2ebdb3f4e # load x3 with value 0x22d0d0e2ebdb3f4e
sw x3, 0(x2) # store 0x22d0d0e2ebdb3f4e in memory
flw f15, 0(x2) # load 0x22d0d0e2ebdb3f4e from memory into f15
la x2, scratch
li x3, 0xc249ea92346c028d # load x3 with value 0xc249ea92346c028d
sw x3, 0(x2) # store 0xc249ea92346c028d in memory
flw f3, 0(x2) # load 0xc249ea92346c028d from memory into f3
fnmadd.s f2, f2, f15, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0xe4c7115774af4af2 # load x3 with value 0xe4c7115774af4af2
sw x3, 0(x2) # store 0xe4c7115774af4af2 in memory
flw f3, 0(x2) # load 0xe4c7115774af4af2 from memory into f3
la x2, scratch
li x3, 0x6b9439757212f020 # load x3 with value 0x6b9439757212f020
sw x3, 0(x2) # store 0x6b9439757212f020 in memory
flw f20, 0(x2) # load 0x6b9439757212f020 from memory into f20
la x2, scratch
li x3, 0x163b2393010a116b # load x3 with value 0x163b2393010a116b
sw x3, 0(x2) # store 0x163b2393010a116b in memory
flw f30, 0(x2) # load 0x163b2393010a116b from memory into f30
fnmadd.s f3, f3, f20, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9c88d9f2ed1a3c46 # load x3 with value 0x9c88d9f2ed1a3c46
sw x3, 0(x2) # store 0x9c88d9f2ed1a3c46 in memory
flw f4, 0(x2) # load 0x9c88d9f2ed1a3c46 from memory into f4
la x2, scratch
li x3, 0x9ec79d67b1de4634 # load x3 with value 0x9ec79d67b1de4634
sw x3, 0(x2) # store 0x9ec79d67b1de4634 in memory
flw f1, 0(x2) # load 0x9ec79d67b1de4634 from memory into f1
la x2, scratch
li x3, 0x3d9fecca00d30b24 # load x3 with value 0x3d9fecca00d30b24
sw x3, 0(x2) # store 0x3d9fecca00d30b24 in memory
flw f2, 0(x2) # load 0x3d9fecca00d30b24 from memory into f2
fnmadd.s f4, f4, f1, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x207d5179ed1acf69 # load x3 with value 0x207d5179ed1acf69
sw x3, 0(x2) # store 0x207d5179ed1acf69 in memory
flw f5, 0(x2) # load 0x207d5179ed1acf69 from memory into f5
la x2, scratch
li x3, 0x3a93b55130bff5f4 # load x3 with value 0x3a93b55130bff5f4
sw x3, 0(x2) # store 0x3a93b55130bff5f4 in memory
flw f2, 0(x2) # load 0x3a93b55130bff5f4 from memory into f2
la x2, scratch
li x3, 0xa22ce1599f34bc5d # load x3 with value 0xa22ce1599f34bc5d
sw x3, 0(x2) # store 0xa22ce1599f34bc5d in memory
flw f25, 0(x2) # load 0xa22ce1599f34bc5d from memory into f25
fnmadd.s f5, f5, f2, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x10c7c4329ae68c84 # load x3 with value 0x10c7c4329ae68c84
sw x3, 0(x2) # store 0x10c7c4329ae68c84 in memory
flw f6, 0(x2) # load 0x10c7c4329ae68c84 from memory into f6
la x2, scratch
li x3, 0x73cfc4e494b7b54 # load x3 with value 0x73cfc4e494b7b54
sw x3, 0(x2) # store 0x73cfc4e494b7b54 in memory
flw f4, 0(x2) # load 0x73cfc4e494b7b54 from memory into f4
la x2, scratch
li x3, 0x3141a0469dc6a967 # load x3 with value 0x3141a0469dc6a967
sw x3, 0(x2) # store 0x3141a0469dc6a967 in memory
flw f16, 0(x2) # load 0x3141a0469dc6a967 from memory into f16
fnmadd.s f6, f6, f4, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xff91b10c86211ee3 # load x3 with value 0xff91b10c86211ee3
sw x3, 0(x2) # store 0xff91b10c86211ee3 in memory
flw f7, 0(x2) # load 0xff91b10c86211ee3 from memory into f7
la x2, scratch
li x3, 0x976f546d1abce979 # load x3 with value 0x976f546d1abce979
sw x3, 0(x2) # store 0x976f546d1abce979 in memory
flw f15, 0(x2) # load 0x976f546d1abce979 from memory into f15
la x2, scratch
li x3, 0x65116214ac1d355e # load x3 with value 0x65116214ac1d355e
sw x3, 0(x2) # store 0x65116214ac1d355e in memory
flw f5, 0(x2) # load 0x65116214ac1d355e from memory into f5
fnmadd.s f7, f7, f15, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x71fa095ebbd17c79 # load x3 with value 0x71fa095ebbd17c79
sw x3, 0(x2) # store 0x71fa095ebbd17c79 in memory
flw f8, 0(x2) # load 0x71fa095ebbd17c79 from memory into f8
la x2, scratch
li x3, 0xf920ee531fd5b231 # load x3 with value 0xf920ee531fd5b231
sw x3, 0(x2) # store 0xf920ee531fd5b231 in memory
flw f12, 0(x2) # load 0xf920ee531fd5b231 from memory into f12
la x2, scratch
li x3, 0x79e808f814265513 # load x3 with value 0x79e808f814265513
sw x3, 0(x2) # store 0x79e808f814265513 in memory
flw f19, 0(x2) # load 0x79e808f814265513 from memory into f19
fnmadd.s f8, f8, f12, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0x5b969ca67381f468 # load x3 with value 0x5b969ca67381f468
sw x3, 0(x2) # store 0x5b969ca67381f468 in memory
flw f9, 0(x2) # load 0x5b969ca67381f468 from memory into f9
la x2, scratch
li x3, 0xaf66f8c4cc4c9ab9 # load x3 with value 0xaf66f8c4cc4c9ab9
sw x3, 0(x2) # store 0xaf66f8c4cc4c9ab9 in memory
flw f12, 0(x2) # load 0xaf66f8c4cc4c9ab9 from memory into f12
la x2, scratch
li x3, 0x1b14a0fdf98d5e0b # load x3 with value 0x1b14a0fdf98d5e0b
sw x3, 0(x2) # store 0x1b14a0fdf98d5e0b in memory
flw f22, 0(x2) # load 0x1b14a0fdf98d5e0b from memory into f22
fnmadd.s f9, f9, f12, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x7053663871708aa # load x3 with value 0x7053663871708aa
sw x3, 0(x2) # store 0x7053663871708aa in memory
flw f10, 0(x2) # load 0x7053663871708aa from memory into f10
la x2, scratch
li x3, 0x23b760ddd7940f38 # load x3 with value 0x23b760ddd7940f38
sw x3, 0(x2) # store 0x23b760ddd7940f38 in memory
flw f21, 0(x2) # load 0x23b760ddd7940f38 from memory into f21
la x2, scratch
li x3, 0xb5f1280c29b0c93a # load x3 with value 0xb5f1280c29b0c93a
sw x3, 0(x2) # store 0xb5f1280c29b0c93a in memory
flw f23, 0(x2) # load 0xb5f1280c29b0c93a from memory into f23
fnmadd.s f10, f10, f21, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x422cc98faa14aa58 # load x3 with value 0x422cc98faa14aa58
sw x3, 0(x2) # store 0x422cc98faa14aa58 in memory
flw f11, 0(x2) # load 0x422cc98faa14aa58 from memory into f11
la x2, scratch
li x3, 0xf1a33b75ae55723a # load x3 with value 0xf1a33b75ae55723a
sw x3, 0(x2) # store 0xf1a33b75ae55723a in memory
flw f9, 0(x2) # load 0xf1a33b75ae55723a from memory into f9
la x2, scratch
li x3, 0xd5fadf7fc284318c # load x3 with value 0xd5fadf7fc284318c
sw x3, 0(x2) # store 0xd5fadf7fc284318c in memory
flw f13, 0(x2) # load 0xd5fadf7fc284318c from memory into f13
fnmadd.s f11, f11, f9, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xe8593bc98d1ac295 # load x3 with value 0xe8593bc98d1ac295
sw x3, 0(x2) # store 0xe8593bc98d1ac295 in memory
flw f12, 0(x2) # load 0xe8593bc98d1ac295 from memory into f12
la x2, scratch
li x3, 0xc68b915f8dd4f33b # load x3 with value 0xc68b915f8dd4f33b
sw x3, 0(x2) # store 0xc68b915f8dd4f33b in memory
flw f6, 0(x2) # load 0xc68b915f8dd4f33b from memory into f6
la x2, scratch
li x3, 0x88c900c242f713bb # load x3 with value 0x88c900c242f713bb
sw x3, 0(x2) # store 0x88c900c242f713bb in memory
flw f7, 0(x2) # load 0x88c900c242f713bb from memory into f7
fnmadd.s f12, f12, f6, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x295963490e6639fe # load x3 with value 0x295963490e6639fe
sw x3, 0(x2) # store 0x295963490e6639fe in memory
flw f13, 0(x2) # load 0x295963490e6639fe from memory into f13
la x2, scratch
li x3, 0xefcc7d083210e550 # load x3 with value 0xefcc7d083210e550
sw x3, 0(x2) # store 0xefcc7d083210e550 in memory
flw f11, 0(x2) # load 0xefcc7d083210e550 from memory into f11
la x2, scratch
li x3, 0x7cfbd8ac75d2a0b # load x3 with value 0x7cfbd8ac75d2a0b
sw x3, 0(x2) # store 0x7cfbd8ac75d2a0b in memory
flw f30, 0(x2) # load 0x7cfbd8ac75d2a0b from memory into f30
fnmadd.s f13, f13, f11, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0xd5e6ee32b9929acf # load x3 with value 0xd5e6ee32b9929acf
sw x3, 0(x2) # store 0xd5e6ee32b9929acf in memory
flw f14, 0(x2) # load 0xd5e6ee32b9929acf from memory into f14
la x2, scratch
li x3, 0x8d6ed002b01fa33e # load x3 with value 0x8d6ed002b01fa33e
sw x3, 0(x2) # store 0x8d6ed002b01fa33e in memory
flw f18, 0(x2) # load 0x8d6ed002b01fa33e from memory into f18
la x2, scratch
li x3, 0x8326c6d7e3670661 # load x3 with value 0x8326c6d7e3670661
sw x3, 0(x2) # store 0x8326c6d7e3670661 in memory
flw f22, 0(x2) # load 0x8326c6d7e3670661 from memory into f22
fnmadd.s f14, f14, f18, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xee8813deadb76745 # load x3 with value 0xee8813deadb76745
sw x3, 0(x2) # store 0xee8813deadb76745 in memory
flw f15, 0(x2) # load 0xee8813deadb76745 from memory into f15
la x2, scratch
li x3, 0x25c8876b9d672ff6 # load x3 with value 0x25c8876b9d672ff6
sw x3, 0(x2) # store 0x25c8876b9d672ff6 in memory
flw f18, 0(x2) # load 0x25c8876b9d672ff6 from memory into f18
la x2, scratch
li x3, 0x2e95196cbc760f17 # load x3 with value 0x2e95196cbc760f17
sw x3, 0(x2) # store 0x2e95196cbc760f17 in memory
flw f12, 0(x2) # load 0x2e95196cbc760f17 from memory into f12
fnmadd.s f15, f15, f18, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0xf1f4c180255d90bc # load x3 with value 0xf1f4c180255d90bc
sw x3, 0(x2) # store 0xf1f4c180255d90bc in memory
flw f16, 0(x2) # load 0xf1f4c180255d90bc from memory into f16
la x2, scratch
li x3, 0x9a6c7ac7a12fff74 # load x3 with value 0x9a6c7ac7a12fff74
sw x3, 0(x2) # store 0x9a6c7ac7a12fff74 in memory
flw f27, 0(x2) # load 0x9a6c7ac7a12fff74 from memory into f27
la x2, scratch
li x3, 0x7f6718ac18c56953 # load x3 with value 0x7f6718ac18c56953
sw x3, 0(x2) # store 0x7f6718ac18c56953 in memory
flw f3, 0(x2) # load 0x7f6718ac18c56953 from memory into f3
fnmadd.s f16, f16, f27, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xba462cb6a096eb7c # load x3 with value 0xba462cb6a096eb7c
sw x3, 0(x2) # store 0xba462cb6a096eb7c in memory
flw f17, 0(x2) # load 0xba462cb6a096eb7c from memory into f17
la x2, scratch
li x3, 0xbd4b2aec659b57b # load x3 with value 0xbd4b2aec659b57b
sw x3, 0(x2) # store 0xbd4b2aec659b57b in memory
flw f25, 0(x2) # load 0xbd4b2aec659b57b from memory into f25
la x2, scratch
li x3, 0xd196d7b96b94c9fd # load x3 with value 0xd196d7b96b94c9fd
sw x3, 0(x2) # store 0xd196d7b96b94c9fd in memory
flw f19, 0(x2) # load 0xd196d7b96b94c9fd from memory into f19
fnmadd.s f17, f17, f25, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xc426c467dcb9e86 # load x3 with value 0xc426c467dcb9e86
sw x3, 0(x2) # store 0xc426c467dcb9e86 in memory
flw f18, 0(x2) # load 0xc426c467dcb9e86 from memory into f18
la x2, scratch
li x3, 0xae9076fda71a142c # load x3 with value 0xae9076fda71a142c
sw x3, 0(x2) # store 0xae9076fda71a142c in memory
flw f12, 0(x2) # load 0xae9076fda71a142c from memory into f12
la x2, scratch
li x3, 0x9ce7b71975f01687 # load x3 with value 0x9ce7b71975f01687
sw x3, 0(x2) # store 0x9ce7b71975f01687 in memory
flw f13, 0(x2) # load 0x9ce7b71975f01687 from memory into f13
fnmadd.s f18, f18, f12, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0xaaafa207d76fc9fa # load x3 with value 0xaaafa207d76fc9fa
sw x3, 0(x2) # store 0xaaafa207d76fc9fa in memory
flw f19, 0(x2) # load 0xaaafa207d76fc9fa from memory into f19
la x2, scratch
li x3, 0xf1fddbec1e38e96a # load x3 with value 0xf1fddbec1e38e96a
sw x3, 0(x2) # store 0xf1fddbec1e38e96a in memory
flw f14, 0(x2) # load 0xf1fddbec1e38e96a from memory into f14
la x2, scratch
li x3, 0x39fc58ca633e997 # load x3 with value 0x39fc58ca633e997
sw x3, 0(x2) # store 0x39fc58ca633e997 in memory
flw f26, 0(x2) # load 0x39fc58ca633e997 from memory into f26
fnmadd.s f19, f19, f14, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xf4b9307a6e0683b3 # load x3 with value 0xf4b9307a6e0683b3
sw x3, 0(x2) # store 0xf4b9307a6e0683b3 in memory
flw f20, 0(x2) # load 0xf4b9307a6e0683b3 from memory into f20
la x2, scratch
li x3, 0xbbd6f4787d586aa2 # load x3 with value 0xbbd6f4787d586aa2
sw x3, 0(x2) # store 0xbbd6f4787d586aa2 in memory
flw f6, 0(x2) # load 0xbbd6f4787d586aa2 from memory into f6
la x2, scratch
li x3, 0x34ea034d3b934c29 # load x3 with value 0x34ea034d3b934c29
sw x3, 0(x2) # store 0x34ea034d3b934c29 in memory
flw f19, 0(x2) # load 0x34ea034d3b934c29 from memory into f19
fnmadd.s f20, f20, f6, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x3ba76c33caf972e7 # load x3 with value 0x3ba76c33caf972e7
sw x3, 0(x2) # store 0x3ba76c33caf972e7 in memory
flw f21, 0(x2) # load 0x3ba76c33caf972e7 from memory into f21
la x2, scratch
li x3, 0xa7e6ad9aefd2a5ad # load x3 with value 0xa7e6ad9aefd2a5ad
sw x3, 0(x2) # store 0xa7e6ad9aefd2a5ad in memory
flw f30, 0(x2) # load 0xa7e6ad9aefd2a5ad from memory into f30
la x2, scratch
li x3, 0x2106f620a4d68df5 # load x3 with value 0x2106f620a4d68df5
sw x3, 0(x2) # store 0x2106f620a4d68df5 in memory
flw f13, 0(x2) # load 0x2106f620a4d68df5 from memory into f13
fnmadd.s f21, f21, f30, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x722c8d016dc2393a # load x3 with value 0x722c8d016dc2393a
sw x3, 0(x2) # store 0x722c8d016dc2393a in memory
flw f22, 0(x2) # load 0x722c8d016dc2393a from memory into f22
la x2, scratch
li x3, 0x5c736c2b91587eb2 # load x3 with value 0x5c736c2b91587eb2
sw x3, 0(x2) # store 0x5c736c2b91587eb2 in memory
flw f14, 0(x2) # load 0x5c736c2b91587eb2 from memory into f14
la x2, scratch
li x3, 0x34b84399a1fdb33e # load x3 with value 0x34b84399a1fdb33e
sw x3, 0(x2) # store 0x34b84399a1fdb33e in memory
flw f9, 0(x2) # load 0x34b84399a1fdb33e from memory into f9
fnmadd.s f22, f22, f14, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x9059d563575f9531 # load x3 with value 0x9059d563575f9531
sw x3, 0(x2) # store 0x9059d563575f9531 in memory
flw f23, 0(x2) # load 0x9059d563575f9531 from memory into f23
la x2, scratch
li x3, 0x833c989c6f055875 # load x3 with value 0x833c989c6f055875
sw x3, 0(x2) # store 0x833c989c6f055875 in memory
flw f18, 0(x2) # load 0x833c989c6f055875 from memory into f18
la x2, scratch
li x3, 0x480246beb629b04c # load x3 with value 0x480246beb629b04c
sw x3, 0(x2) # store 0x480246beb629b04c in memory
flw f30, 0(x2) # load 0x480246beb629b04c from memory into f30
fnmadd.s f23, f23, f18, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xbb8eca53828a1b86 # load x3 with value 0xbb8eca53828a1b86
sw x3, 0(x2) # store 0xbb8eca53828a1b86 in memory
flw f24, 0(x2) # load 0xbb8eca53828a1b86 from memory into f24
la x2, scratch
li x3, 0xa72291398f456c99 # load x3 with value 0xa72291398f456c99
sw x3, 0(x2) # store 0xa72291398f456c99 in memory
flw f10, 0(x2) # load 0xa72291398f456c99 from memory into f10
la x2, scratch
li x3, 0xcc459966584566c5 # load x3 with value 0xcc459966584566c5
sw x3, 0(x2) # store 0xcc459966584566c5 in memory
flw f12, 0(x2) # load 0xcc459966584566c5 from memory into f12
fnmadd.s f24, f24, f10, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xfbdb0bf3bdd7e86 # load x3 with value 0xfbdb0bf3bdd7e86
sw x3, 0(x2) # store 0xfbdb0bf3bdd7e86 in memory
flw f25, 0(x2) # load 0xfbdb0bf3bdd7e86 from memory into f25
la x2, scratch
li x3, 0x56fa65074e63b20e # load x3 with value 0x56fa65074e63b20e
sw x3, 0(x2) # store 0x56fa65074e63b20e in memory
flw f15, 0(x2) # load 0x56fa65074e63b20e from memory into f15
la x2, scratch
li x3, 0x54ebf3ea4a052966 # load x3 with value 0x54ebf3ea4a052966
sw x3, 0(x2) # store 0x54ebf3ea4a052966 in memory
flw f28, 0(x2) # load 0x54ebf3ea4a052966 from memory into f28
fnmadd.s f25, f25, f15, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x8a663e9340fc3ddb # load x3 with value 0x8a663e9340fc3ddb
sw x3, 0(x2) # store 0x8a663e9340fc3ddb in memory
flw f26, 0(x2) # load 0x8a663e9340fc3ddb from memory into f26
la x2, scratch
li x3, 0x952e7021e247d96a # load x3 with value 0x952e7021e247d96a
sw x3, 0(x2) # store 0x952e7021e247d96a in memory
flw f16, 0(x2) # load 0x952e7021e247d96a from memory into f16
la x2, scratch
li x3, 0x7edffadb31512311 # load x3 with value 0x7edffadb31512311
sw x3, 0(x2) # store 0x7edffadb31512311 in memory
flw f15, 0(x2) # load 0x7edffadb31512311 from memory into f15
fnmadd.s f26, f26, f16, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x15d97d503ce4f359 # load x3 with value 0x15d97d503ce4f359
sw x3, 0(x2) # store 0x15d97d503ce4f359 in memory
flw f27, 0(x2) # load 0x15d97d503ce4f359 from memory into f27
la x2, scratch
li x3, 0x7fd9b677eb9e9cfe # load x3 with value 0x7fd9b677eb9e9cfe
sw x3, 0(x2) # store 0x7fd9b677eb9e9cfe in memory
flw f25, 0(x2) # load 0x7fd9b677eb9e9cfe from memory into f25
la x2, scratch
li x3, 0x8855198dcedcc78f # load x3 with value 0x8855198dcedcc78f
sw x3, 0(x2) # store 0x8855198dcedcc78f in memory
flw f28, 0(x2) # load 0x8855198dcedcc78f from memory into f28
fnmadd.s f27, f27, f25, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x2ddb9cf4c92addcd # load x3 with value 0x2ddb9cf4c92addcd
sw x3, 0(x2) # store 0x2ddb9cf4c92addcd in memory
flw f28, 0(x2) # load 0x2ddb9cf4c92addcd from memory into f28
la x2, scratch
li x3, 0x68b3a7e29bd0a635 # load x3 with value 0x68b3a7e29bd0a635
sw x3, 0(x2) # store 0x68b3a7e29bd0a635 in memory
flw f29, 0(x2) # load 0x68b3a7e29bd0a635 from memory into f29
la x2, scratch
li x3, 0x4d76f37c250065a9 # load x3 with value 0x4d76f37c250065a9
sw x3, 0(x2) # store 0x4d76f37c250065a9 in memory
flw f26, 0(x2) # load 0x4d76f37c250065a9 from memory into f26
fnmadd.s f28, f28, f29, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0xcd7861147d858428 # load x3 with value 0xcd7861147d858428
sw x3, 0(x2) # store 0xcd7861147d858428 in memory
flw f29, 0(x2) # load 0xcd7861147d858428 from memory into f29
la x2, scratch
li x3, 0x7ae2bc97a657994f # load x3 with value 0x7ae2bc97a657994f
sw x3, 0(x2) # store 0x7ae2bc97a657994f in memory
flw f9, 0(x2) # load 0x7ae2bc97a657994f from memory into f9
la x2, scratch
li x3, 0x48e2c01685cb0639 # load x3 with value 0x48e2c01685cb0639
sw x3, 0(x2) # store 0x48e2c01685cb0639 in memory
flw f15, 0(x2) # load 0x48e2c01685cb0639 from memory into f15
fnmadd.s f29, f29, f9, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0xba485964bca2e726 # load x3 with value 0xba485964bca2e726
sw x3, 0(x2) # store 0xba485964bca2e726 in memory
flw f30, 0(x2) # load 0xba485964bca2e726 from memory into f30
la x2, scratch
li x3, 0x251036912ffc42df # load x3 with value 0x251036912ffc42df
sw x3, 0(x2) # store 0x251036912ffc42df in memory
flw f5, 0(x2) # load 0x251036912ffc42df from memory into f5
la x2, scratch
li x3, 0x775b135ace66b79b # load x3 with value 0x775b135ace66b79b
sw x3, 0(x2) # store 0x775b135ace66b79b in memory
flw f29, 0(x2) # load 0x775b135ace66b79b from memory into f29
fnmadd.s f30, f30, f5, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x94493cc070bea040 # load x3 with value 0x94493cc070bea040
sw x3, 0(x2) # store 0x94493cc070bea040 in memory
flw f31, 0(x2) # load 0x94493cc070bea040 from memory into f31
la x2, scratch
li x3, 0x992a028cc7737bf2 # load x3 with value 0x992a028cc7737bf2
sw x3, 0(x2) # store 0x992a028cc7737bf2 in memory
flw f25, 0(x2) # load 0x992a028cc7737bf2 from memory into f25
la x2, scratch
li x3, 0x830c0f1c1a7def4f # load x3 with value 0x830c0f1c1a7def4f
sw x3, 0(x2) # store 0x830c0f1c1a7def4f in memory
flw f13, 0(x2) # load 0x830c0f1c1a7def4f from memory into f13
fnmadd.s f31, f31, f25, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x94f874ef18ddeaf1 # load x3 with value 0x94f874ef18ddeaf1
sw x3, 0(x2) # store 0x94f874ef18ddeaf1 in memory
flw f20, 0(x2) # load 0x94f874ef18ddeaf1 from memory into f20
la x2, scratch
li x3, 0xf240926652ec002a # load x3 with value 0xf240926652ec002a
sw x3, 0(x2) # store 0xf240926652ec002a in memory
flw f0, 0(x2) # load 0xf240926652ec002a from memory into f0
la x2, scratch
li x3, 0x4ccc406d4522c92a # load x3 with value 0x4ccc406d4522c92a
sw x3, 0(x2) # store 0x4ccc406d4522c92a in memory
flw f23, 0(x2) # load 0x4ccc406d4522c92a from memory into f23
fnmadd.s f0, f20, f0, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x356fe28c6ac0d1b # load x3 with value 0x356fe28c6ac0d1b
sw x3, 0(x2) # store 0x356fe28c6ac0d1b in memory
flw f16, 0(x2) # load 0x356fe28c6ac0d1b from memory into f16
la x2, scratch
li x3, 0x797dd20cf710432f # load x3 with value 0x797dd20cf710432f
sw x3, 0(x2) # store 0x797dd20cf710432f in memory
flw f1, 0(x2) # load 0x797dd20cf710432f from memory into f1
la x2, scratch
li x3, 0xba2b487c1020acf0 # load x3 with value 0xba2b487c1020acf0
sw x3, 0(x2) # store 0xba2b487c1020acf0 in memory
flw f22, 0(x2) # load 0xba2b487c1020acf0 from memory into f22
fnmadd.s f1, f16, f1, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0xd054a2c5d08bb51d # load x3 with value 0xd054a2c5d08bb51d
sw x3, 0(x2) # store 0xd054a2c5d08bb51d in memory
flw f15, 0(x2) # load 0xd054a2c5d08bb51d from memory into f15
la x2, scratch
li x3, 0x6ce9a449b5ad1a3a # load x3 with value 0x6ce9a449b5ad1a3a
sw x3, 0(x2) # store 0x6ce9a449b5ad1a3a in memory
flw f2, 0(x2) # load 0x6ce9a449b5ad1a3a from memory into f2
la x2, scratch
li x3, 0xfae6e6c8ea11f24e # load x3 with value 0xfae6e6c8ea11f24e
sw x3, 0(x2) # store 0xfae6e6c8ea11f24e in memory
flw f29, 0(x2) # load 0xfae6e6c8ea11f24e from memory into f29
fnmadd.s f2, f15, f2, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x160eb5beb20bf4c0 # load x3 with value 0x160eb5beb20bf4c0
sw x3, 0(x2) # store 0x160eb5beb20bf4c0 in memory
flw f6, 0(x2) # load 0x160eb5beb20bf4c0 from memory into f6
la x2, scratch
li x3, 0x3be80c59c532471d # load x3 with value 0x3be80c59c532471d
sw x3, 0(x2) # store 0x3be80c59c532471d in memory
flw f3, 0(x2) # load 0x3be80c59c532471d from memory into f3
la x2, scratch
li x3, 0xb7b5f22d97a94a4e # load x3 with value 0xb7b5f22d97a94a4e
sw x3, 0(x2) # store 0xb7b5f22d97a94a4e in memory
flw f1, 0(x2) # load 0xb7b5f22d97a94a4e from memory into f1
fnmadd.s f3, f6, f3, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf812c909750f3b9d # load x3 with value 0xf812c909750f3b9d
sw x3, 0(x2) # store 0xf812c909750f3b9d in memory
flw f1, 0(x2) # load 0xf812c909750f3b9d from memory into f1
la x2, scratch
li x3, 0x6a1aa46613aa8d0b # load x3 with value 0x6a1aa46613aa8d0b
sw x3, 0(x2) # store 0x6a1aa46613aa8d0b in memory
flw f4, 0(x2) # load 0x6a1aa46613aa8d0b from memory into f4
la x2, scratch
li x3, 0x7c26adbf6111365a # load x3 with value 0x7c26adbf6111365a
sw x3, 0(x2) # store 0x7c26adbf6111365a in memory
flw f11, 0(x2) # load 0x7c26adbf6111365a from memory into f11
fnmadd.s f4, f1, f4, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xef1d47ef2607c885 # load x3 with value 0xef1d47ef2607c885
sw x3, 0(x2) # store 0xef1d47ef2607c885 in memory
flw f6, 0(x2) # load 0xef1d47ef2607c885 from memory into f6
la x2, scratch
li x3, 0x7a3e8aa714ea8c40 # load x3 with value 0x7a3e8aa714ea8c40
sw x3, 0(x2) # store 0x7a3e8aa714ea8c40 in memory
flw f5, 0(x2) # load 0x7a3e8aa714ea8c40 from memory into f5
la x2, scratch
li x3, 0x9928fd5f9dc0dc8c # load x3 with value 0x9928fd5f9dc0dc8c
sw x3, 0(x2) # store 0x9928fd5f9dc0dc8c in memory
flw f16, 0(x2) # load 0x9928fd5f9dc0dc8c from memory into f16
fnmadd.s f5, f6, f5, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
la x2, scratch
li x3, 0x9a896d5e277bc153 # load x3 with value 0x9a896d5e277bc153
sw x3, 0(x2) # store 0x9a896d5e277bc153 in memory
flw f4, 0(x2) # load 0x9a896d5e277bc153 from memory into f4
la x2, scratch
li x3, 0xc3702a5df5f9e4cc # load x3 with value 0xc3702a5df5f9e4cc
sw x3, 0(x2) # store 0xc3702a5df5f9e4cc in memory
flw f6, 0(x2) # load 0xc3702a5df5f9e4cc from memory into f6
la x2, scratch
li x3, 0x9e462ead94357c7 # load x3 with value 0x9e462ead94357c7
sw x3, 0(x2) # store 0x9e462ead94357c7 in memory
flw f15, 0(x2) # load 0x9e462ead94357c7 from memory into f15
fnmadd.s f6, f4, f6, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x96fb616252884dfb # load x3 with value 0x96fb616252884dfb
sw x3, 0(x2) # store 0x96fb616252884dfb in memory
flw f22, 0(x2) # load 0x96fb616252884dfb from memory into f22
la x2, scratch
li x3, 0x8b88c4be6058a9e5 # load x3 with value 0x8b88c4be6058a9e5
sw x3, 0(x2) # store 0x8b88c4be6058a9e5 in memory
flw f7, 0(x2) # load 0x8b88c4be6058a9e5 from memory into f7
la x2, scratch
li x3, 0xd24522ab29ee0df7 # load x3 with value 0xd24522ab29ee0df7
sw x3, 0(x2) # store 0xd24522ab29ee0df7 in memory
flw f17, 0(x2) # load 0xd24522ab29ee0df7 from memory into f17
fnmadd.s f7, f22, f7, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0xaebe3c713d33cfd # load x3 with value 0xaebe3c713d33cfd
sw x3, 0(x2) # store 0xaebe3c713d33cfd in memory
flw f12, 0(x2) # load 0xaebe3c713d33cfd from memory into f12
la x2, scratch
li x3, 0x388266362da5b2ad # load x3 with value 0x388266362da5b2ad
sw x3, 0(x2) # store 0x388266362da5b2ad in memory
flw f8, 0(x2) # load 0x388266362da5b2ad from memory into f8
la x2, scratch
li x3, 0x7b514e06554dcb9 # load x3 with value 0x7b514e06554dcb9
sw x3, 0(x2) # store 0x7b514e06554dcb9 in memory
flw f6, 0(x2) # load 0x7b514e06554dcb9 from memory into f6
fnmadd.s f8, f12, f8, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x609314f1ceddf1fe # load x3 with value 0x609314f1ceddf1fe
sw x3, 0(x2) # store 0x609314f1ceddf1fe in memory
flw f8, 0(x2) # load 0x609314f1ceddf1fe from memory into f8
la x2, scratch
li x3, 0x6bd3bed7ef6748a3 # load x3 with value 0x6bd3bed7ef6748a3
sw x3, 0(x2) # store 0x6bd3bed7ef6748a3 in memory
flw f9, 0(x2) # load 0x6bd3bed7ef6748a3 from memory into f9
la x2, scratch
li x3, 0x3cd64b41946e981 # load x3 with value 0x3cd64b41946e981
sw x3, 0(x2) # store 0x3cd64b41946e981 in memory
flw f18, 0(x2) # load 0x3cd64b41946e981 from memory into f18
fnmadd.s f9, f8, f9, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x361fef9552a69902 # load x3 with value 0x361fef9552a69902
sw x3, 0(x2) # store 0x361fef9552a69902 in memory
flw f12, 0(x2) # load 0x361fef9552a69902 from memory into f12
la x2, scratch
li x3, 0xd45722a570bda82d # load x3 with value 0xd45722a570bda82d
sw x3, 0(x2) # store 0xd45722a570bda82d in memory
flw f10, 0(x2) # load 0xd45722a570bda82d from memory into f10
la x2, scratch
li x3, 0x91892bfbfcbf858c # load x3 with value 0x91892bfbfcbf858c
sw x3, 0(x2) # store 0x91892bfbfcbf858c in memory
flw f25, 0(x2) # load 0x91892bfbfcbf858c from memory into f25
fnmadd.s f10, f12, f10, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0x98102217cf3a4b4e # load x3 with value 0x98102217cf3a4b4e
sw x3, 0(x2) # store 0x98102217cf3a4b4e in memory
flw f7, 0(x2) # load 0x98102217cf3a4b4e from memory into f7
la x2, scratch
li x3, 0x1e8d154509ffcc7a # load x3 with value 0x1e8d154509ffcc7a
sw x3, 0(x2) # store 0x1e8d154509ffcc7a in memory
flw f11, 0(x2) # load 0x1e8d154509ffcc7a from memory into f11
la x2, scratch
li x3, 0xa38bbc1423be54cf # load x3 with value 0xa38bbc1423be54cf
sw x3, 0(x2) # store 0xa38bbc1423be54cf in memory
flw f27, 0(x2) # load 0xa38bbc1423be54cf from memory into f27
fnmadd.s f11, f7, f11, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x3e4a16dc0cbbf751 # load x3 with value 0x3e4a16dc0cbbf751
sw x3, 0(x2) # store 0x3e4a16dc0cbbf751 in memory
flw f19, 0(x2) # load 0x3e4a16dc0cbbf751 from memory into f19
la x2, scratch
li x3, 0x230223e8fa73eb26 # load x3 with value 0x230223e8fa73eb26
sw x3, 0(x2) # store 0x230223e8fa73eb26 in memory
flw f12, 0(x2) # load 0x230223e8fa73eb26 from memory into f12
la x2, scratch
li x3, 0xb8301b9338983940 # load x3 with value 0xb8301b9338983940
sw x3, 0(x2) # store 0xb8301b9338983940 in memory
flw f8, 0(x2) # load 0xb8301b9338983940 from memory into f8
fnmadd.s f12, f19, f12, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xbb1084038a7a5128 # load x3 with value 0xbb1084038a7a5128
sw x3, 0(x2) # store 0xbb1084038a7a5128 in memory
flw f15, 0(x2) # load 0xbb1084038a7a5128 from memory into f15
la x2, scratch
li x3, 0xa9a520c0e4d6665e # load x3 with value 0xa9a520c0e4d6665e
sw x3, 0(x2) # store 0xa9a520c0e4d6665e in memory
flw f13, 0(x2) # load 0xa9a520c0e4d6665e from memory into f13
la x2, scratch
li x3, 0x4c9f95d8ed13b686 # load x3 with value 0x4c9f95d8ed13b686
sw x3, 0(x2) # store 0x4c9f95d8ed13b686 in memory
flw f29, 0(x2) # load 0x4c9f95d8ed13b686 from memory into f29
fnmadd.s f13, f15, f13, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xb64326a6f670ae7c # load x3 with value 0xb64326a6f670ae7c
sw x3, 0(x2) # store 0xb64326a6f670ae7c in memory
flw f17, 0(x2) # load 0xb64326a6f670ae7c from memory into f17
la x2, scratch
li x3, 0x6db8a049a1cb1b68 # load x3 with value 0x6db8a049a1cb1b68
sw x3, 0(x2) # store 0x6db8a049a1cb1b68 in memory
flw f14, 0(x2) # load 0x6db8a049a1cb1b68 from memory into f14
la x2, scratch
li x3, 0x24b775e9662325f0 # load x3 with value 0x24b775e9662325f0
sw x3, 0(x2) # store 0x24b775e9662325f0 in memory
flw f10, 0(x2) # load 0x24b775e9662325f0 from memory into f10
fnmadd.s f14, f17, f14, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0xe19deb7f4de6086 # load x3 with value 0xe19deb7f4de6086
sw x3, 0(x2) # store 0xe19deb7f4de6086 in memory
flw f21, 0(x2) # load 0xe19deb7f4de6086 from memory into f21
la x2, scratch
li x3, 0xec1ab5cf27010657 # load x3 with value 0xec1ab5cf27010657
sw x3, 0(x2) # store 0xec1ab5cf27010657 in memory
flw f15, 0(x2) # load 0xec1ab5cf27010657 from memory into f15
la x2, scratch
li x3, 0x62af5e94412db0d2 # load x3 with value 0x62af5e94412db0d2
sw x3, 0(x2) # store 0x62af5e94412db0d2 in memory
flw f30, 0(x2) # load 0x62af5e94412db0d2 from memory into f30
fnmadd.s f15, f21, f15, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x46b84dcbc035c79b # load x3 with value 0x46b84dcbc035c79b
sw x3, 0(x2) # store 0x46b84dcbc035c79b in memory
flw f13, 0(x2) # load 0x46b84dcbc035c79b from memory into f13
la x2, scratch
li x3, 0x6dcd53510c6473ed # load x3 with value 0x6dcd53510c6473ed
sw x3, 0(x2) # store 0x6dcd53510c6473ed in memory
flw f16, 0(x2) # load 0x6dcd53510c6473ed from memory into f16
la x2, scratch
li x3, 0x28905f874a83de49 # load x3 with value 0x28905f874a83de49
sw x3, 0(x2) # store 0x28905f874a83de49 in memory
flw f23, 0(x2) # load 0x28905f874a83de49 from memory into f23
fnmadd.s f16, f13, f16, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xfcfb1b371f5b3fcb # load x3 with value 0xfcfb1b371f5b3fcb
sw x3, 0(x2) # store 0xfcfb1b371f5b3fcb in memory
flw f29, 0(x2) # load 0xfcfb1b371f5b3fcb from memory into f29
la x2, scratch
li x3, 0x831001468276fe57 # load x3 with value 0x831001468276fe57
sw x3, 0(x2) # store 0x831001468276fe57 in memory
flw f17, 0(x2) # load 0x831001468276fe57 from memory into f17
la x2, scratch
li x3, 0xba4d129ee8000b27 # load x3 with value 0xba4d129ee8000b27
sw x3, 0(x2) # store 0xba4d129ee8000b27 in memory
flw f1, 0(x2) # load 0xba4d129ee8000b27 from memory into f1
fnmadd.s f17, f29, f17, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x5c5b740cbce4dba5 # load x3 with value 0x5c5b740cbce4dba5
sw x3, 0(x2) # store 0x5c5b740cbce4dba5 in memory
flw f25, 0(x2) # load 0x5c5b740cbce4dba5 from memory into f25
la x2, scratch
li x3, 0xef3271ad04ab33c8 # load x3 with value 0xef3271ad04ab33c8
sw x3, 0(x2) # store 0xef3271ad04ab33c8 in memory
flw f18, 0(x2) # load 0xef3271ad04ab33c8 from memory into f18
la x2, scratch
li x3, 0xb1dd8855e053c71d # load x3 with value 0xb1dd8855e053c71d
sw x3, 0(x2) # store 0xb1dd8855e053c71d in memory
flw f12, 0(x2) # load 0xb1dd8855e053c71d from memory into f12
fnmadd.s f18, f25, f18, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x7f6fbc6435bc3187 # load x3 with value 0x7f6fbc6435bc3187
sw x3, 0(x2) # store 0x7f6fbc6435bc3187 in memory
flw f24, 0(x2) # load 0x7f6fbc6435bc3187 from memory into f24
la x2, scratch
li x3, 0x8ead2c0e425bfcf3 # load x3 with value 0x8ead2c0e425bfcf3
sw x3, 0(x2) # store 0x8ead2c0e425bfcf3 in memory
flw f19, 0(x2) # load 0x8ead2c0e425bfcf3 from memory into f19
la x2, scratch
li x3, 0xdda9a7c42330642e # load x3 with value 0xdda9a7c42330642e
sw x3, 0(x2) # store 0xdda9a7c42330642e in memory
flw f1, 0(x2) # load 0xdda9a7c42330642e from memory into f1
fnmadd.s f19, f24, f19, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x199c8de9212118a0 # load x3 with value 0x199c8de9212118a0
sw x3, 0(x2) # store 0x199c8de9212118a0 in memory
flw f18, 0(x2) # load 0x199c8de9212118a0 from memory into f18
la x2, scratch
li x3, 0xe682e6d145e5a312 # load x3 with value 0xe682e6d145e5a312
sw x3, 0(x2) # store 0xe682e6d145e5a312 in memory
flw f20, 0(x2) # load 0xe682e6d145e5a312 from memory into f20
la x2, scratch
li x3, 0xa60f4be8e5745c6a # load x3 with value 0xa60f4be8e5745c6a
sw x3, 0(x2) # store 0xa60f4be8e5745c6a in memory
flw f19, 0(x2) # load 0xa60f4be8e5745c6a from memory into f19
fnmadd.s f20, f18, f20, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xef165473124beb25 # load x3 with value 0xef165473124beb25
sw x3, 0(x2) # store 0xef165473124beb25 in memory
flw f23, 0(x2) # load 0xef165473124beb25 from memory into f23
la x2, scratch
li x3, 0xdf1d491691df36db # load x3 with value 0xdf1d491691df36db
sw x3, 0(x2) # store 0xdf1d491691df36db in memory
flw f21, 0(x2) # load 0xdf1d491691df36db from memory into f21
la x2, scratch
li x3, 0x87d486d15972cf30 # load x3 with value 0x87d486d15972cf30
sw x3, 0(x2) # store 0x87d486d15972cf30 in memory
flw f2, 0(x2) # load 0x87d486d15972cf30 from memory into f2
fnmadd.s f21, f23, f21, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x1beaa6c8254883c4 # load x3 with value 0x1beaa6c8254883c4
sw x3, 0(x2) # store 0x1beaa6c8254883c4 in memory
flw f3, 0(x2) # load 0x1beaa6c8254883c4 from memory into f3
la x2, scratch
li x3, 0xa35160850af3a867 # load x3 with value 0xa35160850af3a867
sw x3, 0(x2) # store 0xa35160850af3a867 in memory
flw f22, 0(x2) # load 0xa35160850af3a867 from memory into f22
la x2, scratch
li x3, 0xa7f5fb3227080cdc # load x3 with value 0xa7f5fb3227080cdc
sw x3, 0(x2) # store 0xa7f5fb3227080cdc in memory
flw f27, 0(x2) # load 0xa7f5fb3227080cdc from memory into f27
fnmadd.s f22, f3, f22, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x567823dd734f7217 # load x3 with value 0x567823dd734f7217
sw x3, 0(x2) # store 0x567823dd734f7217 in memory
flw f31, 0(x2) # load 0x567823dd734f7217 from memory into f31
la x2, scratch
li x3, 0xef5dadb6d240bcd5 # load x3 with value 0xef5dadb6d240bcd5
sw x3, 0(x2) # store 0xef5dadb6d240bcd5 in memory
flw f23, 0(x2) # load 0xef5dadb6d240bcd5 from memory into f23
la x2, scratch
li x3, 0x4d1705e7ab7ec97b # load x3 with value 0x4d1705e7ab7ec97b
sw x3, 0(x2) # store 0x4d1705e7ab7ec97b in memory
flw f11, 0(x2) # load 0x4d1705e7ab7ec97b from memory into f11
fnmadd.s f23, f31, f23, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x40cc6d673f501782 # load x3 with value 0x40cc6d673f501782
sw x3, 0(x2) # store 0x40cc6d673f501782 in memory
flw f10, 0(x2) # load 0x40cc6d673f501782 from memory into f10
la x2, scratch
li x3, 0x2ce87998b4065541 # load x3 with value 0x2ce87998b4065541
sw x3, 0(x2) # store 0x2ce87998b4065541 in memory
flw f24, 0(x2) # load 0x2ce87998b4065541 from memory into f24
la x2, scratch
li x3, 0xb9fdc05c36baf74 # load x3 with value 0xb9fdc05c36baf74
sw x3, 0(x2) # store 0xb9fdc05c36baf74 in memory
flw f22, 0(x2) # load 0xb9fdc05c36baf74 from memory into f22
fnmadd.s f24, f10, f24, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0xead96210931b4924 # load x3 with value 0xead96210931b4924
sw x3, 0(x2) # store 0xead96210931b4924 in memory
flw f10, 0(x2) # load 0xead96210931b4924 from memory into f10
la x2, scratch
li x3, 0x7ea1ac28f830177f # load x3 with value 0x7ea1ac28f830177f
sw x3, 0(x2) # store 0x7ea1ac28f830177f in memory
flw f25, 0(x2) # load 0x7ea1ac28f830177f from memory into f25
la x2, scratch
li x3, 0x193f5af24ba7416f # load x3 with value 0x193f5af24ba7416f
sw x3, 0(x2) # store 0x193f5af24ba7416f in memory
flw f9, 0(x2) # load 0x193f5af24ba7416f from memory into f9
fnmadd.s f25, f10, f25, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x18d2b2e795353a5c # load x3 with value 0x18d2b2e795353a5c
sw x3, 0(x2) # store 0x18d2b2e795353a5c in memory
flw f20, 0(x2) # load 0x18d2b2e795353a5c from memory into f20
la x2, scratch
li x3, 0x6a597713de623f25 # load x3 with value 0x6a597713de623f25
sw x3, 0(x2) # store 0x6a597713de623f25 in memory
flw f26, 0(x2) # load 0x6a597713de623f25 from memory into f26
la x2, scratch
li x3, 0xa781ce52867a7a9e # load x3 with value 0xa781ce52867a7a9e
sw x3, 0(x2) # store 0xa781ce52867a7a9e in memory
flw f24, 0(x2) # load 0xa781ce52867a7a9e from memory into f24
fnmadd.s f26, f20, f26, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x53ebfbc46e97851 # load x3 with value 0x53ebfbc46e97851
sw x3, 0(x2) # store 0x53ebfbc46e97851 in memory
flw f3, 0(x2) # load 0x53ebfbc46e97851 from memory into f3
la x2, scratch
li x3, 0x87d8c41acbe4388 # load x3 with value 0x87d8c41acbe4388
sw x3, 0(x2) # store 0x87d8c41acbe4388 in memory
flw f27, 0(x2) # load 0x87d8c41acbe4388 from memory into f27
la x2, scratch
li x3, 0x42c3ee23e92e446a # load x3 with value 0x42c3ee23e92e446a
sw x3, 0(x2) # store 0x42c3ee23e92e446a in memory
flw f12, 0(x2) # load 0x42c3ee23e92e446a from memory into f12
fnmadd.s f27, f3, f27, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0xa7f85e7768497f9d # load x3 with value 0xa7f85e7768497f9d
sw x3, 0(x2) # store 0xa7f85e7768497f9d in memory
flw f20, 0(x2) # load 0xa7f85e7768497f9d from memory into f20
la x2, scratch
li x3, 0x3ba04297aa2183 # load x3 with value 0x3ba04297aa2183
sw x3, 0(x2) # store 0x3ba04297aa2183 in memory
flw f28, 0(x2) # load 0x3ba04297aa2183 from memory into f28
la x2, scratch
li x3, 0x833dd23cc563b794 # load x3 with value 0x833dd23cc563b794
sw x3, 0(x2) # store 0x833dd23cc563b794 in memory
flw f25, 0(x2) # load 0x833dd23cc563b794 from memory into f25
fnmadd.s f28, f20, f28, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xaa6ec560b000fd2b # load x3 with value 0xaa6ec560b000fd2b
sw x3, 0(x2) # store 0xaa6ec560b000fd2b in memory
flw f17, 0(x2) # load 0xaa6ec560b000fd2b from memory into f17
la x2, scratch
li x3, 0xc350fc81c740d08a # load x3 with value 0xc350fc81c740d08a
sw x3, 0(x2) # store 0xc350fc81c740d08a in memory
flw f29, 0(x2) # load 0xc350fc81c740d08a from memory into f29
la x2, scratch
li x3, 0x3d1c5d5ca74a5409 # load x3 with value 0x3d1c5d5ca74a5409
sw x3, 0(x2) # store 0x3d1c5d5ca74a5409 in memory
flw f7, 0(x2) # load 0x3d1c5d5ca74a5409 from memory into f7
fnmadd.s f29, f17, f29, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x9e29de9073cad413 # load x3 with value 0x9e29de9073cad413
sw x3, 0(x2) # store 0x9e29de9073cad413 in memory
flw f10, 0(x2) # load 0x9e29de9073cad413 from memory into f10
la x2, scratch
li x3, 0x2f96450aa3bbe254 # load x3 with value 0x2f96450aa3bbe254
sw x3, 0(x2) # store 0x2f96450aa3bbe254 in memory
flw f30, 0(x2) # load 0x2f96450aa3bbe254 from memory into f30
la x2, scratch
li x3, 0x2101508ddf0f8088 # load x3 with value 0x2101508ddf0f8088
sw x3, 0(x2) # store 0x2101508ddf0f8088 in memory
flw f6, 0(x2) # load 0x2101508ddf0f8088 from memory into f6
fnmadd.s f30, f10, f30, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x21414d9c8a23972b # load x3 with value 0x21414d9c8a23972b
sw x3, 0(x2) # store 0x21414d9c8a23972b in memory
flw f22, 0(x2) # load 0x21414d9c8a23972b from memory into f22
la x2, scratch
li x3, 0x73dfec445a8c087e # load x3 with value 0x73dfec445a8c087e
sw x3, 0(x2) # store 0x73dfec445a8c087e in memory
flw f31, 0(x2) # load 0x73dfec445a8c087e from memory into f31
la x2, scratch
li x3, 0xf98eede5672a6fd4 # load x3 with value 0xf98eede5672a6fd4
sw x3, 0(x2) # store 0xf98eede5672a6fd4 in memory
flw f18, 0(x2) # load 0xf98eede5672a6fd4 from memory into f18
fnmadd.s f31, f22, f31, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x8bd76a48919973a # load x3 with value 0x8bd76a48919973a
sw x3, 0(x2) # store 0x8bd76a48919973a in memory
flw f15, 0(x2) # load 0x8bd76a48919973a from memory into f15
la x2, scratch
li x3, 0x35696477fbf4d020 # load x3 with value 0x35696477fbf4d020
sw x3, 0(x2) # store 0x35696477fbf4d020 in memory
flw f25, 0(x2) # load 0x35696477fbf4d020 from memory into f25
la x2, scratch
li x3, 0xc73c88d5b136972 # load x3 with value 0xc73c88d5b136972
sw x3, 0(x2) # store 0xc73c88d5b136972 in memory
flw f0, 0(x2) # load 0xc73c88d5b136972 from memory into f0
fnmadd.s f0, f15, f25, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x9b7f031695a29595 # load x3 with value 0x9b7f031695a29595
sw x3, 0(x2) # store 0x9b7f031695a29595 in memory
flw f7, 0(x2) # load 0x9b7f031695a29595 from memory into f7
la x2, scratch
li x3, 0x437a26c38c9e39a0 # load x3 with value 0x437a26c38c9e39a0
sw x3, 0(x2) # store 0x437a26c38c9e39a0 in memory
flw f24, 0(x2) # load 0x437a26c38c9e39a0 from memory into f24
la x2, scratch
li x3, 0x923f282018f8d56b # load x3 with value 0x923f282018f8d56b
sw x3, 0(x2) # store 0x923f282018f8d56b in memory
flw f1, 0(x2) # load 0x923f282018f8d56b from memory into f1
fnmadd.s f1, f7, f24, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0xd80ae2e954ce7743 # load x3 with value 0xd80ae2e954ce7743
sw x3, 0(x2) # store 0xd80ae2e954ce7743 in memory
flw f10, 0(x2) # load 0xd80ae2e954ce7743 from memory into f10
la x2, scratch
li x3, 0x841ba2232ddc5cfa # load x3 with value 0x841ba2232ddc5cfa
sw x3, 0(x2) # store 0x841ba2232ddc5cfa in memory
flw f28, 0(x2) # load 0x841ba2232ddc5cfa from memory into f28
la x2, scratch
li x3, 0x49e3b98d8075a8be # load x3 with value 0x49e3b98d8075a8be
sw x3, 0(x2) # store 0x49e3b98d8075a8be in memory
flw f2, 0(x2) # load 0x49e3b98d8075a8be from memory into f2
fnmadd.s f2, f10, f28, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0xafade2b6d417d9a3 # load x3 with value 0xafade2b6d417d9a3
sw x3, 0(x2) # store 0xafade2b6d417d9a3 in memory
flw f16, 0(x2) # load 0xafade2b6d417d9a3 from memory into f16
la x2, scratch
li x3, 0x19996c3cbd462e42 # load x3 with value 0x19996c3cbd462e42
sw x3, 0(x2) # store 0x19996c3cbd462e42 in memory
flw f28, 0(x2) # load 0x19996c3cbd462e42 from memory into f28
la x2, scratch
li x3, 0xe92ab72b0fb6dba5 # load x3 with value 0xe92ab72b0fb6dba5
sw x3, 0(x2) # store 0xe92ab72b0fb6dba5 in memory
flw f3, 0(x2) # load 0xe92ab72b0fb6dba5 from memory into f3
fnmadd.s f3, f16, f28, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc5cee8f7d441d98 # load x3 with value 0xc5cee8f7d441d98
sw x3, 0(x2) # store 0xc5cee8f7d441d98 in memory
flw f3, 0(x2) # load 0xc5cee8f7d441d98 from memory into f3
la x2, scratch
li x3, 0xb90ea35f56883990 # load x3 with value 0xb90ea35f56883990
sw x3, 0(x2) # store 0xb90ea35f56883990 in memory
flw f28, 0(x2) # load 0xb90ea35f56883990 from memory into f28
la x2, scratch
li x3, 0xcaf67ec58d7e6a54 # load x3 with value 0xcaf67ec58d7e6a54
sw x3, 0(x2) # store 0xcaf67ec58d7e6a54 in memory
flw f4, 0(x2) # load 0xcaf67ec58d7e6a54 from memory into f4
fnmadd.s f4, f3, f28, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x59b2717e56399cbc # load x3 with value 0x59b2717e56399cbc
sw x3, 0(x2) # store 0x59b2717e56399cbc in memory
flw f2, 0(x2) # load 0x59b2717e56399cbc from memory into f2
la x2, scratch
li x3, 0x6952276537f8145b # load x3 with value 0x6952276537f8145b
sw x3, 0(x2) # store 0x6952276537f8145b in memory
flw f22, 0(x2) # load 0x6952276537f8145b from memory into f22
la x2, scratch
li x3, 0x2ae03cc3c5e72ffe # load x3 with value 0x2ae03cc3c5e72ffe
sw x3, 0(x2) # store 0x2ae03cc3c5e72ffe in memory
flw f5, 0(x2) # load 0x2ae03cc3c5e72ffe from memory into f5
fnmadd.s f5, f2, f22, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc337357fdb81c253 # load x3 with value 0xc337357fdb81c253
sw x3, 0(x2) # store 0xc337357fdb81c253 in memory
flw f29, 0(x2) # load 0xc337357fdb81c253 from memory into f29
la x2, scratch
li x3, 0x7883e423a67b53b6 # load x3 with value 0x7883e423a67b53b6
sw x3, 0(x2) # store 0x7883e423a67b53b6 in memory
flw f14, 0(x2) # load 0x7883e423a67b53b6 from memory into f14
la x2, scratch
li x3, 0xb49d9af61735ea9e # load x3 with value 0xb49d9af61735ea9e
sw x3, 0(x2) # store 0xb49d9af61735ea9e in memory
flw f6, 0(x2) # load 0xb49d9af61735ea9e from memory into f6
fnmadd.s f6, f29, f14, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x83617f95022ffeb7 # load x3 with value 0x83617f95022ffeb7
sw x3, 0(x2) # store 0x83617f95022ffeb7 in memory
flw f3, 0(x2) # load 0x83617f95022ffeb7 from memory into f3
la x2, scratch
li x3, 0x4eff3f12674dbbca # load x3 with value 0x4eff3f12674dbbca
sw x3, 0(x2) # store 0x4eff3f12674dbbca in memory
flw f12, 0(x2) # load 0x4eff3f12674dbbca from memory into f12
la x2, scratch
li x3, 0xf9995d263189888e # load x3 with value 0xf9995d263189888e
sw x3, 0(x2) # store 0xf9995d263189888e in memory
flw f7, 0(x2) # load 0xf9995d263189888e from memory into f7
fnmadd.s f7, f3, f12, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x3ef6dbade2c18c8a # load x3 with value 0x3ef6dbade2c18c8a
sw x3, 0(x2) # store 0x3ef6dbade2c18c8a in memory
flw f6, 0(x2) # load 0x3ef6dbade2c18c8a from memory into f6
la x2, scratch
li x3, 0x8c6f23f1bada764c # load x3 with value 0x8c6f23f1bada764c
sw x3, 0(x2) # store 0x8c6f23f1bada764c in memory
flw f9, 0(x2) # load 0x8c6f23f1bada764c from memory into f9
la x2, scratch
li x3, 0xe3906b94331164b9 # load x3 with value 0xe3906b94331164b9
sw x3, 0(x2) # store 0xe3906b94331164b9 in memory
flw f8, 0(x2) # load 0xe3906b94331164b9 from memory into f8
fnmadd.s f8, f6, f9, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x96206b30a8edee4b # load x3 with value 0x96206b30a8edee4b
sw x3, 0(x2) # store 0x96206b30a8edee4b in memory
flw f28, 0(x2) # load 0x96206b30a8edee4b from memory into f28
la x2, scratch
li x3, 0x65a8221f735535a8 # load x3 with value 0x65a8221f735535a8
sw x3, 0(x2) # store 0x65a8221f735535a8 in memory
flw f25, 0(x2) # load 0x65a8221f735535a8 from memory into f25
la x2, scratch
li x3, 0x996a7f27c9430b3d # load x3 with value 0x996a7f27c9430b3d
sw x3, 0(x2) # store 0x996a7f27c9430b3d in memory
flw f9, 0(x2) # load 0x996a7f27c9430b3d from memory into f9
fnmadd.s f9, f28, f25, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0xb1fe3162aa10ea96 # load x3 with value 0xb1fe3162aa10ea96
sw x3, 0(x2) # store 0xb1fe3162aa10ea96 in memory
flw f12, 0(x2) # load 0xb1fe3162aa10ea96 from memory into f12
la x2, scratch
li x3, 0x15401d945ee34c1 # load x3 with value 0x15401d945ee34c1
sw x3, 0(x2) # store 0x15401d945ee34c1 in memory
flw f26, 0(x2) # load 0x15401d945ee34c1 from memory into f26
la x2, scratch
li x3, 0xcbdeeb2267b049d5 # load x3 with value 0xcbdeeb2267b049d5
sw x3, 0(x2) # store 0xcbdeeb2267b049d5 in memory
flw f10, 0(x2) # load 0xcbdeeb2267b049d5 from memory into f10
fnmadd.s f10, f12, f26, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x439ac82658112ee1 # load x3 with value 0x439ac82658112ee1
sw x3, 0(x2) # store 0x439ac82658112ee1 in memory
flw f26, 0(x2) # load 0x439ac82658112ee1 from memory into f26
la x2, scratch
li x3, 0x4fd767a4ac44e448 # load x3 with value 0x4fd767a4ac44e448
sw x3, 0(x2) # store 0x4fd767a4ac44e448 in memory
flw f11, 0(x2) # load 0x4fd767a4ac44e448 from memory into f11
la x2, scratch
li x3, 0xe42f1d0bdb0b407c # load x3 with value 0xe42f1d0bdb0b407c
sw x3, 0(x2) # store 0xe42f1d0bdb0b407c in memory
flw f11, 0(x2) # load 0xe42f1d0bdb0b407c from memory into f11
fnmadd.s f11, f26, f11, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0x26b327bc71c7738f # load x3 with value 0x26b327bc71c7738f
sw x3, 0(x2) # store 0x26b327bc71c7738f in memory
flw f31, 0(x2) # load 0x26b327bc71c7738f from memory into f31
la x2, scratch
li x3, 0x8e2ffa996c682202 # load x3 with value 0x8e2ffa996c682202
sw x3, 0(x2) # store 0x8e2ffa996c682202 in memory
flw f6, 0(x2) # load 0x8e2ffa996c682202 from memory into f6
la x2, scratch
li x3, 0xa638411dfbca5f6 # load x3 with value 0xa638411dfbca5f6
sw x3, 0(x2) # store 0xa638411dfbca5f6 in memory
flw f12, 0(x2) # load 0xa638411dfbca5f6 from memory into f12
fnmadd.s f12, f31, f6, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x74408a62aeaaf24c # load x3 with value 0x74408a62aeaaf24c
sw x3, 0(x2) # store 0x74408a62aeaaf24c in memory
flw f27, 0(x2) # load 0x74408a62aeaaf24c from memory into f27
la x2, scratch
li x3, 0xa68e545b3e1d8b0f # load x3 with value 0xa68e545b3e1d8b0f
sw x3, 0(x2) # store 0xa68e545b3e1d8b0f in memory
flw f11, 0(x2) # load 0xa68e545b3e1d8b0f from memory into f11
la x2, scratch
li x3, 0x61adf27c1b5feba2 # load x3 with value 0x61adf27c1b5feba2
sw x3, 0(x2) # store 0x61adf27c1b5feba2 in memory
flw f13, 0(x2) # load 0x61adf27c1b5feba2 from memory into f13
fnmadd.s f13, f27, f11, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0x9d4199dfcd7d11d3 # load x3 with value 0x9d4199dfcd7d11d3
sw x3, 0(x2) # store 0x9d4199dfcd7d11d3 in memory
flw f8, 0(x2) # load 0x9d4199dfcd7d11d3 from memory into f8
la x2, scratch
li x3, 0xcec00a2f646ab204 # load x3 with value 0xcec00a2f646ab204
sw x3, 0(x2) # store 0xcec00a2f646ab204 in memory
flw f26, 0(x2) # load 0xcec00a2f646ab204 from memory into f26
la x2, scratch
li x3, 0x76950bf071e72055 # load x3 with value 0x76950bf071e72055
sw x3, 0(x2) # store 0x76950bf071e72055 in memory
flw f14, 0(x2) # load 0x76950bf071e72055 from memory into f14
fnmadd.s f14, f8, f26, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x92f7c0794741efb9 # load x3 with value 0x92f7c0794741efb9
sw x3, 0(x2) # store 0x92f7c0794741efb9 in memory
flw f25, 0(x2) # load 0x92f7c0794741efb9 from memory into f25
la x2, scratch
li x3, 0x5c3e5a52819b960b # load x3 with value 0x5c3e5a52819b960b
sw x3, 0(x2) # store 0x5c3e5a52819b960b in memory
flw f22, 0(x2) # load 0x5c3e5a52819b960b from memory into f22
la x2, scratch
li x3, 0x6f4b18df493b245 # load x3 with value 0x6f4b18df493b245
sw x3, 0(x2) # store 0x6f4b18df493b245 in memory
flw f15, 0(x2) # load 0x6f4b18df493b245 from memory into f15
fnmadd.s f15, f25, f22, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0xf794522ce7c30ea6 # load x3 with value 0xf794522ce7c30ea6
sw x3, 0(x2) # store 0xf794522ce7c30ea6 in memory
flw f7, 0(x2) # load 0xf794522ce7c30ea6 from memory into f7
la x2, scratch
li x3, 0xe9ba7aaa7fae333e # load x3 with value 0xe9ba7aaa7fae333e
sw x3, 0(x2) # store 0xe9ba7aaa7fae333e in memory
flw f23, 0(x2) # load 0xe9ba7aaa7fae333e from memory into f23
la x2, scratch
li x3, 0x7d703c121134d6e # load x3 with value 0x7d703c121134d6e
sw x3, 0(x2) # store 0x7d703c121134d6e in memory
flw f16, 0(x2) # load 0x7d703c121134d6e from memory into f16
fnmadd.s f16, f7, f23, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0xf6dfa2f504b24b74 # load x3 with value 0xf6dfa2f504b24b74
sw x3, 0(x2) # store 0xf6dfa2f504b24b74 in memory
flw f20, 0(x2) # load 0xf6dfa2f504b24b74 from memory into f20
la x2, scratch
li x3, 0x74519e61dfe24f73 # load x3 with value 0x74519e61dfe24f73
sw x3, 0(x2) # store 0x74519e61dfe24f73 in memory
flw f26, 0(x2) # load 0x74519e61dfe24f73 from memory into f26
la x2, scratch
li x3, 0x313129e7c0c59628 # load x3 with value 0x313129e7c0c59628
sw x3, 0(x2) # store 0x313129e7c0c59628 in memory
flw f17, 0(x2) # load 0x313129e7c0c59628 from memory into f17
fnmadd.s f17, f20, f26, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x5e6fd5f7ccd97ad2 # load x3 with value 0x5e6fd5f7ccd97ad2
sw x3, 0(x2) # store 0x5e6fd5f7ccd97ad2 in memory
flw f15, 0(x2) # load 0x5e6fd5f7ccd97ad2 from memory into f15
la x2, scratch
li x3, 0x176345a679299a2a # load x3 with value 0x176345a679299a2a
sw x3, 0(x2) # store 0x176345a679299a2a in memory
flw f8, 0(x2) # load 0x176345a679299a2a from memory into f8
la x2, scratch
li x3, 0xcae579bd662551d6 # load x3 with value 0xcae579bd662551d6
sw x3, 0(x2) # store 0xcae579bd662551d6 in memory
flw f18, 0(x2) # load 0xcae579bd662551d6 from memory into f18
fnmadd.s f18, f15, f8, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x114fb94a8fde2d8f # load x3 with value 0x114fb94a8fde2d8f
sw x3, 0(x2) # store 0x114fb94a8fde2d8f in memory
flw f28, 0(x2) # load 0x114fb94a8fde2d8f from memory into f28
la x2, scratch
li x3, 0xa7886adbca6e22a9 # load x3 with value 0xa7886adbca6e22a9
sw x3, 0(x2) # store 0xa7886adbca6e22a9 in memory
flw f27, 0(x2) # load 0xa7886adbca6e22a9 from memory into f27
la x2, scratch
li x3, 0xb743bebe1eda7bb3 # load x3 with value 0xb743bebe1eda7bb3
sw x3, 0(x2) # store 0xb743bebe1eda7bb3 in memory
flw f19, 0(x2) # load 0xb743bebe1eda7bb3 from memory into f19
fnmadd.s f19, f28, f27, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0xd34f07bdd7cc851c # load x3 with value 0xd34f07bdd7cc851c
sw x3, 0(x2) # store 0xd34f07bdd7cc851c in memory
flw f19, 0(x2) # load 0xd34f07bdd7cc851c from memory into f19
la x2, scratch
li x3, 0xff7c9346c6a1e5bf # load x3 with value 0xff7c9346c6a1e5bf
sw x3, 0(x2) # store 0xff7c9346c6a1e5bf in memory
flw f14, 0(x2) # load 0xff7c9346c6a1e5bf from memory into f14
la x2, scratch
li x3, 0xf7805b6490c38442 # load x3 with value 0xf7805b6490c38442
sw x3, 0(x2) # store 0xf7805b6490c38442 in memory
flw f20, 0(x2) # load 0xf7805b6490c38442 from memory into f20
fnmadd.s f20, f19, f14, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0xb9ea956778f752e # load x3 with value 0xb9ea956778f752e
sw x3, 0(x2) # store 0xb9ea956778f752e in memory
flw f23, 0(x2) # load 0xb9ea956778f752e from memory into f23
la x2, scratch
li x3, 0x3f2cb60de774bd10 # load x3 with value 0x3f2cb60de774bd10
sw x3, 0(x2) # store 0x3f2cb60de774bd10 in memory
flw f10, 0(x2) # load 0x3f2cb60de774bd10 from memory into f10
la x2, scratch
li x3, 0xe89c8c18cd6c569d # load x3 with value 0xe89c8c18cd6c569d
sw x3, 0(x2) # store 0xe89c8c18cd6c569d in memory
flw f21, 0(x2) # load 0xe89c8c18cd6c569d from memory into f21
fnmadd.s f21, f23, f10, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x8101481fddf89b31 # load x3 with value 0x8101481fddf89b31
sw x3, 0(x2) # store 0x8101481fddf89b31 in memory
flw f29, 0(x2) # load 0x8101481fddf89b31 from memory into f29
la x2, scratch
li x3, 0x1863ac09e7e9d82b # load x3 with value 0x1863ac09e7e9d82b
sw x3, 0(x2) # store 0x1863ac09e7e9d82b in memory
flw f26, 0(x2) # load 0x1863ac09e7e9d82b from memory into f26
la x2, scratch
li x3, 0xb45608a8fcd1c0aa # load x3 with value 0xb45608a8fcd1c0aa
sw x3, 0(x2) # store 0xb45608a8fcd1c0aa in memory
flw f22, 0(x2) # load 0xb45608a8fcd1c0aa from memory into f22
fnmadd.s f22, f29, f26, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0xe7e9d95d92b27e0 # load x3 with value 0xe7e9d95d92b27e0
sw x3, 0(x2) # store 0xe7e9d95d92b27e0 in memory
flw f20, 0(x2) # load 0xe7e9d95d92b27e0 from memory into f20
la x2, scratch
li x3, 0x3e2749900756f111 # load x3 with value 0x3e2749900756f111
sw x3, 0(x2) # store 0x3e2749900756f111 in memory
flw f25, 0(x2) # load 0x3e2749900756f111 from memory into f25
la x2, scratch
li x3, 0xce02012641a73d67 # load x3 with value 0xce02012641a73d67
sw x3, 0(x2) # store 0xce02012641a73d67 in memory
flw f23, 0(x2) # load 0xce02012641a73d67 from memory into f23
fnmadd.s f23, f20, f25, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x31f6a23a0520cf4e # load x3 with value 0x31f6a23a0520cf4e
sw x3, 0(x2) # store 0x31f6a23a0520cf4e in memory
flw f28, 0(x2) # load 0x31f6a23a0520cf4e from memory into f28
la x2, scratch
li x3, 0x59b4a9d9c21e0387 # load x3 with value 0x59b4a9d9c21e0387
sw x3, 0(x2) # store 0x59b4a9d9c21e0387 in memory
flw f19, 0(x2) # load 0x59b4a9d9c21e0387 from memory into f19
la x2, scratch
li x3, 0x4976f80c70366910 # load x3 with value 0x4976f80c70366910
sw x3, 0(x2) # store 0x4976f80c70366910 in memory
flw f24, 0(x2) # load 0x4976f80c70366910 from memory into f24
fnmadd.s f24, f28, f19, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x569f4ce67384d771 # load x3 with value 0x569f4ce67384d771
sw x3, 0(x2) # store 0x569f4ce67384d771 in memory
flw f11, 0(x2) # load 0x569f4ce67384d771 from memory into f11
la x2, scratch
li x3, 0x2599b9cb19f1246f # load x3 with value 0x2599b9cb19f1246f
sw x3, 0(x2) # store 0x2599b9cb19f1246f in memory
flw f12, 0(x2) # load 0x2599b9cb19f1246f from memory into f12
la x2, scratch
li x3, 0xeafefa1350a1833c # load x3 with value 0xeafefa1350a1833c
sw x3, 0(x2) # store 0xeafefa1350a1833c in memory
flw f25, 0(x2) # load 0xeafefa1350a1833c from memory into f25
fnmadd.s f25, f11, f12, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x3bf525a9f6710f14 # load x3 with value 0x3bf525a9f6710f14
sw x3, 0(x2) # store 0x3bf525a9f6710f14 in memory
flw f1, 0(x2) # load 0x3bf525a9f6710f14 from memory into f1
la x2, scratch
li x3, 0x61ee188bbdf5ab2b # load x3 with value 0x61ee188bbdf5ab2b
sw x3, 0(x2) # store 0x61ee188bbdf5ab2b in memory
flw f25, 0(x2) # load 0x61ee188bbdf5ab2b from memory into f25
la x2, scratch
li x3, 0xd98d0ee92d90f3ef # load x3 with value 0xd98d0ee92d90f3ef
sw x3, 0(x2) # store 0xd98d0ee92d90f3ef in memory
flw f26, 0(x2) # load 0xd98d0ee92d90f3ef from memory into f26
fnmadd.s f26, f1, f25, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xfd9c845c48d116f0 # load x3 with value 0xfd9c845c48d116f0
sw x3, 0(x2) # store 0xfd9c845c48d116f0 in memory
flw f30, 0(x2) # load 0xfd9c845c48d116f0 from memory into f30
la x2, scratch
li x3, 0xc8262d45d262b878 # load x3 with value 0xc8262d45d262b878
sw x3, 0(x2) # store 0xc8262d45d262b878 in memory
flw f27, 0(x2) # load 0xc8262d45d262b878 from memory into f27
la x2, scratch
li x3, 0xd1294bc7fe33a4ee # load x3 with value 0xd1294bc7fe33a4ee
sw x3, 0(x2) # store 0xd1294bc7fe33a4ee in memory
flw f27, 0(x2) # load 0xd1294bc7fe33a4ee from memory into f27
fnmadd.s f27, f30, f27, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x8d675cf66ba2a132 # load x3 with value 0x8d675cf66ba2a132
sw x3, 0(x2) # store 0x8d675cf66ba2a132 in memory
flw f28, 0(x2) # load 0x8d675cf66ba2a132 from memory into f28
la x2, scratch
li x3, 0x7e35de2de5d321d # load x3 with value 0x7e35de2de5d321d
sw x3, 0(x2) # store 0x7e35de2de5d321d in memory
flw f5, 0(x2) # load 0x7e35de2de5d321d from memory into f5
la x2, scratch
li x3, 0xa2b51f7e2bd6a40d # load x3 with value 0xa2b51f7e2bd6a40d
sw x3, 0(x2) # store 0xa2b51f7e2bd6a40d in memory
flw f28, 0(x2) # load 0xa2b51f7e2bd6a40d from memory into f28
fnmadd.s f28, f28, f5, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0xfb472213f90ce9bd # load x3 with value 0xfb472213f90ce9bd
sw x3, 0(x2) # store 0xfb472213f90ce9bd in memory
flw f24, 0(x2) # load 0xfb472213f90ce9bd from memory into f24
la x2, scratch
li x3, 0xcf022700796c866f # load x3 with value 0xcf022700796c866f
sw x3, 0(x2) # store 0xcf022700796c866f in memory
flw f14, 0(x2) # load 0xcf022700796c866f from memory into f14
la x2, scratch
li x3, 0x499673efb6b23c7a # load x3 with value 0x499673efb6b23c7a
sw x3, 0(x2) # store 0x499673efb6b23c7a in memory
flw f29, 0(x2) # load 0x499673efb6b23c7a from memory into f29
fnmadd.s f29, f24, f14, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0xeb392bc1e352e625 # load x3 with value 0xeb392bc1e352e625
sw x3, 0(x2) # store 0xeb392bc1e352e625 in memory
flw f27, 0(x2) # load 0xeb392bc1e352e625 from memory into f27
la x2, scratch
li x3, 0xc3dc3c8a3b85c802 # load x3 with value 0xc3dc3c8a3b85c802
sw x3, 0(x2) # store 0xc3dc3c8a3b85c802 in memory
flw f26, 0(x2) # load 0xc3dc3c8a3b85c802 from memory into f26
la x2, scratch
li x3, 0xd729aa50f719cb25 # load x3 with value 0xd729aa50f719cb25
sw x3, 0(x2) # store 0xd729aa50f719cb25 in memory
flw f30, 0(x2) # load 0xd729aa50f719cb25 from memory into f30
fnmadd.s f30, f27, f26, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0xf6a09ac92f36a7dd # load x3 with value 0xf6a09ac92f36a7dd
sw x3, 0(x2) # store 0xf6a09ac92f36a7dd in memory
flw f17, 0(x2) # load 0xf6a09ac92f36a7dd from memory into f17
la x2, scratch
li x3, 0xa7a3d5c74d605d18 # load x3 with value 0xa7a3d5c74d605d18
sw x3, 0(x2) # store 0xa7a3d5c74d605d18 in memory
flw f12, 0(x2) # load 0xa7a3d5c74d605d18 from memory into f12
la x2, scratch
li x3, 0xb49a0b75a4869775 # load x3 with value 0xb49a0b75a4869775
sw x3, 0(x2) # store 0xb49a0b75a4869775 in memory
flw f31, 0(x2) # load 0xb49a0b75a4869775 from memory into f31
fnmadd.s f31, f17, f12, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x3a5db51f59fa0b56 # load x3 with value 0x3a5db51f59fa0b56
sw x3, 0(x2) # store 0x3a5db51f59fa0b56 in memory
flw f25, 0(x2) # load 0x3a5db51f59fa0b56 from memory into f25
la x2, scratch
li x3, 0x367b07bac7cf2b73 # load x3 with value 0x367b07bac7cf2b73
sw x3, 0(x2) # store 0x367b07bac7cf2b73 in memory
flw f28, 0(x2) # load 0x367b07bac7cf2b73 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f7, f25, f28, f1, dyn # perform operation
fnmadd.s f7, f25, f28, f1, rdn # perform operation
fnmadd.s f7, f25, f28, f1, rmm # perform operation
fnmadd.s f7, f25, f28, f1, rne # perform operation
fnmadd.s f7, f25, f28, f1, rtz # perform operation
fnmadd.s f7, f25, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xd87350dbfef78577 # load x3 with value 0xd87350dbfef78577
sw x3, 0(x2) # store 0xd87350dbfef78577 in memory
flw f18, 0(x2) # load 0xd87350dbfef78577 from memory into f18
fnmadd.s f22, f30, f12, f18, dyn # perform operation
fnmadd.s f22, f30, f12, f18, rdn # perform operation
fnmadd.s f22, f30, f12, f18, rmm # perform operation
fnmadd.s f22, f30, f12, f18, rne # perform operation
fnmadd.s f22, f30, f12, f18, rtz # perform operation
fnmadd.s f22, f30, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f30, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xf38405ddf2f466c # load x3 with value 0xf38405ddf2f466c
sw x3, 0(x2) # store 0xf38405ddf2f466c in memory
flw f13, 0(x2) # load 0xf38405ddf2f466c from memory into f13
fnmadd.s f10, f5, f18, f13, dyn # perform operation
fnmadd.s f10, f5, f18, f13, rdn # perform operation
fnmadd.s f10, f5, f18, f13, rmm # perform operation
fnmadd.s f10, f5, f18, f13, rne # perform operation
fnmadd.s f10, f5, f18, f13, rtz # perform operation
fnmadd.s f10, f5, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0xc13b913eccd96bf7 # load x3 with value 0xc13b913eccd96bf7
sw x3, 0(x2) # store 0xc13b913eccd96bf7 in memory
flw f24, 0(x2) # load 0xc13b913eccd96bf7 from memory into f24
fnmadd.s f31, f30, f9, f24, dyn # perform operation
fnmadd.s f31, f30, f9, f24, rdn # perform operation
fnmadd.s f31, f30, f9, f24, rmm # perform operation
fnmadd.s f31, f30, f9, f24, rne # perform operation
fnmadd.s f31, f30, f9, f24, rtz # perform operation
fnmadd.s f31, f30, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x53a918e7d8ac9c55 # load x3 with value 0x53a918e7d8ac9c55
sw x3, 0(x2) # store 0x53a918e7d8ac9c55 in memory
flw f15, 0(x2) # load 0x53a918e7d8ac9c55 from memory into f15
fnmadd.s f31, f13, f23, f15, dyn # perform operation
fnmadd.s f31, f13, f23, f15, rdn # perform operation
fnmadd.s f31, f13, f23, f15, rmm # perform operation
fnmadd.s f31, f13, f23, f15, rne # perform operation
fnmadd.s f31, f13, f23, f15, rtz # perform operation
fnmadd.s f31, f13, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f13, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f13, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f13, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f13, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f13, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xa5c60dfd9647a9a1 # load x3 with value 0xa5c60dfd9647a9a1
sw x3, 0(x2) # store 0xa5c60dfd9647a9a1 in memory
flw f11, 0(x2) # load 0xa5c60dfd9647a9a1 from memory into f11
fnmadd.s f28, f9, f31, f11, dyn # perform operation
fnmadd.s f28, f9, f31, f11, rdn # perform operation
fnmadd.s f28, f9, f31, f11, rmm # perform operation
fnmadd.s f28, f9, f31, f11, rne # perform operation
fnmadd.s f28, f9, f31, f11, rtz # perform operation
fnmadd.s f28, f9, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x8595d726329a5def # load x3 with value 0x8595d726329a5def
sw x3, 0(x2) # store 0x8595d726329a5def in memory
flw f9, 0(x2) # load 0x8595d726329a5def from memory into f9
fnmadd.s f15, f14, f16, f9, dyn # perform operation
fnmadd.s f15, f14, f16, f9, rdn # perform operation
fnmadd.s f15, f14, f16, f9, rmm # perform operation
fnmadd.s f15, f14, f16, f9, rne # perform operation
fnmadd.s f15, f14, f16, f9, rtz # perform operation
fnmadd.s f15, f14, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x67d225149bf1f111 # load x3 with value 0x67d225149bf1f111
sw x3, 0(x2) # store 0x67d225149bf1f111 in memory
flw f8, 0(x2) # load 0x67d225149bf1f111 from memory into f8
fnmadd.s f11, f13, f21, f8, dyn # perform operation
fnmadd.s f11, f13, f21, f8, rdn # perform operation
fnmadd.s f11, f13, f21, f8, rmm # perform operation
fnmadd.s f11, f13, f21, f8, rne # perform operation
fnmadd.s f11, f13, f21, f8, rtz # perform operation
fnmadd.s f11, f13, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xe70774fd49c1a438 # load x3 with value 0xe70774fd49c1a438
sw x3, 0(x2) # store 0xe70774fd49c1a438 in memory
flw f3, 0(x2) # load 0xe70774fd49c1a438 from memory into f3
fnmadd.s f11, f13, f10, f3, dyn # perform operation
fnmadd.s f11, f13, f10, f3, rdn # perform operation
fnmadd.s f11, f13, f10, f3, rmm # perform operation
fnmadd.s f11, f13, f10, f3, rne # perform operation
fnmadd.s f11, f13, f10, f3, rtz # perform operation
fnmadd.s f11, f13, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0xa4cd8854b8517f95 # load x3 with value 0xa4cd8854b8517f95
sw x3, 0(x2) # store 0xa4cd8854b8517f95 in memory
flw f18, 0(x2) # load 0xa4cd8854b8517f95 from memory into f18
fnmadd.s f22, f1, f13, f18, dyn # perform operation
fnmadd.s f22, f1, f13, f18, rdn # perform operation
fnmadd.s f22, f1, f13, f18, rmm # perform operation
fnmadd.s f22, f1, f13, f18, rne # perform operation
fnmadd.s f22, f1, f13, f18, rtz # perform operation
fnmadd.s f22, f1, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x997f0b8d9866bdcb # load x3 with value 0x997f0b8d9866bdcb
sw x3, 0(x2) # store 0x997f0b8d9866bdcb in memory
flw f16, 0(x2) # load 0x997f0b8d9866bdcb from memory into f16
fnmadd.s f22, f8, f14, f16, dyn # perform operation
fnmadd.s f22, f8, f14, f16, rdn # perform operation
fnmadd.s f22, f8, f14, f16, rmm # perform operation
fnmadd.s f22, f8, f14, f16, rne # perform operation
fnmadd.s f22, f8, f14, f16, rtz # perform operation
fnmadd.s f22, f8, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x99341fb0abd40187 # load x3 with value 0x99341fb0abd40187
sw x3, 0(x2) # store 0x99341fb0abd40187 in memory
flw f24, 0(x2) # load 0x99341fb0abd40187 from memory into f24
fnmadd.s f16, f20, f25, f24, dyn # perform operation
fnmadd.s f16, f20, f25, f24, rdn # perform operation
fnmadd.s f16, f20, f25, f24, rmm # perform operation
fnmadd.s f16, f20, f25, f24, rne # perform operation
fnmadd.s f16, f20, f25, f24, rtz # perform operation
fnmadd.s f16, f20, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x782e97f523d6fceb # load x3 with value 0x782e97f523d6fceb
sw x3, 0(x2) # store 0x782e97f523d6fceb in memory
flw f6, 0(x2) # load 0x782e97f523d6fceb from memory into f6
fnmadd.s f15, f26, f24, f6, dyn # perform operation
fnmadd.s f15, f26, f24, f6, rdn # perform operation
fnmadd.s f15, f26, f24, f6, rmm # perform operation
fnmadd.s f15, f26, f24, f6, rne # perform operation
fnmadd.s f15, f26, f24, f6, rtz # perform operation
fnmadd.s f15, f26, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xe142ff37357360d4 # load x3 with value 0xe142ff37357360d4
sw x3, 0(x2) # store 0xe142ff37357360d4 in memory
flw f16, 0(x2) # load 0xe142ff37357360d4 from memory into f16
fnmadd.s f7, f9, f15, f16, dyn # perform operation
fnmadd.s f7, f9, f15, f16, rdn # perform operation
fnmadd.s f7, f9, f15, f16, rmm # perform operation
fnmadd.s f7, f9, f15, f16, rne # perform operation
fnmadd.s f7, f9, f15, f16, rtz # perform operation
fnmadd.s f7, f9, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xf792fc533aaa94bb # load x3 with value 0xf792fc533aaa94bb
sw x3, 0(x2) # store 0xf792fc533aaa94bb in memory
flw f18, 0(x2) # load 0xf792fc533aaa94bb from memory into f18
fnmadd.s f14, f27, f10, f18, dyn # perform operation
fnmadd.s f14, f27, f10, f18, rdn # perform operation
fnmadd.s f14, f27, f10, f18, rmm # perform operation
fnmadd.s f14, f27, f10, f18, rne # perform operation
fnmadd.s f14, f27, f10, f18, rtz # perform operation
fnmadd.s f14, f27, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x4068f2018e7f87a7 # load x3 with value 0x4068f2018e7f87a7
sw x3, 0(x2) # store 0x4068f2018e7f87a7 in memory
flw f24, 0(x2) # load 0x4068f2018e7f87a7 from memory into f24
fnmadd.s f21, f3, f27, f24, dyn # perform operation
fnmadd.s f21, f3, f27, f24, rdn # perform operation
fnmadd.s f21, f3, f27, f24, rmm # perform operation
fnmadd.s f21, f3, f27, f24, rne # perform operation
fnmadd.s f21, f3, f27, f24, rtz # perform operation
fnmadd.s f21, f3, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x95a28e8103e839f3 # load x3 with value 0x95a28e8103e839f3
sw x3, 0(x2) # store 0x95a28e8103e839f3 in memory
flw f6, 0(x2) # load 0x95a28e8103e839f3 from memory into f6
fnmadd.s f11, f24, f31, f6, dyn # perform operation
fnmadd.s f11, f24, f31, f6, rdn # perform operation
fnmadd.s f11, f24, f31, f6, rmm # perform operation
fnmadd.s f11, f24, f31, f6, rne # perform operation
fnmadd.s f11, f24, f31, f6, rtz # perform operation
fnmadd.s f11, f24, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xd425efa4433e0852 # load x3 with value 0xd425efa4433e0852
sw x3, 0(x2) # store 0xd425efa4433e0852 in memory
flw f1, 0(x2) # load 0xd425efa4433e0852 from memory into f1
fnmadd.s f14, f19, f15, f1, dyn # perform operation
fnmadd.s f14, f19, f15, f1, rdn # perform operation
fnmadd.s f14, f19, f15, f1, rmm # perform operation
fnmadd.s f14, f19, f15, f1, rne # perform operation
fnmadd.s f14, f19, f15, f1, rtz # perform operation
fnmadd.s f14, f19, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xb7e6289aa1cfa67a # load x3 with value 0xb7e6289aa1cfa67a
sw x3, 0(x2) # store 0xb7e6289aa1cfa67a in memory
flw f28, 0(x2) # load 0xb7e6289aa1cfa67a from memory into f28
fnmadd.s f10, f22, f6, f28, dyn # perform operation
fnmadd.s f10, f22, f6, f28, rdn # perform operation
fnmadd.s f10, f22, f6, f28, rmm # perform operation
fnmadd.s f10, f22, f6, f28, rne # perform operation
fnmadd.s f10, f22, f6, f28, rtz # perform operation
fnmadd.s f10, f22, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xb068e90df9bd5e28 # load x3 with value 0xb068e90df9bd5e28
sw x3, 0(x2) # store 0xb068e90df9bd5e28 in memory
flw f12, 0(x2) # load 0xb068e90df9bd5e28 from memory into f12
fnmadd.s f26, f10, f5, f12, dyn # perform operation
fnmadd.s f26, f10, f5, f12, rdn # perform operation
fnmadd.s f26, f10, f5, f12, rmm # perform operation
fnmadd.s f26, f10, f5, f12, rne # perform operation
fnmadd.s f26, f10, f5, f12, rtz # perform operation
fnmadd.s f26, f10, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x31e25761c47799a7 # load x3 with value 0x31e25761c47799a7
sw x3, 0(x2) # store 0x31e25761c47799a7 in memory
flw f21, 0(x2) # load 0x31e25761c47799a7 from memory into f21
fnmadd.s f24, f15, f29, f21, dyn # perform operation
fnmadd.s f24, f15, f29, f21, rdn # perform operation
fnmadd.s f24, f15, f29, f21, rmm # perform operation
fnmadd.s f24, f15, f29, f21, rne # perform operation
fnmadd.s f24, f15, f29, f21, rtz # perform operation
fnmadd.s f24, f15, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x2b2aa9f22890cbbd # load x3 with value 0x2b2aa9f22890cbbd
sw x3, 0(x2) # store 0x2b2aa9f22890cbbd in memory
flw f12, 0(x2) # load 0x2b2aa9f22890cbbd from memory into f12
fnmadd.s f11, f22, f6, f12, dyn # perform operation
fnmadd.s f11, f22, f6, f12, rdn # perform operation
fnmadd.s f11, f22, f6, f12, rmm # perform operation
fnmadd.s f11, f22, f6, f12, rne # perform operation
fnmadd.s f11, f22, f6, f12, rtz # perform operation
fnmadd.s f11, f22, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x82361b63c52de631 # load x3 with value 0x82361b63c52de631
sw x3, 0(x2) # store 0x82361b63c52de631 in memory
flw f15, 0(x2) # load 0x82361b63c52de631 from memory into f15
fnmadd.s f11, f16, f28, f15, dyn # perform operation
fnmadd.s f11, f16, f28, f15, rdn # perform operation
fnmadd.s f11, f16, f28, f15, rmm # perform operation
fnmadd.s f11, f16, f28, f15, rne # perform operation
fnmadd.s f11, f16, f28, f15, rtz # perform operation
fnmadd.s f11, f16, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x5b5acde797a1b4c5 # load x3 with value 0x5b5acde797a1b4c5
sw x3, 0(x2) # store 0x5b5acde797a1b4c5 in memory
flw f2, 0(x2) # load 0x5b5acde797a1b4c5 from memory into f2
fnmadd.s f23, f10, f1, f2, dyn # perform operation
fnmadd.s f23, f10, f1, f2, rdn # perform operation
fnmadd.s f23, f10, f1, f2, rmm # perform operation
fnmadd.s f23, f10, f1, f2, rne # perform operation
fnmadd.s f23, f10, f1, f2, rtz # perform operation
fnmadd.s f23, f10, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x97110c27437a8951 # load x3 with value 0x97110c27437a8951
sw x3, 0(x2) # store 0x97110c27437a8951 in memory
flw f10, 0(x2) # load 0x97110c27437a8951 from memory into f10
fnmadd.s f20, f11, f31, f10, dyn # perform operation
fnmadd.s f20, f11, f31, f10, rdn # perform operation
fnmadd.s f20, f11, f31, f10, rmm # perform operation
fnmadd.s f20, f11, f31, f10, rne # perform operation
fnmadd.s f20, f11, f31, f10, rtz # perform operation
fnmadd.s f20, f11, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f11, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x3d18679b70e321e6 # load x3 with value 0x3d18679b70e321e6
sw x3, 0(x2) # store 0x3d18679b70e321e6 in memory
flw f21, 0(x2) # load 0x3d18679b70e321e6 from memory into f21
fnmadd.s f8, f22, f13, f21, dyn # perform operation
fnmadd.s f8, f22, f13, f21, rdn # perform operation
fnmadd.s f8, f22, f13, f21, rmm # perform operation
fnmadd.s f8, f22, f13, f21, rne # perform operation
fnmadd.s f8, f22, f13, f21, rtz # perform operation
fnmadd.s f8, f22, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xe74382db28a61db0 # load x3 with value 0xe74382db28a61db0
sw x3, 0(x2) # store 0xe74382db28a61db0 in memory
flw f24, 0(x2) # load 0xe74382db28a61db0 from memory into f24
fnmadd.s f16, f3, f19, f24, dyn # perform operation
fnmadd.s f16, f3, f19, f24, rdn # perform operation
fnmadd.s f16, f3, f19, f24, rmm # perform operation
fnmadd.s f16, f3, f19, f24, rne # perform operation
fnmadd.s f16, f3, f19, f24, rtz # perform operation
fnmadd.s f16, f3, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xe1c1f8026b5c8538 # load x3 with value 0xe1c1f8026b5c8538
sw x3, 0(x2) # store 0xe1c1f8026b5c8538 in memory
flw f21, 0(x2) # load 0xe1c1f8026b5c8538 from memory into f21
fnmadd.s f23, f1, f25, f21, dyn # perform operation
fnmadd.s f23, f1, f25, f21, rdn # perform operation
fnmadd.s f23, f1, f25, f21, rmm # perform operation
fnmadd.s f23, f1, f25, f21, rne # perform operation
fnmadd.s f23, f1, f25, f21, rtz # perform operation
fnmadd.s f23, f1, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x792b096b895b7f51 # load x3 with value 0x792b096b895b7f51
sw x3, 0(x2) # store 0x792b096b895b7f51 in memory
flw f15, 0(x2) # load 0x792b096b895b7f51 from memory into f15
fnmadd.s f9, f3, f6, f15, dyn # perform operation
fnmadd.s f9, f3, f6, f15, rdn # perform operation
fnmadd.s f9, f3, f6, f15, rmm # perform operation
fnmadd.s f9, f3, f6, f15, rne # perform operation
fnmadd.s f9, f3, f6, f15, rtz # perform operation
fnmadd.s f9, f3, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xa3d4c6dce05c6862 # load x3 with value 0xa3d4c6dce05c6862
sw x3, 0(x2) # store 0xa3d4c6dce05c6862 in memory
flw f22, 0(x2) # load 0xa3d4c6dce05c6862 from memory into f22
fnmadd.s f16, f26, f31, f22, dyn # perform operation
fnmadd.s f16, f26, f31, f22, rdn # perform operation
fnmadd.s f16, f26, f31, f22, rmm # perform operation
fnmadd.s f16, f26, f31, f22, rne # perform operation
fnmadd.s f16, f26, f31, f22, rtz # perform operation
fnmadd.s f16, f26, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f26, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f26, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xfe182704657f1e14 # load x3 with value 0xfe182704657f1e14
sw x3, 0(x2) # store 0xfe182704657f1e14 in memory
flw f14, 0(x2) # load 0xfe182704657f1e14 from memory into f14
fnmadd.s f13, f1, f19, f14, dyn # perform operation
fnmadd.s f13, f1, f19, f14, rdn # perform operation
fnmadd.s f13, f1, f19, f14, rmm # perform operation
fnmadd.s f13, f1, f19, f14, rne # perform operation
fnmadd.s f13, f1, f19, f14, rtz # perform operation
fnmadd.s f13, f1, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f1, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xa71aaacfddba388d # load x3 with value 0xa71aaacfddba388d
sw x3, 0(x2) # store 0xa71aaacfddba388d in memory
flw f16, 0(x2) # load 0xa71aaacfddba388d from memory into f16
fnmadd.s f23, f18, f19, f16, dyn # perform operation
fnmadd.s f23, f18, f19, f16, rdn # perform operation
fnmadd.s f23, f18, f19, f16, rmm # perform operation
fnmadd.s f23, f18, f19, f16, rne # perform operation
fnmadd.s f23, f18, f19, f16, rtz # perform operation
fnmadd.s f23, f18, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f18, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x9f4708662d1b1e24 # load x3 with value 0x9f4708662d1b1e24
sw x3, 0(x2) # store 0x9f4708662d1b1e24 in memory
flw f16, 0(x2) # load 0x9f4708662d1b1e24 from memory into f16
fnmadd.s f15, f11, f20, f16, dyn # perform operation
fnmadd.s f15, f11, f20, f16, rdn # perform operation
fnmadd.s f15, f11, f20, f16, rmm # perform operation
fnmadd.s f15, f11, f20, f16, rne # perform operation
fnmadd.s f15, f11, f20, f16, rtz # perform operation
fnmadd.s f15, f11, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x98301d08a314fd3e # load x3 with value 0x98301d08a314fd3e
sw x3, 0(x2) # store 0x98301d08a314fd3e in memory
flw f10, 0(x2) # load 0x98301d08a314fd3e from memory into f10
fnmadd.s f26, f9, f14, f10, dyn # perform operation
fnmadd.s f26, f9, f14, f10, rdn # perform operation
fnmadd.s f26, f9, f14, f10, rmm # perform operation
fnmadd.s f26, f9, f14, f10, rne # perform operation
fnmadd.s f26, f9, f14, f10, rtz # perform operation
fnmadd.s f26, f9, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0xee9ad76156ec422c # load x3 with value 0xee9ad76156ec422c
sw x3, 0(x2) # store 0xee9ad76156ec422c in memory
flw f5, 0(x2) # load 0xee9ad76156ec422c from memory into f5
fnmadd.s f30, f6, f19, f5, dyn # perform operation
fnmadd.s f30, f6, f19, f5, rdn # perform operation
fnmadd.s f30, f6, f19, f5, rmm # perform operation
fnmadd.s f30, f6, f19, f5, rne # perform operation
fnmadd.s f30, f6, f19, f5, rtz # perform operation
fnmadd.s f30, f6, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xd9e48a3f8ff44881 # load x3 with value 0xd9e48a3f8ff44881
sw x3, 0(x2) # store 0xd9e48a3f8ff44881 in memory
flw f8, 0(x2) # load 0xd9e48a3f8ff44881 from memory into f8
fnmadd.s f29, f27, f18, f8, dyn # perform operation
fnmadd.s f29, f27, f18, f8, rdn # perform operation
fnmadd.s f29, f27, f18, f8, rmm # perform operation
fnmadd.s f29, f27, f18, f8, rne # perform operation
fnmadd.s f29, f27, f18, f8, rtz # perform operation
fnmadd.s f29, f27, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x5952b448649af6ec # load x3 with value 0x5952b448649af6ec
sw x3, 0(x2) # store 0x5952b448649af6ec in memory
flw f8, 0(x2) # load 0x5952b448649af6ec from memory into f8
fnmadd.s f25, f22, f16, f8, dyn # perform operation
fnmadd.s f25, f22, f16, f8, rdn # perform operation
fnmadd.s f25, f22, f16, f8, rmm # perform operation
fnmadd.s f25, f22, f16, f8, rne # perform operation
fnmadd.s f25, f22, f16, f8, rtz # perform operation
fnmadd.s f25, f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xde1be0711a7b0314 # load x3 with value 0xde1be0711a7b0314
sw x3, 0(x2) # store 0xde1be0711a7b0314 in memory
flw f6, 0(x2) # load 0xde1be0711a7b0314 from memory into f6
fnmadd.s f28, f24, f26, f6, dyn # perform operation
fnmadd.s f28, f24, f26, f6, rdn # perform operation
fnmadd.s f28, f24, f26, f6, rmm # perform operation
fnmadd.s f28, f24, f26, f6, rne # perform operation
fnmadd.s f28, f24, f26, f6, rtz # perform operation
fnmadd.s f28, f24, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f24, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xe247660aab91350b # load x3 with value 0xe247660aab91350b
sw x3, 0(x2) # store 0xe247660aab91350b in memory
flw f19, 0(x2) # load 0xe247660aab91350b from memory into f19
fnmadd.s f3, f27, f20, f19, dyn # perform operation
fnmadd.s f3, f27, f20, f19, rdn # perform operation
fnmadd.s f3, f27, f20, f19, rmm # perform operation
fnmadd.s f3, f27, f20, f19, rne # perform operation
fnmadd.s f3, f27, f20, f19, rtz # perform operation
fnmadd.s f3, f27, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xb7b835e51cb53200 # load x3 with value 0xb7b835e51cb53200
sw x3, 0(x2) # store 0xb7b835e51cb53200 in memory
flw f5, 0(x2) # load 0xb7b835e51cb53200 from memory into f5
fnmadd.s f22, f25, f20, f5, dyn # perform operation
fnmadd.s f22, f25, f20, f5, rdn # perform operation
fnmadd.s f22, f25, f20, f5, rmm # perform operation
fnmadd.s f22, f25, f20, f5, rne # perform operation
fnmadd.s f22, f25, f20, f5, rtz # perform operation
fnmadd.s f22, f25, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x3cdda95219e983e # load x3 with value 0x3cdda95219e983e
sw x3, 0(x2) # store 0x3cdda95219e983e in memory
flw f11, 0(x2) # load 0x3cdda95219e983e from memory into f11
fnmadd.s f17, f30, f14, f11, dyn # perform operation
fnmadd.s f17, f30, f14, f11, rdn # perform operation
fnmadd.s f17, f30, f14, f11, rmm # perform operation
fnmadd.s f17, f30, f14, f11, rne # perform operation
fnmadd.s f17, f30, f14, f11, rtz # perform operation
fnmadd.s f17, f30, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xf2057ecda367633c # load x3 with value 0xf2057ecda367633c
sw x3, 0(x2) # store 0xf2057ecda367633c in memory
flw f26, 0(x2) # load 0xf2057ecda367633c from memory into f26
fnmadd.s f24, f13, f6, f26, dyn # perform operation
fnmadd.s f24, f13, f6, f26, rdn # perform operation
fnmadd.s f24, f13, f6, f26, rmm # perform operation
fnmadd.s f24, f13, f6, f26, rne # perform operation
fnmadd.s f24, f13, f6, f26, rtz # perform operation
fnmadd.s f24, f13, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f13, f6, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xdb9cd54a8b1ea392 # load x3 with value 0xdb9cd54a8b1ea392
sw x3, 0(x2) # store 0xdb9cd54a8b1ea392 in memory
flw f5, 0(x2) # load 0xdb9cd54a8b1ea392 from memory into f5
fnmadd.s f3, f9, f12, f5, dyn # perform operation
fnmadd.s f3, f9, f12, f5, rdn # perform operation
fnmadd.s f3, f9, f12, f5, rmm # perform operation
fnmadd.s f3, f9, f12, f5, rne # perform operation
fnmadd.s f3, f9, f12, f5, rtz # perform operation
fnmadd.s f3, f9, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x9080061c5f528b51 # load x3 with value 0x9080061c5f528b51
sw x3, 0(x2) # store 0x9080061c5f528b51 in memory
flw f19, 0(x2) # load 0x9080061c5f528b51 from memory into f19
fnmadd.s f30, f14, f7, f19, dyn # perform operation
fnmadd.s f30, f14, f7, f19, rdn # perform operation
fnmadd.s f30, f14, f7, f19, rmm # perform operation
fnmadd.s f30, f14, f7, f19, rne # perform operation
fnmadd.s f30, f14, f7, f19, rtz # perform operation
fnmadd.s f30, f14, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x65874b855a775ef9 # load x3 with value 0x65874b855a775ef9
sw x3, 0(x2) # store 0x65874b855a775ef9 in memory
flw f2, 0(x2) # load 0x65874b855a775ef9 from memory into f2
fnmadd.s f20, f25, f31, f2, dyn # perform operation
fnmadd.s f20, f25, f31, f2, rdn # perform operation
fnmadd.s f20, f25, f31, f2, rmm # perform operation
fnmadd.s f20, f25, f31, f2, rne # perform operation
fnmadd.s f20, f25, f31, f2, rtz # perform operation
fnmadd.s f20, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f25, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x67e8b72551f58d2 # load x3 with value 0x67e8b72551f58d2
sw x3, 0(x2) # store 0x67e8b72551f58d2 in memory
flw f6, 0(x2) # load 0x67e8b72551f58d2 from memory into f6
fnmadd.s f26, f16, f11, f6, dyn # perform operation
fnmadd.s f26, f16, f11, f6, rdn # perform operation
fnmadd.s f26, f16, f11, f6, rmm # perform operation
fnmadd.s f26, f16, f11, f6, rne # perform operation
fnmadd.s f26, f16, f11, f6, rtz # perform operation
fnmadd.s f26, f16, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x2dc61c13db066e92 # load x3 with value 0x2dc61c13db066e92
sw x3, 0(x2) # store 0x2dc61c13db066e92 in memory
flw f11, 0(x2) # load 0x2dc61c13db066e92 from memory into f11
fnmadd.s f19, f20, f16, f11, dyn # perform operation
fnmadd.s f19, f20, f16, f11, rdn # perform operation
fnmadd.s f19, f20, f16, f11, rmm # perform operation
fnmadd.s f19, f20, f16, f11, rne # perform operation
fnmadd.s f19, f20, f16, f11, rtz # perform operation
fnmadd.s f19, f20, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x715029bf79ee23aa # load x3 with value 0x715029bf79ee23aa
sw x3, 0(x2) # store 0x715029bf79ee23aa in memory
flw f6, 0(x2) # load 0x715029bf79ee23aa from memory into f6
fnmadd.s f28, f17, f10, f6, dyn # perform operation
fnmadd.s f28, f17, f10, f6, rdn # perform operation
fnmadd.s f28, f17, f10, f6, rmm # perform operation
fnmadd.s f28, f17, f10, f6, rne # perform operation
fnmadd.s f28, f17, f10, f6, rtz # perform operation
fnmadd.s f28, f17, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f17, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xa73e22d52a812406 # load x3 with value 0xa73e22d52a812406
sw x3, 0(x2) # store 0xa73e22d52a812406 in memory
flw f22, 0(x2) # load 0xa73e22d52a812406 from memory into f22
fnmadd.s f5, f14, f31, f22, dyn # perform operation
fnmadd.s f5, f14, f31, f22, rdn # perform operation
fnmadd.s f5, f14, f31, f22, rmm # perform operation
fnmadd.s f5, f14, f31, f22, rne # perform operation
fnmadd.s f5, f14, f31, f22, rtz # perform operation
fnmadd.s f5, f14, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x127b101c46db3a67 # load x3 with value 0x127b101c46db3a67
sw x3, 0(x2) # store 0x127b101c46db3a67 in memory
flw f28, 0(x2) # load 0x127b101c46db3a67 from memory into f28
fnmadd.s f12, f1, f11, f28, dyn # perform operation
fnmadd.s f12, f1, f11, f28, rdn # perform operation
fnmadd.s f12, f1, f11, f28, rmm # perform operation
fnmadd.s f12, f1, f11, f28, rne # perform operation
fnmadd.s f12, f1, f11, f28, rtz # perform operation
fnmadd.s f12, f1, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f1, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x4a258bce6c9ecab # load x3 with value 0x4a258bce6c9ecab
sw x3, 0(x2) # store 0x4a258bce6c9ecab in memory
flw f16, 0(x2) # load 0x4a258bce6c9ecab from memory into f16
fnmadd.s f29, f7, f1, f16, dyn # perform operation
fnmadd.s f29, f7, f1, f16, rdn # perform operation
fnmadd.s f29, f7, f1, f16, rmm # perform operation
fnmadd.s f29, f7, f1, f16, rne # perform operation
fnmadd.s f29, f7, f1, f16, rtz # perform operation
fnmadd.s f29, f7, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xb730a41405e632b9 # load x3 with value 0xb730a41405e632b9
sw x3, 0(x2) # store 0xb730a41405e632b9 in memory
flw f5, 0(x2) # load 0xb730a41405e632b9 from memory into f5
fnmadd.s f11, f9, f29, f5, dyn # perform operation
fnmadd.s f11, f9, f29, f5, rdn # perform operation
fnmadd.s f11, f9, f29, f5, rmm # perform operation
fnmadd.s f11, f9, f29, f5, rne # perform operation
fnmadd.s f11, f9, f29, f5, rtz # perform operation
fnmadd.s f11, f9, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f9, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xf3c6b55003fa9f91 # load x3 with value 0xf3c6b55003fa9f91
sw x3, 0(x2) # store 0xf3c6b55003fa9f91 in memory
flw f2, 0(x2) # load 0xf3c6b55003fa9f91 from memory into f2
fnmadd.s f23, f30, f10, f2, dyn # perform operation
fnmadd.s f23, f30, f10, f2, rdn # perform operation
fnmadd.s f23, f30, f10, f2, rmm # perform operation
fnmadd.s f23, f30, f10, f2, rne # perform operation
fnmadd.s f23, f30, f10, f2, rtz # perform operation
fnmadd.s f23, f30, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x14d36c1eeb81bfec # load x3 with value 0x14d36c1eeb81bfec
sw x3, 0(x2) # store 0x14d36c1eeb81bfec in memory
flw f16, 0(x2) # load 0x14d36c1eeb81bfec from memory into f16
fnmadd.s f11, f3, f8, f16, dyn # perform operation
fnmadd.s f11, f3, f8, f16, rdn # perform operation
fnmadd.s f11, f3, f8, f16, rmm # perform operation
fnmadd.s f11, f3, f8, f16, rne # perform operation
fnmadd.s f11, f3, f8, f16, rtz # perform operation
fnmadd.s f11, f3, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f3, f8, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x8f82b21b94ee7ef0 # load x3 with value 0x8f82b21b94ee7ef0
sw x3, 0(x2) # store 0x8f82b21b94ee7ef0 in memory
flw f14, 0(x2) # load 0x8f82b21b94ee7ef0 from memory into f14
fnmadd.s f12, f25, f13, f14, dyn # perform operation
fnmadd.s f12, f25, f13, f14, rdn # perform operation
fnmadd.s f12, f25, f13, f14, rmm # perform operation
fnmadd.s f12, f25, f13, f14, rne # perform operation
fnmadd.s f12, f25, f13, f14, rtz # perform operation
fnmadd.s f12, f25, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f25, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x9ab4b48afed06706 # load x3 with value 0x9ab4b48afed06706
sw x3, 0(x2) # store 0x9ab4b48afed06706 in memory
flw f14, 0(x2) # load 0x9ab4b48afed06706 from memory into f14
fnmadd.s f8, f18, f11, f14, dyn # perform operation
fnmadd.s f8, f18, f11, f14, rdn # perform operation
fnmadd.s f8, f18, f11, f14, rmm # perform operation
fnmadd.s f8, f18, f11, f14, rne # perform operation
fnmadd.s f8, f18, f11, f14, rtz # perform operation
fnmadd.s f8, f18, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xdaf69843a032fa2e # load x3 with value 0xdaf69843a032fa2e
sw x3, 0(x2) # store 0xdaf69843a032fa2e in memory
flw f7, 0(x2) # load 0xdaf69843a032fa2e from memory into f7
fnmadd.s f20, f31, f11, f7, dyn # perform operation
fnmadd.s f20, f31, f11, f7, rdn # perform operation
fnmadd.s f20, f31, f11, f7, rmm # perform operation
fnmadd.s f20, f31, f11, f7, rne # perform operation
fnmadd.s f20, f31, f11, f7, rtz # perform operation
fnmadd.s f20, f31, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xdda00db920929e86 # load x3 with value 0xdda00db920929e86
sw x3, 0(x2) # store 0xdda00db920929e86 in memory
flw f17, 0(x2) # load 0xdda00db920929e86 from memory into f17
fnmadd.s f15, f10, f18, f17, dyn # perform operation
fnmadd.s f15, f10, f18, f17, rdn # perform operation
fnmadd.s f15, f10, f18, f17, rmm # perform operation
fnmadd.s f15, f10, f18, f17, rne # perform operation
fnmadd.s f15, f10, f18, f17, rtz # perform operation
fnmadd.s f15, f10, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xc6287295ada1bd82 # load x3 with value 0xc6287295ada1bd82
sw x3, 0(x2) # store 0xc6287295ada1bd82 in memory
flw f21, 0(x2) # load 0xc6287295ada1bd82 from memory into f21
fnmadd.s f13, f19, f18, f21, dyn # perform operation
fnmadd.s f13, f19, f18, f21, rdn # perform operation
fnmadd.s f13, f19, f18, f21, rmm # perform operation
fnmadd.s f13, f19, f18, f21, rne # perform operation
fnmadd.s f13, f19, f18, f21, rtz # perform operation
fnmadd.s f13, f19, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x503abd9a5e2358a7 # load x3 with value 0x503abd9a5e2358a7
sw x3, 0(x2) # store 0x503abd9a5e2358a7 in memory
flw f10, 0(x2) # load 0x503abd9a5e2358a7 from memory into f10
fnmadd.s f27, f19, f18, f10, dyn # perform operation
fnmadd.s f27, f19, f18, f10, rdn # perform operation
fnmadd.s f27, f19, f18, f10, rmm # perform operation
fnmadd.s f27, f19, f18, f10, rne # perform operation
fnmadd.s f27, f19, f18, f10, rtz # perform operation
fnmadd.s f27, f19, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x1eee30df28f2dbd2 # load x3 with value 0x1eee30df28f2dbd2
sw x3, 0(x2) # store 0x1eee30df28f2dbd2 in memory
flw f14, 0(x2) # load 0x1eee30df28f2dbd2 from memory into f14
fnmadd.s f22, f30, f11, f14, dyn # perform operation
fnmadd.s f22, f30, f11, f14, rdn # perform operation
fnmadd.s f22, f30, f11, f14, rmm # perform operation
fnmadd.s f22, f30, f11, f14, rne # perform operation
fnmadd.s f22, f30, f11, f14, rtz # perform operation
fnmadd.s f22, f30, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f30, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x6a1cc98402561f61 # load x3 with value 0x6a1cc98402561f61
sw x3, 0(x2) # store 0x6a1cc98402561f61 in memory
flw f18, 0(x2) # load 0x6a1cc98402561f61 from memory into f18
fnmadd.s f12, f19, f2, f18, dyn # perform operation
fnmadd.s f12, f19, f2, f18, rdn # perform operation
fnmadd.s f12, f19, f2, f18, rmm # perform operation
fnmadd.s f12, f19, f2, f18, rne # perform operation
fnmadd.s f12, f19, f2, f18, rtz # perform operation
fnmadd.s f12, f19, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f19, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x907566a8218cd0b2 # load x3 with value 0x907566a8218cd0b2
sw x3, 0(x2) # store 0x907566a8218cd0b2 in memory
flw f30, 0(x2) # load 0x907566a8218cd0b2 from memory into f30
fnmadd.s f8, f12, f1, f30, dyn # perform operation
fnmadd.s f8, f12, f1, f30, rdn # perform operation
fnmadd.s f8, f12, f1, f30, rmm # perform operation
fnmadd.s f8, f12, f1, f30, rne # perform operation
fnmadd.s f8, f12, f1, f30, rtz # perform operation
fnmadd.s f8, f12, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x88db6c1e195cd52d # load x3 with value 0x88db6c1e195cd52d
sw x3, 0(x2) # store 0x88db6c1e195cd52d in memory
flw f3, 0(x2) # load 0x88db6c1e195cd52d from memory into f3
fnmadd.s f27, f15, f2, f3, dyn # perform operation
fnmadd.s f27, f15, f2, f3, rdn # perform operation
fnmadd.s f27, f15, f2, f3, rmm # perform operation
fnmadd.s f27, f15, f2, f3, rne # perform operation
fnmadd.s f27, f15, f2, f3, rtz # perform operation
fnmadd.s f27, f15, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xf977289a28875f3 # load x3 with value 0xf977289a28875f3
sw x3, 0(x2) # store 0xf977289a28875f3 in memory
flw f31, 0(x2) # load 0xf977289a28875f3 from memory into f31
fnmadd.s f7, f1, f20, f31, dyn # perform operation
fnmadd.s f7, f1, f20, f31, rdn # perform operation
fnmadd.s f7, f1, f20, f31, rmm # perform operation
fnmadd.s f7, f1, f20, f31, rne # perform operation
fnmadd.s f7, f1, f20, f31, rtz # perform operation
fnmadd.s f7, f1, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x325c3e96c962730 # load x3 with value 0x325c3e96c962730
sw x3, 0(x2) # store 0x325c3e96c962730 in memory
flw f7, 0(x2) # load 0x325c3e96c962730 from memory into f7
fnmadd.s f18, f25, f17, f7, dyn # perform operation
fnmadd.s f18, f25, f17, f7, rdn # perform operation
fnmadd.s f18, f25, f17, f7, rmm # perform operation
fnmadd.s f18, f25, f17, f7, rne # perform operation
fnmadd.s f18, f25, f17, f7, rtz # perform operation
fnmadd.s f18, f25, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f25, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f25, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f25, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f25, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f25, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x45d77f674116e1f # load x3 with value 0x45d77f674116e1f
sw x3, 0(x2) # store 0x45d77f674116e1f in memory
flw f22, 0(x2) # load 0x45d77f674116e1f from memory into f22
fnmadd.s f6, f19, f21, f22, dyn # perform operation
fnmadd.s f6, f19, f21, f22, rdn # perform operation
fnmadd.s f6, f19, f21, f22, rmm # perform operation
fnmadd.s f6, f19, f21, f22, rne # perform operation
fnmadd.s f6, f19, f21, f22, rtz # perform operation
fnmadd.s f6, f19, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f19, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0xe3d2f40a5707e7ac # load x3 with value 0xe3d2f40a5707e7ac
sw x3, 0(x2) # store 0xe3d2f40a5707e7ac in memory
flw f1, 0(x2) # load 0xe3d2f40a5707e7ac from memory into f1
fnmadd.s f3, f2, f5, f1, dyn # perform operation
fnmadd.s f3, f2, f5, f1, rdn # perform operation
fnmadd.s f3, f2, f5, f1, rmm # perform operation
fnmadd.s f3, f2, f5, f1, rne # perform operation
fnmadd.s f3, f2, f5, f1, rtz # perform operation
fnmadd.s f3, f2, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f2, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xd036f05b9e47f01c # load x3 with value 0xd036f05b9e47f01c
sw x3, 0(x2) # store 0xd036f05b9e47f01c in memory
flw f25, 0(x2) # load 0xd036f05b9e47f01c from memory into f25
fnmadd.s f14, f20, f29, f25, dyn # perform operation
fnmadd.s f14, f20, f29, f25, rdn # perform operation
fnmadd.s f14, f20, f29, f25, rmm # perform operation
fnmadd.s f14, f20, f29, f25, rne # perform operation
fnmadd.s f14, f20, f29, f25, rtz # perform operation
fnmadd.s f14, f20, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f29, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x7e3bd2c6d36ffca3 # load x3 with value 0x7e3bd2c6d36ffca3
sw x3, 0(x2) # store 0x7e3bd2c6d36ffca3 in memory
flw f24, 0(x2) # load 0x7e3bd2c6d36ffca3 from memory into f24
fnmadd.s f17, f9, f21, f24, dyn # perform operation
fnmadd.s f17, f9, f21, f24, rdn # perform operation
fnmadd.s f17, f9, f21, f24, rmm # perform operation
fnmadd.s f17, f9, f21, f24, rne # perform operation
fnmadd.s f17, f9, f21, f24, rtz # perform operation
fnmadd.s f17, f9, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xf45ceda78d4e945a # load x3 with value 0xf45ceda78d4e945a
sw x3, 0(x2) # store 0xf45ceda78d4e945a in memory
flw f30, 0(x2) # load 0xf45ceda78d4e945a from memory into f30
fnmadd.s f25, f22, f13, f30, dyn # perform operation
fnmadd.s f25, f22, f13, f30, rdn # perform operation
fnmadd.s f25, f22, f13, f30, rmm # perform operation
fnmadd.s f25, f22, f13, f30, rne # perform operation
fnmadd.s f25, f22, f13, f30, rtz # perform operation
fnmadd.s f25, f22, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x84f143b6efec2941 # load x3 with value 0x84f143b6efec2941
sw x3, 0(x2) # store 0x84f143b6efec2941 in memory
flw f23, 0(x2) # load 0x84f143b6efec2941 from memory into f23
fnmadd.s f14, f30, f21, f23, dyn # perform operation
fnmadd.s f14, f30, f21, f23, rdn # perform operation
fnmadd.s f14, f30, f21, f23, rmm # perform operation
fnmadd.s f14, f30, f21, f23, rne # perform operation
fnmadd.s f14, f30, f21, f23, rtz # perform operation
fnmadd.s f14, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xd4d9b95c943a0791 # load x3 with value 0xd4d9b95c943a0791
sw x3, 0(x2) # store 0xd4d9b95c943a0791 in memory
flw f1, 0(x2) # load 0xd4d9b95c943a0791 from memory into f1
fnmadd.s f21, f14, f27, f1, dyn # perform operation
fnmadd.s f21, f14, f27, f1, rdn # perform operation
fnmadd.s f21, f14, f27, f1, rmm # perform operation
fnmadd.s f21, f14, f27, f1, rne # perform operation
fnmadd.s f21, f14, f27, f1, rtz # perform operation
fnmadd.s f21, f14, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xdc46fad9a82e511b # load x3 with value 0xdc46fad9a82e511b
sw x3, 0(x2) # store 0xdc46fad9a82e511b in memory
flw f17, 0(x2) # load 0xdc46fad9a82e511b from memory into f17
fnmadd.s f15, f23, f7, f17, dyn # perform operation
fnmadd.s f15, f23, f7, f17, rdn # perform operation
fnmadd.s f15, f23, f7, f17, rmm # perform operation
fnmadd.s f15, f23, f7, f17, rne # perform operation
fnmadd.s f15, f23, f7, f17, rtz # perform operation
fnmadd.s f15, f23, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f23, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xbcdd82b798fe28ca # load x3 with value 0xbcdd82b798fe28ca
sw x3, 0(x2) # store 0xbcdd82b798fe28ca in memory
flw f11, 0(x2) # load 0xbcdd82b798fe28ca from memory into f11
fnmadd.s f14, f13, f18, f11, dyn # perform operation
fnmadd.s f14, f13, f18, f11, rdn # perform operation
fnmadd.s f14, f13, f18, f11, rmm # perform operation
fnmadd.s f14, f13, f18, f11, rne # perform operation
fnmadd.s f14, f13, f18, f11, rtz # perform operation
fnmadd.s f14, f13, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x4db0220b4a49cbd3 # load x3 with value 0x4db0220b4a49cbd3
sw x3, 0(x2) # store 0x4db0220b4a49cbd3 in memory
flw f27, 0(x2) # load 0x4db0220b4a49cbd3 from memory into f27
fnmadd.s f20, f6, f31, f27, dyn # perform operation
fnmadd.s f20, f6, f31, f27, rdn # perform operation
fnmadd.s f20, f6, f31, f27, rmm # perform operation
fnmadd.s f20, f6, f31, f27, rne # perform operation
fnmadd.s f20, f6, f31, f27, rtz # perform operation
fnmadd.s f20, f6, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xdf8f0938ace8a3f5 # load x3 with value 0xdf8f0938ace8a3f5
sw x3, 0(x2) # store 0xdf8f0938ace8a3f5 in memory
flw f28, 0(x2) # load 0xdf8f0938ace8a3f5 from memory into f28
fnmadd.s f1, f18, f11, f28, dyn # perform operation
fnmadd.s f1, f18, f11, f28, rdn # perform operation
fnmadd.s f1, f18, f11, f28, rmm # perform operation
fnmadd.s f1, f18, f11, f28, rne # perform operation
fnmadd.s f1, f18, f11, f28, rtz # perform operation
fnmadd.s f1, f18, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x1118e0b0d10988b2 # load x3 with value 0x1118e0b0d10988b2
sw x3, 0(x2) # store 0x1118e0b0d10988b2 in memory
flw f11, 0(x2) # load 0x1118e0b0d10988b2 from memory into f11
fnmadd.s f23, f24, f15, f11, dyn # perform operation
fnmadd.s f23, f24, f15, f11, rdn # perform operation
fnmadd.s f23, f24, f15, f11, rmm # perform operation
fnmadd.s f23, f24, f15, f11, rne # perform operation
fnmadd.s f23, f24, f15, f11, rtz # perform operation
fnmadd.s f23, f24, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f24, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f24, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xc3a7da2efb51ed7e # load x3 with value 0xc3a7da2efb51ed7e
sw x3, 0(x2) # store 0xc3a7da2efb51ed7e in memory
flw f6, 0(x2) # load 0xc3a7da2efb51ed7e from memory into f6
fnmadd.s f30, f12, f24, f6, dyn # perform operation
fnmadd.s f30, f12, f24, f6, rdn # perform operation
fnmadd.s f30, f12, f24, f6, rmm # perform operation
fnmadd.s f30, f12, f24, f6, rne # perform operation
fnmadd.s f30, f12, f24, f6, rtz # perform operation
fnmadd.s f30, f12, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x2f62caea499511bc # load x3 with value 0x2f62caea499511bc
sw x3, 0(x2) # store 0x2f62caea499511bc in memory
flw f24, 0(x2) # load 0x2f62caea499511bc from memory into f24
fnmadd.s f26, f7, f27, f24, dyn # perform operation
fnmadd.s f26, f7, f27, f24, rdn # perform operation
fnmadd.s f26, f7, f27, f24, rmm # perform operation
fnmadd.s f26, f7, f27, f24, rne # perform operation
fnmadd.s f26, f7, f27, f24, rtz # perform operation
fnmadd.s f26, f7, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x783997aeed62e799 # load x3 with value 0x783997aeed62e799
sw x3, 0(x2) # store 0x783997aeed62e799 in memory
flw f26, 0(x2) # load 0x783997aeed62e799 from memory into f26
fnmadd.s f21, f16, f3, f26, dyn # perform operation
fnmadd.s f21, f16, f3, f26, rdn # perform operation
fnmadd.s f21, f16, f3, f26, rmm # perform operation
fnmadd.s f21, f16, f3, f26, rne # perform operation
fnmadd.s f21, f16, f3, f26, rtz # perform operation
fnmadd.s f21, f16, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xeef619f7b267619a # load x3 with value 0xeef619f7b267619a
sw x3, 0(x2) # store 0xeef619f7b267619a in memory
flw f14, 0(x2) # load 0xeef619f7b267619a from memory into f14
fnmadd.s f28, f7, f8, f14, dyn # perform operation
fnmadd.s f28, f7, f8, f14, rdn # perform operation
fnmadd.s f28, f7, f8, f14, rmm # perform operation
fnmadd.s f28, f7, f8, f14, rne # perform operation
fnmadd.s f28, f7, f8, f14, rtz # perform operation
fnmadd.s f28, f7, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x231600b30289daf8 # load x3 with value 0x231600b30289daf8
sw x3, 0(x2) # store 0x231600b30289daf8 in memory
flw f11, 0(x2) # load 0x231600b30289daf8 from memory into f11
fnmadd.s f23, f12, f15, f11, dyn # perform operation
fnmadd.s f23, f12, f15, f11, rdn # perform operation
fnmadd.s f23, f12, f15, f11, rmm # perform operation
fnmadd.s f23, f12, f15, f11, rne # perform operation
fnmadd.s f23, f12, f15, f11, rtz # perform operation
fnmadd.s f23, f12, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f12, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f12, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f12, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f12, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f12, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xcecf97860e4eada7 # load x3 with value 0xcecf97860e4eada7
sw x3, 0(x2) # store 0xcecf97860e4eada7 in memory
flw f21, 0(x2) # load 0xcecf97860e4eada7 from memory into f21
fnmadd.s f7, f15, f22, f21, dyn # perform operation
fnmadd.s f7, f15, f22, f21, rdn # perform operation
fnmadd.s f7, f15, f22, f21, rmm # perform operation
fnmadd.s f7, f15, f22, f21, rne # perform operation
fnmadd.s f7, f15, f22, f21, rtz # perform operation
fnmadd.s f7, f15, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0xe95e32e7fb5b64d # load x3 with value 0xe95e32e7fb5b64d
sw x3, 0(x2) # store 0xe95e32e7fb5b64d in memory
flw f27, 0(x2) # load 0xe95e32e7fb5b64d from memory into f27
fnmadd.s f29, f23, f3, f27, dyn # perform operation
fnmadd.s f29, f23, f3, f27, rdn # perform operation
fnmadd.s f29, f23, f3, f27, rmm # perform operation
fnmadd.s f29, f23, f3, f27, rne # perform operation
fnmadd.s f29, f23, f3, f27, rtz # perform operation
fnmadd.s f29, f23, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x333535c0a0ae83e9 # load x3 with value 0x333535c0a0ae83e9
sw x3, 0(x2) # store 0x333535c0a0ae83e9 in memory
flw f1, 0(x2) # load 0x333535c0a0ae83e9 from memory into f1
fnmadd.s f5, f25, f9, f1, dyn # perform operation
fnmadd.s f5, f25, f9, f1, rdn # perform operation
fnmadd.s f5, f25, f9, f1, rmm # perform operation
fnmadd.s f5, f25, f9, f1, rne # perform operation
fnmadd.s f5, f25, f9, f1, rtz # perform operation
fnmadd.s f5, f25, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xa1571ddff4d5c8dc # load x3 with value 0xa1571ddff4d5c8dc
sw x3, 0(x2) # store 0xa1571ddff4d5c8dc in memory
flw f19, 0(x2) # load 0xa1571ddff4d5c8dc from memory into f19
fnmadd.s f21, f22, f23, f19, dyn # perform operation
fnmadd.s f21, f22, f23, f19, rdn # perform operation
fnmadd.s f21, f22, f23, f19, rmm # perform operation
fnmadd.s f21, f22, f23, f19, rne # perform operation
fnmadd.s f21, f22, f23, f19, rtz # perform operation
fnmadd.s f21, f22, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0xcbbaa5d6885ff744 # load x3 with value 0xcbbaa5d6885ff744
sw x3, 0(x2) # store 0xcbbaa5d6885ff744 in memory
flw f11, 0(x2) # load 0xcbbaa5d6885ff744 from memory into f11
fnmadd.s f31, f23, f15, f11, dyn # perform operation
fnmadd.s f31, f23, f15, f11, rdn # perform operation
fnmadd.s f31, f23, f15, f11, rmm # perform operation
fnmadd.s f31, f23, f15, f11, rne # perform operation
fnmadd.s f31, f23, f15, f11, rtz # perform operation
fnmadd.s f31, f23, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f23, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xcf847902c69c82e4 # load x3 with value 0xcf847902c69c82e4
sw x3, 0(x2) # store 0xcf847902c69c82e4 in memory
flw f23, 0(x2) # load 0xcf847902c69c82e4 from memory into f23
fnmadd.s f11, f12, f3, f23, dyn # perform operation
fnmadd.s f11, f12, f3, f23, rdn # perform operation
fnmadd.s f11, f12, f3, f23, rmm # perform operation
fnmadd.s f11, f12, f3, f23, rne # perform operation
fnmadd.s f11, f12, f3, f23, rtz # perform operation
fnmadd.s f11, f12, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x9eed04b0037398a # load x3 with value 0x9eed04b0037398a
sw x3, 0(x2) # store 0x9eed04b0037398a in memory
flw f14, 0(x2) # load 0x9eed04b0037398a from memory into f14
fnmadd.s f27, f20, f19, f14, dyn # perform operation
fnmadd.s f27, f20, f19, f14, rdn # perform operation
fnmadd.s f27, f20, f19, f14, rmm # perform operation
fnmadd.s f27, f20, f19, f14, rne # perform operation
fnmadd.s f27, f20, f19, f14, rtz # perform operation
fnmadd.s f27, f20, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x9e4f9bbd7952fc72 # load x3 with value 0x9e4f9bbd7952fc72
sw x3, 0(x2) # store 0x9e4f9bbd7952fc72 in memory
flw f6, 0(x2) # load 0x9e4f9bbd7952fc72 from memory into f6
fnmadd.s f11, f28, f23, f6, dyn # perform operation
fnmadd.s f11, f28, f23, f6, rdn # perform operation
fnmadd.s f11, f28, f23, f6, rmm # perform operation
fnmadd.s f11, f28, f23, f6, rne # perform operation
fnmadd.s f11, f28, f23, f6, rtz # perform operation
fnmadd.s f11, f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x3eec68f23f5167c8 # load x3 with value 0x3eec68f23f5167c8
sw x3, 0(x2) # store 0x3eec68f23f5167c8 in memory
flw f6, 0(x2) # load 0x3eec68f23f5167c8 from memory into f6
fnmadd.s f27, f15, f28, f6, dyn # perform operation
fnmadd.s f27, f15, f28, f6, rdn # perform operation
fnmadd.s f27, f15, f28, f6, rmm # perform operation
fnmadd.s f27, f15, f28, f6, rne # perform operation
fnmadd.s f27, f15, f28, f6, rtz # perform operation
fnmadd.s f27, f15, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x499add269b9e6d0 # load x3 with value 0x499add269b9e6d0
sw x3, 0(x2) # store 0x499add269b9e6d0 in memory
flw f23, 0(x2) # load 0x499add269b9e6d0 from memory into f23
fnmadd.s f6, f18, f31, f23, dyn # perform operation
fnmadd.s f6, f18, f31, f23, rdn # perform operation
fnmadd.s f6, f18, f31, f23, rmm # perform operation
fnmadd.s f6, f18, f31, f23, rne # perform operation
fnmadd.s f6, f18, f31, f23, rtz # perform operation
fnmadd.s f6, f18, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f18, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x7cbe53613aec33c2 # load x3 with value 0x7cbe53613aec33c2
sw x3, 0(x2) # store 0x7cbe53613aec33c2 in memory
flw f29, 0(x2) # load 0x7cbe53613aec33c2 from memory into f29
fnmadd.s f25, f7, f20, f29, dyn # perform operation
fnmadd.s f25, f7, f20, f29, rdn # perform operation
fnmadd.s f25, f7, f20, f29, rmm # perform operation
fnmadd.s f25, f7, f20, f29, rne # perform operation
fnmadd.s f25, f7, f20, f29, rtz # perform operation
fnmadd.s f25, f7, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f7, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x6f0c0f5fc153ea99 # load x3 with value 0x6f0c0f5fc153ea99
sw x3, 0(x2) # store 0x6f0c0f5fc153ea99 in memory
flw f20, 0(x2) # load 0x6f0c0f5fc153ea99 from memory into f20
fnmadd.s f3, f16, f27, f20, dyn # perform operation
fnmadd.s f3, f16, f27, f20, rdn # perform operation
fnmadd.s f3, f16, f27, f20, rmm # perform operation
fnmadd.s f3, f16, f27, f20, rne # perform operation
fnmadd.s f3, f16, f27, f20, rtz # perform operation
fnmadd.s f3, f16, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x4e116956582a6ed8 # load x3 with value 0x4e116956582a6ed8
sw x3, 0(x2) # store 0x4e116956582a6ed8 in memory
flw f29, 0(x2) # load 0x4e116956582a6ed8 from memory into f29
fnmadd.s f11, f15, f16, f29, dyn # perform operation
fnmadd.s f11, f15, f16, f29, rdn # perform operation
fnmadd.s f11, f15, f16, f29, rmm # perform operation
fnmadd.s f11, f15, f16, f29, rne # perform operation
fnmadd.s f11, f15, f16, f29, rtz # perform operation
fnmadd.s f11, f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xb0eb66f129748fda # load x3 with value 0xb0eb66f129748fda
sw x3, 0(x2) # store 0xb0eb66f129748fda in memory
flw f7, 0(x2) # load 0xb0eb66f129748fda from memory into f7
fnmadd.s f21, f17, f14, f7, dyn # perform operation
fnmadd.s f21, f17, f14, f7, rdn # perform operation
fnmadd.s f21, f17, f14, f7, rmm # perform operation
fnmadd.s f21, f17, f14, f7, rne # perform operation
fnmadd.s f21, f17, f14, f7, rtz # perform operation
fnmadd.s f21, f17, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x2d6032cc18b3e97d # load x3 with value 0x2d6032cc18b3e97d
sw x3, 0(x2) # store 0x2d6032cc18b3e97d in memory
flw f29, 0(x2) # load 0x2d6032cc18b3e97d from memory into f29
fnmadd.s f14, f15, f1, f29, dyn # perform operation
fnmadd.s f14, f15, f1, f29, rdn # perform operation
fnmadd.s f14, f15, f1, f29, rmm # perform operation
fnmadd.s f14, f15, f1, f29, rne # perform operation
fnmadd.s f14, f15, f1, f29, rtz # perform operation
fnmadd.s f14, f15, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0xa3e3eddc84117362 # load x3 with value 0xa3e3eddc84117362
sw x3, 0(x2) # store 0xa3e3eddc84117362 in memory
flw f2, 0(x2) # load 0xa3e3eddc84117362 from memory into f2
fnmadd.s f5, f8, f27, f2, dyn # perform operation
fnmadd.s f5, f8, f27, f2, rdn # perform operation
fnmadd.s f5, f8, f27, f2, rmm # perform operation
fnmadd.s f5, f8, f27, f2, rne # perform operation
fnmadd.s f5, f8, f27, f2, rtz # perform operation
fnmadd.s f5, f8, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xeefc81de3207f30b # load x3 with value 0xeefc81de3207f30b
sw x3, 0(x2) # store 0xeefc81de3207f30b in memory
flw f12, 0(x2) # load 0xeefc81de3207f30b from memory into f12
fnmadd.s f21, f23, f29, f12, dyn # perform operation
fnmadd.s f21, f23, f29, f12, rdn # perform operation
fnmadd.s f21, f23, f29, f12, rmm # perform operation
fnmadd.s f21, f23, f29, f12, rne # perform operation
fnmadd.s f21, f23, f29, f12, rtz # perform operation
fnmadd.s f21, f23, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xaef3d89d94152c6e # load x3 with value 0xaef3d89d94152c6e
sw x3, 0(x2) # store 0xaef3d89d94152c6e in memory
flw f7, 0(x2) # load 0xaef3d89d94152c6e from memory into f7
fnmadd.s f17, f25, f3, f7, dyn # perform operation
fnmadd.s f17, f25, f3, f7, rdn # perform operation
fnmadd.s f17, f25, f3, f7, rmm # perform operation
fnmadd.s f17, f25, f3, f7, rne # perform operation
fnmadd.s f17, f25, f3, f7, rtz # perform operation
fnmadd.s f17, f25, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x330869e57ac0bad5 # load x3 with value 0x330869e57ac0bad5
sw x3, 0(x2) # store 0x330869e57ac0bad5 in memory
flw f21, 0(x2) # load 0x330869e57ac0bad5 from memory into f21
fnmadd.s f25, f30, f10, f21, dyn # perform operation
fnmadd.s f25, f30, f10, f21, rdn # perform operation
fnmadd.s f25, f30, f10, f21, rmm # perform operation
fnmadd.s f25, f30, f10, f21, rne # perform operation
fnmadd.s f25, f30, f10, f21, rtz # perform operation
fnmadd.s f25, f30, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x7b9067e59ed34634 # load x3 with value 0x7b9067e59ed34634
sw x3, 0(x2) # store 0x7b9067e59ed34634 in memory
flw f31, 0(x2) # load 0x7b9067e59ed34634 from memory into f31
fnmadd.s f12, f18, f13, f31, dyn # perform operation
fnmadd.s f12, f18, f13, f31, rdn # perform operation
fnmadd.s f12, f18, f13, f31, rmm # perform operation
fnmadd.s f12, f18, f13, f31, rne # perform operation
fnmadd.s f12, f18, f13, f31, rtz # perform operation
fnmadd.s f12, f18, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f18, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f18, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f18, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f18, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f18, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x92fbfc64e73c39ef # load x3 with value 0x92fbfc64e73c39ef
sw x3, 0(x2) # store 0x92fbfc64e73c39ef in memory
flw f6, 0(x2) # load 0x92fbfc64e73c39ef from memory into f6
fnmadd.s f31, f15, f7, f6, dyn # perform operation
fnmadd.s f31, f15, f7, f6, rdn # perform operation
fnmadd.s f31, f15, f7, f6, rmm # perform operation
fnmadd.s f31, f15, f7, f6, rne # perform operation
fnmadd.s f31, f15, f7, f6, rtz # perform operation
fnmadd.s f31, f15, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xeaa52658d6a6853e # load x3 with value 0xeaa52658d6a6853e
sw x3, 0(x2) # store 0xeaa52658d6a6853e in memory
flw f26, 0(x2) # load 0xeaa52658d6a6853e from memory into f26
fnmadd.s f16, f31, f28, f26, dyn # perform operation
fnmadd.s f16, f31, f28, f26, rdn # perform operation
fnmadd.s f16, f31, f28, f26, rmm # perform operation
fnmadd.s f16, f31, f28, f26, rne # perform operation
fnmadd.s f16, f31, f28, f26, rtz # perform operation
fnmadd.s f16, f31, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f31, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xa0be2662c3e8fedb # load x3 with value 0xa0be2662c3e8fedb
sw x3, 0(x2) # store 0xa0be2662c3e8fedb in memory
flw f16, 0(x2) # load 0xa0be2662c3e8fedb from memory into f16
fnmadd.s f2, f22, f6, f16, dyn # perform operation
fnmadd.s f2, f22, f6, f16, rdn # perform operation
fnmadd.s f2, f22, f6, f16, rmm # perform operation
fnmadd.s f2, f22, f6, f16, rne # perform operation
fnmadd.s f2, f22, f6, f16, rtz # perform operation
fnmadd.s f2, f22, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xaeb0f46b8aec43bb # load x3 with value 0xaeb0f46b8aec43bb
sw x3, 0(x2) # store 0xaeb0f46b8aec43bb in memory
flw f12, 0(x2) # load 0xaeb0f46b8aec43bb from memory into f12
fnmadd.s f30, f9, f24, f12, dyn # perform operation
fnmadd.s f30, f9, f24, f12, rdn # perform operation
fnmadd.s f30, f9, f24, f12, rmm # perform operation
fnmadd.s f30, f9, f24, f12, rne # perform operation
fnmadd.s f30, f9, f24, f12, rtz # perform operation
fnmadd.s f30, f9, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xffc40c1da021107e # load x3 with value 0xffc40c1da021107e
sw x3, 0(x2) # store 0xffc40c1da021107e in memory
flw f1, 0(x2) # load 0xffc40c1da021107e from memory into f1
fnmadd.s f26, f29, f25, f1, dyn # perform operation
fnmadd.s f26, f29, f25, f1, rdn # perform operation
fnmadd.s f26, f29, f25, f1, rmm # perform operation
fnmadd.s f26, f29, f25, f1, rne # perform operation
fnmadd.s f26, f29, f25, f1, rtz # perform operation
fnmadd.s f26, f29, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xf247173ef19e0800 # load x3 with value 0xf247173ef19e0800
sw x3, 0(x2) # store 0xf247173ef19e0800 in memory
flw f23, 0(x2) # load 0xf247173ef19e0800 from memory into f23
fnmadd.s f19, f11, f26, f23, dyn # perform operation
fnmadd.s f19, f11, f26, f23, rdn # perform operation
fnmadd.s f19, f11, f26, f23, rmm # perform operation
fnmadd.s f19, f11, f26, f23, rne # perform operation
fnmadd.s f19, f11, f26, f23, rtz # perform operation
fnmadd.s f19, f11, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x6a6461222f945ece # load x3 with value 0x6a6461222f945ece
sw x3, 0(x2) # store 0x6a6461222f945ece in memory
flw f16, 0(x2) # load 0x6a6461222f945ece from memory into f16
fnmadd.s f8, f21, f9, f16, dyn # perform operation
fnmadd.s f8, f21, f9, f16, rdn # perform operation
fnmadd.s f8, f21, f9, f16, rmm # perform operation
fnmadd.s f8, f21, f9, f16, rne # perform operation
fnmadd.s f8, f21, f9, f16, rtz # perform operation
fnmadd.s f8, f21, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f21, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x469b78238f711fc2 # load x3 with value 0x469b78238f711fc2
sw x3, 0(x2) # store 0x469b78238f711fc2 in memory
flw f21, 0(x2) # load 0x469b78238f711fc2 from memory into f21
fnmadd.s f15, f29, f28, f21, dyn # perform operation
fnmadd.s f15, f29, f28, f21, rdn # perform operation
fnmadd.s f15, f29, f28, f21, rmm # perform operation
fnmadd.s f15, f29, f28, f21, rne # perform operation
fnmadd.s f15, f29, f28, f21, rtz # perform operation
fnmadd.s f15, f29, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x9ad1093376438c14 # load x3 with value 0x9ad1093376438c14
sw x3, 0(x2) # store 0x9ad1093376438c14 in memory
flw f9, 0(x2) # load 0x9ad1093376438c14 from memory into f9
fnmadd.s f20, f19, f1, f9, dyn # perform operation
fnmadd.s f20, f19, f1, f9, rdn # perform operation
fnmadd.s f20, f19, f1, f9, rmm # perform operation
fnmadd.s f20, f19, f1, f9, rne # perform operation
fnmadd.s f20, f19, f1, f9, rtz # perform operation
fnmadd.s f20, f19, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xc1ec924a80a8ba10 # load x3 with value 0xc1ec924a80a8ba10
sw x3, 0(x2) # store 0xc1ec924a80a8ba10 in memory
flw f30, 0(x2) # load 0xc1ec924a80a8ba10 from memory into f30
fnmadd.s f22, f24, f13, f30, dyn # perform operation
fnmadd.s f22, f24, f13, f30, rdn # perform operation
fnmadd.s f22, f24, f13, f30, rmm # perform operation
fnmadd.s f22, f24, f13, f30, rne # perform operation
fnmadd.s f22, f24, f13, f30, rtz # perform operation
fnmadd.s f22, f24, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x85caa2d0da37df5b # load x3 with value 0x85caa2d0da37df5b
sw x3, 0(x2) # store 0x85caa2d0da37df5b in memory
flw f3, 0(x2) # load 0x85caa2d0da37df5b from memory into f3
fnmadd.s f2, f10, f8, f3, dyn # perform operation
fnmadd.s f2, f10, f8, f3, rdn # perform operation
fnmadd.s f2, f10, f8, f3, rmm # perform operation
fnmadd.s f2, f10, f8, f3, rne # perform operation
fnmadd.s f2, f10, f8, f3, rtz # perform operation
fnmadd.s f2, f10, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xce7160574e4c93c1 # load x3 with value 0xce7160574e4c93c1
sw x3, 0(x2) # store 0xce7160574e4c93c1 in memory
flw f31, 0(x2) # load 0xce7160574e4c93c1 from memory into f31
fnmadd.s f7, f29, f28, f31, dyn # perform operation
fnmadd.s f7, f29, f28, f31, rdn # perform operation
fnmadd.s f7, f29, f28, f31, rmm # perform operation
fnmadd.s f7, f29, f28, f31, rne # perform operation
fnmadd.s f7, f29, f28, f31, rtz # perform operation
fnmadd.s f7, f29, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f29, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x2c5d01e927072eb8 # load x3 with value 0x2c5d01e927072eb8
sw x3, 0(x2) # store 0x2c5d01e927072eb8 in memory
flw f22, 0(x2) # load 0x2c5d01e927072eb8 from memory into f22
fnmadd.s f5, f27, f2, f22, dyn # perform operation
fnmadd.s f5, f27, f2, f22, rdn # perform operation
fnmadd.s f5, f27, f2, f22, rmm # perform operation
fnmadd.s f5, f27, f2, f22, rne # perform operation
fnmadd.s f5, f27, f2, f22, rtz # perform operation
fnmadd.s f5, f27, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x7318feda90191fff # load x3 with value 0x7318feda90191fff
sw x3, 0(x2) # store 0x7318feda90191fff in memory
flw f5, 0(x2) # load 0x7318feda90191fff from memory into f5
fnmadd.s f12, f6, f24, f5, dyn # perform operation
fnmadd.s f12, f6, f24, f5, rdn # perform operation
fnmadd.s f12, f6, f24, f5, rmm # perform operation
fnmadd.s f12, f6, f24, f5, rne # perform operation
fnmadd.s f12, f6, f24, f5, rtz # perform operation
fnmadd.s f12, f6, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xb88ad552aad257e0 # load x3 with value 0xb88ad552aad257e0
sw x3, 0(x2) # store 0xb88ad552aad257e0 in memory
flw f21, 0(x2) # load 0xb88ad552aad257e0 from memory into f21
fnmadd.s f3, f22, f20, f21, dyn # perform operation
fnmadd.s f3, f22, f20, f21, rdn # perform operation
fnmadd.s f3, f22, f20, f21, rmm # perform operation
fnmadd.s f3, f22, f20, f21, rne # perform operation
fnmadd.s f3, f22, f20, f21, rtz # perform operation
fnmadd.s f3, f22, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x239cf296e17d9af2 # load x3 with value 0x239cf296e17d9af2
sw x3, 0(x2) # store 0x239cf296e17d9af2 in memory
flw f31, 0(x2) # load 0x239cf296e17d9af2 from memory into f31
fnmadd.s f18, f9, f12, f31, dyn # perform operation
fnmadd.s f18, f9, f12, f31, rdn # perform operation
fnmadd.s f18, f9, f12, f31, rmm # perform operation
fnmadd.s f18, f9, f12, f31, rne # perform operation
fnmadd.s f18, f9, f12, f31, rtz # perform operation
fnmadd.s f18, f9, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f9, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x36757d8f4b40f375 # load x3 with value 0x36757d8f4b40f375
sw x3, 0(x2) # store 0x36757d8f4b40f375 in memory
flw f12, 0(x2) # load 0x36757d8f4b40f375 from memory into f12
fnmadd.s f2, f6, f21, f12, dyn # perform operation
fnmadd.s f2, f6, f21, f12, rdn # perform operation
fnmadd.s f2, f6, f21, f12, rmm # perform operation
fnmadd.s f2, f6, f21, f12, rne # perform operation
fnmadd.s f2, f6, f21, f12, rtz # perform operation
fnmadd.s f2, f6, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x6a0ae7e9f17cbaca # load x3 with value 0x6a0ae7e9f17cbaca
sw x3, 0(x2) # store 0x6a0ae7e9f17cbaca in memory
flw f18, 0(x2) # load 0x6a0ae7e9f17cbaca from memory into f18
fnmadd.s f15, f31, f14, f18, dyn # perform operation
fnmadd.s f15, f31, f14, f18, rdn # perform operation
fnmadd.s f15, f31, f14, f18, rmm # perform operation
fnmadd.s f15, f31, f14, f18, rne # perform operation
fnmadd.s f15, f31, f14, f18, rtz # perform operation
fnmadd.s f15, f31, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f31, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f31, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f31, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f31, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f31, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xef59c5c4960403 # load x3 with value 0xef59c5c4960403
sw x3, 0(x2) # store 0xef59c5c4960403 in memory
flw f21, 0(x2) # load 0xef59c5c4960403 from memory into f21
fnmadd.s f18, f12, f31, f21, dyn # perform operation
fnmadd.s f18, f12, f31, f21, rdn # perform operation
fnmadd.s f18, f12, f31, f21, rmm # perform operation
fnmadd.s f18, f12, f31, f21, rne # perform operation
fnmadd.s f18, f12, f31, f21, rtz # perform operation
fnmadd.s f18, f12, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xc329a99b09895196 # load x3 with value 0xc329a99b09895196
sw x3, 0(x2) # store 0xc329a99b09895196 in memory
flw f26, 0(x2) # load 0xc329a99b09895196 from memory into f26
fnmadd.s f5, f2, f1, f26, dyn # perform operation
fnmadd.s f5, f2, f1, f26, rdn # perform operation
fnmadd.s f5, f2, f1, f26, rmm # perform operation
fnmadd.s f5, f2, f1, f26, rne # perform operation
fnmadd.s f5, f2, f1, f26, rtz # perform operation
fnmadd.s f5, f2, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x5fd2c790a25469d1 # load x3 with value 0x5fd2c790a25469d1
sw x3, 0(x2) # store 0x5fd2c790a25469d1 in memory
flw f22, 0(x2) # load 0x5fd2c790a25469d1 from memory into f22
fnmadd.s f3, f20, f10, f22, dyn # perform operation
fnmadd.s f3, f20, f10, f22, rdn # perform operation
fnmadd.s f3, f20, f10, f22, rmm # perform operation
fnmadd.s f3, f20, f10, f22, rne # perform operation
fnmadd.s f3, f20, f10, f22, rtz # perform operation
fnmadd.s f3, f20, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f20, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x402fe470cd8a186b # load x3 with value 0x402fe470cd8a186b
sw x3, 0(x2) # store 0x402fe470cd8a186b in memory
flw f11, 0(x2) # load 0x402fe470cd8a186b from memory into f11
fnmadd.s f7, f15, f24, f11, dyn # perform operation
fnmadd.s f7, f15, f24, f11, rdn # perform operation
fnmadd.s f7, f15, f24, f11, rmm # perform operation
fnmadd.s f7, f15, f24, f11, rne # perform operation
fnmadd.s f7, f15, f24, f11, rtz # perform operation
fnmadd.s f7, f15, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0xbf1d003960bb3b21 # load x3 with value 0xbf1d003960bb3b21
sw x3, 0(x2) # store 0xbf1d003960bb3b21 in memory
flw f23, 0(x2) # load 0xbf1d003960bb3b21 from memory into f23
fnmadd.s f14, f24, f21, f23, dyn # perform operation
fnmadd.s f14, f24, f21, f23, rdn # perform operation
fnmadd.s f14, f24, f21, f23, rmm # perform operation
fnmadd.s f14, f24, f21, f23, rne # perform operation
fnmadd.s f14, f24, f21, f23, rtz # perform operation
fnmadd.s f14, f24, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xac15f261ef1df939 # load x3 with value 0xac15f261ef1df939
sw x3, 0(x2) # store 0xac15f261ef1df939 in memory
flw f8, 0(x2) # load 0xac15f261ef1df939 from memory into f8
fnmadd.s f29, f19, f2, f8, dyn # perform operation
fnmadd.s f29, f19, f2, f8, rdn # perform operation
fnmadd.s f29, f19, f2, f8, rmm # perform operation
fnmadd.s f29, f19, f2, f8, rne # perform operation
fnmadd.s f29, f19, f2, f8, rtz # perform operation
fnmadd.s f29, f19, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x3c8d9024500b0325 # load x3 with value 0x3c8d9024500b0325
sw x3, 0(x2) # store 0x3c8d9024500b0325 in memory
flw f5, 0(x2) # load 0x3c8d9024500b0325 from memory into f5
fnmadd.s f3, f23, f20, f5, dyn # perform operation
fnmadd.s f3, f23, f20, f5, rdn # perform operation
fnmadd.s f3, f23, f20, f5, rmm # perform operation
fnmadd.s f3, f23, f20, f5, rne # perform operation
fnmadd.s f3, f23, f20, f5, rtz # perform operation
fnmadd.s f3, f23, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xaea4aa40f8faa6ed # load x3 with value 0xaea4aa40f8faa6ed
sw x3, 0(x2) # store 0xaea4aa40f8faa6ed in memory
flw f25, 0(x2) # load 0xaea4aa40f8faa6ed from memory into f25
fnmadd.s f22, f17, f13, f25, dyn # perform operation
fnmadd.s f22, f17, f13, f25, rdn # perform operation
fnmadd.s f22, f17, f13, f25, rmm # perform operation
fnmadd.s f22, f17, f13, f25, rne # perform operation
fnmadd.s f22, f17, f13, f25, rtz # perform operation
fnmadd.s f22, f17, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xa607a890a333fe2b # load x3 with value 0xa607a890a333fe2b
sw x3, 0(x2) # store 0xa607a890a333fe2b in memory
flw f6, 0(x2) # load 0xa607a890a333fe2b from memory into f6
fnmadd.s f26, f31, f13, f6, dyn # perform operation
fnmadd.s f26, f31, f13, f6, rdn # perform operation
fnmadd.s f26, f31, f13, f6, rmm # perform operation
fnmadd.s f26, f31, f13, f6, rne # perform operation
fnmadd.s f26, f31, f13, f6, rtz # perform operation
fnmadd.s f26, f31, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x1a90e8cac53e22e1 # load x3 with value 0x1a90e8cac53e22e1
sw x3, 0(x2) # store 0x1a90e8cac53e22e1 in memory
flw f19, 0(x2) # load 0x1a90e8cac53e22e1 from memory into f19
fnmadd.s f31, f7, f11, f19, dyn # perform operation
fnmadd.s f31, f7, f11, f19, rdn # perform operation
fnmadd.s f31, f7, f11, f19, rmm # perform operation
fnmadd.s f31, f7, f11, f19, rne # perform operation
fnmadd.s f31, f7, f11, f19, rtz # perform operation
fnmadd.s f31, f7, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x662720738919290e # load x3 with value 0x662720738919290e
sw x3, 0(x2) # store 0x662720738919290e in memory
flw f23, 0(x2) # load 0x662720738919290e from memory into f23
fnmadd.s f24, f2, f7, f23, dyn # perform operation
fnmadd.s f24, f2, f7, f23, rdn # perform operation
fnmadd.s f24, f2, f7, f23, rmm # perform operation
fnmadd.s f24, f2, f7, f23, rne # perform operation
fnmadd.s f24, f2, f7, f23, rtz # perform operation
fnmadd.s f24, f2, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f2, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x62697f87d1131f9f # load x3 with value 0x62697f87d1131f9f
sw x3, 0(x2) # store 0x62697f87d1131f9f in memory
flw f31, 0(x2) # load 0x62697f87d1131f9f from memory into f31
fnmadd.s f24, f7, f28, f31, dyn # perform operation
fnmadd.s f24, f7, f28, f31, rdn # perform operation
fnmadd.s f24, f7, f28, f31, rmm # perform operation
fnmadd.s f24, f7, f28, f31, rne # perform operation
fnmadd.s f24, f7, f28, f31, rtz # perform operation
fnmadd.s f24, f7, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xe0636e2eb8c2ba9f # load x3 with value 0xe0636e2eb8c2ba9f
sw x3, 0(x2) # store 0xe0636e2eb8c2ba9f in memory
flw f8, 0(x2) # load 0xe0636e2eb8c2ba9f from memory into f8
fnmadd.s f15, f25, f12, f8, dyn # perform operation
fnmadd.s f15, f25, f12, f8, rdn # perform operation
fnmadd.s f15, f25, f12, f8, rmm # perform operation
fnmadd.s f15, f25, f12, f8, rne # perform operation
fnmadd.s f15, f25, f12, f8, rtz # perform operation
fnmadd.s f15, f25, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f25, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x11fd4867c0238b5b # load x3 with value 0x11fd4867c0238b5b
sw x3, 0(x2) # store 0x11fd4867c0238b5b in memory
flw f30, 0(x2) # load 0x11fd4867c0238b5b from memory into f30
fnmadd.s f14, f16, f28, f30, dyn # perform operation
fnmadd.s f14, f16, f28, f30, rdn # perform operation
fnmadd.s f14, f16, f28, f30, rmm # perform operation
fnmadd.s f14, f16, f28, f30, rne # perform operation
fnmadd.s f14, f16, f28, f30, rtz # perform operation
fnmadd.s f14, f16, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x1bf06ee367377b07 # load x3 with value 0x1bf06ee367377b07
sw x3, 0(x2) # store 0x1bf06ee367377b07 in memory
flw f5, 0(x2) # load 0x1bf06ee367377b07 from memory into f5
fnmadd.s f15, f16, f3, f5, dyn # perform operation
fnmadd.s f15, f16, f3, f5, rdn # perform operation
fnmadd.s f15, f16, f3, f5, rmm # perform operation
fnmadd.s f15, f16, f3, f5, rne # perform operation
fnmadd.s f15, f16, f3, f5, rtz # perform operation
fnmadd.s f15, f16, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f16, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x3b56256db5f4d059 # load x3 with value 0x3b56256db5f4d059
sw x3, 0(x2) # store 0x3b56256db5f4d059 in memory
flw f22, 0(x2) # load 0x3b56256db5f4d059 from memory into f22
fnmadd.s f24, f12, f16, f22, dyn # perform operation
fnmadd.s f24, f12, f16, f22, rdn # perform operation
fnmadd.s f24, f12, f16, f22, rmm # perform operation
fnmadd.s f24, f12, f16, f22, rne # perform operation
fnmadd.s f24, f12, f16, f22, rtz # perform operation
fnmadd.s f24, f12, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f12, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xf5bc802c5af287f6 # load x3 with value 0xf5bc802c5af287f6
sw x3, 0(x2) # store 0xf5bc802c5af287f6 in memory
flw f21, 0(x2) # load 0xf5bc802c5af287f6 from memory into f21
fnmadd.s f19, f20, f5, f21, dyn # perform operation
fnmadd.s f19, f20, f5, f21, rdn # perform operation
fnmadd.s f19, f20, f5, f21, rmm # perform operation
fnmadd.s f19, f20, f5, f21, rne # perform operation
fnmadd.s f19, f20, f5, f21, rtz # perform operation
fnmadd.s f19, f20, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xbc824c3be32c2a43 # load x3 with value 0xbc824c3be32c2a43
sw x3, 0(x2) # store 0xbc824c3be32c2a43 in memory
flw f21, 0(x2) # load 0xbc824c3be32c2a43 from memory into f21
fnmadd.s f2, f26, f23, f21, dyn # perform operation
fnmadd.s f2, f26, f23, f21, rdn # perform operation
fnmadd.s f2, f26, f23, f21, rmm # perform operation
fnmadd.s f2, f26, f23, f21, rne # perform operation
fnmadd.s f2, f26, f23, f21, rtz # perform operation
fnmadd.s f2, f26, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xad245801732dae8f # load x3 with value 0xad245801732dae8f
sw x3, 0(x2) # store 0xad245801732dae8f in memory
flw f22, 0(x2) # load 0xad245801732dae8f from memory into f22
fnmadd.s f26, f25, f29, f22, dyn # perform operation
fnmadd.s f26, f25, f29, f22, rdn # perform operation
fnmadd.s f26, f25, f29, f22, rmm # perform operation
fnmadd.s f26, f25, f29, f22, rne # perform operation
fnmadd.s f26, f25, f29, f22, rtz # perform operation
fnmadd.s f26, f25, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xa3fde19e88afa419 # load x3 with value 0xa3fde19e88afa419
sw x3, 0(x2) # store 0xa3fde19e88afa419 in memory
flw f5, 0(x2) # load 0xa3fde19e88afa419 from memory into f5
fnmadd.s f7, f11, f30, f5, dyn # perform operation
fnmadd.s f7, f11, f30, f5, rdn # perform operation
fnmadd.s f7, f11, f30, f5, rmm # perform operation
fnmadd.s f7, f11, f30, f5, rne # perform operation
fnmadd.s f7, f11, f30, f5, rtz # perform operation
fnmadd.s f7, f11, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x2412a53c38c60c8 # load x3 with value 0x2412a53c38c60c8
sw x3, 0(x2) # store 0x2412a53c38c60c8 in memory
flw f26, 0(x2) # load 0x2412a53c38c60c8 from memory into f26
fnmadd.s f1, f28, f9, f26, dyn # perform operation
fnmadd.s f1, f28, f9, f26, rdn # perform operation
fnmadd.s f1, f28, f9, f26, rmm # perform operation
fnmadd.s f1, f28, f9, f26, rne # perform operation
fnmadd.s f1, f28, f9, f26, rtz # perform operation
fnmadd.s f1, f28, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x78ed71b95b5c9b50 # load x3 with value 0x78ed71b95b5c9b50
sw x3, 0(x2) # store 0x78ed71b95b5c9b50 in memory
flw f3, 0(x2) # load 0x78ed71b95b5c9b50 from memory into f3
fnmadd.s f9, f16, f15, f3, dyn # perform operation
fnmadd.s f9, f16, f15, f3, rdn # perform operation
fnmadd.s f9, f16, f15, f3, rmm # perform operation
fnmadd.s f9, f16, f15, f3, rne # perform operation
fnmadd.s f9, f16, f15, f3, rtz # perform operation
fnmadd.s f9, f16, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xb3a2117fd2af66b2 # load x3 with value 0xb3a2117fd2af66b2
sw x3, 0(x2) # store 0xb3a2117fd2af66b2 in memory
flw f12, 0(x2) # load 0xb3a2117fd2af66b2 from memory into f12
fnmadd.s f27, f10, f8, f12, dyn # perform operation
fnmadd.s f27, f10, f8, f12, rdn # perform operation
fnmadd.s f27, f10, f8, f12, rmm # perform operation
fnmadd.s f27, f10, f8, f12, rne # perform operation
fnmadd.s f27, f10, f8, f12, rtz # perform operation
fnmadd.s f27, f10, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x844589d8bc31082c # load x3 with value 0x844589d8bc31082c
sw x3, 0(x2) # store 0x844589d8bc31082c in memory
flw f14, 0(x2) # load 0x844589d8bc31082c from memory into f14
fnmadd.s f12, f5, f9, f14, dyn # perform operation
fnmadd.s f12, f5, f9, f14, rdn # perform operation
fnmadd.s f12, f5, f9, f14, rmm # perform operation
fnmadd.s f12, f5, f9, f14, rne # perform operation
fnmadd.s f12, f5, f9, f14, rtz # perform operation
fnmadd.s f12, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xfd472981fd7a62db # load x3 with value 0xfd472981fd7a62db
sw x3, 0(x2) # store 0xfd472981fd7a62db in memory
flw f5, 0(x2) # load 0xfd472981fd7a62db from memory into f5
fnmadd.s f12, f16, f27, f5, dyn # perform operation
fnmadd.s f12, f16, f27, f5, rdn # perform operation
fnmadd.s f12, f16, f27, f5, rmm # perform operation
fnmadd.s f12, f16, f27, f5, rne # perform operation
fnmadd.s f12, f16, f27, f5, rtz # perform operation
fnmadd.s f12, f16, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f16, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xf82113f550de7612 # load x3 with value 0xf82113f550de7612
sw x3, 0(x2) # store 0xf82113f550de7612 in memory
flw f6, 0(x2) # load 0xf82113f550de7612 from memory into f6
fnmadd.s f9, f15, f2, f6, dyn # perform operation
fnmadd.s f9, f15, f2, f6, rdn # perform operation
fnmadd.s f9, f15, f2, f6, rmm # perform operation
fnmadd.s f9, f15, f2, f6, rne # perform operation
fnmadd.s f9, f15, f2, f6, rtz # perform operation
fnmadd.s f9, f15, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x7254a86d371789d1 # load x3 with value 0x7254a86d371789d1
sw x3, 0(x2) # store 0x7254a86d371789d1 in memory
flw f1, 0(x2) # load 0x7254a86d371789d1 from memory into f1
fnmadd.s f7, f21, f9, f1, dyn # perform operation
fnmadd.s f7, f21, f9, f1, rdn # perform operation
fnmadd.s f7, f21, f9, f1, rmm # perform operation
fnmadd.s f7, f21, f9, f1, rne # perform operation
fnmadd.s f7, f21, f9, f1, rtz # perform operation
fnmadd.s f7, f21, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f21, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xf98f932960324585 # load x3 with value 0xf98f932960324585
sw x3, 0(x2) # store 0xf98f932960324585 in memory
flw f15, 0(x2) # load 0xf98f932960324585 from memory into f15
fnmadd.s f16, f1, f19, f15, dyn # perform operation
fnmadd.s f16, f1, f19, f15, rdn # perform operation
fnmadd.s f16, f1, f19, f15, rmm # perform operation
fnmadd.s f16, f1, f19, f15, rne # perform operation
fnmadd.s f16, f1, f19, f15, rtz # perform operation
fnmadd.s f16, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xce618010c1ac06e2 # load x3 with value 0xce618010c1ac06e2
sw x3, 0(x2) # store 0xce618010c1ac06e2 in memory
flw f21, 0(x2) # load 0xce618010c1ac06e2 from memory into f21
fnmadd.s f30, f23, f14, f21, dyn # perform operation
fnmadd.s f30, f23, f14, f21, rdn # perform operation
fnmadd.s f30, f23, f14, f21, rmm # perform operation
fnmadd.s f30, f23, f14, f21, rne # perform operation
fnmadd.s f30, f23, f14, f21, rtz # perform operation
fnmadd.s f30, f23, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x6ad0bfc1397ec2be # load x3 with value 0x6ad0bfc1397ec2be
sw x3, 0(x2) # store 0x6ad0bfc1397ec2be in memory
flw f25, 0(x2) # load 0x6ad0bfc1397ec2be from memory into f25
fnmadd.s f14, f31, f3, f25, dyn # perform operation
fnmadd.s f14, f31, f3, f25, rdn # perform operation
fnmadd.s f14, f31, f3, f25, rmm # perform operation
fnmadd.s f14, f31, f3, f25, rne # perform operation
fnmadd.s f14, f31, f3, f25, rtz # perform operation
fnmadd.s f14, f31, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x15e99b65bd7ad304 # load x3 with value 0x15e99b65bd7ad304
sw x3, 0(x2) # store 0x15e99b65bd7ad304 in memory
flw f25, 0(x2) # load 0x15e99b65bd7ad304 from memory into f25
fnmadd.s f6, f13, f8, f25, dyn # perform operation
fnmadd.s f6, f13, f8, f25, rdn # perform operation
fnmadd.s f6, f13, f8, f25, rmm # perform operation
fnmadd.s f6, f13, f8, f25, rne # perform operation
fnmadd.s f6, f13, f8, f25, rtz # perform operation
fnmadd.s f6, f13, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xba008e1cc68ae249 # load x3 with value 0xba008e1cc68ae249
sw x3, 0(x2) # store 0xba008e1cc68ae249 in memory
flw f5, 0(x2) # load 0xba008e1cc68ae249 from memory into f5
fnmadd.s f6, f12, f27, f5, dyn # perform operation
fnmadd.s f6, f12, f27, f5, rdn # perform operation
fnmadd.s f6, f12, f27, f5, rmm # perform operation
fnmadd.s f6, f12, f27, f5, rne # perform operation
fnmadd.s f6, f12, f27, f5, rtz # perform operation
fnmadd.s f6, f12, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x5839da0d728aa33a # load x3 with value 0x5839da0d728aa33a
sw x3, 0(x2) # store 0x5839da0d728aa33a in memory
flw f29, 0(x2) # load 0x5839da0d728aa33a from memory into f29
fnmadd.s f19, f22, f6, f29, dyn # perform operation
fnmadd.s f19, f22, f6, f29, rdn # perform operation
fnmadd.s f19, f22, f6, f29, rmm # perform operation
fnmadd.s f19, f22, f6, f29, rne # perform operation
fnmadd.s f19, f22, f6, f29, rtz # perform operation
fnmadd.s f19, f22, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x2981b784c0737261 # load x3 with value 0x2981b784c0737261
sw x3, 0(x2) # store 0x2981b784c0737261 in memory
flw f31, 0(x2) # load 0x2981b784c0737261 from memory into f31
fnmadd.s f11, f2, f23, f31, dyn # perform operation
fnmadd.s f11, f2, f23, f31, rdn # perform operation
fnmadd.s f11, f2, f23, f31, rmm # perform operation
fnmadd.s f11, f2, f23, f31, rne # perform operation
fnmadd.s f11, f2, f23, f31, rtz # perform operation
fnmadd.s f11, f2, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f2, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x820ddba7b3a9ed76 # load x3 with value 0x820ddba7b3a9ed76
sw x3, 0(x2) # store 0x820ddba7b3a9ed76 in memory
flw f10, 0(x2) # load 0x820ddba7b3a9ed76 from memory into f10
fnmadd.s f30, f11, f29, f10, dyn # perform operation
fnmadd.s f30, f11, f29, f10, rdn # perform operation
fnmadd.s f30, f11, f29, f10, rmm # perform operation
fnmadd.s f30, f11, f29, f10, rne # perform operation
fnmadd.s f30, f11, f29, f10, rtz # perform operation
fnmadd.s f30, f11, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x583a0fdbb998d5f # load x3 with value 0x583a0fdbb998d5f
sw x3, 0(x2) # store 0x583a0fdbb998d5f in memory
flw f5, 0(x2) # load 0x583a0fdbb998d5f from memory into f5
fnmadd.s f8, f19, f13, f5, dyn # perform operation
fnmadd.s f8, f19, f13, f5, rdn # perform operation
fnmadd.s f8, f19, f13, f5, rmm # perform operation
fnmadd.s f8, f19, f13, f5, rne # perform operation
fnmadd.s f8, f19, f13, f5, rtz # perform operation
fnmadd.s f8, f19, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x444cd4829b250c45 # load x3 with value 0x444cd4829b250c45
sw x3, 0(x2) # store 0x444cd4829b250c45 in memory
flw f25, 0(x2) # load 0x444cd4829b250c45 from memory into f25
fnmadd.s f31, f14, f16, f25, dyn # perform operation
fnmadd.s f31, f14, f16, f25, rdn # perform operation
fnmadd.s f31, f14, f16, f25, rmm # perform operation
fnmadd.s f31, f14, f16, f25, rne # perform operation
fnmadd.s f31, f14, f16, f25, rtz # perform operation
fnmadd.s f31, f14, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x8e6824d98e72ddcf # load x3 with value 0x8e6824d98e72ddcf
sw x3, 0(x2) # store 0x8e6824d98e72ddcf in memory
flw f1, 0(x2) # load 0x8e6824d98e72ddcf from memory into f1
fnmadd.s f6, f30, f8, f1, dyn # perform operation
fnmadd.s f6, f30, f8, f1, rdn # perform operation
fnmadd.s f6, f30, f8, f1, rmm # perform operation
fnmadd.s f6, f30, f8, f1, rne # perform operation
fnmadd.s f6, f30, f8, f1, rtz # perform operation
fnmadd.s f6, f30, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x84d7dff2e45aedf3 # load x3 with value 0x84d7dff2e45aedf3
sw x3, 0(x2) # store 0x84d7dff2e45aedf3 in memory
flw f20, 0(x2) # load 0x84d7dff2e45aedf3 from memory into f20
fnmadd.s f2, f23, f17, f20, dyn # perform operation
fnmadd.s f2, f23, f17, f20, rdn # perform operation
fnmadd.s f2, f23, f17, f20, rmm # perform operation
fnmadd.s f2, f23, f17, f20, rne # perform operation
fnmadd.s f2, f23, f17, f20, rtz # perform operation
fnmadd.s f2, f23, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xe7707fe9ce8828db # load x3 with value 0xe7707fe9ce8828db
sw x3, 0(x2) # store 0xe7707fe9ce8828db in memory
flw f6, 0(x2) # load 0xe7707fe9ce8828db from memory into f6
fnmadd.s f3, f18, f16, f6, dyn # perform operation
fnmadd.s f3, f18, f16, f6, rdn # perform operation
fnmadd.s f3, f18, f16, f6, rmm # perform operation
fnmadd.s f3, f18, f16, f6, rne # perform operation
fnmadd.s f3, f18, f16, f6, rtz # perform operation
fnmadd.s f3, f18, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x79a1e38989eed865 # load x3 with value 0x79a1e38989eed865
sw x3, 0(x2) # store 0x79a1e38989eed865 in memory
flw f18, 0(x2) # load 0x79a1e38989eed865 from memory into f18
fnmadd.s f6, f17, f30, f18, dyn # perform operation
fnmadd.s f6, f17, f30, f18, rdn # perform operation
fnmadd.s f6, f17, f30, f18, rmm # perform operation
fnmadd.s f6, f17, f30, f18, rne # perform operation
fnmadd.s f6, f17, f30, f18, rtz # perform operation
fnmadd.s f6, f17, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0xff2e3ea8604c86a2 # load x3 with value 0xff2e3ea8604c86a2
sw x3, 0(x2) # store 0xff2e3ea8604c86a2 in memory
flw f7, 0(x2) # load 0xff2e3ea8604c86a2 from memory into f7
fnmadd.s f31, f19, f17, f7, dyn # perform operation
fnmadd.s f31, f19, f17, f7, rdn # perform operation
fnmadd.s f31, f19, f17, f7, rmm # perform operation
fnmadd.s f31, f19, f17, f7, rne # perform operation
fnmadd.s f31, f19, f17, f7, rtz # perform operation
fnmadd.s f31, f19, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f19, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x8461a7dbb2c4bcce # load x3 with value 0x8461a7dbb2c4bcce
sw x3, 0(x2) # store 0x8461a7dbb2c4bcce in memory
flw f13, 0(x2) # load 0x8461a7dbb2c4bcce from memory into f13
fnmadd.s f9, f1, f20, f13, dyn # perform operation
fnmadd.s f9, f1, f20, f13, rdn # perform operation
fnmadd.s f9, f1, f20, f13, rmm # perform operation
fnmadd.s f9, f1, f20, f13, rne # perform operation
fnmadd.s f9, f1, f20, f13, rtz # perform operation
fnmadd.s f9, f1, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f1, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x83eebec4bb04fd12 # load x3 with value 0x83eebec4bb04fd12
sw x3, 0(x2) # store 0x83eebec4bb04fd12 in memory
flw f6, 0(x2) # load 0x83eebec4bb04fd12 from memory into f6
fnmadd.s f21, f8, f22, f6, dyn # perform operation
fnmadd.s f21, f8, f22, f6, rdn # perform operation
fnmadd.s f21, f8, f22, f6, rmm # perform operation
fnmadd.s f21, f8, f22, f6, rne # perform operation
fnmadd.s f21, f8, f22, f6, rtz # perform operation
fnmadd.s f21, f8, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f8, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x5da38727bac2d344 # load x3 with value 0x5da38727bac2d344
sw x3, 0(x2) # store 0x5da38727bac2d344 in memory
flw f15, 0(x2) # load 0x5da38727bac2d344 from memory into f15
fnmadd.s f24, f13, f11, f15, dyn # perform operation
fnmadd.s f24, f13, f11, f15, rdn # perform operation
fnmadd.s f24, f13, f11, f15, rmm # perform operation
fnmadd.s f24, f13, f11, f15, rne # perform operation
fnmadd.s f24, f13, f11, f15, rtz # perform operation
fnmadd.s f24, f13, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f13, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xc5564b782cd84d77 # load x3 with value 0xc5564b782cd84d77
sw x3, 0(x2) # store 0xc5564b782cd84d77 in memory
flw f6, 0(x2) # load 0xc5564b782cd84d77 from memory into f6
fnmadd.s f28, f23, f27, f6, dyn # perform operation
fnmadd.s f28, f23, f27, f6, rdn # perform operation
fnmadd.s f28, f23, f27, f6, rmm # perform operation
fnmadd.s f28, f23, f27, f6, rne # perform operation
fnmadd.s f28, f23, f27, f6, rtz # perform operation
fnmadd.s f28, f23, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xb5cceb26f74fa97c # load x3 with value 0xb5cceb26f74fa97c
sw x3, 0(x2) # store 0xb5cceb26f74fa97c in memory
flw f5, 0(x2) # load 0xb5cceb26f74fa97c from memory into f5
fnmadd.s f14, f21, f27, f5, dyn # perform operation
fnmadd.s f14, f21, f27, f5, rdn # perform operation
fnmadd.s f14, f21, f27, f5, rmm # perform operation
fnmadd.s f14, f21, f27, f5, rne # perform operation
fnmadd.s f14, f21, f27, f5, rtz # perform operation
fnmadd.s f14, f21, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x2eb7e21c3af4f6f9 # load x3 with value 0x2eb7e21c3af4f6f9
sw x3, 0(x2) # store 0x2eb7e21c3af4f6f9 in memory
flw f31, 0(x2) # load 0x2eb7e21c3af4f6f9 from memory into f31
fnmadd.s f7, f16, f19, f31, dyn # perform operation
fnmadd.s f7, f16, f19, f31, rdn # perform operation
fnmadd.s f7, f16, f19, f31, rmm # perform operation
fnmadd.s f7, f16, f19, f31, rne # perform operation
fnmadd.s f7, f16, f19, f31, rtz # perform operation
fnmadd.s f7, f16, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x3b11c6657097f9af # load x3 with value 0x3b11c6657097f9af
sw x3, 0(x2) # store 0x3b11c6657097f9af in memory
flw f2, 0(x2) # load 0x3b11c6657097f9af from memory into f2
fnmadd.s f17, f8, f23, f2, dyn # perform operation
fnmadd.s f17, f8, f23, f2, rdn # perform operation
fnmadd.s f17, f8, f23, f2, rmm # perform operation
fnmadd.s f17, f8, f23, f2, rne # perform operation
fnmadd.s f17, f8, f23, f2, rtz # perform operation
fnmadd.s f17, f8, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x1b4a0d86c3919f73 # load x3 with value 0x1b4a0d86c3919f73
sw x3, 0(x2) # store 0x1b4a0d86c3919f73 in memory
flw f18, 0(x2) # load 0x1b4a0d86c3919f73 from memory into f18
fnmadd.s f30, f27, f19, f18, dyn # perform operation
fnmadd.s f30, f27, f19, f18, rdn # perform operation
fnmadd.s f30, f27, f19, f18, rmm # perform operation
fnmadd.s f30, f27, f19, f18, rne # perform operation
fnmadd.s f30, f27, f19, f18, rtz # perform operation
fnmadd.s f30, f27, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f27, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x19eacac5bc06185f # load x3 with value 0x19eacac5bc06185f
sw x3, 0(x2) # store 0x19eacac5bc06185f in memory
flw f28, 0(x2) # load 0x19eacac5bc06185f from memory into f28
fnmadd.s f23, f30, f11, f28, dyn # perform operation
fnmadd.s f23, f30, f11, f28, rdn # perform operation
fnmadd.s f23, f30, f11, f28, rmm # perform operation
fnmadd.s f23, f30, f11, f28, rne # perform operation
fnmadd.s f23, f30, f11, f28, rtz # perform operation
fnmadd.s f23, f30, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x247ef88000f2b528 # load x3 with value 0x247ef88000f2b528
sw x3, 0(x2) # store 0x247ef88000f2b528 in memory
flw f25, 0(x2) # load 0x247ef88000f2b528 from memory into f25
fnmadd.s f21, f29, f22, f25, dyn # perform operation
fnmadd.s f21, f29, f22, f25, rdn # perform operation
fnmadd.s f21, f29, f22, f25, rmm # perform operation
fnmadd.s f21, f29, f22, f25, rne # perform operation
fnmadd.s f21, f29, f22, f25, rtz # perform operation
fnmadd.s f21, f29, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xc8da5c06e2eb896d # load x3 with value 0xc8da5c06e2eb896d
sw x3, 0(x2) # store 0xc8da5c06e2eb896d in memory
flw f16, 0(x2) # load 0xc8da5c06e2eb896d from memory into f16
fnmadd.s f23, f10, f18, f16, dyn # perform operation
fnmadd.s f23, f10, f18, f16, rdn # perform operation
fnmadd.s f23, f10, f18, f16, rmm # perform operation
fnmadd.s f23, f10, f18, f16, rne # perform operation
fnmadd.s f23, f10, f18, f16, rtz # perform operation
fnmadd.s f23, f10, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xd860274d31402337 # load x3 with value 0xd860274d31402337
sw x3, 0(x2) # store 0xd860274d31402337 in memory
flw f8, 0(x2) # load 0xd860274d31402337 from memory into f8
fnmadd.s f21, f9, f20, f8, dyn # perform operation
fnmadd.s f21, f9, f20, f8, rdn # perform operation
fnmadd.s f21, f9, f20, f8, rmm # perform operation
fnmadd.s f21, f9, f20, f8, rne # perform operation
fnmadd.s f21, f9, f20, f8, rtz # perform operation
fnmadd.s f21, f9, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f9, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x48c3361c5631159e # load x3 with value 0x48c3361c5631159e
sw x3, 0(x2) # store 0x48c3361c5631159e in memory
flw f21, 0(x2) # load 0x48c3361c5631159e from memory into f21
fnmadd.s f6, f24, f8, f21, dyn # perform operation
fnmadd.s f6, f24, f8, f21, rdn # perform operation
fnmadd.s f6, f24, f8, f21, rmm # perform operation
fnmadd.s f6, f24, f8, f21, rne # perform operation
fnmadd.s f6, f24, f8, f21, rtz # perform operation
fnmadd.s f6, f24, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x8d00dbbab07b17f # load x3 with value 0x8d00dbbab07b17f
sw x3, 0(x2) # store 0x8d00dbbab07b17f in memory
flw f7, 0(x2) # load 0x8d00dbbab07b17f from memory into f7
fnmadd.s f8, f25, f9, f7, dyn # perform operation
fnmadd.s f8, f25, f9, f7, rdn # perform operation
fnmadd.s f8, f25, f9, f7, rmm # perform operation
fnmadd.s f8, f25, f9, f7, rne # perform operation
fnmadd.s f8, f25, f9, f7, rtz # perform operation
fnmadd.s f8, f25, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f25, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xe56cb4a2b40b6ed9 # load x3 with value 0xe56cb4a2b40b6ed9
sw x3, 0(x2) # store 0xe56cb4a2b40b6ed9 in memory
flw f30, 0(x2) # load 0xe56cb4a2b40b6ed9 from memory into f30
fnmadd.s f11, f10, f31, f30, dyn # perform operation
fnmadd.s f11, f10, f31, f30, rdn # perform operation
fnmadd.s f11, f10, f31, f30, rmm # perform operation
fnmadd.s f11, f10, f31, f30, rne # perform operation
fnmadd.s f11, f10, f31, f30, rtz # perform operation
fnmadd.s f11, f10, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x65e2a5c92d3ff4d9 # load x3 with value 0x65e2a5c92d3ff4d9
sw x3, 0(x2) # store 0x65e2a5c92d3ff4d9 in memory
flw f10, 0(x2) # load 0x65e2a5c92d3ff4d9 from memory into f10
fnmadd.s f26, f13, f12, f10, dyn # perform operation
fnmadd.s f26, f13, f12, f10, rdn # perform operation
fnmadd.s f26, f13, f12, f10, rmm # perform operation
fnmadd.s f26, f13, f12, f10, rne # perform operation
fnmadd.s f26, f13, f12, f10, rtz # perform operation
fnmadd.s f26, f13, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x11d6e885281c25cc # load x3 with value 0x11d6e885281c25cc
sw x3, 0(x2) # store 0x11d6e885281c25cc in memory
flw f1, 0(x2) # load 0x11d6e885281c25cc from memory into f1
fnmadd.s f3, f13, f29, f1, dyn # perform operation
fnmadd.s f3, f13, f29, f1, rdn # perform operation
fnmadd.s f3, f13, f29, f1, rmm # perform operation
fnmadd.s f3, f13, f29, f1, rne # perform operation
fnmadd.s f3, f13, f29, f1, rtz # perform operation
fnmadd.s f3, f13, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f13, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x4e8096f3c12ff71c # load x3 with value 0x4e8096f3c12ff71c
sw x3, 0(x2) # store 0x4e8096f3c12ff71c in memory
flw f27, 0(x2) # load 0x4e8096f3c12ff71c from memory into f27
fnmadd.s f22, f24, f2, f27, dyn # perform operation
fnmadd.s f22, f24, f2, f27, rdn # perform operation
fnmadd.s f22, f24, f2, f27, rmm # perform operation
fnmadd.s f22, f24, f2, f27, rne # perform operation
fnmadd.s f22, f24, f2, f27, rtz # perform operation
fnmadd.s f22, f24, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x773000b8bb1007dd # load x3 with value 0x773000b8bb1007dd
sw x3, 0(x2) # store 0x773000b8bb1007dd in memory
flw f1, 0(x2) # load 0x773000b8bb1007dd from memory into f1
fnmadd.s f12, f27, f18, f1, dyn # perform operation
fnmadd.s f12, f27, f18, f1, rdn # perform operation
fnmadd.s f12, f27, f18, f1, rmm # perform operation
fnmadd.s f12, f27, f18, f1, rne # perform operation
fnmadd.s f12, f27, f18, f1, rtz # perform operation
fnmadd.s f12, f27, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xfca88576e900e27d # load x3 with value 0xfca88576e900e27d
sw x3, 0(x2) # store 0xfca88576e900e27d in memory
flw f8, 0(x2) # load 0xfca88576e900e27d from memory into f8
fnmadd.s f21, f11, f16, f8, dyn # perform operation
fnmadd.s f21, f11, f16, f8, rdn # perform operation
fnmadd.s f21, f11, f16, f8, rmm # perform operation
fnmadd.s f21, f11, f16, f8, rne # perform operation
fnmadd.s f21, f11, f16, f8, rtz # perform operation
fnmadd.s f21, f11, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xa91592e027b3601 # load x3 with value 0xa91592e027b3601
sw x3, 0(x2) # store 0xa91592e027b3601 in memory
flw f9, 0(x2) # load 0xa91592e027b3601 from memory into f9
fnmadd.s f13, f6, f19, f9, dyn # perform operation
fnmadd.s f13, f6, f19, f9, rdn # perform operation
fnmadd.s f13, f6, f19, f9, rmm # perform operation
fnmadd.s f13, f6, f19, f9, rne # perform operation
fnmadd.s f13, f6, f19, f9, rtz # perform operation
fnmadd.s f13, f6, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xda152eeb274e12bd # load x3 with value 0xda152eeb274e12bd
sw x3, 0(x2) # store 0xda152eeb274e12bd in memory
flw f7, 0(x2) # load 0xda152eeb274e12bd from memory into f7
fnmadd.s f15, f22, f3, f7, dyn # perform operation
fnmadd.s f15, f22, f3, f7, rdn # perform operation
fnmadd.s f15, f22, f3, f7, rmm # perform operation
fnmadd.s f15, f22, f3, f7, rne # perform operation
fnmadd.s f15, f22, f3, f7, rtz # perform operation
fnmadd.s f15, f22, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x9b89e68a7ee32613 # load x3 with value 0x9b89e68a7ee32613
sw x3, 0(x2) # store 0x9b89e68a7ee32613 in memory
flw f13, 0(x2) # load 0x9b89e68a7ee32613 from memory into f13
fnmadd.s f26, f2, f17, f13, dyn # perform operation
fnmadd.s f26, f2, f17, f13, rdn # perform operation
fnmadd.s f26, f2, f17, f13, rmm # perform operation
fnmadd.s f26, f2, f17, f13, rne # perform operation
fnmadd.s f26, f2, f17, f13, rtz # perform operation
fnmadd.s f26, f2, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f2, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f2, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f2, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f2, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f2, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xf8d378cbcc761ec0 # load x3 with value 0xf8d378cbcc761ec0
sw x3, 0(x2) # store 0xf8d378cbcc761ec0 in memory
flw f17, 0(x2) # load 0xf8d378cbcc761ec0 from memory into f17
fnmadd.s f5, f25, f23, f17, dyn # perform operation
fnmadd.s f5, f25, f23, f17, rdn # perform operation
fnmadd.s f5, f25, f23, f17, rmm # perform operation
fnmadd.s f5, f25, f23, f17, rne # perform operation
fnmadd.s f5, f25, f23, f17, rtz # perform operation
fnmadd.s f5, f25, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x4633fb6806092a7f # load x3 with value 0x4633fb6806092a7f
sw x3, 0(x2) # store 0x4633fb6806092a7f in memory
flw f9, 0(x2) # load 0x4633fb6806092a7f from memory into f9
fnmadd.s f30, f1, f19, f9, dyn # perform operation
fnmadd.s f30, f1, f19, f9, rdn # perform operation
fnmadd.s f30, f1, f19, f9, rmm # perform operation
fnmadd.s f30, f1, f19, f9, rne # perform operation
fnmadd.s f30, f1, f19, f9, rtz # perform operation
fnmadd.s f30, f1, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x4c1811a467c26fa0 # load x3 with value 0x4c1811a467c26fa0
sw x3, 0(x2) # store 0x4c1811a467c26fa0 in memory
flw f3, 0(x2) # load 0x4c1811a467c26fa0 from memory into f3
fnmadd.s f13, f19, f11, f3, dyn # perform operation
fnmadd.s f13, f19, f11, f3, rdn # perform operation
fnmadd.s f13, f19, f11, f3, rmm # perform operation
fnmadd.s f13, f19, f11, f3, rne # perform operation
fnmadd.s f13, f19, f11, f3, rtz # perform operation
fnmadd.s f13, f19, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xe6a86d630beed736 # load x3 with value 0xe6a86d630beed736
sw x3, 0(x2) # store 0xe6a86d630beed736 in memory
flw f24, 0(x2) # load 0xe6a86d630beed736 from memory into f24
fnmadd.s f21, f16, f15, f24, dyn # perform operation
fnmadd.s f21, f16, f15, f24, rdn # perform operation
fnmadd.s f21, f16, f15, f24, rmm # perform operation
fnmadd.s f21, f16, f15, f24, rne # perform operation
fnmadd.s f21, f16, f15, f24, rtz # perform operation
fnmadd.s f21, f16, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xe3e1df0b4ccd1bb6 # load x3 with value 0xe3e1df0b4ccd1bb6
sw x3, 0(x2) # store 0xe3e1df0b4ccd1bb6 in memory
flw f11, 0(x2) # load 0xe3e1df0b4ccd1bb6 from memory into f11
fnmadd.s f30, f28, f27, f11, dyn # perform operation
fnmadd.s f30, f28, f27, f11, rdn # perform operation
fnmadd.s f30, f28, f27, f11, rmm # perform operation
fnmadd.s f30, f28, f27, f11, rne # perform operation
fnmadd.s f30, f28, f27, f11, rtz # perform operation
fnmadd.s f30, f28, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f28, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f28, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f28, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f28, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f28, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xd51539e70c282bc7 # load x3 with value 0xd51539e70c282bc7
sw x3, 0(x2) # store 0xd51539e70c282bc7 in memory
flw f6, 0(x2) # load 0xd51539e70c282bc7 from memory into f6
fnmadd.s f3, f26, f30, f6, dyn # perform operation
fnmadd.s f3, f26, f30, f6, rdn # perform operation
fnmadd.s f3, f26, f30, f6, rmm # perform operation
fnmadd.s f3, f26, f30, f6, rne # perform operation
fnmadd.s f3, f26, f30, f6, rtz # perform operation
fnmadd.s f3, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xa795c04784f53ea6 # load x3 with value 0xa795c04784f53ea6
sw x3, 0(x2) # store 0xa795c04784f53ea6 in memory
flw f9, 0(x2) # load 0xa795c04784f53ea6 from memory into f9
fnmadd.s f17, f12, f1, f9, dyn # perform operation
fnmadd.s f17, f12, f1, f9, rdn # perform operation
fnmadd.s f17, f12, f1, f9, rmm # perform operation
fnmadd.s f17, f12, f1, f9, rne # perform operation
fnmadd.s f17, f12, f1, f9, rtz # perform operation
fnmadd.s f17, f12, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x7ec24352235963ad # load x3 with value 0x7ec24352235963ad
sw x3, 0(x2) # store 0x7ec24352235963ad in memory
flw f24, 0(x2) # load 0x7ec24352235963ad from memory into f24
fnmadd.s f11, f15, f7, f24, dyn # perform operation
fnmadd.s f11, f15, f7, f24, rdn # perform operation
fnmadd.s f11, f15, f7, f24, rmm # perform operation
fnmadd.s f11, f15, f7, f24, rne # perform operation
fnmadd.s f11, f15, f7, f24, rtz # perform operation
fnmadd.s f11, f15, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x98a73964777ce30e # load x3 with value 0x98a73964777ce30e
sw x3, 0(x2) # store 0x98a73964777ce30e in memory
flw f5, 0(x2) # load 0x98a73964777ce30e from memory into f5
fnmadd.s f25, f1, f29, f5, dyn # perform operation
fnmadd.s f25, f1, f29, f5, rdn # perform operation
fnmadd.s f25, f1, f29, f5, rmm # perform operation
fnmadd.s f25, f1, f29, f5, rne # perform operation
fnmadd.s f25, f1, f29, f5, rtz # perform operation
fnmadd.s f25, f1, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f1, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f1, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f1, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f1, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f1, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x51230ad51f13ab1c # load x3 with value 0x51230ad51f13ab1c
sw x3, 0(x2) # store 0x51230ad51f13ab1c in memory
flw f15, 0(x2) # load 0x51230ad51f13ab1c from memory into f15
fnmadd.s f25, f14, f21, f15, dyn # perform operation
fnmadd.s f25, f14, f21, f15, rdn # perform operation
fnmadd.s f25, f14, f21, f15, rmm # perform operation
fnmadd.s f25, f14, f21, f15, rne # perform operation
fnmadd.s f25, f14, f21, f15, rtz # perform operation
fnmadd.s f25, f14, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x7b802b4ed7af9bc2 # load x3 with value 0x7b802b4ed7af9bc2
sw x3, 0(x2) # store 0x7b802b4ed7af9bc2 in memory
flw f24, 0(x2) # load 0x7b802b4ed7af9bc2 from memory into f24
fnmadd.s f15, f5, f17, f24, dyn # perform operation
fnmadd.s f15, f5, f17, f24, rdn # perform operation
fnmadd.s f15, f5, f17, f24, rmm # perform operation
fnmadd.s f15, f5, f17, f24, rne # perform operation
fnmadd.s f15, f5, f17, f24, rtz # perform operation
fnmadd.s f15, f5, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f5, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x669424965271134f # load x3 with value 0x669424965271134f
sw x3, 0(x2) # store 0x669424965271134f in memory
flw f12, 0(x2) # load 0x669424965271134f from memory into f12
fnmadd.s f1, f31, f15, f12, dyn # perform operation
fnmadd.s f1, f31, f15, f12, rdn # perform operation
fnmadd.s f1, f31, f15, f12, rmm # perform operation
fnmadd.s f1, f31, f15, f12, rne # perform operation
fnmadd.s f1, f31, f15, f12, rtz # perform operation
fnmadd.s f1, f31, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xa3ea98db9cbb79eb # load x3 with value 0xa3ea98db9cbb79eb
sw x3, 0(x2) # store 0xa3ea98db9cbb79eb in memory
flw f17, 0(x2) # load 0xa3ea98db9cbb79eb from memory into f17
fnmadd.s f9, f25, f2, f17, dyn # perform operation
fnmadd.s f9, f25, f2, f17, rdn # perform operation
fnmadd.s f9, f25, f2, f17, rmm # perform operation
fnmadd.s f9, f25, f2, f17, rne # perform operation
fnmadd.s f9, f25, f2, f17, rtz # perform operation
fnmadd.s f9, f25, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x4116dbc529132c7e # load x3 with value 0x4116dbc529132c7e
sw x3, 0(x2) # store 0x4116dbc529132c7e in memory
flw f10, 0(x2) # load 0x4116dbc529132c7e from memory into f10
fnmadd.s f5, f8, f18, f10, dyn # perform operation
fnmadd.s f5, f8, f18, f10, rdn # perform operation
fnmadd.s f5, f8, f18, f10, rmm # perform operation
fnmadd.s f5, f8, f18, f10, rne # perform operation
fnmadd.s f5, f8, f18, f10, rtz # perform operation
fnmadd.s f5, f8, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xe2e55b51537e14bb # load x3 with value 0xe2e55b51537e14bb
sw x3, 0(x2) # store 0xe2e55b51537e14bb in memory
flw f16, 0(x2) # load 0xe2e55b51537e14bb from memory into f16
fnmadd.s f29, f12, f28, f16, dyn # perform operation
fnmadd.s f29, f12, f28, f16, rdn # perform operation
fnmadd.s f29, f12, f28, f16, rmm # perform operation
fnmadd.s f29, f12, f28, f16, rne # perform operation
fnmadd.s f29, f12, f28, f16, rtz # perform operation
fnmadd.s f29, f12, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x28cd7c1c3065d1eb # load x3 with value 0x28cd7c1c3065d1eb
sw x3, 0(x2) # store 0x28cd7c1c3065d1eb in memory
flw f3, 0(x2) # load 0x28cd7c1c3065d1eb from memory into f3
fnmadd.s f6, f13, f2, f3, dyn # perform operation
fnmadd.s f6, f13, f2, f3, rdn # perform operation
fnmadd.s f6, f13, f2, f3, rmm # perform operation
fnmadd.s f6, f13, f2, f3, rne # perform operation
fnmadd.s f6, f13, f2, f3, rtz # perform operation
fnmadd.s f6, f13, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x937126ffebd535ad # load x3 with value 0x937126ffebd535ad
sw x3, 0(x2) # store 0x937126ffebd535ad in memory
flw f7, 0(x2) # load 0x937126ffebd535ad from memory into f7
fnmadd.s f1, f2, f12, f7, dyn # perform operation
fnmadd.s f1, f2, f12, f7, rdn # perform operation
fnmadd.s f1, f2, f12, f7, rmm # perform operation
fnmadd.s f1, f2, f12, f7, rne # perform operation
fnmadd.s f1, f2, f12, f7, rtz # perform operation
fnmadd.s f1, f2, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f2, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x50269dc7721fc987 # load x3 with value 0x50269dc7721fc987
sw x3, 0(x2) # store 0x50269dc7721fc987 in memory
flw f1, 0(x2) # load 0x50269dc7721fc987 from memory into f1
fnmadd.s f28, f30, f23, f1, dyn # perform operation
fnmadd.s f28, f30, f23, f1, rdn # perform operation
fnmadd.s f28, f30, f23, f1, rmm # perform operation
fnmadd.s f28, f30, f23, f1, rne # perform operation
fnmadd.s f28, f30, f23, f1, rtz # perform operation
fnmadd.s f28, f30, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x1c4ff484389671c8 # load x3 with value 0x1c4ff484389671c8
sw x3, 0(x2) # store 0x1c4ff484389671c8 in memory
flw f6, 0(x2) # load 0x1c4ff484389671c8 from memory into f6
fnmadd.s f16, f23, f10, f6, dyn # perform operation
fnmadd.s f16, f23, f10, f6, rdn # perform operation
fnmadd.s f16, f23, f10, f6, rmm # perform operation
fnmadd.s f16, f23, f10, f6, rne # perform operation
fnmadd.s f16, f23, f10, f6, rtz # perform operation
fnmadd.s f16, f23, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x1756fe620077c480 # load x3 with value 0x1756fe620077c480
sw x3, 0(x2) # store 0x1756fe620077c480 in memory
flw f22, 0(x2) # load 0x1756fe620077c480 from memory into f22
fnmadd.s f12, f19, f1, f22, dyn # perform operation
fnmadd.s f12, f19, f1, f22, rdn # perform operation
fnmadd.s f12, f19, f1, f22, rmm # perform operation
fnmadd.s f12, f19, f1, f22, rne # perform operation
fnmadd.s f12, f19, f1, f22, rtz # perform operation
fnmadd.s f12, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f19, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x18e32f76ef22177b # load x3 with value 0x18e32f76ef22177b
sw x3, 0(x2) # store 0x18e32f76ef22177b in memory
flw f11, 0(x2) # load 0x18e32f76ef22177b from memory into f11
fnmadd.s f1, f2, f19, f11, dyn # perform operation
fnmadd.s f1, f2, f19, f11, rdn # perform operation
fnmadd.s f1, f2, f19, f11, rmm # perform operation
fnmadd.s f1, f2, f19, f11, rne # perform operation
fnmadd.s f1, f2, f19, f11, rtz # perform operation
fnmadd.s f1, f2, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f2, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f2, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f2, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f2, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f2, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7768bc30503817a2 # load x3 with value 0x7768bc30503817a2
sw x3, 0(x2) # store 0x7768bc30503817a2 in memory
flw f29, 0(x2) # load 0x7768bc30503817a2 from memory into f29
fnmadd.s f31, f28, f10, f29, dyn # perform operation
fnmadd.s f31, f28, f10, f29, rdn # perform operation
fnmadd.s f31, f28, f10, f29, rmm # perform operation
fnmadd.s f31, f28, f10, f29, rne # perform operation
fnmadd.s f31, f28, f10, f29, rtz # perform operation
fnmadd.s f31, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xe21dd85f2ac9c7f9 # load x3 with value 0xe21dd85f2ac9c7f9
sw x3, 0(x2) # store 0xe21dd85f2ac9c7f9 in memory
flw f26, 0(x2) # load 0xe21dd85f2ac9c7f9 from memory into f26
fnmadd.s f21, f30, f10, f26, dyn # perform operation
fnmadd.s f21, f30, f10, f26, rdn # perform operation
fnmadd.s f21, f30, f10, f26, rmm # perform operation
fnmadd.s f21, f30, f10, f26, rne # perform operation
fnmadd.s f21, f30, f10, f26, rtz # perform operation
fnmadd.s f21, f30, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f30, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f30, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xc43a3d6e2f07d2fd # load x3 with value 0xc43a3d6e2f07d2fd
sw x3, 0(x2) # store 0xc43a3d6e2f07d2fd in memory
flw f6, 0(x2) # load 0xc43a3d6e2f07d2fd from memory into f6
fnmadd.s f9, f21, f27, f6, dyn # perform operation
fnmadd.s f9, f21, f27, f6, rdn # perform operation
fnmadd.s f9, f21, f27, f6, rmm # perform operation
fnmadd.s f9, f21, f27, f6, rne # perform operation
fnmadd.s f9, f21, f27, f6, rtz # perform operation
fnmadd.s f9, f21, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x7e9f6aa08fbb8759 # load x3 with value 0x7e9f6aa08fbb8759
sw x3, 0(x2) # store 0x7e9f6aa08fbb8759 in memory
flw f7, 0(x2) # load 0x7e9f6aa08fbb8759 from memory into f7
fnmadd.s f28, f30, f24, f7, dyn # perform operation
fnmadd.s f28, f30, f24, f7, rdn # perform operation
fnmadd.s f28, f30, f24, f7, rmm # perform operation
fnmadd.s f28, f30, f24, f7, rne # perform operation
fnmadd.s f28, f30, f24, f7, rtz # perform operation
fnmadd.s f28, f30, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x966d925cb796005b # load x3 with value 0x966d925cb796005b
sw x3, 0(x2) # store 0x966d925cb796005b in memory
flw f8, 0(x2) # load 0x966d925cb796005b from memory into f8
fnmadd.s f1, f28, f22, f8, dyn # perform operation
fnmadd.s f1, f28, f22, f8, rdn # perform operation
fnmadd.s f1, f28, f22, f8, rmm # perform operation
fnmadd.s f1, f28, f22, f8, rne # perform operation
fnmadd.s f1, f28, f22, f8, rtz # perform operation
fnmadd.s f1, f28, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xca045073379fe86 # load x3 with value 0xca045073379fe86
sw x3, 0(x2) # store 0xca045073379fe86 in memory
flw f2, 0(x2) # load 0xca045073379fe86 from memory into f2
fnmadd.s f12, f22, f5, f2, dyn # perform operation
fnmadd.s f12, f22, f5, f2, rdn # perform operation
fnmadd.s f12, f22, f5, f2, rmm # perform operation
fnmadd.s f12, f22, f5, f2, rne # perform operation
fnmadd.s f12, f22, f5, f2, rtz # perform operation
fnmadd.s f12, f22, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x8f6c0fe7f57cf7e9 # load x3 with value 0x8f6c0fe7f57cf7e9
sw x3, 0(x2) # store 0x8f6c0fe7f57cf7e9 in memory
flw f7, 0(x2) # load 0x8f6c0fe7f57cf7e9 from memory into f7
fnmadd.s f13, f12, f3, f7, dyn # perform operation
fnmadd.s f13, f12, f3, f7, rdn # perform operation
fnmadd.s f13, f12, f3, f7, rmm # perform operation
fnmadd.s f13, f12, f3, f7, rne # perform operation
fnmadd.s f13, f12, f3, f7, rtz # perform operation
fnmadd.s f13, f12, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x92ceb49f0d4189f5 # load x3 with value 0x92ceb49f0d4189f5
sw x3, 0(x2) # store 0x92ceb49f0d4189f5 in memory
flw f8, 0(x2) # load 0x92ceb49f0d4189f5 from memory into f8
fnmadd.s f5, f7, f2, f8, dyn # perform operation
fnmadd.s f5, f7, f2, f8, rdn # perform operation
fnmadd.s f5, f7, f2, f8, rmm # perform operation
fnmadd.s f5, f7, f2, f8, rne # perform operation
fnmadd.s f5, f7, f2, f8, rtz # perform operation
fnmadd.s f5, f7, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x1ac63a40d914458d # load x3 with value 0x1ac63a40d914458d
sw x3, 0(x2) # store 0x1ac63a40d914458d in memory
flw f7, 0(x2) # load 0x1ac63a40d914458d from memory into f7
fnmadd.s f1, f13, f12, f7, dyn # perform operation
fnmadd.s f1, f13, f12, f7, rdn # perform operation
fnmadd.s f1, f13, f12, f7, rmm # perform operation
fnmadd.s f1, f13, f12, f7, rne # perform operation
fnmadd.s f1, f13, f12, f7, rtz # perform operation
fnmadd.s f1, f13, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x42dd0ff372d6429c # load x3 with value 0x42dd0ff372d6429c
sw x3, 0(x2) # store 0x42dd0ff372d6429c in memory
flw f7, 0(x2) # load 0x42dd0ff372d6429c from memory into f7
fnmadd.s f16, f29, f28, f7, dyn # perform operation
fnmadd.s f16, f29, f28, f7, rdn # perform operation
fnmadd.s f16, f29, f28, f7, rmm # perform operation
fnmadd.s f16, f29, f28, f7, rne # perform operation
fnmadd.s f16, f29, f28, f7, rtz # perform operation
fnmadd.s f16, f29, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x74391fbc6287a70c # load x3 with value 0x74391fbc6287a70c
sw x3, 0(x2) # store 0x74391fbc6287a70c in memory
flw f29, 0(x2) # load 0x74391fbc6287a70c from memory into f29
fnmadd.s f23, f12, f10, f29, dyn # perform operation
fnmadd.s f23, f12, f10, f29, rdn # perform operation
fnmadd.s f23, f12, f10, f29, rmm # perform operation
fnmadd.s f23, f12, f10, f29, rne # perform operation
fnmadd.s f23, f12, f10, f29, rtz # perform operation
fnmadd.s f23, f12, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f12, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x9364b7a5b14175ab # load x3 with value 0x9364b7a5b14175ab
sw x3, 0(x2) # store 0x9364b7a5b14175ab in memory
flw f7, 0(x2) # load 0x9364b7a5b14175ab from memory into f7
fnmadd.s f10, f22, f24, f7, dyn # perform operation
fnmadd.s f10, f22, f24, f7, rdn # perform operation
fnmadd.s f10, f22, f24, f7, rmm # perform operation
fnmadd.s f10, f22, f24, f7, rne # perform operation
fnmadd.s f10, f22, f24, f7, rtz # perform operation
fnmadd.s f10, f22, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x7281ad8009b94566 # load x3 with value 0x7281ad8009b94566
sw x3, 0(x2) # store 0x7281ad8009b94566 in memory
flw f26, 0(x2) # load 0x7281ad8009b94566 from memory into f26
fnmadd.s f14, f24, f27, f26, dyn # perform operation
fnmadd.s f14, f24, f27, f26, rdn # perform operation
fnmadd.s f14, f24, f27, f26, rmm # perform operation
fnmadd.s f14, f24, f27, f26, rne # perform operation
fnmadd.s f14, f24, f27, f26, rtz # perform operation
fnmadd.s f14, f24, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x32093decdb053464 # load x3 with value 0x32093decdb053464
sw x3, 0(x2) # store 0x32093decdb053464 in memory
flw f26, 0(x2) # load 0x32093decdb053464 from memory into f26
fnmadd.s f7, f23, f30, f26, dyn # perform operation
fnmadd.s f7, f23, f30, f26, rdn # perform operation
fnmadd.s f7, f23, f30, f26, rmm # perform operation
fnmadd.s f7, f23, f30, f26, rne # perform operation
fnmadd.s f7, f23, f30, f26, rtz # perform operation
fnmadd.s f7, f23, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x487e39604c67ce9d # load x3 with value 0x487e39604c67ce9d
sw x3, 0(x2) # store 0x487e39604c67ce9d in memory
flw f22, 0(x2) # load 0x487e39604c67ce9d from memory into f22
fnmadd.s f19, f14, f15, f22, dyn # perform operation
fnmadd.s f19, f14, f15, f22, rdn # perform operation
fnmadd.s f19, f14, f15, f22, rmm # perform operation
fnmadd.s f19, f14, f15, f22, rne # perform operation
fnmadd.s f19, f14, f15, f22, rtz # perform operation
fnmadd.s f19, f14, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x54f8dab5a1c8157b # load x3 with value 0x54f8dab5a1c8157b
sw x3, 0(x2) # store 0x54f8dab5a1c8157b in memory
flw f21, 0(x2) # load 0x54f8dab5a1c8157b from memory into f21
fnmadd.s f15, f8, f5, f21, dyn # perform operation
fnmadd.s f15, f8, f5, f21, rdn # perform operation
fnmadd.s f15, f8, f5, f21, rmm # perform operation
fnmadd.s f15, f8, f5, f21, rne # perform operation
fnmadd.s f15, f8, f5, f21, rtz # perform operation
fnmadd.s f15, f8, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x1c0ddc481745bc3c # load x3 with value 0x1c0ddc481745bc3c
sw x3, 0(x2) # store 0x1c0ddc481745bc3c in memory
flw f22, 0(x2) # load 0x1c0ddc481745bc3c from memory into f22
fnmadd.s f12, f29, f3, f22, dyn # perform operation
fnmadd.s f12, f29, f3, f22, rdn # perform operation
fnmadd.s f12, f29, f3, f22, rmm # perform operation
fnmadd.s f12, f29, f3, f22, rne # perform operation
fnmadd.s f12, f29, f3, f22, rtz # perform operation
fnmadd.s f12, f29, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xcbce84930b266479 # load x3 with value 0xcbce84930b266479
sw x3, 0(x2) # store 0xcbce84930b266479 in memory
flw f6, 0(x2) # load 0xcbce84930b266479 from memory into f6
fnmadd.s f28, f18, f29, f6, dyn # perform operation
fnmadd.s f28, f18, f29, f6, rdn # perform operation
fnmadd.s f28, f18, f29, f6, rmm # perform operation
fnmadd.s f28, f18, f29, f6, rne # perform operation
fnmadd.s f28, f18, f29, f6, rtz # perform operation
fnmadd.s f28, f18, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x6815372597a9787d # load x3 with value 0x6815372597a9787d
sw x3, 0(x2) # store 0x6815372597a9787d in memory
flw f19, 0(x2) # load 0x6815372597a9787d from memory into f19
fnmadd.s f10, f21, f8, f19, dyn # perform operation
fnmadd.s f10, f21, f8, f19, rdn # perform operation
fnmadd.s f10, f21, f8, f19, rmm # perform operation
fnmadd.s f10, f21, f8, f19, rne # perform operation
fnmadd.s f10, f21, f8, f19, rtz # perform operation
fnmadd.s f10, f21, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x222afe0a137585d7 # load x3 with value 0x222afe0a137585d7
sw x3, 0(x2) # store 0x222afe0a137585d7 in memory
flw f21, 0(x2) # load 0x222afe0a137585d7 from memory into f21
fnmadd.s f7, f6, f28, f21, dyn # perform operation
fnmadd.s f7, f6, f28, f21, rdn # perform operation
fnmadd.s f7, f6, f28, f21, rmm # perform operation
fnmadd.s f7, f6, f28, f21, rne # perform operation
fnmadd.s f7, f6, f28, f21, rtz # perform operation
fnmadd.s f7, f6, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xa37099b6c317dd20 # load x3 with value 0xa37099b6c317dd20
sw x3, 0(x2) # store 0xa37099b6c317dd20 in memory
flw f25, 0(x2) # load 0xa37099b6c317dd20 from memory into f25
fnmadd.s f13, f9, f28, f25, dyn # perform operation
fnmadd.s f13, f9, f28, f25, rdn # perform operation
fnmadd.s f13, f9, f28, f25, rmm # perform operation
fnmadd.s f13, f9, f28, f25, rne # perform operation
fnmadd.s f13, f9, f28, f25, rtz # perform operation
fnmadd.s f13, f9, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xd9cdd993debb33d0 # load x3 with value 0xd9cdd993debb33d0
sw x3, 0(x2) # store 0xd9cdd993debb33d0 in memory
flw f17, 0(x2) # load 0xd9cdd993debb33d0 from memory into f17
fnmadd.s f27, f5, f23, f17, dyn # perform operation
fnmadd.s f27, f5, f23, f17, rdn # perform operation
fnmadd.s f27, f5, f23, f17, rmm # perform operation
fnmadd.s f27, f5, f23, f17, rne # perform operation
fnmadd.s f27, f5, f23, f17, rtz # perform operation
fnmadd.s f27, f5, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0xe30f58932b7bfd0f # load x3 with value 0xe30f58932b7bfd0f
sw x3, 0(x2) # store 0xe30f58932b7bfd0f in memory
flw f20, 0(x2) # load 0xe30f58932b7bfd0f from memory into f20
fnmadd.s f11, f13, f9, f20, dyn # perform operation
fnmadd.s f11, f13, f9, f20, rdn # perform operation
fnmadd.s f11, f13, f9, f20, rmm # perform operation
fnmadd.s f11, f13, f9, f20, rne # perform operation
fnmadd.s f11, f13, f9, f20, rtz # perform operation
fnmadd.s f11, f13, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xaa87eeda18c8b7af # load x3 with value 0xaa87eeda18c8b7af
sw x3, 0(x2) # store 0xaa87eeda18c8b7af in memory
flw f7, 0(x2) # load 0xaa87eeda18c8b7af from memory into f7
fnmadd.s f15, f17, f24, f7, dyn # perform operation
fnmadd.s f15, f17, f24, f7, rdn # perform operation
fnmadd.s f15, f17, f24, f7, rmm # perform operation
fnmadd.s f15, f17, f24, f7, rne # perform operation
fnmadd.s f15, f17, f24, f7, rtz # perform operation
fnmadd.s f15, f17, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f17, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x4ce6c214b864e176 # load x3 with value 0x4ce6c214b864e176
sw x3, 0(x2) # store 0x4ce6c214b864e176 in memory
flw f11, 0(x2) # load 0x4ce6c214b864e176 from memory into f11
fnmadd.s f13, f20, f9, f11, dyn # perform operation
fnmadd.s f13, f20, f9, f11, rdn # perform operation
fnmadd.s f13, f20, f9, f11, rmm # perform operation
fnmadd.s f13, f20, f9, f11, rne # perform operation
fnmadd.s f13, f20, f9, f11, rtz # perform operation
fnmadd.s f13, f20, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xac0195bdebe9e19 # load x3 with value 0xac0195bdebe9e19
sw x3, 0(x2) # store 0xac0195bdebe9e19 in memory
flw f21, 0(x2) # load 0xac0195bdebe9e19 from memory into f21
fnmadd.s f10, f6, f7, f21, dyn # perform operation
fnmadd.s f10, f6, f7, f21, rdn # perform operation
fnmadd.s f10, f6, f7, f21, rmm # perform operation
fnmadd.s f10, f6, f7, f21, rne # perform operation
fnmadd.s f10, f6, f7, f21, rtz # perform operation
fnmadd.s f10, f6, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xae7101e1694001a2 # load x3 with value 0xae7101e1694001a2
sw x3, 0(x2) # store 0xae7101e1694001a2 in memory
flw f20, 0(x2) # load 0xae7101e1694001a2 from memory into f20
fnmadd.s f29, f23, f15, f20, dyn # perform operation
fnmadd.s f29, f23, f15, f20, rdn # perform operation
fnmadd.s f29, f23, f15, f20, rmm # perform operation
fnmadd.s f29, f23, f15, f20, rne # perform operation
fnmadd.s f29, f23, f15, f20, rtz # perform operation
fnmadd.s f29, f23, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x9df12864462be34f # load x3 with value 0x9df12864462be34f
sw x3, 0(x2) # store 0x9df12864462be34f in memory
flw f16, 0(x2) # load 0x9df12864462be34f from memory into f16
fnmadd.s f23, f17, f31, f16, dyn # perform operation
fnmadd.s f23, f17, f31, f16, rdn # perform operation
fnmadd.s f23, f17, f31, f16, rmm # perform operation
fnmadd.s f23, f17, f31, f16, rne # perform operation
fnmadd.s f23, f17, f31, f16, rtz # perform operation
fnmadd.s f23, f17, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xdbc753188d689836 # load x3 with value 0xdbc753188d689836
sw x3, 0(x2) # store 0xdbc753188d689836 in memory
flw f17, 0(x2) # load 0xdbc753188d689836 from memory into f17
fnmadd.s f14, f21, f10, f17, dyn # perform operation
fnmadd.s f14, f21, f10, f17, rdn # perform operation
fnmadd.s f14, f21, f10, f17, rmm # perform operation
fnmadd.s f14, f21, f10, f17, rne # perform operation
fnmadd.s f14, f21, f10, f17, rtz # perform operation
fnmadd.s f14, f21, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x11e622b08f86aef4 # load x3 with value 0x11e622b08f86aef4
sw x3, 0(x2) # store 0x11e622b08f86aef4 in memory
flw f8, 0(x2) # load 0x11e622b08f86aef4 from memory into f8
fnmadd.s f29, f14, f17, f8, dyn # perform operation
fnmadd.s f29, f14, f17, f8, rdn # perform operation
fnmadd.s f29, f14, f17, f8, rmm # perform operation
fnmadd.s f29, f14, f17, f8, rne # perform operation
fnmadd.s f29, f14, f17, f8, rtz # perform operation
fnmadd.s f29, f14, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x98d5d9e09f0aa156 # load x3 with value 0x98d5d9e09f0aa156
sw x3, 0(x2) # store 0x98d5d9e09f0aa156 in memory
flw f14, 0(x2) # load 0x98d5d9e09f0aa156 from memory into f14
fnmadd.s f23, f22, f12, f14, dyn # perform operation
fnmadd.s f23, f22, f12, f14, rdn # perform operation
fnmadd.s f23, f22, f12, f14, rmm # perform operation
fnmadd.s f23, f22, f12, f14, rne # perform operation
fnmadd.s f23, f22, f12, f14, rtz # perform operation
fnmadd.s f23, f22, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f22, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x727fcb7a9b004f3c # load x3 with value 0x727fcb7a9b004f3c
sw x3, 0(x2) # store 0x727fcb7a9b004f3c in memory
flw f29, 0(x2) # load 0x727fcb7a9b004f3c from memory into f29
fnmadd.s f14, f24, f13, f29, dyn # perform operation
fnmadd.s f14, f24, f13, f29, rdn # perform operation
fnmadd.s f14, f24, f13, f29, rmm # perform operation
fnmadd.s f14, f24, f13, f29, rne # perform operation
fnmadd.s f14, f24, f13, f29, rtz # perform operation
fnmadd.s f14, f24, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x8293719c5c846ae6 # load x3 with value 0x8293719c5c846ae6
sw x3, 0(x2) # store 0x8293719c5c846ae6 in memory
flw f11, 0(x2) # load 0x8293719c5c846ae6 from memory into f11
fnmadd.s f10, f22, f2, f11, dyn # perform operation
fnmadd.s f10, f22, f2, f11, rdn # perform operation
fnmadd.s f10, f22, f2, f11, rmm # perform operation
fnmadd.s f10, f22, f2, f11, rne # perform operation
fnmadd.s f10, f22, f2, f11, rtz # perform operation
fnmadd.s f10, f22, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x926f7d3b5b60b73e # load x3 with value 0x926f7d3b5b60b73e
sw x3, 0(x2) # store 0x926f7d3b5b60b73e in memory
flw f20, 0(x2) # load 0x926f7d3b5b60b73e from memory into f20
fnmadd.s f26, f3, f2, f20, dyn # perform operation
fnmadd.s f26, f3, f2, f20, rdn # perform operation
fnmadd.s f26, f3, f2, f20, rmm # perform operation
fnmadd.s f26, f3, f2, f20, rne # perform operation
fnmadd.s f26, f3, f2, f20, rtz # perform operation
fnmadd.s f26, f3, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xad8ab94e35bae6d0 # load x3 with value 0xad8ab94e35bae6d0
sw x3, 0(x2) # store 0xad8ab94e35bae6d0 in memory
flw f25, 0(x2) # load 0xad8ab94e35bae6d0 from memory into f25
fnmadd.s f31, f14, f8, f25, dyn # perform operation
fnmadd.s f31, f14, f8, f25, rdn # perform operation
fnmadd.s f31, f14, f8, f25, rmm # perform operation
fnmadd.s f31, f14, f8, f25, rne # perform operation
fnmadd.s f31, f14, f8, f25, rtz # perform operation
fnmadd.s f31, f14, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x4d6d5310fa65ee0d # load x3 with value 0x4d6d5310fa65ee0d
sw x3, 0(x2) # store 0x4d6d5310fa65ee0d in memory
flw f3, 0(x2) # load 0x4d6d5310fa65ee0d from memory into f3
fnmadd.s f14, f7, f13, f3, dyn # perform operation
fnmadd.s f14, f7, f13, f3, rdn # perform operation
fnmadd.s f14, f7, f13, f3, rmm # perform operation
fnmadd.s f14, f7, f13, f3, rne # perform operation
fnmadd.s f14, f7, f13, f3, rtz # perform operation
fnmadd.s f14, f7, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xdaee0a0194759cf5 # load x3 with value 0xdaee0a0194759cf5
sw x3, 0(x2) # store 0xdaee0a0194759cf5 in memory
flw f2, 0(x2) # load 0xdaee0a0194759cf5 from memory into f2
fnmadd.s f27, f12, f31, f2, dyn # perform operation
fnmadd.s f27, f12, f31, f2, rdn # perform operation
fnmadd.s f27, f12, f31, f2, rmm # perform operation
fnmadd.s f27, f12, f31, f2, rne # perform operation
fnmadd.s f27, f12, f31, f2, rtz # perform operation
fnmadd.s f27, f12, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xbf12c3f4976ba8ce # load x3 with value 0xbf12c3f4976ba8ce
sw x3, 0(x2) # store 0xbf12c3f4976ba8ce in memory
flw f15, 0(x2) # load 0xbf12c3f4976ba8ce from memory into f15
fnmadd.s f19, f28, f11, f15, dyn # perform operation
fnmadd.s f19, f28, f11, f15, rdn # perform operation
fnmadd.s f19, f28, f11, f15, rmm # perform operation
fnmadd.s f19, f28, f11, f15, rne # perform operation
fnmadd.s f19, f28, f11, f15, rtz # perform operation
fnmadd.s f19, f28, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f28, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xdf700a58d1c938b0 # load x3 with value 0xdf700a58d1c938b0
sw x3, 0(x2) # store 0xdf700a58d1c938b0 in memory
flw f11, 0(x2) # load 0xdf700a58d1c938b0 from memory into f11
fnmadd.s f26, f22, f15, f11, dyn # perform operation
fnmadd.s f26, f22, f15, f11, rdn # perform operation
fnmadd.s f26, f22, f15, f11, rmm # perform operation
fnmadd.s f26, f22, f15, f11, rne # perform operation
fnmadd.s f26, f22, f15, f11, rtz # perform operation
fnmadd.s f26, f22, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xc5dbb23bfeb5c68d # load x3 with value 0xc5dbb23bfeb5c68d
sw x3, 0(x2) # store 0xc5dbb23bfeb5c68d in memory
flw f27, 0(x2) # load 0xc5dbb23bfeb5c68d from memory into f27
fnmadd.s f11, f23, f8, f27, dyn # perform operation
fnmadd.s f11, f23, f8, f27, rdn # perform operation
fnmadd.s f11, f23, f8, f27, rmm # perform operation
fnmadd.s f11, f23, f8, f27, rne # perform operation
fnmadd.s f11, f23, f8, f27, rtz # perform operation
fnmadd.s f11, f23, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x8208d6e68f996cc2 # load x3 with value 0x8208d6e68f996cc2
sw x3, 0(x2) # store 0x8208d6e68f996cc2 in memory
flw f13, 0(x2) # load 0x8208d6e68f996cc2 from memory into f13
fnmadd.s f29, f23, f24, f13, dyn # perform operation
fnmadd.s f29, f23, f24, f13, rdn # perform operation
fnmadd.s f29, f23, f24, f13, rmm # perform operation
fnmadd.s f29, f23, f24, f13, rne # perform operation
fnmadd.s f29, f23, f24, f13, rtz # perform operation
fnmadd.s f29, f23, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7e4b64814d5c855c # load x3 with value 0x7e4b64814d5c855c
sw x3, 0(x2) # store 0x7e4b64814d5c855c in memory
flw f20, 0(x2) # load 0x7e4b64814d5c855c from memory into f20
fnmadd.s f21, f2, f12, f20, dyn # perform operation
fnmadd.s f21, f2, f12, f20, rdn # perform operation
fnmadd.s f21, f2, f12, f20, rmm # perform operation
fnmadd.s f21, f2, f12, f20, rne # perform operation
fnmadd.s f21, f2, f12, f20, rtz # perform operation
fnmadd.s f21, f2, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x2d0c5beb4f2bd9fd # load x3 with value 0x2d0c5beb4f2bd9fd
sw x3, 0(x2) # store 0x2d0c5beb4f2bd9fd in memory
flw f30, 0(x2) # load 0x2d0c5beb4f2bd9fd from memory into f30
fnmadd.s f28, f20, f15, f30, dyn # perform operation
fnmadd.s f28, f20, f15, f30, rdn # perform operation
fnmadd.s f28, f20, f15, f30, rmm # perform operation
fnmadd.s f28, f20, f15, f30, rne # perform operation
fnmadd.s f28, f20, f15, f30, rtz # perform operation
fnmadd.s f28, f20, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xbc417c3aba854051 # load x3 with value 0xbc417c3aba854051
sw x3, 0(x2) # store 0xbc417c3aba854051 in memory
flw f9, 0(x2) # load 0xbc417c3aba854051 from memory into f9
fnmadd.s f11, f3, f20, f9, dyn # perform operation
fnmadd.s f11, f3, f20, f9, rdn # perform operation
fnmadd.s f11, f3, f20, f9, rmm # perform operation
fnmadd.s f11, f3, f20, f9, rne # perform operation
fnmadd.s f11, f3, f20, f9, rtz # perform operation
fnmadd.s f11, f3, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f3, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x7e1caac36386a552 # load x3 with value 0x7e1caac36386a552
sw x3, 0(x2) # store 0x7e1caac36386a552 in memory
flw f24, 0(x2) # load 0x7e1caac36386a552 from memory into f24
fnmadd.s f19, f14, f26, f24, dyn # perform operation
fnmadd.s f19, f14, f26, f24, rdn # perform operation
fnmadd.s f19, f14, f26, f24, rmm # perform operation
fnmadd.s f19, f14, f26, f24, rne # perform operation
fnmadd.s f19, f14, f26, f24, rtz # perform operation
fnmadd.s f19, f14, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x133707ba45b05953 # load x3 with value 0x133707ba45b05953
sw x3, 0(x2) # store 0x133707ba45b05953 in memory
flw f25, 0(x2) # load 0x133707ba45b05953 from memory into f25
fnmadd.s f22, f9, f1, f25, dyn # perform operation
fnmadd.s f22, f9, f1, f25, rdn # perform operation
fnmadd.s f22, f9, f1, f25, rmm # perform operation
fnmadd.s f22, f9, f1, f25, rne # perform operation
fnmadd.s f22, f9, f1, f25, rtz # perform operation
fnmadd.s f22, f9, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f9, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f9, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f9, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f9, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f9, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x68ffe072fbc1c511 # load x3 with value 0x68ffe072fbc1c511
sw x3, 0(x2) # store 0x68ffe072fbc1c511 in memory
flw f30, 0(x2) # load 0x68ffe072fbc1c511 from memory into f30
fnmadd.s f8, f29, f14, f30, dyn # perform operation
fnmadd.s f8, f29, f14, f30, rdn # perform operation
fnmadd.s f8, f29, f14, f30, rmm # perform operation
fnmadd.s f8, f29, f14, f30, rne # perform operation
fnmadd.s f8, f29, f14, f30, rtz # perform operation
fnmadd.s f8, f29, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xb3c14c3d3708b9a3 # load x3 with value 0xb3c14c3d3708b9a3
sw x3, 0(x2) # store 0xb3c14c3d3708b9a3 in memory
flw f2, 0(x2) # load 0xb3c14c3d3708b9a3 from memory into f2
fnmadd.s f5, f18, f30, f2, dyn # perform operation
fnmadd.s f5, f18, f30, f2, rdn # perform operation
fnmadd.s f5, f18, f30, f2, rmm # perform operation
fnmadd.s f5, f18, f30, f2, rne # perform operation
fnmadd.s f5, f18, f30, f2, rtz # perform operation
fnmadd.s f5, f18, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0xe3ea127db3f3c5c6 # load x3 with value 0xe3ea127db3f3c5c6
sw x3, 0(x2) # store 0xe3ea127db3f3c5c6 in memory
flw f21, 0(x2) # load 0xe3ea127db3f3c5c6 from memory into f21
fnmadd.s f5, f15, f23, f21, dyn # perform operation
fnmadd.s f5, f15, f23, f21, rdn # perform operation
fnmadd.s f5, f15, f23, f21, rmm # perform operation
fnmadd.s f5, f15, f23, f21, rne # perform operation
fnmadd.s f5, f15, f23, f21, rtz # perform operation
fnmadd.s f5, f15, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f15, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xbe09ed38435d2e30 # load x3 with value 0xbe09ed38435d2e30
sw x3, 0(x2) # store 0xbe09ed38435d2e30 in memory
flw f24, 0(x2) # load 0xbe09ed38435d2e30 from memory into f24
fnmadd.s f2, f17, f15, f24, dyn # perform operation
fnmadd.s f2, f17, f15, f24, rdn # perform operation
fnmadd.s f2, f17, f15, f24, rmm # perform operation
fnmadd.s f2, f17, f15, f24, rne # perform operation
fnmadd.s f2, f17, f15, f24, rtz # perform operation
fnmadd.s f2, f17, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xf5a6adb7c8299646 # load x3 with value 0xf5a6adb7c8299646
sw x3, 0(x2) # store 0xf5a6adb7c8299646 in memory
flw f5, 0(x2) # load 0xf5a6adb7c8299646 from memory into f5
fnmadd.s f28, f20, f15, f5, dyn # perform operation
fnmadd.s f28, f20, f15, f5, rdn # perform operation
fnmadd.s f28, f20, f15, f5, rmm # perform operation
fnmadd.s f28, f20, f15, f5, rne # perform operation
fnmadd.s f28, f20, f15, f5, rtz # perform operation
fnmadd.s f28, f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x5e37791806d93787 # load x3 with value 0x5e37791806d93787
sw x3, 0(x2) # store 0x5e37791806d93787 in memory
flw f17, 0(x2) # load 0x5e37791806d93787 from memory into f17
fnmadd.s f12, f9, f21, f17, dyn # perform operation
fnmadd.s f12, f9, f21, f17, rdn # perform operation
fnmadd.s f12, f9, f21, f17, rmm # perform operation
fnmadd.s f12, f9, f21, f17, rne # perform operation
fnmadd.s f12, f9, f21, f17, rtz # perform operation
fnmadd.s f12, f9, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f9, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x83020905378ad017 # load x3 with value 0x83020905378ad017
sw x3, 0(x2) # store 0x83020905378ad017 in memory
flw f12, 0(x2) # load 0x83020905378ad017 from memory into f12
fnmadd.s f5, f6, f26, f12, dyn # perform operation
fnmadd.s f5, f6, f26, f12, rdn # perform operation
fnmadd.s f5, f6, f26, f12, rmm # perform operation
fnmadd.s f5, f6, f26, f12, rne # perform operation
fnmadd.s f5, f6, f26, f12, rtz # perform operation
fnmadd.s f5, f6, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xc3d8457afc885558 # load x3 with value 0xc3d8457afc885558
sw x3, 0(x2) # store 0xc3d8457afc885558 in memory
flw f1, 0(x2) # load 0xc3d8457afc885558 from memory into f1
fnmadd.s f23, f26, f15, f1, dyn # perform operation
fnmadd.s f23, f26, f15, f1, rdn # perform operation
fnmadd.s f23, f26, f15, f1, rmm # perform operation
fnmadd.s f23, f26, f15, f1, rne # perform operation
fnmadd.s f23, f26, f15, f1, rtz # perform operation
fnmadd.s f23, f26, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xd15dd0e5ecfc6a06 # load x3 with value 0xd15dd0e5ecfc6a06
sw x3, 0(x2) # store 0xd15dd0e5ecfc6a06 in memory
flw f16, 0(x2) # load 0xd15dd0e5ecfc6a06 from memory into f16
fnmadd.s f30, f28, f29, f16, dyn # perform operation
fnmadd.s f30, f28, f29, f16, rdn # perform operation
fnmadd.s f30, f28, f29, f16, rmm # perform operation
fnmadd.s f30, f28, f29, f16, rne # perform operation
fnmadd.s f30, f28, f29, f16, rtz # perform operation
fnmadd.s f30, f28, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f28, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x81cb38df0731386 # load x3 with value 0x81cb38df0731386
sw x3, 0(x2) # store 0x81cb38df0731386 in memory
flw f10, 0(x2) # load 0x81cb38df0731386 from memory into f10
fnmadd.s f6, f3, f14, f10, dyn # perform operation
fnmadd.s f6, f3, f14, f10, rdn # perform operation
fnmadd.s f6, f3, f14, f10, rmm # perform operation
fnmadd.s f6, f3, f14, f10, rne # perform operation
fnmadd.s f6, f3, f14, f10, rtz # perform operation
fnmadd.s f6, f3, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x7b67cd7c018d954a # load x3 with value 0x7b67cd7c018d954a
sw x3, 0(x2) # store 0x7b67cd7c018d954a in memory
flw f18, 0(x2) # load 0x7b67cd7c018d954a from memory into f18
fnmadd.s f29, f28, f3, f18, dyn # perform operation
fnmadd.s f29, f28, f3, f18, rdn # perform operation
fnmadd.s f29, f28, f3, f18, rmm # perform operation
fnmadd.s f29, f28, f3, f18, rne # perform operation
fnmadd.s f29, f28, f3, f18, rtz # perform operation
fnmadd.s f29, f28, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xf427f7ee3e4fca91 # load x3 with value 0xf427f7ee3e4fca91
sw x3, 0(x2) # store 0xf427f7ee3e4fca91 in memory
flw f23, 0(x2) # load 0xf427f7ee3e4fca91 from memory into f23
fnmadd.s f20, f8, f19, f23, dyn # perform operation
fnmadd.s f20, f8, f19, f23, rdn # perform operation
fnmadd.s f20, f8, f19, f23, rmm # perform operation
fnmadd.s f20, f8, f19, f23, rne # perform operation
fnmadd.s f20, f8, f19, f23, rtz # perform operation
fnmadd.s f20, f8, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f8, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x333d7fa1d5755385 # load x3 with value 0x333d7fa1d5755385
sw x3, 0(x2) # store 0x333d7fa1d5755385 in memory
flw f30, 0(x2) # load 0x333d7fa1d5755385 from memory into f30
fnmadd.s f9, f19, f1, f30, dyn # perform operation
fnmadd.s f9, f19, f1, f30, rdn # perform operation
fnmadd.s f9, f19, f1, f30, rmm # perform operation
fnmadd.s f9, f19, f1, f30, rne # perform operation
fnmadd.s f9, f19, f1, f30, rtz # perform operation
fnmadd.s f9, f19, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xe988d3d8710e791e # load x3 with value 0xe988d3d8710e791e
sw x3, 0(x2) # store 0xe988d3d8710e791e in memory
flw f10, 0(x2) # load 0xe988d3d8710e791e from memory into f10
fnmadd.s f17, f9, f31, f10, dyn # perform operation
fnmadd.s f17, f9, f31, f10, rdn # perform operation
fnmadd.s f17, f9, f31, f10, rmm # perform operation
fnmadd.s f17, f9, f31, f10, rne # perform operation
fnmadd.s f17, f9, f31, f10, rtz # perform operation
fnmadd.s f17, f9, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x3ac23ee2bae835b7 # load x3 with value 0x3ac23ee2bae835b7
sw x3, 0(x2) # store 0x3ac23ee2bae835b7 in memory
flw f31, 0(x2) # load 0x3ac23ee2bae835b7 from memory into f31
fnmadd.s f29, f26, f20, f31, dyn # perform operation
fnmadd.s f29, f26, f20, f31, rdn # perform operation
fnmadd.s f29, f26, f20, f31, rmm # perform operation
fnmadd.s f29, f26, f20, f31, rne # perform operation
fnmadd.s f29, f26, f20, f31, rtz # perform operation
fnmadd.s f29, f26, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xf5749756a2985fb5 # load x3 with value 0xf5749756a2985fb5
sw x3, 0(x2) # store 0xf5749756a2985fb5 in memory
flw f16, 0(x2) # load 0xf5749756a2985fb5 from memory into f16
fnmadd.s f31, f17, f27, f16, dyn # perform operation
fnmadd.s f31, f17, f27, f16, rdn # perform operation
fnmadd.s f31, f17, f27, f16, rmm # perform operation
fnmadd.s f31, f17, f27, f16, rne # perform operation
fnmadd.s f31, f17, f27, f16, rtz # perform operation
fnmadd.s f31, f17, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x512a205c49067338 # load x3 with value 0x512a205c49067338
sw x3, 0(x2) # store 0x512a205c49067338 in memory
flw f3, 0(x2) # load 0x512a205c49067338 from memory into f3
fnmadd.s f13, f26, f30, f3, dyn # perform operation
fnmadd.s f13, f26, f30, f3, rdn # perform operation
fnmadd.s f13, f26, f30, f3, rmm # perform operation
fnmadd.s f13, f26, f30, f3, rne # perform operation
fnmadd.s f13, f26, f30, f3, rtz # perform operation
fnmadd.s f13, f26, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x974890ad59f4a5a7 # load x3 with value 0x974890ad59f4a5a7
sw x3, 0(x2) # store 0x974890ad59f4a5a7 in memory
flw f1, 0(x2) # load 0x974890ad59f4a5a7 from memory into f1
fnmadd.s f6, f18, f28, f1, dyn # perform operation
fnmadd.s f6, f18, f28, f1, rdn # perform operation
fnmadd.s f6, f18, f28, f1, rmm # perform operation
fnmadd.s f6, f18, f28, f1, rne # perform operation
fnmadd.s f6, f18, f28, f1, rtz # perform operation
fnmadd.s f6, f18, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f18, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x74af11b3edcec001 # load x3 with value 0x74af11b3edcec001
sw x3, 0(x2) # store 0x74af11b3edcec001 in memory
flw f23, 0(x2) # load 0x74af11b3edcec001 from memory into f23
fnmadd.s f12, f2, f21, f23, dyn # perform operation
fnmadd.s f12, f2, f21, f23, rdn # perform operation
fnmadd.s f12, f2, f21, f23, rmm # perform operation
fnmadd.s f12, f2, f21, f23, rne # perform operation
fnmadd.s f12, f2, f21, f23, rtz # perform operation
fnmadd.s f12, f2, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xd3800d6417f8cbc5 # load x3 with value 0xd3800d6417f8cbc5
sw x3, 0(x2) # store 0xd3800d6417f8cbc5 in memory
flw f28, 0(x2) # load 0xd3800d6417f8cbc5 from memory into f28
fnmadd.s f7, f29, f3, f28, dyn # perform operation
fnmadd.s f7, f29, f3, f28, rdn # perform operation
fnmadd.s f7, f29, f3, f28, rmm # perform operation
fnmadd.s f7, f29, f3, f28, rne # perform operation
fnmadd.s f7, f29, f3, f28, rtz # perform operation
fnmadd.s f7, f29, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f29, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xc0cb18033ef27a97 # load x3 with value 0xc0cb18033ef27a97
sw x3, 0(x2) # store 0xc0cb18033ef27a97 in memory
flw f25, 0(x2) # load 0xc0cb18033ef27a97 from memory into f25
fnmadd.s f15, f2, f10, f25, dyn # perform operation
fnmadd.s f15, f2, f10, f25, rdn # perform operation
fnmadd.s f15, f2, f10, f25, rmm # perform operation
fnmadd.s f15, f2, f10, f25, rne # perform operation
fnmadd.s f15, f2, f10, f25, rtz # perform operation
fnmadd.s f15, f2, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x7055af60443467d7 # load x3 with value 0x7055af60443467d7
sw x3, 0(x2) # store 0x7055af60443467d7 in memory
flw f30, 0(x2) # load 0x7055af60443467d7 from memory into f30
fnmadd.s f17, f26, f3, f30, dyn # perform operation
fnmadd.s f17, f26, f3, f30, rdn # perform operation
fnmadd.s f17, f26, f3, f30, rmm # perform operation
fnmadd.s f17, f26, f3, f30, rne # perform operation
fnmadd.s f17, f26, f3, f30, rtz # perform operation
fnmadd.s f17, f26, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x63d51582ef59038f # load x3 with value 0x63d51582ef59038f
sw x3, 0(x2) # store 0x63d51582ef59038f in memory
flw f21, 0(x2) # load 0x63d51582ef59038f from memory into f21
fnmadd.s f14, f9, f24, f21, dyn # perform operation
fnmadd.s f14, f9, f24, f21, rdn # perform operation
fnmadd.s f14, f9, f24, f21, rmm # perform operation
fnmadd.s f14, f9, f24, f21, rne # perform operation
fnmadd.s f14, f9, f24, f21, rtz # perform operation
fnmadd.s f14, f9, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x1b90fe28b126e308 # load x3 with value 0x1b90fe28b126e308
sw x3, 0(x2) # store 0x1b90fe28b126e308 in memory
flw f9, 0(x2) # load 0x1b90fe28b126e308 from memory into f9
fnmadd.s f31, f7, f1, f9, dyn # perform operation
fnmadd.s f31, f7, f1, f9, rdn # perform operation
fnmadd.s f31, f7, f1, f9, rmm # perform operation
fnmadd.s f31, f7, f1, f9, rne # perform operation
fnmadd.s f31, f7, f1, f9, rtz # perform operation
fnmadd.s f31, f7, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x37dbe1b1af710f73 # load x3 with value 0x37dbe1b1af710f73
sw x3, 0(x2) # store 0x37dbe1b1af710f73 in memory
flw f19, 0(x2) # load 0x37dbe1b1af710f73 from memory into f19
fnmadd.s f28, f8, f22, f19, dyn # perform operation
fnmadd.s f28, f8, f22, f19, rdn # perform operation
fnmadd.s f28, f8, f22, f19, rmm # perform operation
fnmadd.s f28, f8, f22, f19, rne # perform operation
fnmadd.s f28, f8, f22, f19, rtz # perform operation
fnmadd.s f28, f8, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xb5082ef7f65f220b # load x3 with value 0xb5082ef7f65f220b
sw x3, 0(x2) # store 0xb5082ef7f65f220b in memory
flw f27, 0(x2) # load 0xb5082ef7f65f220b from memory into f27
fnmadd.s f6, f29, f5, f27, dyn # perform operation
fnmadd.s f6, f29, f5, f27, rdn # perform operation
fnmadd.s f6, f29, f5, f27, rmm # perform operation
fnmadd.s f6, f29, f5, f27, rne # perform operation
fnmadd.s f6, f29, f5, f27, rtz # perform operation
fnmadd.s f6, f29, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x6a9ae5d71bfb77b2 # load x3 with value 0x6a9ae5d71bfb77b2
sw x3, 0(x2) # store 0x6a9ae5d71bfb77b2 in memory
flw f17, 0(x2) # load 0x6a9ae5d71bfb77b2 from memory into f17
fnmadd.s f11, f8, f18, f17, dyn # perform operation
fnmadd.s f11, f8, f18, f17, rdn # perform operation
fnmadd.s f11, f8, f18, f17, rmm # perform operation
fnmadd.s f11, f8, f18, f17, rne # perform operation
fnmadd.s f11, f8, f18, f17, rtz # perform operation
fnmadd.s f11, f8, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xd6fdfebe232b41d4 # load x3 with value 0xd6fdfebe232b41d4
sw x3, 0(x2) # store 0xd6fdfebe232b41d4 in memory
flw f21, 0(x2) # load 0xd6fdfebe232b41d4 from memory into f21
fnmadd.s f17, f29, f14, f21, dyn # perform operation
fnmadd.s f17, f29, f14, f21, rdn # perform operation
fnmadd.s f17, f29, f14, f21, rmm # perform operation
fnmadd.s f17, f29, f14, f21, rne # perform operation
fnmadd.s f17, f29, f14, f21, rtz # perform operation
fnmadd.s f17, f29, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f29, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f29, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f29, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f29, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f29, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x40a313ca15a9884d # load x3 with value 0x40a313ca15a9884d
sw x3, 0(x2) # store 0x40a313ca15a9884d in memory
flw f3, 0(x2) # load 0x40a313ca15a9884d from memory into f3
fnmadd.s f8, f25, f9, f3, dyn # perform operation
fnmadd.s f8, f25, f9, f3, rdn # perform operation
fnmadd.s f8, f25, f9, f3, rmm # perform operation
fnmadd.s f8, f25, f9, f3, rne # perform operation
fnmadd.s f8, f25, f9, f3, rtz # perform operation
fnmadd.s f8, f25, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f25, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f25, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f25, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f25, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f25, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x9fac1c62c27666ec # load x3 with value 0x9fac1c62c27666ec
sw x3, 0(x2) # store 0x9fac1c62c27666ec in memory
flw f14, 0(x2) # load 0x9fac1c62c27666ec from memory into f14
fnmadd.s f19, f29, f3, f14, dyn # perform operation
fnmadd.s f19, f29, f3, f14, rdn # perform operation
fnmadd.s f19, f29, f3, f14, rmm # perform operation
fnmadd.s f19, f29, f3, f14, rne # perform operation
fnmadd.s f19, f29, f3, f14, rtz # perform operation
fnmadd.s f19, f29, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xd812282b24fe9374 # load x3 with value 0xd812282b24fe9374
sw x3, 0(x2) # store 0xd812282b24fe9374 in memory
flw f3, 0(x2) # load 0xd812282b24fe9374 from memory into f3
fnmadd.s f12, f23, f7, f3, dyn # perform operation
fnmadd.s f12, f23, f7, f3, rdn # perform operation
fnmadd.s f12, f23, f7, f3, rmm # perform operation
fnmadd.s f12, f23, f7, f3, rne # perform operation
fnmadd.s f12, f23, f7, f3, rtz # perform operation
fnmadd.s f12, f23, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f23, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xce0c3f1c06dc3e2f # load x3 with value 0xce0c3f1c06dc3e2f
sw x3, 0(x2) # store 0xce0c3f1c06dc3e2f in memory
flw f1, 0(x2) # load 0xce0c3f1c06dc3e2f from memory into f1
fnmadd.s f25, f9, f29, f1, dyn # perform operation
fnmadd.s f25, f9, f29, f1, rdn # perform operation
fnmadd.s f25, f9, f29, f1, rmm # perform operation
fnmadd.s f25, f9, f29, f1, rne # perform operation
fnmadd.s f25, f9, f29, f1, rtz # perform operation
fnmadd.s f25, f9, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x6db044bc0296c6e6 # load x3 with value 0x6db044bc0296c6e6
sw x3, 0(x2) # store 0x6db044bc0296c6e6 in memory
flw f29, 0(x2) # load 0x6db044bc0296c6e6 from memory into f29
fnmadd.s f27, f20, f24, f29, dyn # perform operation
fnmadd.s f27, f20, f24, f29, rdn # perform operation
fnmadd.s f27, f20, f24, f29, rmm # perform operation
fnmadd.s f27, f20, f24, f29, rne # perform operation
fnmadd.s f27, f20, f24, f29, rtz # perform operation
fnmadd.s f27, f20, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x5927b5c26f4c14aa # load x3 with value 0x5927b5c26f4c14aa
sw x3, 0(x2) # store 0x5927b5c26f4c14aa in memory
flw f12, 0(x2) # load 0x5927b5c26f4c14aa from memory into f12
fnmadd.s f20, f19, f3, f12, dyn # perform operation
fnmadd.s f20, f19, f3, f12, rdn # perform operation
fnmadd.s f20, f19, f3, f12, rmm # perform operation
fnmadd.s f20, f19, f3, f12, rne # perform operation
fnmadd.s f20, f19, f3, f12, rtz # perform operation
fnmadd.s f20, f19, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x522359a94e7b04c3 # load x3 with value 0x522359a94e7b04c3
sw x3, 0(x2) # store 0x522359a94e7b04c3 in memory
flw f16, 0(x2) # load 0x522359a94e7b04c3 from memory into f16
fnmadd.s f20, f26, f19, f16, dyn # perform operation
fnmadd.s f20, f26, f19, f16, rdn # perform operation
fnmadd.s f20, f26, f19, f16, rmm # perform operation
fnmadd.s f20, f26, f19, f16, rne # perform operation
fnmadd.s f20, f26, f19, f16, rtz # perform operation
fnmadd.s f20, f26, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x6dbb08fd60fae943 # load x3 with value 0x6dbb08fd60fae943
sw x3, 0(x2) # store 0x6dbb08fd60fae943 in memory
flw f28, 0(x2) # load 0x6dbb08fd60fae943 from memory into f28
fnmadd.s f7, f29, f3, f28, dyn # perform operation
fnmadd.s f7, f29, f3, f28, rdn # perform operation
fnmadd.s f7, f29, f3, f28, rmm # perform operation
fnmadd.s f7, f29, f3, f28, rne # perform operation
fnmadd.s f7, f29, f3, f28, rtz # perform operation
fnmadd.s f7, f29, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f29, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x3a6d18481c2fbca4 # load x3 with value 0x3a6d18481c2fbca4
sw x3, 0(x2) # store 0x3a6d18481c2fbca4 in memory
flw f25, 0(x2) # load 0x3a6d18481c2fbca4 from memory into f25
fnmadd.s f8, f2, f21, f25, dyn # perform operation
fnmadd.s f8, f2, f21, f25, rdn # perform operation
fnmadd.s f8, f2, f21, f25, rmm # perform operation
fnmadd.s f8, f2, f21, f25, rne # perform operation
fnmadd.s f8, f2, f21, f25, rtz # perform operation
fnmadd.s f8, f2, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x9fd2329aef4698ac # load x3 with value 0x9fd2329aef4698ac
sw x3, 0(x2) # store 0x9fd2329aef4698ac in memory
flw f17, 0(x2) # load 0x9fd2329aef4698ac from memory into f17
fnmadd.s f6, f3, f28, f17, dyn # perform operation
fnmadd.s f6, f3, f28, f17, rdn # perform operation
fnmadd.s f6, f3, f28, f17, rmm # perform operation
fnmadd.s f6, f3, f28, f17, rne # perform operation
fnmadd.s f6, f3, f28, f17, rtz # perform operation
fnmadd.s f6, f3, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x79e2993f48835765 # load x3 with value 0x79e2993f48835765
sw x3, 0(x2) # store 0x79e2993f48835765 in memory
flw f12, 0(x2) # load 0x79e2993f48835765 from memory into f12
fnmadd.s f9, f22, f20, f12, dyn # perform operation
fnmadd.s f9, f22, f20, f12, rdn # perform operation
fnmadd.s f9, f22, f20, f12, rmm # perform operation
fnmadd.s f9, f22, f20, f12, rne # perform operation
fnmadd.s f9, f22, f20, f12, rtz # perform operation
fnmadd.s f9, f22, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f22, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xb2d44b961eafce60 # load x3 with value 0xb2d44b961eafce60
sw x3, 0(x2) # store 0xb2d44b961eafce60 in memory
flw f12, 0(x2) # load 0xb2d44b961eafce60 from memory into f12
fnmadd.s f18, f19, f25, f12, dyn # perform operation
fnmadd.s f18, f19, f25, f12, rdn # perform operation
fnmadd.s f18, f19, f25, f12, rmm # perform operation
fnmadd.s f18, f19, f25, f12, rne # perform operation
fnmadd.s f18, f19, f25, f12, rtz # perform operation
fnmadd.s f18, f19, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f19, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f19, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x82223a4abd123b2f # load x3 with value 0x82223a4abd123b2f
sw x3, 0(x2) # store 0x82223a4abd123b2f in memory
flw f1, 0(x2) # load 0x82223a4abd123b2f from memory into f1
fnmadd.s f16, f5, f9, f1, dyn # perform operation
fnmadd.s f16, f5, f9, f1, rdn # perform operation
fnmadd.s f16, f5, f9, f1, rmm # perform operation
fnmadd.s f16, f5, f9, f1, rne # perform operation
fnmadd.s f16, f5, f9, f1, rtz # perform operation
fnmadd.s f16, f5, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f5, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xc8851c646c2aebda # load x3 with value 0xc8851c646c2aebda
sw x3, 0(x2) # store 0xc8851c646c2aebda in memory
flw f7, 0(x2) # load 0xc8851c646c2aebda from memory into f7
fnmadd.s f13, f17, f24, f7, dyn # perform operation
fnmadd.s f13, f17, f24, f7, rdn # perform operation
fnmadd.s f13, f17, f24, f7, rmm # perform operation
fnmadd.s f13, f17, f24, f7, rne # perform operation
fnmadd.s f13, f17, f24, f7, rtz # perform operation
fnmadd.s f13, f17, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x794180bf5bab96c6 # load x3 with value 0x794180bf5bab96c6
sw x3, 0(x2) # store 0x794180bf5bab96c6 in memory
flw f20, 0(x2) # load 0x794180bf5bab96c6 from memory into f20
fnmadd.s f16, f28, f13, f20, dyn # perform operation
fnmadd.s f16, f28, f13, f20, rdn # perform operation
fnmadd.s f16, f28, f13, f20, rmm # perform operation
fnmadd.s f16, f28, f13, f20, rne # perform operation
fnmadd.s f16, f28, f13, f20, rtz # perform operation
fnmadd.s f16, f28, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f28, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x39fd30809c07453b # load x3 with value 0x39fd30809c07453b
sw x3, 0(x2) # store 0x39fd30809c07453b in memory
flw f29, 0(x2) # load 0x39fd30809c07453b from memory into f29
fnmadd.s f12, f8, f17, f29, dyn # perform operation
fnmadd.s f12, f8, f17, f29, rdn # perform operation
fnmadd.s f12, f8, f17, f29, rmm # perform operation
fnmadd.s f12, f8, f17, f29, rne # perform operation
fnmadd.s f12, f8, f17, f29, rtz # perform operation
fnmadd.s f12, f8, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xa44fa2f6cfd379f9 # load x3 with value 0xa44fa2f6cfd379f9
sw x3, 0(x2) # store 0xa44fa2f6cfd379f9 in memory
flw f7, 0(x2) # load 0xa44fa2f6cfd379f9 from memory into f7
fnmadd.s f6, f29, f30, f7, dyn # perform operation
fnmadd.s f6, f29, f30, f7, rdn # perform operation
fnmadd.s f6, f29, f30, f7, rmm # perform operation
fnmadd.s f6, f29, f30, f7, rne # perform operation
fnmadd.s f6, f29, f30, f7, rtz # perform operation
fnmadd.s f6, f29, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x2c11854c6c7d616 # load x3 with value 0x2c11854c6c7d616
sw x3, 0(x2) # store 0x2c11854c6c7d616 in memory
flw f21, 0(x2) # load 0x2c11854c6c7d616 from memory into f21
fnmadd.s f25, f2, f9, f21, dyn # perform operation
fnmadd.s f25, f2, f9, f21, rdn # perform operation
fnmadd.s f25, f2, f9, f21, rmm # perform operation
fnmadd.s f25, f2, f9, f21, rne # perform operation
fnmadd.s f25, f2, f9, f21, rtz # perform operation
fnmadd.s f25, f2, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x3d533323e9d66a50 # load x3 with value 0x3d533323e9d66a50
sw x3, 0(x2) # store 0x3d533323e9d66a50 in memory
flw f14, 0(x2) # load 0x3d533323e9d66a50 from memory into f14
fnmadd.s f20, f9, f30, f14, dyn # perform operation
fnmadd.s f20, f9, f30, f14, rdn # perform operation
fnmadd.s f20, f9, f30, f14, rmm # perform operation
fnmadd.s f20, f9, f30, f14, rne # perform operation
fnmadd.s f20, f9, f30, f14, rtz # perform operation
fnmadd.s f20, f9, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0xd104b01df19caf42 # load x3 with value 0xd104b01df19caf42
sw x3, 0(x2) # store 0xd104b01df19caf42 in memory
flw f23, 0(x2) # load 0xd104b01df19caf42 from memory into f23
fnmadd.s f16, f14, f2, f23, dyn # perform operation
fnmadd.s f16, f14, f2, f23, rdn # perform operation
fnmadd.s f16, f14, f2, f23, rmm # perform operation
fnmadd.s f16, f14, f2, f23, rne # perform operation
fnmadd.s f16, f14, f2, f23, rtz # perform operation
fnmadd.s f16, f14, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f14, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xb54656cdb669bdc1 # load x3 with value 0xb54656cdb669bdc1
sw x3, 0(x2) # store 0xb54656cdb669bdc1 in memory
flw f17, 0(x2) # load 0xb54656cdb669bdc1 from memory into f17
fnmadd.s f2, f3, f9, f17, dyn # perform operation
fnmadd.s f2, f3, f9, f17, rdn # perform operation
fnmadd.s f2, f3, f9, f17, rmm # perform operation
fnmadd.s f2, f3, f9, f17, rne # perform operation
fnmadd.s f2, f3, f9, f17, rtz # perform operation
fnmadd.s f2, f3, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x58232d04d155c8a1 # load x3 with value 0x58232d04d155c8a1
sw x3, 0(x2) # store 0x58232d04d155c8a1 in memory
flw f22, 0(x2) # load 0x58232d04d155c8a1 from memory into f22
fnmadd.s f16, f13, f25, f22, dyn # perform operation
fnmadd.s f16, f13, f25, f22, rdn # perform operation
fnmadd.s f16, f13, f25, f22, rmm # perform operation
fnmadd.s f16, f13, f25, f22, rne # perform operation
fnmadd.s f16, f13, f25, f22, rtz # perform operation
fnmadd.s f16, f13, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xbc370b381a23160d # load x3 with value 0xbc370b381a23160d
sw x3, 0(x2) # store 0xbc370b381a23160d in memory
flw f7, 0(x2) # load 0xbc370b381a23160d from memory into f7
fnmadd.s f25, f11, f30, f7, dyn # perform operation
fnmadd.s f25, f11, f30, f7, rdn # perform operation
fnmadd.s f25, f11, f30, f7, rmm # perform operation
fnmadd.s f25, f11, f30, f7, rne # perform operation
fnmadd.s f25, f11, f30, f7, rtz # perform operation
fnmadd.s f25, f11, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x882f9a92289cc30b # load x3 with value 0x882f9a92289cc30b
sw x3, 0(x2) # store 0x882f9a92289cc30b in memory
flw f22, 0(x2) # load 0x882f9a92289cc30b from memory into f22
fnmadd.s f12, f17, f29, f22, dyn # perform operation
fnmadd.s f12, f17, f29, f22, rdn # perform operation
fnmadd.s f12, f17, f29, f22, rmm # perform operation
fnmadd.s f12, f17, f29, f22, rne # perform operation
fnmadd.s f12, f17, f29, f22, rtz # perform operation
fnmadd.s f12, f17, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xffff775fffec138 # load x3 with value 0xffff775fffec138
sw x3, 0(x2) # store 0xffff775fffec138 in memory
flw f7, 0(x2) # load 0xffff775fffec138 from memory into f7
fnmadd.s f14, f30, f17, f7, dyn # perform operation
fnmadd.s f14, f30, f17, f7, rdn # perform operation
fnmadd.s f14, f30, f17, f7, rmm # perform operation
fnmadd.s f14, f30, f17, f7, rne # perform operation
fnmadd.s f14, f30, f17, f7, rtz # perform operation
fnmadd.s f14, f30, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x23ab30aa83b93b34 # load x3 with value 0x23ab30aa83b93b34
sw x3, 0(x2) # store 0x23ab30aa83b93b34 in memory
flw f16, 0(x2) # load 0x23ab30aa83b93b34 from memory into f16
fnmadd.s f2, f12, f20, f16, dyn # perform operation
fnmadd.s f2, f12, f20, f16, rdn # perform operation
fnmadd.s f2, f12, f20, f16, rmm # perform operation
fnmadd.s f2, f12, f20, f16, rne # perform operation
fnmadd.s f2, f12, f20, f16, rtz # perform operation
fnmadd.s f2, f12, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xad611406e36dc57d # load x3 with value 0xad611406e36dc57d
sw x3, 0(x2) # store 0xad611406e36dc57d in memory
flw f20, 0(x2) # load 0xad611406e36dc57d from memory into f20
fnmadd.s f9, f21, f8, f20, dyn # perform operation
fnmadd.s f9, f21, f8, f20, rdn # perform operation
fnmadd.s f9, f21, f8, f20, rmm # perform operation
fnmadd.s f9, f21, f8, f20, rne # perform operation
fnmadd.s f9, f21, f8, f20, rtz # perform operation
fnmadd.s f9, f21, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x51f63a36521fbbad # load x3 with value 0x51f63a36521fbbad
sw x3, 0(x2) # store 0x51f63a36521fbbad in memory
flw f14, 0(x2) # load 0x51f63a36521fbbad from memory into f14
fnmadd.s f27, f11, f21, f14, dyn # perform operation
fnmadd.s f27, f11, f21, f14, rdn # perform operation
fnmadd.s f27, f11, f21, f14, rmm # perform operation
fnmadd.s f27, f11, f21, f14, rne # perform operation
fnmadd.s f27, f11, f21, f14, rtz # perform operation
fnmadd.s f27, f11, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f11, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x5d5f5724e1bb7416 # load x3 with value 0x5d5f5724e1bb7416
sw x3, 0(x2) # store 0x5d5f5724e1bb7416 in memory
flw f18, 0(x2) # load 0x5d5f5724e1bb7416 from memory into f18
fnmadd.s f21, f11, f16, f18, dyn # perform operation
fnmadd.s f21, f11, f16, f18, rdn # perform operation
fnmadd.s f21, f11, f16, f18, rmm # perform operation
fnmadd.s f21, f11, f16, f18, rne # perform operation
fnmadd.s f21, f11, f16, f18, rtz # perform operation
fnmadd.s f21, f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xaceddd835c272e47 # load x3 with value 0xaceddd835c272e47
sw x3, 0(x2) # store 0xaceddd835c272e47 in memory
flw f9, 0(x2) # load 0xaceddd835c272e47 from memory into f9
fnmadd.s f23, f10, f31, f9, dyn # perform operation
fnmadd.s f23, f10, f31, f9, rdn # perform operation
fnmadd.s f23, f10, f31, f9, rmm # perform operation
fnmadd.s f23, f10, f31, f9, rne # perform operation
fnmadd.s f23, f10, f31, f9, rtz # perform operation
fnmadd.s f23, f10, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x5d563b868eb24046 # load x3 with value 0x5d563b868eb24046
sw x3, 0(x2) # store 0x5d563b868eb24046 in memory
flw f3, 0(x2) # load 0x5d563b868eb24046 from memory into f3
fnmadd.s f23, f10, f12, f3, dyn # perform operation
fnmadd.s f23, f10, f12, f3, rdn # perform operation
fnmadd.s f23, f10, f12, f3, rmm # perform operation
fnmadd.s f23, f10, f12, f3, rne # perform operation
fnmadd.s f23, f10, f12, f3, rtz # perform operation
fnmadd.s f23, f10, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x5a452c176cae966d # load x3 with value 0x5a452c176cae966d
sw x3, 0(x2) # store 0x5a452c176cae966d in memory
flw f28, 0(x2) # load 0x5a452c176cae966d from memory into f28
fnmadd.s f25, f9, f14, f28, dyn # perform operation
fnmadd.s f25, f9, f14, f28, rdn # perform operation
fnmadd.s f25, f9, f14, f28, rmm # perform operation
fnmadd.s f25, f9, f14, f28, rne # perform operation
fnmadd.s f25, f9, f14, f28, rtz # perform operation
fnmadd.s f25, f9, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x3a1e104ed8a8b849 # load x3 with value 0x3a1e104ed8a8b849
sw x3, 0(x2) # store 0x3a1e104ed8a8b849 in memory
flw f27, 0(x2) # load 0x3a1e104ed8a8b849 from memory into f27
fnmadd.s f10, f20, f31, f27, dyn # perform operation
fnmadd.s f10, f20, f31, f27, rdn # perform operation
fnmadd.s f10, f20, f31, f27, rmm # perform operation
fnmadd.s f10, f20, f31, f27, rne # perform operation
fnmadd.s f10, f20, f31, f27, rtz # perform operation
fnmadd.s f10, f20, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x4e1663b613a93674 # load x3 with value 0x4e1663b613a93674
sw x3, 0(x2) # store 0x4e1663b613a93674 in memory
flw f20, 0(x2) # load 0x4e1663b613a93674 from memory into f20
fnmadd.s f23, f31, f16, f20, dyn # perform operation
fnmadd.s f23, f31, f16, f20, rdn # perform operation
fnmadd.s f23, f31, f16, f20, rmm # perform operation
fnmadd.s f23, f31, f16, f20, rne # perform operation
fnmadd.s f23, f31, f16, f20, rtz # perform operation
fnmadd.s f23, f31, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xa5836c3368a517f3 # load x3 with value 0xa5836c3368a517f3
sw x3, 0(x2) # store 0xa5836c3368a517f3 in memory
flw f29, 0(x2) # load 0xa5836c3368a517f3 from memory into f29
fnmadd.s f11, f8, f10, f29, dyn # perform operation
fnmadd.s f11, f8, f10, f29, rdn # perform operation
fnmadd.s f11, f8, f10, f29, rmm # perform operation
fnmadd.s f11, f8, f10, f29, rne # perform operation
fnmadd.s f11, f8, f10, f29, rtz # perform operation
fnmadd.s f11, f8, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x66dd335b4789432b # load x3 with value 0x66dd335b4789432b
sw x3, 0(x2) # store 0x66dd335b4789432b in memory
flw f18, 0(x2) # load 0x66dd335b4789432b from memory into f18
fnmadd.s f6, f28, f19, f18, dyn # perform operation
fnmadd.s f6, f28, f19, f18, rdn # perform operation
fnmadd.s f6, f28, f19, f18, rmm # perform operation
fnmadd.s f6, f28, f19, f18, rne # perform operation
fnmadd.s f6, f28, f19, f18, rtz # perform operation
fnmadd.s f6, f28, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x6dfac2c882c34731 # load x3 with value 0x6dfac2c882c34731
sw x3, 0(x2) # store 0x6dfac2c882c34731 in memory
flw f22, 0(x2) # load 0x6dfac2c882c34731 from memory into f22
fnmadd.s f8, f6, f17, f22, dyn # perform operation
fnmadd.s f8, f6, f17, f22, rdn # perform operation
fnmadd.s f8, f6, f17, f22, rmm # perform operation
fnmadd.s f8, f6, f17, f22, rne # perform operation
fnmadd.s f8, f6, f17, f22, rtz # perform operation
fnmadd.s f8, f6, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f6, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x45bd7b95c24ee9da # load x3 with value 0x45bd7b95c24ee9da
sw x3, 0(x2) # store 0x45bd7b95c24ee9da in memory
flw f9, 0(x2) # load 0x45bd7b95c24ee9da from memory into f9
fnmadd.s f16, f27, f15, f9, dyn # perform operation
fnmadd.s f16, f27, f15, f9, rdn # perform operation
fnmadd.s f16, f27, f15, f9, rmm # perform operation
fnmadd.s f16, f27, f15, f9, rne # perform operation
fnmadd.s f16, f27, f15, f9, rtz # perform operation
fnmadd.s f16, f27, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x1b74aa08e98795c7 # load x3 with value 0x1b74aa08e98795c7
sw x3, 0(x2) # store 0x1b74aa08e98795c7 in memory
flw f24, 0(x2) # load 0x1b74aa08e98795c7 from memory into f24
fnmadd.s f5, f9, f27, f24, dyn # perform operation
fnmadd.s f5, f9, f27, f24, rdn # perform operation
fnmadd.s f5, f9, f27, f24, rmm # perform operation
fnmadd.s f5, f9, f27, f24, rne # perform operation
fnmadd.s f5, f9, f27, f24, rtz # perform operation
fnmadd.s f5, f9, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x3939c0670bb0d90a # load x3 with value 0x3939c0670bb0d90a
sw x3, 0(x2) # store 0x3939c0670bb0d90a in memory
flw f15, 0(x2) # load 0x3939c0670bb0d90a from memory into f15
fnmadd.s f3, f22, f7, f15, dyn # perform operation
fnmadd.s f3, f22, f7, f15, rdn # perform operation
fnmadd.s f3, f22, f7, f15, rmm # perform operation
fnmadd.s f3, f22, f7, f15, rne # perform operation
fnmadd.s f3, f22, f7, f15, rtz # perform operation
fnmadd.s f3, f22, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xbf7871b244d1142b # load x3 with value 0xbf7871b244d1142b
sw x3, 0(x2) # store 0xbf7871b244d1142b in memory
flw f26, 0(x2) # load 0xbf7871b244d1142b from memory into f26
fnmadd.s f23, f16, f22, f26, dyn # perform operation
fnmadd.s f23, f16, f22, f26, rdn # perform operation
fnmadd.s f23, f16, f22, f26, rmm # perform operation
fnmadd.s f23, f16, f22, f26, rne # perform operation
fnmadd.s f23, f16, f22, f26, rtz # perform operation
fnmadd.s f23, f16, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0xc4f5c529a816b41b # load x3 with value 0xc4f5c529a816b41b
sw x3, 0(x2) # store 0xc4f5c529a816b41b in memory
flw f12, 0(x2) # load 0xc4f5c529a816b41b from memory into f12
fnmadd.s f29, f5, f6, f12, dyn # perform operation
fnmadd.s f29, f5, f6, f12, rdn # perform operation
fnmadd.s f29, f5, f6, f12, rmm # perform operation
fnmadd.s f29, f5, f6, f12, rne # perform operation
fnmadd.s f29, f5, f6, f12, rtz # perform operation
fnmadd.s f29, f5, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xadefbec3e2098a19 # load x3 with value 0xadefbec3e2098a19
sw x3, 0(x2) # store 0xadefbec3e2098a19 in memory
flw f15, 0(x2) # load 0xadefbec3e2098a19 from memory into f15
fnmadd.s f2, f8, f12, f15, dyn # perform operation
fnmadd.s f2, f8, f12, f15, rdn # perform operation
fnmadd.s f2, f8, f12, f15, rmm # perform operation
fnmadd.s f2, f8, f12, f15, rne # perform operation
fnmadd.s f2, f8, f12, f15, rtz # perform operation
fnmadd.s f2, f8, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x81a87be6e5304ea # load x3 with value 0x81a87be6e5304ea
sw x3, 0(x2) # store 0x81a87be6e5304ea in memory
flw f1, 0(x2) # load 0x81a87be6e5304ea from memory into f1
fnmadd.s f16, f15, f9, f1, dyn # perform operation
fnmadd.s f16, f15, f9, f1, rdn # perform operation
fnmadd.s f16, f15, f9, f1, rmm # perform operation
fnmadd.s f16, f15, f9, f1, rne # perform operation
fnmadd.s f16, f15, f9, f1, rtz # perform operation
fnmadd.s f16, f15, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x94e979098d79ba3 # load x3 with value 0x94e979098d79ba3
sw x3, 0(x2) # store 0x94e979098d79ba3 in memory
flw f10, 0(x2) # load 0x94e979098d79ba3 from memory into f10
fnmadd.s f18, f17, f22, f10, dyn # perform operation
fnmadd.s f18, f17, f22, f10, rdn # perform operation
fnmadd.s f18, f17, f22, f10, rmm # perform operation
fnmadd.s f18, f17, f22, f10, rne # perform operation
fnmadd.s f18, f17, f22, f10, rtz # perform operation
fnmadd.s f18, f17, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f17, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f17, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f17, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f17, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f17, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x1a7d2514d9e3397b # load x3 with value 0x1a7d2514d9e3397b
sw x3, 0(x2) # store 0x1a7d2514d9e3397b in memory
flw f9, 0(x2) # load 0x1a7d2514d9e3397b from memory into f9
fnmadd.s f27, f18, f21, f9, dyn # perform operation
fnmadd.s f27, f18, f21, f9, rdn # perform operation
fnmadd.s f27, f18, f21, f9, rmm # perform operation
fnmadd.s f27, f18, f21, f9, rne # perform operation
fnmadd.s f27, f18, f21, f9, rtz # perform operation
fnmadd.s f27, f18, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xcb877b1627a30827 # load x3 with value 0xcb877b1627a30827
sw x3, 0(x2) # store 0xcb877b1627a30827 in memory
flw f30, 0(x2) # load 0xcb877b1627a30827 from memory into f30
fnmadd.s f17, f27, f18, f30, dyn # perform operation
fnmadd.s f17, f27, f18, f30, rdn # perform operation
fnmadd.s f17, f27, f18, f30, rmm # perform operation
fnmadd.s f17, f27, f18, f30, rne # perform operation
fnmadd.s f17, f27, f18, f30, rtz # perform operation
fnmadd.s f17, f27, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f27, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x4977ad5c6357b5b6 # load x3 with value 0x4977ad5c6357b5b6
sw x3, 0(x2) # store 0x4977ad5c6357b5b6 in memory
flw f16, 0(x2) # load 0x4977ad5c6357b5b6 from memory into f16
fnmadd.s f27, f30, f24, f16, dyn # perform operation
fnmadd.s f27, f30, f24, f16, rdn # perform operation
fnmadd.s f27, f30, f24, f16, rmm # perform operation
fnmadd.s f27, f30, f24, f16, rne # perform operation
fnmadd.s f27, f30, f24, f16, rtz # perform operation
fnmadd.s f27, f30, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x100f639034f58c59 # load x3 with value 0x100f639034f58c59
sw x3, 0(x2) # store 0x100f639034f58c59 in memory
flw f12, 0(x2) # load 0x100f639034f58c59 from memory into f12
fnmadd.s f20, f15, f19, f12, dyn # perform operation
fnmadd.s f20, f15, f19, f12, rdn # perform operation
fnmadd.s f20, f15, f19, f12, rmm # perform operation
fnmadd.s f20, f15, f19, f12, rne # perform operation
fnmadd.s f20, f15, f19, f12, rtz # perform operation
fnmadd.s f20, f15, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x33cdfe095fba5ee5 # load x3 with value 0x33cdfe095fba5ee5
sw x3, 0(x2) # store 0x33cdfe095fba5ee5 in memory
flw f13, 0(x2) # load 0x33cdfe095fba5ee5 from memory into f13
fnmadd.s f5, f21, f11, f13, dyn # perform operation
fnmadd.s f5, f21, f11, f13, rdn # perform operation
fnmadd.s f5, f21, f11, f13, rmm # perform operation
fnmadd.s f5, f21, f11, f13, rne # perform operation
fnmadd.s f5, f21, f11, f13, rtz # perform operation
fnmadd.s f5, f21, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x764d51b63a73e4b8 # load x3 with value 0x764d51b63a73e4b8
sw x3, 0(x2) # store 0x764d51b63a73e4b8 in memory
flw f9, 0(x2) # load 0x764d51b63a73e4b8 from memory into f9
fnmadd.s f31, f22, f27, f9, dyn # perform operation
fnmadd.s f31, f22, f27, f9, rdn # perform operation
fnmadd.s f31, f22, f27, f9, rmm # perform operation
fnmadd.s f31, f22, f27, f9, rne # perform operation
fnmadd.s f31, f22, f27, f9, rtz # perform operation
fnmadd.s f31, f22, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f22, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xb6894301f3599d62 # load x3 with value 0xb6894301f3599d62
sw x3, 0(x2) # store 0xb6894301f3599d62 in memory
flw f5, 0(x2) # load 0xb6894301f3599d62 from memory into f5
fnmadd.s f15, f27, f2, f5, dyn # perform operation
fnmadd.s f15, f27, f2, f5, rdn # perform operation
fnmadd.s f15, f27, f2, f5, rmm # perform operation
fnmadd.s f15, f27, f2, f5, rne # perform operation
fnmadd.s f15, f27, f2, f5, rtz # perform operation
fnmadd.s f15, f27, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xfd181d86e09600ea # load x3 with value 0xfd181d86e09600ea
sw x3, 0(x2) # store 0xfd181d86e09600ea in memory
flw f27, 0(x2) # load 0xfd181d86e09600ea from memory into f27
fnmadd.s f7, f30, f12, f27, dyn # perform operation
fnmadd.s f7, f30, f12, f27, rdn # perform operation
fnmadd.s f7, f30, f12, f27, rmm # perform operation
fnmadd.s f7, f30, f12, f27, rne # perform operation
fnmadd.s f7, f30, f12, f27, rtz # perform operation
fnmadd.s f7, f30, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x177e4848aeff1220 # load x3 with value 0x177e4848aeff1220
sw x3, 0(x2) # store 0x177e4848aeff1220 in memory
flw f27, 0(x2) # load 0x177e4848aeff1220 from memory into f27
fnmadd.s f29, f23, f25, f27, dyn # perform operation
fnmadd.s f29, f23, f25, f27, rdn # perform operation
fnmadd.s f29, f23, f25, f27, rmm # perform operation
fnmadd.s f29, f23, f25, f27, rne # perform operation
fnmadd.s f29, f23, f25, f27, rtz # perform operation
fnmadd.s f29, f23, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x1b3426eedf79a7ec # load x3 with value 0x1b3426eedf79a7ec
sw x3, 0(x2) # store 0x1b3426eedf79a7ec in memory
flw f21, 0(x2) # load 0x1b3426eedf79a7ec from memory into f21
fnmadd.s f5, f13, f8, f21, dyn # perform operation
fnmadd.s f5, f13, f8, f21, rdn # perform operation
fnmadd.s f5, f13, f8, f21, rmm # perform operation
fnmadd.s f5, f13, f8, f21, rne # perform operation
fnmadd.s f5, f13, f8, f21, rtz # perform operation
fnmadd.s f5, f13, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x6a3cba257fd98ff5 # load x3 with value 0x6a3cba257fd98ff5
sw x3, 0(x2) # store 0x6a3cba257fd98ff5 in memory
flw f29, 0(x2) # load 0x6a3cba257fd98ff5 from memory into f29
fnmadd.s f5, f9, f7, f29, dyn # perform operation
fnmadd.s f5, f9, f7, f29, rdn # perform operation
fnmadd.s f5, f9, f7, f29, rmm # perform operation
fnmadd.s f5, f9, f7, f29, rne # perform operation
fnmadd.s f5, f9, f7, f29, rtz # perform operation
fnmadd.s f5, f9, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x1e4d5ffe19b05607 # load x3 with value 0x1e4d5ffe19b05607
sw x3, 0(x2) # store 0x1e4d5ffe19b05607 in memory
flw f8, 0(x2) # load 0x1e4d5ffe19b05607 from memory into f8
fnmadd.s f30, f25, f17, f8, dyn # perform operation
fnmadd.s f30, f25, f17, f8, rdn # perform operation
fnmadd.s f30, f25, f17, f8, rmm # perform operation
fnmadd.s f30, f25, f17, f8, rne # perform operation
fnmadd.s f30, f25, f17, f8, rtz # perform operation
fnmadd.s f30, f25, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xedf91b8cd5b18d27 # load x3 with value 0xedf91b8cd5b18d27
sw x3, 0(x2) # store 0xedf91b8cd5b18d27 in memory
flw f10, 0(x2) # load 0xedf91b8cd5b18d27 from memory into f10
fnmadd.s f5, f28, f27, f10, dyn # perform operation
fnmadd.s f5, f28, f27, f10, rdn # perform operation
fnmadd.s f5, f28, f27, f10, rmm # perform operation
fnmadd.s f5, f28, f27, f10, rne # perform operation
fnmadd.s f5, f28, f27, f10, rtz # perform operation
fnmadd.s f5, f28, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f28, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f28, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x2dcb557203bdc0e9 # load x3 with value 0x2dcb557203bdc0e9
sw x3, 0(x2) # store 0x2dcb557203bdc0e9 in memory
flw f5, 0(x2) # load 0x2dcb557203bdc0e9 from memory into f5
fnmadd.s f27, f10, f24, f5, dyn # perform operation
fnmadd.s f27, f10, f24, f5, rdn # perform operation
fnmadd.s f27, f10, f24, f5, rmm # perform operation
fnmadd.s f27, f10, f24, f5, rne # perform operation
fnmadd.s f27, f10, f24, f5, rtz # perform operation
fnmadd.s f27, f10, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x987167bda700008 # load x3 with value 0x987167bda700008
sw x3, 0(x2) # store 0x987167bda700008 in memory
flw f16, 0(x2) # load 0x987167bda700008 from memory into f16
fnmadd.s f31, f13, f5, f16, dyn # perform operation
fnmadd.s f31, f13, f5, f16, rdn # perform operation
fnmadd.s f31, f13, f5, f16, rmm # perform operation
fnmadd.s f31, f13, f5, f16, rne # perform operation
fnmadd.s f31, f13, f5, f16, rtz # perform operation
fnmadd.s f31, f13, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f13, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x7aa570a354aaee20 # load x3 with value 0x7aa570a354aaee20
sw x3, 0(x2) # store 0x7aa570a354aaee20 in memory
flw f18, 0(x2) # load 0x7aa570a354aaee20 from memory into f18
fnmadd.s f1, f6, f7, f18, dyn # perform operation
fnmadd.s f1, f6, f7, f18, rdn # perform operation
fnmadd.s f1, f6, f7, f18, rmm # perform operation
fnmadd.s f1, f6, f7, f18, rne # perform operation
fnmadd.s f1, f6, f7, f18, rtz # perform operation
fnmadd.s f1, f6, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x66865b5f90b9d496 # load x3 with value 0x66865b5f90b9d496
sw x3, 0(x2) # store 0x66865b5f90b9d496 in memory
flw f27, 0(x2) # load 0x66865b5f90b9d496 from memory into f27
fnmadd.s f29, f18, f10, f27, dyn # perform operation
fnmadd.s f29, f18, f10, f27, rdn # perform operation
fnmadd.s f29, f18, f10, f27, rmm # perform operation
fnmadd.s f29, f18, f10, f27, rne # perform operation
fnmadd.s f29, f18, f10, f27, rtz # perform operation
fnmadd.s f29, f18, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f18, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f18, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f18, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f18, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f18, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x32449d5dee74571f # load x3 with value 0x32449d5dee74571f
sw x3, 0(x2) # store 0x32449d5dee74571f in memory
flw f1, 0(x2) # load 0x32449d5dee74571f from memory into f1
fnmadd.s f21, f6, f8, f1, dyn # perform operation
fnmadd.s f21, f6, f8, f1, rdn # perform operation
fnmadd.s f21, f6, f8, f1, rmm # perform operation
fnmadd.s f21, f6, f8, f1, rne # perform operation
fnmadd.s f21, f6, f8, f1, rtz # perform operation
fnmadd.s f21, f6, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x5b46545d0facd24a # load x3 with value 0x5b46545d0facd24a
sw x3, 0(x2) # store 0x5b46545d0facd24a in memory
flw f21, 0(x2) # load 0x5b46545d0facd24a from memory into f21
fnmadd.s f6, f12, f1, f21, dyn # perform operation
fnmadd.s f6, f12, f1, f21, rdn # perform operation
fnmadd.s f6, f12, f1, f21, rmm # perform operation
fnmadd.s f6, f12, f1, f21, rne # perform operation
fnmadd.s f6, f12, f1, f21, rtz # perform operation
fnmadd.s f6, f12, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x1918d31223fdaf92 # load x3 with value 0x1918d31223fdaf92
sw x3, 0(x2) # store 0x1918d31223fdaf92 in memory
flw f3, 0(x2) # load 0x1918d31223fdaf92 from memory into f3
fnmadd.s f1, f29, f15, f3, dyn # perform operation
fnmadd.s f1, f29, f15, f3, rdn # perform operation
fnmadd.s f1, f29, f15, f3, rmm # perform operation
fnmadd.s f1, f29, f15, f3, rne # perform operation
fnmadd.s f1, f29, f15, f3, rtz # perform operation
fnmadd.s f1, f29, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x964888c22f4cae71 # load x3 with value 0x964888c22f4cae71
sw x3, 0(x2) # store 0x964888c22f4cae71 in memory
flw f15, 0(x2) # load 0x964888c22f4cae71 from memory into f15
fnmadd.s f27, f30, f29, f15, dyn # perform operation
fnmadd.s f27, f30, f29, f15, rdn # perform operation
fnmadd.s f27, f30, f29, f15, rmm # perform operation
fnmadd.s f27, f30, f29, f15, rne # perform operation
fnmadd.s f27, f30, f29, f15, rtz # perform operation
fnmadd.s f27, f30, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x4798beb6b90ca1f5 # load x3 with value 0x4798beb6b90ca1f5
sw x3, 0(x2) # store 0x4798beb6b90ca1f5 in memory
flw f23, 0(x2) # load 0x4798beb6b90ca1f5 from memory into f23
fnmadd.s f19, f10, f26, f23, dyn # perform operation
fnmadd.s f19, f10, f26, f23, rdn # perform operation
fnmadd.s f19, f10, f26, f23, rmm # perform operation
fnmadd.s f19, f10, f26, f23, rne # perform operation
fnmadd.s f19, f10, f26, f23, rtz # perform operation
fnmadd.s f19, f10, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x7819caa368cc96ec # load x3 with value 0x7819caa368cc96ec
sw x3, 0(x2) # store 0x7819caa368cc96ec in memory
flw f24, 0(x2) # load 0x7819caa368cc96ec from memory into f24
fnmadd.s f22, f14, f7, f24, dyn # perform operation
fnmadd.s f22, f14, f7, f24, rdn # perform operation
fnmadd.s f22, f14, f7, f24, rmm # perform operation
fnmadd.s f22, f14, f7, f24, rne # perform operation
fnmadd.s f22, f14, f7, f24, rtz # perform operation
fnmadd.s f22, f14, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x52e98c928bb8fe5f # load x3 with value 0x52e98c928bb8fe5f
sw x3, 0(x2) # store 0x52e98c928bb8fe5f in memory
flw f14, 0(x2) # load 0x52e98c928bb8fe5f from memory into f14
fnmadd.s f11, f6, f5, f14, dyn # perform operation
fnmadd.s f11, f6, f5, f14, rdn # perform operation
fnmadd.s f11, f6, f5, f14, rmm # perform operation
fnmadd.s f11, f6, f5, f14, rne # perform operation
fnmadd.s f11, f6, f5, f14, rtz # perform operation
fnmadd.s f11, f6, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f6, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xb163e5056bb249c9 # load x3 with value 0xb163e5056bb249c9
sw x3, 0(x2) # store 0xb163e5056bb249c9 in memory
flw f11, 0(x2) # load 0xb163e5056bb249c9 from memory into f11
fnmadd.s f14, f8, f30, f11, dyn # perform operation
fnmadd.s f14, f8, f30, f11, rdn # perform operation
fnmadd.s f14, f8, f30, f11, rmm # perform operation
fnmadd.s f14, f8, f30, f11, rne # perform operation
fnmadd.s f14, f8, f30, f11, rtz # perform operation
fnmadd.s f14, f8, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x4c1a3e38cf42ebd5 # load x3 with value 0x4c1a3e38cf42ebd5
sw x3, 0(x2) # store 0x4c1a3e38cf42ebd5 in memory
flw f25, 0(x2) # load 0x4c1a3e38cf42ebd5 from memory into f25
fnmadd.s f21, f8, f15, f25, dyn # perform operation
fnmadd.s f21, f8, f15, f25, rdn # perform operation
fnmadd.s f21, f8, f15, f25, rmm # perform operation
fnmadd.s f21, f8, f15, f25, rne # perform operation
fnmadd.s f21, f8, f15, f25, rtz # perform operation
fnmadd.s f21, f8, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f8, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x8fa6c82a33a0c2c0 # load x3 with value 0x8fa6c82a33a0c2c0
sw x3, 0(x2) # store 0x8fa6c82a33a0c2c0 in memory
flw f26, 0(x2) # load 0x8fa6c82a33a0c2c0 from memory into f26
fnmadd.s f1, f19, f2, f26, dyn # perform operation
fnmadd.s f1, f19, f2, f26, rdn # perform operation
fnmadd.s f1, f19, f2, f26, rmm # perform operation
fnmadd.s f1, f19, f2, f26, rne # perform operation
fnmadd.s f1, f19, f2, f26, rtz # perform operation
fnmadd.s f1, f19, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xad2c9d4727d7f522 # load x3 with value 0xad2c9d4727d7f522
sw x3, 0(x2) # store 0xad2c9d4727d7f522 in memory
flw f11, 0(x2) # load 0xad2c9d4727d7f522 from memory into f11
fnmadd.s f21, f10, f15, f11, dyn # perform operation
fnmadd.s f21, f10, f15, f11, rdn # perform operation
fnmadd.s f21, f10, f15, f11, rmm # perform operation
fnmadd.s f21, f10, f15, f11, rne # perform operation
fnmadd.s f21, f10, f15, f11, rtz # perform operation
fnmadd.s f21, f10, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xf81694ee6f2796ba # load x3 with value 0xf81694ee6f2796ba
sw x3, 0(x2) # store 0xf81694ee6f2796ba in memory
flw f23, 0(x2) # load 0xf81694ee6f2796ba from memory into f23
fnmadd.s f6, f2, f17, f23, dyn # perform operation
fnmadd.s f6, f2, f17, f23, rdn # perform operation
fnmadd.s f6, f2, f17, f23, rmm # perform operation
fnmadd.s f6, f2, f17, f23, rne # perform operation
fnmadd.s f6, f2, f17, f23, rtz # perform operation
fnmadd.s f6, f2, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xde282b862b6b789f # load x3 with value 0xde282b862b6b789f
sw x3, 0(x2) # store 0xde282b862b6b789f in memory
flw f29, 0(x2) # load 0xde282b862b6b789f from memory into f29
fnmadd.s f20, f6, f1, f29, dyn # perform operation
fnmadd.s f20, f6, f1, f29, rdn # perform operation
fnmadd.s f20, f6, f1, f29, rmm # perform operation
fnmadd.s f20, f6, f1, f29, rne # perform operation
fnmadd.s f20, f6, f1, f29, rtz # perform operation
fnmadd.s f20, f6, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x2ab1ec7c6dea69be # load x3 with value 0x2ab1ec7c6dea69be
sw x3, 0(x2) # store 0x2ab1ec7c6dea69be in memory
flw f27, 0(x2) # load 0x2ab1ec7c6dea69be from memory into f27
fnmadd.s f13, f9, f14, f27, dyn # perform operation
fnmadd.s f13, f9, f14, f27, rdn # perform operation
fnmadd.s f13, f9, f14, f27, rmm # perform operation
fnmadd.s f13, f9, f14, f27, rne # perform operation
fnmadd.s f13, f9, f14, f27, rtz # perform operation
fnmadd.s f13, f9, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x79811aa0f635f256 # load x3 with value 0x79811aa0f635f256
sw x3, 0(x2) # store 0x79811aa0f635f256 in memory
flw f27, 0(x2) # load 0x79811aa0f635f256 from memory into f27
fnmadd.s f18, f15, f24, f27, dyn # perform operation
fnmadd.s f18, f15, f24, f27, rdn # perform operation
fnmadd.s f18, f15, f24, f27, rmm # perform operation
fnmadd.s f18, f15, f24, f27, rne # perform operation
fnmadd.s f18, f15, f24, f27, rtz # perform operation
fnmadd.s f18, f15, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f15, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x7bea4b820efad4d0 # load x3 with value 0x7bea4b820efad4d0
sw x3, 0(x2) # store 0x7bea4b820efad4d0 in memory
flw f10, 0(x2) # load 0x7bea4b820efad4d0 from memory into f10
fnmadd.s f15, f2, f30, f10, dyn # perform operation
fnmadd.s f15, f2, f30, f10, rdn # perform operation
fnmadd.s f15, f2, f30, f10, rmm # perform operation
fnmadd.s f15, f2, f30, f10, rne # perform operation
fnmadd.s f15, f2, f30, f10, rtz # perform operation
fnmadd.s f15, f2, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x868e02b52b776245 # load x3 with value 0x868e02b52b776245
sw x3, 0(x2) # store 0x868e02b52b776245 in memory
flw f27, 0(x2) # load 0x868e02b52b776245 from memory into f27
fnmadd.s f5, f19, f2, f27, dyn # perform operation
fnmadd.s f5, f19, f2, f27, rdn # perform operation
fnmadd.s f5, f19, f2, f27, rmm # perform operation
fnmadd.s f5, f19, f2, f27, rne # perform operation
fnmadd.s f5, f19, f2, f27, rtz # perform operation
fnmadd.s f5, f19, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xb4724941525b7a6b # load x3 with value 0xb4724941525b7a6b
sw x3, 0(x2) # store 0xb4724941525b7a6b in memory
flw f10, 0(x2) # load 0xb4724941525b7a6b from memory into f10
fnmadd.s f28, f16, f20, f10, dyn # perform operation
fnmadd.s f28, f16, f20, f10, rdn # perform operation
fnmadd.s f28, f16, f20, f10, rmm # perform operation
fnmadd.s f28, f16, f20, f10, rne # perform operation
fnmadd.s f28, f16, f20, f10, rtz # perform operation
fnmadd.s f28, f16, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x27cb68bc4852ab56 # load x3 with value 0x27cb68bc4852ab56
sw x3, 0(x2) # store 0x27cb68bc4852ab56 in memory
flw f14, 0(x2) # load 0x27cb68bc4852ab56 from memory into f14
fnmadd.s f28, f20, f10, f14, dyn # perform operation
fnmadd.s f28, f20, f10, f14, rdn # perform operation
fnmadd.s f28, f20, f10, f14, rmm # perform operation
fnmadd.s f28, f20, f10, f14, rne # perform operation
fnmadd.s f28, f20, f10, f14, rtz # perform operation
fnmadd.s f28, f20, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x290eeb301c581c7 # load x3 with value 0x290eeb301c581c7
sw x3, 0(x2) # store 0x290eeb301c581c7 in memory
flw f13, 0(x2) # load 0x290eeb301c581c7 from memory into f13
fnmadd.s f16, f8, f24, f13, dyn # perform operation
fnmadd.s f16, f8, f24, f13, rdn # perform operation
fnmadd.s f16, f8, f24, f13, rmm # perform operation
fnmadd.s f16, f8, f24, f13, rne # perform operation
fnmadd.s f16, f8, f24, f13, rtz # perform operation
fnmadd.s f16, f8, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x8f011bab96d9750 # load x3 with value 0x8f011bab96d9750
sw x3, 0(x2) # store 0x8f011bab96d9750 in memory
flw f25, 0(x2) # load 0x8f011bab96d9750 from memory into f25
fnmadd.s f19, f18, f2, f25, dyn # perform operation
fnmadd.s f19, f18, f2, f25, rdn # perform operation
fnmadd.s f19, f18, f2, f25, rmm # perform operation
fnmadd.s f19, f18, f2, f25, rne # perform operation
fnmadd.s f19, f18, f2, f25, rtz # perform operation
fnmadd.s f19, f18, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x4655cbaf171f3552 # load x3 with value 0x4655cbaf171f3552
sw x3, 0(x2) # store 0x4655cbaf171f3552 in memory
flw f31, 0(x2) # load 0x4655cbaf171f3552 from memory into f31
fnmadd.s f8, f23, f1, f31, dyn # perform operation
fnmadd.s f8, f23, f1, f31, rdn # perform operation
fnmadd.s f8, f23, f1, f31, rmm # perform operation
fnmadd.s f8, f23, f1, f31, rne # perform operation
fnmadd.s f8, f23, f1, f31, rtz # perform operation
fnmadd.s f8, f23, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x7fdea3948d32d435 # load x3 with value 0x7fdea3948d32d435
sw x3, 0(x2) # store 0x7fdea3948d32d435 in memory
flw f24, 0(x2) # load 0x7fdea3948d32d435 from memory into f24
fnmadd.s f13, f8, f26, f24, dyn # perform operation
fnmadd.s f13, f8, f26, f24, rdn # perform operation
fnmadd.s f13, f8, f26, f24, rmm # perform operation
fnmadd.s f13, f8, f26, f24, rne # perform operation
fnmadd.s f13, f8, f26, f24, rtz # perform operation
fnmadd.s f13, f8, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xf92cdaf7ad462455 # load x3 with value 0xf92cdaf7ad462455
sw x3, 0(x2) # store 0xf92cdaf7ad462455 in memory
flw f1, 0(x2) # load 0xf92cdaf7ad462455 from memory into f1
fnmadd.s f17, f3, f10, f1, dyn # perform operation
fnmadd.s f17, f3, f10, f1, rdn # perform operation
fnmadd.s f17, f3, f10, f1, rmm # perform operation
fnmadd.s f17, f3, f10, f1, rne # perform operation
fnmadd.s f17, f3, f10, f1, rtz # perform operation
fnmadd.s f17, f3, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f3, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x6a29619bcd9dae7a # load x3 with value 0x6a29619bcd9dae7a
sw x3, 0(x2) # store 0x6a29619bcd9dae7a in memory
flw f14, 0(x2) # load 0x6a29619bcd9dae7a from memory into f14
fnmadd.s f13, f7, f11, f14, dyn # perform operation
fnmadd.s f13, f7, f11, f14, rdn # perform operation
fnmadd.s f13, f7, f11, f14, rmm # perform operation
fnmadd.s f13, f7, f11, f14, rne # perform operation
fnmadd.s f13, f7, f11, f14, rtz # perform operation
fnmadd.s f13, f7, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x7ff2496728f09c78 # load x3 with value 0x7ff2496728f09c78
sw x3, 0(x2) # store 0x7ff2496728f09c78 in memory
flw f8, 0(x2) # load 0x7ff2496728f09c78 from memory into f8
fnmadd.s f18, f20, f3, f8, dyn # perform operation
fnmadd.s f18, f20, f3, f8, rdn # perform operation
fnmadd.s f18, f20, f3, f8, rmm # perform operation
fnmadd.s f18, f20, f3, f8, rne # perform operation
fnmadd.s f18, f20, f3, f8, rtz # perform operation
fnmadd.s f18, f20, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x7c586c8342ac23d1 # load x3 with value 0x7c586c8342ac23d1
sw x3, 0(x2) # store 0x7c586c8342ac23d1 in memory
flw f5, 0(x2) # load 0x7c586c8342ac23d1 from memory into f5
fnmadd.s f24, f8, f9, f5, dyn # perform operation
fnmadd.s f24, f8, f9, f5, rdn # perform operation
fnmadd.s f24, f8, f9, f5, rmm # perform operation
fnmadd.s f24, f8, f9, f5, rne # perform operation
fnmadd.s f24, f8, f9, f5, rtz # perform operation
fnmadd.s f24, f8, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f8, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x2de58d45fd329e78 # load x3 with value 0x2de58d45fd329e78
sw x3, 0(x2) # store 0x2de58d45fd329e78 in memory
flw f22, 0(x2) # load 0x2de58d45fd329e78 from memory into f22
fnmadd.s f31, f30, f6, f22, dyn # perform operation
fnmadd.s f31, f30, f6, f22, rdn # perform operation
fnmadd.s f31, f30, f6, f22, rmm # perform operation
fnmadd.s f31, f30, f6, f22, rne # perform operation
fnmadd.s f31, f30, f6, f22, rtz # perform operation
fnmadd.s f31, f30, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0xcb1b664f257ef164 # load x3 with value 0xcb1b664f257ef164
sw x3, 0(x2) # store 0xcb1b664f257ef164 in memory
flw f24, 0(x2) # load 0xcb1b664f257ef164 from memory into f24
fnmadd.s f15, f6, f16, f24, dyn # perform operation
fnmadd.s f15, f6, f16, f24, rdn # perform operation
fnmadd.s f15, f6, f16, f24, rmm # perform operation
fnmadd.s f15, f6, f16, f24, rne # perform operation
fnmadd.s f15, f6, f16, f24, rtz # perform operation
fnmadd.s f15, f6, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x9faa466efcdc7604 # load x3 with value 0x9faa466efcdc7604
sw x3, 0(x2) # store 0x9faa466efcdc7604 in memory
flw f23, 0(x2) # load 0x9faa466efcdc7604 from memory into f23
fnmadd.s f3, f24, f1, f23, dyn # perform operation
fnmadd.s f3, f24, f1, f23, rdn # perform operation
fnmadd.s f3, f24, f1, f23, rmm # perform operation
fnmadd.s f3, f24, f1, f23, rne # perform operation
fnmadd.s f3, f24, f1, f23, rtz # perform operation
fnmadd.s f3, f24, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x5772556d6a9fb81f # load x3 with value 0x5772556d6a9fb81f
sw x3, 0(x2) # store 0x5772556d6a9fb81f in memory
flw f8, 0(x2) # load 0x5772556d6a9fb81f from memory into f8
fnmadd.s f18, f16, f27, f8, dyn # perform operation
fnmadd.s f18, f16, f27, f8, rdn # perform operation
fnmadd.s f18, f16, f27, f8, rmm # perform operation
fnmadd.s f18, f16, f27, f8, rne # perform operation
fnmadd.s f18, f16, f27, f8, rtz # perform operation
fnmadd.s f18, f16, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x3ac5dbfc61a99528 # load x3 with value 0x3ac5dbfc61a99528
sw x3, 0(x2) # store 0x3ac5dbfc61a99528 in memory
flw f8, 0(x2) # load 0x3ac5dbfc61a99528 from memory into f8
fnmadd.s f10, f31, f16, f8, dyn # perform operation
fnmadd.s f10, f31, f16, f8, rdn # perform operation
fnmadd.s f10, f31, f16, f8, rmm # perform operation
fnmadd.s f10, f31, f16, f8, rne # perform operation
fnmadd.s f10, f31, f16, f8, rtz # perform operation
fnmadd.s f10, f31, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f31, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xe680f7cf796abe5a # load x3 with value 0xe680f7cf796abe5a
sw x3, 0(x2) # store 0xe680f7cf796abe5a in memory
flw f9, 0(x2) # load 0xe680f7cf796abe5a from memory into f9
fnmadd.s f22, f19, f7, f9, dyn # perform operation
fnmadd.s f22, f19, f7, f9, rdn # perform operation
fnmadd.s f22, f19, f7, f9, rmm # perform operation
fnmadd.s f22, f19, f7, f9, rne # perform operation
fnmadd.s f22, f19, f7, f9, rtz # perform operation
fnmadd.s f22, f19, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xdd92a8c50376926c # load x3 with value 0xdd92a8c50376926c
sw x3, 0(x2) # store 0xdd92a8c50376926c in memory
flw f11, 0(x2) # load 0xdd92a8c50376926c from memory into f11
fnmadd.s f3, f31, f28, f11, dyn # perform operation
fnmadd.s f3, f31, f28, f11, rdn # perform operation
fnmadd.s f3, f31, f28, f11, rmm # perform operation
fnmadd.s f3, f31, f28, f11, rne # perform operation
fnmadd.s f3, f31, f28, f11, rtz # perform operation
fnmadd.s f3, f31, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xcb4bbf6254f4a1c # load x3 with value 0xcb4bbf6254f4a1c
sw x3, 0(x2) # store 0xcb4bbf6254f4a1c in memory
flw f31, 0(x2) # load 0xcb4bbf6254f4a1c from memory into f31
fnmadd.s f29, f26, f19, f31, dyn # perform operation
fnmadd.s f29, f26, f19, f31, rdn # perform operation
fnmadd.s f29, f26, f19, f31, rmm # perform operation
fnmadd.s f29, f26, f19, f31, rne # perform operation
fnmadd.s f29, f26, f19, f31, rtz # perform operation
fnmadd.s f29, f26, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x46577d8b6b33bb21 # load x3 with value 0x46577d8b6b33bb21
sw x3, 0(x2) # store 0x46577d8b6b33bb21 in memory
flw f5, 0(x2) # load 0x46577d8b6b33bb21 from memory into f5
fnmadd.s f2, f16, f31, f5, dyn # perform operation
fnmadd.s f2, f16, f31, f5, rdn # perform operation
fnmadd.s f2, f16, f31, f5, rmm # perform operation
fnmadd.s f2, f16, f31, f5, rne # perform operation
fnmadd.s f2, f16, f31, f5, rtz # perform operation
fnmadd.s f2, f16, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xf3fccc0d01ca9701 # load x3 with value 0xf3fccc0d01ca9701
sw x3, 0(x2) # store 0xf3fccc0d01ca9701 in memory
flw f16, 0(x2) # load 0xf3fccc0d01ca9701 from memory into f16
fnmadd.s f23, f29, f5, f16, dyn # perform operation
fnmadd.s f23, f29, f5, f16, rdn # perform operation
fnmadd.s f23, f29, f5, f16, rmm # perform operation
fnmadd.s f23, f29, f5, f16, rne # perform operation
fnmadd.s f23, f29, f5, f16, rtz # perform operation
fnmadd.s f23, f29, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xd4915ac0793d18fd # load x3 with value 0xd4915ac0793d18fd
sw x3, 0(x2) # store 0xd4915ac0793d18fd in memory
flw f2, 0(x2) # load 0xd4915ac0793d18fd from memory into f2
fnmadd.s f9, f6, f28, f2, dyn # perform operation
fnmadd.s f9, f6, f28, f2, rdn # perform operation
fnmadd.s f9, f6, f28, f2, rmm # perform operation
fnmadd.s f9, f6, f28, f2, rne # perform operation
fnmadd.s f9, f6, f28, f2, rtz # perform operation
fnmadd.s f9, f6, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f6, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x7aad187a2212e6d6 # load x3 with value 0x7aad187a2212e6d6
sw x3, 0(x2) # store 0x7aad187a2212e6d6 in memory
flw f20, 0(x2) # load 0x7aad187a2212e6d6 from memory into f20
fnmadd.s f15, f2, f1, f20, dyn # perform operation
fnmadd.s f15, f2, f1, f20, rdn # perform operation
fnmadd.s f15, f2, f1, f20, rmm # perform operation
fnmadd.s f15, f2, f1, f20, rne # perform operation
fnmadd.s f15, f2, f1, f20, rtz # perform operation
fnmadd.s f15, f2, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x916fdf3339b8cbc2 # load x3 with value 0x916fdf3339b8cbc2
sw x3, 0(x2) # store 0x916fdf3339b8cbc2 in memory
flw f14, 0(x2) # load 0x916fdf3339b8cbc2 from memory into f14
fnmadd.s f25, f5, f11, f14, dyn # perform operation
fnmadd.s f25, f5, f11, f14, rdn # perform operation
fnmadd.s f25, f5, f11, f14, rmm # perform operation
fnmadd.s f25, f5, f11, f14, rne # perform operation
fnmadd.s f25, f5, f11, f14, rtz # perform operation
fnmadd.s f25, f5, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xed8b3309f7f370aa # load x3 with value 0xed8b3309f7f370aa
sw x3, 0(x2) # store 0xed8b3309f7f370aa in memory
flw f23, 0(x2) # load 0xed8b3309f7f370aa from memory into f23
fnmadd.s f2, f25, f14, f23, dyn # perform operation
fnmadd.s f2, f25, f14, f23, rdn # perform operation
fnmadd.s f2, f25, f14, f23, rmm # perform operation
fnmadd.s f2, f25, f14, f23, rne # perform operation
fnmadd.s f2, f25, f14, f23, rtz # perform operation
fnmadd.s f2, f25, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f25, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f25, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f25, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f25, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f25, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xddc72db4b15c824 # load x3 with value 0xddc72db4b15c824
sw x3, 0(x2) # store 0xddc72db4b15c824 in memory
flw f27, 0(x2) # load 0xddc72db4b15c824 from memory into f27
fnmadd.s f8, f3, f11, f27, dyn # perform operation
fnmadd.s f8, f3, f11, f27, rdn # perform operation
fnmadd.s f8, f3, f11, f27, rmm # perform operation
fnmadd.s f8, f3, f11, f27, rne # perform operation
fnmadd.s f8, f3, f11, f27, rtz # perform operation
fnmadd.s f8, f3, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f3, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f3, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f3, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f3, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f3, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x9d7e7e83c7a74f2d # load x3 with value 0x9d7e7e83c7a74f2d
sw x3, 0(x2) # store 0x9d7e7e83c7a74f2d in memory
flw f3, 0(x2) # load 0x9d7e7e83c7a74f2d from memory into f3
fnmadd.s f5, f11, f17, f3, dyn # perform operation
fnmadd.s f5, f11, f17, f3, rdn # perform operation
fnmadd.s f5, f11, f17, f3, rmm # perform operation
fnmadd.s f5, f11, f17, f3, rne # perform operation
fnmadd.s f5, f11, f17, f3, rtz # perform operation
fnmadd.s f5, f11, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xb7f7b875bc22bdea # load x3 with value 0xb7f7b875bc22bdea
sw x3, 0(x2) # store 0xb7f7b875bc22bdea in memory
flw f5, 0(x2) # load 0xb7f7b875bc22bdea from memory into f5
fnmadd.s f6, f20, f22, f5, dyn # perform operation
fnmadd.s f6, f20, f22, f5, rdn # perform operation
fnmadd.s f6, f20, f22, f5, rmm # perform operation
fnmadd.s f6, f20, f22, f5, rne # perform operation
fnmadd.s f6, f20, f22, f5, rtz # perform operation
fnmadd.s f6, f20, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f20, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xd8ea7ff2af774491 # load x3 with value 0xd8ea7ff2af774491
sw x3, 0(x2) # store 0xd8ea7ff2af774491 in memory
flw f13, 0(x2) # load 0xd8ea7ff2af774491 from memory into f13
fnmadd.s f8, f18, f5, f13, dyn # perform operation
fnmadd.s f8, f18, f5, f13, rdn # perform operation
fnmadd.s f8, f18, f5, f13, rmm # perform operation
fnmadd.s f8, f18, f5, f13, rne # perform operation
fnmadd.s f8, f18, f5, f13, rtz # perform operation
fnmadd.s f8, f18, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x90446050cd96fb41 # load x3 with value 0x90446050cd96fb41
sw x3, 0(x2) # store 0x90446050cd96fb41 in memory
flw f16, 0(x2) # load 0x90446050cd96fb41 from memory into f16
fnmadd.s f6, f13, f3, f16, dyn # perform operation
fnmadd.s f6, f13, f3, f16, rdn # perform operation
fnmadd.s f6, f13, f3, f16, rmm # perform operation
fnmadd.s f6, f13, f3, f16, rne # perform operation
fnmadd.s f6, f13, f3, f16, rtz # perform operation
fnmadd.s f6, f13, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xd4f1212b43b36e2 # load x3 with value 0xd4f1212b43b36e2
sw x3, 0(x2) # store 0xd4f1212b43b36e2 in memory
flw f24, 0(x2) # load 0xd4f1212b43b36e2 from memory into f24
fnmadd.s f8, f31, f30, f24, dyn # perform operation
fnmadd.s f8, f31, f30, f24, rdn # perform operation
fnmadd.s f8, f31, f30, f24, rmm # perform operation
fnmadd.s f8, f31, f30, f24, rne # perform operation
fnmadd.s f8, f31, f30, f24, rtz # perform operation
fnmadd.s f8, f31, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x1945bb28030ef19f # load x3 with value 0x1945bb28030ef19f
sw x3, 0(x2) # store 0x1945bb28030ef19f in memory
flw f18, 0(x2) # load 0x1945bb28030ef19f from memory into f18
fnmadd.s f26, f30, f8, f18, dyn # perform operation
fnmadd.s f26, f30, f8, f18, rdn # perform operation
fnmadd.s f26, f30, f8, f18, rmm # perform operation
fnmadd.s f26, f30, f8, f18, rne # perform operation
fnmadd.s f26, f30, f8, f18, rtz # perform operation
fnmadd.s f26, f30, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f30, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x96154127f9debc74 # load x3 with value 0x96154127f9debc74
sw x3, 0(x2) # store 0x96154127f9debc74 in memory
flw f28, 0(x2) # load 0x96154127f9debc74 from memory into f28
fnmadd.s f6, f14, f24, f28, dyn # perform operation
fnmadd.s f6, f14, f24, f28, rdn # perform operation
fnmadd.s f6, f14, f24, f28, rmm # perform operation
fnmadd.s f6, f14, f24, f28, rne # perform operation
fnmadd.s f6, f14, f24, f28, rtz # perform operation
fnmadd.s f6, f14, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f14, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x3c31977c2a7f8058 # load x3 with value 0x3c31977c2a7f8058
sw x3, 0(x2) # store 0x3c31977c2a7f8058 in memory
flw f2, 0(x2) # load 0x3c31977c2a7f8058 from memory into f2
fnmadd.s f23, f29, f31, f2, dyn # perform operation
fnmadd.s f23, f29, f31, f2, rdn # perform operation
fnmadd.s f23, f29, f31, f2, rmm # perform operation
fnmadd.s f23, f29, f31, f2, rne # perform operation
fnmadd.s f23, f29, f31, f2, rtz # perform operation
fnmadd.s f23, f29, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x20c33e5b9d243c0b # load x3 with value 0x20c33e5b9d243c0b
sw x3, 0(x2) # store 0x20c33e5b9d243c0b in memory
flw f10, 0(x2) # load 0x20c33e5b9d243c0b from memory into f10
fnmadd.s f6, f3, f2, f10, dyn # perform operation
fnmadd.s f6, f3, f2, f10, rdn # perform operation
fnmadd.s f6, f3, f2, f10, rmm # perform operation
fnmadd.s f6, f3, f2, f10, rne # perform operation
fnmadd.s f6, f3, f2, f10, rtz # perform operation
fnmadd.s f6, f3, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x9b14c3d358974d80 # load x3 with value 0x9b14c3d358974d80
sw x3, 0(x2) # store 0x9b14c3d358974d80 in memory
flw f24, 0(x2) # load 0x9b14c3d358974d80 from memory into f24
fnmadd.s f11, f8, f3, f24, dyn # perform operation
fnmadd.s f11, f8, f3, f24, rdn # perform operation
fnmadd.s f11, f8, f3, f24, rmm # perform operation
fnmadd.s f11, f8, f3, f24, rne # perform operation
fnmadd.s f11, f8, f3, f24, rtz # perform operation
fnmadd.s f11, f8, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x2f09c8841db51194 # load x3 with value 0x2f09c8841db51194
sw x3, 0(x2) # store 0x2f09c8841db51194 in memory
flw f18, 0(x2) # load 0x2f09c8841db51194 from memory into f18
fnmadd.s f23, f15, f7, f18, dyn # perform operation
fnmadd.s f23, f15, f7, f18, rdn # perform operation
fnmadd.s f23, f15, f7, f18, rmm # perform operation
fnmadd.s f23, f15, f7, f18, rne # perform operation
fnmadd.s f23, f15, f7, f18, rtz # perform operation
fnmadd.s f23, f15, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xca471a856e52453c # load x3 with value 0xca471a856e52453c
sw x3, 0(x2) # store 0xca471a856e52453c in memory
flw f21, 0(x2) # load 0xca471a856e52453c from memory into f21
fnmadd.s f23, f1, f26, f21, dyn # perform operation
fnmadd.s f23, f1, f26, f21, rdn # perform operation
fnmadd.s f23, f1, f26, f21, rmm # perform operation
fnmadd.s f23, f1, f26, f21, rne # perform operation
fnmadd.s f23, f1, f26, f21, rtz # perform operation
fnmadd.s f23, f1, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xeb90fb441a014c8a # load x3 with value 0xeb90fb441a014c8a
sw x3, 0(x2) # store 0xeb90fb441a014c8a in memory
flw f25, 0(x2) # load 0xeb90fb441a014c8a from memory into f25
fnmadd.s f26, f23, f11, f25, dyn # perform operation
fnmadd.s f26, f23, f11, f25, rdn # perform operation
fnmadd.s f26, f23, f11, f25, rmm # perform operation
fnmadd.s f26, f23, f11, f25, rne # perform operation
fnmadd.s f26, f23, f11, f25, rtz # perform operation
fnmadd.s f26, f23, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x82f2f1d83a70755e # load x3 with value 0x82f2f1d83a70755e
sw x3, 0(x2) # store 0x82f2f1d83a70755e in memory
flw f17, 0(x2) # load 0x82f2f1d83a70755e from memory into f17
fnmadd.s f22, f27, f19, f17, dyn # perform operation
fnmadd.s f22, f27, f19, f17, rdn # perform operation
fnmadd.s f22, f27, f19, f17, rmm # perform operation
fnmadd.s f22, f27, f19, f17, rne # perform operation
fnmadd.s f22, f27, f19, f17, rtz # perform operation
fnmadd.s f22, f27, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f27, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xf1c702a79197c626 # load x3 with value 0xf1c702a79197c626
sw x3, 0(x2) # store 0xf1c702a79197c626 in memory
flw f7, 0(x2) # load 0xf1c702a79197c626 from memory into f7
fnmadd.s f6, f8, f9, f7, dyn # perform operation
fnmadd.s f6, f8, f9, f7, rdn # perform operation
fnmadd.s f6, f8, f9, f7, rmm # perform operation
fnmadd.s f6, f8, f9, f7, rne # perform operation
fnmadd.s f6, f8, f9, f7, rtz # perform operation
fnmadd.s f6, f8, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f8, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x4f0beec1ced90e86 # load x3 with value 0x4f0beec1ced90e86
sw x3, 0(x2) # store 0x4f0beec1ced90e86 in memory
flw f9, 0(x2) # load 0x4f0beec1ced90e86 from memory into f9
fnmadd.s f27, f14, f20, f9, dyn # perform operation
fnmadd.s f27, f14, f20, f9, rdn # perform operation
fnmadd.s f27, f14, f20, f9, rmm # perform operation
fnmadd.s f27, f14, f20, f9, rne # perform operation
fnmadd.s f27, f14, f20, f9, rtz # perform operation
fnmadd.s f27, f14, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xecb26a1d09fab91a # load x3 with value 0xecb26a1d09fab91a
sw x3, 0(x2) # store 0xecb26a1d09fab91a in memory
flw f25, 0(x2) # load 0xecb26a1d09fab91a from memory into f25
fnmadd.s f22, f3, f11, f25, dyn # perform operation
fnmadd.s f22, f3, f11, f25, rdn # perform operation
fnmadd.s f22, f3, f11, f25, rmm # perform operation
fnmadd.s f22, f3, f11, f25, rne # perform operation
fnmadd.s f22, f3, f11, f25, rtz # perform operation
fnmadd.s f22, f3, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x2057c234c4fb387d # load x3 with value 0x2057c234c4fb387d
sw x3, 0(x2) # store 0x2057c234c4fb387d in memory
flw f14, 0(x2) # load 0x2057c234c4fb387d from memory into f14
fnmadd.s f23, f25, f2, f14, dyn # perform operation
fnmadd.s f23, f25, f2, f14, rdn # perform operation
fnmadd.s f23, f25, f2, f14, rmm # perform operation
fnmadd.s f23, f25, f2, f14, rne # perform operation
fnmadd.s f23, f25, f2, f14, rtz # perform operation
fnmadd.s f23, f25, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x5862f95b47075f63 # load x3 with value 0x5862f95b47075f63
sw x3, 0(x2) # store 0x5862f95b47075f63 in memory
flw f31, 0(x2) # load 0x5862f95b47075f63 from memory into f31
fnmadd.s f25, f8, f28, f31, dyn # perform operation
fnmadd.s f25, f8, f28, f31, rdn # perform operation
fnmadd.s f25, f8, f28, f31, rmm # perform operation
fnmadd.s f25, f8, f28, f31, rne # perform operation
fnmadd.s f25, f8, f28, f31, rtz # perform operation
fnmadd.s f25, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x1f3b6b8993c6ee0b # load x3 with value 0x1f3b6b8993c6ee0b
sw x3, 0(x2) # store 0x1f3b6b8993c6ee0b in memory
flw f13, 0(x2) # load 0x1f3b6b8993c6ee0b from memory into f13
fnmadd.s f22, f24, f26, f13, dyn # perform operation
fnmadd.s f22, f24, f26, f13, rdn # perform operation
fnmadd.s f22, f24, f26, f13, rmm # perform operation
fnmadd.s f22, f24, f26, f13, rne # perform operation
fnmadd.s f22, f24, f26, f13, rtz # perform operation
fnmadd.s f22, f24, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xbf04dc3e341d8b01 # load x3 with value 0xbf04dc3e341d8b01
sw x3, 0(x2) # store 0xbf04dc3e341d8b01 in memory
flw f14, 0(x2) # load 0xbf04dc3e341d8b01 from memory into f14
fnmadd.s f20, f16, f11, f14, dyn # perform operation
fnmadd.s f20, f16, f11, f14, rdn # perform operation
fnmadd.s f20, f16, f11, f14, rmm # perform operation
fnmadd.s f20, f16, f11, f14, rne # perform operation
fnmadd.s f20, f16, f11, f14, rtz # perform operation
fnmadd.s f20, f16, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x1543f3ba9b1e01f5 # load x3 with value 0x1543f3ba9b1e01f5
sw x3, 0(x2) # store 0x1543f3ba9b1e01f5 in memory
flw f28, 0(x2) # load 0x1543f3ba9b1e01f5 from memory into f28
fnmadd.s f12, f15, f31, f28, dyn # perform operation
fnmadd.s f12, f15, f31, f28, rdn # perform operation
fnmadd.s f12, f15, f31, f28, rmm # perform operation
fnmadd.s f12, f15, f31, f28, rne # perform operation
fnmadd.s f12, f15, f31, f28, rtz # perform operation
fnmadd.s f12, f15, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x7bfb31c2a2e1eef2 # load x3 with value 0x7bfb31c2a2e1eef2
sw x3, 0(x2) # store 0x7bfb31c2a2e1eef2 in memory
flw f10, 0(x2) # load 0x7bfb31c2a2e1eef2 from memory into f10
fnmadd.s f12, f5, f6, f10, dyn # perform operation
fnmadd.s f12, f5, f6, f10, rdn # perform operation
fnmadd.s f12, f5, f6, f10, rmm # perform operation
fnmadd.s f12, f5, f6, f10, rne # perform operation
fnmadd.s f12, f5, f6, f10, rtz # perform operation
fnmadd.s f12, f5, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xa87b83f0307c4abd # load x3 with value 0xa87b83f0307c4abd
sw x3, 0(x2) # store 0xa87b83f0307c4abd in memory
flw f1, 0(x2) # load 0xa87b83f0307c4abd from memory into f1
fnmadd.s f14, f17, f19, f1, dyn # perform operation
fnmadd.s f14, f17, f19, f1, rdn # perform operation
fnmadd.s f14, f17, f19, f1, rmm # perform operation
fnmadd.s f14, f17, f19, f1, rne # perform operation
fnmadd.s f14, f17, f19, f1, rtz # perform operation
fnmadd.s f14, f17, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f17, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x34c772072be2dfde # load x3 with value 0x34c772072be2dfde
sw x3, 0(x2) # store 0x34c772072be2dfde in memory
flw f20, 0(x2) # load 0x34c772072be2dfde from memory into f20
fnmadd.s f8, f30, f10, f20, dyn # perform operation
fnmadd.s f8, f30, f10, f20, rdn # perform operation
fnmadd.s f8, f30, f10, f20, rmm # perform operation
fnmadd.s f8, f30, f10, f20, rne # perform operation
fnmadd.s f8, f30, f10, f20, rtz # perform operation
fnmadd.s f8, f30, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f30, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0xbb124cf55a503c51 # load x3 with value 0xbb124cf55a503c51
sw x3, 0(x2) # store 0xbb124cf55a503c51 in memory
flw f23, 0(x2) # load 0xbb124cf55a503c51 from memory into f23
fnmadd.s f25, f22, f10, f23, dyn # perform operation
fnmadd.s f25, f22, f10, f23, rdn # perform operation
fnmadd.s f25, f22, f10, f23, rmm # perform operation
fnmadd.s f25, f22, f10, f23, rne # perform operation
fnmadd.s f25, f22, f10, f23, rtz # perform operation
fnmadd.s f25, f22, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x2d16882cebccc899 # load x3 with value 0x2d16882cebccc899
sw x3, 0(x2) # store 0x2d16882cebccc899 in memory
flw f28, 0(x2) # load 0x2d16882cebccc899 from memory into f28
fnmadd.s f30, f23, f20, f28, dyn # perform operation
fnmadd.s f30, f23, f20, f28, rdn # perform operation
fnmadd.s f30, f23, f20, f28, rmm # perform operation
fnmadd.s f30, f23, f20, f28, rne # perform operation
fnmadd.s f30, f23, f20, f28, rtz # perform operation
fnmadd.s f30, f23, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x9f0021fc5b11aded # load x3 with value 0x9f0021fc5b11aded
sw x3, 0(x2) # store 0x9f0021fc5b11aded in memory
flw f13, 0(x2) # load 0x9f0021fc5b11aded from memory into f13
fnmadd.s f3, f12, f2, f13, dyn # perform operation
fnmadd.s f3, f12, f2, f13, rdn # perform operation
fnmadd.s f3, f12, f2, f13, rmm # perform operation
fnmadd.s f3, f12, f2, f13, rne # perform operation
fnmadd.s f3, f12, f2, f13, rtz # perform operation
fnmadd.s f3, f12, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x6298285a9dfc5dc1 # load x3 with value 0x6298285a9dfc5dc1
sw x3, 0(x2) # store 0x6298285a9dfc5dc1 in memory
flw f17, 0(x2) # load 0x6298285a9dfc5dc1 from memory into f17
fnmadd.s f27, f6, f8, f17, dyn # perform operation
fnmadd.s f27, f6, f8, f17, rdn # perform operation
fnmadd.s f27, f6, f8, f17, rmm # perform operation
fnmadd.s f27, f6, f8, f17, rne # perform operation
fnmadd.s f27, f6, f8, f17, rtz # perform operation
fnmadd.s f27, f6, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x7fd2e78a350ac422 # load x3 with value 0x7fd2e78a350ac422
sw x3, 0(x2) # store 0x7fd2e78a350ac422 in memory
flw f8, 0(x2) # load 0x7fd2e78a350ac422 from memory into f8
fnmadd.s f30, f10, f2, f8, dyn # perform operation
fnmadd.s f30, f10, f2, f8, rdn # perform operation
fnmadd.s f30, f10, f2, f8, rmm # perform operation
fnmadd.s f30, f10, f2, f8, rne # perform operation
fnmadd.s f30, f10, f2, f8, rtz # perform operation
fnmadd.s f30, f10, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f10, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f10, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f10, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f10, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f10, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xccb827a361ed7cd0 # load x3 with value 0xccb827a361ed7cd0
sw x3, 0(x2) # store 0xccb827a361ed7cd0 in memory
flw f26, 0(x2) # load 0xccb827a361ed7cd0 from memory into f26
fnmadd.s f31, f19, f15, f26, dyn # perform operation
fnmadd.s f31, f19, f15, f26, rdn # perform operation
fnmadd.s f31, f19, f15, f26, rmm # perform operation
fnmadd.s f31, f19, f15, f26, rne # perform operation
fnmadd.s f31, f19, f15, f26, rtz # perform operation
fnmadd.s f31, f19, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f19, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x48f2cca1be5590da # load x3 with value 0x48f2cca1be5590da
sw x3, 0(x2) # store 0x48f2cca1be5590da in memory
flw f20, 0(x2) # load 0x48f2cca1be5590da from memory into f20
fnmadd.s f15, f5, f26, f20, dyn # perform operation
fnmadd.s f15, f5, f26, f20, rdn # perform operation
fnmadd.s f15, f5, f26, f20, rmm # perform operation
fnmadd.s f15, f5, f26, f20, rne # perform operation
fnmadd.s f15, f5, f26, f20, rtz # perform operation
fnmadd.s f15, f5, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f5, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x73cb6c8d7ff370d9 # load x3 with value 0x73cb6c8d7ff370d9
sw x3, 0(x2) # store 0x73cb6c8d7ff370d9 in memory
flw f19, 0(x2) # load 0x73cb6c8d7ff370d9 from memory into f19
fnmadd.s f31, f24, f15, f19, dyn # perform operation
fnmadd.s f31, f24, f15, f19, rdn # perform operation
fnmadd.s f31, f24, f15, f19, rmm # perform operation
fnmadd.s f31, f24, f15, f19, rne # perform operation
fnmadd.s f31, f24, f15, f19, rtz # perform operation
fnmadd.s f31, f24, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x5b93ba3d482a13bc # load x3 with value 0x5b93ba3d482a13bc
sw x3, 0(x2) # store 0x5b93ba3d482a13bc in memory
flw f16, 0(x2) # load 0x5b93ba3d482a13bc from memory into f16
fnmadd.s f5, f3, f17, f16, dyn # perform operation
fnmadd.s f5, f3, f17, f16, rdn # perform operation
fnmadd.s f5, f3, f17, f16, rmm # perform operation
fnmadd.s f5, f3, f17, f16, rne # perform operation
fnmadd.s f5, f3, f17, f16, rtz # perform operation
fnmadd.s f5, f3, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xa089f97457ac7f94 # load x3 with value 0xa089f97457ac7f94
sw x3, 0(x2) # store 0xa089f97457ac7f94 in memory
flw f24, 0(x2) # load 0xa089f97457ac7f94 from memory into f24
fnmadd.s f9, f8, f27, f24, dyn # perform operation
fnmadd.s f9, f8, f27, f24, rdn # perform operation
fnmadd.s f9, f8, f27, f24, rmm # perform operation
fnmadd.s f9, f8, f27, f24, rne # perform operation
fnmadd.s f9, f8, f27, f24, rtz # perform operation
fnmadd.s f9, f8, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xe5da3b3be0743757 # load x3 with value 0xe5da3b3be0743757
sw x3, 0(x2) # store 0xe5da3b3be0743757 in memory
flw f23, 0(x2) # load 0xe5da3b3be0743757 from memory into f23
fnmadd.s f7, f13, f20, f23, dyn # perform operation
fnmadd.s f7, f13, f20, f23, rdn # perform operation
fnmadd.s f7, f13, f20, f23, rmm # perform operation
fnmadd.s f7, f13, f20, f23, rne # perform operation
fnmadd.s f7, f13, f20, f23, rtz # perform operation
fnmadd.s f7, f13, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f13, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xf17f60394693beef # load x3 with value 0xf17f60394693beef
sw x3, 0(x2) # store 0xf17f60394693beef in memory
flw f31, 0(x2) # load 0xf17f60394693beef from memory into f31
fnmadd.s f7, f27, f18, f31, dyn # perform operation
fnmadd.s f7, f27, f18, f31, rdn # perform operation
fnmadd.s f7, f27, f18, f31, rmm # perform operation
fnmadd.s f7, f27, f18, f31, rne # perform operation
fnmadd.s f7, f27, f18, f31, rtz # perform operation
fnmadd.s f7, f27, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x3ec3fbbdf9d70d4f # load x3 with value 0x3ec3fbbdf9d70d4f
sw x3, 0(x2) # store 0x3ec3fbbdf9d70d4f in memory
flw f30, 0(x2) # load 0x3ec3fbbdf9d70d4f from memory into f30
fnmadd.s f22, f14, f12, f30, dyn # perform operation
fnmadd.s f22, f14, f12, f30, rdn # perform operation
fnmadd.s f22, f14, f12, f30, rmm # perform operation
fnmadd.s f22, f14, f12, f30, rne # perform operation
fnmadd.s f22, f14, f12, f30, rtz # perform operation
fnmadd.s f22, f14, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x952954325ae4fd70 # load x3 with value 0x952954325ae4fd70
sw x3, 0(x2) # store 0x952954325ae4fd70 in memory
flw f22, 0(x2) # load 0x952954325ae4fd70 from memory into f22
fnmadd.s f7, f30, f21, f22, dyn # perform operation
fnmadd.s f7, f30, f21, f22, rdn # perform operation
fnmadd.s f7, f30, f21, f22, rmm # perform operation
fnmadd.s f7, f30, f21, f22, rne # perform operation
fnmadd.s f7, f30, f21, f22, rtz # perform operation
fnmadd.s f7, f30, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x3eb1c9417f9cc50d # load x3 with value 0x3eb1c9417f9cc50d
sw x3, 0(x2) # store 0x3eb1c9417f9cc50d in memory
flw f14, 0(x2) # load 0x3eb1c9417f9cc50d from memory into f14
fnmadd.s f11, f2, f27, f14, dyn # perform operation
fnmadd.s f11, f2, f27, f14, rdn # perform operation
fnmadd.s f11, f2, f27, f14, rmm # perform operation
fnmadd.s f11, f2, f27, f14, rne # perform operation
fnmadd.s f11, f2, f27, f14, rtz # perform operation
fnmadd.s f11, f2, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f2, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0xe4b93900daaac9b7 # load x3 with value 0xe4b93900daaac9b7
sw x3, 0(x2) # store 0xe4b93900daaac9b7 in memory
flw f22, 0(x2) # load 0xe4b93900daaac9b7 from memory into f22
fnmadd.s f13, f2, f29, f22, dyn # perform operation
fnmadd.s f13, f2, f29, f22, rdn # perform operation
fnmadd.s f13, f2, f29, f22, rmm # perform operation
fnmadd.s f13, f2, f29, f22, rne # perform operation
fnmadd.s f13, f2, f29, f22, rtz # perform operation
fnmadd.s f13, f2, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x7ca6c2394cfe4943 # load x3 with value 0x7ca6c2394cfe4943
sw x3, 0(x2) # store 0x7ca6c2394cfe4943 in memory
flw f7, 0(x2) # load 0x7ca6c2394cfe4943 from memory into f7
fnmadd.s f25, f26, f8, f7, dyn # perform operation
fnmadd.s f25, f26, f8, f7, rdn # perform operation
fnmadd.s f25, f26, f8, f7, rmm # perform operation
fnmadd.s f25, f26, f8, f7, rne # perform operation
fnmadd.s f25, f26, f8, f7, rtz # perform operation
fnmadd.s f25, f26, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x40b03bc906c7e87 # load x3 with value 0x40b03bc906c7e87
sw x3, 0(x2) # store 0x40b03bc906c7e87 in memory
flw f11, 0(x2) # load 0x40b03bc906c7e87 from memory into f11
fnmadd.s f19, f5, f9, f11, dyn # perform operation
fnmadd.s f19, f5, f9, f11, rdn # perform operation
fnmadd.s f19, f5, f9, f11, rmm # perform operation
fnmadd.s f19, f5, f9, f11, rne # perform operation
fnmadd.s f19, f5, f9, f11, rtz # perform operation
fnmadd.s f19, f5, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x9ffaba452d8f453f # load x3 with value 0x9ffaba452d8f453f
sw x3, 0(x2) # store 0x9ffaba452d8f453f in memory
flw f5, 0(x2) # load 0x9ffaba452d8f453f from memory into f5
fnmadd.s f19, f27, f25, f5, dyn # perform operation
fnmadd.s f19, f27, f25, f5, rdn # perform operation
fnmadd.s f19, f27, f25, f5, rmm # perform operation
fnmadd.s f19, f27, f25, f5, rne # perform operation
fnmadd.s f19, f27, f25, f5, rtz # perform operation
fnmadd.s f19, f27, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f27, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xfbc2ae30c3fa7aff # load x3 with value 0xfbc2ae30c3fa7aff
sw x3, 0(x2) # store 0xfbc2ae30c3fa7aff in memory
flw f24, 0(x2) # load 0xfbc2ae30c3fa7aff from memory into f24
fnmadd.s f27, f30, f21, f24, dyn # perform operation
fnmadd.s f27, f30, f21, f24, rdn # perform operation
fnmadd.s f27, f30, f21, f24, rmm # perform operation
fnmadd.s f27, f30, f21, f24, rne # perform operation
fnmadd.s f27, f30, f21, f24, rtz # perform operation
fnmadd.s f27, f30, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x30b825080a72dc6e # load x3 with value 0x30b825080a72dc6e
sw x3, 0(x2) # store 0x30b825080a72dc6e in memory
flw f22, 0(x2) # load 0x30b825080a72dc6e from memory into f22
fnmadd.s f14, f31, f7, f22, dyn # perform operation
fnmadd.s f14, f31, f7, f22, rdn # perform operation
fnmadd.s f14, f31, f7, f22, rmm # perform operation
fnmadd.s f14, f31, f7, f22, rne # perform operation
fnmadd.s f14, f31, f7, f22, rtz # perform operation
fnmadd.s f14, f31, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xb7c54e8752800c3e # load x3 with value 0xb7c54e8752800c3e
sw x3, 0(x2) # store 0xb7c54e8752800c3e in memory
flw f9, 0(x2) # load 0xb7c54e8752800c3e from memory into f9
fnmadd.s f11, f22, f8, f9, dyn # perform operation
fnmadd.s f11, f22, f8, f9, rdn # perform operation
fnmadd.s f11, f22, f8, f9, rmm # perform operation
fnmadd.s f11, f22, f8, f9, rne # perform operation
fnmadd.s f11, f22, f8, f9, rtz # perform operation
fnmadd.s f11, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x4460cb36202d5cd # load x3 with value 0x4460cb36202d5cd
sw x3, 0(x2) # store 0x4460cb36202d5cd in memory
flw f12, 0(x2) # load 0x4460cb36202d5cd from memory into f12
fnmadd.s f15, f26, f25, f12, dyn # perform operation
fnmadd.s f15, f26, f25, f12, rdn # perform operation
fnmadd.s f15, f26, f25, f12, rmm # perform operation
fnmadd.s f15, f26, f25, f12, rne # perform operation
fnmadd.s f15, f26, f25, f12, rtz # perform operation
fnmadd.s f15, f26, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x231f70b51f4eb36 # load x3 with value 0x231f70b51f4eb36
sw x3, 0(x2) # store 0x231f70b51f4eb36 in memory
flw f16, 0(x2) # load 0x231f70b51f4eb36 from memory into f16
fnmadd.s f8, f27, f6, f16, dyn # perform operation
fnmadd.s f8, f27, f6, f16, rdn # perform operation
fnmadd.s f8, f27, f6, f16, rmm # perform operation
fnmadd.s f8, f27, f6, f16, rne # perform operation
fnmadd.s f8, f27, f6, f16, rtz # perform operation
fnmadd.s f8, f27, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xbc132ad407817a3a # load x3 with value 0xbc132ad407817a3a
sw x3, 0(x2) # store 0xbc132ad407817a3a in memory
flw f6, 0(x2) # load 0xbc132ad407817a3a from memory into f6
fnmadd.s f19, f18, f15, f6, dyn # perform operation
fnmadd.s f19, f18, f15, f6, rdn # perform operation
fnmadd.s f19, f18, f15, f6, rmm # perform operation
fnmadd.s f19, f18, f15, f6, rne # perform operation
fnmadd.s f19, f18, f15, f6, rtz # perform operation
fnmadd.s f19, f18, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x2d7aa4bf0db220b # load x3 with value 0x2d7aa4bf0db220b
sw x3, 0(x2) # store 0x2d7aa4bf0db220b in memory
flw f25, 0(x2) # load 0x2d7aa4bf0db220b from memory into f25
fnmadd.s f20, f6, f10, f25, dyn # perform operation
fnmadd.s f20, f6, f10, f25, rdn # perform operation
fnmadd.s f20, f6, f10, f25, rmm # perform operation
fnmadd.s f20, f6, f10, f25, rne # perform operation
fnmadd.s f20, f6, f10, f25, rtz # perform operation
fnmadd.s f20, f6, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x49190b8f82e3ee16 # load x3 with value 0x49190b8f82e3ee16
sw x3, 0(x2) # store 0x49190b8f82e3ee16 in memory
flw f16, 0(x2) # load 0x49190b8f82e3ee16 from memory into f16
fnmadd.s f22, f29, f27, f16, dyn # perform operation
fnmadd.s f22, f29, f27, f16, rdn # perform operation
fnmadd.s f22, f29, f27, f16, rmm # perform operation
fnmadd.s f22, f29, f27, f16, rne # perform operation
fnmadd.s f22, f29, f27, f16, rtz # perform operation
fnmadd.s f22, f29, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x3b1f804147caf3c3 # load x3 with value 0x3b1f804147caf3c3
sw x3, 0(x2) # store 0x3b1f804147caf3c3 in memory
flw f21, 0(x2) # load 0x3b1f804147caf3c3 from memory into f21
fnmadd.s f26, f11, f24, f21, dyn # perform operation
fnmadd.s f26, f11, f24, f21, rdn # perform operation
fnmadd.s f26, f11, f24, f21, rmm # perform operation
fnmadd.s f26, f11, f24, f21, rne # perform operation
fnmadd.s f26, f11, f24, f21, rtz # perform operation
fnmadd.s f26, f11, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f11, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0x1fa3d37b064eeb25 # load x3 with value 0x1fa3d37b064eeb25
sw x3, 0(x2) # store 0x1fa3d37b064eeb25 in memory
flw f29, 0(x2) # load 0x1fa3d37b064eeb25 from memory into f29
fnmadd.s f30, f23, f5, f29, dyn # perform operation
fnmadd.s f30, f23, f5, f29, rdn # perform operation
fnmadd.s f30, f23, f5, f29, rmm # perform operation
fnmadd.s f30, f23, f5, f29, rne # perform operation
fnmadd.s f30, f23, f5, f29, rtz # perform operation
fnmadd.s f30, f23, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xab42ade1ae9a999b # load x3 with value 0xab42ade1ae9a999b
sw x3, 0(x2) # store 0xab42ade1ae9a999b in memory
flw f21, 0(x2) # load 0xab42ade1ae9a999b from memory into f21
fnmadd.s f25, f13, f30, f21, dyn # perform operation
fnmadd.s f25, f13, f30, f21, rdn # perform operation
fnmadd.s f25, f13, f30, f21, rmm # perform operation
fnmadd.s f25, f13, f30, f21, rne # perform operation
fnmadd.s f25, f13, f30, f21, rtz # perform operation
fnmadd.s f25, f13, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f13, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x995725d39fca3b51 # load x3 with value 0x995725d39fca3b51
sw x3, 0(x2) # store 0x995725d39fca3b51 in memory
flw f3, 0(x2) # load 0x995725d39fca3b51 from memory into f3
fnmadd.s f19, f11, f18, f3, dyn # perform operation
fnmadd.s f19, f11, f18, f3, rdn # perform operation
fnmadd.s f19, f11, f18, f3, rmm # perform operation
fnmadd.s f19, f11, f18, f3, rne # perform operation
fnmadd.s f19, f11, f18, f3, rtz # perform operation
fnmadd.s f19, f11, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x4c5fcd0910560cf9 # load x3 with value 0x4c5fcd0910560cf9
sw x3, 0(x2) # store 0x4c5fcd0910560cf9 in memory
flw f21, 0(x2) # load 0x4c5fcd0910560cf9 from memory into f21
fnmadd.s f13, f19, f30, f21, dyn # perform operation
fnmadd.s f13, f19, f30, f21, rdn # perform operation
fnmadd.s f13, f19, f30, f21, rmm # perform operation
fnmadd.s f13, f19, f30, f21, rne # perform operation
fnmadd.s f13, f19, f30, f21, rtz # perform operation
fnmadd.s f13, f19, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x6b1ea13642c69e68 # load x3 with value 0x6b1ea13642c69e68
sw x3, 0(x2) # store 0x6b1ea13642c69e68 in memory
flw f10, 0(x2) # load 0x6b1ea13642c69e68 from memory into f10
fnmadd.s f19, f16, f20, f10, dyn # perform operation
fnmadd.s f19, f16, f20, f10, rdn # perform operation
fnmadd.s f19, f16, f20, f10, rmm # perform operation
fnmadd.s f19, f16, f20, f10, rne # perform operation
fnmadd.s f19, f16, f20, f10, rtz # perform operation
fnmadd.s f19, f16, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x4ce7ca7a7bdca3a4 # load x3 with value 0x4ce7ca7a7bdca3a4
sw x3, 0(x2) # store 0x4ce7ca7a7bdca3a4 in memory
flw f2, 0(x2) # load 0x4ce7ca7a7bdca3a4 from memory into f2
fnmadd.s f29, f28, f11, f2, dyn # perform operation
fnmadd.s f29, f28, f11, f2, rdn # perform operation
fnmadd.s f29, f28, f11, f2, rmm # perform operation
fnmadd.s f29, f28, f11, f2, rne # perform operation
fnmadd.s f29, f28, f11, f2, rtz # perform operation
fnmadd.s f29, f28, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x56c92c2034d1f930 # load x3 with value 0x56c92c2034d1f930
sw x3, 0(x2) # store 0x56c92c2034d1f930 in memory
flw f2, 0(x2) # load 0x56c92c2034d1f930 from memory into f2
fnmadd.s f28, f1, f20, f2, dyn # perform operation
fnmadd.s f28, f1, f20, f2, rdn # perform operation
fnmadd.s f28, f1, f20, f2, rmm # perform operation
fnmadd.s f28, f1, f20, f2, rne # perform operation
fnmadd.s f28, f1, f20, f2, rtz # perform operation
fnmadd.s f28, f1, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f1, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f1, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f1, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f1, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f1, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xff37f44a32816d48 # load x3 with value 0xff37f44a32816d48
sw x3, 0(x2) # store 0xff37f44a32816d48 in memory
flw f11, 0(x2) # load 0xff37f44a32816d48 from memory into f11
fnmadd.s f7, f10, f27, f11, dyn # perform operation
fnmadd.s f7, f10, f27, f11, rdn # perform operation
fnmadd.s f7, f10, f27, f11, rmm # perform operation
fnmadd.s f7, f10, f27, f11, rne # perform operation
fnmadd.s f7, f10, f27, f11, rtz # perform operation
fnmadd.s f7, f10, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f10, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f10, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f10, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f10, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f10, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x789c2cce14395c9e # load x3 with value 0x789c2cce14395c9e
sw x3, 0(x2) # store 0x789c2cce14395c9e in memory
flw f17, 0(x2) # load 0x789c2cce14395c9e from memory into f17
fnmadd.s f16, f13, f25, f17, dyn # perform operation
fnmadd.s f16, f13, f25, f17, rdn # perform operation
fnmadd.s f16, f13, f25, f17, rmm # perform operation
fnmadd.s f16, f13, f25, f17, rne # perform operation
fnmadd.s f16, f13, f25, f17, rtz # perform operation
fnmadd.s f16, f13, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x20eb39b5bc3c1d09 # load x3 with value 0x20eb39b5bc3c1d09
sw x3, 0(x2) # store 0x20eb39b5bc3c1d09 in memory
flw f25, 0(x2) # load 0x20eb39b5bc3c1d09 from memory into f25
fnmadd.s f13, f11, f7, f25, dyn # perform operation
fnmadd.s f13, f11, f7, f25, rdn # perform operation
fnmadd.s f13, f11, f7, f25, rmm # perform operation
fnmadd.s f13, f11, f7, f25, rne # perform operation
fnmadd.s f13, f11, f7, f25, rtz # perform operation
fnmadd.s f13, f11, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x68ffaba89ce740a8 # load x3 with value 0x68ffaba89ce740a8
sw x3, 0(x2) # store 0x68ffaba89ce740a8 in memory
flw f23, 0(x2) # load 0x68ffaba89ce740a8 from memory into f23
fnmadd.s f25, f26, f27, f23, dyn # perform operation
fnmadd.s f25, f26, f27, f23, rdn # perform operation
fnmadd.s f25, f26, f27, f23, rmm # perform operation
fnmadd.s f25, f26, f27, f23, rne # perform operation
fnmadd.s f25, f26, f27, f23, rtz # perform operation
fnmadd.s f25, f26, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x551da5bb5378f4f1 # load x3 with value 0x551da5bb5378f4f1
sw x3, 0(x2) # store 0x551da5bb5378f4f1 in memory
flw f23, 0(x2) # load 0x551da5bb5378f4f1 from memory into f23
fnmadd.s f8, f27, f11, f23, dyn # perform operation
fnmadd.s f8, f27, f11, f23, rdn # perform operation
fnmadd.s f8, f27, f11, f23, rmm # perform operation
fnmadd.s f8, f27, f11, f23, rne # perform operation
fnmadd.s f8, f27, f11, f23, rtz # perform operation
fnmadd.s f8, f27, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xbd09935b65f9db0a # load x3 with value 0xbd09935b65f9db0a
sw x3, 0(x2) # store 0xbd09935b65f9db0a in memory
flw f9, 0(x2) # load 0xbd09935b65f9db0a from memory into f9
fnmadd.s f27, f31, f5, f9, dyn # perform operation
fnmadd.s f27, f31, f5, f9, rdn # perform operation
fnmadd.s f27, f31, f5, f9, rmm # perform operation
fnmadd.s f27, f31, f5, f9, rne # perform operation
fnmadd.s f27, f31, f5, f9, rtz # perform operation
fnmadd.s f27, f31, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0xe86db40c330be749 # load x3 with value 0xe86db40c330be749
sw x3, 0(x2) # store 0xe86db40c330be749 in memory
flw f1, 0(x2) # load 0xe86db40c330be749 from memory into f1
fnmadd.s f28, f12, f26, f1, dyn # perform operation
fnmadd.s f28, f12, f26, f1, rdn # perform operation
fnmadd.s f28, f12, f26, f1, rmm # perform operation
fnmadd.s f28, f12, f26, f1, rne # perform operation
fnmadd.s f28, f12, f26, f1, rtz # perform operation
fnmadd.s f28, f12, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xd4cb1c8acf83eeed # load x3 with value 0xd4cb1c8acf83eeed
sw x3, 0(x2) # store 0xd4cb1c8acf83eeed in memory
flw f26, 0(x2) # load 0xd4cb1c8acf83eeed from memory into f26
fnmadd.s f11, f16, f28, f26, dyn # perform operation
fnmadd.s f11, f16, f28, f26, rdn # perform operation
fnmadd.s f11, f16, f28, f26, rmm # perform operation
fnmadd.s f11, f16, f28, f26, rne # perform operation
fnmadd.s f11, f16, f28, f26, rtz # perform operation
fnmadd.s f11, f16, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x8a1cd85748476984 # load x3 with value 0x8a1cd85748476984
sw x3, 0(x2) # store 0x8a1cd85748476984 in memory
flw f13, 0(x2) # load 0x8a1cd85748476984 from memory into f13
fnmadd.s f17, f31, f2, f13, dyn # perform operation
fnmadd.s f17, f31, f2, f13, rdn # perform operation
fnmadd.s f17, f31, f2, f13, rmm # perform operation
fnmadd.s f17, f31, f2, f13, rne # perform operation
fnmadd.s f17, f31, f2, f13, rtz # perform operation
fnmadd.s f17, f31, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f31, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x65b8feef8b77668f # load x3 with value 0x65b8feef8b77668f
sw x3, 0(x2) # store 0x65b8feef8b77668f in memory
flw f2, 0(x2) # load 0x65b8feef8b77668f from memory into f2
fnmadd.s f26, f5, f22, f2, dyn # perform operation
fnmadd.s f26, f5, f22, f2, rdn # perform operation
fnmadd.s f26, f5, f22, f2, rmm # perform operation
fnmadd.s f26, f5, f22, f2, rne # perform operation
fnmadd.s f26, f5, f22, f2, rtz # perform operation
fnmadd.s f26, f5, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f5, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x5d499045bd148b5d # load x3 with value 0x5d499045bd148b5d
sw x3, 0(x2) # store 0x5d499045bd148b5d in memory
flw f29, 0(x2) # load 0x5d499045bd148b5d from memory into f29
fnmadd.s f14, f13, f26, f29, dyn # perform operation
fnmadd.s f14, f13, f26, f29, rdn # perform operation
fnmadd.s f14, f13, f26, f29, rmm # perform operation
fnmadd.s f14, f13, f26, f29, rne # perform operation
fnmadd.s f14, f13, f26, f29, rtz # perform operation
fnmadd.s f14, f13, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x17f4d1600b6e8893 # load x3 with value 0x17f4d1600b6e8893
sw x3, 0(x2) # store 0x17f4d1600b6e8893 in memory
flw f3, 0(x2) # load 0x17f4d1600b6e8893 from memory into f3
fnmadd.s f22, f23, f5, f3, dyn # perform operation
fnmadd.s f22, f23, f5, f3, rdn # perform operation
fnmadd.s f22, f23, f5, f3, rmm # perform operation
fnmadd.s f22, f23, f5, f3, rne # perform operation
fnmadd.s f22, f23, f5, f3, rtz # perform operation
fnmadd.s f22, f23, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f23, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x1812fb00c8fa2adc # load x3 with value 0x1812fb00c8fa2adc
sw x3, 0(x2) # store 0x1812fb00c8fa2adc in memory
flw f17, 0(x2) # load 0x1812fb00c8fa2adc from memory into f17
fnmadd.s f26, f9, f28, f17, dyn # perform operation
fnmadd.s f26, f9, f28, f17, rdn # perform operation
fnmadd.s f26, f9, f28, f17, rmm # perform operation
fnmadd.s f26, f9, f28, f17, rne # perform operation
fnmadd.s f26, f9, f28, f17, rtz # perform operation
fnmadd.s f26, f9, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0xd3fe1147aceb5d9e # load x3 with value 0xd3fe1147aceb5d9e
sw x3, 0(x2) # store 0xd3fe1147aceb5d9e in memory
flw f19, 0(x2) # load 0xd3fe1147aceb5d9e from memory into f19
fnmadd.s f26, f12, f18, f19, dyn # perform operation
fnmadd.s f26, f12, f18, f19, rdn # perform operation
fnmadd.s f26, f12, f18, f19, rmm # perform operation
fnmadd.s f26, f12, f18, f19, rne # perform operation
fnmadd.s f26, f12, f18, f19, rtz # perform operation
fnmadd.s f26, f12, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x82e15138f47c72bc # load x3 with value 0x82e15138f47c72bc
sw x3, 0(x2) # store 0x82e15138f47c72bc in memory
flw f18, 0(x2) # load 0x82e15138f47c72bc from memory into f18
fnmadd.s f29, f16, f25, f18, dyn # perform operation
fnmadd.s f29, f16, f25, f18, rdn # perform operation
fnmadd.s f29, f16, f25, f18, rmm # perform operation
fnmadd.s f29, f16, f25, f18, rne # perform operation
fnmadd.s f29, f16, f25, f18, rtz # perform operation
fnmadd.s f29, f16, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x46fd15d970922ec # load x3 with value 0x46fd15d970922ec
sw x3, 0(x2) # store 0x46fd15d970922ec in memory
flw f25, 0(x2) # load 0x46fd15d970922ec from memory into f25
fnmadd.s f24, f16, f13, f25, dyn # perform operation
fnmadd.s f24, f16, f13, f25, rdn # perform operation
fnmadd.s f24, f16, f13, f25, rmm # perform operation
fnmadd.s f24, f16, f13, f25, rne # perform operation
fnmadd.s f24, f16, f13, f25, rtz # perform operation
fnmadd.s f24, f16, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x8aa11583bb6e7eb3 # load x3 with value 0x8aa11583bb6e7eb3
sw x3, 0(x2) # store 0x8aa11583bb6e7eb3 in memory
flw f17, 0(x2) # load 0x8aa11583bb6e7eb3 from memory into f17
fnmadd.s f10, f23, f25, f17, dyn # perform operation
fnmadd.s f10, f23, f25, f17, rdn # perform operation
fnmadd.s f10, f23, f25, f17, rmm # perform operation
fnmadd.s f10, f23, f25, f17, rne # perform operation
fnmadd.s f10, f23, f25, f17, rtz # perform operation
fnmadd.s f10, f23, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xb6a931a4a00c5785 # load x3 with value 0xb6a931a4a00c5785
sw x3, 0(x2) # store 0xb6a931a4a00c5785 in memory
flw f27, 0(x2) # load 0xb6a931a4a00c5785 from memory into f27
fnmadd.s f14, f11, f24, f27, dyn # perform operation
fnmadd.s f14, f11, f24, f27, rdn # perform operation
fnmadd.s f14, f11, f24, f27, rmm # perform operation
fnmadd.s f14, f11, f24, f27, rne # perform operation
fnmadd.s f14, f11, f24, f27, rtz # perform operation
fnmadd.s f14, f11, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f11, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x68f61b855572f75b # load x3 with value 0x68f61b855572f75b
sw x3, 0(x2) # store 0x68f61b855572f75b in memory
flw f16, 0(x2) # load 0x68f61b855572f75b from memory into f16
fnmadd.s f12, f19, f31, f16, dyn # perform operation
fnmadd.s f12, f19, f31, f16, rdn # perform operation
fnmadd.s f12, f19, f31, f16, rmm # perform operation
fnmadd.s f12, f19, f31, f16, rne # perform operation
fnmadd.s f12, f19, f31, f16, rtz # perform operation
fnmadd.s f12, f19, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f19, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x72c12906dd35810 # load x3 with value 0x72c12906dd35810
sw x3, 0(x2) # store 0x72c12906dd35810 in memory
flw f9, 0(x2) # load 0x72c12906dd35810 from memory into f9
fnmadd.s f31, f30, f18, f9, dyn # perform operation
fnmadd.s f31, f30, f18, f9, rdn # perform operation
fnmadd.s f31, f30, f18, f9, rmm # perform operation
fnmadd.s f31, f30, f18, f9, rne # perform operation
fnmadd.s f31, f30, f18, f9, rtz # perform operation
fnmadd.s f31, f30, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x5e1c2ad8165db284 # load x3 with value 0x5e1c2ad8165db284
sw x3, 0(x2) # store 0x5e1c2ad8165db284 in memory
flw f13, 0(x2) # load 0x5e1c2ad8165db284 from memory into f13
fnmadd.s f11, f16, f31, f13, dyn # perform operation
fnmadd.s f11, f16, f31, f13, rdn # perform operation
fnmadd.s f11, f16, f31, f13, rmm # perform operation
fnmadd.s f11, f16, f31, f13, rne # perform operation
fnmadd.s f11, f16, f31, f13, rtz # perform operation
fnmadd.s f11, f16, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x6f7ad0326c70f7d1 # load x3 with value 0x6f7ad0326c70f7d1
sw x3, 0(x2) # store 0x6f7ad0326c70f7d1 in memory
flw f23, 0(x2) # load 0x6f7ad0326c70f7d1 from memory into f23
fnmadd.s f22, f21, f15, f23, dyn # perform operation
fnmadd.s f22, f21, f15, f23, rdn # perform operation
fnmadd.s f22, f21, f15, f23, rmm # perform operation
fnmadd.s f22, f21, f15, f23, rne # perform operation
fnmadd.s f22, f21, f15, f23, rtz # perform operation
fnmadd.s f22, f21, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f21, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x9ce3d4c0ae0f6730 # load x3 with value 0x9ce3d4c0ae0f6730
sw x3, 0(x2) # store 0x9ce3d4c0ae0f6730 in memory
flw f23, 0(x2) # load 0x9ce3d4c0ae0f6730 from memory into f23
fnmadd.s f20, f30, f7, f23, dyn # perform operation
fnmadd.s f20, f30, f7, f23, rdn # perform operation
fnmadd.s f20, f30, f7, f23, rmm # perform operation
fnmadd.s f20, f30, f7, f23, rne # perform operation
fnmadd.s f20, f30, f7, f23, rtz # perform operation
fnmadd.s f20, f30, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xdccdc0b63636ae35 # load x3 with value 0xdccdc0b63636ae35
sw x3, 0(x2) # store 0xdccdc0b63636ae35 in memory
flw f8, 0(x2) # load 0xdccdc0b63636ae35 from memory into f8
fnmadd.s f28, f30, f1, f8, dyn # perform operation
fnmadd.s f28, f30, f1, f8, rdn # perform operation
fnmadd.s f28, f30, f1, f8, rmm # perform operation
fnmadd.s f28, f30, f1, f8, rne # perform operation
fnmadd.s f28, f30, f1, f8, rtz # perform operation
fnmadd.s f28, f30, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xc5816039d9fcbf2a # load x3 with value 0xc5816039d9fcbf2a
sw x3, 0(x2) # store 0xc5816039d9fcbf2a in memory
flw f19, 0(x2) # load 0xc5816039d9fcbf2a from memory into f19
fnmadd.s f22, f13, f14, f19, dyn # perform operation
fnmadd.s f22, f13, f14, f19, rdn # perform operation
fnmadd.s f22, f13, f14, f19, rmm # perform operation
fnmadd.s f22, f13, f14, f19, rne # perform operation
fnmadd.s f22, f13, f14, f19, rtz # perform operation
fnmadd.s f22, f13, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x31691cc7a989d9ef # load x3 with value 0x31691cc7a989d9ef
sw x3, 0(x2) # store 0x31691cc7a989d9ef in memory
flw f27, 0(x2) # load 0x31691cc7a989d9ef from memory into f27
fnmadd.s f25, f10, f16, f27, dyn # perform operation
fnmadd.s f25, f10, f16, f27, rdn # perform operation
fnmadd.s f25, f10, f16, f27, rmm # perform operation
fnmadd.s f25, f10, f16, f27, rne # perform operation
fnmadd.s f25, f10, f16, f27, rtz # perform operation
fnmadd.s f25, f10, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f10, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f10, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f10, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f10, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f10, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xc6dafd32b3929212 # load x3 with value 0xc6dafd32b3929212
sw x3, 0(x2) # store 0xc6dafd32b3929212 in memory
flw f29, 0(x2) # load 0xc6dafd32b3929212 from memory into f29
fnmadd.s f3, f15, f16, f29, dyn # perform operation
fnmadd.s f3, f15, f16, f29, rdn # perform operation
fnmadd.s f3, f15, f16, f29, rmm # perform operation
fnmadd.s f3, f15, f16, f29, rne # perform operation
fnmadd.s f3, f15, f16, f29, rtz # perform operation
fnmadd.s f3, f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x20b9465ec5bbc47 # load x3 with value 0x20b9465ec5bbc47
sw x3, 0(x2) # store 0x20b9465ec5bbc47 in memory
flw f10, 0(x2) # load 0x20b9465ec5bbc47 from memory into f10
fnmadd.s f19, f21, f1, f10, dyn # perform operation
fnmadd.s f19, f21, f1, f10, rdn # perform operation
fnmadd.s f19, f21, f1, f10, rmm # perform operation
fnmadd.s f19, f21, f1, f10, rne # perform operation
fnmadd.s f19, f21, f1, f10, rtz # perform operation
fnmadd.s f19, f21, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x764d8091dd39ea1e # load x3 with value 0x764d8091dd39ea1e
sw x3, 0(x2) # store 0x764d8091dd39ea1e in memory
flw f9, 0(x2) # load 0x764d8091dd39ea1e from memory into f9
fnmadd.s f5, f26, f18, f9, dyn # perform operation
fnmadd.s f5, f26, f18, f9, rdn # perform operation
fnmadd.s f5, f26, f18, f9, rmm # perform operation
fnmadd.s f5, f26, f18, f9, rne # perform operation
fnmadd.s f5, f26, f18, f9, rtz # perform operation
fnmadd.s f5, f26, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f26, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f26, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f26, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f26, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f26, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0xea5c315a1cb3b071 # load x3 with value 0xea5c315a1cb3b071
sw x3, 0(x2) # store 0xea5c315a1cb3b071 in memory
flw f12, 0(x2) # load 0xea5c315a1cb3b071 from memory into f12
fnmadd.s f27, f29, f7, f12, dyn # perform operation
fnmadd.s f27, f29, f7, f12, rdn # perform operation
fnmadd.s f27, f29, f7, f12, rmm # perform operation
fnmadd.s f27, f29, f7, f12, rne # perform operation
fnmadd.s f27, f29, f7, f12, rtz # perform operation
fnmadd.s f27, f29, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0xe2fd8c5385978bfe # load x3 with value 0xe2fd8c5385978bfe
sw x3, 0(x2) # store 0xe2fd8c5385978bfe in memory
flw f7, 0(x2) # load 0xe2fd8c5385978bfe from memory into f7
fnmadd.s f22, f3, f31, f7, dyn # perform operation
fnmadd.s f22, f3, f31, f7, rdn # perform operation
fnmadd.s f22, f3, f31, f7, rmm # perform operation
fnmadd.s f22, f3, f31, f7, rne # perform operation
fnmadd.s f22, f3, f31, f7, rtz # perform operation
fnmadd.s f22, f3, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xd1d6eba7e33f4c64 # load x3 with value 0xd1d6eba7e33f4c64
sw x3, 0(x2) # store 0xd1d6eba7e33f4c64 in memory
flw f19, 0(x2) # load 0xd1d6eba7e33f4c64 from memory into f19
fnmadd.s f12, f10, f18, f19, dyn # perform operation
fnmadd.s f12, f10, f18, f19, rdn # perform operation
fnmadd.s f12, f10, f18, f19, rmm # perform operation
fnmadd.s f12, f10, f18, f19, rne # perform operation
fnmadd.s f12, f10, f18, f19, rtz # perform operation
fnmadd.s f12, f10, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xd6ac2bc0a420c79e # load x3 with value 0xd6ac2bc0a420c79e
sw x3, 0(x2) # store 0xd6ac2bc0a420c79e in memory
flw f10, 0(x2) # load 0xd6ac2bc0a420c79e from memory into f10
fnmadd.s f17, f30, f20, f10, dyn # perform operation
fnmadd.s f17, f30, f20, f10, rdn # perform operation
fnmadd.s f17, f30, f20, f10, rmm # perform operation
fnmadd.s f17, f30, f20, f10, rne # perform operation
fnmadd.s f17, f30, f20, f10, rtz # perform operation
fnmadd.s f17, f30, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x8c45052b30150541 # load x3 with value 0x8c45052b30150541
sw x3, 0(x2) # store 0x8c45052b30150541 in memory
flw f10, 0(x2) # load 0x8c45052b30150541 from memory into f10
fnmadd.s f19, f6, f22, f10, dyn # perform operation
fnmadd.s f19, f6, f22, f10, rdn # perform operation
fnmadd.s f19, f6, f22, f10, rmm # perform operation
fnmadd.s f19, f6, f22, f10, rne # perform operation
fnmadd.s f19, f6, f22, f10, rtz # perform operation
fnmadd.s f19, f6, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xd05ceffe13ab0c43 # load x3 with value 0xd05ceffe13ab0c43
sw x3, 0(x2) # store 0xd05ceffe13ab0c43 in memory
flw f17, 0(x2) # load 0xd05ceffe13ab0c43 from memory into f17
fnmadd.s f6, f11, f13, f17, dyn # perform operation
fnmadd.s f6, f11, f13, f17, rdn # perform operation
fnmadd.s f6, f11, f13, f17, rmm # perform operation
fnmadd.s f6, f11, f13, f17, rne # perform operation
fnmadd.s f6, f11, f13, f17, rtz # perform operation
fnmadd.s f6, f11, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x538486952023899d # load x3 with value 0x538486952023899d
sw x3, 0(x2) # store 0x538486952023899d in memory
flw f12, 0(x2) # load 0x538486952023899d from memory into f12
fnmadd.s f5, f7, f31, f12, dyn # perform operation
fnmadd.s f5, f7, f31, f12, rdn # perform operation
fnmadd.s f5, f7, f31, f12, rmm # perform operation
fnmadd.s f5, f7, f31, f12, rne # perform operation
fnmadd.s f5, f7, f31, f12, rtz # perform operation
fnmadd.s f5, f7, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xe010b049f98ab6ae # load x3 with value 0xe010b049f98ab6ae
sw x3, 0(x2) # store 0xe010b049f98ab6ae in memory
flw f15, 0(x2) # load 0xe010b049f98ab6ae from memory into f15
fnmadd.s f19, f27, f2, f15, dyn # perform operation
fnmadd.s f19, f27, f2, f15, rdn # perform operation
fnmadd.s f19, f27, f2, f15, rmm # perform operation
fnmadd.s f19, f27, f2, f15, rne # perform operation
fnmadd.s f19, f27, f2, f15, rtz # perform operation
fnmadd.s f19, f27, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f27, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f27, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f27, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f27, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f27, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x708954e68d735e7c # load x3 with value 0x708954e68d735e7c
sw x3, 0(x2) # store 0x708954e68d735e7c in memory
flw f5, 0(x2) # load 0x708954e68d735e7c from memory into f5
fnmadd.s f26, f22, f19, f5, dyn # perform operation
fnmadd.s f26, f22, f19, f5, rdn # perform operation
fnmadd.s f26, f22, f19, f5, rmm # perform operation
fnmadd.s f26, f22, f19, f5, rne # perform operation
fnmadd.s f26, f22, f19, f5, rtz # perform operation
fnmadd.s f26, f22, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xc00fc2cd6fe2c6ee # load x3 with value 0xc00fc2cd6fe2c6ee
sw x3, 0(x2) # store 0xc00fc2cd6fe2c6ee in memory
flw f1, 0(x2) # load 0xc00fc2cd6fe2c6ee from memory into f1
fnmadd.s f12, f8, f27, f1, dyn # perform operation
fnmadd.s f12, f8, f27, f1, rdn # perform operation
fnmadd.s f12, f8, f27, f1, rmm # perform operation
fnmadd.s f12, f8, f27, f1, rne # perform operation
fnmadd.s f12, f8, f27, f1, rtz # perform operation
fnmadd.s f12, f8, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xf06d2ec95d1a0fb # load x3 with value 0xf06d2ec95d1a0fb
sw x3, 0(x2) # store 0xf06d2ec95d1a0fb in memory
flw f17, 0(x2) # load 0xf06d2ec95d1a0fb from memory into f17
fnmadd.s f2, f27, f11, f17, dyn # perform operation
fnmadd.s f2, f27, f11, f17, rdn # perform operation
fnmadd.s f2, f27, f11, f17, rmm # perform operation
fnmadd.s f2, f27, f11, f17, rne # perform operation
fnmadd.s f2, f27, f11, f17, rtz # perform operation
fnmadd.s f2, f27, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x9ffdb1283f2c59cb # load x3 with value 0x9ffdb1283f2c59cb
sw x3, 0(x2) # store 0x9ffdb1283f2c59cb in memory
flw f10, 0(x2) # load 0x9ffdb1283f2c59cb from memory into f10
fnmadd.s f1, f12, f3, f10, dyn # perform operation
fnmadd.s f1, f12, f3, f10, rdn # perform operation
fnmadd.s f1, f12, f3, f10, rmm # perform operation
fnmadd.s f1, f12, f3, f10, rne # perform operation
fnmadd.s f1, f12, f3, f10, rtz # perform operation
fnmadd.s f1, f12, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x81466674add7a6fb # load x3 with value 0x81466674add7a6fb
sw x3, 0(x2) # store 0x81466674add7a6fb in memory
flw f2, 0(x2) # load 0x81466674add7a6fb from memory into f2
fnmadd.s f8, f24, f27, f2, dyn # perform operation
fnmadd.s f8, f24, f27, f2, rdn # perform operation
fnmadd.s f8, f24, f27, f2, rmm # perform operation
fnmadd.s f8, f24, f27, f2, rne # perform operation
fnmadd.s f8, f24, f27, f2, rtz # perform operation
fnmadd.s f8, f24, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xa4438865c35b6edb # load x3 with value 0xa4438865c35b6edb
sw x3, 0(x2) # store 0xa4438865c35b6edb in memory
flw f19, 0(x2) # load 0xa4438865c35b6edb from memory into f19
fnmadd.s f17, f14, f2, f19, dyn # perform operation
fnmadd.s f17, f14, f2, f19, rdn # perform operation
fnmadd.s f17, f14, f2, f19, rmm # perform operation
fnmadd.s f17, f14, f2, f19, rne # perform operation
fnmadd.s f17, f14, f2, f19, rtz # perform operation
fnmadd.s f17, f14, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xb81e4d8889c50c5c # load x3 with value 0xb81e4d8889c50c5c
sw x3, 0(x2) # store 0xb81e4d8889c50c5c in memory
flw f14, 0(x2) # load 0xb81e4d8889c50c5c from memory into f14
fnmadd.s f8, f22, f29, f14, dyn # perform operation
fnmadd.s f8, f22, f29, f14, rdn # perform operation
fnmadd.s f8, f22, f29, f14, rmm # perform operation
fnmadd.s f8, f22, f29, f14, rne # perform operation
fnmadd.s f8, f22, f29, f14, rtz # perform operation
fnmadd.s f8, f22, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xa0b7bc5c74bfcda7 # load x3 with value 0xa0b7bc5c74bfcda7
sw x3, 0(x2) # store 0xa0b7bc5c74bfcda7 in memory
flw f29, 0(x2) # load 0xa0b7bc5c74bfcda7 from memory into f29
fnmadd.s f6, f7, f17, f29, dyn # perform operation
fnmadd.s f6, f7, f17, f29, rdn # perform operation
fnmadd.s f6, f7, f17, f29, rmm # perform operation
fnmadd.s f6, f7, f17, f29, rne # perform operation
fnmadd.s f6, f7, f17, f29, rtz # perform operation
fnmadd.s f6, f7, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xdf26cf214837a98c # load x3 with value 0xdf26cf214837a98c
sw x3, 0(x2) # store 0xdf26cf214837a98c in memory
flw f20, 0(x2) # load 0xdf26cf214837a98c from memory into f20
fnmadd.s f28, f29, f1, f20, dyn # perform operation
fnmadd.s f28, f29, f1, f20, rdn # perform operation
fnmadd.s f28, f29, f1, f20, rmm # perform operation
fnmadd.s f28, f29, f1, f20, rne # perform operation
fnmadd.s f28, f29, f1, f20, rtz # perform operation
fnmadd.s f28, f29, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0xe4b1e10bd68f4f62 # load x3 with value 0xe4b1e10bd68f4f62
sw x3, 0(x2) # store 0xe4b1e10bd68f4f62 in memory
flw f18, 0(x2) # load 0xe4b1e10bd68f4f62 from memory into f18
fnmadd.s f8, f15, f10, f18, dyn # perform operation
fnmadd.s f8, f15, f10, f18, rdn # perform operation
fnmadd.s f8, f15, f10, f18, rmm # perform operation
fnmadd.s f8, f15, f10, f18, rne # perform operation
fnmadd.s f8, f15, f10, f18, rtz # perform operation
fnmadd.s f8, f15, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xa34235bb250a4b2d # load x3 with value 0xa34235bb250a4b2d
sw x3, 0(x2) # store 0xa34235bb250a4b2d in memory
flw f14, 0(x2) # load 0xa34235bb250a4b2d from memory into f14
fnmadd.s f29, f20, f17, f14, dyn # perform operation
fnmadd.s f29, f20, f17, f14, rdn # perform operation
fnmadd.s f29, f20, f17, f14, rmm # perform operation
fnmadd.s f29, f20, f17, f14, rne # perform operation
fnmadd.s f29, f20, f17, f14, rtz # perform operation
fnmadd.s f29, f20, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x11e7c169100a21eb # load x3 with value 0x11e7c169100a21eb
sw x3, 0(x2) # store 0x11e7c169100a21eb in memory
flw f9, 0(x2) # load 0x11e7c169100a21eb from memory into f9
fnmadd.s f17, f27, f28, f9, dyn # perform operation
fnmadd.s f17, f27, f28, f9, rdn # perform operation
fnmadd.s f17, f27, f28, f9, rmm # perform operation
fnmadd.s f17, f27, f28, f9, rne # perform operation
fnmadd.s f17, f27, f28, f9, rtz # perform operation
fnmadd.s f17, f27, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f27, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x776bbf43650a92c2 # load x3 with value 0x776bbf43650a92c2
sw x3, 0(x2) # store 0x776bbf43650a92c2 in memory
flw f22, 0(x2) # load 0x776bbf43650a92c2 from memory into f22
fnmadd.s f23, f8, f14, f22, dyn # perform operation
fnmadd.s f23, f8, f14, f22, rdn # perform operation
fnmadd.s f23, f8, f14, f22, rmm # perform operation
fnmadd.s f23, f8, f14, f22, rne # perform operation
fnmadd.s f23, f8, f14, f22, rtz # perform operation
fnmadd.s f23, f8, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f8, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x47fa523a31a27c23 # load x3 with value 0x47fa523a31a27c23
sw x3, 0(x2) # store 0x47fa523a31a27c23 in memory
flw f27, 0(x2) # load 0x47fa523a31a27c23 from memory into f27
fnmadd.s f18, f12, f29, f27, dyn # perform operation
fnmadd.s f18, f12, f29, f27, rdn # perform operation
fnmadd.s f18, f12, f29, f27, rmm # perform operation
fnmadd.s f18, f12, f29, f27, rne # perform operation
fnmadd.s f18, f12, f29, f27, rtz # perform operation
fnmadd.s f18, f12, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0xc982b9b85457cfb2 # load x3 with value 0xc982b9b85457cfb2
sw x3, 0(x2) # store 0xc982b9b85457cfb2 in memory
flw f9, 0(x2) # load 0xc982b9b85457cfb2 from memory into f9
fnmadd.s f22, f21, f18, f9, dyn # perform operation
fnmadd.s f22, f21, f18, f9, rdn # perform operation
fnmadd.s f22, f21, f18, f9, rmm # perform operation
fnmadd.s f22, f21, f18, f9, rne # perform operation
fnmadd.s f22, f21, f18, f9, rtz # perform operation
fnmadd.s f22, f21, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f21, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x3abbac5739fab20b # load x3 with value 0x3abbac5739fab20b
sw x3, 0(x2) # store 0x3abbac5739fab20b in memory
flw f12, 0(x2) # load 0x3abbac5739fab20b from memory into f12
fnmadd.s f27, f18, f13, f12, dyn # perform operation
fnmadd.s f27, f18, f13, f12, rdn # perform operation
fnmadd.s f27, f18, f13, f12, rmm # perform operation
fnmadd.s f27, f18, f13, f12, rne # perform operation
fnmadd.s f27, f18, f13, f12, rtz # perform operation
fnmadd.s f27, f18, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x6e5271ad2322c97b # load x3 with value 0x6e5271ad2322c97b
sw x3, 0(x2) # store 0x6e5271ad2322c97b in memory
flw f24, 0(x2) # load 0x6e5271ad2322c97b from memory into f24
fnmadd.s f22, f1, f28, f24, dyn # perform operation
fnmadd.s f22, f1, f28, f24, rdn # perform operation
fnmadd.s f22, f1, f28, f24, rmm # perform operation
fnmadd.s f22, f1, f28, f24, rne # perform operation
fnmadd.s f22, f1, f28, f24, rtz # perform operation
fnmadd.s f22, f1, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x185e0ef86d2d7885 # load x3 with value 0x185e0ef86d2d7885
sw x3, 0(x2) # store 0x185e0ef86d2d7885 in memory
flw f21, 0(x2) # load 0x185e0ef86d2d7885 from memory into f21
fnmadd.s f24, f20, f12, f21, dyn # perform operation
fnmadd.s f24, f20, f12, f21, rdn # perform operation
fnmadd.s f24, f20, f12, f21, rmm # perform operation
fnmadd.s f24, f20, f12, f21, rne # perform operation
fnmadd.s f24, f20, f12, f21, rtz # perform operation
fnmadd.s f24, f20, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xd8c903d4f49debb6 # load x3 with value 0xd8c903d4f49debb6
sw x3, 0(x2) # store 0xd8c903d4f49debb6 in memory
flw f6, 0(x2) # load 0xd8c903d4f49debb6 from memory into f6
fnmadd.s f9, f19, f12, f6, dyn # perform operation
fnmadd.s f9, f19, f12, f6, rdn # perform operation
fnmadd.s f9, f19, f12, f6, rmm # perform operation
fnmadd.s f9, f19, f12, f6, rne # perform operation
fnmadd.s f9, f19, f12, f6, rtz # perform operation
fnmadd.s f9, f19, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xc84e486836d88bf4 # load x3 with value 0xc84e486836d88bf4
sw x3, 0(x2) # store 0xc84e486836d88bf4 in memory
flw f29, 0(x2) # load 0xc84e486836d88bf4 from memory into f29
fnmadd.s f27, f21, f15, f29, dyn # perform operation
fnmadd.s f27, f21, f15, f29, rdn # perform operation
fnmadd.s f27, f21, f15, f29, rmm # perform operation
fnmadd.s f27, f21, f15, f29, rne # perform operation
fnmadd.s f27, f21, f15, f29, rtz # perform operation
fnmadd.s f27, f21, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xd55e75514866a5d7 # load x3 with value 0xd55e75514866a5d7
sw x3, 0(x2) # store 0xd55e75514866a5d7 in memory
flw f6, 0(x2) # load 0xd55e75514866a5d7 from memory into f6
fnmadd.s f12, f13, f25, f6, dyn # perform operation
fnmadd.s f12, f13, f25, f6, rdn # perform operation
fnmadd.s f12, f13, f25, f6, rmm # perform operation
fnmadd.s f12, f13, f25, f6, rne # perform operation
fnmadd.s f12, f13, f25, f6, rtz # perform operation
fnmadd.s f12, f13, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x3adfcfe0140d5d6b # load x3 with value 0x3adfcfe0140d5d6b
sw x3, 0(x2) # store 0x3adfcfe0140d5d6b in memory
flw f8, 0(x2) # load 0x3adfcfe0140d5d6b from memory into f8
fnmadd.s f2, f20, f7, f8, dyn # perform operation
fnmadd.s f2, f20, f7, f8, rdn # perform operation
fnmadd.s f2, f20, f7, f8, rmm # perform operation
fnmadd.s f2, f20, f7, f8, rne # perform operation
fnmadd.s f2, f20, f7, f8, rtz # perform operation
fnmadd.s f2, f20, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x7da3f95004e31d81 # load x3 with value 0x7da3f95004e31d81
sw x3, 0(x2) # store 0x7da3f95004e31d81 in memory
flw f6, 0(x2) # load 0x7da3f95004e31d81 from memory into f6
fnmadd.s f7, f8, f20, f6, dyn # perform operation
fnmadd.s f7, f8, f20, f6, rdn # perform operation
fnmadd.s f7, f8, f20, f6, rmm # perform operation
fnmadd.s f7, f8, f20, f6, rne # perform operation
fnmadd.s f7, f8, f20, f6, rtz # perform operation
fnmadd.s f7, f8, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x4e8176e75731b8f4 # load x3 with value 0x4e8176e75731b8f4
sw x3, 0(x2) # store 0x4e8176e75731b8f4 in memory
flw f9, 0(x2) # load 0x4e8176e75731b8f4 from memory into f9
fnmadd.s f7, f25, f8, f9, dyn # perform operation
fnmadd.s f7, f25, f8, f9, rdn # perform operation
fnmadd.s f7, f25, f8, f9, rmm # perform operation
fnmadd.s f7, f25, f8, f9, rne # perform operation
fnmadd.s f7, f25, f8, f9, rtz # perform operation
fnmadd.s f7, f25, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x143f811bbdb66d11 # load x3 with value 0x143f811bbdb66d11
sw x3, 0(x2) # store 0x143f811bbdb66d11 in memory
flw f6, 0(x2) # load 0x143f811bbdb66d11 from memory into f6
fnmadd.s f29, f21, f20, f6, dyn # perform operation
fnmadd.s f29, f21, f20, f6, rdn # perform operation
fnmadd.s f29, f21, f20, f6, rmm # perform operation
fnmadd.s f29, f21, f20, f6, rne # perform operation
fnmadd.s f29, f21, f20, f6, rtz # perform operation
fnmadd.s f29, f21, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x5f879f34d6ab229e # load x3 with value 0x5f879f34d6ab229e
sw x3, 0(x2) # store 0x5f879f34d6ab229e in memory
flw f20, 0(x2) # load 0x5f879f34d6ab229e from memory into f20
fnmadd.s f9, f5, f26, f20, dyn # perform operation
fnmadd.s f9, f5, f26, f20, rdn # perform operation
fnmadd.s f9, f5, f26, f20, rmm # perform operation
fnmadd.s f9, f5, f26, f20, rne # perform operation
fnmadd.s f9, f5, f26, f20, rtz # perform operation
fnmadd.s f9, f5, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x22785bb43835d6d1 # load x3 with value 0x22785bb43835d6d1
sw x3, 0(x2) # store 0x22785bb43835d6d1 in memory
flw f17, 0(x2) # load 0x22785bb43835d6d1 from memory into f17
fnmadd.s f22, f19, f29, f17, dyn # perform operation
fnmadd.s f22, f19, f29, f17, rdn # perform operation
fnmadd.s f22, f19, f29, f17, rmm # perform operation
fnmadd.s f22, f19, f29, f17, rne # perform operation
fnmadd.s f22, f19, f29, f17, rtz # perform operation
fnmadd.s f22, f19, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x5f0d311a83a2622 # load x3 with value 0x5f0d311a83a2622
sw x3, 0(x2) # store 0x5f0d311a83a2622 in memory
flw f12, 0(x2) # load 0x5f0d311a83a2622 from memory into f12
fnmadd.s f17, f19, f13, f12, dyn # perform operation
fnmadd.s f17, f19, f13, f12, rdn # perform operation
fnmadd.s f17, f19, f13, f12, rmm # perform operation
fnmadd.s f17, f19, f13, f12, rne # perform operation
fnmadd.s f17, f19, f13, f12, rtz # perform operation
fnmadd.s f17, f19, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x9d292729a6116a01 # load x3 with value 0x9d292729a6116a01
sw x3, 0(x2) # store 0x9d292729a6116a01 in memory
flw f26, 0(x2) # load 0x9d292729a6116a01 from memory into f26
fnmadd.s f8, f3, f28, f26, dyn # perform operation
fnmadd.s f8, f3, f28, f26, rdn # perform operation
fnmadd.s f8, f3, f28, f26, rmm # perform operation
fnmadd.s f8, f3, f28, f26, rne # perform operation
fnmadd.s f8, f3, f28, f26, rtz # perform operation
fnmadd.s f8, f3, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f3, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x3878aab0f5d31c5e # load x3 with value 0x3878aab0f5d31c5e
sw x3, 0(x2) # store 0x3878aab0f5d31c5e in memory
flw f20, 0(x2) # load 0x3878aab0f5d31c5e from memory into f20
fnmadd.s f2, f13, f11, f20, dyn # perform operation
fnmadd.s f2, f13, f11, f20, rdn # perform operation
fnmadd.s f2, f13, f11, f20, rmm # perform operation
fnmadd.s f2, f13, f11, f20, rne # perform operation
fnmadd.s f2, f13, f11, f20, rtz # perform operation
fnmadd.s f2, f13, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x48439050ba2367fb # load x3 with value 0x48439050ba2367fb
sw x3, 0(x2) # store 0x48439050ba2367fb in memory
flw f10, 0(x2) # load 0x48439050ba2367fb from memory into f10
fnmadd.s f22, f5, f6, f10, dyn # perform operation
fnmadd.s f22, f5, f6, f10, rdn # perform operation
fnmadd.s f22, f5, f6, f10, rmm # perform operation
fnmadd.s f22, f5, f6, f10, rne # perform operation
fnmadd.s f22, f5, f6, f10, rtz # perform operation
fnmadd.s f22, f5, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f5, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xc23f3feaca01611b # load x3 with value 0xc23f3feaca01611b
sw x3, 0(x2) # store 0xc23f3feaca01611b in memory
flw f9, 0(x2) # load 0xc23f3feaca01611b from memory into f9
fnmadd.s f10, f2, f31, f9, dyn # perform operation
fnmadd.s f10, f2, f31, f9, rdn # perform operation
fnmadd.s f10, f2, f31, f9, rmm # perform operation
fnmadd.s f10, f2, f31, f9, rne # perform operation
fnmadd.s f10, f2, f31, f9, rtz # perform operation
fnmadd.s f10, f2, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x478588d0e5ceb45f # load x3 with value 0x478588d0e5ceb45f
sw x3, 0(x2) # store 0x478588d0e5ceb45f in memory
flw f10, 0(x2) # load 0x478588d0e5ceb45f from memory into f10
fnmadd.s f1, f19, f28, f10, dyn # perform operation
fnmadd.s f1, f19, f28, f10, rdn # perform operation
fnmadd.s f1, f19, f28, f10, rmm # perform operation
fnmadd.s f1, f19, f28, f10, rne # perform operation
fnmadd.s f1, f19, f28, f10, rtz # perform operation
fnmadd.s f1, f19, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x3aa96f206a97f0f5 # load x3 with value 0x3aa96f206a97f0f5
sw x3, 0(x2) # store 0x3aa96f206a97f0f5 in memory
flw f10, 0(x2) # load 0x3aa96f206a97f0f5 from memory into f10
fnmadd.s f31, f24, f21, f10, dyn # perform operation
fnmadd.s f31, f24, f21, f10, rdn # perform operation
fnmadd.s f31, f24, f21, f10, rmm # perform operation
fnmadd.s f31, f24, f21, f10, rne # perform operation
fnmadd.s f31, f24, f21, f10, rtz # perform operation
fnmadd.s f31, f24, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x76e38cd4b83ac907 # load x3 with value 0x76e38cd4b83ac907
sw x3, 0(x2) # store 0x76e38cd4b83ac907 in memory
flw f12, 0(x2) # load 0x76e38cd4b83ac907 from memory into f12
fnmadd.s f23, f11, f1, f12, dyn # perform operation
fnmadd.s f23, f11, f1, f12, rdn # perform operation
fnmadd.s f23, f11, f1, f12, rmm # perform operation
fnmadd.s f23, f11, f1, f12, rne # perform operation
fnmadd.s f23, f11, f1, f12, rtz # perform operation
fnmadd.s f23, f11, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x80e1dddb996ca1b2 # load x3 with value 0x80e1dddb996ca1b2
sw x3, 0(x2) # store 0x80e1dddb996ca1b2 in memory
flw f19, 0(x2) # load 0x80e1dddb996ca1b2 from memory into f19
fnmadd.s f13, f8, f1, f19, dyn # perform operation
fnmadd.s f13, f8, f1, f19, rdn # perform operation
fnmadd.s f13, f8, f1, f19, rmm # perform operation
fnmadd.s f13, f8, f1, f19, rne # perform operation
fnmadd.s f13, f8, f1, f19, rtz # perform operation
fnmadd.s f13, f8, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x649d96c414c79e55 # load x3 with value 0x649d96c414c79e55
sw x3, 0(x2) # store 0x649d96c414c79e55 in memory
flw f15, 0(x2) # load 0x649d96c414c79e55 from memory into f15
fnmadd.s f22, f7, f16, f15, dyn # perform operation
fnmadd.s f22, f7, f16, f15, rdn # perform operation
fnmadd.s f22, f7, f16, f15, rmm # perform operation
fnmadd.s f22, f7, f16, f15, rne # perform operation
fnmadd.s f22, f7, f16, f15, rtz # perform operation
fnmadd.s f22, f7, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xf9d0308c3c1d1a77 # load x3 with value 0xf9d0308c3c1d1a77
sw x3, 0(x2) # store 0xf9d0308c3c1d1a77 in memory
flw f9, 0(x2) # load 0xf9d0308c3c1d1a77 from memory into f9
fnmadd.s f5, f19, f1, f9, dyn # perform operation
fnmadd.s f5, f19, f1, f9, rdn # perform operation
fnmadd.s f5, f19, f1, f9, rmm # perform operation
fnmadd.s f5, f19, f1, f9, rne # perform operation
fnmadd.s f5, f19, f1, f9, rtz # perform operation
fnmadd.s f5, f19, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xf2fda45d9d624ba7 # load x3 with value 0xf2fda45d9d624ba7
sw x3, 0(x2) # store 0xf2fda45d9d624ba7 in memory
flw f11, 0(x2) # load 0xf2fda45d9d624ba7 from memory into f11
fnmadd.s f27, f22, f31, f11, dyn # perform operation
fnmadd.s f27, f22, f31, f11, rdn # perform operation
fnmadd.s f27, f22, f31, f11, rmm # perform operation
fnmadd.s f27, f22, f31, f11, rne # perform operation
fnmadd.s f27, f22, f31, f11, rtz # perform operation
fnmadd.s f27, f22, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f22, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f22, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f22, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f22, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f22, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xe79ee7242d6a4186 # load x3 with value 0xe79ee7242d6a4186
sw x3, 0(x2) # store 0xe79ee7242d6a4186 in memory
flw f7, 0(x2) # load 0xe79ee7242d6a4186 from memory into f7
fnmadd.s f21, f31, f30, f7, dyn # perform operation
fnmadd.s f21, f31, f30, f7, rdn # perform operation
fnmadd.s f21, f31, f30, f7, rmm # perform operation
fnmadd.s f21, f31, f30, f7, rne # perform operation
fnmadd.s f21, f31, f30, f7, rtz # perform operation
fnmadd.s f21, f31, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x32e3d67f7bb6ef7e # load x3 with value 0x32e3d67f7bb6ef7e
sw x3, 0(x2) # store 0x32e3d67f7bb6ef7e in memory
flw f15, 0(x2) # load 0x32e3d67f7bb6ef7e from memory into f15
fnmadd.s f7, f11, f22, f15, dyn # perform operation
fnmadd.s f7, f11, f22, f15, rdn # perform operation
fnmadd.s f7, f11, f22, f15, rmm # perform operation
fnmadd.s f7, f11, f22, f15, rne # perform operation
fnmadd.s f7, f11, f22, f15, rtz # perform operation
fnmadd.s f7, f11, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0xaea8e74273712b18 # load x3 with value 0xaea8e74273712b18
sw x3, 0(x2) # store 0xaea8e74273712b18 in memory
flw f6, 0(x2) # load 0xaea8e74273712b18 from memory into f6
fnmadd.s f9, f13, f17, f6, dyn # perform operation
fnmadd.s f9, f13, f17, f6, rdn # perform operation
fnmadd.s f9, f13, f17, f6, rmm # perform operation
fnmadd.s f9, f13, f17, f6, rne # perform operation
fnmadd.s f9, f13, f17, f6, rtz # perform operation
fnmadd.s f9, f13, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f13, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xd812eab50d647ed4 # load x3 with value 0xd812eab50d647ed4
sw x3, 0(x2) # store 0xd812eab50d647ed4 in memory
flw f22, 0(x2) # load 0xd812eab50d647ed4 from memory into f22
fnmadd.s f24, f6, f29, f22, dyn # perform operation
fnmadd.s f24, f6, f29, f22, rdn # perform operation
fnmadd.s f24, f6, f29, f22, rmm # perform operation
fnmadd.s f24, f6, f29, f22, rne # perform operation
fnmadd.s f24, f6, f29, f22, rtz # perform operation
fnmadd.s f24, f6, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xb0ff5e0670c0c631 # load x3 with value 0xb0ff5e0670c0c631
sw x3, 0(x2) # store 0xb0ff5e0670c0c631 in memory
flw f28, 0(x2) # load 0xb0ff5e0670c0c631 from memory into f28
fnmadd.s f27, f24, f5, f28, dyn # perform operation
fnmadd.s f27, f24, f5, f28, rdn # perform operation
fnmadd.s f27, f24, f5, f28, rmm # perform operation
fnmadd.s f27, f24, f5, f28, rne # perform operation
fnmadd.s f27, f24, f5, f28, rtz # perform operation
fnmadd.s f27, f24, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xef2773205689b2f8 # load x3 with value 0xef2773205689b2f8
sw x3, 0(x2) # store 0xef2773205689b2f8 in memory
flw f9, 0(x2) # load 0xef2773205689b2f8 from memory into f9
fnmadd.s f28, f22, f23, f9, dyn # perform operation
fnmadd.s f28, f22, f23, f9, rdn # perform operation
fnmadd.s f28, f22, f23, f9, rmm # perform operation
fnmadd.s f28, f22, f23, f9, rne # perform operation
fnmadd.s f28, f22, f23, f9, rtz # perform operation
fnmadd.s f28, f22, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xbdb145d96e08287f # load x3 with value 0xbdb145d96e08287f
sw x3, 0(x2) # store 0xbdb145d96e08287f in memory
flw f7, 0(x2) # load 0xbdb145d96e08287f from memory into f7
fnmadd.s f31, f14, f11, f7, dyn # perform operation
fnmadd.s f31, f14, f11, f7, rdn # perform operation
fnmadd.s f31, f14, f11, f7, rmm # perform operation
fnmadd.s f31, f14, f11, f7, rne # perform operation
fnmadd.s f31, f14, f11, f7, rtz # perform operation
fnmadd.s f31, f14, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xa8e4c249b631c347 # load x3 with value 0xa8e4c249b631c347
sw x3, 0(x2) # store 0xa8e4c249b631c347 in memory
flw f14, 0(x2) # load 0xa8e4c249b631c347 from memory into f14
fnmadd.s f15, f2, f26, f14, dyn # perform operation
fnmadd.s f15, f2, f26, f14, rdn # perform operation
fnmadd.s f15, f2, f26, f14, rmm # perform operation
fnmadd.s f15, f2, f26, f14, rne # perform operation
fnmadd.s f15, f2, f26, f14, rtz # perform operation
fnmadd.s f15, f2, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x1c32b9506a579ae1 # load x3 with value 0x1c32b9506a579ae1
sw x3, 0(x2) # store 0x1c32b9506a579ae1 in memory
flw f23, 0(x2) # load 0x1c32b9506a579ae1 from memory into f23
fnmadd.s f19, f24, f7, f23, dyn # perform operation
fnmadd.s f19, f24, f7, f23, rdn # perform operation
fnmadd.s f19, f24, f7, f23, rmm # perform operation
fnmadd.s f19, f24, f7, f23, rne # perform operation
fnmadd.s f19, f24, f7, f23, rtz # perform operation
fnmadd.s f19, f24, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xd3609de3d35fa95 # load x3 with value 0xd3609de3d35fa95
sw x3, 0(x2) # store 0xd3609de3d35fa95 in memory
flw f10, 0(x2) # load 0xd3609de3d35fa95 from memory into f10
fnmadd.s f14, f22, f11, f10, dyn # perform operation
fnmadd.s f14, f22, f11, f10, rdn # perform operation
fnmadd.s f14, f22, f11, f10, rmm # perform operation
fnmadd.s f14, f22, f11, f10, rne # perform operation
fnmadd.s f14, f22, f11, f10, rtz # perform operation
fnmadd.s f14, f22, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x4c2f9157710d2c1a # load x3 with value 0x4c2f9157710d2c1a
sw x3, 0(x2) # store 0x4c2f9157710d2c1a in memory
flw f3, 0(x2) # load 0x4c2f9157710d2c1a from memory into f3
fnmadd.s f9, f18, f16, f3, dyn # perform operation
fnmadd.s f9, f18, f16, f3, rdn # perform operation
fnmadd.s f9, f18, f16, f3, rmm # perform operation
fnmadd.s f9, f18, f16, f3, rne # perform operation
fnmadd.s f9, f18, f16, f3, rtz # perform operation
fnmadd.s f9, f18, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xe11c4efeda59d274 # load x3 with value 0xe11c4efeda59d274
sw x3, 0(x2) # store 0xe11c4efeda59d274 in memory
flw f31, 0(x2) # load 0xe11c4efeda59d274 from memory into f31
fnmadd.s f1, f21, f20, f31, dyn # perform operation
fnmadd.s f1, f21, f20, f31, rdn # perform operation
fnmadd.s f1, f21, f20, f31, rmm # perform operation
fnmadd.s f1, f21, f20, f31, rne # perform operation
fnmadd.s f1, f21, f20, f31, rtz # perform operation
fnmadd.s f1, f21, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xbcc91c641739a6ab # load x3 with value 0xbcc91c641739a6ab
sw x3, 0(x2) # store 0xbcc91c641739a6ab in memory
flw f10, 0(x2) # load 0xbcc91c641739a6ab from memory into f10
fnmadd.s f11, f1, f7, f10, dyn # perform operation
fnmadd.s f11, f1, f7, f10, rdn # perform operation
fnmadd.s f11, f1, f7, f10, rmm # perform operation
fnmadd.s f11, f1, f7, f10, rne # perform operation
fnmadd.s f11, f1, f7, f10, rtz # perform operation
fnmadd.s f11, f1, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f1, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0xadefaf52f1ceb37d # load x3 with value 0xadefaf52f1ceb37d
sw x3, 0(x2) # store 0xadefaf52f1ceb37d in memory
flw f19, 0(x2) # load 0xadefaf52f1ceb37d from memory into f19
fnmadd.s f26, f24, f20, f19, dyn # perform operation
fnmadd.s f26, f24, f20, f19, rdn # perform operation
fnmadd.s f26, f24, f20, f19, rmm # perform operation
fnmadd.s f26, f24, f20, f19, rne # perform operation
fnmadd.s f26, f24, f20, f19, rtz # perform operation
fnmadd.s f26, f24, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xe41cb033bf2647f2 # load x3 with value 0xe41cb033bf2647f2
sw x3, 0(x2) # store 0xe41cb033bf2647f2 in memory
flw f24, 0(x2) # load 0xe41cb033bf2647f2 from memory into f24
fnmadd.s f17, f19, f6, f24, dyn # perform operation
fnmadd.s f17, f19, f6, f24, rdn # perform operation
fnmadd.s f17, f19, f6, f24, rmm # perform operation
fnmadd.s f17, f19, f6, f24, rne # perform operation
fnmadd.s f17, f19, f6, f24, rtz # perform operation
fnmadd.s f17, f19, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x65953f617e826e2a # load x3 with value 0x65953f617e826e2a
sw x3, 0(x2) # store 0x65953f617e826e2a in memory
flw f21, 0(x2) # load 0x65953f617e826e2a from memory into f21
fnmadd.s f28, f25, f29, f21, dyn # perform operation
fnmadd.s f28, f25, f29, f21, rdn # perform operation
fnmadd.s f28, f25, f29, f21, rmm # perform operation
fnmadd.s f28, f25, f29, f21, rne # perform operation
fnmadd.s f28, f25, f29, f21, rtz # perform operation
fnmadd.s f28, f25, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xb4a2a00824fc78d2 # load x3 with value 0xb4a2a00824fc78d2
sw x3, 0(x2) # store 0xb4a2a00824fc78d2 in memory
flw f20, 0(x2) # load 0xb4a2a00824fc78d2 from memory into f20
fnmadd.s f30, f23, f11, f20, dyn # perform operation
fnmadd.s f30, f23, f11, f20, rdn # perform operation
fnmadd.s f30, f23, f11, f20, rmm # perform operation
fnmadd.s f30, f23, f11, f20, rne # perform operation
fnmadd.s f30, f23, f11, f20, rtz # perform operation
fnmadd.s f30, f23, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xd0362e233d86f216 # load x3 with value 0xd0362e233d86f216
sw x3, 0(x2) # store 0xd0362e233d86f216 in memory
flw f14, 0(x2) # load 0xd0362e233d86f216 from memory into f14
fnmadd.s f21, f13, f3, f14, dyn # perform operation
fnmadd.s f21, f13, f3, f14, rdn # perform operation
fnmadd.s f21, f13, f3, f14, rmm # perform operation
fnmadd.s f21, f13, f3, f14, rne # perform operation
fnmadd.s f21, f13, f3, f14, rtz # perform operation
fnmadd.s f21, f13, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f13, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x5fdc52a9bf61d42a # load x3 with value 0x5fdc52a9bf61d42a
sw x3, 0(x2) # store 0x5fdc52a9bf61d42a in memory
flw f10, 0(x2) # load 0x5fdc52a9bf61d42a from memory into f10
fnmadd.s f23, f29, f15, f10, dyn # perform operation
fnmadd.s f23, f29, f15, f10, rdn # perform operation
fnmadd.s f23, f29, f15, f10, rmm # perform operation
fnmadd.s f23, f29, f15, f10, rne # perform operation
fnmadd.s f23, f29, f15, f10, rtz # perform operation
fnmadd.s f23, f29, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x8b06a103fb2c3be4 # load x3 with value 0x8b06a103fb2c3be4
sw x3, 0(x2) # store 0x8b06a103fb2c3be4 in memory
flw f9, 0(x2) # load 0x8b06a103fb2c3be4 from memory into f9
fnmadd.s f29, f2, f3, f9, dyn # perform operation
fnmadd.s f29, f2, f3, f9, rdn # perform operation
fnmadd.s f29, f2, f3, f9, rmm # perform operation
fnmadd.s f29, f2, f3, f9, rne # perform operation
fnmadd.s f29, f2, f3, f9, rtz # perform operation
fnmadd.s f29, f2, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f2, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xb1f1d1c188601939 # load x3 with value 0xb1f1d1c188601939
sw x3, 0(x2) # store 0xb1f1d1c188601939 in memory
flw f23, 0(x2) # load 0xb1f1d1c188601939 from memory into f23
fnmadd.s f31, f16, f2, f23, dyn # perform operation
fnmadd.s f31, f16, f2, f23, rdn # perform operation
fnmadd.s f31, f16, f2, f23, rmm # perform operation
fnmadd.s f31, f16, f2, f23, rne # perform operation
fnmadd.s f31, f16, f2, f23, rtz # perform operation
fnmadd.s f31, f16, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f16, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xe6271ca2148b0f9d # load x3 with value 0xe6271ca2148b0f9d
sw x3, 0(x2) # store 0xe6271ca2148b0f9d in memory
flw f25, 0(x2) # load 0xe6271ca2148b0f9d from memory into f25
fnmadd.s f16, f10, f11, f25, dyn # perform operation
fnmadd.s f16, f10, f11, f25, rdn # perform operation
fnmadd.s f16, f10, f11, f25, rmm # perform operation
fnmadd.s f16, f10, f11, f25, rne # perform operation
fnmadd.s f16, f10, f11, f25, rtz # perform operation
fnmadd.s f16, f10, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f10, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xe12d6c64d41782d3 # load x3 with value 0xe12d6c64d41782d3
sw x3, 0(x2) # store 0xe12d6c64d41782d3 in memory
flw f24, 0(x2) # load 0xe12d6c64d41782d3 from memory into f24
fnmadd.s f16, f9, f3, f24, dyn # perform operation
fnmadd.s f16, f9, f3, f24, rdn # perform operation
fnmadd.s f16, f9, f3, f24, rmm # perform operation
fnmadd.s f16, f9, f3, f24, rne # perform operation
fnmadd.s f16, f9, f3, f24, rtz # perform operation
fnmadd.s f16, f9, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x7828aced035d84c9 # load x3 with value 0x7828aced035d84c9
sw x3, 0(x2) # store 0x7828aced035d84c9 in memory
flw f12, 0(x2) # load 0x7828aced035d84c9 from memory into f12
fnmadd.s f22, f10, f2, f12, dyn # perform operation
fnmadd.s f22, f10, f2, f12, rdn # perform operation
fnmadd.s f22, f10, f2, f12, rmm # perform operation
fnmadd.s f22, f10, f2, f12, rne # perform operation
fnmadd.s f22, f10, f2, f12, rtz # perform operation
fnmadd.s f22, f10, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xa132af2ea2f7ed32 # load x3 with value 0xa132af2ea2f7ed32
sw x3, 0(x2) # store 0xa132af2ea2f7ed32 in memory
flw f30, 0(x2) # load 0xa132af2ea2f7ed32 from memory into f30
fnmadd.s f9, f13, f23, f30, dyn # perform operation
fnmadd.s f9, f13, f23, f30, rdn # perform operation
fnmadd.s f9, f13, f23, f30, rmm # perform operation
fnmadd.s f9, f13, f23, f30, rne # perform operation
fnmadd.s f9, f13, f23, f30, rtz # perform operation
fnmadd.s f9, f13, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f13, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x8af45abf953ff5b # load x3 with value 0x8af45abf953ff5b
sw x3, 0(x2) # store 0x8af45abf953ff5b in memory
flw f3, 0(x2) # load 0x8af45abf953ff5b from memory into f3
fnmadd.s f17, f30, f28, f3, dyn # perform operation
fnmadd.s f17, f30, f28, f3, rdn # perform operation
fnmadd.s f17, f30, f28, f3, rmm # perform operation
fnmadd.s f17, f30, f28, f3, rne # perform operation
fnmadd.s f17, f30, f28, f3, rtz # perform operation
fnmadd.s f17, f30, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xf843e32c8645e173 # load x3 with value 0xf843e32c8645e173
sw x3, 0(x2) # store 0xf843e32c8645e173 in memory
flw f21, 0(x2) # load 0xf843e32c8645e173 from memory into f21
fnmadd.s f2, f13, f30, f21, dyn # perform operation
fnmadd.s f2, f13, f30, f21, rdn # perform operation
fnmadd.s f2, f13, f30, f21, rmm # perform operation
fnmadd.s f2, f13, f30, f21, rne # perform operation
fnmadd.s f2, f13, f30, f21, rtz # perform operation
fnmadd.s f2, f13, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x14cdc9bf3b470ae7 # load x3 with value 0x14cdc9bf3b470ae7
sw x3, 0(x2) # store 0x14cdc9bf3b470ae7 in memory
flw f5, 0(x2) # load 0x14cdc9bf3b470ae7 from memory into f5
fnmadd.s f16, f13, f29, f5, dyn # perform operation
fnmadd.s f16, f13, f29, f5, rdn # perform operation
fnmadd.s f16, f13, f29, f5, rmm # perform operation
fnmadd.s f16, f13, f29, f5, rne # perform operation
fnmadd.s f16, f13, f29, f5, rtz # perform operation
fnmadd.s f16, f13, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x3091c51d5fd86349 # load x3 with value 0x3091c51d5fd86349
sw x3, 0(x2) # store 0x3091c51d5fd86349 in memory
flw f27, 0(x2) # load 0x3091c51d5fd86349 from memory into f27
fnmadd.s f15, f5, f28, f27, dyn # perform operation
fnmadd.s f15, f5, f28, f27, rdn # perform operation
fnmadd.s f15, f5, f28, f27, rmm # perform operation
fnmadd.s f15, f5, f28, f27, rne # perform operation
fnmadd.s f15, f5, f28, f27, rtz # perform operation
fnmadd.s f15, f5, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f5, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x5fa5e027af7abe39 # load x3 with value 0x5fa5e027af7abe39
sw x3, 0(x2) # store 0x5fa5e027af7abe39 in memory
flw f20, 0(x2) # load 0x5fa5e027af7abe39 from memory into f20
fnmadd.s f11, f29, f10, f20, dyn # perform operation
fnmadd.s f11, f29, f10, f20, rdn # perform operation
fnmadd.s f11, f29, f10, f20, rmm # perform operation
fnmadd.s f11, f29, f10, f20, rne # perform operation
fnmadd.s f11, f29, f10, f20, rtz # perform operation
fnmadd.s f11, f29, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x6f04cc8328cd7f75 # load x3 with value 0x6f04cc8328cd7f75
sw x3, 0(x2) # store 0x6f04cc8328cd7f75 in memory
flw f30, 0(x2) # load 0x6f04cc8328cd7f75 from memory into f30
fnmadd.s f24, f11, f14, f30, dyn # perform operation
fnmadd.s f24, f11, f14, f30, rdn # perform operation
fnmadd.s f24, f11, f14, f30, rmm # perform operation
fnmadd.s f24, f11, f14, f30, rne # perform operation
fnmadd.s f24, f11, f14, f30, rtz # perform operation
fnmadd.s f24, f11, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f11, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x2e115251b95785c4 # load x3 with value 0x2e115251b95785c4
sw x3, 0(x2) # store 0x2e115251b95785c4 in memory
flw f10, 0(x2) # load 0x2e115251b95785c4 from memory into f10
fnmadd.s f24, f9, f22, f10, dyn # perform operation
fnmadd.s f24, f9, f22, f10, rdn # perform operation
fnmadd.s f24, f9, f22, f10, rmm # perform operation
fnmadd.s f24, f9, f22, f10, rne # perform operation
fnmadd.s f24, f9, f22, f10, rtz # perform operation
fnmadd.s f24, f9, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x3017f516c9a5aeaa # load x3 with value 0x3017f516c9a5aeaa
sw x3, 0(x2) # store 0x3017f516c9a5aeaa in memory
flw f3, 0(x2) # load 0x3017f516c9a5aeaa from memory into f3
fnmadd.s f17, f21, f6, f3, dyn # perform operation
fnmadd.s f17, f21, f6, f3, rdn # perform operation
fnmadd.s f17, f21, f6, f3, rmm # perform operation
fnmadd.s f17, f21, f6, f3, rne # perform operation
fnmadd.s f17, f21, f6, f3, rtz # perform operation
fnmadd.s f17, f21, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f21, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x38e904b67d52f04f # load x3 with value 0x38e904b67d52f04f
sw x3, 0(x2) # store 0x38e904b67d52f04f in memory
flw f17, 0(x2) # load 0x38e904b67d52f04f from memory into f17
fnmadd.s f9, f15, f20, f17, dyn # perform operation
fnmadd.s f9, f15, f20, f17, rdn # perform operation
fnmadd.s f9, f15, f20, f17, rmm # perform operation
fnmadd.s f9, f15, f20, f17, rne # perform operation
fnmadd.s f9, f15, f20, f17, rtz # perform operation
fnmadd.s f9, f15, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xc630edd3fd264aef # load x3 with value 0xc630edd3fd264aef
sw x3, 0(x2) # store 0xc630edd3fd264aef in memory
flw f28, 0(x2) # load 0xc630edd3fd264aef from memory into f28
fnmadd.s f15, f8, f23, f28, dyn # perform operation
fnmadd.s f15, f8, f23, f28, rdn # perform operation
fnmadd.s f15, f8, f23, f28, rmm # perform operation
fnmadd.s f15, f8, f23, f28, rne # perform operation
fnmadd.s f15, f8, f23, f28, rtz # perform operation
fnmadd.s f15, f8, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x8f94c0a383e305ae # load x3 with value 0x8f94c0a383e305ae
sw x3, 0(x2) # store 0x8f94c0a383e305ae in memory
flw f7, 0(x2) # load 0x8f94c0a383e305ae from memory into f7
fnmadd.s f31, f17, f26, f7, dyn # perform operation
fnmadd.s f31, f17, f26, f7, rdn # perform operation
fnmadd.s f31, f17, f26, f7, rmm # perform operation
fnmadd.s f31, f17, f26, f7, rne # perform operation
fnmadd.s f31, f17, f26, f7, rtz # perform operation
fnmadd.s f31, f17, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xaedbca69fcaba7a7 # load x3 with value 0xaedbca69fcaba7a7
sw x3, 0(x2) # store 0xaedbca69fcaba7a7 in memory
flw f9, 0(x2) # load 0xaedbca69fcaba7a7 from memory into f9
fnmadd.s f26, f20, f31, f9, dyn # perform operation
fnmadd.s f26, f20, f31, f9, rdn # perform operation
fnmadd.s f26, f20, f31, f9, rmm # perform operation
fnmadd.s f26, f20, f31, f9, rne # perform operation
fnmadd.s f26, f20, f31, f9, rtz # perform operation
fnmadd.s f26, f20, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xb03d4ab421074b9a # load x3 with value 0xb03d4ab421074b9a
sw x3, 0(x2) # store 0xb03d4ab421074b9a in memory
flw f8, 0(x2) # load 0xb03d4ab421074b9a from memory into f8
fnmadd.s f28, f27, f31, f8, dyn # perform operation
fnmadd.s f28, f27, f31, f8, rdn # perform operation
fnmadd.s f28, f27, f31, f8, rmm # perform operation
fnmadd.s f28, f27, f31, f8, rne # perform operation
fnmadd.s f28, f27, f31, f8, rtz # perform operation
fnmadd.s f28, f27, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xaa6b80e5d1732333 # load x3 with value 0xaa6b80e5d1732333
sw x3, 0(x2) # store 0xaa6b80e5d1732333 in memory
flw f3, 0(x2) # load 0xaa6b80e5d1732333 from memory into f3
fnmadd.s f7, f9, f1, f3, dyn # perform operation
fnmadd.s f7, f9, f1, f3, rdn # perform operation
fnmadd.s f7, f9, f1, f3, rmm # perform operation
fnmadd.s f7, f9, f1, f3, rne # perform operation
fnmadd.s f7, f9, f1, f3, rtz # perform operation
fnmadd.s f7, f9, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x263b4a4bce16dc38 # load x3 with value 0x263b4a4bce16dc38
sw x3, 0(x2) # store 0x263b4a4bce16dc38 in memory
flw f27, 0(x2) # load 0x263b4a4bce16dc38 from memory into f27
fnmadd.s f5, f19, f2, f27, dyn # perform operation
fnmadd.s f5, f19, f2, f27, rdn # perform operation
fnmadd.s f5, f19, f2, f27, rmm # perform operation
fnmadd.s f5, f19, f2, f27, rne # perform operation
fnmadd.s f5, f19, f2, f27, rtz # perform operation
fnmadd.s f5, f19, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xdaffe796545f334d # load x3 with value 0xdaffe796545f334d
sw x3, 0(x2) # store 0xdaffe796545f334d in memory
flw f16, 0(x2) # load 0xdaffe796545f334d from memory into f16
fnmadd.s f15, f26, f12, f16, dyn # perform operation
fnmadd.s f15, f26, f12, f16, rdn # perform operation
fnmadd.s f15, f26, f12, f16, rmm # perform operation
fnmadd.s f15, f26, f12, f16, rne # perform operation
fnmadd.s f15, f26, f12, f16, rtz # perform operation
fnmadd.s f15, f26, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x6a8a3a6ac53f6973 # load x3 with value 0x6a8a3a6ac53f6973
sw x3, 0(x2) # store 0x6a8a3a6ac53f6973 in memory
flw f22, 0(x2) # load 0x6a8a3a6ac53f6973 from memory into f22
fnmadd.s f12, f15, f19, f22, dyn # perform operation
fnmadd.s f12, f15, f19, f22, rdn # perform operation
fnmadd.s f12, f15, f19, f22, rmm # perform operation
fnmadd.s f12, f15, f19, f22, rne # perform operation
fnmadd.s f12, f15, f19, f22, rtz # perform operation
fnmadd.s f12, f15, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xecaa15997e00360a # load x3 with value 0xecaa15997e00360a
sw x3, 0(x2) # store 0xecaa15997e00360a in memory
flw f6, 0(x2) # load 0xecaa15997e00360a from memory into f6
fnmadd.s f20, f31, f19, f6, dyn # perform operation
fnmadd.s f20, f31, f19, f6, rdn # perform operation
fnmadd.s f20, f31, f19, f6, rmm # perform operation
fnmadd.s f20, f31, f19, f6, rne # perform operation
fnmadd.s f20, f31, f19, f6, rtz # perform operation
fnmadd.s f20, f31, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xaae8bc29414b66da # load x3 with value 0xaae8bc29414b66da
sw x3, 0(x2) # store 0xaae8bc29414b66da in memory
flw f20, 0(x2) # load 0xaae8bc29414b66da from memory into f20
fnmadd.s f1, f23, f29, f20, dyn # perform operation
fnmadd.s f1, f23, f29, f20, rdn # perform operation
fnmadd.s f1, f23, f29, f20, rmm # perform operation
fnmadd.s f1, f23, f29, f20, rne # perform operation
fnmadd.s f1, f23, f29, f20, rtz # perform operation
fnmadd.s f1, f23, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x26481da207f14447 # load x3 with value 0x26481da207f14447
sw x3, 0(x2) # store 0x26481da207f14447 in memory
flw f12, 0(x2) # load 0x26481da207f14447 from memory into f12
fnmadd.s f5, f25, f11, f12, dyn # perform operation
fnmadd.s f5, f25, f11, f12, rdn # perform operation
fnmadd.s f5, f25, f11, f12, rmm # perform operation
fnmadd.s f5, f25, f11, f12, rne # perform operation
fnmadd.s f5, f25, f11, f12, rtz # perform operation
fnmadd.s f5, f25, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x9018ef0bdfc4528e # load x3 with value 0x9018ef0bdfc4528e
sw x3, 0(x2) # store 0x9018ef0bdfc4528e in memory
flw f14, 0(x2) # load 0x9018ef0bdfc4528e from memory into f14
fnmadd.s f20, f10, f21, f14, dyn # perform operation
fnmadd.s f20, f10, f21, f14, rdn # perform operation
fnmadd.s f20, f10, f21, f14, rmm # perform operation
fnmadd.s f20, f10, f21, f14, rne # perform operation
fnmadd.s f20, f10, f21, f14, rtz # perform operation
fnmadd.s f20, f10, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xedd65f40e7308a98 # load x3 with value 0xedd65f40e7308a98
sw x3, 0(x2) # store 0xedd65f40e7308a98 in memory
flw f7, 0(x2) # load 0xedd65f40e7308a98 from memory into f7
fnmadd.s f13, f19, f14, f7, dyn # perform operation
fnmadd.s f13, f19, f14, f7, rdn # perform operation
fnmadd.s f13, f19, f14, f7, rmm # perform operation
fnmadd.s f13, f19, f14, f7, rne # perform operation
fnmadd.s f13, f19, f14, f7, rtz # perform operation
fnmadd.s f13, f19, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0xc70732f56e5ac5b5 # load x3 with value 0xc70732f56e5ac5b5
sw x3, 0(x2) # store 0xc70732f56e5ac5b5 in memory
flw f9, 0(x2) # load 0xc70732f56e5ac5b5 from memory into f9
fnmadd.s f7, f17, f13, f9, dyn # perform operation
fnmadd.s f7, f17, f13, f9, rdn # perform operation
fnmadd.s f7, f17, f13, f9, rmm # perform operation
fnmadd.s f7, f17, f13, f9, rne # perform operation
fnmadd.s f7, f17, f13, f9, rtz # perform operation
fnmadd.s f7, f17, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f17, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f17, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f17, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f17, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f17, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x453d26debfbc1b46 # load x3 with value 0x453d26debfbc1b46
sw x3, 0(x2) # store 0x453d26debfbc1b46 in memory
flw f17, 0(x2) # load 0x453d26debfbc1b46 from memory into f17
fnmadd.s f1, f12, f18, f17, dyn # perform operation
fnmadd.s f1, f12, f18, f17, rdn # perform operation
fnmadd.s f1, f12, f18, f17, rmm # perform operation
fnmadd.s f1, f12, f18, f17, rne # perform operation
fnmadd.s f1, f12, f18, f17, rtz # perform operation
fnmadd.s f1, f12, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0xdec2d1d495b86a5f # load x3 with value 0xdec2d1d495b86a5f
sw x3, 0(x2) # store 0xdec2d1d495b86a5f in memory
flw f19, 0(x2) # load 0xdec2d1d495b86a5f from memory into f19
fnmadd.s f2, f13, f15, f19, dyn # perform operation
fnmadd.s f2, f13, f15, f19, rdn # perform operation
fnmadd.s f2, f13, f15, f19, rmm # perform operation
fnmadd.s f2, f13, f15, f19, rne # perform operation
fnmadd.s f2, f13, f15, f19, rtz # perform operation
fnmadd.s f2, f13, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x824707cbd35a506f # load x3 with value 0x824707cbd35a506f
sw x3, 0(x2) # store 0x824707cbd35a506f in memory
flw f13, 0(x2) # load 0x824707cbd35a506f from memory into f13
fnmadd.s f9, f12, f30, f13, dyn # perform operation
fnmadd.s f9, f12, f30, f13, rdn # perform operation
fnmadd.s f9, f12, f30, f13, rmm # perform operation
fnmadd.s f9, f12, f30, f13, rne # perform operation
fnmadd.s f9, f12, f30, f13, rtz # perform operation
fnmadd.s f9, f12, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0xb9125467765c311b # load x3 with value 0xb9125467765c311b
sw x3, 0(x2) # store 0xb9125467765c311b in memory
flw f6, 0(x2) # load 0xb9125467765c311b from memory into f6
fnmadd.s f23, f19, f18, f6, dyn # perform operation
fnmadd.s f23, f19, f18, f6, rdn # perform operation
fnmadd.s f23, f19, f18, f6, rmm # perform operation
fnmadd.s f23, f19, f18, f6, rne # perform operation
fnmadd.s f23, f19, f18, f6, rtz # perform operation
fnmadd.s f23, f19, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xf2f3b1c4cb52c082 # load x3 with value 0xf2f3b1c4cb52c082
sw x3, 0(x2) # store 0xf2f3b1c4cb52c082 in memory
flw f19, 0(x2) # load 0xf2f3b1c4cb52c082 from memory into f19
fnmadd.s f6, f25, f29, f19, dyn # perform operation
fnmadd.s f6, f25, f29, f19, rdn # perform operation
fnmadd.s f6, f25, f29, f19, rmm # perform operation
fnmadd.s f6, f25, f29, f19, rne # perform operation
fnmadd.s f6, f25, f29, f19, rtz # perform operation
fnmadd.s f6, f25, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x4084650ae2cc5cbc # load x3 with value 0x4084650ae2cc5cbc
sw x3, 0(x2) # store 0x4084650ae2cc5cbc in memory
flw f29, 0(x2) # load 0x4084650ae2cc5cbc from memory into f29
fnmadd.s f5, f6, f8, f29, dyn # perform operation
fnmadd.s f5, f6, f8, f29, rdn # perform operation
fnmadd.s f5, f6, f8, f29, rmm # perform operation
fnmadd.s f5, f6, f8, f29, rne # perform operation
fnmadd.s f5, f6, f8, f29, rtz # perform operation
fnmadd.s f5, f6, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xdc759a327f4ff9d # load x3 with value 0xdc759a327f4ff9d
sw x3, 0(x2) # store 0xdc759a327f4ff9d in memory
flw f19, 0(x2) # load 0xdc759a327f4ff9d from memory into f19
fnmadd.s f2, f21, f30, f19, dyn # perform operation
fnmadd.s f2, f21, f30, f19, rdn # perform operation
fnmadd.s f2, f21, f30, f19, rmm # perform operation
fnmadd.s f2, f21, f30, f19, rne # perform operation
fnmadd.s f2, f21, f30, f19, rtz # perform operation
fnmadd.s f2, f21, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0xcf67f5f714960e43 # load x3 with value 0xcf67f5f714960e43
sw x3, 0(x2) # store 0xcf67f5f714960e43 in memory
flw f17, 0(x2) # load 0xcf67f5f714960e43 from memory into f17
fnmadd.s f12, f8, f15, f17, dyn # perform operation
fnmadd.s f12, f8, f15, f17, rdn # perform operation
fnmadd.s f12, f8, f15, f17, rmm # perform operation
fnmadd.s f12, f8, f15, f17, rne # perform operation
fnmadd.s f12, f8, f15, f17, rtz # perform operation
fnmadd.s f12, f8, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xd627bfed2cbe81e5 # load x3 with value 0xd627bfed2cbe81e5
sw x3, 0(x2) # store 0xd627bfed2cbe81e5 in memory
flw f24, 0(x2) # load 0xd627bfed2cbe81e5 from memory into f24
fnmadd.s f30, f11, f9, f24, dyn # perform operation
fnmadd.s f30, f11, f9, f24, rdn # perform operation
fnmadd.s f30, f11, f9, f24, rmm # perform operation
fnmadd.s f30, f11, f9, f24, rne # perform operation
fnmadd.s f30, f11, f9, f24, rtz # perform operation
fnmadd.s f30, f11, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x58dbd1c9f3e13102 # load x3 with value 0x58dbd1c9f3e13102
sw x3, 0(x2) # store 0x58dbd1c9f3e13102 in memory
flw f22, 0(x2) # load 0x58dbd1c9f3e13102 from memory into f22
fnmadd.s f19, f20, f25, f22, dyn # perform operation
fnmadd.s f19, f20, f25, f22, rdn # perform operation
fnmadd.s f19, f20, f25, f22, rmm # perform operation
fnmadd.s f19, f20, f25, f22, rne # perform operation
fnmadd.s f19, f20, f25, f22, rtz # perform operation
fnmadd.s f19, f20, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x8123d8ebd3a3b62e # load x3 with value 0x8123d8ebd3a3b62e
sw x3, 0(x2) # store 0x8123d8ebd3a3b62e in memory
flw f30, 0(x2) # load 0x8123d8ebd3a3b62e from memory into f30
fnmadd.s f20, f6, f25, f30, dyn # perform operation
fnmadd.s f20, f6, f25, f30, rdn # perform operation
fnmadd.s f20, f6, f25, f30, rmm # perform operation
fnmadd.s f20, f6, f25, f30, rne # perform operation
fnmadd.s f20, f6, f25, f30, rtz # perform operation
fnmadd.s f20, f6, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xac606cd1e98a080c # load x3 with value 0xac606cd1e98a080c
sw x3, 0(x2) # store 0xac606cd1e98a080c in memory
flw f9, 0(x2) # load 0xac606cd1e98a080c from memory into f9
fnmadd.s f7, f8, f11, f9, dyn # perform operation
fnmadd.s f7, f8, f11, f9, rdn # perform operation
fnmadd.s f7, f8, f11, f9, rmm # perform operation
fnmadd.s f7, f8, f11, f9, rne # perform operation
fnmadd.s f7, f8, f11, f9, rtz # perform operation
fnmadd.s f7, f8, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xe90467453b4ba7cc # load x3 with value 0xe90467453b4ba7cc
sw x3, 0(x2) # store 0xe90467453b4ba7cc in memory
flw f14, 0(x2) # load 0xe90467453b4ba7cc from memory into f14
fnmadd.s f13, f25, f8, f14, dyn # perform operation
fnmadd.s f13, f25, f8, f14, rdn # perform operation
fnmadd.s f13, f25, f8, f14, rmm # perform operation
fnmadd.s f13, f25, f8, f14, rne # perform operation
fnmadd.s f13, f25, f8, f14, rtz # perform operation
fnmadd.s f13, f25, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x2b02a20a1e4e6c8e # load x3 with value 0x2b02a20a1e4e6c8e
sw x3, 0(x2) # store 0x2b02a20a1e4e6c8e in memory
flw f7, 0(x2) # load 0x2b02a20a1e4e6c8e from memory into f7
fnmadd.s f2, f15, f27, f7, dyn # perform operation
fnmadd.s f2, f15, f27, f7, rdn # perform operation
fnmadd.s f2, f15, f27, f7, rmm # perform operation
fnmadd.s f2, f15, f27, f7, rne # perform operation
fnmadd.s f2, f15, f27, f7, rtz # perform operation
fnmadd.s f2, f15, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x9f15cada265b884 # load x3 with value 0x9f15cada265b884
sw x3, 0(x2) # store 0x9f15cada265b884 in memory
flw f17, 0(x2) # load 0x9f15cada265b884 from memory into f17
fnmadd.s f11, f7, f12, f17, dyn # perform operation
fnmadd.s f11, f7, f12, f17, rdn # perform operation
fnmadd.s f11, f7, f12, f17, rmm # perform operation
fnmadd.s f11, f7, f12, f17, rne # perform operation
fnmadd.s f11, f7, f12, f17, rtz # perform operation
fnmadd.s f11, f7, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x912a5718c6c52181 # load x3 with value 0x912a5718c6c52181
sw x3, 0(x2) # store 0x912a5718c6c52181 in memory
flw f24, 0(x2) # load 0x912a5718c6c52181 from memory into f24
fnmadd.s f20, f29, f1, f24, dyn # perform operation
fnmadd.s f20, f29, f1, f24, rdn # perform operation
fnmadd.s f20, f29, f1, f24, rmm # perform operation
fnmadd.s f20, f29, f1, f24, rne # perform operation
fnmadd.s f20, f29, f1, f24, rtz # perform operation
fnmadd.s f20, f29, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x785b608dd7865afd # load x3 with value 0x785b608dd7865afd
sw x3, 0(x2) # store 0x785b608dd7865afd in memory
flw f20, 0(x2) # load 0x785b608dd7865afd from memory into f20
fnmadd.s f27, f31, f5, f20, dyn # perform operation
fnmadd.s f27, f31, f5, f20, rdn # perform operation
fnmadd.s f27, f31, f5, f20, rmm # perform operation
fnmadd.s f27, f31, f5, f20, rne # perform operation
fnmadd.s f27, f31, f5, f20, rtz # perform operation
fnmadd.s f27, f31, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x6fd72c045992c269 # load x3 with value 0x6fd72c045992c269
sw x3, 0(x2) # store 0x6fd72c045992c269 in memory
flw f20, 0(x2) # load 0x6fd72c045992c269 from memory into f20
fnmadd.s f25, f31, f29, f20, dyn # perform operation
fnmadd.s f25, f31, f29, f20, rdn # perform operation
fnmadd.s f25, f31, f29, f20, rmm # perform operation
fnmadd.s f25, f31, f29, f20, rne # perform operation
fnmadd.s f25, f31, f29, f20, rtz # perform operation
fnmadd.s f25, f31, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xa02ba28641f333fe # load x3 with value 0xa02ba28641f333fe
sw x3, 0(x2) # store 0xa02ba28641f333fe in memory
flw f2, 0(x2) # load 0xa02ba28641f333fe from memory into f2
fnmadd.s f20, f9, f13, f2, dyn # perform operation
fnmadd.s f20, f9, f13, f2, rdn # perform operation
fnmadd.s f20, f9, f13, f2, rmm # perform operation
fnmadd.s f20, f9, f13, f2, rne # perform operation
fnmadd.s f20, f9, f13, f2, rtz # perform operation
fnmadd.s f20, f9, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x4d2ac4997294a07c # load x3 with value 0x4d2ac4997294a07c
sw x3, 0(x2) # store 0x4d2ac4997294a07c in memory
flw f20, 0(x2) # load 0x4d2ac4997294a07c from memory into f20
fnmadd.s f15, f27, f8, f20, dyn # perform operation
fnmadd.s f15, f27, f8, f20, rdn # perform operation
fnmadd.s f15, f27, f8, f20, rmm # perform operation
fnmadd.s f15, f27, f8, f20, rne # perform operation
fnmadd.s f15, f27, f8, f20, rtz # perform operation
fnmadd.s f15, f27, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x80ec79382935028e # load x3 with value 0x80ec79382935028e
sw x3, 0(x2) # store 0x80ec79382935028e in memory
flw f26, 0(x2) # load 0x80ec79382935028e from memory into f26
fnmadd.s f22, f24, f30, f26, dyn # perform operation
fnmadd.s f22, f24, f30, f26, rdn # perform operation
fnmadd.s f22, f24, f30, f26, rmm # perform operation
fnmadd.s f22, f24, f30, f26, rne # perform operation
fnmadd.s f22, f24, f30, f26, rtz # perform operation
fnmadd.s f22, f24, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x9ca725a0e3f56f5c # load x3 with value 0x9ca725a0e3f56f5c
sw x3, 0(x2) # store 0x9ca725a0e3f56f5c in memory
flw f31, 0(x2) # load 0x9ca725a0e3f56f5c from memory into f31
fnmadd.s f7, f12, f11, f31, dyn # perform operation
fnmadd.s f7, f12, f11, f31, rdn # perform operation
fnmadd.s f7, f12, f11, f31, rmm # perform operation
fnmadd.s f7, f12, f11, f31, rne # perform operation
fnmadd.s f7, f12, f11, f31, rtz # perform operation
fnmadd.s f7, f12, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xf6a26ebde9617dca # load x3 with value 0xf6a26ebde9617dca
sw x3, 0(x2) # store 0xf6a26ebde9617dca in memory
flw f5, 0(x2) # load 0xf6a26ebde9617dca from memory into f5
fnmadd.s f3, f15, f24, f5, dyn # perform operation
fnmadd.s f3, f15, f24, f5, rdn # perform operation
fnmadd.s f3, f15, f24, f5, rmm # perform operation
fnmadd.s f3, f15, f24, f5, rne # perform operation
fnmadd.s f3, f15, f24, f5, rtz # perform operation
fnmadd.s f3, f15, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x581430994d215a4c # load x3 with value 0x581430994d215a4c
sw x3, 0(x2) # store 0x581430994d215a4c in memory
flw f30, 0(x2) # load 0x581430994d215a4c from memory into f30
fnmadd.s f31, f7, f20, f30, dyn # perform operation
fnmadd.s f31, f7, f20, f30, rdn # perform operation
fnmadd.s f31, f7, f20, f30, rmm # perform operation
fnmadd.s f31, f7, f20, f30, rne # perform operation
fnmadd.s f31, f7, f20, f30, rtz # perform operation
fnmadd.s f31, f7, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x80d51b9b0627a1e5 # load x3 with value 0x80d51b9b0627a1e5
sw x3, 0(x2) # store 0x80d51b9b0627a1e5 in memory
flw f2, 0(x2) # load 0x80d51b9b0627a1e5 from memory into f2
fnmadd.s f7, f19, f13, f2, dyn # perform operation
fnmadd.s f7, f19, f13, f2, rdn # perform operation
fnmadd.s f7, f19, f13, f2, rmm # perform operation
fnmadd.s f7, f19, f13, f2, rne # perform operation
fnmadd.s f7, f19, f13, f2, rtz # perform operation
fnmadd.s f7, f19, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xf318a792e7ae4349 # load x3 with value 0xf318a792e7ae4349
sw x3, 0(x2) # store 0xf318a792e7ae4349 in memory
flw f30, 0(x2) # load 0xf318a792e7ae4349 from memory into f30
fnmadd.s f28, f13, f25, f30, dyn # perform operation
fnmadd.s f28, f13, f25, f30, rdn # perform operation
fnmadd.s f28, f13, f25, f30, rmm # perform operation
fnmadd.s f28, f13, f25, f30, rne # perform operation
fnmadd.s f28, f13, f25, f30, rtz # perform operation
fnmadd.s f28, f13, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f13, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f13, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f13, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f13, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f13, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0xf7012a7fc12898b3 # load x3 with value 0xf7012a7fc12898b3
sw x3, 0(x2) # store 0xf7012a7fc12898b3 in memory
flw f3, 0(x2) # load 0xf7012a7fc12898b3 from memory into f3
fnmadd.s f1, f26, f13, f3, dyn # perform operation
fnmadd.s f1, f26, f13, f3, rdn # perform operation
fnmadd.s f1, f26, f13, f3, rmm # perform operation
fnmadd.s f1, f26, f13, f3, rne # perform operation
fnmadd.s f1, f26, f13, f3, rtz # perform operation
fnmadd.s f1, f26, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x820c61bd27a17ce9 # load x3 with value 0x820c61bd27a17ce9
sw x3, 0(x2) # store 0x820c61bd27a17ce9 in memory
flw f13, 0(x2) # load 0x820c61bd27a17ce9 from memory into f13
fnmadd.s f22, f5, f10, f13, dyn # perform operation
fnmadd.s f22, f5, f10, f13, rdn # perform operation
fnmadd.s f22, f5, f10, f13, rmm # perform operation
fnmadd.s f22, f5, f10, f13, rne # perform operation
fnmadd.s f22, f5, f10, f13, rtz # perform operation
fnmadd.s f22, f5, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f5, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xeaef9b7122f7e900 # load x3 with value 0xeaef9b7122f7e900
sw x3, 0(x2) # store 0xeaef9b7122f7e900 in memory
flw f16, 0(x2) # load 0xeaef9b7122f7e900 from memory into f16
fnmadd.s f11, f28, f8, f16, dyn # perform operation
fnmadd.s f11, f28, f8, f16, rdn # perform operation
fnmadd.s f11, f28, f8, f16, rmm # perform operation
fnmadd.s f11, f28, f8, f16, rne # perform operation
fnmadd.s f11, f28, f8, f16, rtz # perform operation
fnmadd.s f11, f28, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f8, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x9e9959bc01bde935 # load x3 with value 0x9e9959bc01bde935
sw x3, 0(x2) # store 0x9e9959bc01bde935 in memory
flw f20, 0(x2) # load 0x9e9959bc01bde935 from memory into f20
fnmadd.s f10, f24, f23, f20, dyn # perform operation
fnmadd.s f10, f24, f23, f20, rdn # perform operation
fnmadd.s f10, f24, f23, f20, rmm # perform operation
fnmadd.s f10, f24, f23, f20, rne # perform operation
fnmadd.s f10, f24, f23, f20, rtz # perform operation
fnmadd.s f10, f24, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x476fcfadef28e430 # load x3 with value 0x476fcfadef28e430
sw x3, 0(x2) # store 0x476fcfadef28e430 in memory
flw f3, 0(x2) # load 0x476fcfadef28e430 from memory into f3
fnmadd.s f19, f1, f16, f3, dyn # perform operation
fnmadd.s f19, f1, f16, f3, rdn # perform operation
fnmadd.s f19, f1, f16, f3, rmm # perform operation
fnmadd.s f19, f1, f16, f3, rne # perform operation
fnmadd.s f19, f1, f16, f3, rtz # perform operation
fnmadd.s f19, f1, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xa3246059d6fd9eae # load x3 with value 0xa3246059d6fd9eae
sw x3, 0(x2) # store 0xa3246059d6fd9eae in memory
flw f6, 0(x2) # load 0xa3246059d6fd9eae from memory into f6
fnmadd.s f7, f30, f28, f6, dyn # perform operation
fnmadd.s f7, f30, f28, f6, rdn # perform operation
fnmadd.s f7, f30, f28, f6, rmm # perform operation
fnmadd.s f7, f30, f28, f6, rne # perform operation
fnmadd.s f7, f30, f28, f6, rtz # perform operation
fnmadd.s f7, f30, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xf39aa075a38f4d6c # load x3 with value 0xf39aa075a38f4d6c
sw x3, 0(x2) # store 0xf39aa075a38f4d6c in memory
flw f6, 0(x2) # load 0xf39aa075a38f4d6c from memory into f6
fnmadd.s f7, f24, f17, f6, dyn # perform operation
fnmadd.s f7, f24, f17, f6, rdn # perform operation
fnmadd.s f7, f24, f17, f6, rmm # perform operation
fnmadd.s f7, f24, f17, f6, rne # perform operation
fnmadd.s f7, f24, f17, f6, rtz # perform operation
fnmadd.s f7, f24, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x1b13cc6d92369d5d # load x3 with value 0x1b13cc6d92369d5d
sw x3, 0(x2) # store 0x1b13cc6d92369d5d in memory
flw f12, 0(x2) # load 0x1b13cc6d92369d5d from memory into f12
fnmadd.s f11, f7, f24, f12, dyn # perform operation
fnmadd.s f11, f7, f24, f12, rdn # perform operation
fnmadd.s f11, f7, f24, f12, rmm # perform operation
fnmadd.s f11, f7, f24, f12, rne # perform operation
fnmadd.s f11, f7, f24, f12, rtz # perform operation
fnmadd.s f11, f7, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xd25ad4b9a3ae1567 # load x3 with value 0xd25ad4b9a3ae1567
sw x3, 0(x2) # store 0xd25ad4b9a3ae1567 in memory
flw f7, 0(x2) # load 0xd25ad4b9a3ae1567 from memory into f7
fnmadd.s f25, f10, f29, f7, dyn # perform operation
fnmadd.s f25, f10, f29, f7, rdn # perform operation
fnmadd.s f25, f10, f29, f7, rmm # perform operation
fnmadd.s f25, f10, f29, f7, rne # perform operation
fnmadd.s f25, f10, f29, f7, rtz # perform operation
fnmadd.s f25, f10, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f10, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xfb5c9a86bd65c9d9 # load x3 with value 0xfb5c9a86bd65c9d9
sw x3, 0(x2) # store 0xfb5c9a86bd65c9d9 in memory
flw f3, 0(x2) # load 0xfb5c9a86bd65c9d9 from memory into f3
fnmadd.s f17, f16, f20, f3, dyn # perform operation
fnmadd.s f17, f16, f20, f3, rdn # perform operation
fnmadd.s f17, f16, f20, f3, rmm # perform operation
fnmadd.s f17, f16, f20, f3, rne # perform operation
fnmadd.s f17, f16, f20, f3, rtz # perform operation
fnmadd.s f17, f16, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f16, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x6ac6dc8bddff63c6 # load x3 with value 0x6ac6dc8bddff63c6
sw x3, 0(x2) # store 0x6ac6dc8bddff63c6 in memory
flw f19, 0(x2) # load 0x6ac6dc8bddff63c6 from memory into f19
fnmadd.s f23, f1, f3, f19, dyn # perform operation
fnmadd.s f23, f1, f3, f19, rdn # perform operation
fnmadd.s f23, f1, f3, f19, rmm # perform operation
fnmadd.s f23, f1, f3, f19, rne # perform operation
fnmadd.s f23, f1, f3, f19, rtz # perform operation
fnmadd.s f23, f1, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x82277705d1483117 # load x3 with value 0x82277705d1483117
sw x3, 0(x2) # store 0x82277705d1483117 in memory
flw f23, 0(x2) # load 0x82277705d1483117 from memory into f23
fnmadd.s f14, f9, f11, f23, dyn # perform operation
fnmadd.s f14, f9, f11, f23, rdn # perform operation
fnmadd.s f14, f9, f11, f23, rmm # perform operation
fnmadd.s f14, f9, f11, f23, rne # perform operation
fnmadd.s f14, f9, f11, f23, rtz # perform operation
fnmadd.s f14, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xc27af0dde035d05f # load x3 with value 0xc27af0dde035d05f
sw x3, 0(x2) # store 0xc27af0dde035d05f in memory
flw f12, 0(x2) # load 0xc27af0dde035d05f from memory into f12
fnmadd.s f13, f3, f16, f12, dyn # perform operation
fnmadd.s f13, f3, f16, f12, rdn # perform operation
fnmadd.s f13, f3, f16, f12, rmm # perform operation
fnmadd.s f13, f3, f16, f12, rne # perform operation
fnmadd.s f13, f3, f16, f12, rtz # perform operation
fnmadd.s f13, f3, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f3, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f3, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f3, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f3, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f3, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x57de1f3795796be6 # load x3 with value 0x57de1f3795796be6
sw x3, 0(x2) # store 0x57de1f3795796be6 in memory
flw f1, 0(x2) # load 0x57de1f3795796be6 from memory into f1
fnmadd.s f18, f7, f22, f1, dyn # perform operation
fnmadd.s f18, f7, f22, f1, rdn # perform operation
fnmadd.s f18, f7, f22, f1, rmm # perform operation
fnmadd.s f18, f7, f22, f1, rne # perform operation
fnmadd.s f18, f7, f22, f1, rtz # perform operation
fnmadd.s f18, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f7, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x8ddd22252fb8340b # load x3 with value 0x8ddd22252fb8340b
sw x3, 0(x2) # store 0x8ddd22252fb8340b in memory
flw f1, 0(x2) # load 0x8ddd22252fb8340b from memory into f1
fnmadd.s f8, f14, f21, f1, dyn # perform operation
fnmadd.s f8, f14, f21, f1, rdn # perform operation
fnmadd.s f8, f14, f21, f1, rmm # perform operation
fnmadd.s f8, f14, f21, f1, rne # perform operation
fnmadd.s f8, f14, f21, f1, rtz # perform operation
fnmadd.s f8, f14, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f14, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f14, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f14, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f14, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f14, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x160d837976af81f3 # load x3 with value 0x160d837976af81f3
sw x3, 0(x2) # store 0x160d837976af81f3 in memory
flw f6, 0(x2) # load 0x160d837976af81f3 from memory into f6
fnmadd.s f19, f7, f29, f6, dyn # perform operation
fnmadd.s f19, f7, f29, f6, rdn # perform operation
fnmadd.s f19, f7, f29, f6, rmm # perform operation
fnmadd.s f19, f7, f29, f6, rne # perform operation
fnmadd.s f19, f7, f29, f6, rtz # perform operation
fnmadd.s f19, f7, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f7, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x58276d3b0cbb41e0 # load x3 with value 0x58276d3b0cbb41e0
sw x3, 0(x2) # store 0x58276d3b0cbb41e0 in memory
flw f11, 0(x2) # load 0x58276d3b0cbb41e0 from memory into f11
fnmadd.s f9, f3, f14, f11, dyn # perform operation
fnmadd.s f9, f3, f14, f11, rdn # perform operation
fnmadd.s f9, f3, f14, f11, rmm # perform operation
fnmadd.s f9, f3, f14, f11, rne # perform operation
fnmadd.s f9, f3, f14, f11, rtz # perform operation
fnmadd.s f9, f3, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xd3aa20a11ab45dd1 # load x3 with value 0xd3aa20a11ab45dd1
sw x3, 0(x2) # store 0xd3aa20a11ab45dd1 in memory
flw f24, 0(x2) # load 0xd3aa20a11ab45dd1 from memory into f24
fnmadd.s f17, f14, f9, f24, dyn # perform operation
fnmadd.s f17, f14, f9, f24, rdn # perform operation
fnmadd.s f17, f14, f9, f24, rmm # perform operation
fnmadd.s f17, f14, f9, f24, rne # perform operation
fnmadd.s f17, f14, f9, f24, rtz # perform operation
fnmadd.s f17, f14, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x173363c32b2d27db # load x3 with value 0x173363c32b2d27db
sw x3, 0(x2) # store 0x173363c32b2d27db in memory
flw f22, 0(x2) # load 0x173363c32b2d27db from memory into f22
fnmadd.s f25, f18, f2, f22, dyn # perform operation
fnmadd.s f25, f18, f2, f22, rdn # perform operation
fnmadd.s f25, f18, f2, f22, rmm # perform operation
fnmadd.s f25, f18, f2, f22, rne # perform operation
fnmadd.s f25, f18, f2, f22, rtz # perform operation
fnmadd.s f25, f18, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f18, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f18, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f18, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f18, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f18, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xe0a69e4217b834e8 # load x3 with value 0xe0a69e4217b834e8
sw x3, 0(x2) # store 0xe0a69e4217b834e8 in memory
flw f13, 0(x2) # load 0xe0a69e4217b834e8 from memory into f13
fnmadd.s f31, f5, f14, f13, dyn # perform operation
fnmadd.s f31, f5, f14, f13, rdn # perform operation
fnmadd.s f31, f5, f14, f13, rmm # perform operation
fnmadd.s f31, f5, f14, f13, rne # perform operation
fnmadd.s f31, f5, f14, f13, rtz # perform operation
fnmadd.s f31, f5, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xc14649dffe39db62 # load x3 with value 0xc14649dffe39db62
sw x3, 0(x2) # store 0xc14649dffe39db62 in memory
flw f2, 0(x2) # load 0xc14649dffe39db62 from memory into f2
fnmadd.s f23, f3, f28, f2, dyn # perform operation
fnmadd.s f23, f3, f28, f2, rdn # perform operation
fnmadd.s f23, f3, f28, f2, rmm # perform operation
fnmadd.s f23, f3, f28, f2, rne # perform operation
fnmadd.s f23, f3, f28, f2, rtz # perform operation
fnmadd.s f23, f3, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x299ec569816fa406 # load x3 with value 0x299ec569816fa406
sw x3, 0(x2) # store 0x299ec569816fa406 in memory
flw f25, 0(x2) # load 0x299ec569816fa406 from memory into f25
fnmadd.s f14, f22, f3, f25, dyn # perform operation
fnmadd.s f14, f22, f3, f25, rdn # perform operation
fnmadd.s f14, f22, f3, f25, rmm # perform operation
fnmadd.s f14, f22, f3, f25, rne # perform operation
fnmadd.s f14, f22, f3, f25, rtz # perform operation
fnmadd.s f14, f22, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x354be63b8e2834a9 # load x3 with value 0x354be63b8e2834a9
sw x3, 0(x2) # store 0x354be63b8e2834a9 in memory
flw f19, 0(x2) # load 0x354be63b8e2834a9 from memory into f19
fnmadd.s f13, f14, f7, f19, dyn # perform operation
fnmadd.s f13, f14, f7, f19, rdn # perform operation
fnmadd.s f13, f14, f7, f19, rmm # perform operation
fnmadd.s f13, f14, f7, f19, rne # perform operation
fnmadd.s f13, f14, f7, f19, rtz # perform operation
fnmadd.s f13, f14, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f14, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f14, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xf9ebcc30d6f1cae1 # load x3 with value 0xf9ebcc30d6f1cae1
sw x3, 0(x2) # store 0xf9ebcc30d6f1cae1 in memory
flw f22, 0(x2) # load 0xf9ebcc30d6f1cae1 from memory into f22
fnmadd.s f31, f30, f7, f22, dyn # perform operation
fnmadd.s f31, f30, f7, f22, rdn # perform operation
fnmadd.s f31, f30, f7, f22, rmm # perform operation
fnmadd.s f31, f30, f7, f22, rne # perform operation
fnmadd.s f31, f30, f7, f22, rtz # perform operation
fnmadd.s f31, f30, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x8ffd3bf3f134a60 # load x3 with value 0x8ffd3bf3f134a60
sw x3, 0(x2) # store 0x8ffd3bf3f134a60 in memory
flw f15, 0(x2) # load 0x8ffd3bf3f134a60 from memory into f15
fnmadd.s f18, f25, f6, f15, dyn # perform operation
fnmadd.s f18, f25, f6, f15, rdn # perform operation
fnmadd.s f18, f25, f6, f15, rmm # perform operation
fnmadd.s f18, f25, f6, f15, rne # perform operation
fnmadd.s f18, f25, f6, f15, rtz # perform operation
fnmadd.s f18, f25, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f25, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f25, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f25, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f25, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f25, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xa5e5fabffba8ae0a # load x3 with value 0xa5e5fabffba8ae0a
sw x3, 0(x2) # store 0xa5e5fabffba8ae0a in memory
flw f25, 0(x2) # load 0xa5e5fabffba8ae0a from memory into f25
fnmadd.s f3, f11, f31, f25, dyn # perform operation
fnmadd.s f3, f11, f31, f25, rdn # perform operation
fnmadd.s f3, f11, f31, f25, rmm # perform operation
fnmadd.s f3, f11, f31, f25, rne # perform operation
fnmadd.s f3, f11, f31, f25, rtz # perform operation
fnmadd.s f3, f11, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f11, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x90f49def121f637e # load x3 with value 0x90f49def121f637e
sw x3, 0(x2) # store 0x90f49def121f637e in memory
flw f21, 0(x2) # load 0x90f49def121f637e from memory into f21
fnmadd.s f19, f30, f25, f21, dyn # perform operation
fnmadd.s f19, f30, f25, f21, rdn # perform operation
fnmadd.s f19, f30, f25, f21, rmm # perform operation
fnmadd.s f19, f30, f25, f21, rne # perform operation
fnmadd.s f19, f30, f25, f21, rtz # perform operation
fnmadd.s f19, f30, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x44e1931dcd9c24cf # load x3 with value 0x44e1931dcd9c24cf
sw x3, 0(x2) # store 0x44e1931dcd9c24cf in memory
flw f8, 0(x2) # load 0x44e1931dcd9c24cf from memory into f8
fnmadd.s f26, f14, f23, f8, dyn # perform operation
fnmadd.s f26, f14, f23, f8, rdn # perform operation
fnmadd.s f26, f14, f23, f8, rmm # perform operation
fnmadd.s f26, f14, f23, f8, rne # perform operation
fnmadd.s f26, f14, f23, f8, rtz # perform operation
fnmadd.s f26, f14, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f14, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f14, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f14, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f14, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f14, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x9acb77d57bc6a6c7 # load x3 with value 0x9acb77d57bc6a6c7
sw x3, 0(x2) # store 0x9acb77d57bc6a6c7 in memory
flw f18, 0(x2) # load 0x9acb77d57bc6a6c7 from memory into f18
fnmadd.s f29, f26, f3, f18, dyn # perform operation
fnmadd.s f29, f26, f3, f18, rdn # perform operation
fnmadd.s f29, f26, f3, f18, rmm # perform operation
fnmadd.s f29, f26, f3, f18, rne # perform operation
fnmadd.s f29, f26, f3, f18, rtz # perform operation
fnmadd.s f29, f26, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x1820fc95bc8988f5 # load x3 with value 0x1820fc95bc8988f5
sw x3, 0(x2) # store 0x1820fc95bc8988f5 in memory
flw f9, 0(x2) # load 0x1820fc95bc8988f5 from memory into f9
fnmadd.s f26, f12, f18, f9, dyn # perform operation
fnmadd.s f26, f12, f18, f9, rdn # perform operation
fnmadd.s f26, f12, f18, f9, rmm # perform operation
fnmadd.s f26, f12, f18, f9, rne # perform operation
fnmadd.s f26, f12, f18, f9, rtz # perform operation
fnmadd.s f26, f12, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xa5710e8a0d8ab8ab # load x3 with value 0xa5710e8a0d8ab8ab
sw x3, 0(x2) # store 0xa5710e8a0d8ab8ab in memory
flw f25, 0(x2) # load 0xa5710e8a0d8ab8ab from memory into f25
fnmadd.s f24, f20, f31, f25, dyn # perform operation
fnmadd.s f24, f20, f31, f25, rdn # perform operation
fnmadd.s f24, f20, f31, f25, rmm # perform operation
fnmadd.s f24, f20, f31, f25, rne # perform operation
fnmadd.s f24, f20, f31, f25, rtz # perform operation
fnmadd.s f24, f20, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xcdfd76394b14a799 # load x3 with value 0xcdfd76394b14a799
sw x3, 0(x2) # store 0xcdfd76394b14a799 in memory
flw f9, 0(x2) # load 0xcdfd76394b14a799 from memory into f9
fnmadd.s f6, f18, f20, f9, dyn # perform operation
fnmadd.s f6, f18, f20, f9, rdn # perform operation
fnmadd.s f6, f18, f20, f9, rmm # perform operation
fnmadd.s f6, f18, f20, f9, rne # perform operation
fnmadd.s f6, f18, f20, f9, rtz # perform operation
fnmadd.s f6, f18, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f18, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f18, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f18, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f18, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f18, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x867d284226ada692 # load x3 with value 0x867d284226ada692
sw x3, 0(x2) # store 0x867d284226ada692 in memory
flw f19, 0(x2) # load 0x867d284226ada692 from memory into f19
fnmadd.s f6, f14, f11, f19, dyn # perform operation
fnmadd.s f6, f14, f11, f19, rdn # perform operation
fnmadd.s f6, f14, f11, f19, rmm # perform operation
fnmadd.s f6, f14, f11, f19, rne # perform operation
fnmadd.s f6, f14, f11, f19, rtz # perform operation
fnmadd.s f6, f14, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f14, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xc15a3daf4c2bca47 # load x3 with value 0xc15a3daf4c2bca47
sw x3, 0(x2) # store 0xc15a3daf4c2bca47 in memory
flw f27, 0(x2) # load 0xc15a3daf4c2bca47 from memory into f27
fnmadd.s f29, f15, f3, f27, dyn # perform operation
fnmadd.s f29, f15, f3, f27, rdn # perform operation
fnmadd.s f29, f15, f3, f27, rmm # perform operation
fnmadd.s f29, f15, f3, f27, rne # perform operation
fnmadd.s f29, f15, f3, f27, rtz # perform operation
fnmadd.s f29, f15, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x4e03b9b960086257 # load x3 with value 0x4e03b9b960086257
sw x3, 0(x2) # store 0x4e03b9b960086257 in memory
flw f3, 0(x2) # load 0x4e03b9b960086257 from memory into f3
fnmadd.s f28, f13, f7, f3, dyn # perform operation
fnmadd.s f28, f13, f7, f3, rdn # perform operation
fnmadd.s f28, f13, f7, f3, rmm # perform operation
fnmadd.s f28, f13, f7, f3, rne # perform operation
fnmadd.s f28, f13, f7, f3, rtz # perform operation
fnmadd.s f28, f13, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f13, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f13, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f13, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f13, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f13, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xa0a3d7f53dcf53d2 # load x3 with value 0xa0a3d7f53dcf53d2
sw x3, 0(x2) # store 0xa0a3d7f53dcf53d2 in memory
flw f13, 0(x2) # load 0xa0a3d7f53dcf53d2 from memory into f13
fnmadd.s f27, f8, f15, f13, dyn # perform operation
fnmadd.s f27, f8, f15, f13, rdn # perform operation
fnmadd.s f27, f8, f15, f13, rmm # perform operation
fnmadd.s f27, f8, f15, f13, rne # perform operation
fnmadd.s f27, f8, f15, f13, rtz # perform operation
fnmadd.s f27, f8, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x5c2bea4776a37652 # load x3 with value 0x5c2bea4776a37652
sw x3, 0(x2) # store 0x5c2bea4776a37652 in memory
flw f5, 0(x2) # load 0x5c2bea4776a37652 from memory into f5
fnmadd.s f15, f2, f7, f5, dyn # perform operation
fnmadd.s f15, f2, f7, f5, rdn # perform operation
fnmadd.s f15, f2, f7, f5, rmm # perform operation
fnmadd.s f15, f2, f7, f5, rne # perform operation
fnmadd.s f15, f2, f7, f5, rtz # perform operation
fnmadd.s f15, f2, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xd3e6b7edd0a2e79d # load x3 with value 0xd3e6b7edd0a2e79d
sw x3, 0(x2) # store 0xd3e6b7edd0a2e79d in memory
flw f12, 0(x2) # load 0xd3e6b7edd0a2e79d from memory into f12
fnmadd.s f17, f19, f23, f12, dyn # perform operation
fnmadd.s f17, f19, f23, f12, rdn # perform operation
fnmadd.s f17, f19, f23, f12, rmm # perform operation
fnmadd.s f17, f19, f23, f12, rne # perform operation
fnmadd.s f17, f19, f23, f12, rtz # perform operation
fnmadd.s f17, f19, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x8b05fb128f6acdc2 # load x3 with value 0x8b05fb128f6acdc2
sw x3, 0(x2) # store 0x8b05fb128f6acdc2 in memory
flw f29, 0(x2) # load 0x8b05fb128f6acdc2 from memory into f29
fnmadd.s f18, f12, f8, f29, dyn # perform operation
fnmadd.s f18, f12, f8, f29, rdn # perform operation
fnmadd.s f18, f12, f8, f29, rmm # perform operation
fnmadd.s f18, f12, f8, f29, rne # perform operation
fnmadd.s f18, f12, f8, f29, rtz # perform operation
fnmadd.s f18, f12, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xbf969a549f031b0c # load x3 with value 0xbf969a549f031b0c
sw x3, 0(x2) # store 0xbf969a549f031b0c in memory
flw f20, 0(x2) # load 0xbf969a549f031b0c from memory into f20
fnmadd.s f28, f25, f21, f20, dyn # perform operation
fnmadd.s f28, f25, f21, f20, rdn # perform operation
fnmadd.s f28, f25, f21, f20, rmm # perform operation
fnmadd.s f28, f25, f21, f20, rne # perform operation
fnmadd.s f28, f25, f21, f20, rtz # perform operation
fnmadd.s f28, f25, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x712c2e2e7d7edae5 # load x3 with value 0x712c2e2e7d7edae5
sw x3, 0(x2) # store 0x712c2e2e7d7edae5 in memory
flw f2, 0(x2) # load 0x712c2e2e7d7edae5 from memory into f2
fnmadd.s f19, f5, f27, f2, dyn # perform operation
fnmadd.s f19, f5, f27, f2, rdn # perform operation
fnmadd.s f19, f5, f27, f2, rmm # perform operation
fnmadd.s f19, f5, f27, f2, rne # perform operation
fnmadd.s f19, f5, f27, f2, rtz # perform operation
fnmadd.s f19, f5, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xcdc2fabef1d46287 # load x3 with value 0xcdc2fabef1d46287
sw x3, 0(x2) # store 0xcdc2fabef1d46287 in memory
flw f22, 0(x2) # load 0xcdc2fabef1d46287 from memory into f22
fnmadd.s f5, f21, f29, f22, dyn # perform operation
fnmadd.s f5, f21, f29, f22, rdn # perform operation
fnmadd.s f5, f21, f29, f22, rmm # perform operation
fnmadd.s f5, f21, f29, f22, rne # perform operation
fnmadd.s f5, f21, f29, f22, rtz # perform operation
fnmadd.s f5, f21, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x8564f2b7d3b0450d # load x3 with value 0x8564f2b7d3b0450d
sw x3, 0(x2) # store 0x8564f2b7d3b0450d in memory
flw f16, 0(x2) # load 0x8564f2b7d3b0450d from memory into f16
fnmadd.s f5, f10, f2, f16, dyn # perform operation
fnmadd.s f5, f10, f2, f16, rdn # perform operation
fnmadd.s f5, f10, f2, f16, rmm # perform operation
fnmadd.s f5, f10, f2, f16, rne # perform operation
fnmadd.s f5, f10, f2, f16, rtz # perform operation
fnmadd.s f5, f10, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f10, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x8ad8e13cb3958372 # load x3 with value 0x8ad8e13cb3958372
sw x3, 0(x2) # store 0x8ad8e13cb3958372 in memory
flw f1, 0(x2) # load 0x8ad8e13cb3958372 from memory into f1
fnmadd.s f3, f26, f13, f1, dyn # perform operation
fnmadd.s f3, f26, f13, f1, rdn # perform operation
fnmadd.s f3, f26, f13, f1, rmm # perform operation
fnmadd.s f3, f26, f13, f1, rne # perform operation
fnmadd.s f3, f26, f13, f1, rtz # perform operation
fnmadd.s f3, f26, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x6cfd59e49c5855b7 # load x3 with value 0x6cfd59e49c5855b7
sw x3, 0(x2) # store 0x6cfd59e49c5855b7 in memory
flw f17, 0(x2) # load 0x6cfd59e49c5855b7 from memory into f17
fnmadd.s f13, f11, f9, f17, dyn # perform operation
fnmadd.s f13, f11, f9, f17, rdn # perform operation
fnmadd.s f13, f11, f9, f17, rmm # perform operation
fnmadd.s f13, f11, f9, f17, rne # perform operation
fnmadd.s f13, f11, f9, f17, rtz # perform operation
fnmadd.s f13, f11, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xda59cd526603592f # load x3 with value 0xda59cd526603592f
sw x3, 0(x2) # store 0xda59cd526603592f in memory
flw f10, 0(x2) # load 0xda59cd526603592f from memory into f10
fnmadd.s f24, f22, f11, f10, dyn # perform operation
fnmadd.s f24, f22, f11, f10, rdn # perform operation
fnmadd.s f24, f22, f11, f10, rmm # perform operation
fnmadd.s f24, f22, f11, f10, rne # perform operation
fnmadd.s f24, f22, f11, f10, rtz # perform operation
fnmadd.s f24, f22, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f22, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f22, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x99348364da06476f # load x3 with value 0x99348364da06476f
sw x3, 0(x2) # store 0x99348364da06476f in memory
flw f18, 0(x2) # load 0x99348364da06476f from memory into f18
fnmadd.s f26, f29, f15, f18, dyn # perform operation
fnmadd.s f26, f29, f15, f18, rdn # perform operation
fnmadd.s f26, f29, f15, f18, rmm # perform operation
fnmadd.s f26, f29, f15, f18, rne # perform operation
fnmadd.s f26, f29, f15, f18, rtz # perform operation
fnmadd.s f26, f29, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x529fb77046f8f511 # load x3 with value 0x529fb77046f8f511
sw x3, 0(x2) # store 0x529fb77046f8f511 in memory
flw f13, 0(x2) # load 0x529fb77046f8f511 from memory into f13
fnmadd.s f29, f11, f10, f13, dyn # perform operation
fnmadd.s f29, f11, f10, f13, rdn # perform operation
fnmadd.s f29, f11, f10, f13, rmm # perform operation
fnmadd.s f29, f11, f10, f13, rne # perform operation
fnmadd.s f29, f11, f10, f13, rtz # perform operation
fnmadd.s f29, f11, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x43f82a155e4d2766 # load x3 with value 0x43f82a155e4d2766
sw x3, 0(x2) # store 0x43f82a155e4d2766 in memory
flw f10, 0(x2) # load 0x43f82a155e4d2766 from memory into f10
fnmadd.s f22, f11, f19, f10, dyn # perform operation
fnmadd.s f22, f11, f19, f10, rdn # perform operation
fnmadd.s f22, f11, f19, f10, rmm # perform operation
fnmadd.s f22, f11, f19, f10, rne # perform operation
fnmadd.s f22, f11, f19, f10, rtz # perform operation
fnmadd.s f22, f11, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f11, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f11, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f11, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f11, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f11, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x8487897c5ed8ed86 # load x3 with value 0x8487897c5ed8ed86
sw x3, 0(x2) # store 0x8487897c5ed8ed86 in memory
flw f15, 0(x2) # load 0x8487897c5ed8ed86 from memory into f15
fnmadd.s f22, f17, f30, f15, dyn # perform operation
fnmadd.s f22, f17, f30, f15, rdn # perform operation
fnmadd.s f22, f17, f30, f15, rmm # perform operation
fnmadd.s f22, f17, f30, f15, rne # perform operation
fnmadd.s f22, f17, f30, f15, rtz # perform operation
fnmadd.s f22, f17, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xca1a813075eb0660 # load x3 with value 0xca1a813075eb0660
sw x3, 0(x2) # store 0xca1a813075eb0660 in memory
flw f5, 0(x2) # load 0xca1a813075eb0660 from memory into f5
fnmadd.s f7, f17, f15, f5, dyn # perform operation
fnmadd.s f7, f17, f15, f5, rdn # perform operation
fnmadd.s f7, f17, f15, f5, rmm # perform operation
fnmadd.s f7, f17, f15, f5, rne # perform operation
fnmadd.s f7, f17, f15, f5, rtz # perform operation
fnmadd.s f7, f17, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f17, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xd7e940d44907caf9 # load x3 with value 0xd7e940d44907caf9
sw x3, 0(x2) # store 0xd7e940d44907caf9 in memory
flw f16, 0(x2) # load 0xd7e940d44907caf9 from memory into f16
fnmadd.s f6, f29, f25, f16, dyn # perform operation
fnmadd.s f6, f29, f25, f16, rdn # perform operation
fnmadd.s f6, f29, f25, f16, rmm # perform operation
fnmadd.s f6, f29, f25, f16, rne # perform operation
fnmadd.s f6, f29, f25, f16, rtz # perform operation
fnmadd.s f6, f29, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xe91957aafdd6bc0b # load x3 with value 0xe91957aafdd6bc0b
sw x3, 0(x2) # store 0xe91957aafdd6bc0b in memory
flw f18, 0(x2) # load 0xe91957aafdd6bc0b from memory into f18
fnmadd.s f25, f16, f19, f18, dyn # perform operation
fnmadd.s f25, f16, f19, f18, rdn # perform operation
fnmadd.s f25, f16, f19, f18, rmm # perform operation
fnmadd.s f25, f16, f19, f18, rne # perform operation
fnmadd.s f25, f16, f19, f18, rtz # perform operation
fnmadd.s f25, f16, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f16, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x2ee1d3ad12e56810 # load x3 with value 0x2ee1d3ad12e56810
sw x3, 0(x2) # store 0x2ee1d3ad12e56810 in memory
flw f26, 0(x2) # load 0x2ee1d3ad12e56810 from memory into f26
fnmadd.s f8, f13, f10, f26, dyn # perform operation
fnmadd.s f8, f13, f10, f26, rdn # perform operation
fnmadd.s f8, f13, f10, f26, rmm # perform operation
fnmadd.s f8, f13, f10, f26, rne # perform operation
fnmadd.s f8, f13, f10, f26, rtz # perform operation
fnmadd.s f8, f13, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x8ea7a6f31031baa6 # load x3 with value 0x8ea7a6f31031baa6
sw x3, 0(x2) # store 0x8ea7a6f31031baa6 in memory
flw f26, 0(x2) # load 0x8ea7a6f31031baa6 from memory into f26
fnmadd.s f1, f10, f28, f26, dyn # perform operation
fnmadd.s f1, f10, f28, f26, rdn # perform operation
fnmadd.s f1, f10, f28, f26, rmm # perform operation
fnmadd.s f1, f10, f28, f26, rne # perform operation
fnmadd.s f1, f10, f28, f26, rtz # perform operation
fnmadd.s f1, f10, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x8ffb2369df96d434 # load x3 with value 0x8ffb2369df96d434
sw x3, 0(x2) # store 0x8ffb2369df96d434 in memory
flw f17, 0(x2) # load 0x8ffb2369df96d434 from memory into f17
fnmadd.s f3, f9, f31, f17, dyn # perform operation
fnmadd.s f3, f9, f31, f17, rdn # perform operation
fnmadd.s f3, f9, f31, f17, rmm # perform operation
fnmadd.s f3, f9, f31, f17, rne # perform operation
fnmadd.s f3, f9, f31, f17, rtz # perform operation
fnmadd.s f3, f9, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x4d16874a5098fcda # load x3 with value 0x4d16874a5098fcda
sw x3, 0(x2) # store 0x4d16874a5098fcda in memory
flw f18, 0(x2) # load 0x4d16874a5098fcda from memory into f18
fnmadd.s f6, f24, f19, f18, dyn # perform operation
fnmadd.s f6, f24, f19, f18, rdn # perform operation
fnmadd.s f6, f24, f19, f18, rmm # perform operation
fnmadd.s f6, f24, f19, f18, rne # perform operation
fnmadd.s f6, f24, f19, f18, rtz # perform operation
fnmadd.s f6, f24, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x9c11f47cd528361d # load x3 with value 0x9c11f47cd528361d
sw x3, 0(x2) # store 0x9c11f47cd528361d in memory
flw f2, 0(x2) # load 0x9c11f47cd528361d from memory into f2
fnmadd.s f24, f15, f8, f2, dyn # perform operation
fnmadd.s f24, f15, f8, f2, rdn # perform operation
fnmadd.s f24, f15, f8, f2, rmm # perform operation
fnmadd.s f24, f15, f8, f2, rne # perform operation
fnmadd.s f24, f15, f8, f2, rtz # perform operation
fnmadd.s f24, f15, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xaf04bbd7c9568ab8 # load x3 with value 0xaf04bbd7c9568ab8
sw x3, 0(x2) # store 0xaf04bbd7c9568ab8 in memory
flw f22, 0(x2) # load 0xaf04bbd7c9568ab8 from memory into f22
fnmadd.s f3, f1, f24, f22, dyn # perform operation
fnmadd.s f3, f1, f24, f22, rdn # perform operation
fnmadd.s f3, f1, f24, f22, rmm # perform operation
fnmadd.s f3, f1, f24, f22, rne # perform operation
fnmadd.s f3, f1, f24, f22, rtz # perform operation
fnmadd.s f3, f1, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xa70910f3efb7037e # load x3 with value 0xa70910f3efb7037e
sw x3, 0(x2) # store 0xa70910f3efb7037e in memory
flw f21, 0(x2) # load 0xa70910f3efb7037e from memory into f21
fnmadd.s f10, f11, f29, f21, dyn # perform operation
fnmadd.s f10, f11, f29, f21, rdn # perform operation
fnmadd.s f10, f11, f29, f21, rmm # perform operation
fnmadd.s f10, f11, f29, f21, rne # perform operation
fnmadd.s f10, f11, f29, f21, rtz # perform operation
fnmadd.s f10, f11, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f11, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xf3db6eda4afd81d2 # load x3 with value 0xf3db6eda4afd81d2
sw x3, 0(x2) # store 0xf3db6eda4afd81d2 in memory
flw f1, 0(x2) # load 0xf3db6eda4afd81d2 from memory into f1
fnmadd.s f19, f16, f9, f1, dyn # perform operation
fnmadd.s f19, f16, f9, f1, rdn # perform operation
fnmadd.s f19, f16, f9, f1, rmm # perform operation
fnmadd.s f19, f16, f9, f1, rne # perform operation
fnmadd.s f19, f16, f9, f1, rtz # perform operation
fnmadd.s f19, f16, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x788d5143361c4e0c # load x3 with value 0x788d5143361c4e0c
sw x3, 0(x2) # store 0x788d5143361c4e0c in memory
flw f9, 0(x2) # load 0x788d5143361c4e0c from memory into f9
fnmadd.s f23, f1, f25, f9, dyn # perform operation
fnmadd.s f23, f1, f25, f9, rdn # perform operation
fnmadd.s f23, f1, f25, f9, rmm # perform operation
fnmadd.s f23, f1, f25, f9, rne # perform operation
fnmadd.s f23, f1, f25, f9, rtz # perform operation
fnmadd.s f23, f1, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xf4b8078c364fcfb6 # load x3 with value 0xf4b8078c364fcfb6
sw x3, 0(x2) # store 0xf4b8078c364fcfb6 in memory
flw f15, 0(x2) # load 0xf4b8078c364fcfb6 from memory into f15
fnmadd.s f10, f18, f19, f15, dyn # perform operation
fnmadd.s f10, f18, f19, f15, rdn # perform operation
fnmadd.s f10, f18, f19, f15, rmm # perform operation
fnmadd.s f10, f18, f19, f15, rne # perform operation
fnmadd.s f10, f18, f19, f15, rtz # perform operation
fnmadd.s f10, f18, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f18, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x77069844dd435a35 # load x3 with value 0x77069844dd435a35
sw x3, 0(x2) # store 0x77069844dd435a35 in memory
flw f11, 0(x2) # load 0x77069844dd435a35 from memory into f11
fnmadd.s f23, f20, f7, f11, dyn # perform operation
fnmadd.s f23, f20, f7, f11, rdn # perform operation
fnmadd.s f23, f20, f7, f11, rmm # perform operation
fnmadd.s f23, f20, f7, f11, rne # perform operation
fnmadd.s f23, f20, f7, f11, rtz # perform operation
fnmadd.s f23, f20, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xcb55eef9d021593c # load x3 with value 0xcb55eef9d021593c
sw x3, 0(x2) # store 0xcb55eef9d021593c in memory
flw f24, 0(x2) # load 0xcb55eef9d021593c from memory into f24
fnmadd.s f30, f11, f25, f24, dyn # perform operation
fnmadd.s f30, f11, f25, f24, rdn # perform operation
fnmadd.s f30, f11, f25, f24, rmm # perform operation
fnmadd.s f30, f11, f25, f24, rne # perform operation
fnmadd.s f30, f11, f25, f24, rtz # perform operation
fnmadd.s f30, f11, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xa771e59a226947db # load x3 with value 0xa771e59a226947db
sw x3, 0(x2) # store 0xa771e59a226947db in memory
flw f28, 0(x2) # load 0xa771e59a226947db from memory into f28
fnmadd.s f2, f22, f8, f28, dyn # perform operation
fnmadd.s f2, f22, f8, f28, rdn # perform operation
fnmadd.s f2, f22, f8, f28, rmm # perform operation
fnmadd.s f2, f22, f8, f28, rne # perform operation
fnmadd.s f2, f22, f8, f28, rtz # perform operation
fnmadd.s f2, f22, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x908b9dbc3e8c0d33 # load x3 with value 0x908b9dbc3e8c0d33
sw x3, 0(x2) # store 0x908b9dbc3e8c0d33 in memory
flw f2, 0(x2) # load 0x908b9dbc3e8c0d33 from memory into f2
fnmadd.s f3, f22, f15, f2, dyn # perform operation
fnmadd.s f3, f22, f15, f2, rdn # perform operation
fnmadd.s f3, f22, f15, f2, rmm # perform operation
fnmadd.s f3, f22, f15, f2, rne # perform operation
fnmadd.s f3, f22, f15, f2, rtz # perform operation
fnmadd.s f3, f22, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x32b028c20913ca22 # load x3 with value 0x32b028c20913ca22
sw x3, 0(x2) # store 0x32b028c20913ca22 in memory
flw f11, 0(x2) # load 0x32b028c20913ca22 from memory into f11
fnmadd.s f16, f9, f25, f11, dyn # perform operation
fnmadd.s f16, f9, f25, f11, rdn # perform operation
fnmadd.s f16, f9, f25, f11, rmm # perform operation
fnmadd.s f16, f9, f25, f11, rne # perform operation
fnmadd.s f16, f9, f25, f11, rtz # perform operation
fnmadd.s f16, f9, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xcdf265aab0835777 # load x3 with value 0xcdf265aab0835777
sw x3, 0(x2) # store 0xcdf265aab0835777 in memory
flw f23, 0(x2) # load 0xcdf265aab0835777 from memory into f23
fnmadd.s f2, f24, f29, f23, dyn # perform operation
fnmadd.s f2, f24, f29, f23, rdn # perform operation
fnmadd.s f2, f24, f29, f23, rmm # perform operation
fnmadd.s f2, f24, f29, f23, rne # perform operation
fnmadd.s f2, f24, f29, f23, rtz # perform operation
fnmadd.s f2, f24, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x1e6a049034514180 # load x3 with value 0x1e6a049034514180
sw x3, 0(x2) # store 0x1e6a049034514180 in memory
flw f17, 0(x2) # load 0x1e6a049034514180 from memory into f17
fnmadd.s f27, f10, f9, f17, dyn # perform operation
fnmadd.s f27, f10, f9, f17, rdn # perform operation
fnmadd.s f27, f10, f9, f17, rmm # perform operation
fnmadd.s f27, f10, f9, f17, rne # perform operation
fnmadd.s f27, f10, f9, f17, rtz # perform operation
fnmadd.s f27, f10, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x2eaa18d7f6571383 # load x3 with value 0x2eaa18d7f6571383
sw x3, 0(x2) # store 0x2eaa18d7f6571383 in memory
flw f16, 0(x2) # load 0x2eaa18d7f6571383 from memory into f16
fnmadd.s f23, f30, f26, f16, dyn # perform operation
fnmadd.s f23, f30, f26, f16, rdn # perform operation
fnmadd.s f23, f30, f26, f16, rmm # perform operation
fnmadd.s f23, f30, f26, f16, rne # perform operation
fnmadd.s f23, f30, f26, f16, rtz # perform operation
fnmadd.s f23, f30, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xcc3460a29257eb54 # load x3 with value 0xcc3460a29257eb54
sw x3, 0(x2) # store 0xcc3460a29257eb54 in memory
flw f18, 0(x2) # load 0xcc3460a29257eb54 from memory into f18
fnmadd.s f17, f2, f27, f18, dyn # perform operation
fnmadd.s f17, f2, f27, f18, rdn # perform operation
fnmadd.s f17, f2, f27, f18, rmm # perform operation
fnmadd.s f17, f2, f27, f18, rne # perform operation
fnmadd.s f17, f2, f27, f18, rtz # perform operation
fnmadd.s f17, f2, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x5c4de5ff826e5a48 # load x3 with value 0x5c4de5ff826e5a48
sw x3, 0(x2) # store 0x5c4de5ff826e5a48 in memory
flw f28, 0(x2) # load 0x5c4de5ff826e5a48 from memory into f28
fnmadd.s f19, f29, f5, f28, dyn # perform operation
fnmadd.s f19, f29, f5, f28, rdn # perform operation
fnmadd.s f19, f29, f5, f28, rmm # perform operation
fnmadd.s f19, f29, f5, f28, rne # perform operation
fnmadd.s f19, f29, f5, f28, rtz # perform operation
fnmadd.s f19, f29, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xdf216b321d4ded62 # load x3 with value 0xdf216b321d4ded62
sw x3, 0(x2) # store 0xdf216b321d4ded62 in memory
flw f19, 0(x2) # load 0xdf216b321d4ded62 from memory into f19
fnmadd.s f24, f25, f21, f19, dyn # perform operation
fnmadd.s f24, f25, f21, f19, rdn # perform operation
fnmadd.s f24, f25, f21, f19, rmm # perform operation
fnmadd.s f24, f25, f21, f19, rne # perform operation
fnmadd.s f24, f25, f21, f19, rtz # perform operation
fnmadd.s f24, f25, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xc407afb0520f50d # load x3 with value 0xc407afb0520f50d
sw x3, 0(x2) # store 0xc407afb0520f50d in memory
flw f3, 0(x2) # load 0xc407afb0520f50d from memory into f3
fnmadd.s f10, f2, f21, f3, dyn # perform operation
fnmadd.s f10, f2, f21, f3, rdn # perform operation
fnmadd.s f10, f2, f21, f3, rmm # perform operation
fnmadd.s f10, f2, f21, f3, rne # perform operation
fnmadd.s f10, f2, f21, f3, rtz # perform operation
fnmadd.s f10, f2, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x993ed8a59cd8e2d8 # load x3 with value 0x993ed8a59cd8e2d8
sw x3, 0(x2) # store 0x993ed8a59cd8e2d8 in memory
flw f17, 0(x2) # load 0x993ed8a59cd8e2d8 from memory into f17
fnmadd.s f8, f19, f7, f17, dyn # perform operation
fnmadd.s f8, f19, f7, f17, rdn # perform operation
fnmadd.s f8, f19, f7, f17, rmm # perform operation
fnmadd.s f8, f19, f7, f17, rne # perform operation
fnmadd.s f8, f19, f7, f17, rtz # perform operation
fnmadd.s f8, f19, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x9ae7ca12c25a9240 # load x3 with value 0x9ae7ca12c25a9240
sw x3, 0(x2) # store 0x9ae7ca12c25a9240 in memory
flw f16, 0(x2) # load 0x9ae7ca12c25a9240 from memory into f16
fnmadd.s f25, f30, f8, f16, dyn # perform operation
fnmadd.s f25, f30, f8, f16, rdn # perform operation
fnmadd.s f25, f30, f8, f16, rmm # perform operation
fnmadd.s f25, f30, f8, f16, rne # perform operation
fnmadd.s f25, f30, f8, f16, rtz # perform operation
fnmadd.s f25, f30, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f8, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x9324c6af5272add6 # load x3 with value 0x9324c6af5272add6
sw x3, 0(x2) # store 0x9324c6af5272add6 in memory
flw f11, 0(x2) # load 0x9324c6af5272add6 from memory into f11
fnmadd.s f31, f5, f18, f11, dyn # perform operation
fnmadd.s f31, f5, f18, f11, rdn # perform operation
fnmadd.s f31, f5, f18, f11, rmm # perform operation
fnmadd.s f31, f5, f18, f11, rne # perform operation
fnmadd.s f31, f5, f18, f11, rtz # perform operation
fnmadd.s f31, f5, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xbc5de5bf4a55106d # load x3 with value 0xbc5de5bf4a55106d
sw x3, 0(x2) # store 0xbc5de5bf4a55106d in memory
flw f7, 0(x2) # load 0xbc5de5bf4a55106d from memory into f7
fnmadd.s f22, f9, f10, f7, dyn # perform operation
fnmadd.s f22, f9, f10, f7, rdn # perform operation
fnmadd.s f22, f9, f10, f7, rmm # perform operation
fnmadd.s f22, f9, f10, f7, rne # perform operation
fnmadd.s f22, f9, f10, f7, rtz # perform operation
fnmadd.s f22, f9, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f9, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xef6a5213d4529426 # load x3 with value 0xef6a5213d4529426
sw x3, 0(x2) # store 0xef6a5213d4529426 in memory
flw f2, 0(x2) # load 0xef6a5213d4529426 from memory into f2
fnmadd.s f26, f15, f5, f2, dyn # perform operation
fnmadd.s f26, f15, f5, f2, rdn # perform operation
fnmadd.s f26, f15, f5, f2, rmm # perform operation
fnmadd.s f26, f15, f5, f2, rne # perform operation
fnmadd.s f26, f15, f5, f2, rtz # perform operation
fnmadd.s f26, f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f15, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x491458a5baa264ba # load x3 with value 0x491458a5baa264ba
sw x3, 0(x2) # store 0x491458a5baa264ba in memory
flw f27, 0(x2) # load 0x491458a5baa264ba from memory into f27
fnmadd.s f16, f3, f15, f27, dyn # perform operation
fnmadd.s f16, f3, f15, f27, rdn # perform operation
fnmadd.s f16, f3, f15, f27, rmm # perform operation
fnmadd.s f16, f3, f15, f27, rne # perform operation
fnmadd.s f16, f3, f15, f27, rtz # perform operation
fnmadd.s f16, f3, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x43da97146e1baae8 # load x3 with value 0x43da97146e1baae8
sw x3, 0(x2) # store 0x43da97146e1baae8 in memory
flw f28, 0(x2) # load 0x43da97146e1baae8 from memory into f28
fnmadd.s f25, f15, f14, f28, dyn # perform operation
fnmadd.s f25, f15, f14, f28, rdn # perform operation
fnmadd.s f25, f15, f14, f28, rmm # perform operation
fnmadd.s f25, f15, f14, f28, rne # perform operation
fnmadd.s f25, f15, f14, f28, rtz # perform operation
fnmadd.s f25, f15, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x71b53937c5d52957 # load x3 with value 0x71b53937c5d52957
sw x3, 0(x2) # store 0x71b53937c5d52957 in memory
flw f6, 0(x2) # load 0x71b53937c5d52957 from memory into f6
fnmadd.s f10, f20, f7, f6, dyn # perform operation
fnmadd.s f10, f20, f7, f6, rdn # perform operation
fnmadd.s f10, f20, f7, f6, rmm # perform operation
fnmadd.s f10, f20, f7, f6, rne # perform operation
fnmadd.s f10, f20, f7, f6, rtz # perform operation
fnmadd.s f10, f20, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x48d9550b782680a5 # load x3 with value 0x48d9550b782680a5
sw x3, 0(x2) # store 0x48d9550b782680a5 in memory
flw f11, 0(x2) # load 0x48d9550b782680a5 from memory into f11
fnmadd.s f27, f12, f30, f11, dyn # perform operation
fnmadd.s f27, f12, f30, f11, rdn # perform operation
fnmadd.s f27, f12, f30, f11, rmm # perform operation
fnmadd.s f27, f12, f30, f11, rne # perform operation
fnmadd.s f27, f12, f30, f11, rtz # perform operation
fnmadd.s f27, f12, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x33bc0b363a232fda # load x3 with value 0x33bc0b363a232fda
sw x3, 0(x2) # store 0x33bc0b363a232fda in memory
flw f10, 0(x2) # load 0x33bc0b363a232fda from memory into f10
fnmadd.s f29, f15, f1, f10, dyn # perform operation
fnmadd.s f29, f15, f1, f10, rdn # perform operation
fnmadd.s f29, f15, f1, f10, rmm # perform operation
fnmadd.s f29, f15, f1, f10, rne # perform operation
fnmadd.s f29, f15, f1, f10, rtz # perform operation
fnmadd.s f29, f15, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x2db2f8b122162d4c # load x3 with value 0x2db2f8b122162d4c
sw x3, 0(x2) # store 0x2db2f8b122162d4c in memory
flw f6, 0(x2) # load 0x2db2f8b122162d4c from memory into f6
fnmadd.s f22, f28, f3, f6, dyn # perform operation
fnmadd.s f22, f28, f3, f6, rdn # perform operation
fnmadd.s f22, f28, f3, f6, rmm # perform operation
fnmadd.s f22, f28, f3, f6, rne # perform operation
fnmadd.s f22, f28, f3, f6, rtz # perform operation
fnmadd.s f22, f28, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x22a58a345a8b6ac2 # load x3 with value 0x22a58a345a8b6ac2
sw x3, 0(x2) # store 0x22a58a345a8b6ac2 in memory
flw f8, 0(x2) # load 0x22a58a345a8b6ac2 from memory into f8
fnmadd.s f21, f6, f18, f8, dyn # perform operation
fnmadd.s f21, f6, f18, f8, rdn # perform operation
fnmadd.s f21, f6, f18, f8, rmm # perform operation
fnmadd.s f21, f6, f18, f8, rne # perform operation
fnmadd.s f21, f6, f18, f8, rtz # perform operation
fnmadd.s f21, f6, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xfab68b79a9bccab5 # load x3 with value 0xfab68b79a9bccab5
sw x3, 0(x2) # store 0xfab68b79a9bccab5 in memory
flw f22, 0(x2) # load 0xfab68b79a9bccab5 from memory into f22
fnmadd.s f20, f21, f11, f22, dyn # perform operation
fnmadd.s f20, f21, f11, f22, rdn # perform operation
fnmadd.s f20, f21, f11, f22, rmm # perform operation
fnmadd.s f20, f21, f11, f22, rne # perform operation
fnmadd.s f20, f21, f11, f22, rtz # perform operation
fnmadd.s f20, f21, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f21, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x86ed350a615f3c52 # load x3 with value 0x86ed350a615f3c52
sw x3, 0(x2) # store 0x86ed350a615f3c52 in memory
flw f3, 0(x2) # load 0x86ed350a615f3c52 from memory into f3
fnmadd.s f16, f22, f24, f3, dyn # perform operation
fnmadd.s f16, f22, f24, f3, rdn # perform operation
fnmadd.s f16, f22, f24, f3, rmm # perform operation
fnmadd.s f16, f22, f24, f3, rne # perform operation
fnmadd.s f16, f22, f24, f3, rtz # perform operation
fnmadd.s f16, f22, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f22, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xa2bdc6ae968f92dd # load x3 with value 0xa2bdc6ae968f92dd
sw x3, 0(x2) # store 0xa2bdc6ae968f92dd in memory
flw f14, 0(x2) # load 0xa2bdc6ae968f92dd from memory into f14
fnmadd.s f15, f7, f25, f14, dyn # perform operation
fnmadd.s f15, f7, f25, f14, rdn # perform operation
fnmadd.s f15, f7, f25, f14, rmm # perform operation
fnmadd.s f15, f7, f25, f14, rne # perform operation
fnmadd.s f15, f7, f25, f14, rtz # perform operation
fnmadd.s f15, f7, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f7, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f7, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f7, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f7, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f7, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x128965845d8c6f29 # load x3 with value 0x128965845d8c6f29
sw x3, 0(x2) # store 0x128965845d8c6f29 in memory
flw f28, 0(x2) # load 0x128965845d8c6f29 from memory into f28
fnmadd.s f15, f12, f22, f28, dyn # perform operation
fnmadd.s f15, f12, f22, f28, rdn # perform operation
fnmadd.s f15, f12, f22, f28, rmm # perform operation
fnmadd.s f15, f12, f22, f28, rne # perform operation
fnmadd.s f15, f12, f22, f28, rtz # perform operation
fnmadd.s f15, f12, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x8ec4f20f47d1ec10 # load x3 with value 0x8ec4f20f47d1ec10
sw x3, 0(x2) # store 0x8ec4f20f47d1ec10 in memory
flw f2, 0(x2) # load 0x8ec4f20f47d1ec10 from memory into f2
fnmadd.s f27, f16, f1, f2, dyn # perform operation
fnmadd.s f27, f16, f1, f2, rdn # perform operation
fnmadd.s f27, f16, f1, f2, rmm # perform operation
fnmadd.s f27, f16, f1, f2, rne # perform operation
fnmadd.s f27, f16, f1, f2, rtz # perform operation
fnmadd.s f27, f16, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xa92c8c1e2b65802e # load x3 with value 0xa92c8c1e2b65802e
sw x3, 0(x2) # store 0xa92c8c1e2b65802e in memory
flw f31, 0(x2) # load 0xa92c8c1e2b65802e from memory into f31
fnmadd.s f18, f17, f13, f31, dyn # perform operation
fnmadd.s f18, f17, f13, f31, rdn # perform operation
fnmadd.s f18, f17, f13, f31, rmm # perform operation
fnmadd.s f18, f17, f13, f31, rne # perform operation
fnmadd.s f18, f17, f13, f31, rtz # perform operation
fnmadd.s f18, f17, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f17, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f17, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f17, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f17, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f17, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x470dcadcf764ddf3 # load x3 with value 0x470dcadcf764ddf3
sw x3, 0(x2) # store 0x470dcadcf764ddf3 in memory
flw f10, 0(x2) # load 0x470dcadcf764ddf3 from memory into f10
fnmadd.s f23, f20, f25, f10, dyn # perform operation
fnmadd.s f23, f20, f25, f10, rdn # perform operation
fnmadd.s f23, f20, f25, f10, rmm # perform operation
fnmadd.s f23, f20, f25, f10, rne # perform operation
fnmadd.s f23, f20, f25, f10, rtz # perform operation
fnmadd.s f23, f20, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xff0df0998291c533 # load x3 with value 0xff0df0998291c533
sw x3, 0(x2) # store 0xff0df0998291c533 in memory
flw f31, 0(x2) # load 0xff0df0998291c533 from memory into f31
fnmadd.s f27, f6, f30, f31, dyn # perform operation
fnmadd.s f27, f6, f30, f31, rdn # perform operation
fnmadd.s f27, f6, f30, f31, rmm # perform operation
fnmadd.s f27, f6, f30, f31, rne # perform operation
fnmadd.s f27, f6, f30, f31, rtz # perform operation
fnmadd.s f27, f6, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x722f10262fa7efba # load x3 with value 0x722f10262fa7efba
sw x3, 0(x2) # store 0x722f10262fa7efba in memory
flw f22, 0(x2) # load 0x722f10262fa7efba from memory into f22
fnmadd.s f5, f28, f9, f22, dyn # perform operation
fnmadd.s f5, f28, f9, f22, rdn # perform operation
fnmadd.s f5, f28, f9, f22, rmm # perform operation
fnmadd.s f5, f28, f9, f22, rne # perform operation
fnmadd.s f5, f28, f9, f22, rtz # perform operation
fnmadd.s f5, f28, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f28, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xb9cdcfc567c5911a # load x3 with value 0xb9cdcfc567c5911a
sw x3, 0(x2) # store 0xb9cdcfc567c5911a in memory
flw f17, 0(x2) # load 0xb9cdcfc567c5911a from memory into f17
fnmadd.s f14, f15, f8, f17, dyn # perform operation
fnmadd.s f14, f15, f8, f17, rdn # perform operation
fnmadd.s f14, f15, f8, f17, rmm # perform operation
fnmadd.s f14, f15, f8, f17, rne # perform operation
fnmadd.s f14, f15, f8, f17, rtz # perform operation
fnmadd.s f14, f15, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x37ff0db45d46afea # load x3 with value 0x37ff0db45d46afea
sw x3, 0(x2) # store 0x37ff0db45d46afea in memory
flw f2, 0(x2) # load 0x37ff0db45d46afea from memory into f2
fnmadd.s f28, f1, f3, f2, dyn # perform operation
fnmadd.s f28, f1, f3, f2, rdn # perform operation
fnmadd.s f28, f1, f3, f2, rmm # perform operation
fnmadd.s f28, f1, f3, f2, rne # perform operation
fnmadd.s f28, f1, f3, f2, rtz # perform operation
fnmadd.s f28, f1, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f1, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x5d7ecf00067ade24 # load x3 with value 0x5d7ecf00067ade24
sw x3, 0(x2) # store 0x5d7ecf00067ade24 in memory
flw f17, 0(x2) # load 0x5d7ecf00067ade24 from memory into f17
fnmadd.s f30, f31, f14, f17, dyn # perform operation
fnmadd.s f30, f31, f14, f17, rdn # perform operation
fnmadd.s f30, f31, f14, f17, rmm # perform operation
fnmadd.s f30, f31, f14, f17, rne # perform operation
fnmadd.s f30, f31, f14, f17, rtz # perform operation
fnmadd.s f30, f31, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x516c338a9ba249a1 # load x3 with value 0x516c338a9ba249a1
sw x3, 0(x2) # store 0x516c338a9ba249a1 in memory
flw f25, 0(x2) # load 0x516c338a9ba249a1 from memory into f25
fnmadd.s f12, f29, f10, f25, dyn # perform operation
fnmadd.s f12, f29, f10, f25, rdn # perform operation
fnmadd.s f12, f29, f10, f25, rmm # perform operation
fnmadd.s f12, f29, f10, f25, rne # perform operation
fnmadd.s f12, f29, f10, f25, rtz # perform operation
fnmadd.s f12, f29, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x5f0a0b5a07e24e53 # load x3 with value 0x5f0a0b5a07e24e53
sw x3, 0(x2) # store 0x5f0a0b5a07e24e53 in memory
flw f9, 0(x2) # load 0x5f0a0b5a07e24e53 from memory into f9
fnmadd.s f8, f27, f5, f9, dyn # perform operation
fnmadd.s f8, f27, f5, f9, rdn # perform operation
fnmadd.s f8, f27, f5, f9, rmm # perform operation
fnmadd.s f8, f27, f5, f9, rne # perform operation
fnmadd.s f8, f27, f5, f9, rtz # perform operation
fnmadd.s f8, f27, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x39c3ffc6bf70f0a5 # load x3 with value 0x39c3ffc6bf70f0a5
sw x3, 0(x2) # store 0x39c3ffc6bf70f0a5 in memory
flw f12, 0(x2) # load 0x39c3ffc6bf70f0a5 from memory into f12
fnmadd.s f29, f13, f24, f12, dyn # perform operation
fnmadd.s f29, f13, f24, f12, rdn # perform operation
fnmadd.s f29, f13, f24, f12, rmm # perform operation
fnmadd.s f29, f13, f24, f12, rne # perform operation
fnmadd.s f29, f13, f24, f12, rtz # perform operation
fnmadd.s f29, f13, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x621c86466a506b7a # load x3 with value 0x621c86466a506b7a
sw x3, 0(x2) # store 0x621c86466a506b7a in memory
flw f14, 0(x2) # load 0x621c86466a506b7a from memory into f14
fnmadd.s f13, f16, f20, f14, dyn # perform operation
fnmadd.s f13, f16, f20, f14, rdn # perform operation
fnmadd.s f13, f16, f20, f14, rmm # perform operation
fnmadd.s f13, f16, f20, f14, rne # perform operation
fnmadd.s f13, f16, f20, f14, rtz # perform operation
fnmadd.s f13, f16, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0xde81fa8ace29ea4f # load x3 with value 0xde81fa8ace29ea4f
sw x3, 0(x2) # store 0xde81fa8ace29ea4f in memory
flw f18, 0(x2) # load 0xde81fa8ace29ea4f from memory into f18
fnmadd.s f20, f28, f26, f18, dyn # perform operation
fnmadd.s f20, f28, f26, f18, rdn # perform operation
fnmadd.s f20, f28, f26, f18, rmm # perform operation
fnmadd.s f20, f28, f26, f18, rne # perform operation
fnmadd.s f20, f28, f26, f18, rtz # perform operation
fnmadd.s f20, f28, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x4861b3075fd1396 # load x3 with value 0x4861b3075fd1396
sw x3, 0(x2) # store 0x4861b3075fd1396 in memory
flw f16, 0(x2) # load 0x4861b3075fd1396 from memory into f16
fnmadd.s f10, f5, f9, f16, dyn # perform operation
fnmadd.s f10, f5, f9, f16, rdn # perform operation
fnmadd.s f10, f5, f9, f16, rmm # perform operation
fnmadd.s f10, f5, f9, f16, rne # perform operation
fnmadd.s f10, f5, f9, f16, rtz # perform operation
fnmadd.s f10, f5, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x1edef9958c62ed0d # load x3 with value 0x1edef9958c62ed0d
sw x3, 0(x2) # store 0x1edef9958c62ed0d in memory
flw f30, 0(x2) # load 0x1edef9958c62ed0d from memory into f30
fnmadd.s f8, f22, f26, f30, dyn # perform operation
fnmadd.s f8, f22, f26, f30, rdn # perform operation
fnmadd.s f8, f22, f26, f30, rmm # perform operation
fnmadd.s f8, f22, f26, f30, rne # perform operation
fnmadd.s f8, f22, f26, f30, rtz # perform operation
fnmadd.s f8, f22, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x14ac375da4f6d153 # load x3 with value 0x14ac375da4f6d153
sw x3, 0(x2) # store 0x14ac375da4f6d153 in memory
flw f20, 0(x2) # load 0x14ac375da4f6d153 from memory into f20
fnmadd.s f6, f23, f21, f20, dyn # perform operation
fnmadd.s f6, f23, f21, f20, rdn # perform operation
fnmadd.s f6, f23, f21, f20, rmm # perform operation
fnmadd.s f6, f23, f21, f20, rne # perform operation
fnmadd.s f6, f23, f21, f20, rtz # perform operation
fnmadd.s f6, f23, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x16f6ed640a68e85c # load x3 with value 0x16f6ed640a68e85c
sw x3, 0(x2) # store 0x16f6ed640a68e85c in memory
flw f17, 0(x2) # load 0x16f6ed640a68e85c from memory into f17
fnmadd.s f30, f27, f3, f17, dyn # perform operation
fnmadd.s f30, f27, f3, f17, rdn # perform operation
fnmadd.s f30, f27, f3, f17, rmm # perform operation
fnmadd.s f30, f27, f3, f17, rne # perform operation
fnmadd.s f30, f27, f3, f17, rtz # perform operation
fnmadd.s f30, f27, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f27, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f27, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x3b894d64050f715c # load x3 with value 0x3b894d64050f715c
sw x3, 0(x2) # store 0x3b894d64050f715c in memory
flw f9, 0(x2) # load 0x3b894d64050f715c from memory into f9
fnmadd.s f29, f27, f7, f9, dyn # perform operation
fnmadd.s f29, f27, f7, f9, rdn # perform operation
fnmadd.s f29, f27, f7, f9, rmm # perform operation
fnmadd.s f29, f27, f7, f9, rne # perform operation
fnmadd.s f29, f27, f7, f9, rtz # perform operation
fnmadd.s f29, f27, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x930e8e88d0103913 # load x3 with value 0x930e8e88d0103913
sw x3, 0(x2) # store 0x930e8e88d0103913 in memory
flw f13, 0(x2) # load 0x930e8e88d0103913 from memory into f13
fnmadd.s f3, f23, f27, f13, dyn # perform operation
fnmadd.s f3, f23, f27, f13, rdn # perform operation
fnmadd.s f3, f23, f27, f13, rmm # perform operation
fnmadd.s f3, f23, f27, f13, rne # perform operation
fnmadd.s f3, f23, f27, f13, rtz # perform operation
fnmadd.s f3, f23, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xb4a20b4f7e68a791 # load x3 with value 0xb4a20b4f7e68a791
sw x3, 0(x2) # store 0xb4a20b4f7e68a791 in memory
flw f29, 0(x2) # load 0xb4a20b4f7e68a791 from memory into f29
fnmadd.s f19, f3, f17, f29, dyn # perform operation
fnmadd.s f19, f3, f17, f29, rdn # perform operation
fnmadd.s f19, f3, f17, f29, rmm # perform operation
fnmadd.s f19, f3, f17, f29, rne # perform operation
fnmadd.s f19, f3, f17, f29, rtz # perform operation
fnmadd.s f19, f3, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xf03a0eb6e295610 # load x3 with value 0xf03a0eb6e295610
sw x3, 0(x2) # store 0xf03a0eb6e295610 in memory
flw f20, 0(x2) # load 0xf03a0eb6e295610 from memory into f20
fnmadd.s f6, f12, f11, f20, dyn # perform operation
fnmadd.s f6, f12, f11, f20, rdn # perform operation
fnmadd.s f6, f12, f11, f20, rmm # perform operation
fnmadd.s f6, f12, f11, f20, rne # perform operation
fnmadd.s f6, f12, f11, f20, rtz # perform operation
fnmadd.s f6, f12, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x754b27e2b7dfb521 # load x3 with value 0x754b27e2b7dfb521
sw x3, 0(x2) # store 0x754b27e2b7dfb521 in memory
flw f2, 0(x2) # load 0x754b27e2b7dfb521 from memory into f2
fnmadd.s f25, f5, f6, f2, dyn # perform operation
fnmadd.s f25, f5, f6, f2, rdn # perform operation
fnmadd.s f25, f5, f6, f2, rmm # perform operation
fnmadd.s f25, f5, f6, f2, rne # perform operation
fnmadd.s f25, f5, f6, f2, rtz # perform operation
fnmadd.s f25, f5, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x46e6d3302803da23 # load x3 with value 0x46e6d3302803da23
sw x3, 0(x2) # store 0x46e6d3302803da23 in memory
flw f28, 0(x2) # load 0x46e6d3302803da23 from memory into f28
fnmadd.s f7, f12, f14, f28, dyn # perform operation
fnmadd.s f7, f12, f14, f28, rdn # perform operation
fnmadd.s f7, f12, f14, f28, rmm # perform operation
fnmadd.s f7, f12, f14, f28, rne # perform operation
fnmadd.s f7, f12, f14, f28, rtz # perform operation
fnmadd.s f7, f12, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xc1a35b057045a798 # load x3 with value 0xc1a35b057045a798
sw x3, 0(x2) # store 0xc1a35b057045a798 in memory
flw f9, 0(x2) # load 0xc1a35b057045a798 from memory into f9
fnmadd.s f13, f14, f11, f9, dyn # perform operation
fnmadd.s f13, f14, f11, f9, rdn # perform operation
fnmadd.s f13, f14, f11, f9, rmm # perform operation
fnmadd.s f13, f14, f11, f9, rne # perform operation
fnmadd.s f13, f14, f11, f9, rtz # perform operation
fnmadd.s f13, f14, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f14, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7d2db5a2a4bc806 # load x3 with value 0x7d2db5a2a4bc806
sw x3, 0(x2) # store 0x7d2db5a2a4bc806 in memory
flw f28, 0(x2) # load 0x7d2db5a2a4bc806 from memory into f28
fnmadd.s f2, f7, f30, f28, dyn # perform operation
fnmadd.s f2, f7, f30, f28, rdn # perform operation
fnmadd.s f2, f7, f30, f28, rmm # perform operation
fnmadd.s f2, f7, f30, f28, rne # perform operation
fnmadd.s f2, f7, f30, f28, rtz # perform operation
fnmadd.s f2, f7, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xac66567bfccfc95f # load x3 with value 0xac66567bfccfc95f
sw x3, 0(x2) # store 0xac66567bfccfc95f in memory
flw f26, 0(x2) # load 0xac66567bfccfc95f from memory into f26
fnmadd.s f7, f12, f8, f26, dyn # perform operation
fnmadd.s f7, f12, f8, f26, rdn # perform operation
fnmadd.s f7, f12, f8, f26, rmm # perform operation
fnmadd.s f7, f12, f8, f26, rne # perform operation
fnmadd.s f7, f12, f8, f26, rtz # perform operation
fnmadd.s f7, f12, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x829431f10354e56 # load x3 with value 0x829431f10354e56
sw x3, 0(x2) # store 0x829431f10354e56 in memory
flw f3, 0(x2) # load 0x829431f10354e56 from memory into f3
fnmadd.s f13, f5, f12, f3, dyn # perform operation
fnmadd.s f13, f5, f12, f3, rdn # perform operation
fnmadd.s f13, f5, f12, f3, rmm # perform operation
fnmadd.s f13, f5, f12, f3, rne # perform operation
fnmadd.s f13, f5, f12, f3, rtz # perform operation
fnmadd.s f13, f5, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f5, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f5, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f5, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f5, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f5, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xb5e93ce066c75886 # load x3 with value 0xb5e93ce066c75886
sw x3, 0(x2) # store 0xb5e93ce066c75886 in memory
flw f9, 0(x2) # load 0xb5e93ce066c75886 from memory into f9
fnmadd.s f24, f23, f8, f9, dyn # perform operation
fnmadd.s f24, f23, f8, f9, rdn # perform operation
fnmadd.s f24, f23, f8, f9, rmm # perform operation
fnmadd.s f24, f23, f8, f9, rne # perform operation
fnmadd.s f24, f23, f8, f9, rtz # perform operation
fnmadd.s f24, f23, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f23, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xa2181bc9bfe79f7b # load x3 with value 0xa2181bc9bfe79f7b
sw x3, 0(x2) # store 0xa2181bc9bfe79f7b in memory
flw f11, 0(x2) # load 0xa2181bc9bfe79f7b from memory into f11
fnmadd.s f14, f1, f31, f11, dyn # perform operation
fnmadd.s f14, f1, f31, f11, rdn # perform operation
fnmadd.s f14, f1, f31, f11, rmm # perform operation
fnmadd.s f14, f1, f31, f11, rne # perform operation
fnmadd.s f14, f1, f31, f11, rtz # perform operation
fnmadd.s f14, f1, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xe738961eb8819239 # load x3 with value 0xe738961eb8819239
sw x3, 0(x2) # store 0xe738961eb8819239 in memory
flw f16, 0(x2) # load 0xe738961eb8819239 from memory into f16
fnmadd.s f15, f22, f13, f16, dyn # perform operation
fnmadd.s f15, f22, f13, f16, rdn # perform operation
fnmadd.s f15, f22, f13, f16, rmm # perform operation
fnmadd.s f15, f22, f13, f16, rne # perform operation
fnmadd.s f15, f22, f13, f16, rtz # perform operation
fnmadd.s f15, f22, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x94360c7556e09fe3 # load x3 with value 0x94360c7556e09fe3
sw x3, 0(x2) # store 0x94360c7556e09fe3 in memory
flw f15, 0(x2) # load 0x94360c7556e09fe3 from memory into f15
fnmadd.s f19, f11, f6, f15, dyn # perform operation
fnmadd.s f19, f11, f6, f15, rdn # perform operation
fnmadd.s f19, f11, f6, f15, rmm # perform operation
fnmadd.s f19, f11, f6, f15, rne # perform operation
fnmadd.s f19, f11, f6, f15, rtz # perform operation
fnmadd.s f19, f11, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xc9b5b27ebedd6414 # load x3 with value 0xc9b5b27ebedd6414
sw x3, 0(x2) # store 0xc9b5b27ebedd6414 in memory
flw f20, 0(x2) # load 0xc9b5b27ebedd6414 from memory into f20
fnmadd.s f17, f31, f14, f20, dyn # perform operation
fnmadd.s f17, f31, f14, f20, rdn # perform operation
fnmadd.s f17, f31, f14, f20, rmm # perform operation
fnmadd.s f17, f31, f14, f20, rne # perform operation
fnmadd.s f17, f31, f14, f20, rtz # perform operation
fnmadd.s f17, f31, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f31, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x581fa958729b4b0c # load x3 with value 0x581fa958729b4b0c
sw x3, 0(x2) # store 0x581fa958729b4b0c in memory
flw f8, 0(x2) # load 0x581fa958729b4b0c from memory into f8
fnmadd.s f20, f17, f11, f8, dyn # perform operation
fnmadd.s f20, f17, f11, f8, rdn # perform operation
fnmadd.s f20, f17, f11, f8, rmm # perform operation
fnmadd.s f20, f17, f11, f8, rne # perform operation
fnmadd.s f20, f17, f11, f8, rtz # perform operation
fnmadd.s f20, f17, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f17, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xcabcf38b29b4dfaf # load x3 with value 0xcabcf38b29b4dfaf
sw x3, 0(x2) # store 0xcabcf38b29b4dfaf in memory
flw f13, 0(x2) # load 0xcabcf38b29b4dfaf from memory into f13
fnmadd.s f2, f21, f16, f13, dyn # perform operation
fnmadd.s f2, f21, f16, f13, rdn # perform operation
fnmadd.s f2, f21, f16, f13, rmm # perform operation
fnmadd.s f2, f21, f16, f13, rne # perform operation
fnmadd.s f2, f21, f16, f13, rtz # perform operation
fnmadd.s f2, f21, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x252c135f9ef84fa1 # load x3 with value 0x252c135f9ef84fa1
sw x3, 0(x2) # store 0x252c135f9ef84fa1 in memory
flw f19, 0(x2) # load 0x252c135f9ef84fa1 from memory into f19
fnmadd.s f1, f21, f8, f19, dyn # perform operation
fnmadd.s f1, f21, f8, f19, rdn # perform operation
fnmadd.s f1, f21, f8, f19, rmm # perform operation
fnmadd.s f1, f21, f8, f19, rne # perform operation
fnmadd.s f1, f21, f8, f19, rtz # perform operation
fnmadd.s f1, f21, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x598ef41a96082b36 # load x3 with value 0x598ef41a96082b36
sw x3, 0(x2) # store 0x598ef41a96082b36 in memory
flw f22, 0(x2) # load 0x598ef41a96082b36 from memory into f22
fnmadd.s f11, f30, f20, f22, dyn # perform operation
fnmadd.s f11, f30, f20, f22, rdn # perform operation
fnmadd.s f11, f30, f20, f22, rmm # perform operation
fnmadd.s f11, f30, f20, f22, rne # perform operation
fnmadd.s f11, f30, f20, f22, rtz # perform operation
fnmadd.s f11, f30, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0xca9fea34f3d9bb5 # load x3 with value 0xca9fea34f3d9bb5
sw x3, 0(x2) # store 0xca9fea34f3d9bb5 in memory
flw f3, 0(x2) # load 0xca9fea34f3d9bb5 from memory into f3
fnmadd.s f31, f5, f26, f3, dyn # perform operation
fnmadd.s f31, f5, f26, f3, rdn # perform operation
fnmadd.s f31, f5, f26, f3, rmm # perform operation
fnmadd.s f31, f5, f26, f3, rne # perform operation
fnmadd.s f31, f5, f26, f3, rtz # perform operation
fnmadd.s f31, f5, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x45b8d55fd7727c82 # load x3 with value 0x45b8d55fd7727c82
sw x3, 0(x2) # store 0x45b8d55fd7727c82 in memory
flw f17, 0(x2) # load 0x45b8d55fd7727c82 from memory into f17
fnmadd.s f16, f3, f18, f17, dyn # perform operation
fnmadd.s f16, f3, f18, f17, rdn # perform operation
fnmadd.s f16, f3, f18, f17, rmm # perform operation
fnmadd.s f16, f3, f18, f17, rne # perform operation
fnmadd.s f16, f3, f18, f17, rtz # perform operation
fnmadd.s f16, f3, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xc0ca5b2a99f9d662 # load x3 with value 0xc0ca5b2a99f9d662
sw x3, 0(x2) # store 0xc0ca5b2a99f9d662 in memory
flw f8, 0(x2) # load 0xc0ca5b2a99f9d662 from memory into f8
fnmadd.s f28, f25, f1, f8, dyn # perform operation
fnmadd.s f28, f25, f1, f8, rdn # perform operation
fnmadd.s f28, f25, f1, f8, rmm # perform operation
fnmadd.s f28, f25, f1, f8, rne # perform operation
fnmadd.s f28, f25, f1, f8, rtz # perform operation
fnmadd.s f28, f25, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xc0ffc0e62a2176c0 # load x3 with value 0xc0ffc0e62a2176c0
sw x3, 0(x2) # store 0xc0ffc0e62a2176c0 in memory
flw f30, 0(x2) # load 0xc0ffc0e62a2176c0 from memory into f30
fnmadd.s f27, f28, f21, f30, dyn # perform operation
fnmadd.s f27, f28, f21, f30, rdn # perform operation
fnmadd.s f27, f28, f21, f30, rmm # perform operation
fnmadd.s f27, f28, f21, f30, rne # perform operation
fnmadd.s f27, f28, f21, f30, rtz # perform operation
fnmadd.s f27, f28, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xeac45208b2ca0fcf # load x3 with value 0xeac45208b2ca0fcf
sw x3, 0(x2) # store 0xeac45208b2ca0fcf in memory
flw f22, 0(x2) # load 0xeac45208b2ca0fcf from memory into f22
fnmadd.s f14, f5, f19, f22, dyn # perform operation
fnmadd.s f14, f5, f19, f22, rdn # perform operation
fnmadd.s f14, f5, f19, f22, rmm # perform operation
fnmadd.s f14, f5, f19, f22, rne # perform operation
fnmadd.s f14, f5, f19, f22, rtz # perform operation
fnmadd.s f14, f5, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x3b4b196d455e2637 # load x3 with value 0x3b4b196d455e2637
sw x3, 0(x2) # store 0x3b4b196d455e2637 in memory
flw f3, 0(x2) # load 0x3b4b196d455e2637 from memory into f3
fnmadd.s f26, f17, f14, f3, dyn # perform operation
fnmadd.s f26, f17, f14, f3, rdn # perform operation
fnmadd.s f26, f17, f14, f3, rmm # perform operation
fnmadd.s f26, f17, f14, f3, rne # perform operation
fnmadd.s f26, f17, f14, f3, rtz # perform operation
fnmadd.s f26, f17, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x822f885c317ca381 # load x3 with value 0x822f885c317ca381
sw x3, 0(x2) # store 0x822f885c317ca381 in memory
flw f18, 0(x2) # load 0x822f885c317ca381 from memory into f18
fnmadd.s f6, f20, f14, f18, dyn # perform operation
fnmadd.s f6, f20, f14, f18, rdn # perform operation
fnmadd.s f6, f20, f14, f18, rmm # perform operation
fnmadd.s f6, f20, f14, f18, rne # perform operation
fnmadd.s f6, f20, f14, f18, rtz # perform operation
fnmadd.s f6, f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f20, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xf005818256a20d9c # load x3 with value 0xf005818256a20d9c
sw x3, 0(x2) # store 0xf005818256a20d9c in memory
flw f23, 0(x2) # load 0xf005818256a20d9c from memory into f23
fnmadd.s f15, f8, f24, f23, dyn # perform operation
fnmadd.s f15, f8, f24, f23, rdn # perform operation
fnmadd.s f15, f8, f24, f23, rmm # perform operation
fnmadd.s f15, f8, f24, f23, rne # perform operation
fnmadd.s f15, f8, f24, f23, rtz # perform operation
fnmadd.s f15, f8, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x4d0ab476dffafcf7 # load x3 with value 0x4d0ab476dffafcf7
sw x3, 0(x2) # store 0x4d0ab476dffafcf7 in memory
flw f7, 0(x2) # load 0x4d0ab476dffafcf7 from memory into f7
fnmadd.s f8, f31, f25, f7, dyn # perform operation
fnmadd.s f8, f31, f25, f7, rdn # perform operation
fnmadd.s f8, f31, f25, f7, rmm # perform operation
fnmadd.s f8, f31, f25, f7, rne # perform operation
fnmadd.s f8, f31, f25, f7, rtz # perform operation
fnmadd.s f8, f31, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x430211b4ed16ff2b # load x3 with value 0x430211b4ed16ff2b
sw x3, 0(x2) # store 0x430211b4ed16ff2b in memory
flw f25, 0(x2) # load 0x430211b4ed16ff2b from memory into f25
fnmadd.s f31, f18, f13, f25, dyn # perform operation
fnmadd.s f31, f18, f13, f25, rdn # perform operation
fnmadd.s f31, f18, f13, f25, rmm # perform operation
fnmadd.s f31, f18, f13, f25, rne # perform operation
fnmadd.s f31, f18, f13, f25, rtz # perform operation
fnmadd.s f31, f18, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x889a9787b8647fab # load x3 with value 0x889a9787b8647fab
sw x3, 0(x2) # store 0x889a9787b8647fab in memory
flw f12, 0(x2) # load 0x889a9787b8647fab from memory into f12
fnmadd.s f18, f29, f21, f12, dyn # perform operation
fnmadd.s f18, f29, f21, f12, rdn # perform operation
fnmadd.s f18, f29, f21, f12, rmm # perform operation
fnmadd.s f18, f29, f21, f12, rne # perform operation
fnmadd.s f18, f29, f21, f12, rtz # perform operation
fnmadd.s f18, f29, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x57ff8aefbbe5db11 # load x3 with value 0x57ff8aefbbe5db11
sw x3, 0(x2) # store 0x57ff8aefbbe5db11 in memory
flw f26, 0(x2) # load 0x57ff8aefbbe5db11 from memory into f26
fnmadd.s f6, f25, f10, f26, dyn # perform operation
fnmadd.s f6, f25, f10, f26, rdn # perform operation
fnmadd.s f6, f25, f10, f26, rmm # perform operation
fnmadd.s f6, f25, f10, f26, rne # perform operation
fnmadd.s f6, f25, f10, f26, rtz # perform operation
fnmadd.s f6, f25, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x782b74c9ff1e05f6 # load x3 with value 0x782b74c9ff1e05f6
sw x3, 0(x2) # store 0x782b74c9ff1e05f6 in memory
flw f28, 0(x2) # load 0x782b74c9ff1e05f6 from memory into f28
fnmadd.s f2, f14, f5, f28, dyn # perform operation
fnmadd.s f2, f14, f5, f28, rdn # perform operation
fnmadd.s f2, f14, f5, f28, rmm # perform operation
fnmadd.s f2, f14, f5, f28, rne # perform operation
fnmadd.s f2, f14, f5, f28, rtz # perform operation
fnmadd.s f2, f14, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xddd510221609d244 # load x3 with value 0xddd510221609d244
sw x3, 0(x2) # store 0xddd510221609d244 in memory
flw f13, 0(x2) # load 0xddd510221609d244 from memory into f13
fnmadd.s f29, f23, f15, f13, dyn # perform operation
fnmadd.s f29, f23, f15, f13, rdn # perform operation
fnmadd.s f29, f23, f15, f13, rmm # perform operation
fnmadd.s f29, f23, f15, f13, rne # perform operation
fnmadd.s f29, f23, f15, f13, rtz # perform operation
fnmadd.s f29, f23, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x643101e794fb67b5 # load x3 with value 0x643101e794fb67b5
sw x3, 0(x2) # store 0x643101e794fb67b5 in memory
flw f10, 0(x2) # load 0x643101e794fb67b5 from memory into f10
fnmadd.s f31, f28, f30, f10, dyn # perform operation
fnmadd.s f31, f28, f30, f10, rdn # perform operation
fnmadd.s f31, f28, f30, f10, rmm # perform operation
fnmadd.s f31, f28, f30, f10, rne # perform operation
fnmadd.s f31, f28, f30, f10, rtz # perform operation
fnmadd.s f31, f28, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x8cb2584f1d10461f # load x3 with value 0x8cb2584f1d10461f
sw x3, 0(x2) # store 0x8cb2584f1d10461f in memory
flw f18, 0(x2) # load 0x8cb2584f1d10461f from memory into f18
fnmadd.s f10, f24, f27, f18, dyn # perform operation
fnmadd.s f10, f24, f27, f18, rdn # perform operation
fnmadd.s f10, f24, f27, f18, rmm # perform operation
fnmadd.s f10, f24, f27, f18, rne # perform operation
fnmadd.s f10, f24, f27, f18, rtz # perform operation
fnmadd.s f10, f24, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x9a0d32cb6a2d9487 # load x3 with value 0x9a0d32cb6a2d9487
sw x3, 0(x2) # store 0x9a0d32cb6a2d9487 in memory
flw f14, 0(x2) # load 0x9a0d32cb6a2d9487 from memory into f14
fnmadd.s f1, f28, f3, f14, dyn # perform operation
fnmadd.s f1, f28, f3, f14, rdn # perform operation
fnmadd.s f1, f28, f3, f14, rmm # perform operation
fnmadd.s f1, f28, f3, f14, rne # perform operation
fnmadd.s f1, f28, f3, f14, rtz # perform operation
fnmadd.s f1, f28, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x4ccbae4dfd9eac4a # load x3 with value 0x4ccbae4dfd9eac4a
sw x3, 0(x2) # store 0x4ccbae4dfd9eac4a in memory
flw f6, 0(x2) # load 0x4ccbae4dfd9eac4a from memory into f6
fnmadd.s f28, f18, f16, f6, dyn # perform operation
fnmadd.s f28, f18, f16, f6, rdn # perform operation
fnmadd.s f28, f18, f16, f6, rmm # perform operation
fnmadd.s f28, f18, f16, f6, rne # perform operation
fnmadd.s f28, f18, f16, f6, rtz # perform operation
fnmadd.s f28, f18, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x29d5d35e52f7fa12 # load x3 with value 0x29d5d35e52f7fa12
sw x3, 0(x2) # store 0x29d5d35e52f7fa12 in memory
flw f6, 0(x2) # load 0x29d5d35e52f7fa12 from memory into f6
fnmadd.s f7, f18, f13, f6, dyn # perform operation
fnmadd.s f7, f18, f13, f6, rdn # perform operation
fnmadd.s f7, f18, f13, f6, rmm # perform operation
fnmadd.s f7, f18, f13, f6, rne # perform operation
fnmadd.s f7, f18, f13, f6, rtz # perform operation
fnmadd.s f7, f18, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f18, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xb70a9d1029e2a213 # load x3 with value 0xb70a9d1029e2a213
sw x3, 0(x2) # store 0xb70a9d1029e2a213 in memory
flw f8, 0(x2) # load 0xb70a9d1029e2a213 from memory into f8
fnmadd.s f21, f5, f27, f8, dyn # perform operation
fnmadd.s f21, f5, f27, f8, rdn # perform operation
fnmadd.s f21, f5, f27, f8, rmm # perform operation
fnmadd.s f21, f5, f27, f8, rne # perform operation
fnmadd.s f21, f5, f27, f8, rtz # perform operation
fnmadd.s f21, f5, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xbc287c0a3f8fb5a7 # load x3 with value 0xbc287c0a3f8fb5a7
sw x3, 0(x2) # store 0xbc287c0a3f8fb5a7 in memory
flw f29, 0(x2) # load 0xbc287c0a3f8fb5a7 from memory into f29
fnmadd.s f27, f31, f26, f29, dyn # perform operation
fnmadd.s f27, f31, f26, f29, rdn # perform operation
fnmadd.s f27, f31, f26, f29, rmm # perform operation
fnmadd.s f27, f31, f26, f29, rne # perform operation
fnmadd.s f27, f31, f26, f29, rtz # perform operation
fnmadd.s f27, f31, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xad6de483aac5eea1 # load x3 with value 0xad6de483aac5eea1
sw x3, 0(x2) # store 0xad6de483aac5eea1 in memory
flw f19, 0(x2) # load 0xad6de483aac5eea1 from memory into f19
fnmadd.s f10, f16, f1, f19, dyn # perform operation
fnmadd.s f10, f16, f1, f19, rdn # perform operation
fnmadd.s f10, f16, f1, f19, rmm # perform operation
fnmadd.s f10, f16, f1, f19, rne # perform operation
fnmadd.s f10, f16, f1, f19, rtz # perform operation
fnmadd.s f10, f16, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0xcca97aee8a68bedd # load x3 with value 0xcca97aee8a68bedd
sw x3, 0(x2) # store 0xcca97aee8a68bedd in memory
flw f29, 0(x2) # load 0xcca97aee8a68bedd from memory into f29
fnmadd.s f12, f16, f25, f29, dyn # perform operation
fnmadd.s f12, f16, f25, f29, rdn # perform operation
fnmadd.s f12, f16, f25, f29, rmm # perform operation
fnmadd.s f12, f16, f25, f29, rne # perform operation
fnmadd.s f12, f16, f25, f29, rtz # perform operation
fnmadd.s f12, f16, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f16, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x1be1600b74cd64f0 # load x3 with value 0x1be1600b74cd64f0
sw x3, 0(x2) # store 0x1be1600b74cd64f0 in memory
flw f6, 0(x2) # load 0x1be1600b74cd64f0 from memory into f6
fnmadd.s f7, f12, f5, f6, dyn # perform operation
fnmadd.s f7, f12, f5, f6, rdn # perform operation
fnmadd.s f7, f12, f5, f6, rmm # perform operation
fnmadd.s f7, f12, f5, f6, rne # perform operation
fnmadd.s f7, f12, f5, f6, rtz # perform operation
fnmadd.s f7, f12, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x34a747e877cf74ee # load x3 with value 0x34a747e877cf74ee
sw x3, 0(x2) # store 0x34a747e877cf74ee in memory
flw f17, 0(x2) # load 0x34a747e877cf74ee from memory into f17
fnmadd.s f13, f24, f15, f17, dyn # perform operation
fnmadd.s f13, f24, f15, f17, rdn # perform operation
fnmadd.s f13, f24, f15, f17, rmm # perform operation
fnmadd.s f13, f24, f15, f17, rne # perform operation
fnmadd.s f13, f24, f15, f17, rtz # perform operation
fnmadd.s f13, f24, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xd690bf3a842d28e3 # load x3 with value 0xd690bf3a842d28e3
sw x3, 0(x2) # store 0xd690bf3a842d28e3 in memory
flw f15, 0(x2) # load 0xd690bf3a842d28e3 from memory into f15
fnmadd.s f9, f26, f30, f15, dyn # perform operation
fnmadd.s f9, f26, f30, f15, rdn # perform operation
fnmadd.s f9, f26, f30, f15, rmm # perform operation
fnmadd.s f9, f26, f30, f15, rne # perform operation
fnmadd.s f9, f26, f30, f15, rtz # perform operation
fnmadd.s f9, f26, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f26, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f26, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f26, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f26, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f26, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x2d053df543860409 # load x3 with value 0x2d053df543860409
sw x3, 0(x2) # store 0x2d053df543860409 in memory
flw f20, 0(x2) # load 0x2d053df543860409 from memory into f20
fnmadd.s f6, f24, f1, f20, dyn # perform operation
fnmadd.s f6, f24, f1, f20, rdn # perform operation
fnmadd.s f6, f24, f1, f20, rmm # perform operation
fnmadd.s f6, f24, f1, f20, rne # perform operation
fnmadd.s f6, f24, f1, f20, rtz # perform operation
fnmadd.s f6, f24, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x49d1b8e1b2be09d8 # load x3 with value 0x49d1b8e1b2be09d8
sw x3, 0(x2) # store 0x49d1b8e1b2be09d8 in memory
flw f21, 0(x2) # load 0x49d1b8e1b2be09d8 from memory into f21
fnmadd.s f19, f26, f15, f21, dyn # perform operation
fnmadd.s f19, f26, f15, f21, rdn # perform operation
fnmadd.s f19, f26, f15, f21, rmm # perform operation
fnmadd.s f19, f26, f15, f21, rne # perform operation
fnmadd.s f19, f26, f15, f21, rtz # perform operation
fnmadd.s f19, f26, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f26, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0xb1d77e4e2601b9cb # load x3 with value 0xb1d77e4e2601b9cb
sw x3, 0(x2) # store 0xb1d77e4e2601b9cb in memory
flw f20, 0(x2) # load 0xb1d77e4e2601b9cb from memory into f20
fnmadd.s f21, f15, f18, f20, dyn # perform operation
fnmadd.s f21, f15, f18, f20, rdn # perform operation
fnmadd.s f21, f15, f18, f20, rmm # perform operation
fnmadd.s f21, f15, f18, f20, rne # perform operation
fnmadd.s f21, f15, f18, f20, rtz # perform operation
fnmadd.s f21, f15, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xeee7b85ba8ada1c9 # load x3 with value 0xeee7b85ba8ada1c9
sw x3, 0(x2) # store 0xeee7b85ba8ada1c9 in memory
flw f6, 0(x2) # load 0xeee7b85ba8ada1c9 from memory into f6
fnmadd.s f31, f25, f13, f6, dyn # perform operation
fnmadd.s f31, f25, f13, f6, rdn # perform operation
fnmadd.s f31, f25, f13, f6, rmm # perform operation
fnmadd.s f31, f25, f13, f6, rne # perform operation
fnmadd.s f31, f25, f13, f6, rtz # perform operation
fnmadd.s f31, f25, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f25, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x2c3deea9447089c0 # load x3 with value 0x2c3deea9447089c0
sw x3, 0(x2) # store 0x2c3deea9447089c0 in memory
flw f6, 0(x2) # load 0x2c3deea9447089c0 from memory into f6
fnmadd.s f13, f20, f29, f6, dyn # perform operation
fnmadd.s f13, f20, f29, f6, rdn # perform operation
fnmadd.s f13, f20, f29, f6, rmm # perform operation
fnmadd.s f13, f20, f29, f6, rne # perform operation
fnmadd.s f13, f20, f29, f6, rtz # perform operation
fnmadd.s f13, f20, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xa46b493c93a84ccf # load x3 with value 0xa46b493c93a84ccf
sw x3, 0(x2) # store 0xa46b493c93a84ccf in memory
flw f23, 0(x2) # load 0xa46b493c93a84ccf from memory into f23
fnmadd.s f17, f19, f7, f23, dyn # perform operation
fnmadd.s f17, f19, f7, f23, rdn # perform operation
fnmadd.s f17, f19, f7, f23, rmm # perform operation
fnmadd.s f17, f19, f7, f23, rne # perform operation
fnmadd.s f17, f19, f7, f23, rtz # perform operation
fnmadd.s f17, f19, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xd48c7268d3180929 # load x3 with value 0xd48c7268d3180929
sw x3, 0(x2) # store 0xd48c7268d3180929 in memory
flw f25, 0(x2) # load 0xd48c7268d3180929 from memory into f25
fnmadd.s f24, f28, f16, f25, dyn # perform operation
fnmadd.s f24, f28, f16, f25, rdn # perform operation
fnmadd.s f24, f28, f16, f25, rmm # perform operation
fnmadd.s f24, f28, f16, f25, rne # perform operation
fnmadd.s f24, f28, f16, f25, rtz # perform operation
fnmadd.s f24, f28, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f28, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f28, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f28, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f28, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f28, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x47054737985582df # load x3 with value 0x47054737985582df
sw x3, 0(x2) # store 0x47054737985582df in memory
flw f6, 0(x2) # load 0x47054737985582df from memory into f6
fnmadd.s f8, f10, f31, f6, dyn # perform operation
fnmadd.s f8, f10, f31, f6, rdn # perform operation
fnmadd.s f8, f10, f31, f6, rmm # perform operation
fnmadd.s f8, f10, f31, f6, rne # perform operation
fnmadd.s f8, f10, f31, f6, rtz # perform operation
fnmadd.s f8, f10, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x854f27c423647603 # load x3 with value 0x854f27c423647603
sw x3, 0(x2) # store 0x854f27c423647603 in memory
flw f10, 0(x2) # load 0x854f27c423647603 from memory into f10
fnmadd.s f18, f11, f17, f10, dyn # perform operation
fnmadd.s f18, f11, f17, f10, rdn # perform operation
fnmadd.s f18, f11, f17, f10, rmm # perform operation
fnmadd.s f18, f11, f17, f10, rne # perform operation
fnmadd.s f18, f11, f17, f10, rtz # perform operation
fnmadd.s f18, f11, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x9fa03414ef5c70f0 # load x3 with value 0x9fa03414ef5c70f0
sw x3, 0(x2) # store 0x9fa03414ef5c70f0 in memory
flw f20, 0(x2) # load 0x9fa03414ef5c70f0 from memory into f20
fnmadd.s f19, f21, f14, f20, dyn # perform operation
fnmadd.s f19, f21, f14, f20, rdn # perform operation
fnmadd.s f19, f21, f14, f20, rmm # perform operation
fnmadd.s f19, f21, f14, f20, rne # perform operation
fnmadd.s f19, f21, f14, f20, rtz # perform operation
fnmadd.s f19, f21, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x3c39ad74ded7959c # load x3 with value 0x3c39ad74ded7959c
sw x3, 0(x2) # store 0x3c39ad74ded7959c in memory
flw f10, 0(x2) # load 0x3c39ad74ded7959c from memory into f10
fnmadd.s f23, f11, f25, f10, dyn # perform operation
fnmadd.s f23, f11, f25, f10, rdn # perform operation
fnmadd.s f23, f11, f25, f10, rmm # perform operation
fnmadd.s f23, f11, f25, f10, rne # perform operation
fnmadd.s f23, f11, f25, f10, rtz # perform operation
fnmadd.s f23, f11, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x94048d56a0a85382 # load x3 with value 0x94048d56a0a85382
sw x3, 0(x2) # store 0x94048d56a0a85382 in memory
flw f3, 0(x2) # load 0x94048d56a0a85382 from memory into f3
fnmadd.s f7, f15, f24, f3, dyn # perform operation
fnmadd.s f7, f15, f24, f3, rdn # perform operation
fnmadd.s f7, f15, f24, f3, rmm # perform operation
fnmadd.s f7, f15, f24, f3, rne # perform operation
fnmadd.s f7, f15, f24, f3, rtz # perform operation
fnmadd.s f7, f15, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x22cd6f67d6d25511 # load x3 with value 0x22cd6f67d6d25511
sw x3, 0(x2) # store 0x22cd6f67d6d25511 in memory
flw f18, 0(x2) # load 0x22cd6f67d6d25511 from memory into f18
fnmadd.s f23, f29, f28, f18, dyn # perform operation
fnmadd.s f23, f29, f28, f18, rdn # perform operation
fnmadd.s f23, f29, f28, f18, rmm # perform operation
fnmadd.s f23, f29, f28, f18, rne # perform operation
fnmadd.s f23, f29, f28, f18, rtz # perform operation
fnmadd.s f23, f29, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xc2f2987e5a0511df # load x3 with value 0xc2f2987e5a0511df
sw x3, 0(x2) # store 0xc2f2987e5a0511df in memory
flw f22, 0(x2) # load 0xc2f2987e5a0511df from memory into f22
fnmadd.s f2, f26, f5, f22, dyn # perform operation
fnmadd.s f2, f26, f5, f22, rdn # perform operation
fnmadd.s f2, f26, f5, f22, rmm # perform operation
fnmadd.s f2, f26, f5, f22, rne # perform operation
fnmadd.s f2, f26, f5, f22, rtz # perform operation
fnmadd.s f2, f26, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xa5e0dce68a1b91ab # load x3 with value 0xa5e0dce68a1b91ab
sw x3, 0(x2) # store 0xa5e0dce68a1b91ab in memory
flw f10, 0(x2) # load 0xa5e0dce68a1b91ab from memory into f10
fnmadd.s f28, f9, f20, f10, dyn # perform operation
fnmadd.s f28, f9, f20, f10, rdn # perform operation
fnmadd.s f28, f9, f20, f10, rmm # perform operation
fnmadd.s f28, f9, f20, f10, rne # perform operation
fnmadd.s f28, f9, f20, f10, rtz # perform operation
fnmadd.s f28, f9, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x617aeef17ecfea72 # load x3 with value 0x617aeef17ecfea72
sw x3, 0(x2) # store 0x617aeef17ecfea72 in memory
flw f23, 0(x2) # load 0x617aeef17ecfea72 from memory into f23
fnmadd.s f31, f16, f25, f23, dyn # perform operation
fnmadd.s f31, f16, f25, f23, rdn # perform operation
fnmadd.s f31, f16, f25, f23, rmm # perform operation
fnmadd.s f31, f16, f25, f23, rne # perform operation
fnmadd.s f31, f16, f25, f23, rtz # perform operation
fnmadd.s f31, f16, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f16, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f16, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f16, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f16, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f16, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xae15dad693c6ef29 # load x3 with value 0xae15dad693c6ef29
sw x3, 0(x2) # store 0xae15dad693c6ef29 in memory
flw f24, 0(x2) # load 0xae15dad693c6ef29 from memory into f24
fnmadd.s f20, f26, f7, f24, dyn # perform operation
fnmadd.s f20, f26, f7, f24, rdn # perform operation
fnmadd.s f20, f26, f7, f24, rmm # perform operation
fnmadd.s f20, f26, f7, f24, rne # perform operation
fnmadd.s f20, f26, f7, f24, rtz # perform operation
fnmadd.s f20, f26, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x8b85769e5efb53c5 # load x3 with value 0x8b85769e5efb53c5
sw x3, 0(x2) # store 0x8b85769e5efb53c5 in memory
flw f26, 0(x2) # load 0x8b85769e5efb53c5 from memory into f26
fnmadd.s f30, f7, f20, f26, dyn # perform operation
fnmadd.s f30, f7, f20, f26, rdn # perform operation
fnmadd.s f30, f7, f20, f26, rmm # perform operation
fnmadd.s f30, f7, f20, f26, rne # perform operation
fnmadd.s f30, f7, f20, f26, rtz # perform operation
fnmadd.s f30, f7, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x2830e97c2b627560 # load x3 with value 0x2830e97c2b627560
sw x3, 0(x2) # store 0x2830e97c2b627560 in memory
flw f8, 0(x2) # load 0x2830e97c2b627560 from memory into f8
fnmadd.s f23, f26, f28, f8, dyn # perform operation
fnmadd.s f23, f26, f28, f8, rdn # perform operation
fnmadd.s f23, f26, f28, f8, rmm # perform operation
fnmadd.s f23, f26, f28, f8, rne # perform operation
fnmadd.s f23, f26, f28, f8, rtz # perform operation
fnmadd.s f23, f26, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xbde1077ca328c6ed # load x3 with value 0xbde1077ca328c6ed
sw x3, 0(x2) # store 0xbde1077ca328c6ed in memory
flw f9, 0(x2) # load 0xbde1077ca328c6ed from memory into f9
fnmadd.s f5, f21, f22, f9, dyn # perform operation
fnmadd.s f5, f21, f22, f9, rdn # perform operation
fnmadd.s f5, f21, f22, f9, rmm # perform operation
fnmadd.s f5, f21, f22, f9, rne # perform operation
fnmadd.s f5, f21, f22, f9, rtz # perform operation
fnmadd.s f5, f21, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x305dcbb3d222788a # load x3 with value 0x305dcbb3d222788a
sw x3, 0(x2) # store 0x305dcbb3d222788a in memory
flw f31, 0(x2) # load 0x305dcbb3d222788a from memory into f31
fnmadd.s f20, f8, f6, f31, dyn # perform operation
fnmadd.s f20, f8, f6, f31, rdn # perform operation
fnmadd.s f20, f8, f6, f31, rmm # perform operation
fnmadd.s f20, f8, f6, f31, rne # perform operation
fnmadd.s f20, f8, f6, f31, rtz # perform operation
fnmadd.s f20, f8, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f8, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xbb30769dc6171f28 # load x3 with value 0xbb30769dc6171f28
sw x3, 0(x2) # store 0xbb30769dc6171f28 in memory
flw f30, 0(x2) # load 0xbb30769dc6171f28 from memory into f30
fnmadd.s f16, f15, f14, f30, dyn # perform operation
fnmadd.s f16, f15, f14, f30, rdn # perform operation
fnmadd.s f16, f15, f14, f30, rmm # perform operation
fnmadd.s f16, f15, f14, f30, rne # perform operation
fnmadd.s f16, f15, f14, f30, rtz # perform operation
fnmadd.s f16, f15, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xef809de7e00915f4 # load x3 with value 0xef809de7e00915f4
sw x3, 0(x2) # store 0xef809de7e00915f4 in memory
flw f25, 0(x2) # load 0xef809de7e00915f4 from memory into f25
fnmadd.s f16, f29, f13, f25, dyn # perform operation
fnmadd.s f16, f29, f13, f25, rdn # perform operation
fnmadd.s f16, f29, f13, f25, rmm # perform operation
fnmadd.s f16, f29, f13, f25, rne # perform operation
fnmadd.s f16, f29, f13, f25, rtz # perform operation
fnmadd.s f16, f29, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xc9a4132d96d02a83 # load x3 with value 0xc9a4132d96d02a83
sw x3, 0(x2) # store 0xc9a4132d96d02a83 in memory
flw f15, 0(x2) # load 0xc9a4132d96d02a83 from memory into f15
fnmadd.s f13, f27, f20, f15, dyn # perform operation
fnmadd.s f13, f27, f20, f15, rdn # perform operation
fnmadd.s f13, f27, f20, f15, rmm # perform operation
fnmadd.s f13, f27, f20, f15, rne # perform operation
fnmadd.s f13, f27, f20, f15, rtz # perform operation
fnmadd.s f13, f27, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f27, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x9c5b5b1ec6cd804f # load x3 with value 0x9c5b5b1ec6cd804f
sw x3, 0(x2) # store 0x9c5b5b1ec6cd804f in memory
flw f8, 0(x2) # load 0x9c5b5b1ec6cd804f from memory into f8
fnmadd.s f12, f10, f26, f8, dyn # perform operation
fnmadd.s f12, f10, f26, f8, rdn # perform operation
fnmadd.s f12, f10, f26, f8, rmm # perform operation
fnmadd.s f12, f10, f26, f8, rne # perform operation
fnmadd.s f12, f10, f26, f8, rtz # perform operation
fnmadd.s f12, f10, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8544e2fa0dd5af24 # load x3 with value 0x8544e2fa0dd5af24
sw x3, 0(x2) # store 0x8544e2fa0dd5af24 in memory
flw f26, 0(x2) # load 0x8544e2fa0dd5af24 from memory into f26
fnmadd.s f21, f15, f19, f26, dyn # perform operation
fnmadd.s f21, f15, f19, f26, rdn # perform operation
fnmadd.s f21, f15, f19, f26, rmm # perform operation
fnmadd.s f21, f15, f19, f26, rne # perform operation
fnmadd.s f21, f15, f19, f26, rtz # perform operation
fnmadd.s f21, f15, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x2e511a1b77fe92ca # load x3 with value 0x2e511a1b77fe92ca
sw x3, 0(x2) # store 0x2e511a1b77fe92ca in memory
flw f23, 0(x2) # load 0x2e511a1b77fe92ca from memory into f23
fnmadd.s f9, f30, f16, f23, dyn # perform operation
fnmadd.s f9, f30, f16, f23, rdn # perform operation
fnmadd.s f9, f30, f16, f23, rmm # perform operation
fnmadd.s f9, f30, f16, f23, rne # perform operation
fnmadd.s f9, f30, f16, f23, rtz # perform operation
fnmadd.s f9, f30, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f30, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x753bf6df582b9575 # load x3 with value 0x753bf6df582b9575
sw x3, 0(x2) # store 0x753bf6df582b9575 in memory
flw f3, 0(x2) # load 0x753bf6df582b9575 from memory into f3
fnmadd.s f17, f14, f21, f3, dyn # perform operation
fnmadd.s f17, f14, f21, f3, rdn # perform operation
fnmadd.s f17, f14, f21, f3, rmm # perform operation
fnmadd.s f17, f14, f21, f3, rne # perform operation
fnmadd.s f17, f14, f21, f3, rtz # perform operation
fnmadd.s f17, f14, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x75d04d871f13c153 # load x3 with value 0x75d04d871f13c153
sw x3, 0(x2) # store 0x75d04d871f13c153 in memory
flw f27, 0(x2) # load 0x75d04d871f13c153 from memory into f27
fnmadd.s f13, f6, f12, f27, dyn # perform operation
fnmadd.s f13, f6, f12, f27, rdn # perform operation
fnmadd.s f13, f6, f12, f27, rmm # perform operation
fnmadd.s f13, f6, f12, f27, rne # perform operation
fnmadd.s f13, f6, f12, f27, rtz # perform operation
fnmadd.s f13, f6, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x4bb7fa1304bd5df7 # load x3 with value 0x4bb7fa1304bd5df7
sw x3, 0(x2) # store 0x4bb7fa1304bd5df7 in memory
flw f31, 0(x2) # load 0x4bb7fa1304bd5df7 from memory into f31
fnmadd.s f19, f13, f14, f31, dyn # perform operation
fnmadd.s f19, f13, f14, f31, rdn # perform operation
fnmadd.s f19, f13, f14, f31, rmm # perform operation
fnmadd.s f19, f13, f14, f31, rne # perform operation
fnmadd.s f19, f13, f14, f31, rtz # perform operation
fnmadd.s f19, f13, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x585a0004a551079 # load x3 with value 0x585a0004a551079
sw x3, 0(x2) # store 0x585a0004a551079 in memory
flw f16, 0(x2) # load 0x585a0004a551079 from memory into f16
fnmadd.s f5, f22, f11, f16, dyn # perform operation
fnmadd.s f5, f22, f11, f16, rdn # perform operation
fnmadd.s f5, f22, f11, f16, rmm # perform operation
fnmadd.s f5, f22, f11, f16, rne # perform operation
fnmadd.s f5, f22, f11, f16, rtz # perform operation
fnmadd.s f5, f22, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xf8f2a8868a32541d # load x3 with value 0xf8f2a8868a32541d
sw x3, 0(x2) # store 0xf8f2a8868a32541d in memory
flw f17, 0(x2) # load 0xf8f2a8868a32541d from memory into f17
fnmadd.s f7, f29, f25, f17, dyn # perform operation
fnmadd.s f7, f29, f25, f17, rdn # perform operation
fnmadd.s f7, f29, f25, f17, rmm # perform operation
fnmadd.s f7, f29, f25, f17, rne # perform operation
fnmadd.s f7, f29, f25, f17, rtz # perform operation
fnmadd.s f7, f29, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f29, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f29, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f29, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f29, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f29, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x92554bdbf72da2a4 # load x3 with value 0x92554bdbf72da2a4
sw x3, 0(x2) # store 0x92554bdbf72da2a4 in memory
flw f26, 0(x2) # load 0x92554bdbf72da2a4 from memory into f26
fnmadd.s f29, f9, f20, f26, dyn # perform operation
fnmadd.s f29, f9, f20, f26, rdn # perform operation
fnmadd.s f29, f9, f20, f26, rmm # perform operation
fnmadd.s f29, f9, f20, f26, rne # perform operation
fnmadd.s f29, f9, f20, f26, rtz # perform operation
fnmadd.s f29, f9, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xdd453f5b1e60985d # load x3 with value 0xdd453f5b1e60985d
sw x3, 0(x2) # store 0xdd453f5b1e60985d in memory
flw f12, 0(x2) # load 0xdd453f5b1e60985d from memory into f12
fnmadd.s f19, f2, f23, f12, dyn # perform operation
fnmadd.s f19, f2, f23, f12, rdn # perform operation
fnmadd.s f19, f2, f23, f12, rmm # perform operation
fnmadd.s f19, f2, f23, f12, rne # perform operation
fnmadd.s f19, f2, f23, f12, rtz # perform operation
fnmadd.s f19, f2, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x13da82f157fb2eb4 # load x3 with value 0x13da82f157fb2eb4
sw x3, 0(x2) # store 0x13da82f157fb2eb4 in memory
flw f3, 0(x2) # load 0x13da82f157fb2eb4 from memory into f3
fnmadd.s f16, f8, f9, f3, dyn # perform operation
fnmadd.s f16, f8, f9, f3, rdn # perform operation
fnmadd.s f16, f8, f9, f3, rmm # perform operation
fnmadd.s f16, f8, f9, f3, rne # perform operation
fnmadd.s f16, f8, f9, f3, rtz # perform operation
fnmadd.s f16, f8, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x8ffc8f998b6aa68d # load x3 with value 0x8ffc8f998b6aa68d
sw x3, 0(x2) # store 0x8ffc8f998b6aa68d in memory
flw f25, 0(x2) # load 0x8ffc8f998b6aa68d from memory into f25
fnmadd.s f26, f16, f21, f25, dyn # perform operation
fnmadd.s f26, f16, f21, f25, rdn # perform operation
fnmadd.s f26, f16, f21, f25, rmm # perform operation
fnmadd.s f26, f16, f21, f25, rne # perform operation
fnmadd.s f26, f16, f21, f25, rtz # perform operation
fnmadd.s f26, f16, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x8fd41dba34d92c85 # load x3 with value 0x8fd41dba34d92c85
sw x3, 0(x2) # store 0x8fd41dba34d92c85 in memory
flw f8, 0(x2) # load 0x8fd41dba34d92c85 from memory into f8
fnmadd.s f29, f27, f25, f8, dyn # perform operation
fnmadd.s f29, f27, f25, f8, rdn # perform operation
fnmadd.s f29, f27, f25, f8, rmm # perform operation
fnmadd.s f29, f27, f25, f8, rne # perform operation
fnmadd.s f29, f27, f25, f8, rtz # perform operation
fnmadd.s f29, f27, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x62ca4dedb6fa489d # load x3 with value 0x62ca4dedb6fa489d
sw x3, 0(x2) # store 0x62ca4dedb6fa489d in memory
flw f5, 0(x2) # load 0x62ca4dedb6fa489d from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.s f12, f17, f5, f28, dyn # perform operation
fnmadd.s f12, f17, f5, f28, rdn # perform operation
fnmadd.s f12, f17, f5, f28, rmm # perform operation
fnmadd.s f12, f17, f5, f28, rne # perform operation
fnmadd.s f12, f17, f5, f28, rtz # perform operation
fnmadd.s f12, f17, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xa8491ade93e78a1e # load x3 with value 0xa8491ade93e78a1e
sw x3, 0(x2) # store 0xa8491ade93e78a1e in memory
flw f14, 0(x2) # load 0xa8491ade93e78a1e from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fnmadd.s f18, f30, f14, f9, dyn # perform operation
fnmadd.s f18, f30, f14, f9, rdn # perform operation
fnmadd.s f18, f30, f14, f9, rmm # perform operation
fnmadd.s f18, f30, f14, f9, rne # perform operation
fnmadd.s f18, f30, f14, f9, rtz # perform operation
fnmadd.s f18, f30, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f30, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f30, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f30, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f30, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f30, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xf6a0c4b114f882ab # load x3 with value 0xf6a0c4b114f882ab
sw x3, 0(x2) # store 0xf6a0c4b114f882ab in memory
flw f1, 0(x2) # load 0xf6a0c4b114f882ab from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmadd.s f14, f31, f1, f16, dyn # perform operation
fnmadd.s f14, f31, f1, f16, rdn # perform operation
fnmadd.s f14, f31, f1, f16, rmm # perform operation
fnmadd.s f14, f31, f1, f16, rne # perform operation
fnmadd.s f14, f31, f1, f16, rtz # perform operation
fnmadd.s f14, f31, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x4814af43307cbd11 # load x3 with value 0x4814af43307cbd11
sw x3, 0(x2) # store 0x4814af43307cbd11 in memory
flw f17, 0(x2) # load 0x4814af43307cbd11 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f7, f22, f17, f2, dyn # perform operation
fnmadd.s f7, f22, f17, f2, rdn # perform operation
fnmadd.s f7, f22, f17, f2, rmm # perform operation
fnmadd.s f7, f22, f17, f2, rne # perform operation
fnmadd.s f7, f22, f17, f2, rtz # perform operation
fnmadd.s f7, f22, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xbfce5113ad58fe88 # load x3 with value 0xbfce5113ad58fe88
sw x3, 0(x2) # store 0xbfce5113ad58fe88 in memory
flw f26, 0(x2) # load 0xbfce5113ad58fe88 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmadd.s f22, f28, f26, f20, dyn # perform operation
fnmadd.s f22, f28, f26, f20, rdn # perform operation
fnmadd.s f22, f28, f26, f20, rmm # perform operation
fnmadd.s f22, f28, f26, f20, rne # perform operation
fnmadd.s f22, f28, f26, f20, rtz # perform operation
fnmadd.s f22, f28, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x2850645899125ef7 # load x3 with value 0x2850645899125ef7
sw x3, 0(x2) # store 0x2850645899125ef7 in memory
flw f20, 0(x2) # load 0x2850645899125ef7 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fnmadd.s f7, f22, f20, f12, dyn # perform operation
fnmadd.s f7, f22, f20, f12, rdn # perform operation
fnmadd.s f7, f22, f20, f12, rmm # perform operation
fnmadd.s f7, f22, f20, f12, rne # perform operation
fnmadd.s f7, f22, f20, f12, rtz # perform operation
fnmadd.s f7, f22, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x794a6636f1fb4bf3 # load x3 with value 0x794a6636f1fb4bf3
sw x3, 0(x2) # store 0x794a6636f1fb4bf3 in memory
flw f30, 0(x2) # load 0x794a6636f1fb4bf3 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmadd.s f27, f16, f30, f23, dyn # perform operation
fnmadd.s f27, f16, f30, f23, rdn # perform operation
fnmadd.s f27, f16, f30, f23, rmm # perform operation
fnmadd.s f27, f16, f30, f23, rne # perform operation
fnmadd.s f27, f16, f30, f23, rtz # perform operation
fnmadd.s f27, f16, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xbb65d6c46e97c307 # load x3 with value 0xbb65d6c46e97c307
sw x3, 0(x2) # store 0xbb65d6c46e97c307 in memory
flw f5, 0(x2) # load 0xbb65d6c46e97c307 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmadd.s f23, f25, f5, f15, dyn # perform operation
fnmadd.s f23, f25, f5, f15, rdn # perform operation
fnmadd.s f23, f25, f5, f15, rmm # perform operation
fnmadd.s f23, f25, f5, f15, rne # perform operation
fnmadd.s f23, f25, f5, f15, rtz # perform operation
fnmadd.s f23, f25, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x7f230ab73450cdc9 # load x3 with value 0x7f230ab73450cdc9
sw x3, 0(x2) # store 0x7f230ab73450cdc9 in memory
flw f7, 0(x2) # load 0x7f230ab73450cdc9 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmadd.s f22, f10, f7, f1, dyn # perform operation
fnmadd.s f22, f10, f7, f1, rdn # perform operation
fnmadd.s f22, f10, f7, f1, rmm # perform operation
fnmadd.s f22, f10, f7, f1, rne # perform operation
fnmadd.s f22, f10, f7, f1, rtz # perform operation
fnmadd.s f22, f10, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xe4e326a63de03f05 # load x3 with value 0xe4e326a63de03f05
sw x3, 0(x2) # store 0xe4e326a63de03f05 in memory
flw f21, 0(x2) # load 0xe4e326a63de03f05 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmadd.s f9, f6, f21, f19, dyn # perform operation
fnmadd.s f9, f6, f21, f19, rdn # perform operation
fnmadd.s f9, f6, f21, f19, rmm # perform operation
fnmadd.s f9, f6, f21, f19, rne # perform operation
fnmadd.s f9, f6, f21, f19, rtz # perform operation
fnmadd.s f9, f6, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f6, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xa346f378131273ff # load x3 with value 0xa346f378131273ff
sw x3, 0(x2) # store 0xa346f378131273ff in memory
flw f5, 0(x2) # load 0xa346f378131273ff from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f27, f18, f5, f3, dyn # perform operation
fnmadd.s f27, f18, f5, f3, rdn # perform operation
fnmadd.s f27, f18, f5, f3, rmm # perform operation
fnmadd.s f27, f18, f5, f3, rne # perform operation
fnmadd.s f27, f18, f5, f3, rtz # perform operation
fnmadd.s f27, f18, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x9252c791e4abbdbe # load x3 with value 0x9252c791e4abbdbe
sw x3, 0(x2) # store 0x9252c791e4abbdbe in memory
flw f28, 0(x2) # load 0x9252c791e4abbdbe from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f21, f1, f28, f9, dyn # perform operation
fnmadd.s f21, f1, f28, f9, rdn # perform operation
fnmadd.s f21, f1, f28, f9, rmm # perform operation
fnmadd.s f21, f1, f28, f9, rne # perform operation
fnmadd.s f21, f1, f28, f9, rtz # perform operation
fnmadd.s f21, f1, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f1, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f1, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x68810b3a28efa514 # load x3 with value 0x68810b3a28efa514
sw x3, 0(x2) # store 0x68810b3a28efa514 in memory
flw f31, 0(x2) # load 0x68810b3a28efa514 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f2, f12, f31, f9, dyn # perform operation
fnmadd.s f2, f12, f31, f9, rdn # perform operation
fnmadd.s f2, f12, f31, f9, rmm # perform operation
fnmadd.s f2, f12, f31, f9, rne # perform operation
fnmadd.s f2, f12, f31, f9, rtz # perform operation
fnmadd.s f2, f12, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xf814a98b85bda2b6 # load x3 with value 0xf814a98b85bda2b6
sw x3, 0(x2) # store 0xf814a98b85bda2b6 in memory
flw f29, 0(x2) # load 0xf814a98b85bda2b6 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmadd.s f17, f9, f29, f2, dyn # perform operation
fnmadd.s f17, f9, f29, f2, rdn # perform operation
fnmadd.s f17, f9, f29, f2, rmm # perform operation
fnmadd.s f17, f9, f29, f2, rne # perform operation
fnmadd.s f17, f9, f29, f2, rtz # perform operation
fnmadd.s f17, f9, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xd8ad3cd5c006955d # load x3 with value 0xd8ad3cd5c006955d
sw x3, 0(x2) # store 0xd8ad3cd5c006955d in memory
flw f5, 0(x2) # load 0xd8ad3cd5c006955d from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmadd.s f18, f26, f5, f13, dyn # perform operation
fnmadd.s f18, f26, f5, f13, rdn # perform operation
fnmadd.s f18, f26, f5, f13, rmm # perform operation
fnmadd.s f18, f26, f5, f13, rne # perform operation
fnmadd.s f18, f26, f5, f13, rtz # perform operation
fnmadd.s f18, f26, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xf13ec9d65a5345d6 # load x3 with value 0xf13ec9d65a5345d6
sw x3, 0(x2) # store 0xf13ec9d65a5345d6 in memory
flw f3, 0(x2) # load 0xf13ec9d65a5345d6 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmadd.s f23, f19, f3, f12, dyn # perform operation
fnmadd.s f23, f19, f3, f12, rdn # perform operation
fnmadd.s f23, f19, f3, f12, rmm # perform operation
fnmadd.s f23, f19, f3, f12, rne # perform operation
fnmadd.s f23, f19, f3, f12, rtz # perform operation
fnmadd.s f23, f19, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xa173a0829616e8af # load x3 with value 0xa173a0829616e8af
sw x3, 0(x2) # store 0xa173a0829616e8af in memory
flw f6, 0(x2) # load 0xa173a0829616e8af from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.s f15, f14, f6, f23, dyn # perform operation
fnmadd.s f15, f14, f6, f23, rdn # perform operation
fnmadd.s f15, f14, f6, f23, rmm # perform operation
fnmadd.s f15, f14, f6, f23, rne # perform operation
fnmadd.s f15, f14, f6, f23, rtz # perform operation
fnmadd.s f15, f14, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x8af1c9459a79a85f # load x3 with value 0x8af1c9459a79a85f
sw x3, 0(x2) # store 0x8af1c9459a79a85f in memory
flw f18, 0(x2) # load 0x8af1c9459a79a85f from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fnmadd.s f28, f27, f18, f16, dyn # perform operation
fnmadd.s f28, f27, f18, f16, rdn # perform operation
fnmadd.s f28, f27, f18, f16, rmm # perform operation
fnmadd.s f28, f27, f18, f16, rne # perform operation
fnmadd.s f28, f27, f18, f16, rtz # perform operation
fnmadd.s f28, f27, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x21f52f57a24c09ea # load x3 with value 0x21f52f57a24c09ea
sw x3, 0(x2) # store 0x21f52f57a24c09ea in memory
flw f22, 0(x2) # load 0x21f52f57a24c09ea from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f2, f10, f22, f30, dyn # perform operation
fnmadd.s f2, f10, f22, f30, rdn # perform operation
fnmadd.s f2, f10, f22, f30, rmm # perform operation
fnmadd.s f2, f10, f22, f30, rne # perform operation
fnmadd.s f2, f10, f22, f30, rtz # perform operation
fnmadd.s f2, f10, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x2dffff758cd7dc72 # load x3 with value 0x2dffff758cd7dc72
sw x3, 0(x2) # store 0x2dffff758cd7dc72 in memory
flw f20, 0(x2) # load 0x2dffff758cd7dc72 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmadd.s f2, f17, f20, f6, dyn # perform operation
fnmadd.s f2, f17, f20, f6, rdn # perform operation
fnmadd.s f2, f17, f20, f6, rmm # perform operation
fnmadd.s f2, f17, f20, f6, rne # perform operation
fnmadd.s f2, f17, f20, f6, rtz # perform operation
fnmadd.s f2, f17, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f20, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xcdbe5a968572b3ba # load x3 with value 0xcdbe5a968572b3ba
sw x3, 0(x2) # store 0xcdbe5a968572b3ba in memory
flw f28, 0(x2) # load 0xcdbe5a968572b3ba from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmadd.s f17, f2, f28, f29, dyn # perform operation
fnmadd.s f17, f2, f28, f29, rdn # perform operation
fnmadd.s f17, f2, f28, f29, rmm # perform operation
fnmadd.s f17, f2, f28, f29, rne # perform operation
fnmadd.s f17, f2, f28, f29, rtz # perform operation
fnmadd.s f17, f2, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xfd7244edcc18f778 # load x3 with value 0xfd7244edcc18f778
sw x3, 0(x2) # store 0xfd7244edcc18f778 in memory
flw f11, 0(x2) # load 0xfd7244edcc18f778 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fnmadd.s f21, f22, f11, f2, dyn # perform operation
fnmadd.s f21, f22, f11, f2, rdn # perform operation
fnmadd.s f21, f22, f11, f2, rmm # perform operation
fnmadd.s f21, f22, f11, f2, rne # perform operation
fnmadd.s f21, f22, f11, f2, rtz # perform operation
fnmadd.s f21, f22, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x9d2de32c4f7c7936 # load x3 with value 0x9d2de32c4f7c7936
sw x3, 0(x2) # store 0x9d2de32c4f7c7936 in memory
flw f30, 0(x2) # load 0x9d2de32c4f7c7936 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fnmadd.s f3, f9, f30, f29, dyn # perform operation
fnmadd.s f3, f9, f30, f29, rdn # perform operation
fnmadd.s f3, f9, f30, f29, rmm # perform operation
fnmadd.s f3, f9, f30, f29, rne # perform operation
fnmadd.s f3, f9, f30, f29, rtz # perform operation
fnmadd.s f3, f9, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xa205e1df0d7c9b26 # load x3 with value 0xa205e1df0d7c9b26
sw x3, 0(x2) # store 0xa205e1df0d7c9b26 in memory
flw f28, 0(x2) # load 0xa205e1df0d7c9b26 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmadd.s f29, f15, f28, f27, dyn # perform operation
fnmadd.s f29, f15, f28, f27, rdn # perform operation
fnmadd.s f29, f15, f28, f27, rmm # perform operation
fnmadd.s f29, f15, f28, f27, rne # perform operation
fnmadd.s f29, f15, f28, f27, rtz # perform operation
fnmadd.s f29, f15, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xcf2da31de894a9e0 # load x3 with value 0xcf2da31de894a9e0
sw x3, 0(x2) # store 0xcf2da31de894a9e0 in memory
flw f3, 0(x2) # load 0xcf2da31de894a9e0 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f26, f27, f3, f1, dyn # perform operation
fnmadd.s f26, f27, f3, f1, rdn # perform operation
fnmadd.s f26, f27, f3, f1, rmm # perform operation
fnmadd.s f26, f27, f3, f1, rne # perform operation
fnmadd.s f26, f27, f3, f1, rtz # perform operation
fnmadd.s f26, f27, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xf0e42b2c78d666ae # load x3 with value 0xf0e42b2c78d666ae
sw x3, 0(x2) # store 0xf0e42b2c78d666ae in memory
flw f19, 0(x2) # load 0xf0e42b2c78d666ae from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fnmadd.s f3, f5, f19, f9, dyn # perform operation
fnmadd.s f3, f5, f19, f9, rdn # perform operation
fnmadd.s f3, f5, f19, f9, rmm # perform operation
fnmadd.s f3, f5, f19, f9, rne # perform operation
fnmadd.s f3, f5, f19, f9, rtz # perform operation
fnmadd.s f3, f5, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x86497bd82de2d906 # load x3 with value 0x86497bd82de2d906
sw x3, 0(x2) # store 0x86497bd82de2d906 in memory
flw f24, 0(x2) # load 0x86497bd82de2d906 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f19, f11, f24, f1, dyn # perform operation
fnmadd.s f19, f11, f24, f1, rdn # perform operation
fnmadd.s f19, f11, f24, f1, rmm # perform operation
fnmadd.s f19, f11, f24, f1, rne # perform operation
fnmadd.s f19, f11, f24, f1, rtz # perform operation
fnmadd.s f19, f11, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xd4f5f67083be4567 # load x3 with value 0xd4f5f67083be4567
sw x3, 0(x2) # store 0xd4f5f67083be4567 in memory
flw f8, 0(x2) # load 0xd4f5f67083be4567 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmadd.s f5, f14, f8, f31, dyn # perform operation
fnmadd.s f5, f14, f8, f31, rdn # perform operation
fnmadd.s f5, f14, f8, f31, rmm # perform operation
fnmadd.s f5, f14, f8, f31, rne # perform operation
fnmadd.s f5, f14, f8, f31, rtz # perform operation
fnmadd.s f5, f14, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x779dbf6260472efd # load x3 with value 0x779dbf6260472efd
sw x3, 0(x2) # store 0x779dbf6260472efd in memory
flw f16, 0(x2) # load 0x779dbf6260472efd from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.s f18, f25, f16, f5, dyn # perform operation
fnmadd.s f18, f25, f16, f5, rdn # perform operation
fnmadd.s f18, f25, f16, f5, rmm # perform operation
fnmadd.s f18, f25, f16, f5, rne # perform operation
fnmadd.s f18, f25, f16, f5, rtz # perform operation
fnmadd.s f18, f25, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f25, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x3940a3c708346e84 # load x3 with value 0x3940a3c708346e84
sw x3, 0(x2) # store 0x3940a3c708346e84 in memory
flw f26, 0(x2) # load 0x3940a3c708346e84 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fnmadd.s f21, f7, f26, f11, dyn # perform operation
fnmadd.s f21, f7, f26, f11, rdn # perform operation
fnmadd.s f21, f7, f26, f11, rmm # perform operation
fnmadd.s f21, f7, f26, f11, rne # perform operation
fnmadd.s f21, f7, f26, f11, rtz # perform operation
fnmadd.s f21, f7, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f7, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xa35943f8b9f8192b # load x3 with value 0xa35943f8b9f8192b
sw x3, 0(x2) # store 0xa35943f8b9f8192b in memory
flw f25, 0(x2) # load 0xa35943f8b9f8192b from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f8, f18, f25, f9, dyn # perform operation
fnmadd.s f8, f18, f25, f9, rdn # perform operation
fnmadd.s f8, f18, f25, f9, rmm # perform operation
fnmadd.s f8, f18, f25, f9, rne # perform operation
fnmadd.s f8, f18, f25, f9, rtz # perform operation
fnmadd.s f8, f18, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x6b48ce0c429aef63 # load x3 with value 0x6b48ce0c429aef63
sw x3, 0(x2) # store 0x6b48ce0c429aef63 in memory
flw f11, 0(x2) # load 0x6b48ce0c429aef63 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f16, f9, f11, f2, dyn # perform operation
fnmadd.s f16, f9, f11, f2, rdn # perform operation
fnmadd.s f16, f9, f11, f2, rmm # perform operation
fnmadd.s f16, f9, f11, f2, rne # perform operation
fnmadd.s f16, f9, f11, f2, rtz # perform operation
fnmadd.s f16, f9, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x44691c7dcde512d5 # load x3 with value 0x44691c7dcde512d5
sw x3, 0(x2) # store 0x44691c7dcde512d5 in memory
flw f25, 0(x2) # load 0x44691c7dcde512d5 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmadd.s f2, f3, f25, f12, dyn # perform operation
fnmadd.s f2, f3, f25, f12, rdn # perform operation
fnmadd.s f2, f3, f25, f12, rmm # perform operation
fnmadd.s f2, f3, f25, f12, rne # perform operation
fnmadd.s f2, f3, f25, f12, rtz # perform operation
fnmadd.s f2, f3, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xcf0f337d66a33100 # load x3 with value 0xcf0f337d66a33100
sw x3, 0(x2) # store 0xcf0f337d66a33100 in memory
flw f18, 0(x2) # load 0xcf0f337d66a33100 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmadd.s f1, f9, f18, f10, dyn # perform operation
fnmadd.s f1, f9, f18, f10, rdn # perform operation
fnmadd.s f1, f9, f18, f10, rmm # perform operation
fnmadd.s f1, f9, f18, f10, rne # perform operation
fnmadd.s f1, f9, f18, f10, rtz # perform operation
fnmadd.s f1, f9, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x70803273dd188fac # load x3 with value 0x70803273dd188fac
sw x3, 0(x2) # store 0x70803273dd188fac in memory
flw f10, 0(x2) # load 0x70803273dd188fac from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f23, f27, f10, f30, dyn # perform operation
fnmadd.s f23, f27, f10, f30, rdn # perform operation
fnmadd.s f23, f27, f10, f30, rmm # perform operation
fnmadd.s f23, f27, f10, f30, rne # perform operation
fnmadd.s f23, f27, f10, f30, rtz # perform operation
fnmadd.s f23, f27, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x25d4b5b47e87aef8 # load x3 with value 0x25d4b5b47e87aef8
sw x3, 0(x2) # store 0x25d4b5b47e87aef8 in memory
flw f13, 0(x2) # load 0x25d4b5b47e87aef8 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f8, f5, f13, f19, dyn # perform operation
fnmadd.s f8, f5, f13, f19, rdn # perform operation
fnmadd.s f8, f5, f13, f19, rmm # perform operation
fnmadd.s f8, f5, f13, f19, rne # perform operation
fnmadd.s f8, f5, f13, f19, rtz # perform operation
fnmadd.s f8, f5, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x1cc2fb9cf02a69a4 # load x3 with value 0x1cc2fb9cf02a69a4
sw x3, 0(x2) # store 0x1cc2fb9cf02a69a4 in memory
flw f22, 0(x2) # load 0x1cc2fb9cf02a69a4 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmadd.s f18, f15, f22, f28, dyn # perform operation
fnmadd.s f18, f15, f22, f28, rdn # perform operation
fnmadd.s f18, f15, f22, f28, rmm # perform operation
fnmadd.s f18, f15, f22, f28, rne # perform operation
fnmadd.s f18, f15, f22, f28, rtz # perform operation
fnmadd.s f18, f15, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f15, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f15, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f15, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f15, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f15, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x1f147759ee26057e # load x3 with value 0x1f147759ee26057e
sw x3, 0(x2) # store 0x1f147759ee26057e in memory
flw f29, 0(x2) # load 0x1f147759ee26057e from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmadd.s f18, f7, f29, f30, dyn # perform operation
fnmadd.s f18, f7, f29, f30, rdn # perform operation
fnmadd.s f18, f7, f29, f30, rmm # perform operation
fnmadd.s f18, f7, f29, f30, rne # perform operation
fnmadd.s f18, f7, f29, f30, rtz # perform operation
fnmadd.s f18, f7, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f7, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xf125297475549474 # load x3 with value 0xf125297475549474
sw x3, 0(x2) # store 0xf125297475549474 in memory
flw f28, 0(x2) # load 0xf125297475549474 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmadd.s f1, f14, f28, f7, dyn # perform operation
fnmadd.s f1, f14, f28, f7, rdn # perform operation
fnmadd.s f1, f14, f28, f7, rmm # perform operation
fnmadd.s f1, f14, f28, f7, rne # perform operation
fnmadd.s f1, f14, f28, f7, rtz # perform operation
fnmadd.s f1, f14, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x9c7824943984d8c6 # load x3 with value 0x9c7824943984d8c6
sw x3, 0(x2) # store 0x9c7824943984d8c6 in memory
flw f5, 0(x2) # load 0x9c7824943984d8c6 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmadd.s f21, f12, f5, f16, dyn # perform operation
fnmadd.s f21, f12, f5, f16, rdn # perform operation
fnmadd.s f21, f12, f5, f16, rmm # perform operation
fnmadd.s f21, f12, f5, f16, rne # perform operation
fnmadd.s f21, f12, f5, f16, rtz # perform operation
fnmadd.s f21, f12, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f12, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xb6f907c2bf9c687e # load x3 with value 0xb6f907c2bf9c687e
sw x3, 0(x2) # store 0xb6f907c2bf9c687e in memory
flw f1, 0(x2) # load 0xb6f907c2bf9c687e from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f27, f14, f1, f30, dyn # perform operation
fnmadd.s f27, f14, f1, f30, rdn # perform operation
fnmadd.s f27, f14, f1, f30, rmm # perform operation
fnmadd.s f27, f14, f1, f30, rne # perform operation
fnmadd.s f27, f14, f1, f30, rtz # perform operation
fnmadd.s f27, f14, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xc844dbf9162a8dfb # load x3 with value 0xc844dbf9162a8dfb
sw x3, 0(x2) # store 0xc844dbf9162a8dfb in memory
flw f31, 0(x2) # load 0xc844dbf9162a8dfb from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fnmadd.s f22, f7, f31, f26, dyn # perform operation
fnmadd.s f22, f7, f31, f26, rdn # perform operation
fnmadd.s f22, f7, f31, f26, rmm # perform operation
fnmadd.s f22, f7, f31, f26, rne # perform operation
fnmadd.s f22, f7, f31, f26, rtz # perform operation
fnmadd.s f22, f7, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x356446fef576951a # load x3 with value 0x356446fef576951a
sw x3, 0(x2) # store 0x356446fef576951a in memory
flw f16, 0(x2) # load 0x356446fef576951a from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmadd.s f27, f6, f16, f5, dyn # perform operation
fnmadd.s f27, f6, f16, f5, rdn # perform operation
fnmadd.s f27, f6, f16, f5, rmm # perform operation
fnmadd.s f27, f6, f16, f5, rne # perform operation
fnmadd.s f27, f6, f16, f5, rtz # perform operation
fnmadd.s f27, f6, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x6d1fda4d098f8da0 # load x3 with value 0x6d1fda4d098f8da0
sw x3, 0(x2) # store 0x6d1fda4d098f8da0 in memory
flw f11, 0(x2) # load 0x6d1fda4d098f8da0 from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmadd.s f27, f15, f11, f31, dyn # perform operation
fnmadd.s f27, f15, f11, f31, rdn # perform operation
fnmadd.s f27, f15, f11, f31, rmm # perform operation
fnmadd.s f27, f15, f11, f31, rne # perform operation
fnmadd.s f27, f15, f11, f31, rtz # perform operation
fnmadd.s f27, f15, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xd62985dcabd3145b # load x3 with value 0xd62985dcabd3145b
sw x3, 0(x2) # store 0xd62985dcabd3145b in memory
flw f26, 0(x2) # load 0xd62985dcabd3145b from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.s f9, f24, f26, f17, dyn # perform operation
fnmadd.s f9, f24, f26, f17, rdn # perform operation
fnmadd.s f9, f24, f26, f17, rmm # perform operation
fnmadd.s f9, f24, f26, f17, rne # perform operation
fnmadd.s f9, f24, f26, f17, rtz # perform operation
fnmadd.s f9, f24, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xd5a70677908031b # load x3 with value 0xd5a70677908031b
sw x3, 0(x2) # store 0xd5a70677908031b in memory
flw f29, 0(x2) # load 0xd5a70677908031b from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f28, f31, f29, f18, dyn # perform operation
fnmadd.s f28, f31, f29, f18, rdn # perform operation
fnmadd.s f28, f31, f29, f18, rmm # perform operation
fnmadd.s f28, f31, f29, f18, rne # perform operation
fnmadd.s f28, f31, f29, f18, rtz # perform operation
fnmadd.s f28, f31, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f31, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x97aed744eb86603f # load x3 with value 0x97aed744eb86603f
sw x3, 0(x2) # store 0x97aed744eb86603f in memory
flw f3, 0(x2) # load 0x97aed744eb86603f from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmadd.s f28, f31, f3, f1, dyn # perform operation
fnmadd.s f28, f31, f3, f1, rdn # perform operation
fnmadd.s f28, f31, f3, f1, rmm # perform operation
fnmadd.s f28, f31, f3, f1, rne # perform operation
fnmadd.s f28, f31, f3, f1, rtz # perform operation
fnmadd.s f28, f31, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f31, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xb2c074e6566bc4ce # load x3 with value 0xb2c074e6566bc4ce
sw x3, 0(x2) # store 0xb2c074e6566bc4ce in memory
flw f19, 0(x2) # load 0xb2c074e6566bc4ce from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f26, f10, f19, f11, dyn # perform operation
fnmadd.s f26, f10, f19, f11, rdn # perform operation
fnmadd.s f26, f10, f19, f11, rmm # perform operation
fnmadd.s f26, f10, f19, f11, rne # perform operation
fnmadd.s f26, f10, f19, f11, rtz # perform operation
fnmadd.s f26, f10, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xa2726fcb2b9b68c3 # load x3 with value 0xa2726fcb2b9b68c3
sw x3, 0(x2) # store 0xa2726fcb2b9b68c3 in memory
flw f16, 0(x2) # load 0xa2726fcb2b9b68c3 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f23, f15, f16, f24, dyn # perform operation
fnmadd.s f23, f15, f16, f24, rdn # perform operation
fnmadd.s f23, f15, f16, f24, rmm # perform operation
fnmadd.s f23, f15, f16, f24, rne # perform operation
fnmadd.s f23, f15, f16, f24, rtz # perform operation
fnmadd.s f23, f15, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xfb53b16f45bb30e2 # load x3 with value 0xfb53b16f45bb30e2
sw x3, 0(x2) # store 0xfb53b16f45bb30e2 in memory
flw f27, 0(x2) # load 0xfb53b16f45bb30e2 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f9, f31, f27, f8, dyn # perform operation
fnmadd.s f9, f31, f27, f8, rdn # perform operation
fnmadd.s f9, f31, f27, f8, rmm # perform operation
fnmadd.s f9, f31, f27, f8, rne # perform operation
fnmadd.s f9, f31, f27, f8, rtz # perform operation
fnmadd.s f9, f31, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f31, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xb2de4bc79d50e79c # load x3 with value 0xb2de4bc79d50e79c
sw x3, 0(x2) # store 0xb2de4bc79d50e79c in memory
flw f25, 0(x2) # load 0xb2de4bc79d50e79c from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmadd.s f27, f13, f25, f5, dyn # perform operation
fnmadd.s f27, f13, f25, f5, rdn # perform operation
fnmadd.s f27, f13, f25, f5, rmm # perform operation
fnmadd.s f27, f13, f25, f5, rne # perform operation
fnmadd.s f27, f13, f25, f5, rtz # perform operation
fnmadd.s f27, f13, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xaa5088cd0e1f2ab2 # load x3 with value 0xaa5088cd0e1f2ab2
sw x3, 0(x2) # store 0xaa5088cd0e1f2ab2 in memory
flw f7, 0(x2) # load 0xaa5088cd0e1f2ab2 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fnmadd.s f2, f30, f7, f16, dyn # perform operation
fnmadd.s f2, f30, f7, f16, rdn # perform operation
fnmadd.s f2, f30, f7, f16, rmm # perform operation
fnmadd.s f2, f30, f7, f16, rne # perform operation
fnmadd.s f2, f30, f7, f16, rtz # perform operation
fnmadd.s f2, f30, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0xab06a18bfc089de5 # load x3 with value 0xab06a18bfc089de5
sw x3, 0(x2) # store 0xab06a18bfc089de5 in memory
flw f22, 0(x2) # load 0xab06a18bfc089de5 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmadd.s f20, f1, f22, f12, dyn # perform operation
fnmadd.s f20, f1, f22, f12, rdn # perform operation
fnmadd.s f20, f1, f22, f12, rmm # perform operation
fnmadd.s f20, f1, f22, f12, rne # perform operation
fnmadd.s f20, f1, f22, f12, rtz # perform operation
fnmadd.s f20, f1, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f1, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x697e3009df55fea3 # load x3 with value 0x697e3009df55fea3
sw x3, 0(x2) # store 0x697e3009df55fea3 in memory
flw f23, 0(x2) # load 0x697e3009df55fea3 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fnmadd.s f11, f16, f23, f9, dyn # perform operation
fnmadd.s f11, f16, f23, f9, rdn # perform operation
fnmadd.s f11, f16, f23, f9, rmm # perform operation
fnmadd.s f11, f16, f23, f9, rne # perform operation
fnmadd.s f11, f16, f23, f9, rtz # perform operation
fnmadd.s f11, f16, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xe6bf9d000f635b21 # load x3 with value 0xe6bf9d000f635b21
sw x3, 0(x2) # store 0xe6bf9d000f635b21 in memory
flw f30, 0(x2) # load 0xe6bf9d000f635b21 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fnmadd.s f10, f8, f30, f29, dyn # perform operation
fnmadd.s f10, f8, f30, f29, rdn # perform operation
fnmadd.s f10, f8, f30, f29, rmm # perform operation
fnmadd.s f10, f8, f30, f29, rne # perform operation
fnmadd.s f10, f8, f30, f29, rtz # perform operation
fnmadd.s f10, f8, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f8, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xdcce49a2bcb28f73 # load x3 with value 0xdcce49a2bcb28f73
sw x3, 0(x2) # store 0xdcce49a2bcb28f73 in memory
flw f27, 0(x2) # load 0xdcce49a2bcb28f73 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f22, f9, f27, f19, dyn # perform operation
fnmadd.s f22, f9, f27, f19, rdn # perform operation
fnmadd.s f22, f9, f27, f19, rmm # perform operation
fnmadd.s f22, f9, f27, f19, rne # perform operation
fnmadd.s f22, f9, f27, f19, rtz # perform operation
fnmadd.s f22, f9, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f9, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x281a548f84b5eb80 # load x3 with value 0x281a548f84b5eb80
sw x3, 0(x2) # store 0x281a548f84b5eb80 in memory
flw f17, 0(x2) # load 0x281a548f84b5eb80 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.s f5, f26, f17, f6, dyn # perform operation
fnmadd.s f5, f26, f17, f6, rdn # perform operation
fnmadd.s f5, f26, f17, f6, rmm # perform operation
fnmadd.s f5, f26, f17, f6, rne # perform operation
fnmadd.s f5, f26, f17, f6, rtz # perform operation
fnmadd.s f5, f26, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f26, f17, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x965328b96899c8b # load x3 with value 0x965328b96899c8b
sw x3, 0(x2) # store 0x965328b96899c8b in memory
flw f31, 0(x2) # load 0x965328b96899c8b from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmadd.s f27, f25, f31, f6, dyn # perform operation
fnmadd.s f27, f25, f31, f6, rdn # perform operation
fnmadd.s f27, f25, f31, f6, rmm # perform operation
fnmadd.s f27, f25, f31, f6, rne # perform operation
fnmadd.s f27, f25, f31, f6, rtz # perform operation
fnmadd.s f27, f25, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x65a52c807a840671 # load x3 with value 0x65a52c807a840671
sw x3, 0(x2) # store 0x65a52c807a840671 in memory
flw f24, 0(x2) # load 0x65a52c807a840671 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmadd.s f21, f22, f24, f17, dyn # perform operation
fnmadd.s f21, f22, f24, f17, rdn # perform operation
fnmadd.s f21, f22, f24, f17, rmm # perform operation
fnmadd.s f21, f22, f24, f17, rne # perform operation
fnmadd.s f21, f22, f24, f17, rtz # perform operation
fnmadd.s f21, f22, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f24, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x70065e668bd4290 # load x3 with value 0x70065e668bd4290
sw x3, 0(x2) # store 0x70065e668bd4290 in memory
flw f25, 0(x2) # load 0x70065e668bd4290 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f5, f12, f25, f29, dyn # perform operation
fnmadd.s f5, f12, f25, f29, rdn # perform operation
fnmadd.s f5, f12, f25, f29, rmm # perform operation
fnmadd.s f5, f12, f25, f29, rne # perform operation
fnmadd.s f5, f12, f25, f29, rtz # perform operation
fnmadd.s f5, f12, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x154181a003b16bf1 # load x3 with value 0x154181a003b16bf1
sw x3, 0(x2) # store 0x154181a003b16bf1 in memory
flw f9, 0(x2) # load 0x154181a003b16bf1 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmadd.s f17, f24, f9, f13, dyn # perform operation
fnmadd.s f17, f24, f9, f13, rdn # perform operation
fnmadd.s f17, f24, f9, f13, rmm # perform operation
fnmadd.s f17, f24, f9, f13, rne # perform operation
fnmadd.s f17, f24, f9, f13, rtz # perform operation
fnmadd.s f17, f24, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f24, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f24, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x336173f841bff536 # load x3 with value 0x336173f841bff536
sw x3, 0(x2) # store 0x336173f841bff536 in memory
flw f16, 0(x2) # load 0x336173f841bff536 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmadd.s f15, f31, f16, f24, dyn # perform operation
fnmadd.s f15, f31, f16, f24, rdn # perform operation
fnmadd.s f15, f31, f16, f24, rmm # perform operation
fnmadd.s f15, f31, f16, f24, rne # perform operation
fnmadd.s f15, f31, f16, f24, rtz # perform operation
fnmadd.s f15, f31, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f31, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f31, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f31, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f31, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f31, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x843f64a6beaaa82b # load x3 with value 0x843f64a6beaaa82b
sw x3, 0(x2) # store 0x843f64a6beaaa82b in memory
flw f15, 0(x2) # load 0x843f64a6beaaa82b from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmadd.s f30, f2, f15, f27, dyn # perform operation
fnmadd.s f30, f2, f15, f27, rdn # perform operation
fnmadd.s f30, f2, f15, f27, rmm # perform operation
fnmadd.s f30, f2, f15, f27, rne # perform operation
fnmadd.s f30, f2, f15, f27, rtz # perform operation
fnmadd.s f30, f2, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f15, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x8823d398b15ea47c # load x3 with value 0x8823d398b15ea47c
sw x3, 0(x2) # store 0x8823d398b15ea47c in memory
flw f11, 0(x2) # load 0x8823d398b15ea47c from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f7, f13, f11, f30, dyn # perform operation
fnmadd.s f7, f13, f11, f30, rdn # perform operation
fnmadd.s f7, f13, f11, f30, rmm # perform operation
fnmadd.s f7, f13, f11, f30, rne # perform operation
fnmadd.s f7, f13, f11, f30, rtz # perform operation
fnmadd.s f7, f13, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f13, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x43cad0b3b732b3d9 # load x3 with value 0x43cad0b3b732b3d9
sw x3, 0(x2) # store 0x43cad0b3b732b3d9 in memory
flw f19, 0(x2) # load 0x43cad0b3b732b3d9 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmadd.s f28, f14, f19, f25, dyn # perform operation
fnmadd.s f28, f14, f19, f25, rdn # perform operation
fnmadd.s f28, f14, f19, f25, rmm # perform operation
fnmadd.s f28, f14, f19, f25, rne # perform operation
fnmadd.s f28, f14, f19, f25, rtz # perform operation
fnmadd.s f28, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xc3d33b2b69b048f4 # load x3 with value 0xc3d33b2b69b048f4
sw x3, 0(x2) # store 0xc3d33b2b69b048f4 in memory
flw f9, 0(x2) # load 0xc3d33b2b69b048f4 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmadd.s f24, f2, f9, f13, dyn # perform operation
fnmadd.s f24, f2, f9, f13, rdn # perform operation
fnmadd.s f24, f2, f9, f13, rmm # perform operation
fnmadd.s f24, f2, f9, f13, rne # perform operation
fnmadd.s f24, f2, f9, f13, rtz # perform operation
fnmadd.s f24, f2, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f2, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x3d08e5b5f319d759 # load x3 with value 0x3d08e5b5f319d759
sw x3, 0(x2) # store 0x3d08e5b5f319d759 in memory
flw f3, 0(x2) # load 0x3d08e5b5f319d759 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmadd.s f2, f30, f3, f11, dyn # perform operation
fnmadd.s f2, f30, f3, f11, rdn # perform operation
fnmadd.s f2, f30, f3, f11, rmm # perform operation
fnmadd.s f2, f30, f3, f11, rne # perform operation
fnmadd.s f2, f30, f3, f11, rtz # perform operation
fnmadd.s f2, f30, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x352b2bfc1958d47c # load x3 with value 0x352b2bfc1958d47c
sw x3, 0(x2) # store 0x352b2bfc1958d47c in memory
flw f3, 0(x2) # load 0x352b2bfc1958d47c from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmadd.s f10, f5, f3, f15, dyn # perform operation
fnmadd.s f10, f5, f3, f15, rdn # perform operation
fnmadd.s f10, f5, f3, f15, rmm # perform operation
fnmadd.s f10, f5, f3, f15, rne # perform operation
fnmadd.s f10, f5, f3, f15, rtz # perform operation
fnmadd.s f10, f5, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xebd549a67f45f525 # load x3 with value 0xebd549a67f45f525
sw x3, 0(x2) # store 0xebd549a67f45f525 in memory
flw f22, 0(x2) # load 0xebd549a67f45f525 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f18, f11, f22, f20, dyn # perform operation
fnmadd.s f18, f11, f22, f20, rdn # perform operation
fnmadd.s f18, f11, f22, f20, rmm # perform operation
fnmadd.s f18, f11, f22, f20, rne # perform operation
fnmadd.s f18, f11, f22, f20, rtz # perform operation
fnmadd.s f18, f11, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x9cae93d7f9f7d941 # load x3 with value 0x9cae93d7f9f7d941
sw x3, 0(x2) # store 0x9cae93d7f9f7d941 in memory
flw f18, 0(x2) # load 0x9cae93d7f9f7d941 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmadd.s f1, f11, f18, f27, dyn # perform operation
fnmadd.s f1, f11, f18, f27, rdn # perform operation
fnmadd.s f1, f11, f18, f27, rmm # perform operation
fnmadd.s f1, f11, f18, f27, rne # perform operation
fnmadd.s f1, f11, f18, f27, rtz # perform operation
fnmadd.s f1, f11, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x7a27989187f6369f # load x3 with value 0x7a27989187f6369f
sw x3, 0(x2) # store 0x7a27989187f6369f in memory
flw f19, 0(x2) # load 0x7a27989187f6369f from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmadd.s f29, f8, f19, f9, dyn # perform operation
fnmadd.s f29, f8, f19, f9, rdn # perform operation
fnmadd.s f29, f8, f19, f9, rmm # perform operation
fnmadd.s f29, f8, f19, f9, rne # perform operation
fnmadd.s f29, f8, f19, f9, rtz # perform operation
fnmadd.s f29, f8, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xb1df7f2b77d90435 # load x3 with value 0xb1df7f2b77d90435
sw x3, 0(x2) # store 0xb1df7f2b77d90435 in memory
flw f25, 0(x2) # load 0xb1df7f2b77d90435 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmadd.s f26, f7, f25, f19, dyn # perform operation
fnmadd.s f26, f7, f25, f19, rdn # perform operation
fnmadd.s f26, f7, f25, f19, rmm # perform operation
fnmadd.s f26, f7, f25, f19, rne # perform operation
fnmadd.s f26, f7, f25, f19, rtz # perform operation
fnmadd.s f26, f7, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x407fc231163ac94d # load x3 with value 0x407fc231163ac94d
sw x3, 0(x2) # store 0x407fc231163ac94d in memory
flw f11, 0(x2) # load 0x407fc231163ac94d from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.s f30, f3, f11, f8, dyn # perform operation
fnmadd.s f30, f3, f11, f8, rdn # perform operation
fnmadd.s f30, f3, f11, f8, rmm # perform operation
fnmadd.s f30, f3, f11, f8, rne # perform operation
fnmadd.s f30, f3, f11, f8, rtz # perform operation
fnmadd.s f30, f3, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f3, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x7e905acc3a676f94 # load x3 with value 0x7e905acc3a676f94
sw x3, 0(x2) # store 0x7e905acc3a676f94 in memory
flw f9, 0(x2) # load 0x7e905acc3a676f94 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f10, f16, f9, f30, dyn # perform operation
fnmadd.s f10, f16, f9, f30, rdn # perform operation
fnmadd.s f10, f16, f9, f30, rmm # perform operation
fnmadd.s f10, f16, f9, f30, rne # perform operation
fnmadd.s f10, f16, f9, f30, rtz # perform operation
fnmadd.s f10, f16, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f9, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x5ecef3bd02e83ade # load x3 with value 0x5ecef3bd02e83ade
sw x3, 0(x2) # store 0x5ecef3bd02e83ade in memory
flw f24, 0(x2) # load 0x5ecef3bd02e83ade from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmadd.s f28, f21, f24, f6, dyn # perform operation
fnmadd.s f28, f21, f24, f6, rdn # perform operation
fnmadd.s f28, f21, f24, f6, rmm # perform operation
fnmadd.s f28, f21, f24, f6, rne # perform operation
fnmadd.s f28, f21, f24, f6, rtz # perform operation
fnmadd.s f28, f21, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x70b2e145f1327e4b # load x3 with value 0x70b2e145f1327e4b
sw x3, 0(x2) # store 0x70b2e145f1327e4b in memory
flw f21, 0(x2) # load 0x70b2e145f1327e4b from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fnmadd.s f6, f23, f21, f2, dyn # perform operation
fnmadd.s f6, f23, f21, f2, rdn # perform operation
fnmadd.s f6, f23, f21, f2, rmm # perform operation
fnmadd.s f6, f23, f21, f2, rne # perform operation
fnmadd.s f6, f23, f21, f2, rtz # perform operation
fnmadd.s f6, f23, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x8152bbce448787b2 # load x3 with value 0x8152bbce448787b2
sw x3, 0(x2) # store 0x8152bbce448787b2 in memory
flw f9, 0(x2) # load 0x8152bbce448787b2 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f17, f15, f9, f25, dyn # perform operation
fnmadd.s f17, f15, f9, f25, rdn # perform operation
fnmadd.s f17, f15, f9, f25, rmm # perform operation
fnmadd.s f17, f15, f9, f25, rne # perform operation
fnmadd.s f17, f15, f9, f25, rtz # perform operation
fnmadd.s f17, f15, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f15, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x162fe18cd53adf5 # load x3 with value 0x162fe18cd53adf5
sw x3, 0(x2) # store 0x162fe18cd53adf5 in memory
flw f28, 0(x2) # load 0x162fe18cd53adf5 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f29, f9, f28, f21, dyn # perform operation
fnmadd.s f29, f9, f28, f21, rdn # perform operation
fnmadd.s f29, f9, f28, f21, rmm # perform operation
fnmadd.s f29, f9, f28, f21, rne # perform operation
fnmadd.s f29, f9, f28, f21, rtz # perform operation
fnmadd.s f29, f9, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x8e5ca187bcd811a8 # load x3 with value 0x8e5ca187bcd811a8
sw x3, 0(x2) # store 0x8e5ca187bcd811a8 in memory
flw f21, 0(x2) # load 0x8e5ca187bcd811a8 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fnmadd.s f13, f19, f21, f8, dyn # perform operation
fnmadd.s f13, f19, f21, f8, rdn # perform operation
fnmadd.s f13, f19, f21, f8, rmm # perform operation
fnmadd.s f13, f19, f21, f8, rne # perform operation
fnmadd.s f13, f19, f21, f8, rtz # perform operation
fnmadd.s f13, f19, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x11c57dd330091f21 # load x3 with value 0x11c57dd330091f21
sw x3, 0(x2) # store 0x11c57dd330091f21 in memory
flw f23, 0(x2) # load 0x11c57dd330091f21 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f24, f19, f23, f22, dyn # perform operation
fnmadd.s f24, f19, f23, f22, rdn # perform operation
fnmadd.s f24, f19, f23, f22, rmm # perform operation
fnmadd.s f24, f19, f23, f22, rne # perform operation
fnmadd.s f24, f19, f23, f22, rtz # perform operation
fnmadd.s f24, f19, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x206543da5594a25c # load x3 with value 0x206543da5594a25c
sw x3, 0(x2) # store 0x206543da5594a25c in memory
flw f19, 0(x2) # load 0x206543da5594a25c from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmadd.s f25, f16, f19, f29, dyn # perform operation
fnmadd.s f25, f16, f19, f29, rdn # perform operation
fnmadd.s f25, f16, f19, f29, rmm # perform operation
fnmadd.s f25, f16, f19, f29, rne # perform operation
fnmadd.s f25, f16, f19, f29, rtz # perform operation
fnmadd.s f25, f16, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f16, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f16, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f16, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f16, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f16, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x638aac8278ed5145 # load x3 with value 0x638aac8278ed5145
sw x3, 0(x2) # store 0x638aac8278ed5145 in memory
flw f20, 0(x2) # load 0x638aac8278ed5145 from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fnmadd.s f28, f5, f20, f9, dyn # perform operation
fnmadd.s f28, f5, f20, f9, rdn # perform operation
fnmadd.s f28, f5, f20, f9, rmm # perform operation
fnmadd.s f28, f5, f20, f9, rne # perform operation
fnmadd.s f28, f5, f20, f9, rtz # perform operation
fnmadd.s f28, f5, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f5, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xde487d0629dcf154 # load x3 with value 0xde487d0629dcf154
sw x3, 0(x2) # store 0xde487d0629dcf154 in memory
flw f28, 0(x2) # load 0xde487d0629dcf154 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmadd.s f22, f20, f28, f24, dyn # perform operation
fnmadd.s f22, f20, f28, f24, rdn # perform operation
fnmadd.s f22, f20, f28, f24, rmm # perform operation
fnmadd.s f22, f20, f28, f24, rne # perform operation
fnmadd.s f22, f20, f28, f24, rtz # perform operation
fnmadd.s f22, f20, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0xb9579f18d31b5183 # load x3 with value 0xb9579f18d31b5183
sw x3, 0(x2) # store 0xb9579f18d31b5183 in memory
flw f8, 0(x2) # load 0xb9579f18d31b5183 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmadd.s f26, f16, f8, f27, dyn # perform operation
fnmadd.s f26, f16, f8, f27, rdn # perform operation
fnmadd.s f26, f16, f8, f27, rmm # perform operation
fnmadd.s f26, f16, f8, f27, rne # perform operation
fnmadd.s f26, f16, f8, f27, rtz # perform operation
fnmadd.s f26, f16, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xc393bb22cebf6de7 # load x3 with value 0xc393bb22cebf6de7
sw x3, 0(x2) # store 0xc393bb22cebf6de7 in memory
flw f27, 0(x2) # load 0xc393bb22cebf6de7 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f19, f3, f27, f24, dyn # perform operation
fnmadd.s f19, f3, f27, f24, rdn # perform operation
fnmadd.s f19, f3, f27, f24, rmm # perform operation
fnmadd.s f19, f3, f27, f24, rne # perform operation
fnmadd.s f19, f3, f27, f24, rtz # perform operation
fnmadd.s f19, f3, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xf56e27f6d7260a87 # load x3 with value 0xf56e27f6d7260a87
sw x3, 0(x2) # store 0xf56e27f6d7260a87 in memory
flw f16, 0(x2) # load 0xf56e27f6d7260a87 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmadd.s f18, f6, f16, f7, dyn # perform operation
fnmadd.s f18, f6, f16, f7, rdn # perform operation
fnmadd.s f18, f6, f16, f7, rmm # perform operation
fnmadd.s f18, f6, f16, f7, rne # perform operation
fnmadd.s f18, f6, f16, f7, rtz # perform operation
fnmadd.s f18, f6, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f6, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x3ecfa75453e4e40e # load x3 with value 0x3ecfa75453e4e40e
sw x3, 0(x2) # store 0x3ecfa75453e4e40e in memory
flw f24, 0(x2) # load 0x3ecfa75453e4e40e from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f30, f3, f24, f7, dyn # perform operation
fnmadd.s f30, f3, f24, f7, rdn # perform operation
fnmadd.s f30, f3, f24, f7, rmm # perform operation
fnmadd.s f30, f3, f24, f7, rne # perform operation
fnmadd.s f30, f3, f24, f7, rtz # perform operation
fnmadd.s f30, f3, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f3, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xfcf7ad4295985170 # load x3 with value 0xfcf7ad4295985170
sw x3, 0(x2) # store 0xfcf7ad4295985170 in memory
flw f26, 0(x2) # load 0xfcf7ad4295985170 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmadd.s f15, f18, f26, f7, dyn # perform operation
fnmadd.s f15, f18, f26, f7, rdn # perform operation
fnmadd.s f15, f18, f26, f7, rmm # perform operation
fnmadd.s f15, f18, f26, f7, rne # perform operation
fnmadd.s f15, f18, f26, f7, rtz # perform operation
fnmadd.s f15, f18, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x332d954b97caf2c5 # load x3 with value 0x332d954b97caf2c5
sw x3, 0(x2) # store 0x332d954b97caf2c5 in memory
flw f27, 0(x2) # load 0x332d954b97caf2c5 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmadd.s f19, f30, f27, f21, dyn # perform operation
fnmadd.s f19, f30, f27, f21, rdn # perform operation
fnmadd.s f19, f30, f27, f21, rmm # perform operation
fnmadd.s f19, f30, f27, f21, rne # perform operation
fnmadd.s f19, f30, f27, f21, rtz # perform operation
fnmadd.s f19, f30, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xc15d61f082533837 # load x3 with value 0xc15d61f082533837
sw x3, 0(x2) # store 0xc15d61f082533837 in memory
flw f9, 0(x2) # load 0xc15d61f082533837 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fnmadd.s f25, f12, f9, f23, dyn # perform operation
fnmadd.s f25, f12, f9, f23, rdn # perform operation
fnmadd.s f25, f12, f9, f23, rmm # perform operation
fnmadd.s f25, f12, f9, f23, rne # perform operation
fnmadd.s f25, f12, f9, f23, rtz # perform operation
fnmadd.s f25, f12, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f9, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x42498e0ddee9bb36 # load x3 with value 0x42498e0ddee9bb36
sw x3, 0(x2) # store 0x42498e0ddee9bb36 in memory
flw f26, 0(x2) # load 0x42498e0ddee9bb36 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fnmadd.s f2, f28, f26, f17, dyn # perform operation
fnmadd.s f2, f28, f26, f17, rdn # perform operation
fnmadd.s f2, f28, f26, f17, rmm # perform operation
fnmadd.s f2, f28, f26, f17, rne # perform operation
fnmadd.s f2, f28, f26, f17, rtz # perform operation
fnmadd.s f2, f28, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x5297acf413efb306 # load x3 with value 0x5297acf413efb306
sw x3, 0(x2) # store 0x5297acf413efb306 in memory
flw f2, 0(x2) # load 0x5297acf413efb306 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmadd.s f30, f28, f2, f13, dyn # perform operation
fnmadd.s f30, f28, f2, f13, rdn # perform operation
fnmadd.s f30, f28, f2, f13, rmm # perform operation
fnmadd.s f30, f28, f2, f13, rne # perform operation
fnmadd.s f30, f28, f2, f13, rtz # perform operation
fnmadd.s f30, f28, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f28, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x28b5af23d1291d4e # load x3 with value 0x28b5af23d1291d4e
sw x3, 0(x2) # store 0x28b5af23d1291d4e in memory
flw f30, 0(x2) # load 0x28b5af23d1291d4e from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f8, f5, f30, f13, dyn # perform operation
fnmadd.s f8, f5, f30, f13, rdn # perform operation
fnmadd.s f8, f5, f30, f13, rmm # perform operation
fnmadd.s f8, f5, f30, f13, rne # perform operation
fnmadd.s f8, f5, f30, f13, rtz # perform operation
fnmadd.s f8, f5, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xe0ff827858d963f8 # load x3 with value 0xe0ff827858d963f8
sw x3, 0(x2) # store 0xe0ff827858d963f8 in memory
flw f27, 0(x2) # load 0xe0ff827858d963f8 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmadd.s f8, f10, f27, f13, dyn # perform operation
fnmadd.s f8, f10, f27, f13, rdn # perform operation
fnmadd.s f8, f10, f27, f13, rmm # perform operation
fnmadd.s f8, f10, f27, f13, rne # perform operation
fnmadd.s f8, f10, f27, f13, rtz # perform operation
fnmadd.s f8, f10, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x86a5defb78100a06 # load x3 with value 0x86a5defb78100a06
sw x3, 0(x2) # store 0x86a5defb78100a06 in memory
flw f29, 0(x2) # load 0x86a5defb78100a06 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f20, f30, f29, f28, dyn # perform operation
fnmadd.s f20, f30, f29, f28, rdn # perform operation
fnmadd.s f20, f30, f29, f28, rmm # perform operation
fnmadd.s f20, f30, f29, f28, rne # perform operation
fnmadd.s f20, f30, f29, f28, rtz # perform operation
fnmadd.s f20, f30, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x2f59145f1a87d39c # load x3 with value 0x2f59145f1a87d39c
sw x3, 0(x2) # store 0x2f59145f1a87d39c in memory
flw f30, 0(x2) # load 0x2f59145f1a87d39c from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmadd.s f8, f26, f30, f6, dyn # perform operation
fnmadd.s f8, f26, f30, f6, rdn # perform operation
fnmadd.s f8, f26, f30, f6, rmm # perform operation
fnmadd.s f8, f26, f30, f6, rne # perform operation
fnmadd.s f8, f26, f30, f6, rtz # perform operation
fnmadd.s f8, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f26, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x465b866815b59855 # load x3 with value 0x465b866815b59855
sw x3, 0(x2) # store 0x465b866815b59855 in memory
flw f6, 0(x2) # load 0x465b866815b59855 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmadd.s f9, f15, f6, f1, dyn # perform operation
fnmadd.s f9, f15, f6, f1, rdn # perform operation
fnmadd.s f9, f15, f6, f1, rmm # perform operation
fnmadd.s f9, f15, f6, f1, rne # perform operation
fnmadd.s f9, f15, f6, f1, rtz # perform operation
fnmadd.s f9, f15, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x2fb095d227de26d3 # load x3 with value 0x2fb095d227de26d3
sw x3, 0(x2) # store 0x2fb095d227de26d3 in memory
flw f30, 0(x2) # load 0x2fb095d227de26d3 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f15, f8, f30, f9, dyn # perform operation
fnmadd.s f15, f8, f30, f9, rdn # perform operation
fnmadd.s f15, f8, f30, f9, rmm # perform operation
fnmadd.s f15, f8, f30, f9, rne # perform operation
fnmadd.s f15, f8, f30, f9, rtz # perform operation
fnmadd.s f15, f8, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xffb0bb71f42114ea # load x3 with value 0xffb0bb71f42114ea
sw x3, 0(x2) # store 0xffb0bb71f42114ea in memory
flw f12, 0(x2) # load 0xffb0bb71f42114ea from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmadd.s f26, f11, f12, f28, dyn # perform operation
fnmadd.s f26, f11, f12, f28, rdn # perform operation
fnmadd.s f26, f11, f12, f28, rmm # perform operation
fnmadd.s f26, f11, f12, f28, rne # perform operation
fnmadd.s f26, f11, f12, f28, rtz # perform operation
fnmadd.s f26, f11, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f11, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x723d01b83ee1c127 # load x3 with value 0x723d01b83ee1c127
sw x3, 0(x2) # store 0x723d01b83ee1c127 in memory
flw f5, 0(x2) # load 0x723d01b83ee1c127 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmadd.s f21, f15, f5, f12, dyn # perform operation
fnmadd.s f21, f15, f5, f12, rdn # perform operation
fnmadd.s f21, f15, f5, f12, rmm # perform operation
fnmadd.s f21, f15, f5, f12, rne # perform operation
fnmadd.s f21, f15, f5, f12, rtz # perform operation
fnmadd.s f21, f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x858dfa4a94ab663a # load x3 with value 0x858dfa4a94ab663a
sw x3, 0(x2) # store 0x858dfa4a94ab663a in memory
flw f30, 0(x2) # load 0x858dfa4a94ab663a from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f15, f29, f30, f22, dyn # perform operation
fnmadd.s f15, f29, f30, f22, rdn # perform operation
fnmadd.s f15, f29, f30, f22, rmm # perform operation
fnmadd.s f15, f29, f30, f22, rne # perform operation
fnmadd.s f15, f29, f30, f22, rtz # perform operation
fnmadd.s f15, f29, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f30, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x1945fcdbd61f29e7 # load x3 with value 0x1945fcdbd61f29e7
sw x3, 0(x2) # store 0x1945fcdbd61f29e7 in memory
flw f8, 0(x2) # load 0x1945fcdbd61f29e7 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f1, f19, f8, f30, dyn # perform operation
fnmadd.s f1, f19, f8, f30, rdn # perform operation
fnmadd.s f1, f19, f8, f30, rmm # perform operation
fnmadd.s f1, f19, f8, f30, rne # perform operation
fnmadd.s f1, f19, f8, f30, rtz # perform operation
fnmadd.s f1, f19, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x3aa8cc69bfa34406 # load x3 with value 0x3aa8cc69bfa34406
sw x3, 0(x2) # store 0x3aa8cc69bfa34406 in memory
flw f2, 0(x2) # load 0x3aa8cc69bfa34406 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f30, f12, f2, f20, dyn # perform operation
fnmadd.s f30, f12, f2, f20, rdn # perform operation
fnmadd.s f30, f12, f2, f20, rmm # perform operation
fnmadd.s f30, f12, f2, f20, rne # perform operation
fnmadd.s f30, f12, f2, f20, rtz # perform operation
fnmadd.s f30, f12, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f2, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x97024e748c04108e # load x3 with value 0x97024e748c04108e
sw x3, 0(x2) # store 0x97024e748c04108e in memory
flw f23, 0(x2) # load 0x97024e748c04108e from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmadd.s f20, f31, f23, f16, dyn # perform operation
fnmadd.s f20, f31, f23, f16, rdn # perform operation
fnmadd.s f20, f31, f23, f16, rmm # perform operation
fnmadd.s f20, f31, f23, f16, rne # perform operation
fnmadd.s f20, f31, f23, f16, rtz # perform operation
fnmadd.s f20, f31, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x7fcbfc48277c6602 # load x3 with value 0x7fcbfc48277c6602
sw x3, 0(x2) # store 0x7fcbfc48277c6602 in memory
flw f15, 0(x2) # load 0x7fcbfc48277c6602 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmadd.s f11, f22, f15, f10, dyn # perform operation
fnmadd.s f11, f22, f15, f10, rdn # perform operation
fnmadd.s f11, f22, f15, f10, rmm # perform operation
fnmadd.s f11, f22, f15, f10, rne # perform operation
fnmadd.s f11, f22, f15, f10, rtz # perform operation
fnmadd.s f11, f22, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xf3a2d808ebba41f6 # load x3 with value 0xf3a2d808ebba41f6
sw x3, 0(x2) # store 0xf3a2d808ebba41f6 in memory
flw f28, 0(x2) # load 0xf3a2d808ebba41f6 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fnmadd.s f2, f18, f28, f23, dyn # perform operation
fnmadd.s f2, f18, f28, f23, rdn # perform operation
fnmadd.s f2, f18, f28, f23, rmm # perform operation
fnmadd.s f2, f18, f28, f23, rne # perform operation
fnmadd.s f2, f18, f28, f23, rtz # perform operation
fnmadd.s f2, f18, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f18, f28, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xa544337afcf21435 # load x3 with value 0xa544337afcf21435
sw x3, 0(x2) # store 0xa544337afcf21435 in memory
flw f19, 0(x2) # load 0xa544337afcf21435 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fnmadd.s f5, f31, f19, f30, dyn # perform operation
fnmadd.s f5, f31, f19, f30, rdn # perform operation
fnmadd.s f5, f31, f19, f30, rmm # perform operation
fnmadd.s f5, f31, f19, f30, rne # perform operation
fnmadd.s f5, f31, f19, f30, rtz # perform operation
fnmadd.s f5, f31, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f19, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x3c6db3bbe07e6341 # load x3 with value 0x3c6db3bbe07e6341
sw x3, 0(x2) # store 0x3c6db3bbe07e6341 in memory
flw f16, 0(x2) # load 0x3c6db3bbe07e6341 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmadd.s f25, f2, f16, f23, dyn # perform operation
fnmadd.s f25, f2, f16, f23, rdn # perform operation
fnmadd.s f25, f2, f16, f23, rmm # perform operation
fnmadd.s f25, f2, f16, f23, rne # perform operation
fnmadd.s f25, f2, f16, f23, rtz # perform operation
fnmadd.s f25, f2, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xaeef75d0ed9ed9 # load x3 with value 0xaeef75d0ed9ed9
sw x3, 0(x2) # store 0xaeef75d0ed9ed9 in memory
flw f23, 0(x2) # load 0xaeef75d0ed9ed9 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f13, f30, f23, f27, dyn # perform operation
fnmadd.s f13, f30, f23, f27, rdn # perform operation
fnmadd.s f13, f30, f23, f27, rmm # perform operation
fnmadd.s f13, f30, f23, f27, rne # perform operation
fnmadd.s f13, f30, f23, f27, rtz # perform operation
fnmadd.s f13, f30, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x7d835200f95783bf # load x3 with value 0x7d835200f95783bf
sw x3, 0(x2) # store 0x7d835200f95783bf in memory
flw f29, 0(x2) # load 0x7d835200f95783bf from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fnmadd.s f3, f23, f29, f18, dyn # perform operation
fnmadd.s f3, f23, f29, f18, rdn # perform operation
fnmadd.s f3, f23, f29, f18, rmm # perform operation
fnmadd.s f3, f23, f29, f18, rne # perform operation
fnmadd.s f3, f23, f29, f18, rtz # perform operation
fnmadd.s f3, f23, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x530115328241251b # load x3 with value 0x530115328241251b
sw x3, 0(x2) # store 0x530115328241251b in memory
flw f7, 0(x2) # load 0x530115328241251b from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmadd.s f28, f9, f7, f17, dyn # perform operation
fnmadd.s f28, f9, f7, f17, rdn # perform operation
fnmadd.s f28, f9, f7, f17, rmm # perform operation
fnmadd.s f28, f9, f7, f17, rne # perform operation
fnmadd.s f28, f9, f7, f17, rtz # perform operation
fnmadd.s f28, f9, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x1e365ef733a3a9c9 # load x3 with value 0x1e365ef733a3a9c9
sw x3, 0(x2) # store 0x1e365ef733a3a9c9 in memory
flw f6, 0(x2) # load 0x1e365ef733a3a9c9 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmadd.s f20, f30, f6, f27, dyn # perform operation
fnmadd.s f20, f30, f6, f27, rdn # perform operation
fnmadd.s f20, f30, f6, f27, rmm # perform operation
fnmadd.s f20, f30, f6, f27, rne # perform operation
fnmadd.s f20, f30, f6, f27, rtz # perform operation
fnmadd.s f20, f30, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xbafde7b1efb4ef01 # load x3 with value 0xbafde7b1efb4ef01
sw x3, 0(x2) # store 0xbafde7b1efb4ef01 in memory
flw f17, 0(x2) # load 0xbafde7b1efb4ef01 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.s f9, f19, f17, f25, dyn # perform operation
fnmadd.s f9, f19, f17, f25, rdn # perform operation
fnmadd.s f9, f19, f17, f25, rmm # perform operation
fnmadd.s f9, f19, f17, f25, rne # perform operation
fnmadd.s f9, f19, f17, f25, rtz # perform operation
fnmadd.s f9, f19, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x231746cab7389276 # load x3 with value 0x231746cab7389276
sw x3, 0(x2) # store 0x231746cab7389276 in memory
flw f27, 0(x2) # load 0x231746cab7389276 from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmadd.s f7, f28, f27, f30, dyn # perform operation
fnmadd.s f7, f28, f27, f30, rdn # perform operation
fnmadd.s f7, f28, f27, f30, rmm # perform operation
fnmadd.s f7, f28, f27, f30, rne # perform operation
fnmadd.s f7, f28, f27, f30, rtz # perform operation
fnmadd.s f7, f28, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f28, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xa1453bb2f418b775 # load x3 with value 0xa1453bb2f418b775
sw x3, 0(x2) # store 0xa1453bb2f418b775 in memory
flw f18, 0(x2) # load 0xa1453bb2f418b775 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f15, f27, f18, f9, dyn # perform operation
fnmadd.s f15, f27, f18, f9, rdn # perform operation
fnmadd.s f15, f27, f18, f9, rmm # perform operation
fnmadd.s f15, f27, f18, f9, rne # perform operation
fnmadd.s f15, f27, f18, f9, rtz # perform operation
fnmadd.s f15, f27, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xbd58f13a3c30eba0 # load x3 with value 0xbd58f13a3c30eba0
sw x3, 0(x2) # store 0xbd58f13a3c30eba0 in memory
flw f6, 0(x2) # load 0xbd58f13a3c30eba0 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f2, f17, f6, f29, dyn # perform operation
fnmadd.s f2, f17, f6, f29, rdn # perform operation
fnmadd.s f2, f17, f6, f29, rmm # perform operation
fnmadd.s f2, f17, f6, f29, rne # perform operation
fnmadd.s f2, f17, f6, f29, rtz # perform operation
fnmadd.s f2, f17, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xc281d7200c40b428 # load x3 with value 0xc281d7200c40b428
sw x3, 0(x2) # store 0xc281d7200c40b428 in memory
flw f5, 0(x2) # load 0xc281d7200c40b428 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fnmadd.s f17, f12, f5, f24, dyn # perform operation
fnmadd.s f17, f12, f5, f24, rdn # perform operation
fnmadd.s f17, f12, f5, f24, rmm # perform operation
fnmadd.s f17, f12, f5, f24, rne # perform operation
fnmadd.s f17, f12, f5, f24, rtz # perform operation
fnmadd.s f17, f12, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xdc83d1a2e8e6d24a # load x3 with value 0xdc83d1a2e8e6d24a
sw x3, 0(x2) # store 0xdc83d1a2e8e6d24a in memory
flw f12, 0(x2) # load 0xdc83d1a2e8e6d24a from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f2, f11, f12, f14, dyn # perform operation
fnmadd.s f2, f11, f12, f14, rdn # perform operation
fnmadd.s f2, f11, f12, f14, rmm # perform operation
fnmadd.s f2, f11, f12, f14, rne # perform operation
fnmadd.s f2, f11, f12, f14, rtz # perform operation
fnmadd.s f2, f11, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f11, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f11, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f11, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f11, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f11, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x2ff876d9d0bbd1d5 # load x3 with value 0x2ff876d9d0bbd1d5
sw x3, 0(x2) # store 0x2ff876d9d0bbd1d5 in memory
flw f18, 0(x2) # load 0x2ff876d9d0bbd1d5 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fnmadd.s f1, f9, f18, f19, dyn # perform operation
fnmadd.s f1, f9, f18, f19, rdn # perform operation
fnmadd.s f1, f9, f18, f19, rmm # perform operation
fnmadd.s f1, f9, f18, f19, rne # perform operation
fnmadd.s f1, f9, f18, f19, rtz # perform operation
fnmadd.s f1, f9, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x637cf02196504611 # load x3 with value 0x637cf02196504611
sw x3, 0(x2) # store 0x637cf02196504611 in memory
flw f24, 0(x2) # load 0x637cf02196504611 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
fnmadd.s f21, f12, f24, f17, dyn # perform operation
fnmadd.s f21, f12, f24, f17, rdn # perform operation
fnmadd.s f21, f12, f24, f17, rmm # perform operation
fnmadd.s f21, f12, f24, f17, rne # perform operation
fnmadd.s f21, f12, f24, f17, rtz # perform operation
fnmadd.s f21, f12, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f12, f24, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x56a0acbb1bc48db3 # load x3 with value 0x56a0acbb1bc48db3
sw x3, 0(x2) # store 0x56a0acbb1bc48db3 in memory
flw f20, 0(x2) # load 0x56a0acbb1bc48db3 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmadd.s f13, f5, f20, f7, dyn # perform operation
fnmadd.s f13, f5, f20, f7, rdn # perform operation
fnmadd.s f13, f5, f20, f7, rmm # perform operation
fnmadd.s f13, f5, f20, f7, rne # perform operation
fnmadd.s f13, f5, f20, f7, rtz # perform operation
fnmadd.s f13, f5, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f5, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x64dca92f98ae7a68 # load x3 with value 0x64dca92f98ae7a68
sw x3, 0(x2) # store 0x64dca92f98ae7a68 in memory
flw f7, 0(x2) # load 0x64dca92f98ae7a68 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f8, f12, f7, f2, dyn # perform operation
fnmadd.s f8, f12, f7, f2, rdn # perform operation
fnmadd.s f8, f12, f7, f2, rmm # perform operation
fnmadd.s f8, f12, f7, f2, rne # perform operation
fnmadd.s f8, f12, f7, f2, rtz # perform operation
fnmadd.s f8, f12, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x5bf56e3237ae07fa # load x3 with value 0x5bf56e3237ae07fa
sw x3, 0(x2) # store 0x5bf56e3237ae07fa in memory
flw f28, 0(x2) # load 0x5bf56e3237ae07fa from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f2, f17, f28, f25, dyn # perform operation
fnmadd.s f2, f17, f28, f25, rdn # perform operation
fnmadd.s f2, f17, f28, f25, rmm # perform operation
fnmadd.s f2, f17, f28, f25, rne # perform operation
fnmadd.s f2, f17, f28, f25, rtz # perform operation
fnmadd.s f2, f17, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xad30065be222733a # load x3 with value 0xad30065be222733a
sw x3, 0(x2) # store 0xad30065be222733a in memory
flw f28, 0(x2) # load 0xad30065be222733a from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmadd.s f3, f2, f28, f7, dyn # perform operation
fnmadd.s f3, f2, f28, f7, rdn # perform operation
fnmadd.s f3, f2, f28, f7, rmm # perform operation
fnmadd.s f3, f2, f28, f7, rne # perform operation
fnmadd.s f3, f2, f28, f7, rtz # perform operation
fnmadd.s f3, f2, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f2, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xadd22719874ba88 # load x3 with value 0xadd22719874ba88
sw x3, 0(x2) # store 0xadd22719874ba88 in memory
flw f2, 0(x2) # load 0xadd22719874ba88 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmadd.s f1, f5, f2, f3, dyn # perform operation
fnmadd.s f1, f5, f2, f3, rdn # perform operation
fnmadd.s f1, f5, f2, f3, rmm # perform operation
fnmadd.s f1, f5, f2, f3, rne # perform operation
fnmadd.s f1, f5, f2, f3, rtz # perform operation
fnmadd.s f1, f5, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xb4613b604024210c # load x3 with value 0xb4613b604024210c
sw x3, 0(x2) # store 0xb4613b604024210c in memory
flw f12, 0(x2) # load 0xb4613b604024210c from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f11, f22, f12, f8, dyn # perform operation
fnmadd.s f11, f22, f12, f8, rdn # perform operation
fnmadd.s f11, f22, f12, f8, rmm # perform operation
fnmadd.s f11, f22, f12, f8, rne # perform operation
fnmadd.s f11, f22, f12, f8, rtz # perform operation
fnmadd.s f11, f22, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xf70a85fbcd59e256 # load x3 with value 0xf70a85fbcd59e256
sw x3, 0(x2) # store 0xf70a85fbcd59e256 in memory
flw f5, 0(x2) # load 0xf70a85fbcd59e256 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f28, f17, f5, f19, dyn # perform operation
fnmadd.s f28, f17, f5, f19, rdn # perform operation
fnmadd.s f28, f17, f5, f19, rmm # perform operation
fnmadd.s f28, f17, f5, f19, rne # perform operation
fnmadd.s f28, f17, f5, f19, rtz # perform operation
fnmadd.s f28, f17, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f17, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f17, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f17, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f17, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f17, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xffbb509dc807e16 # load x3 with value 0xffbb509dc807e16
sw x3, 0(x2) # store 0xffbb509dc807e16 in memory
flw f5, 0(x2) # load 0xffbb509dc807e16 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmadd.s f10, f22, f5, f27, dyn # perform operation
fnmadd.s f10, f22, f5, f27, rdn # perform operation
fnmadd.s f10, f22, f5, f27, rmm # perform operation
fnmadd.s f10, f22, f5, f27, rne # perform operation
fnmadd.s f10, f22, f5, f27, rtz # perform operation
fnmadd.s f10, f22, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x607f94cbc17b4259 # load x3 with value 0x607f94cbc17b4259
sw x3, 0(x2) # store 0x607f94cbc17b4259 in memory
flw f7, 0(x2) # load 0x607f94cbc17b4259 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f23, f1, f7, f22, dyn # perform operation
fnmadd.s f23, f1, f7, f22, rdn # perform operation
fnmadd.s f23, f1, f7, f22, rmm # perform operation
fnmadd.s f23, f1, f7, f22, rne # perform operation
fnmadd.s f23, f1, f7, f22, rtz # perform operation
fnmadd.s f23, f1, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xb7c9491322c63690 # load x3 with value 0xb7c9491322c63690
sw x3, 0(x2) # store 0xb7c9491322c63690 in memory
flw f15, 0(x2) # load 0xb7c9491322c63690 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmadd.s f18, f27, f15, f7, dyn # perform operation
fnmadd.s f18, f27, f15, f7, rdn # perform operation
fnmadd.s f18, f27, f15, f7, rmm # perform operation
fnmadd.s f18, f27, f15, f7, rne # perform operation
fnmadd.s f18, f27, f15, f7, rtz # perform operation
fnmadd.s f18, f27, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f27, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x9ae8619d8dc1db09 # load x3 with value 0x9ae8619d8dc1db09
sw x3, 0(x2) # store 0x9ae8619d8dc1db09 in memory
flw f3, 0(x2) # load 0x9ae8619d8dc1db09 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmadd.s f31, f16, f3, f28, dyn # perform operation
fnmadd.s f31, f16, f3, f28, rdn # perform operation
fnmadd.s f31, f16, f3, f28, rmm # perform operation
fnmadd.s f31, f16, f3, f28, rne # perform operation
fnmadd.s f31, f16, f3, f28, rtz # perform operation
fnmadd.s f31, f16, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f16, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x3d2a23be0a8ff04 # load x3 with value 0x3d2a23be0a8ff04
sw x3, 0(x2) # store 0x3d2a23be0a8ff04 in memory
flw f2, 0(x2) # load 0x3d2a23be0a8ff04 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmadd.s f20, f15, f2, f9, dyn # perform operation
fnmadd.s f20, f15, f2, f9, rdn # perform operation
fnmadd.s f20, f15, f2, f9, rmm # perform operation
fnmadd.s f20, f15, f2, f9, rne # perform operation
fnmadd.s f20, f15, f2, f9, rtz # perform operation
fnmadd.s f20, f15, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x26caed525d3d32a5 # load x3 with value 0x26caed525d3d32a5
sw x3, 0(x2) # store 0x26caed525d3d32a5 in memory
flw f23, 0(x2) # load 0x26caed525d3d32a5 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmadd.s f1, f28, f23, f12, dyn # perform operation
fnmadd.s f1, f28, f23, f12, rdn # perform operation
fnmadd.s f1, f28, f23, f12, rmm # perform operation
fnmadd.s f1, f28, f23, f12, rne # perform operation
fnmadd.s f1, f28, f23, f12, rtz # perform operation
fnmadd.s f1, f28, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xfe2b4f427480ad3c # load x3 with value 0xfe2b4f427480ad3c
sw x3, 0(x2) # store 0xfe2b4f427480ad3c in memory
flw f22, 0(x2) # load 0xfe2b4f427480ad3c from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmadd.s f3, f26, f22, f25, dyn # perform operation
fnmadd.s f3, f26, f22, f25, rdn # perform operation
fnmadd.s f3, f26, f22, f25, rmm # perform operation
fnmadd.s f3, f26, f22, f25, rne # perform operation
fnmadd.s f3, f26, f22, f25, rtz # perform operation
fnmadd.s f3, f26, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xc6f8caf8dd891e98 # load x3 with value 0xc6f8caf8dd891e98
sw x3, 0(x2) # store 0xc6f8caf8dd891e98 in memory
flw f10, 0(x2) # load 0xc6f8caf8dd891e98 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fnmadd.s f18, f25, f10, f21, dyn # perform operation
fnmadd.s f18, f25, f10, f21, rdn # perform operation
fnmadd.s f18, f25, f10, f21, rmm # perform operation
fnmadd.s f18, f25, f10, f21, rne # perform operation
fnmadd.s f18, f25, f10, f21, rtz # perform operation
fnmadd.s f18, f25, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f25, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f25, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x213a78f1ef0d35b4 # load x3 with value 0x213a78f1ef0d35b4
sw x3, 0(x2) # store 0x213a78f1ef0d35b4 in memory
flw f23, 0(x2) # load 0x213a78f1ef0d35b4 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f31, f20, f23, f1, dyn # perform operation
fnmadd.s f31, f20, f23, f1, rdn # perform operation
fnmadd.s f31, f20, f23, f1, rmm # perform operation
fnmadd.s f31, f20, f23, f1, rne # perform operation
fnmadd.s f31, f20, f23, f1, rtz # perform operation
fnmadd.s f31, f20, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x6be95147f926f090 # load x3 with value 0x6be95147f926f090
sw x3, 0(x2) # store 0x6be95147f926f090 in memory
flw f18, 0(x2) # load 0x6be95147f926f090 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f3, f15, f18, f2, dyn # perform operation
fnmadd.s f3, f15, f18, f2, rdn # perform operation
fnmadd.s f3, f15, f18, f2, rmm # perform operation
fnmadd.s f3, f15, f18, f2, rne # perform operation
fnmadd.s f3, f15, f18, f2, rtz # perform operation
fnmadd.s f3, f15, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x2e99d382f8ad8a47 # load x3 with value 0x2e99d382f8ad8a47
sw x3, 0(x2) # store 0x2e99d382f8ad8a47 in memory
flw f3, 0(x2) # load 0x2e99d382f8ad8a47 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
fnmadd.s f26, f6, f3, f8, dyn # perform operation
fnmadd.s f26, f6, f3, f8, rdn # perform operation
fnmadd.s f26, f6, f3, f8, rmm # perform operation
fnmadd.s f26, f6, f3, f8, rne # perform operation
fnmadd.s f26, f6, f3, f8, rtz # perform operation
fnmadd.s f26, f6, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x1892ace47eae1de0 # load x3 with value 0x1892ace47eae1de0
sw x3, 0(x2) # store 0x1892ace47eae1de0 in memory
flw f20, 0(x2) # load 0x1892ace47eae1de0 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f11, f22, f20, f2, dyn # perform operation
fnmadd.s f11, f22, f20, f2, rdn # perform operation
fnmadd.s f11, f22, f20, f2, rmm # perform operation
fnmadd.s f11, f22, f20, f2, rne # perform operation
fnmadd.s f11, f22, f20, f2, rtz # perform operation
fnmadd.s f11, f22, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x49ff20dd0f728253 # load x3 with value 0x49ff20dd0f728253
sw x3, 0(x2) # store 0x49ff20dd0f728253 in memory
flw f30, 0(x2) # load 0x49ff20dd0f728253 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f7, f9, f30, f11, dyn # perform operation
fnmadd.s f7, f9, f30, f11, rdn # perform operation
fnmadd.s f7, f9, f30, f11, rmm # perform operation
fnmadd.s f7, f9, f30, f11, rne # perform operation
fnmadd.s f7, f9, f30, f11, rtz # perform operation
fnmadd.s f7, f9, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xa7487010fde84d9f # load x3 with value 0xa7487010fde84d9f
sw x3, 0(x2) # store 0xa7487010fde84d9f in memory
flw f15, 0(x2) # load 0xa7487010fde84d9f from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f31, f14, f15, f12, dyn # perform operation
fnmadd.s f31, f14, f15, f12, rdn # perform operation
fnmadd.s f31, f14, f15, f12, rmm # perform operation
fnmadd.s f31, f14, f15, f12, rne # perform operation
fnmadd.s f31, f14, f15, f12, rtz # perform operation
fnmadd.s f31, f14, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xe0bfe2147510abc0 # load x3 with value 0xe0bfe2147510abc0
sw x3, 0(x2) # store 0xe0bfe2147510abc0 in memory
flw f19, 0(x2) # load 0xe0bfe2147510abc0 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f29, f27, f19, f8, dyn # perform operation
fnmadd.s f29, f27, f19, f8, rdn # perform operation
fnmadd.s f29, f27, f19, f8, rmm # perform operation
fnmadd.s f29, f27, f19, f8, rne # perform operation
fnmadd.s f29, f27, f19, f8, rtz # perform operation
fnmadd.s f29, f27, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xbdae918405145e32 # load x3 with value 0xbdae918405145e32
sw x3, 0(x2) # store 0xbdae918405145e32 in memory
flw f1, 0(x2) # load 0xbdae918405145e32 from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f12, f23, f1, f9, dyn # perform operation
fnmadd.s f12, f23, f1, f9, rdn # perform operation
fnmadd.s f12, f23, f1, f9, rmm # perform operation
fnmadd.s f12, f23, f1, f9, rne # perform operation
fnmadd.s f12, f23, f1, f9, rtz # perform operation
fnmadd.s f12, f23, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f23, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x514db715dcebcdec # load x3 with value 0x514db715dcebcdec
sw x3, 0(x2) # store 0x514db715dcebcdec in memory
flw f10, 0(x2) # load 0x514db715dcebcdec from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f27, f7, f10, f14, dyn # perform operation
fnmadd.s f27, f7, f10, f14, rdn # perform operation
fnmadd.s f27, f7, f10, f14, rmm # perform operation
fnmadd.s f27, f7, f10, f14, rne # perform operation
fnmadd.s f27, f7, f10, f14, rtz # perform operation
fnmadd.s f27, f7, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f7, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x16100d00c2949bfa # load x3 with value 0x16100d00c2949bfa
sw x3, 0(x2) # store 0x16100d00c2949bfa in memory
flw f13, 0(x2) # load 0x16100d00c2949bfa from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmadd.s f12, f14, f13, f15, dyn # perform operation
fnmadd.s f12, f14, f13, f15, rdn # perform operation
fnmadd.s f12, f14, f13, f15, rmm # perform operation
fnmadd.s f12, f14, f13, f15, rne # perform operation
fnmadd.s f12, f14, f13, f15, rtz # perform operation
fnmadd.s f12, f14, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x93d4549ffa8a7bca # load x3 with value 0x93d4549ffa8a7bca
sw x3, 0(x2) # store 0x93d4549ffa8a7bca in memory
flw f21, 0(x2) # load 0x93d4549ffa8a7bca from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f18, f13, f21, f8, dyn # perform operation
fnmadd.s f18, f13, f21, f8, rdn # perform operation
fnmadd.s f18, f13, f21, f8, rmm # perform operation
fnmadd.s f18, f13, f21, f8, rne # perform operation
fnmadd.s f18, f13, f21, f8, rtz # perform operation
fnmadd.s f18, f13, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xaa64ae9cf576d0ef # load x3 with value 0xaa64ae9cf576d0ef
sw x3, 0(x2) # store 0xaa64ae9cf576d0ef in memory
flw f20, 0(x2) # load 0xaa64ae9cf576d0ef from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmadd.s f7, f24, f20, f23, dyn # perform operation
fnmadd.s f7, f24, f20, f23, rdn # perform operation
fnmadd.s f7, f24, f20, f23, rmm # perform operation
fnmadd.s f7, f24, f20, f23, rne # perform operation
fnmadd.s f7, f24, f20, f23, rtz # perform operation
fnmadd.s f7, f24, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xc101b3245096020f # load x3 with value 0xc101b3245096020f
sw x3, 0(x2) # store 0xc101b3245096020f in memory
flw f22, 0(x2) # load 0xc101b3245096020f from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmadd.s f3, f24, f22, f20, dyn # perform operation
fnmadd.s f3, f24, f22, f20, rdn # perform operation
fnmadd.s f3, f24, f22, f20, rmm # perform operation
fnmadd.s f3, f24, f22, f20, rne # perform operation
fnmadd.s f3, f24, f22, f20, rtz # perform operation
fnmadd.s f3, f24, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x4bdc50f12c8db968 # load x3 with value 0x4bdc50f12c8db968
sw x3, 0(x2) # store 0x4bdc50f12c8db968 in memory
flw f24, 0(x2) # load 0x4bdc50f12c8db968 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f1, f7, f24, f13, dyn # perform operation
fnmadd.s f1, f7, f24, f13, rdn # perform operation
fnmadd.s f1, f7, f24, f13, rmm # perform operation
fnmadd.s f1, f7, f24, f13, rne # perform operation
fnmadd.s f1, f7, f24, f13, rtz # perform operation
fnmadd.s f1, f7, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x240f4f4079613c8f # load x3 with value 0x240f4f4079613c8f
sw x3, 0(x2) # store 0x240f4f4079613c8f in memory
flw f21, 0(x2) # load 0x240f4f4079613c8f from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f5, f31, f21, f18, dyn # perform operation
fnmadd.s f5, f31, f21, f18, rdn # perform operation
fnmadd.s f5, f31, f21, f18, rmm # perform operation
fnmadd.s f5, f31, f21, f18, rne # perform operation
fnmadd.s f5, f31, f21, f18, rtz # perform operation
fnmadd.s f5, f31, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f21, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x60c3bfe7497d3c85 # load x3 with value 0x60c3bfe7497d3c85
sw x3, 0(x2) # store 0x60c3bfe7497d3c85 in memory
flw f21, 0(x2) # load 0x60c3bfe7497d3c85 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f10, f2, f21, f24, dyn # perform operation
fnmadd.s f10, f2, f21, f24, rdn # perform operation
fnmadd.s f10, f2, f21, f24, rmm # perform operation
fnmadd.s f10, f2, f21, f24, rne # perform operation
fnmadd.s f10, f2, f21, f24, rtz # perform operation
fnmadd.s f10, f2, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x3d9a24f1c6e11b54 # load x3 with value 0x3d9a24f1c6e11b54
sw x3, 0(x2) # store 0x3d9a24f1c6e11b54 in memory
flw f1, 0(x2) # load 0x3d9a24f1c6e11b54 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmadd.s f28, f9, f1, f17, dyn # perform operation
fnmadd.s f28, f9, f1, f17, rdn # perform operation
fnmadd.s f28, f9, f1, f17, rmm # perform operation
fnmadd.s f28, f9, f1, f17, rne # perform operation
fnmadd.s f28, f9, f1, f17, rtz # perform operation
fnmadd.s f28, f9, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xd6d755c0761e15ec # load x3 with value 0xd6d755c0761e15ec
sw x3, 0(x2) # store 0xd6d755c0761e15ec in memory
flw f30, 0(x2) # load 0xd6d755c0761e15ec from memory into f30
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmadd.s f18, f10, f30, f3, dyn # perform operation
fnmadd.s f18, f10, f30, f3, rdn # perform operation
fnmadd.s f18, f10, f30, f3, rmm # perform operation
fnmadd.s f18, f10, f30, f3, rne # perform operation
fnmadd.s f18, f10, f30, f3, rtz # perform operation
fnmadd.s f18, f10, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f10, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f10, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f10, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f10, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f10, f30, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xc370a9c67d168479 # load x3 with value 0xc370a9c67d168479
sw x3, 0(x2) # store 0xc370a9c67d168479 in memory
flw f21, 0(x2) # load 0xc370a9c67d168479 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fnmadd.s f16, f7, f21, f26, dyn # perform operation
fnmadd.s f16, f7, f21, f26, rdn # perform operation
fnmadd.s f16, f7, f21, f26, rmm # perform operation
fnmadd.s f16, f7, f21, f26, rne # perform operation
fnmadd.s f16, f7, f21, f26, rtz # perform operation
fnmadd.s f16, f7, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f7, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x713a802e1e497d1d # load x3 with value 0x713a802e1e497d1d
sw x3, 0(x2) # store 0x713a802e1e497d1d in memory
flw f27, 0(x2) # load 0x713a802e1e497d1d from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f1, f9, f27, f19, dyn # perform operation
fnmadd.s f1, f9, f27, f19, rdn # perform operation
fnmadd.s f1, f9, f27, f19, rmm # perform operation
fnmadd.s f1, f9, f27, f19, rne # perform operation
fnmadd.s f1, f9, f27, f19, rtz # perform operation
fnmadd.s f1, f9, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x8db39fa3befc9e62 # load x3 with value 0x8db39fa3befc9e62
sw x3, 0(x2) # store 0x8db39fa3befc9e62 in memory
flw f3, 0(x2) # load 0x8db39fa3befc9e62 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f1, f26, f3, f14, dyn # perform operation
fnmadd.s f1, f26, f3, f14, rdn # perform operation
fnmadd.s f1, f26, f3, f14, rmm # perform operation
fnmadd.s f1, f26, f3, f14, rne # perform operation
fnmadd.s f1, f26, f3, f14, rtz # perform operation
fnmadd.s f1, f26, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x16e01157bf2392c3 # load x3 with value 0x16e01157bf2392c3
sw x3, 0(x2) # store 0x16e01157bf2392c3 in memory
flw f1, 0(x2) # load 0x16e01157bf2392c3 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f2, f21, f1, f14, dyn # perform operation
fnmadd.s f2, f21, f1, f14, rdn # perform operation
fnmadd.s f2, f21, f1, f14, rmm # perform operation
fnmadd.s f2, f21, f1, f14, rne # perform operation
fnmadd.s f2, f21, f1, f14, rtz # perform operation
fnmadd.s f2, f21, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x7e0a5525c5abcab0 # load x3 with value 0x7e0a5525c5abcab0
sw x3, 0(x2) # store 0x7e0a5525c5abcab0 in memory
flw f19, 0(x2) # load 0x7e0a5525c5abcab0 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmadd.s f7, f12, f19, f6, dyn # perform operation
fnmadd.s f7, f12, f19, f6, rdn # perform operation
fnmadd.s f7, f12, f19, f6, rmm # perform operation
fnmadd.s f7, f12, f19, f6, rne # perform operation
fnmadd.s f7, f12, f19, f6, rtz # perform operation
fnmadd.s f7, f12, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xb78c1a3503a9eb1f # load x3 with value 0xb78c1a3503a9eb1f
sw x3, 0(x2) # store 0xb78c1a3503a9eb1f in memory
flw f20, 0(x2) # load 0xb78c1a3503a9eb1f from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmadd.s f10, f16, f20, f1, dyn # perform operation
fnmadd.s f10, f16, f20, f1, rdn # perform operation
fnmadd.s f10, f16, f20, f1, rmm # perform operation
fnmadd.s f10, f16, f20, f1, rne # perform operation
fnmadd.s f10, f16, f20, f1, rtz # perform operation
fnmadd.s f10, f16, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x8f1917168f3a97cc # load x3 with value 0x8f1917168f3a97cc
sw x3, 0(x2) # store 0x8f1917168f3a97cc in memory
flw f1, 0(x2) # load 0x8f1917168f3a97cc from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmadd.s f14, f5, f1, f31, dyn # perform operation
fnmadd.s f14, f5, f1, f31, rdn # perform operation
fnmadd.s f14, f5, f1, f31, rmm # perform operation
fnmadd.s f14, f5, f1, f31, rne # perform operation
fnmadd.s f14, f5, f1, f31, rtz # perform operation
fnmadd.s f14, f5, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x2130a183babd4fbf # load x3 with value 0x2130a183babd4fbf
sw x3, 0(x2) # store 0x2130a183babd4fbf in memory
flw f12, 0(x2) # load 0x2130a183babd4fbf from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmadd.s f18, f29, f12, f10, dyn # perform operation
fnmadd.s f18, f29, f12, f10, rdn # perform operation
fnmadd.s f18, f29, f12, f10, rmm # perform operation
fnmadd.s f18, f29, f12, f10, rne # perform operation
fnmadd.s f18, f29, f12, f10, rtz # perform operation
fnmadd.s f18, f29, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xd94b722fa5a6157f # load x3 with value 0xd94b722fa5a6157f
sw x3, 0(x2) # store 0xd94b722fa5a6157f in memory
flw f26, 0(x2) # load 0xd94b722fa5a6157f from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmadd.s f5, f9, f26, f29, dyn # perform operation
fnmadd.s f5, f9, f26, f29, rdn # perform operation
fnmadd.s f5, f9, f26, f29, rmm # perform operation
fnmadd.s f5, f9, f26, f29, rne # perform operation
fnmadd.s f5, f9, f26, f29, rtz # perform operation
fnmadd.s f5, f9, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x71b887bcc5d735fc # load x3 with value 0x71b887bcc5d735fc
sw x3, 0(x2) # store 0x71b887bcc5d735fc in memory
flw f21, 0(x2) # load 0x71b887bcc5d735fc from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
fnmadd.s f19, f30, f21, f23, dyn # perform operation
fnmadd.s f19, f30, f21, f23, rdn # perform operation
fnmadd.s f19, f30, f21, f23, rmm # perform operation
fnmadd.s f19, f30, f21, f23, rne # perform operation
fnmadd.s f19, f30, f21, f23, rtz # perform operation
fnmadd.s f19, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x789dd6414f0ff333 # load x3 with value 0x789dd6414f0ff333
sw x3, 0(x2) # store 0x789dd6414f0ff333 in memory
flw f23, 0(x2) # load 0x789dd6414f0ff333 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmadd.s f18, f27, f23, f31, dyn # perform operation
fnmadd.s f18, f27, f23, f31, rdn # perform operation
fnmadd.s f18, f27, f23, f31, rmm # perform operation
fnmadd.s f18, f27, f23, f31, rne # perform operation
fnmadd.s f18, f27, f23, f31, rtz # perform operation
fnmadd.s f18, f27, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f27, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x99f00ce31ae79b69 # load x3 with value 0x99f00ce31ae79b69
sw x3, 0(x2) # store 0x99f00ce31ae79b69 in memory
flw f3, 0(x2) # load 0x99f00ce31ae79b69 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmadd.s f24, f1, f3, f20, dyn # perform operation
fnmadd.s f24, f1, f3, f20, rdn # perform operation
fnmadd.s f24, f1, f3, f20, rmm # perform operation
fnmadd.s f24, f1, f3, f20, rne # perform operation
fnmadd.s f24, f1, f3, f20, rtz # perform operation
fnmadd.s f24, f1, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f1, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xf35792f82411422a # load x3 with value 0xf35792f82411422a
sw x3, 0(x2) # store 0xf35792f82411422a in memory
flw f25, 0(x2) # load 0xf35792f82411422a from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmadd.s f21, f8, f25, f22, dyn # perform operation
fnmadd.s f21, f8, f25, f22, rdn # perform operation
fnmadd.s f21, f8, f25, f22, rmm # perform operation
fnmadd.s f21, f8, f25, f22, rne # perform operation
fnmadd.s f21, f8, f25, f22, rtz # perform operation
fnmadd.s f21, f8, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f8, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xc05ab07f6f7c7988 # load x3 with value 0xc05ab07f6f7c7988
sw x3, 0(x2) # store 0xc05ab07f6f7c7988 in memory
flw f5, 0(x2) # load 0xc05ab07f6f7c7988 from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmadd.s f24, f1, f5, f21, dyn # perform operation
fnmadd.s f24, f1, f5, f21, rdn # perform operation
fnmadd.s f24, f1, f5, f21, rmm # perform operation
fnmadd.s f24, f1, f5, f21, rne # perform operation
fnmadd.s f24, f1, f5, f21, rtz # perform operation
fnmadd.s f24, f1, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f1, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f1, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x1874d7dd8910305d # load x3 with value 0x1874d7dd8910305d
sw x3, 0(x2) # store 0x1874d7dd8910305d in memory
flw f29, 0(x2) # load 0x1874d7dd8910305d from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmadd.s f16, f5, f29, f25, dyn # perform operation
fnmadd.s f16, f5, f29, f25, rdn # perform operation
fnmadd.s f16, f5, f29, f25, rmm # perform operation
fnmadd.s f16, f5, f29, f25, rne # perform operation
fnmadd.s f16, f5, f29, f25, rtz # perform operation
fnmadd.s f16, f5, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f5, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f5, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f5, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f5, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f5, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x6bf252cd42bc57f1 # load x3 with value 0x6bf252cd42bc57f1
sw x3, 0(x2) # store 0x6bf252cd42bc57f1 in memory
flw f30, 0(x2) # load 0x6bf252cd42bc57f1 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmadd.s f10, f21, f30, f14, dyn # perform operation
fnmadd.s f10, f21, f30, f14, rdn # perform operation
fnmadd.s f10, f21, f30, f14, rmm # perform operation
fnmadd.s f10, f21, f30, f14, rne # perform operation
fnmadd.s f10, f21, f30, f14, rtz # perform operation
fnmadd.s f10, f21, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x17aeec7971ffeadb # load x3 with value 0x17aeec7971ffeadb
sw x3, 0(x2) # store 0x17aeec7971ffeadb in memory
flw f20, 0(x2) # load 0x17aeec7971ffeadb from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmadd.s f17, f18, f20, f1, dyn # perform operation
fnmadd.s f17, f18, f20, f1, rdn # perform operation
fnmadd.s f17, f18, f20, f1, rmm # perform operation
fnmadd.s f17, f18, f20, f1, rne # perform operation
fnmadd.s f17, f18, f20, f1, rtz # perform operation
fnmadd.s f17, f18, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x7b564145467361d6 # load x3 with value 0x7b564145467361d6
sw x3, 0(x2) # store 0x7b564145467361d6 in memory
flw f9, 0(x2) # load 0x7b564145467361d6 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f24, f31, f9, f19, dyn # perform operation
fnmadd.s f24, f31, f9, f19, rdn # perform operation
fnmadd.s f24, f31, f9, f19, rmm # perform operation
fnmadd.s f24, f31, f9, f19, rne # perform operation
fnmadd.s f24, f31, f9, f19, rtz # perform operation
fnmadd.s f24, f31, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x16a023969c4cfa62 # load x3 with value 0x16a023969c4cfa62
sw x3, 0(x2) # store 0x16a023969c4cfa62 in memory
flw f3, 0(x2) # load 0x16a023969c4cfa62 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fnmadd.s f29, f13, f3, f20, dyn # perform operation
fnmadd.s f29, f13, f3, f20, rdn # perform operation
fnmadd.s f29, f13, f3, f20, rmm # perform operation
fnmadd.s f29, f13, f3, f20, rne # perform operation
fnmadd.s f29, f13, f3, f20, rtz # perform operation
fnmadd.s f29, f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0xb6baa2d0d0689697 # load x3 with value 0xb6baa2d0d0689697
sw x3, 0(x2) # store 0xb6baa2d0d0689697 in memory
flw f9, 0(x2) # load 0xb6baa2d0d0689697 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f20, f6, f9, f10, dyn # perform operation
fnmadd.s f20, f6, f9, f10, rdn # perform operation
fnmadd.s f20, f6, f9, f10, rmm # perform operation
fnmadd.s f20, f6, f9, f10, rne # perform operation
fnmadd.s f20, f6, f9, f10, rtz # perform operation
fnmadd.s f20, f6, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f9, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x69077faa4834018 # load x3 with value 0x69077faa4834018
sw x3, 0(x2) # store 0x69077faa4834018 in memory
flw f24, 0(x2) # load 0x69077faa4834018 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f6, f22, f24, f9, dyn # perform operation
fnmadd.s f6, f22, f24, f9, rdn # perform operation
fnmadd.s f6, f22, f24, f9, rmm # perform operation
fnmadd.s f6, f22, f24, f9, rne # perform operation
fnmadd.s f6, f22, f24, f9, rtz # perform operation
fnmadd.s f6, f22, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x9d64c21c2c03edaf # load x3 with value 0x9d64c21c2c03edaf
sw x3, 0(x2) # store 0x9d64c21c2c03edaf in memory
flw f24, 0(x2) # load 0x9d64c21c2c03edaf from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmadd.s f18, f30, f24, f15, dyn # perform operation
fnmadd.s f18, f30, f24, f15, rdn # perform operation
fnmadd.s f18, f30, f24, f15, rmm # perform operation
fnmadd.s f18, f30, f24, f15, rne # perform operation
fnmadd.s f18, f30, f24, f15, rtz # perform operation
fnmadd.s f18, f30, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f30, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x5ff002337ea913f2 # load x3 with value 0x5ff002337ea913f2
sw x3, 0(x2) # store 0x5ff002337ea913f2 in memory
flw f15, 0(x2) # load 0x5ff002337ea913f2 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmadd.s f14, f1, f15, f16, dyn # perform operation
fnmadd.s f14, f1, f15, f16, rdn # perform operation
fnmadd.s f14, f1, f15, f16, rmm # perform operation
fnmadd.s f14, f1, f15, f16, rne # perform operation
fnmadd.s f14, f1, f15, f16, rtz # perform operation
fnmadd.s f14, f1, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x1956a8f59a88023a # load x3 with value 0x1956a8f59a88023a
sw x3, 0(x2) # store 0x1956a8f59a88023a in memory
flw f17, 0(x2) # load 0x1956a8f59a88023a from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmadd.s f13, f23, f17, f28, dyn # perform operation
fnmadd.s f13, f23, f17, f28, rdn # perform operation
fnmadd.s f13, f23, f17, f28, rmm # perform operation
fnmadd.s f13, f23, f17, f28, rne # perform operation
fnmadd.s f13, f23, f17, f28, rtz # perform operation
fnmadd.s f13, f23, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f23, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x7b330c4c1a5ceac4 # load x3 with value 0x7b330c4c1a5ceac4
sw x3, 0(x2) # store 0x7b330c4c1a5ceac4 in memory
flw f13, 0(x2) # load 0x7b330c4c1a5ceac4 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fnmadd.s f9, f8, f13, f20, dyn # perform operation
fnmadd.s f9, f8, f13, f20, rdn # perform operation
fnmadd.s f9, f8, f13, f20, rmm # perform operation
fnmadd.s f9, f8, f13, f20, rne # perform operation
fnmadd.s f9, f8, f13, f20, rtz # perform operation
fnmadd.s f9, f8, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x8d8949e0e67254ee # load x3 with value 0x8d8949e0e67254ee
sw x3, 0(x2) # store 0x8d8949e0e67254ee in memory
flw f22, 0(x2) # load 0x8d8949e0e67254ee from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fnmadd.s f14, f28, f22, f17, dyn # perform operation
fnmadd.s f14, f28, f22, f17, rdn # perform operation
fnmadd.s f14, f28, f22, f17, rmm # perform operation
fnmadd.s f14, f28, f22, f17, rne # perform operation
fnmadd.s f14, f28, f22, f17, rtz # perform operation
fnmadd.s f14, f28, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f28, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x9fe01f536605c5ad # load x3 with value 0x9fe01f536605c5ad
sw x3, 0(x2) # store 0x9fe01f536605c5ad in memory
flw f29, 0(x2) # load 0x9fe01f536605c5ad from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmadd.s f26, f16, f29, f8, dyn # perform operation
fnmadd.s f26, f16, f29, f8, rdn # perform operation
fnmadd.s f26, f16, f29, f8, rmm # perform operation
fnmadd.s f26, f16, f29, f8, rne # perform operation
fnmadd.s f26, f16, f29, f8, rtz # perform operation
fnmadd.s f26, f16, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x861e7d19b59e93ed # load x3 with value 0x861e7d19b59e93ed
sw x3, 0(x2) # store 0x861e7d19b59e93ed in memory
flw f12, 0(x2) # load 0x861e7d19b59e93ed from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fnmadd.s f30, f25, f12, f17, dyn # perform operation
fnmadd.s f30, f25, f12, f17, rdn # perform operation
fnmadd.s f30, f25, f12, f17, rmm # perform operation
fnmadd.s f30, f25, f12, f17, rne # perform operation
fnmadd.s f30, f25, f12, f17, rtz # perform operation
fnmadd.s f30, f25, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x10f29815d8093100 # load x3 with value 0x10f29815d8093100
sw x3, 0(x2) # store 0x10f29815d8093100 in memory
flw f30, 0(x2) # load 0x10f29815d8093100 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmadd.s f1, f7, f30, f5, dyn # perform operation
fnmadd.s f1, f7, f30, f5, rdn # perform operation
fnmadd.s f1, f7, f30, f5, rmm # perform operation
fnmadd.s f1, f7, f30, f5, rne # perform operation
fnmadd.s f1, f7, f30, f5, rtz # perform operation
fnmadd.s f1, f7, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xb538f59ea284bbde # load x3 with value 0xb538f59ea284bbde
sw x3, 0(x2) # store 0xb538f59ea284bbde in memory
flw f15, 0(x2) # load 0xb538f59ea284bbde from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f27, f22, f15, f6, dyn # perform operation
fnmadd.s f27, f22, f15, f6, rdn # perform operation
fnmadd.s f27, f22, f15, f6, rmm # perform operation
fnmadd.s f27, f22, f15, f6, rne # perform operation
fnmadd.s f27, f22, f15, f6, rtz # perform operation
fnmadd.s f27, f22, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f22, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xbe0b51b912366908 # load x3 with value 0xbe0b51b912366908
sw x3, 0(x2) # store 0xbe0b51b912366908 in memory
flw f1, 0(x2) # load 0xbe0b51b912366908 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmadd.s f23, f2, f1, f16, dyn # perform operation
fnmadd.s f23, f2, f1, f16, rdn # perform operation
fnmadd.s f23, f2, f1, f16, rmm # perform operation
fnmadd.s f23, f2, f1, f16, rne # perform operation
fnmadd.s f23, f2, f1, f16, rtz # perform operation
fnmadd.s f23, f2, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x31f5969fb32a3bf2 # load x3 with value 0x31f5969fb32a3bf2
sw x3, 0(x2) # store 0x31f5969fb32a3bf2 in memory
flw f8, 0(x2) # load 0x31f5969fb32a3bf2 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fnmadd.s f9, f2, f8, f27, dyn # perform operation
fnmadd.s f9, f2, f8, f27, rdn # perform operation
fnmadd.s f9, f2, f8, f27, rmm # perform operation
fnmadd.s f9, f2, f8, f27, rne # perform operation
fnmadd.s f9, f2, f8, f27, rtz # perform operation
fnmadd.s f9, f2, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0xf88701c30c2c3387 # load x3 with value 0xf88701c30c2c3387
sw x3, 0(x2) # store 0xf88701c30c2c3387 in memory
flw f27, 0(x2) # load 0xf88701c30c2c3387 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f2, f30, f27, f11, dyn # perform operation
fnmadd.s f2, f30, f27, f11, rdn # perform operation
fnmadd.s f2, f30, f27, f11, rmm # perform operation
fnmadd.s f2, f30, f27, f11, rne # perform operation
fnmadd.s f2, f30, f27, f11, rtz # perform operation
fnmadd.s f2, f30, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f27, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x3ed7969f7a1d2ca1 # load x3 with value 0x3ed7969f7a1d2ca1
sw x3, 0(x2) # store 0x3ed7969f7a1d2ca1 in memory
flw f30, 0(x2) # load 0x3ed7969f7a1d2ca1 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmadd.s f22, f29, f30, f5, dyn # perform operation
fnmadd.s f22, f29, f30, f5, rdn # perform operation
fnmadd.s f22, f29, f30, f5, rmm # perform operation
fnmadd.s f22, f29, f30, f5, rne # perform operation
fnmadd.s f22, f29, f30, f5, rtz # perform operation
fnmadd.s f22, f29, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x1933afe68af0ea27 # load x3 with value 0x1933afe68af0ea27
sw x3, 0(x2) # store 0x1933afe68af0ea27 in memory
flw f30, 0(x2) # load 0x1933afe68af0ea27 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fnmadd.s f26, f21, f30, f25, dyn # perform operation
fnmadd.s f26, f21, f30, f25, rdn # perform operation
fnmadd.s f26, f21, f30, f25, rmm # perform operation
fnmadd.s f26, f21, f30, f25, rne # perform operation
fnmadd.s f26, f21, f30, f25, rtz # perform operation
fnmadd.s f26, f21, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x3c70517e98257851 # load x3 with value 0x3c70517e98257851
sw x3, 0(x2) # store 0x3c70517e98257851 in memory
flw f22, 0(x2) # load 0x3c70517e98257851 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmadd.s f7, f27, f22, f5, dyn # perform operation
fnmadd.s f7, f27, f22, f5, rdn # perform operation
fnmadd.s f7, f27, f22, f5, rmm # perform operation
fnmadd.s f7, f27, f22, f5, rne # perform operation
fnmadd.s f7, f27, f22, f5, rtz # perform operation
fnmadd.s f7, f27, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x1c2affe2cc468e74 # load x3 with value 0x1c2affe2cc468e74
sw x3, 0(x2) # store 0x1c2affe2cc468e74 in memory
flw f10, 0(x2) # load 0x1c2affe2cc468e74 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f19, f5, f10, f21, dyn # perform operation
fnmadd.s f19, f5, f10, f21, rdn # perform operation
fnmadd.s f19, f5, f10, f21, rmm # perform operation
fnmadd.s f19, f5, f10, f21, rne # perform operation
fnmadd.s f19, f5, f10, f21, rtz # perform operation
fnmadd.s f19, f5, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xf59c100e01275d27 # load x3 with value 0xf59c100e01275d27
sw x3, 0(x2) # store 0xf59c100e01275d27 in memory
flw f11, 0(x2) # load 0xf59c100e01275d27 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fnmadd.s f18, f9, f11, f19, dyn # perform operation
fnmadd.s f18, f9, f11, f19, rdn # perform operation
fnmadd.s f18, f9, f11, f19, rmm # perform operation
fnmadd.s f18, f9, f11, f19, rne # perform operation
fnmadd.s f18, f9, f11, f19, rtz # perform operation
fnmadd.s f18, f9, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f9, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x72302e26befb2d75 # load x3 with value 0x72302e26befb2d75
sw x3, 0(x2) # store 0x72302e26befb2d75 in memory
flw f24, 0(x2) # load 0x72302e26befb2d75 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f22, f31, f24, f11, dyn # perform operation
fnmadd.s f22, f31, f24, f11, rdn # perform operation
fnmadd.s f22, f31, f24, f11, rmm # perform operation
fnmadd.s f22, f31, f24, f11, rne # perform operation
fnmadd.s f22, f31, f24, f11, rtz # perform operation
fnmadd.s f22, f31, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f31, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x4226819adceedeee # load x3 with value 0x4226819adceedeee
sw x3, 0(x2) # store 0x4226819adceedeee in memory
flw f2, 0(x2) # load 0x4226819adceedeee from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmadd.s f6, f16, f2, f14, dyn # perform operation
fnmadd.s f6, f16, f2, f14, rdn # perform operation
fnmadd.s f6, f16, f2, f14, rmm # perform operation
fnmadd.s f6, f16, f2, f14, rne # perform operation
fnmadd.s f6, f16, f2, f14, rtz # perform operation
fnmadd.s f6, f16, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x594a6106fe52c8b # load x3 with value 0x594a6106fe52c8b
sw x3, 0(x2) # store 0x594a6106fe52c8b in memory
flw f30, 0(x2) # load 0x594a6106fe52c8b from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmadd.s f16, f13, f30, f6, dyn # perform operation
fnmadd.s f16, f13, f30, f6, rdn # perform operation
fnmadd.s f16, f13, f30, f6, rmm # perform operation
fnmadd.s f16, f13, f30, f6, rne # perform operation
fnmadd.s f16, f13, f30, f6, rtz # perform operation
fnmadd.s f16, f13, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x826a2f733074db25 # load x3 with value 0x826a2f733074db25
sw x3, 0(x2) # store 0x826a2f733074db25 in memory
flw f22, 0(x2) # load 0x826a2f733074db25 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmadd.s f5, f18, f22, f9, dyn # perform operation
fnmadd.s f5, f18, f22, f9, rdn # perform operation
fnmadd.s f5, f18, f22, f9, rmm # perform operation
fnmadd.s f5, f18, f22, f9, rne # perform operation
fnmadd.s f5, f18, f22, f9, rtz # perform operation
fnmadd.s f5, f18, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x4023789bcaf847b5 # load x3 with value 0x4023789bcaf847b5
sw x3, 0(x2) # store 0x4023789bcaf847b5 in memory
flw f28, 0(x2) # load 0x4023789bcaf847b5 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmadd.s f2, f19, f28, f18, dyn # perform operation
fnmadd.s f2, f19, f28, f18, rdn # perform operation
fnmadd.s f2, f19, f28, f18, rmm # perform operation
fnmadd.s f2, f19, f28, f18, rne # perform operation
fnmadd.s f2, f19, f28, f18, rtz # perform operation
fnmadd.s f2, f19, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f19, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xc5bc81e1e637c7b8 # load x3 with value 0xc5bc81e1e637c7b8
sw x3, 0(x2) # store 0xc5bc81e1e637c7b8 in memory
flw f21, 0(x2) # load 0xc5bc81e1e637c7b8 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmadd.s f19, f2, f21, f27, dyn # perform operation
fnmadd.s f19, f2, f21, f27, rdn # perform operation
fnmadd.s f19, f2, f21, f27, rmm # perform operation
fnmadd.s f19, f2, f21, f27, rne # perform operation
fnmadd.s f19, f2, f21, f27, rtz # perform operation
fnmadd.s f19, f2, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xf4583b541b88f865 # load x3 with value 0xf4583b541b88f865
sw x3, 0(x2) # store 0xf4583b541b88f865 in memory
flw f7, 0(x2) # load 0xf4583b541b88f865 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmadd.s f11, f1, f7, f2, dyn # perform operation
fnmadd.s f11, f1, f7, f2, rdn # perform operation
fnmadd.s f11, f1, f7, f2, rmm # perform operation
fnmadd.s f11, f1, f7, f2, rne # perform operation
fnmadd.s f11, f1, f7, f2, rtz # perform operation
fnmadd.s f11, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f1, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x4a7c334b5d692549 # load x3 with value 0x4a7c334b5d692549
sw x3, 0(x2) # store 0x4a7c334b5d692549 in memory
flw f31, 0(x2) # load 0x4a7c334b5d692549 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmadd.s f24, f15, f31, f12, dyn # perform operation
fnmadd.s f24, f15, f31, f12, rdn # perform operation
fnmadd.s f24, f15, f31, f12, rmm # perform operation
fnmadd.s f24, f15, f31, f12, rne # perform operation
fnmadd.s f24, f15, f31, f12, rtz # perform operation
fnmadd.s f24, f15, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x3ae234b426a8c3e6 # load x3 with value 0x3ae234b426a8c3e6
sw x3, 0(x2) # store 0x3ae234b426a8c3e6 in memory
flw f21, 0(x2) # load 0x3ae234b426a8c3e6 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f15, f27, f21, f8, dyn # perform operation
fnmadd.s f15, f27, f21, f8, rdn # perform operation
fnmadd.s f15, f27, f21, f8, rmm # perform operation
fnmadd.s f15, f27, f21, f8, rne # perform operation
fnmadd.s f15, f27, f21, f8, rtz # perform operation
fnmadd.s f15, f27, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xd4e29abaf94fb049 # load x3 with value 0xd4e29abaf94fb049
sw x3, 0(x2) # store 0xd4e29abaf94fb049 in memory
flw f7, 0(x2) # load 0xd4e29abaf94fb049 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmadd.s f13, f11, f7, f20, dyn # perform operation
fnmadd.s f13, f11, f7, f20, rdn # perform operation
fnmadd.s f13, f11, f7, f20, rmm # perform operation
fnmadd.s f13, f11, f7, f20, rne # perform operation
fnmadd.s f13, f11, f7, f20, rtz # perform operation
fnmadd.s f13, f11, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x10d1f7404b4ce91d # load x3 with value 0x10d1f7404b4ce91d
sw x3, 0(x2) # store 0x10d1f7404b4ce91d in memory
flw f1, 0(x2) # load 0x10d1f7404b4ce91d from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmadd.s f13, f22, f1, f5, dyn # perform operation
fnmadd.s f13, f22, f1, f5, rdn # perform operation
fnmadd.s f13, f22, f1, f5, rmm # perform operation
fnmadd.s f13, f22, f1, f5, rne # perform operation
fnmadd.s f13, f22, f1, f5, rtz # perform operation
fnmadd.s f13, f22, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x18f40a927592f09a # load x3 with value 0x18f40a927592f09a
sw x3, 0(x2) # store 0x18f40a927592f09a in memory
flw f25, 0(x2) # load 0x18f40a927592f09a from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f2, f16, f25, f30, dyn # perform operation
fnmadd.s f2, f16, f25, f30, rdn # perform operation
fnmadd.s f2, f16, f25, f30, rmm # perform operation
fnmadd.s f2, f16, f25, f30, rne # perform operation
fnmadd.s f2, f16, f25, f30, rtz # perform operation
fnmadd.s f2, f16, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xdd0640e162470302 # load x3 with value 0xdd0640e162470302
sw x3, 0(x2) # store 0xdd0640e162470302 in memory
flw f7, 0(x2) # load 0xdd0640e162470302 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmadd.s f19, f11, f7, f28, dyn # perform operation
fnmadd.s f19, f11, f7, f28, rdn # perform operation
fnmadd.s f19, f11, f7, f28, rmm # perform operation
fnmadd.s f19, f11, f7, f28, rne # perform operation
fnmadd.s f19, f11, f7, f28, rtz # perform operation
fnmadd.s f19, f11, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x5261fe5da556ad13 # load x3 with value 0x5261fe5da556ad13
sw x3, 0(x2) # store 0x5261fe5da556ad13 in memory
flw f17, 0(x2) # load 0x5261fe5da556ad13 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f2, f28, f17, f13, dyn # perform operation
fnmadd.s f2, f28, f17, f13, rdn # perform operation
fnmadd.s f2, f28, f17, f13, rmm # perform operation
fnmadd.s f2, f28, f17, f13, rne # perform operation
fnmadd.s f2, f28, f17, f13, rtz # perform operation
fnmadd.s f2, f28, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x4acfc7868ff624da # load x3 with value 0x4acfc7868ff624da
sw x3, 0(x2) # store 0x4acfc7868ff624da in memory
flw f2, 0(x2) # load 0x4acfc7868ff624da from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmadd.s f11, f31, f2, f17, dyn # perform operation
fnmadd.s f11, f31, f2, f17, rdn # perform operation
fnmadd.s f11, f31, f2, f17, rmm # perform operation
fnmadd.s f11, f31, f2, f17, rne # perform operation
fnmadd.s f11, f31, f2, f17, rtz # perform operation
fnmadd.s f11, f31, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f31, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f31, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f31, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f31, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f31, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xb1192bc86775e17 # load x3 with value 0xb1192bc86775e17
sw x3, 0(x2) # store 0xb1192bc86775e17 in memory
flw f12, 0(x2) # load 0xb1192bc86775e17 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmadd.s f30, f26, f12, f5, dyn # perform operation
fnmadd.s f30, f26, f12, f5, rdn # perform operation
fnmadd.s f30, f26, f12, f5, rmm # perform operation
fnmadd.s f30, f26, f12, f5, rne # perform operation
fnmadd.s f30, f26, f12, f5, rtz # perform operation
fnmadd.s f30, f26, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x27783da7e944b921 # load x3 with value 0x27783da7e944b921
sw x3, 0(x2) # store 0x27783da7e944b921 in memory
flw f1, 0(x2) # load 0x27783da7e944b921 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f15, f29, f1, f9, dyn # perform operation
fnmadd.s f15, f29, f1, f9, rdn # perform operation
fnmadd.s f15, f29, f1, f9, rmm # perform operation
fnmadd.s f15, f29, f1, f9, rne # perform operation
fnmadd.s f15, f29, f1, f9, rtz # perform operation
fnmadd.s f15, f29, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xcb6c9ff6f22dac12 # load x3 with value 0xcb6c9ff6f22dac12
sw x3, 0(x2) # store 0xcb6c9ff6f22dac12 in memory
flw f12, 0(x2) # load 0xcb6c9ff6f22dac12 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f22, f24, f12, f20, dyn # perform operation
fnmadd.s f22, f24, f12, f20, rdn # perform operation
fnmadd.s f22, f24, f12, f20, rmm # perform operation
fnmadd.s f22, f24, f12, f20, rne # perform operation
fnmadd.s f22, f24, f12, f20, rtz # perform operation
fnmadd.s f22, f24, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x75b0f8f135b8d5a2 # load x3 with value 0x75b0f8f135b8d5a2
sw x3, 0(x2) # store 0x75b0f8f135b8d5a2 in memory
flw f15, 0(x2) # load 0x75b0f8f135b8d5a2 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f23, f6, f15, f16, dyn # perform operation
fnmadd.s f23, f6, f15, f16, rdn # perform operation
fnmadd.s f23, f6, f15, f16, rmm # perform operation
fnmadd.s f23, f6, f15, f16, rne # perform operation
fnmadd.s f23, f6, f15, f16, rtz # perform operation
fnmadd.s f23, f6, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x410c6e7442361067 # load x3 with value 0x410c6e7442361067
sw x3, 0(x2) # store 0x410c6e7442361067 in memory
flw f3, 0(x2) # load 0x410c6e7442361067 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmadd.s f19, f20, f3, f21, dyn # perform operation
fnmadd.s f19, f20, f3, f21, rdn # perform operation
fnmadd.s f19, f20, f3, f21, rmm # perform operation
fnmadd.s f19, f20, f3, f21, rne # perform operation
fnmadd.s f19, f20, f3, f21, rtz # perform operation
fnmadd.s f19, f20, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x564107afc094c996 # load x3 with value 0x564107afc094c996
sw x3, 0(x2) # store 0x564107afc094c996 in memory
flw f17, 0(x2) # load 0x564107afc094c996 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmadd.s f6, f13, f17, f12, dyn # perform operation
fnmadd.s f6, f13, f17, f12, rdn # perform operation
fnmadd.s f6, f13, f17, f12, rmm # perform operation
fnmadd.s f6, f13, f17, f12, rne # perform operation
fnmadd.s f6, f13, f17, f12, rtz # perform operation
fnmadd.s f6, f13, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x3e3be513a2cb2290 # load x3 with value 0x3e3be513a2cb2290
sw x3, 0(x2) # store 0x3e3be513a2cb2290 in memory
flw f14, 0(x2) # load 0x3e3be513a2cb2290 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.s f3, f7, f14, f15, dyn # perform operation
fnmadd.s f3, f7, f14, f15, rdn # perform operation
fnmadd.s f3, f7, f14, f15, rmm # perform operation
fnmadd.s f3, f7, f14, f15, rne # perform operation
fnmadd.s f3, f7, f14, f15, rtz # perform operation
fnmadd.s f3, f7, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f7, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x137ee601cde25c72 # load x3 with value 0x137ee601cde25c72
sw x3, 0(x2) # store 0x137ee601cde25c72 in memory
flw f31, 0(x2) # load 0x137ee601cde25c72 from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmadd.s f29, f6, f31, f19, dyn # perform operation
fnmadd.s f29, f6, f31, f19, rdn # perform operation
fnmadd.s f29, f6, f31, f19, rmm # perform operation
fnmadd.s f29, f6, f31, f19, rne # perform operation
fnmadd.s f29, f6, f31, f19, rtz # perform operation
fnmadd.s f29, f6, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x23c9a62ba632e8fc # load x3 with value 0x23c9a62ba632e8fc
sw x3, 0(x2) # store 0x23c9a62ba632e8fc in memory
flw f10, 0(x2) # load 0x23c9a62ba632e8fc from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmadd.s f31, f8, f10, f12, dyn # perform operation
fnmadd.s f31, f8, f10, f12, rdn # perform operation
fnmadd.s f31, f8, f10, f12, rmm # perform operation
fnmadd.s f31, f8, f10, f12, rne # perform operation
fnmadd.s f31, f8, f10, f12, rtz # perform operation
fnmadd.s f31, f8, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f8, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x45025aa65db3d278 # load x3 with value 0x45025aa65db3d278
sw x3, 0(x2) # store 0x45025aa65db3d278 in memory
flw f12, 0(x2) # load 0x45025aa65db3d278 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmadd.s f30, f10, f12, f8, dyn # perform operation
fnmadd.s f30, f10, f12, f8, rdn # perform operation
fnmadd.s f30, f10, f12, f8, rmm # perform operation
fnmadd.s f30, f10, f12, f8, rne # perform operation
fnmadd.s f30, f10, f12, f8, rtz # perform operation
fnmadd.s f30, f10, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f10, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xceafc9996d437cc9 # load x3 with value 0xceafc9996d437cc9
sw x3, 0(x2) # store 0xceafc9996d437cc9 in memory
flw f30, 0(x2) # load 0xceafc9996d437cc9 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmadd.s f6, f25, f30, f2, dyn # perform operation
fnmadd.s f6, f25, f30, f2, rdn # perform operation
fnmadd.s f6, f25, f30, f2, rmm # perform operation
fnmadd.s f6, f25, f30, f2, rne # perform operation
fnmadd.s f6, f25, f30, f2, rtz # perform operation
fnmadd.s f6, f25, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xeb267b8724bd06a3 # load x3 with value 0xeb267b8724bd06a3
sw x3, 0(x2) # store 0xeb267b8724bd06a3 in memory
flw f8, 0(x2) # load 0xeb267b8724bd06a3 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fnmadd.s f13, f10, f8, f17, dyn # perform operation
fnmadd.s f13, f10, f8, f17, rdn # perform operation
fnmadd.s f13, f10, f8, f17, rmm # perform operation
fnmadd.s f13, f10, f8, f17, rne # perform operation
fnmadd.s f13, f10, f8, f17, rtz # perform operation
fnmadd.s f13, f10, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f10, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x1cc0131de14863cb # load x3 with value 0x1cc0131de14863cb
sw x3, 0(x2) # store 0x1cc0131de14863cb in memory
flw f9, 0(x2) # load 0x1cc0131de14863cb from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fnmadd.s f25, f26, f9, f2, dyn # perform operation
fnmadd.s f25, f26, f9, f2, rdn # perform operation
fnmadd.s f25, f26, f9, f2, rmm # perform operation
fnmadd.s f25, f26, f9, f2, rne # perform operation
fnmadd.s f25, f26, f9, f2, rtz # perform operation
fnmadd.s f25, f26, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x927fd28ede7c83fd # load x3 with value 0x927fd28ede7c83fd
sw x3, 0(x2) # store 0x927fd28ede7c83fd in memory
flw f20, 0(x2) # load 0x927fd28ede7c83fd from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmadd.s f24, f14, f20, f21, dyn # perform operation
fnmadd.s f24, f14, f20, f21, rdn # perform operation
fnmadd.s f24, f14, f20, f21, rmm # perform operation
fnmadd.s f24, f14, f20, f21, rne # perform operation
fnmadd.s f24, f14, f20, f21, rtz # perform operation
fnmadd.s f24, f14, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f14, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f14, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f14, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f14, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f14, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x720a16dcb74d8702 # load x3 with value 0x720a16dcb74d8702
sw x3, 0(x2) # store 0x720a16dcb74d8702 in memory
flw f7, 0(x2) # load 0x720a16dcb74d8702 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fnmadd.s f9, f23, f7, f8, dyn # perform operation
fnmadd.s f9, f23, f7, f8, rdn # perform operation
fnmadd.s f9, f23, f7, f8, rmm # perform operation
fnmadd.s f9, f23, f7, f8, rne # perform operation
fnmadd.s f9, f23, f7, f8, rtz # perform operation
fnmadd.s f9, f23, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f23, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x99869036e0d29bfe # load x3 with value 0x99869036e0d29bfe
sw x3, 0(x2) # store 0x99869036e0d29bfe in memory
flw f28, 0(x2) # load 0x99869036e0d29bfe from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fnmadd.s f23, f7, f28, f29, dyn # perform operation
fnmadd.s f23, f7, f28, f29, rdn # perform operation
fnmadd.s f23, f7, f28, f29, rmm # perform operation
fnmadd.s f23, f7, f28, f29, rne # perform operation
fnmadd.s f23, f7, f28, f29, rtz # perform operation
fnmadd.s f23, f7, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x72082093055c9806 # load x3 with value 0x72082093055c9806
sw x3, 0(x2) # store 0x72082093055c9806 in memory
flw f10, 0(x2) # load 0x72082093055c9806 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmadd.s f14, f12, f10, f17, dyn # perform operation
fnmadd.s f14, f12, f10, f17, rdn # perform operation
fnmadd.s f14, f12, f10, f17, rmm # perform operation
fnmadd.s f14, f12, f10, f17, rne # perform operation
fnmadd.s f14, f12, f10, f17, rtz # perform operation
fnmadd.s f14, f12, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f12, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x85f3182b820a3865 # load x3 with value 0x85f3182b820a3865
sw x3, 0(x2) # store 0x85f3182b820a3865 in memory
flw f26, 0(x2) # load 0x85f3182b820a3865 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmadd.s f11, f15, f26, f1, dyn # perform operation
fnmadd.s f11, f15, f26, f1, rdn # perform operation
fnmadd.s f11, f15, f26, f1, rmm # perform operation
fnmadd.s f11, f15, f26, f1, rne # perform operation
fnmadd.s f11, f15, f26, f1, rtz # perform operation
fnmadd.s f11, f15, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x2d99de50d3ea7d93 # load x3 with value 0x2d99de50d3ea7d93
sw x3, 0(x2) # store 0x2d99de50d3ea7d93 in memory
flw f31, 0(x2) # load 0x2d99de50d3ea7d93 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.s f2, f22, f31, f7, dyn # perform operation
fnmadd.s f2, f22, f31, f7, rdn # perform operation
fnmadd.s f2, f22, f31, f7, rmm # perform operation
fnmadd.s f2, f22, f31, f7, rne # perform operation
fnmadd.s f2, f22, f31, f7, rtz # perform operation
fnmadd.s f2, f22, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x52cb278be5cf8760 # load x3 with value 0x52cb278be5cf8760
sw x3, 0(x2) # store 0x52cb278be5cf8760 in memory
flw f25, 0(x2) # load 0x52cb278be5cf8760 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmadd.s f26, f27, f25, f14, dyn # perform operation
fnmadd.s f26, f27, f25, f14, rdn # perform operation
fnmadd.s f26, f27, f25, f14, rmm # perform operation
fnmadd.s f26, f27, f25, f14, rne # perform operation
fnmadd.s f26, f27, f25, f14, rtz # perform operation
fnmadd.s f26, f27, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f25, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x4936877fb8844e7a # load x3 with value 0x4936877fb8844e7a
sw x3, 0(x2) # store 0x4936877fb8844e7a in memory
flw f18, 0(x2) # load 0x4936877fb8844e7a from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmadd.s f7, f24, f18, f12, dyn # perform operation
fnmadd.s f7, f24, f18, f12, rdn # perform operation
fnmadd.s f7, f24, f18, f12, rmm # perform operation
fnmadd.s f7, f24, f18, f12, rne # perform operation
fnmadd.s f7, f24, f18, f12, rtz # perform operation
fnmadd.s f7, f24, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x677877cb411b54e5 # load x3 with value 0x677877cb411b54e5
sw x3, 0(x2) # store 0x677877cb411b54e5 in memory
flw f28, 0(x2) # load 0x677877cb411b54e5 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fnmadd.s f14, f7, f28, f19, dyn # perform operation
fnmadd.s f14, f7, f28, f19, rdn # perform operation
fnmadd.s f14, f7, f28, f19, rmm # perform operation
fnmadd.s f14, f7, f28, f19, rne # perform operation
fnmadd.s f14, f7, f28, f19, rtz # perform operation
fnmadd.s f14, f7, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xc30ca07d1bdf1fe9 # load x3 with value 0xc30ca07d1bdf1fe9
sw x3, 0(x2) # store 0xc30ca07d1bdf1fe9 in memory
flw f10, 0(x2) # load 0xc30ca07d1bdf1fe9 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f17, f9, f10, f27, dyn # perform operation
fnmadd.s f17, f9, f10, f27, rdn # perform operation
fnmadd.s f17, f9, f10, f27, rmm # perform operation
fnmadd.s f17, f9, f10, f27, rne # perform operation
fnmadd.s f17, f9, f10, f27, rtz # perform operation
fnmadd.s f17, f9, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x1c8762b865670aae # load x3 with value 0x1c8762b865670aae
sw x3, 0(x2) # store 0x1c8762b865670aae in memory
flw f23, 0(x2) # load 0x1c8762b865670aae from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmadd.s f10, f31, f23, f29, dyn # perform operation
fnmadd.s f10, f31, f23, f29, rdn # perform operation
fnmadd.s f10, f31, f23, f29, rmm # perform operation
fnmadd.s f10, f31, f23, f29, rne # perform operation
fnmadd.s f10, f31, f23, f29, rtz # perform operation
fnmadd.s f10, f31, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f31, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f31, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f31, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f31, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f31, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x69d385b8e10a1d08 # load x3 with value 0x69d385b8e10a1d08
sw x3, 0(x2) # store 0x69d385b8e10a1d08 in memory
flw f27, 0(x2) # load 0x69d385b8e10a1d08 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmadd.s f10, f9, f27, f26, dyn # perform operation
fnmadd.s f10, f9, f27, f26, rdn # perform operation
fnmadd.s f10, f9, f27, f26, rmm # perform operation
fnmadd.s f10, f9, f27, f26, rne # perform operation
fnmadd.s f10, f9, f27, f26, rtz # perform operation
fnmadd.s f10, f9, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f9, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xc854f7e31c05679c # load x3 with value 0xc854f7e31c05679c
sw x3, 0(x2) # store 0xc854f7e31c05679c in memory
flw f21, 0(x2) # load 0xc854f7e31c05679c from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmadd.s f24, f26, f21, f13, dyn # perform operation
fnmadd.s f24, f26, f21, f13, rdn # perform operation
fnmadd.s f24, f26, f21, f13, rmm # perform operation
fnmadd.s f24, f26, f21, f13, rne # perform operation
fnmadd.s f24, f26, f21, f13, rtz # perform operation
fnmadd.s f24, f26, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xa0d9ccc4ef53fa90 # load x3 with value 0xa0d9ccc4ef53fa90
sw x3, 0(x2) # store 0xa0d9ccc4ef53fa90 in memory
flw f23, 0(x2) # load 0xa0d9ccc4ef53fa90 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmadd.s f25, f6, f23, f5, dyn # perform operation
fnmadd.s f25, f6, f23, f5, rdn # perform operation
fnmadd.s f25, f6, f23, f5, rmm # perform operation
fnmadd.s f25, f6, f23, f5, rne # perform operation
fnmadd.s f25, f6, f23, f5, rtz # perform operation
fnmadd.s f25, f6, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xaf8cb683c93bdfb4 # load x3 with value 0xaf8cb683c93bdfb4
sw x3, 0(x2) # store 0xaf8cb683c93bdfb4 in memory
flw f9, 0(x2) # load 0xaf8cb683c93bdfb4 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fnmadd.s f22, f8, f9, f26, dyn # perform operation
fnmadd.s f22, f8, f9, f26, rdn # perform operation
fnmadd.s f22, f8, f9, f26, rmm # perform operation
fnmadd.s f22, f8, f9, f26, rne # perform operation
fnmadd.s f22, f8, f9, f26, rtz # perform operation
fnmadd.s f22, f8, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xa730d4294d9124cb # load x3 with value 0xa730d4294d9124cb
sw x3, 0(x2) # store 0xa730d4294d9124cb in memory
flw f12, 0(x2) # load 0xa730d4294d9124cb from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmadd.s f15, f23, f12, f29, dyn # perform operation
fnmadd.s f15, f23, f12, f29, rdn # perform operation
fnmadd.s f15, f23, f12, f29, rmm # perform operation
fnmadd.s f15, f23, f12, f29, rne # perform operation
fnmadd.s f15, f23, f12, f29, rtz # perform operation
fnmadd.s f15, f23, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f23, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f23, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f23, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f23, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f23, f12, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x5f8a82112d09ba16 # load x3 with value 0x5f8a82112d09ba16
sw x3, 0(x2) # store 0x5f8a82112d09ba16 in memory
flw f19, 0(x2) # load 0x5f8a82112d09ba16 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f26, f20, f19, f28, dyn # perform operation
fnmadd.s f26, f20, f19, f28, rdn # perform operation
fnmadd.s f26, f20, f19, f28, rmm # perform operation
fnmadd.s f26, f20, f19, f28, rne # perform operation
fnmadd.s f26, f20, f19, f28, rtz # perform operation
fnmadd.s f26, f20, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xd24763bdc13a62 # load x3 with value 0xd24763bdc13a62
sw x3, 0(x2) # store 0xd24763bdc13a62 in memory
flw f7, 0(x2) # load 0xd24763bdc13a62 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f31, f27, f7, f20, dyn # perform operation
fnmadd.s f31, f27, f7, f20, rdn # perform operation
fnmadd.s f31, f27, f7, f20, rmm # perform operation
fnmadd.s f31, f27, f7, f20, rne # perform operation
fnmadd.s f31, f27, f7, f20, rtz # perform operation
fnmadd.s f31, f27, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x29e87ed49450552f # load x3 with value 0x29e87ed49450552f
sw x3, 0(x2) # store 0x29e87ed49450552f in memory
flw f26, 0(x2) # load 0x29e87ed49450552f from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmadd.s f9, f24, f26, f19, dyn # perform operation
fnmadd.s f9, f24, f26, f19, rdn # perform operation
fnmadd.s f9, f24, f26, f19, rmm # perform operation
fnmadd.s f9, f24, f26, f19, rne # perform operation
fnmadd.s f9, f24, f26, f19, rtz # perform operation
fnmadd.s f9, f24, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x891c6754bf14a0fe # load x3 with value 0x891c6754bf14a0fe
sw x3, 0(x2) # store 0x891c6754bf14a0fe in memory
flw f12, 0(x2) # load 0x891c6754bf14a0fe from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fnmadd.s f17, f5, f12, f8, dyn # perform operation
fnmadd.s f17, f5, f12, f8, rdn # perform operation
fnmadd.s f17, f5, f12, f8, rmm # perform operation
fnmadd.s f17, f5, f12, f8, rne # perform operation
fnmadd.s f17, f5, f12, f8, rtz # perform operation
fnmadd.s f17, f5, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f5, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x558472da6dd389ff # load x3 with value 0x558472da6dd389ff
sw x3, 0(x2) # store 0x558472da6dd389ff in memory
flw f14, 0(x2) # load 0x558472da6dd389ff from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmadd.s f29, f3, f14, f25, dyn # perform operation
fnmadd.s f29, f3, f14, f25, rdn # perform operation
fnmadd.s f29, f3, f14, f25, rmm # perform operation
fnmadd.s f29, f3, f14, f25, rne # perform operation
fnmadd.s f29, f3, f14, f25, rtz # perform operation
fnmadd.s f29, f3, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x9ed7d8cb1eda7556 # load x3 with value 0x9ed7d8cb1eda7556
sw x3, 0(x2) # store 0x9ed7d8cb1eda7556 in memory
flw f3, 0(x2) # load 0x9ed7d8cb1eda7556 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f17, f20, f3, f10, dyn # perform operation
fnmadd.s f17, f20, f3, f10, rdn # perform operation
fnmadd.s f17, f20, f3, f10, rmm # perform operation
fnmadd.s f17, f20, f3, f10, rne # perform operation
fnmadd.s f17, f20, f3, f10, rtz # perform operation
fnmadd.s f17, f20, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x1069fd27f529017d # load x3 with value 0x1069fd27f529017d
sw x3, 0(x2) # store 0x1069fd27f529017d in memory
flw f27, 0(x2) # load 0x1069fd27f529017d from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmadd.s f24, f10, f27, f21, dyn # perform operation
fnmadd.s f24, f10, f27, f21, rdn # perform operation
fnmadd.s f24, f10, f27, f21, rmm # perform operation
fnmadd.s f24, f10, f27, f21, rne # perform operation
fnmadd.s f24, f10, f27, f21, rtz # perform operation
fnmadd.s f24, f10, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f10, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f10, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f10, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f10, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f10, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x927e6394962781bc # load x3 with value 0x927e6394962781bc
sw x3, 0(x2) # store 0x927e6394962781bc in memory
flw f1, 0(x2) # load 0x927e6394962781bc from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fnmadd.s f20, f6, f1, f7, dyn # perform operation
fnmadd.s f20, f6, f1, f7, rdn # perform operation
fnmadd.s f20, f6, f1, f7, rmm # perform operation
fnmadd.s f20, f6, f1, f7, rne # perform operation
fnmadd.s f20, f6, f1, f7, rtz # perform operation
fnmadd.s f20, f6, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xa3fc80272ce6b819 # load x3 with value 0xa3fc80272ce6b819
sw x3, 0(x2) # store 0xa3fc80272ce6b819 in memory
flw f16, 0(x2) # load 0xa3fc80272ce6b819 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmadd.s f8, f23, f16, f26, dyn # perform operation
fnmadd.s f8, f23, f16, f26, rdn # perform operation
fnmadd.s f8, f23, f16, f26, rmm # perform operation
fnmadd.s f8, f23, f16, f26, rne # perform operation
fnmadd.s f8, f23, f16, f26, rtz # perform operation
fnmadd.s f8, f23, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0xc0d99a2906910acc # load x3 with value 0xc0d99a2906910acc
sw x3, 0(x2) # store 0xc0d99a2906910acc in memory
flw f8, 0(x2) # load 0xc0d99a2906910acc from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmadd.s f20, f13, f8, f18, dyn # perform operation
fnmadd.s f20, f13, f8, f18, rdn # perform operation
fnmadd.s f20, f13, f8, f18, rmm # perform operation
fnmadd.s f20, f13, f8, f18, rne # perform operation
fnmadd.s f20, f13, f8, f18, rtz # perform operation
fnmadd.s f20, f13, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x3a66235f4dd38523 # load x3 with value 0x3a66235f4dd38523
sw x3, 0(x2) # store 0x3a66235f4dd38523 in memory
flw f12, 0(x2) # load 0x3a66235f4dd38523 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f21, f31, f12, f8, dyn # perform operation
fnmadd.s f21, f31, f12, f8, rdn # perform operation
fnmadd.s f21, f31, f12, f8, rmm # perform operation
fnmadd.s f21, f31, f12, f8, rne # perform operation
fnmadd.s f21, f31, f12, f8, rtz # perform operation
fnmadd.s f21, f31, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x863828e857069edf # load x3 with value 0x863828e857069edf
sw x3, 0(x2) # store 0x863828e857069edf in memory
flw f12, 0(x2) # load 0x863828e857069edf from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fnmadd.s f25, f29, f12, f21, dyn # perform operation
fnmadd.s f25, f29, f12, f21, rdn # perform operation
fnmadd.s f25, f29, f12, f21, rmm # perform operation
fnmadd.s f25, f29, f12, f21, rne # perform operation
fnmadd.s f25, f29, f12, f21, rtz # perform operation
fnmadd.s f25, f29, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f29, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x84da5142507f695b # load x3 with value 0x84da5142507f695b
sw x3, 0(x2) # store 0x84da5142507f695b in memory
flw f28, 0(x2) # load 0x84da5142507f695b from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmadd.s f17, f7, f28, f25, dyn # perform operation
fnmadd.s f17, f7, f28, f25, rdn # perform operation
fnmadd.s f17, f7, f28, f25, rmm # perform operation
fnmadd.s f17, f7, f28, f25, rne # perform operation
fnmadd.s f17, f7, f28, f25, rtz # perform operation
fnmadd.s f17, f7, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x4f96466a6aa1b3cd # load x3 with value 0x4f96466a6aa1b3cd
sw x3, 0(x2) # store 0x4f96466a6aa1b3cd in memory
flw f22, 0(x2) # load 0x4f96466a6aa1b3cd from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fnmadd.s f16, f17, f22, f5, dyn # perform operation
fnmadd.s f16, f17, f22, f5, rdn # perform operation
fnmadd.s f16, f17, f22, f5, rmm # perform operation
fnmadd.s f16, f17, f22, f5, rne # perform operation
fnmadd.s f16, f17, f22, f5, rtz # perform operation
fnmadd.s f16, f17, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x274968e3e6af95a9 # load x3 with value 0x274968e3e6af95a9
sw x3, 0(x2) # store 0x274968e3e6af95a9 in memory
flw f2, 0(x2) # load 0x274968e3e6af95a9 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmadd.s f24, f19, f2, f6, dyn # perform operation
fnmadd.s f24, f19, f2, f6, rdn # perform operation
fnmadd.s f24, f19, f2, f6, rmm # perform operation
fnmadd.s f24, f19, f2, f6, rne # perform operation
fnmadd.s f24, f19, f2, f6, rtz # perform operation
fnmadd.s f24, f19, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x9b5c8aeba9054e8f # load x3 with value 0x9b5c8aeba9054e8f
sw x3, 0(x2) # store 0x9b5c8aeba9054e8f in memory
flw f20, 0(x2) # load 0x9b5c8aeba9054e8f from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmadd.s f25, f11, f20, f23, dyn # perform operation
fnmadd.s f25, f11, f20, f23, rdn # perform operation
fnmadd.s f25, f11, f20, f23, rmm # perform operation
fnmadd.s f25, f11, f20, f23, rne # perform operation
fnmadd.s f25, f11, f20, f23, rtz # perform operation
fnmadd.s f25, f11, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xa698d41569deb9d5 # load x3 with value 0xa698d41569deb9d5
sw x3, 0(x2) # store 0xa698d41569deb9d5 in memory
flw f16, 0(x2) # load 0xa698d41569deb9d5 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f12, f25, f16, f19, dyn # perform operation
fnmadd.s f12, f25, f16, f19, rdn # perform operation
fnmadd.s f12, f25, f16, f19, rmm # perform operation
fnmadd.s f12, f25, f16, f19, rne # perform operation
fnmadd.s f12, f25, f16, f19, rtz # perform operation
fnmadd.s f12, f25, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f25, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f25, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xbbbf3f3c6fbfb92f # load x3 with value 0xbbbf3f3c6fbfb92f
sw x3, 0(x2) # store 0xbbbf3f3c6fbfb92f in memory
flw f21, 0(x2) # load 0xbbbf3f3c6fbfb92f from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f6, f12, f21, f24, dyn # perform operation
fnmadd.s f6, f12, f21, f24, rdn # perform operation
fnmadd.s f6, f12, f21, f24, rmm # perform operation
fnmadd.s f6, f12, f21, f24, rne # perform operation
fnmadd.s f6, f12, f21, f24, rtz # perform operation
fnmadd.s f6, f12, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xfec361b2022e9668 # load x3 with value 0xfec361b2022e9668
sw x3, 0(x2) # store 0xfec361b2022e9668 in memory
flw f17, 0(x2) # load 0xfec361b2022e9668 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fnmadd.s f16, f25, f17, f11, dyn # perform operation
fnmadd.s f16, f25, f17, f11, rdn # perform operation
fnmadd.s f16, f25, f17, f11, rmm # perform operation
fnmadd.s f16, f25, f17, f11, rne # perform operation
fnmadd.s f16, f25, f17, f11, rtz # perform operation
fnmadd.s f16, f25, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xbdafa341681addac # load x3 with value 0xbdafa341681addac
sw x3, 0(x2) # store 0xbdafa341681addac in memory
flw f16, 0(x2) # load 0xbdafa341681addac from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmadd.s f11, f30, f16, f26, dyn # perform operation
fnmadd.s f11, f30, f16, f26, rdn # perform operation
fnmadd.s f11, f30, f16, f26, rmm # perform operation
fnmadd.s f11, f30, f16, f26, rne # perform operation
fnmadd.s f11, f30, f16, f26, rtz # perform operation
fnmadd.s f11, f30, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x3b7b533a1847ceb6 # load x3 with value 0x3b7b533a1847ceb6
sw x3, 0(x2) # store 0x3b7b533a1847ceb6 in memory
flw f12, 0(x2) # load 0x3b7b533a1847ceb6 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fnmadd.s f10, f14, f12, f30, dyn # perform operation
fnmadd.s f10, f14, f12, f30, rdn # perform operation
fnmadd.s f10, f14, f12, f30, rmm # perform operation
fnmadd.s f10, f14, f12, f30, rne # perform operation
fnmadd.s f10, f14, f12, f30, rtz # perform operation
fnmadd.s f10, f14, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x2c89f81457b248c1 # load x3 with value 0x2c89f81457b248c1
sw x3, 0(x2) # store 0x2c89f81457b248c1 in memory
flw f11, 0(x2) # load 0x2c89f81457b248c1 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmadd.s f8, f13, f11, f22, dyn # perform operation
fnmadd.s f8, f13, f11, f22, rdn # perform operation
fnmadd.s f8, f13, f11, f22, rmm # perform operation
fnmadd.s f8, f13, f11, f22, rne # perform operation
fnmadd.s f8, f13, f11, f22, rtz # perform operation
fnmadd.s f8, f13, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x61cb479d7c54d51 # load x3 with value 0x61cb479d7c54d51
sw x3, 0(x2) # store 0x61cb479d7c54d51 in memory
flw f10, 0(x2) # load 0x61cb479d7c54d51 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f20, f22, f10, f19, dyn # perform operation
fnmadd.s f20, f22, f10, f19, rdn # perform operation
fnmadd.s f20, f22, f10, f19, rmm # perform operation
fnmadd.s f20, f22, f10, f19, rne # perform operation
fnmadd.s f20, f22, f10, f19, rtz # perform operation
fnmadd.s f20, f22, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xeb6b5d89f546f8d7 # load x3 with value 0xeb6b5d89f546f8d7
sw x3, 0(x2) # store 0xeb6b5d89f546f8d7 in memory
flw f14, 0(x2) # load 0xeb6b5d89f546f8d7 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmadd.s f7, f19, f14, f6, dyn # perform operation
fnmadd.s f7, f19, f14, f6, rdn # perform operation
fnmadd.s f7, f19, f14, f6, rmm # perform operation
fnmadd.s f7, f19, f14, f6, rne # perform operation
fnmadd.s f7, f19, f14, f6, rtz # perform operation
fnmadd.s f7, f19, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x6a71d3f83931574d # load x3 with value 0x6a71d3f83931574d
sw x3, 0(x2) # store 0x6a71d3f83931574d in memory
flw f31, 0(x2) # load 0x6a71d3f83931574d from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmadd.s f29, f20, f31, f28, dyn # perform operation
fnmadd.s f29, f20, f31, f28, rdn # perform operation
fnmadd.s f29, f20, f31, f28, rmm # perform operation
fnmadd.s f29, f20, f31, f28, rne # perform operation
fnmadd.s f29, f20, f31, f28, rtz # perform operation
fnmadd.s f29, f20, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xb0d9b23c7a29ecbc # load x3 with value 0xb0d9b23c7a29ecbc
sw x3, 0(x2) # store 0xb0d9b23c7a29ecbc in memory
flw f20, 0(x2) # load 0xb0d9b23c7a29ecbc from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmadd.s f13, f1, f20, f31, dyn # perform operation
fnmadd.s f13, f1, f20, f31, rdn # perform operation
fnmadd.s f13, f1, f20, f31, rmm # perform operation
fnmadd.s f13, f1, f20, f31, rne # perform operation
fnmadd.s f13, f1, f20, f31, rtz # perform operation
fnmadd.s f13, f1, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f1, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f1, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x728a98dfafafef3f # load x3 with value 0x728a98dfafafef3f
sw x3, 0(x2) # store 0x728a98dfafafef3f in memory
flw f10, 0(x2) # load 0x728a98dfafafef3f from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fnmadd.s f18, f16, f10, f28, dyn # perform operation
fnmadd.s f18, f16, f10, f28, rdn # perform operation
fnmadd.s f18, f16, f10, f28, rmm # perform operation
fnmadd.s f18, f16, f10, f28, rne # perform operation
fnmadd.s f18, f16, f10, f28, rtz # perform operation
fnmadd.s f18, f16, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x6c0611bbf1aed36b # load x3 with value 0x6c0611bbf1aed36b
sw x3, 0(x2) # store 0x6c0611bbf1aed36b in memory
flw f7, 0(x2) # load 0x6c0611bbf1aed36b from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f17, f20, f7, f24, dyn # perform operation
fnmadd.s f17, f20, f7, f24, rdn # perform operation
fnmadd.s f17, f20, f7, f24, rmm # perform operation
fnmadd.s f17, f20, f7, f24, rne # perform operation
fnmadd.s f17, f20, f7, f24, rtz # perform operation
fnmadd.s f17, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x359575d8a8ecf6e9 # load x3 with value 0x359575d8a8ecf6e9
sw x3, 0(x2) # store 0x359575d8a8ecf6e9 in memory
flw f6, 0(x2) # load 0x359575d8a8ecf6e9 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmadd.s f25, f30, f6, f16, dyn # perform operation
fnmadd.s f25, f30, f6, f16, rdn # perform operation
fnmadd.s f25, f30, f6, f16, rmm # perform operation
fnmadd.s f25, f30, f6, f16, rne # perform operation
fnmadd.s f25, f30, f6, f16, rtz # perform operation
fnmadd.s f25, f30, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x6b168d9218c5c23a # load x3 with value 0x6b168d9218c5c23a
sw x3, 0(x2) # store 0x6b168d9218c5c23a in memory
flw f13, 0(x2) # load 0x6b168d9218c5c23a from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmadd.s f27, f15, f13, f14, dyn # perform operation
fnmadd.s f27, f15, f13, f14, rdn # perform operation
fnmadd.s f27, f15, f13, f14, rmm # perform operation
fnmadd.s f27, f15, f13, f14, rne # perform operation
fnmadd.s f27, f15, f13, f14, rtz # perform operation
fnmadd.s f27, f15, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x38188f7ecd1f20d3 # load x3 with value 0x38188f7ecd1f20d3
sw x3, 0(x2) # store 0x38188f7ecd1f20d3 in memory
flw f17, 0(x2) # load 0x38188f7ecd1f20d3 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmadd.s f31, f11, f17, f2, dyn # perform operation
fnmadd.s f31, f11, f17, f2, rdn # perform operation
fnmadd.s f31, f11, f17, f2, rmm # perform operation
fnmadd.s f31, f11, f17, f2, rne # perform operation
fnmadd.s f31, f11, f17, f2, rtz # perform operation
fnmadd.s f31, f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x212f3130b729f36b # load x3 with value 0x212f3130b729f36b
sw x3, 0(x2) # store 0x212f3130b729f36b in memory
flw f1, 0(x2) # load 0x212f3130b729f36b from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmadd.s f2, f3, f1, f10, dyn # perform operation
fnmadd.s f2, f3, f1, f10, rdn # perform operation
fnmadd.s f2, f3, f1, f10, rmm # perform operation
fnmadd.s f2, f3, f1, f10, rne # perform operation
fnmadd.s f2, f3, f1, f10, rtz # perform operation
fnmadd.s f2, f3, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xef4f05c9463bbf6e # load x3 with value 0xef4f05c9463bbf6e
sw x3, 0(x2) # store 0xef4f05c9463bbf6e in memory
flw f3, 0(x2) # load 0xef4f05c9463bbf6e from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmadd.s f26, f14, f3, f27, dyn # perform operation
fnmadd.s f26, f14, f3, f27, rdn # perform operation
fnmadd.s f26, f14, f3, f27, rmm # perform operation
fnmadd.s f26, f14, f3, f27, rne # perform operation
fnmadd.s f26, f14, f3, f27, rtz # perform operation
fnmadd.s f26, f14, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f14, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xc6bef90854ff595a # load x3 with value 0xc6bef90854ff595a
sw x3, 0(x2) # store 0xc6bef90854ff595a in memory
flw f28, 0(x2) # load 0xc6bef90854ff595a from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.s f29, f20, f28, f6, dyn # perform operation
fnmadd.s f29, f20, f28, f6, rdn # perform operation
fnmadd.s f29, f20, f28, f6, rmm # perform operation
fnmadd.s f29, f20, f28, f6, rne # perform operation
fnmadd.s f29, f20, f28, f6, rtz # perform operation
fnmadd.s f29, f20, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x30789a8be7aff57b # load x3 with value 0x30789a8be7aff57b
sw x3, 0(x2) # store 0x30789a8be7aff57b in memory
flw f20, 0(x2) # load 0x30789a8be7aff57b from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f8, f13, f20, f11, dyn # perform operation
fnmadd.s f8, f13, f20, f11, rdn # perform operation
fnmadd.s f8, f13, f20, f11, rmm # perform operation
fnmadd.s f8, f13, f20, f11, rne # perform operation
fnmadd.s f8, f13, f20, f11, rtz # perform operation
fnmadd.s f8, f13, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x764088ac4af921ba # load x3 with value 0x764088ac4af921ba
sw x3, 0(x2) # store 0x764088ac4af921ba in memory
flw f25, 0(x2) # load 0x764088ac4af921ba from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmadd.s f11, f17, f25, f29, dyn # perform operation
fnmadd.s f11, f17, f25, f29, rdn # perform operation
fnmadd.s f11, f17, f25, f29, rmm # perform operation
fnmadd.s f11, f17, f25, f29, rne # perform operation
fnmadd.s f11, f17, f25, f29, rtz # perform operation
fnmadd.s f11, f17, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f17, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x7634f57656240790 # load x3 with value 0x7634f57656240790
sw x3, 0(x2) # store 0x7634f57656240790 in memory
flw f7, 0(x2) # load 0x7634f57656240790 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fnmadd.s f18, f23, f7, f29, dyn # perform operation
fnmadd.s f18, f23, f7, f29, rdn # perform operation
fnmadd.s f18, f23, f7, f29, rmm # perform operation
fnmadd.s f18, f23, f7, f29, rne # perform operation
fnmadd.s f18, f23, f7, f29, rtz # perform operation
fnmadd.s f18, f23, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f23, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x920838908e6c17f5 # load x3 with value 0x920838908e6c17f5
sw x3, 0(x2) # store 0x920838908e6c17f5 in memory
flw f2, 0(x2) # load 0x920838908e6c17f5 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f3, f5, f2, f27, dyn # perform operation
fnmadd.s f3, f5, f2, f27, rdn # perform operation
fnmadd.s f3, f5, f2, f27, rmm # perform operation
fnmadd.s f3, f5, f2, f27, rne # perform operation
fnmadd.s f3, f5, f2, f27, rtz # perform operation
fnmadd.s f3, f5, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x7814d40ae7d9308e # load x3 with value 0x7814d40ae7d9308e
sw x3, 0(x2) # store 0x7814d40ae7d9308e in memory
flw f26, 0(x2) # load 0x7814d40ae7d9308e from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f14, f5, f26, f22, dyn # perform operation
fnmadd.s f14, f5, f26, f22, rdn # perform operation
fnmadd.s f14, f5, f26, f22, rmm # perform operation
fnmadd.s f14, f5, f26, f22, rne # perform operation
fnmadd.s f14, f5, f26, f22, rtz # perform operation
fnmadd.s f14, f5, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x79c7c0f3679e9ccd # load x3 with value 0x79c7c0f3679e9ccd
sw x3, 0(x2) # store 0x79c7c0f3679e9ccd in memory
flw f7, 0(x2) # load 0x79c7c0f3679e9ccd from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fnmadd.s f9, f18, f7, f22, dyn # perform operation
fnmadd.s f9, f18, f7, f22, rdn # perform operation
fnmadd.s f9, f18, f7, f22, rmm # perform operation
fnmadd.s f9, f18, f7, f22, rne # perform operation
fnmadd.s f9, f18, f7, f22, rtz # perform operation
fnmadd.s f9, f18, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x687fde95bf5a349d # load x3 with value 0x687fde95bf5a349d
sw x3, 0(x2) # store 0x687fde95bf5a349d in memory
flw f21, 0(x2) # load 0x687fde95bf5a349d from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fnmadd.s f23, f30, f21, f10, dyn # perform operation
fnmadd.s f23, f30, f21, f10, rdn # perform operation
fnmadd.s f23, f30, f21, f10, rmm # perform operation
fnmadd.s f23, f30, f21, f10, rne # perform operation
fnmadd.s f23, f30, f21, f10, rtz # perform operation
fnmadd.s f23, f30, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xe545ef473ff361d7 # load x3 with value 0xe545ef473ff361d7
sw x3, 0(x2) # store 0xe545ef473ff361d7 in memory
flw f8, 0(x2) # load 0xe545ef473ff361d7 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmadd.s f21, f23, f8, f12, dyn # perform operation
fnmadd.s f21, f23, f8, f12, rdn # perform operation
fnmadd.s f21, f23, f8, f12, rmm # perform operation
fnmadd.s f21, f23, f8, f12, rne # perform operation
fnmadd.s f21, f23, f8, f12, rtz # perform operation
fnmadd.s f21, f23, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x342c091eba244e9a # load x3 with value 0x342c091eba244e9a
sw x3, 0(x2) # store 0x342c091eba244e9a in memory
flw f26, 0(x2) # load 0x342c091eba244e9a from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fnmadd.s f20, f23, f26, f15, dyn # perform operation
fnmadd.s f20, f23, f26, f15, rdn # perform operation
fnmadd.s f20, f23, f26, f15, rmm # perform operation
fnmadd.s f20, f23, f26, f15, rne # perform operation
fnmadd.s f20, f23, f26, f15, rtz # perform operation
fnmadd.s f20, f23, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x3dbb4348e81149e8 # load x3 with value 0x3dbb4348e81149e8
sw x3, 0(x2) # store 0x3dbb4348e81149e8 in memory
flw f6, 0(x2) # load 0x3dbb4348e81149e8 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmadd.s f16, f22, f6, f21, dyn # perform operation
fnmadd.s f16, f22, f6, f21, rdn # perform operation
fnmadd.s f16, f22, f6, f21, rmm # perform operation
fnmadd.s f16, f22, f6, f21, rne # perform operation
fnmadd.s f16, f22, f6, f21, rtz # perform operation
fnmadd.s f16, f22, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f22, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f22, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x75ebfa60f3fb8192 # load x3 with value 0x75ebfa60f3fb8192
sw x3, 0(x2) # store 0x75ebfa60f3fb8192 in memory
flw f22, 0(x2) # load 0x75ebfa60f3fb8192 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f7, f1, f22, f19, dyn # perform operation
fnmadd.s f7, f1, f22, f19, rdn # perform operation
fnmadd.s f7, f1, f22, f19, rmm # perform operation
fnmadd.s f7, f1, f22, f19, rne # perform operation
fnmadd.s f7, f1, f22, f19, rtz # perform operation
fnmadd.s f7, f1, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xed90196a30feaf9f # load x3 with value 0xed90196a30feaf9f
sw x3, 0(x2) # store 0xed90196a30feaf9f in memory
flw f9, 0(x2) # load 0xed90196a30feaf9f from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.s f22, f13, f9, f10, dyn # perform operation
fnmadd.s f22, f13, f9, f10, rdn # perform operation
fnmadd.s f22, f13, f9, f10, rmm # perform operation
fnmadd.s f22, f13, f9, f10, rne # perform operation
fnmadd.s f22, f13, f9, f10, rtz # perform operation
fnmadd.s f22, f13, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f9, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x2c58713c997d61d6 # load x3 with value 0x2c58713c997d61d6
sw x3, 0(x2) # store 0x2c58713c997d61d6 in memory
flw f19, 0(x2) # load 0x2c58713c997d61d6 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmadd.s f1, f18, f19, f16, dyn # perform operation
fnmadd.s f1, f18, f19, f16, rdn # perform operation
fnmadd.s f1, f18, f19, f16, rmm # perform operation
fnmadd.s f1, f18, f19, f16, rne # perform operation
fnmadd.s f1, f18, f19, f16, rtz # perform operation
fnmadd.s f1, f18, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x997082a0af7ca8a7 # load x3 with value 0x997082a0af7ca8a7
sw x3, 0(x2) # store 0x997082a0af7ca8a7 in memory
flw f6, 0(x2) # load 0x997082a0af7ca8a7 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmadd.s f5, f2, f6, f25, dyn # perform operation
fnmadd.s f5, f2, f6, f25, rdn # perform operation
fnmadd.s f5, f2, f6, f25, rmm # perform operation
fnmadd.s f5, f2, f6, f25, rne # perform operation
fnmadd.s f5, f2, f6, f25, rtz # perform operation
fnmadd.s f5, f2, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xdc99e8b02619e852 # load x3 with value 0xdc99e8b02619e852
sw x3, 0(x2) # store 0xdc99e8b02619e852 in memory
flw f17, 0(x2) # load 0xdc99e8b02619e852 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fnmadd.s f9, f13, f17, f26, dyn # perform operation
fnmadd.s f9, f13, f17, f26, rdn # perform operation
fnmadd.s f9, f13, f17, f26, rmm # perform operation
fnmadd.s f9, f13, f17, f26, rne # perform operation
fnmadd.s f9, f13, f17, f26, rtz # perform operation
fnmadd.s f9, f13, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f13, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f13, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f13, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f13, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f13, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x2e1a02f1d2cf3213 # load x3 with value 0x2e1a02f1d2cf3213
sw x3, 0(x2) # store 0x2e1a02f1d2cf3213 in memory
flw f8, 0(x2) # load 0x2e1a02f1d2cf3213 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmadd.s f24, f15, f8, f21, dyn # perform operation
fnmadd.s f24, f15, f8, f21, rdn # perform operation
fnmadd.s f24, f15, f8, f21, rmm # perform operation
fnmadd.s f24, f15, f8, f21, rne # perform operation
fnmadd.s f24, f15, f8, f21, rtz # perform operation
fnmadd.s f24, f15, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f8, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x32a6fa48d98cb173 # load x3 with value 0x32a6fa48d98cb173
sw x3, 0(x2) # store 0x32a6fa48d98cb173 in memory
flw f5, 0(x2) # load 0x32a6fa48d98cb173 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmadd.s f19, f14, f5, f24, dyn # perform operation
fnmadd.s f19, f14, f5, f24, rdn # perform operation
fnmadd.s f19, f14, f5, f24, rmm # perform operation
fnmadd.s f19, f14, f5, f24, rne # perform operation
fnmadd.s f19, f14, f5, f24, rtz # perform operation
fnmadd.s f19, f14, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x542417e435e5748c # load x3 with value 0x542417e435e5748c
sw x3, 0(x2) # store 0x542417e435e5748c in memory
flw f19, 0(x2) # load 0x542417e435e5748c from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmadd.s f7, f6, f19, f27, dyn # perform operation
fnmadd.s f7, f6, f19, f27, rdn # perform operation
fnmadd.s f7, f6, f19, f27, rmm # perform operation
fnmadd.s f7, f6, f19, f27, rne # perform operation
fnmadd.s f7, f6, f19, f27, rtz # perform operation
fnmadd.s f7, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xa11a5fd832aadb05 # load x3 with value 0xa11a5fd832aadb05
sw x3, 0(x2) # store 0xa11a5fd832aadb05 in memory
flw f15, 0(x2) # load 0xa11a5fd832aadb05 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fnmadd.s f2, f20, f15, f5, dyn # perform operation
fnmadd.s f2, f20, f15, f5, rdn # perform operation
fnmadd.s f2, f20, f15, f5, rmm # perform operation
fnmadd.s f2, f20, f15, f5, rne # perform operation
fnmadd.s f2, f20, f15, f5, rtz # perform operation
fnmadd.s f2, f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0xb5cbc73f82e1095 # load x3 with value 0xb5cbc73f82e1095
sw x3, 0(x2) # store 0xb5cbc73f82e1095 in memory
flw f17, 0(x2) # load 0xb5cbc73f82e1095 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f10, f6, f17, f12, dyn # perform operation
fnmadd.s f10, f6, f17, f12, rdn # perform operation
fnmadd.s f10, f6, f17, f12, rmm # perform operation
fnmadd.s f10, f6, f17, f12, rne # perform operation
fnmadd.s f10, f6, f17, f12, rtz # perform operation
fnmadd.s f10, f6, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0xa5e3ee547860a38 # load x3 with value 0xa5e3ee547860a38
sw x3, 0(x2) # store 0xa5e3ee547860a38 in memory
flw f15, 0(x2) # load 0xa5e3ee547860a38 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmadd.s f7, f23, f15, f16, dyn # perform operation
fnmadd.s f7, f23, f15, f16, rdn # perform operation
fnmadd.s f7, f23, f15, f16, rmm # perform operation
fnmadd.s f7, f23, f15, f16, rne # perform operation
fnmadd.s f7, f23, f15, f16, rtz # perform operation
fnmadd.s f7, f23, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x8ef570e89b903453 # load x3 with value 0x8ef570e89b903453
sw x3, 0(x2) # store 0x8ef570e89b903453 in memory
flw f22, 0(x2) # load 0x8ef570e89b903453 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmadd.s f24, f1, f22, f9, dyn # perform operation
fnmadd.s f24, f1, f22, f9, rdn # perform operation
fnmadd.s f24, f1, f22, f9, rmm # perform operation
fnmadd.s f24, f1, f22, f9, rne # perform operation
fnmadd.s f24, f1, f22, f9, rtz # perform operation
fnmadd.s f24, f1, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f1, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x44fb0970b4bb7d6e # load x3 with value 0x44fb0970b4bb7d6e
sw x3, 0(x2) # store 0x44fb0970b4bb7d6e in memory
flw f3, 0(x2) # load 0x44fb0970b4bb7d6e from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmadd.s f30, f31, f3, f26, dyn # perform operation
fnmadd.s f30, f31, f3, f26, rdn # perform operation
fnmadd.s f30, f31, f3, f26, rmm # perform operation
fnmadd.s f30, f31, f3, f26, rne # perform operation
fnmadd.s f30, f31, f3, f26, rtz # perform operation
fnmadd.s f30, f31, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x157bba44c98ffd75 # load x3 with value 0x157bba44c98ffd75
sw x3, 0(x2) # store 0x157bba44c98ffd75 in memory
flw f29, 0(x2) # load 0x157bba44c98ffd75 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmadd.s f9, f25, f29, f21, dyn # perform operation
fnmadd.s f9, f25, f29, f21, rdn # perform operation
fnmadd.s f9, f25, f29, f21, rmm # perform operation
fnmadd.s f9, f25, f29, f21, rne # perform operation
fnmadd.s f9, f25, f29, f21, rtz # perform operation
fnmadd.s f9, f25, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x8e368b3eb83dec4c # load x3 with value 0x8e368b3eb83dec4c
sw x3, 0(x2) # store 0x8e368b3eb83dec4c in memory
flw f31, 0(x2) # load 0x8e368b3eb83dec4c from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f5, f9, f31, f16, dyn # perform operation
fnmadd.s f5, f9, f31, f16, rdn # perform operation
fnmadd.s f5, f9, f31, f16, rmm # perform operation
fnmadd.s f5, f9, f31, f16, rne # perform operation
fnmadd.s f5, f9, f31, f16, rtz # perform operation
fnmadd.s f5, f9, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x920b4a66c420236b # load x3 with value 0x920b4a66c420236b
sw x3, 0(x2) # store 0x920b4a66c420236b in memory
flw f17, 0(x2) # load 0x920b4a66c420236b from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmadd.s f11, f30, f17, f16, dyn # perform operation
fnmadd.s f11, f30, f17, f16, rdn # perform operation
fnmadd.s f11, f30, f17, f16, rmm # perform operation
fnmadd.s f11, f30, f17, f16, rne # perform operation
fnmadd.s f11, f30, f17, f16, rtz # perform operation
fnmadd.s f11, f30, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xd59ae006dc351428 # load x3 with value 0xd59ae006dc351428
sw x3, 0(x2) # store 0xd59ae006dc351428 in memory
flw f1, 0(x2) # load 0xd59ae006dc351428 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmadd.s f24, f11, f1, f12, dyn # perform operation
fnmadd.s f24, f11, f1, f12, rdn # perform operation
fnmadd.s f24, f11, f1, f12, rmm # perform operation
fnmadd.s f24, f11, f1, f12, rne # perform operation
fnmadd.s f24, f11, f1, f12, rtz # perform operation
fnmadd.s f24, f11, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f11, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f11, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x119fcc34169f9e72 # load x3 with value 0x119fcc34169f9e72
sw x3, 0(x2) # store 0x119fcc34169f9e72 in memory
flw f1, 0(x2) # load 0x119fcc34169f9e72 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.s f16, f19, f1, f31, dyn # perform operation
fnmadd.s f16, f19, f1, f31, rdn # perform operation
fnmadd.s f16, f19, f1, f31, rmm # perform operation
fnmadd.s f16, f19, f1, f31, rne # perform operation
fnmadd.s f16, f19, f1, f31, rtz # perform operation
fnmadd.s f16, f19, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x5942940cd6b7261c # load x3 with value 0x5942940cd6b7261c
sw x3, 0(x2) # store 0x5942940cd6b7261c in memory
flw f6, 0(x2) # load 0x5942940cd6b7261c from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmadd.s f5, f10, f6, f17, dyn # perform operation
fnmadd.s f5, f10, f6, f17, rdn # perform operation
fnmadd.s f5, f10, f6, f17, rmm # perform operation
fnmadd.s f5, f10, f6, f17, rne # perform operation
fnmadd.s f5, f10, f6, f17, rtz # perform operation
fnmadd.s f5, f10, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f10, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x11f3e28a5a1d44f2 # load x3 with value 0x11f3e28a5a1d44f2
sw x3, 0(x2) # store 0x11f3e28a5a1d44f2 in memory
flw f1, 0(x2) # load 0x11f3e28a5a1d44f2 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmadd.s f18, f16, f1, f26, dyn # perform operation
fnmadd.s f18, f16, f1, f26, rdn # perform operation
fnmadd.s f18, f16, f1, f26, rmm # perform operation
fnmadd.s f18, f16, f1, f26, rne # perform operation
fnmadd.s f18, f16, f1, f26, rtz # perform operation
fnmadd.s f18, f16, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xdc942a7e99c70f62 # load x3 with value 0xdc942a7e99c70f62
sw x3, 0(x2) # store 0xdc942a7e99c70f62 in memory
flw f23, 0(x2) # load 0xdc942a7e99c70f62 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f26, f8, f23, f20, dyn # perform operation
fnmadd.s f26, f8, f23, f20, rdn # perform operation
fnmadd.s f26, f8, f23, f20, rmm # perform operation
fnmadd.s f26, f8, f23, f20, rne # perform operation
fnmadd.s f26, f8, f23, f20, rtz # perform operation
fnmadd.s f26, f8, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f8, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x5829ae3057a72313 # load x3 with value 0x5829ae3057a72313
sw x3, 0(x2) # store 0x5829ae3057a72313 in memory
flw f12, 0(x2) # load 0x5829ae3057a72313 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fnmadd.s f16, f8, f12, f30, dyn # perform operation
fnmadd.s f16, f8, f12, f30, rdn # perform operation
fnmadd.s f16, f8, f12, f30, rmm # perform operation
fnmadd.s f16, f8, f12, f30, rne # perform operation
fnmadd.s f16, f8, f12, f30, rtz # perform operation
fnmadd.s f16, f8, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xf0c7eb6640e1efc0 # load x3 with value 0xf0c7eb6640e1efc0
sw x3, 0(x2) # store 0xf0c7eb6640e1efc0 in memory
flw f5, 0(x2) # load 0xf0c7eb6640e1efc0 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fnmadd.s f19, f3, f5, f1, dyn # perform operation
fnmadd.s f19, f3, f5, f1, rdn # perform operation
fnmadd.s f19, f3, f5, f1, rmm # perform operation
fnmadd.s f19, f3, f5, f1, rne # perform operation
fnmadd.s f19, f3, f5, f1, rtz # perform operation
fnmadd.s f19, f3, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x57084e2453889c # load x3 with value 0x57084e2453889c
sw x3, 0(x2) # store 0x57084e2453889c in memory
flw f16, 0(x2) # load 0x57084e2453889c from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fnmadd.s f1, f11, f16, f7, dyn # perform operation
fnmadd.s f1, f11, f16, f7, rdn # perform operation
fnmadd.s f1, f11, f16, f7, rmm # perform operation
fnmadd.s f1, f11, f16, f7, rne # perform operation
fnmadd.s f1, f11, f16, f7, rtz # perform operation
fnmadd.s f1, f11, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x79088e1a09d189a7 # load x3 with value 0x79088e1a09d189a7
sw x3, 0(x2) # store 0x79088e1a09d189a7 in memory
flw f15, 0(x2) # load 0x79088e1a09d189a7 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f31, f5, f15, f28, dyn # perform operation
fnmadd.s f31, f5, f15, f28, rdn # perform operation
fnmadd.s f31, f5, f15, f28, rmm # perform operation
fnmadd.s f31, f5, f15, f28, rne # perform operation
fnmadd.s f31, f5, f15, f28, rtz # perform operation
fnmadd.s f31, f5, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x8cfc51cdc41fd032 # load x3 with value 0x8cfc51cdc41fd032
sw x3, 0(x2) # store 0x8cfc51cdc41fd032 in memory
flw f22, 0(x2) # load 0x8cfc51cdc41fd032 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmadd.s f5, f7, f22, f30, dyn # perform operation
fnmadd.s f5, f7, f22, f30, rdn # perform operation
fnmadd.s f5, f7, f22, f30, rmm # perform operation
fnmadd.s f5, f7, f22, f30, rne # perform operation
fnmadd.s f5, f7, f22, f30, rtz # perform operation
fnmadd.s f5, f7, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0xb571b1842c5164b3 # load x3 with value 0xb571b1842c5164b3
sw x3, 0(x2) # store 0xb571b1842c5164b3 in memory
flw f18, 0(x2) # load 0xb571b1842c5164b3 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmadd.s f25, f6, f18, f24, dyn # perform operation
fnmadd.s f25, f6, f18, f24, rdn # perform operation
fnmadd.s f25, f6, f18, f24, rmm # perform operation
fnmadd.s f25, f6, f18, f24, rne # perform operation
fnmadd.s f25, f6, f18, f24, rtz # perform operation
fnmadd.s f25, f6, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x1abe514f6f87472e # load x3 with value 0x1abe514f6f87472e
sw x3, 0(x2) # store 0x1abe514f6f87472e in memory
flw f28, 0(x2) # load 0x1abe514f6f87472e from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmadd.s f27, f1, f28, f11, dyn # perform operation
fnmadd.s f27, f1, f28, f11, rdn # perform operation
fnmadd.s f27, f1, f28, f11, rmm # perform operation
fnmadd.s f27, f1, f28, f11, rne # perform operation
fnmadd.s f27, f1, f28, f11, rtz # perform operation
fnmadd.s f27, f1, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f1, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x8dac752253a84888 # load x3 with value 0x8dac752253a84888
sw x3, 0(x2) # store 0x8dac752253a84888 in memory
flw f12, 0(x2) # load 0x8dac752253a84888 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmadd.s f25, f17, f12, f23, dyn # perform operation
fnmadd.s f25, f17, f12, f23, rdn # perform operation
fnmadd.s f25, f17, f12, f23, rmm # perform operation
fnmadd.s f25, f17, f12, f23, rne # perform operation
fnmadd.s f25, f17, f12, f23, rtz # perform operation
fnmadd.s f25, f17, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xcf7514fd2631b720 # load x3 with value 0xcf7514fd2631b720
sw x3, 0(x2) # store 0xcf7514fd2631b720 in memory
flw f10, 0(x2) # load 0xcf7514fd2631b720 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmadd.s f14, f16, f10, f9, dyn # perform operation
fnmadd.s f14, f16, f10, f9, rdn # perform operation
fnmadd.s f14, f16, f10, f9, rmm # perform operation
fnmadd.s f14, f16, f10, f9, rne # perform operation
fnmadd.s f14, f16, f10, f9, rtz # perform operation
fnmadd.s f14, f16, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x4845861fcfb8081e # load x3 with value 0x4845861fcfb8081e
sw x3, 0(x2) # store 0x4845861fcfb8081e in memory
flw f15, 0(x2) # load 0x4845861fcfb8081e from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fnmadd.s f1, f26, f15, f9, dyn # perform operation
fnmadd.s f1, f26, f15, f9, rdn # perform operation
fnmadd.s f1, f26, f15, f9, rmm # perform operation
fnmadd.s f1, f26, f15, f9, rne # perform operation
fnmadd.s f1, f26, f15, f9, rtz # perform operation
fnmadd.s f1, f26, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x6cc6da27d9949081 # load x3 with value 0x6cc6da27d9949081
sw x3, 0(x2) # store 0x6cc6da27d9949081 in memory
flw f20, 0(x2) # load 0x6cc6da27d9949081 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmadd.s f14, f3, f20, f24, dyn # perform operation
fnmadd.s f14, f3, f20, f24, rdn # perform operation
fnmadd.s f14, f3, f20, f24, rmm # perform operation
fnmadd.s f14, f3, f20, f24, rne # perform operation
fnmadd.s f14, f3, f20, f24, rtz # perform operation
fnmadd.s f14, f3, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f3, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x3cd1a3f8b0ffb532 # load x3 with value 0x3cd1a3f8b0ffb532
sw x3, 0(x2) # store 0x3cd1a3f8b0ffb532 in memory
flw f26, 0(x2) # load 0x3cd1a3f8b0ffb532 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f9, f25, f26, f14, dyn # perform operation
fnmadd.s f9, f25, f26, f14, rdn # perform operation
fnmadd.s f9, f25, f26, f14, rmm # perform operation
fnmadd.s f9, f25, f26, f14, rne # perform operation
fnmadd.s f9, f25, f26, f14, rtz # perform operation
fnmadd.s f9, f25, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xbaaac41a5c829d63 # load x3 with value 0xbaaac41a5c829d63
sw x3, 0(x2) # store 0xbaaac41a5c829d63 in memory
flw f25, 0(x2) # load 0xbaaac41a5c829d63 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f29, f19, f25, f27, dyn # perform operation
fnmadd.s f29, f19, f25, f27, rdn # perform operation
fnmadd.s f29, f19, f25, f27, rmm # perform operation
fnmadd.s f29, f19, f25, f27, rne # perform operation
fnmadd.s f29, f19, f25, f27, rtz # perform operation
fnmadd.s f29, f19, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xd80b9fda3ad962ae # load x3 with value 0xd80b9fda3ad962ae
sw x3, 0(x2) # store 0xd80b9fda3ad962ae in memory
flw f8, 0(x2) # load 0xd80b9fda3ad962ae from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f14, f22, f8, f9, dyn # perform operation
fnmadd.s f14, f22, f8, f9, rdn # perform operation
fnmadd.s f14, f22, f8, f9, rmm # perform operation
fnmadd.s f14, f22, f8, f9, rne # perform operation
fnmadd.s f14, f22, f8, f9, rtz # perform operation
fnmadd.s f14, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xe9a7ab11a057f4c2 # load x3 with value 0xe9a7ab11a057f4c2
sw x3, 0(x2) # store 0xe9a7ab11a057f4c2 in memory
flw f21, 0(x2) # load 0xe9a7ab11a057f4c2 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmadd.s f9, f26, f21, f8, dyn # perform operation
fnmadd.s f9, f26, f21, f8, rdn # perform operation
fnmadd.s f9, f26, f21, f8, rmm # perform operation
fnmadd.s f9, f26, f21, f8, rne # perform operation
fnmadd.s f9, f26, f21, f8, rtz # perform operation
fnmadd.s f9, f26, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f26, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x8dedd8ce520455af # load x3 with value 0x8dedd8ce520455af
sw x3, 0(x2) # store 0x8dedd8ce520455af in memory
flw f3, 0(x2) # load 0x8dedd8ce520455af from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f24, f25, f3, f19, dyn # perform operation
fnmadd.s f24, f25, f3, f19, rdn # perform operation
fnmadd.s f24, f25, f3, f19, rmm # perform operation
fnmadd.s f24, f25, f3, f19, rne # perform operation
fnmadd.s f24, f25, f3, f19, rtz # perform operation
fnmadd.s f24, f25, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x5bd4397e7ddef089 # load x3 with value 0x5bd4397e7ddef089
sw x3, 0(x2) # store 0x5bd4397e7ddef089 in memory
flw f27, 0(x2) # load 0x5bd4397e7ddef089 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmadd.s f29, f5, f27, f18, dyn # perform operation
fnmadd.s f29, f5, f27, f18, rdn # perform operation
fnmadd.s f29, f5, f27, f18, rmm # perform operation
fnmadd.s f29, f5, f27, f18, rne # perform operation
fnmadd.s f29, f5, f27, f18, rtz # perform operation
fnmadd.s f29, f5, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x87192ccb80c6972a # load x3 with value 0x87192ccb80c6972a
sw x3, 0(x2) # store 0x87192ccb80c6972a in memory
flw f21, 0(x2) # load 0x87192ccb80c6972a from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmadd.s f27, f8, f21, f23, dyn # perform operation
fnmadd.s f27, f8, f21, f23, rdn # perform operation
fnmadd.s f27, f8, f21, f23, rmm # perform operation
fnmadd.s f27, f8, f21, f23, rne # perform operation
fnmadd.s f27, f8, f21, f23, rtz # perform operation
fnmadd.s f27, f8, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x3ed41a5be98a005b # load x3 with value 0x3ed41a5be98a005b
sw x3, 0(x2) # store 0x3ed41a5be98a005b in memory
flw f22, 0(x2) # load 0x3ed41a5be98a005b from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f27, f31, f22, f3, dyn # perform operation
fnmadd.s f27, f31, f22, f3, rdn # perform operation
fnmadd.s f27, f31, f22, f3, rmm # perform operation
fnmadd.s f27, f31, f22, f3, rne # perform operation
fnmadd.s f27, f31, f22, f3, rtz # perform operation
fnmadd.s f27, f31, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x23558bf6daa30d86 # load x3 with value 0x23558bf6daa30d86
sw x3, 0(x2) # store 0x23558bf6daa30d86 in memory
flw f7, 0(x2) # load 0x23558bf6daa30d86 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f18, f11, f7, f3, dyn # perform operation
fnmadd.s f18, f11, f7, f3, rdn # perform operation
fnmadd.s f18, f11, f7, f3, rmm # perform operation
fnmadd.s f18, f11, f7, f3, rne # perform operation
fnmadd.s f18, f11, f7, f3, rtz # perform operation
fnmadd.s f18, f11, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xa49d1f6ed4937dc7 # load x3 with value 0xa49d1f6ed4937dc7
sw x3, 0(x2) # store 0xa49d1f6ed4937dc7 in memory
flw f27, 0(x2) # load 0xa49d1f6ed4937dc7 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f23, f28, f27, f30, dyn # perform operation
fnmadd.s f23, f28, f27, f30, rdn # perform operation
fnmadd.s f23, f28, f27, f30, rmm # perform operation
fnmadd.s f23, f28, f27, f30, rne # perform operation
fnmadd.s f23, f28, f27, f30, rtz # perform operation
fnmadd.s f23, f28, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x754c0e1cb7303236 # load x3 with value 0x754c0e1cb7303236
sw x3, 0(x2) # store 0x754c0e1cb7303236 in memory
flw f16, 0(x2) # load 0x754c0e1cb7303236 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fnmadd.s f27, f6, f16, f30, dyn # perform operation
fnmadd.s f27, f6, f16, f30, rdn # perform operation
fnmadd.s f27, f6, f16, f30, rmm # perform operation
fnmadd.s f27, f6, f16, f30, rne # perform operation
fnmadd.s f27, f6, f16, f30, rtz # perform operation
fnmadd.s f27, f6, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x88fad3b093b6782f # load x3 with value 0x88fad3b093b6782f
sw x3, 0(x2) # store 0x88fad3b093b6782f in memory
flw f1, 0(x2) # load 0x88fad3b093b6782f from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fnmadd.s f22, f9, f1, f31, dyn # perform operation
fnmadd.s f22, f9, f1, f31, rdn # perform operation
fnmadd.s f22, f9, f1, f31, rmm # perform operation
fnmadd.s f22, f9, f1, f31, rne # perform operation
fnmadd.s f22, f9, f1, f31, rtz # perform operation
fnmadd.s f22, f9, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f9, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x4f0c0af41ef5abd4 # load x3 with value 0x4f0c0af41ef5abd4
sw x3, 0(x2) # store 0x4f0c0af41ef5abd4 in memory
flw f30, 0(x2) # load 0x4f0c0af41ef5abd4 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmadd.s f3, f29, f30, f27, dyn # perform operation
fnmadd.s f3, f29, f30, f27, rdn # perform operation
fnmadd.s f3, f29, f30, f27, rmm # perform operation
fnmadd.s f3, f29, f30, f27, rne # perform operation
fnmadd.s f3, f29, f30, f27, rtz # perform operation
fnmadd.s f3, f29, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f29, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x396ec3a01ce105d # load x3 with value 0x396ec3a01ce105d
sw x3, 0(x2) # store 0x396ec3a01ce105d in memory
flw f5, 0(x2) # load 0x396ec3a01ce105d from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.s f10, f30, f5, f8, dyn # perform operation
fnmadd.s f10, f30, f5, f8, rdn # perform operation
fnmadd.s f10, f30, f5, f8, rmm # perform operation
fnmadd.s f10, f30, f5, f8, rne # perform operation
fnmadd.s f10, f30, f5, f8, rtz # perform operation
fnmadd.s f10, f30, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x6f3f08edec01894b # load x3 with value 0x6f3f08edec01894b
sw x3, 0(x2) # store 0x6f3f08edec01894b in memory
flw f31, 0(x2) # load 0x6f3f08edec01894b from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmadd.s f21, f29, f31, f12, dyn # perform operation
fnmadd.s f21, f29, f31, f12, rdn # perform operation
fnmadd.s f21, f29, f31, f12, rmm # perform operation
fnmadd.s f21, f29, f31, f12, rne # perform operation
fnmadd.s f21, f29, f31, f12, rtz # perform operation
fnmadd.s f21, f29, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x34b85c15ca8e09aa # load x3 with value 0x34b85c15ca8e09aa
sw x3, 0(x2) # store 0x34b85c15ca8e09aa in memory
flw f17, 0(x2) # load 0x34b85c15ca8e09aa from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmadd.s f2, f9, f17, f28, dyn # perform operation
fnmadd.s f2, f9, f17, f28, rdn # perform operation
fnmadd.s f2, f9, f17, f28, rmm # perform operation
fnmadd.s f2, f9, f17, f28, rne # perform operation
fnmadd.s f2, f9, f17, f28, rtz # perform operation
fnmadd.s f2, f9, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x53c5b2b01be5ae1 # load x3 with value 0x53c5b2b01be5ae1
sw x3, 0(x2) # store 0x53c5b2b01be5ae1 in memory
flw f6, 0(x2) # load 0x53c5b2b01be5ae1 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmadd.s f25, f28, f6, f9, dyn # perform operation
fnmadd.s f25, f28, f6, f9, rdn # perform operation
fnmadd.s f25, f28, f6, f9, rmm # perform operation
fnmadd.s f25, f28, f6, f9, rne # perform operation
fnmadd.s f25, f28, f6, f9, rtz # perform operation
fnmadd.s f25, f28, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x78c3ddc7995fbf47 # load x3 with value 0x78c3ddc7995fbf47
sw x3, 0(x2) # store 0x78c3ddc7995fbf47 in memory
flw f5, 0(x2) # load 0x78c3ddc7995fbf47 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f17, f12, f5, f28, dyn # perform operation
fnmadd.s f17, f12, f5, f28, rdn # perform operation
fnmadd.s f17, f12, f5, f28, rmm # perform operation
fnmadd.s f17, f12, f5, f28, rne # perform operation
fnmadd.s f17, f12, f5, f28, rtz # perform operation
fnmadd.s f17, f12, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xee2ad552201375e4 # load x3 with value 0xee2ad552201375e4
sw x3, 0(x2) # store 0xee2ad552201375e4 in memory
flw f6, 0(x2) # load 0xee2ad552201375e4 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmadd.s f9, f2, f6, f15, dyn # perform operation
fnmadd.s f9, f2, f6, f15, rdn # perform operation
fnmadd.s f9, f2, f6, f15, rmm # perform operation
fnmadd.s f9, f2, f6, f15, rne # perform operation
fnmadd.s f9, f2, f6, f15, rtz # perform operation
fnmadd.s f9, f2, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xa0ecd9be52181902 # load x3 with value 0xa0ecd9be52181902
sw x3, 0(x2) # store 0xa0ecd9be52181902 in memory
flw f3, 0(x2) # load 0xa0ecd9be52181902 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmadd.s f10, f7, f3, f31, dyn # perform operation
fnmadd.s f10, f7, f3, f31, rdn # perform operation
fnmadd.s f10, f7, f3, f31, rmm # perform operation
fnmadd.s f10, f7, f3, f31, rne # perform operation
fnmadd.s f10, f7, f3, f31, rtz # perform operation
fnmadd.s f10, f7, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xf2178623bd53accf # load x3 with value 0xf2178623bd53accf
sw x3, 0(x2) # store 0xf2178623bd53accf in memory
flw f2, 0(x2) # load 0xf2178623bd53accf from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fnmadd.s f31, f8, f2, f16, dyn # perform operation
fnmadd.s f31, f8, f2, f16, rdn # perform operation
fnmadd.s f31, f8, f2, f16, rmm # perform operation
fnmadd.s f31, f8, f2, f16, rne # perform operation
fnmadd.s f31, f8, f2, f16, rtz # perform operation
fnmadd.s f31, f8, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f8, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f8, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f8, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f8, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f8, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x4fd0b7886c2caa22 # load x3 with value 0x4fd0b7886c2caa22
sw x3, 0(x2) # store 0x4fd0b7886c2caa22 in memory
flw f19, 0(x2) # load 0x4fd0b7886c2caa22 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fnmadd.s f16, f2, f19, f28, dyn # perform operation
fnmadd.s f16, f2, f19, f28, rdn # perform operation
fnmadd.s f16, f2, f19, f28, rmm # perform operation
fnmadd.s f16, f2, f19, f28, rne # perform operation
fnmadd.s f16, f2, f19, f28, rtz # perform operation
fnmadd.s f16, f2, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f2, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xe2fdfced7189c473 # load x3 with value 0xe2fdfced7189c473
sw x3, 0(x2) # store 0xe2fdfced7189c473 in memory
flw f14, 0(x2) # load 0xe2fdfced7189c473 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
fnmadd.s f16, f12, f14, f5, dyn # perform operation
fnmadd.s f16, f12, f14, f5, rdn # perform operation
fnmadd.s f16, f12, f14, f5, rmm # perform operation
fnmadd.s f16, f12, f14, f5, rne # perform operation
fnmadd.s f16, f12, f14, f5, rtz # perform operation
fnmadd.s f16, f12, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f12, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xe1750171c2bd4ab5 # load x3 with value 0xe1750171c2bd4ab5
sw x3, 0(x2) # store 0xe1750171c2bd4ab5 in memory
flw f22, 0(x2) # load 0xe1750171c2bd4ab5 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f27, f6, f22, f28, dyn # perform operation
fnmadd.s f27, f6, f22, f28, rdn # perform operation
fnmadd.s f27, f6, f22, f28, rmm # perform operation
fnmadd.s f27, f6, f22, f28, rne # perform operation
fnmadd.s f27, f6, f22, f28, rtz # perform operation
fnmadd.s f27, f6, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xcd0eb6372829665d # load x3 with value 0xcd0eb6372829665d
sw x3, 0(x2) # store 0xcd0eb6372829665d in memory
flw f16, 0(x2) # load 0xcd0eb6372829665d from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmadd.s f2, f23, f16, f14, dyn # perform operation
fnmadd.s f2, f23, f16, f14, rdn # perform operation
fnmadd.s f2, f23, f16, f14, rmm # perform operation
fnmadd.s f2, f23, f16, f14, rne # perform operation
fnmadd.s f2, f23, f16, f14, rtz # perform operation
fnmadd.s f2, f23, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xa141bc1702ea8a43 # load x3 with value 0xa141bc1702ea8a43
sw x3, 0(x2) # store 0xa141bc1702ea8a43 in memory
flw f18, 0(x2) # load 0xa141bc1702ea8a43 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.s f17, f27, f18, f22, dyn # perform operation
fnmadd.s f17, f27, f18, f22, rdn # perform operation
fnmadd.s f17, f27, f18, f22, rmm # perform operation
fnmadd.s f17, f27, f18, f22, rne # perform operation
fnmadd.s f17, f27, f18, f22, rtz # perform operation
fnmadd.s f17, f27, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f27, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f27, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xbc6aa3b61a7093e # load x3 with value 0xbc6aa3b61a7093e
sw x3, 0(x2) # store 0xbc6aa3b61a7093e in memory
flw f11, 0(x2) # load 0xbc6aa3b61a7093e from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f9, f2, f11, f8, dyn # perform operation
fnmadd.s f9, f2, f11, f8, rdn # perform operation
fnmadd.s f9, f2, f11, f8, rmm # perform operation
fnmadd.s f9, f2, f11, f8, rne # perform operation
fnmadd.s f9, f2, f11, f8, rtz # perform operation
fnmadd.s f9, f2, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xadd977d82e94d4c0 # load x3 with value 0xadd977d82e94d4c0
sw x3, 0(x2) # store 0xadd977d82e94d4c0 in memory
flw f16, 0(x2) # load 0xadd977d82e94d4c0 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f25, f2, f16, f15, dyn # perform operation
fnmadd.s f25, f2, f16, f15, rdn # perform operation
fnmadd.s f25, f2, f16, f15, rmm # perform operation
fnmadd.s f25, f2, f16, f15, rne # perform operation
fnmadd.s f25, f2, f16, f15, rtz # perform operation
fnmadd.s f25, f2, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xad29e2693ef80b26 # load x3 with value 0xad29e2693ef80b26
sw x3, 0(x2) # store 0xad29e2693ef80b26 in memory
flw f27, 0(x2) # load 0xad29e2693ef80b26 from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmadd.s f20, f2, f27, f31, dyn # perform operation
fnmadd.s f20, f2, f27, f31, rdn # perform operation
fnmadd.s f20, f2, f27, f31, rmm # perform operation
fnmadd.s f20, f2, f27, f31, rne # perform operation
fnmadd.s f20, f2, f27, f31, rtz # perform operation
fnmadd.s f20, f2, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x4ccd643fe684807a # load x3 with value 0x4ccd643fe684807a
sw x3, 0(x2) # store 0x4ccd643fe684807a in memory
flw f13, 0(x2) # load 0x4ccd643fe684807a from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmadd.s f1, f21, f13, f15, dyn # perform operation
fnmadd.s f1, f21, f13, f15, rdn # perform operation
fnmadd.s f1, f21, f13, f15, rmm # perform operation
fnmadd.s f1, f21, f13, f15, rne # perform operation
fnmadd.s f1, f21, f13, f15, rtz # perform operation
fnmadd.s f1, f21, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x9c30ecd9e683747 # load x3 with value 0x9c30ecd9e683747
sw x3, 0(x2) # store 0x9c30ecd9e683747 in memory
flw f2, 0(x2) # load 0x9c30ecd9e683747 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmadd.s f27, f14, f2, f5, dyn # perform operation
fnmadd.s f27, f14, f2, f5, rdn # perform operation
fnmadd.s f27, f14, f2, f5, rmm # perform operation
fnmadd.s f27, f14, f2, f5, rne # perform operation
fnmadd.s f27, f14, f2, f5, rtz # perform operation
fnmadd.s f27, f14, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x8be5fd44a57301fc # load x3 with value 0x8be5fd44a57301fc
sw x3, 0(x2) # store 0x8be5fd44a57301fc in memory
flw f27, 0(x2) # load 0x8be5fd44a57301fc from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fnmadd.s f19, f8, f27, f5, dyn # perform operation
fnmadd.s f19, f8, f27, f5, rdn # perform operation
fnmadd.s f19, f8, f27, f5, rmm # perform operation
fnmadd.s f19, f8, f27, f5, rne # perform operation
fnmadd.s f19, f8, f27, f5, rtz # perform operation
fnmadd.s f19, f8, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f8, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0xbe9d3546db486e15 # load x3 with value 0xbe9d3546db486e15
sw x3, 0(x2) # store 0xbe9d3546db486e15 in memory
flw f10, 0(x2) # load 0xbe9d3546db486e15 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmadd.s f8, f13, f10, f20, dyn # perform operation
fnmadd.s f8, f13, f10, f20, rdn # perform operation
fnmadd.s f8, f13, f10, f20, rmm # perform operation
fnmadd.s f8, f13, f10, f20, rne # perform operation
fnmadd.s f8, f13, f10, f20, rtz # perform operation
fnmadd.s f8, f13, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xf6a734869e7c53ab # load x3 with value 0xf6a734869e7c53ab
sw x3, 0(x2) # store 0xf6a734869e7c53ab in memory
flw f1, 0(x2) # load 0xf6a734869e7c53ab from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmadd.s f27, f8, f1, f5, dyn # perform operation
fnmadd.s f27, f8, f1, f5, rdn # perform operation
fnmadd.s f27, f8, f1, f5, rmm # perform operation
fnmadd.s f27, f8, f1, f5, rne # perform operation
fnmadd.s f27, f8, f1, f5, rtz # perform operation
fnmadd.s f27, f8, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x64be8e66f04e9f9 # load x3 with value 0x64be8e66f04e9f9
sw x3, 0(x2) # store 0x64be8e66f04e9f9 in memory
flw f25, 0(x2) # load 0x64be8e66f04e9f9 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmadd.s f22, f2, f25, f14, dyn # perform operation
fnmadd.s f22, f2, f25, f14, rdn # perform operation
fnmadd.s f22, f2, f25, f14, rmm # perform operation
fnmadd.s f22, f2, f25, f14, rne # perform operation
fnmadd.s f22, f2, f25, f14, rtz # perform operation
fnmadd.s f22, f2, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f2, f25, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x5a7c4e1b042f29bc # load x3 with value 0x5a7c4e1b042f29bc
sw x3, 0(x2) # store 0x5a7c4e1b042f29bc in memory
flw f3, 0(x2) # load 0x5a7c4e1b042f29bc from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmadd.s f15, f11, f3, f9, dyn # perform operation
fnmadd.s f15, f11, f3, f9, rdn # perform operation
fnmadd.s f15, f11, f3, f9, rmm # perform operation
fnmadd.s f15, f11, f3, f9, rne # perform operation
fnmadd.s f15, f11, f3, f9, rtz # perform operation
fnmadd.s f15, f11, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x9e152197a76635a6 # load x3 with value 0x9e152197a76635a6
sw x3, 0(x2) # store 0x9e152197a76635a6 in memory
flw f22, 0(x2) # load 0x9e152197a76635a6 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmadd.s f6, f31, f22, f15, dyn # perform operation
fnmadd.s f6, f31, f22, f15, rdn # perform operation
fnmadd.s f6, f31, f22, f15, rmm # perform operation
fnmadd.s f6, f31, f22, f15, rne # perform operation
fnmadd.s f6, f31, f22, f15, rtz # perform operation
fnmadd.s f6, f31, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f31, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f31, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f31, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f31, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f31, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x5ce68e8cbff0d51b # load x3 with value 0x5ce68e8cbff0d51b
sw x3, 0(x2) # store 0x5ce68e8cbff0d51b in memory
flw f3, 0(x2) # load 0x5ce68e8cbff0d51b from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmadd.s f10, f17, f3, f29, dyn # perform operation
fnmadd.s f10, f17, f3, f29, rdn # perform operation
fnmadd.s f10, f17, f3, f29, rmm # perform operation
fnmadd.s f10, f17, f3, f29, rne # perform operation
fnmadd.s f10, f17, f3, f29, rtz # perform operation
fnmadd.s f10, f17, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f17, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x4fe4290a9f661b93 # load x3 with value 0x4fe4290a9f661b93
sw x3, 0(x2) # store 0x4fe4290a9f661b93 in memory
flw f28, 0(x2) # load 0x4fe4290a9f661b93 from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmadd.s f3, f14, f28, f18, dyn # perform operation
fnmadd.s f3, f14, f28, f18, rdn # perform operation
fnmadd.s f3, f14, f28, f18, rmm # perform operation
fnmadd.s f3, f14, f28, f18, rne # perform operation
fnmadd.s f3, f14, f28, f18, rtz # perform operation
fnmadd.s f3, f14, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f14, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xed1d4d96110b5e06 # load x3 with value 0xed1d4d96110b5e06
sw x3, 0(x2) # store 0xed1d4d96110b5e06 in memory
flw f14, 0(x2) # load 0xed1d4d96110b5e06 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f31, f7, f14, f19, dyn # perform operation
fnmadd.s f31, f7, f14, f19, rdn # perform operation
fnmadd.s f31, f7, f14, f19, rmm # perform operation
fnmadd.s f31, f7, f14, f19, rne # perform operation
fnmadd.s f31, f7, f14, f19, rtz # perform operation
fnmadd.s f31, f7, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x215f3facacfb4779 # load x3 with value 0x215f3facacfb4779
sw x3, 0(x2) # store 0x215f3facacfb4779 in memory
flw f29, 0(x2) # load 0x215f3facacfb4779 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmadd.s f19, f26, f29, f18, dyn # perform operation
fnmadd.s f19, f26, f29, f18, rdn # perform operation
fnmadd.s f19, f26, f29, f18, rmm # perform operation
fnmadd.s f19, f26, f29, f18, rne # perform operation
fnmadd.s f19, f26, f29, f18, rtz # perform operation
fnmadd.s f19, f26, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f26, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x603062e2d61cb344 # load x3 with value 0x603062e2d61cb344
sw x3, 0(x2) # store 0x603062e2d61cb344 in memory
flw f6, 0(x2) # load 0x603062e2d61cb344 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.s f2, f18, f6, f17, dyn # perform operation
fnmadd.s f2, f18, f6, f17, rdn # perform operation
fnmadd.s f2, f18, f6, f17, rmm # perform operation
fnmadd.s f2, f18, f6, f17, rne # perform operation
fnmadd.s f2, f18, f6, f17, rtz # perform operation
fnmadd.s f2, f18, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f18, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x89064d8f03ae4801 # load x3 with value 0x89064d8f03ae4801
sw x3, 0(x2) # store 0x89064d8f03ae4801 in memory
flw f31, 0(x2) # load 0x89064d8f03ae4801 from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmadd.s f27, f21, f31, f3, dyn # perform operation
fnmadd.s f27, f21, f31, f3, rdn # perform operation
fnmadd.s f27, f21, f31, f3, rmm # perform operation
fnmadd.s f27, f21, f31, f3, rne # perform operation
fnmadd.s f27, f21, f31, f3, rtz # perform operation
fnmadd.s f27, f21, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xc9b137faf0e34ec4 # load x3 with value 0xc9b137faf0e34ec4
sw x3, 0(x2) # store 0xc9b137faf0e34ec4 in memory
flw f27, 0(x2) # load 0xc9b137faf0e34ec4 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmadd.s f28, f10, f27, f9, dyn # perform operation
fnmadd.s f28, f10, f27, f9, rdn # perform operation
fnmadd.s f28, f10, f27, f9, rmm # perform operation
fnmadd.s f28, f10, f27, f9, rne # perform operation
fnmadd.s f28, f10, f27, f9, rtz # perform operation
fnmadd.s f28, f10, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x557a2b653e875082 # load x3 with value 0x557a2b653e875082
sw x3, 0(x2) # store 0x557a2b653e875082 in memory
flw f10, 0(x2) # load 0x557a2b653e875082 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f24, f30, f10, f17, dyn # perform operation
fnmadd.s f24, f30, f10, f17, rdn # perform operation
fnmadd.s f24, f30, f10, f17, rmm # perform operation
fnmadd.s f24, f30, f10, f17, rne # perform operation
fnmadd.s f24, f30, f10, f17, rtz # perform operation
fnmadd.s f24, f30, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xe5dcadb165507beb # load x3 with value 0xe5dcadb165507beb
sw x3, 0(x2) # store 0xe5dcadb165507beb in memory
flw f26, 0(x2) # load 0xe5dcadb165507beb from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fnmadd.s f30, f15, f26, f6, dyn # perform operation
fnmadd.s f30, f15, f26, f6, rdn # perform operation
fnmadd.s f30, f15, f26, f6, rmm # perform operation
fnmadd.s f30, f15, f26, f6, rne # perform operation
fnmadd.s f30, f15, f26, f6, rtz # perform operation
fnmadd.s f30, f15, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xe7f642d328504b4d # load x3 with value 0xe7f642d328504b4d
sw x3, 0(x2) # store 0xe7f642d328504b4d in memory
flw f6, 0(x2) # load 0xe7f642d328504b4d from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fnmadd.s f10, f22, f6, f31, dyn # perform operation
fnmadd.s f10, f22, f6, f31, rdn # perform operation
fnmadd.s f10, f22, f6, f31, rmm # perform operation
fnmadd.s f10, f22, f6, f31, rne # perform operation
fnmadd.s f10, f22, f6, f31, rtz # perform operation
fnmadd.s f10, f22, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x94fc4bb3ca654dcb # load x3 with value 0x94fc4bb3ca654dcb
sw x3, 0(x2) # store 0x94fc4bb3ca654dcb in memory
flw f16, 0(x2) # load 0x94fc4bb3ca654dcb from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmadd.s f18, f24, f16, f5, dyn # perform operation
fnmadd.s f18, f24, f16, f5, rdn # perform operation
fnmadd.s f18, f24, f16, f5, rmm # perform operation
fnmadd.s f18, f24, f16, f5, rne # perform operation
fnmadd.s f18, f24, f16, f5, rtz # perform operation
fnmadd.s f18, f24, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x4278bde04a5f2d47 # load x3 with value 0x4278bde04a5f2d47
sw x3, 0(x2) # store 0x4278bde04a5f2d47 in memory
flw f11, 0(x2) # load 0x4278bde04a5f2d47 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f8, f21, f11, f28, dyn # perform operation
fnmadd.s f8, f21, f11, f28, rdn # perform operation
fnmadd.s f8, f21, f11, f28, rmm # perform operation
fnmadd.s f8, f21, f11, f28, rne # perform operation
fnmadd.s f8, f21, f11, f28, rtz # perform operation
fnmadd.s f8, f21, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f21, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0xf148454be918d7f5 # load x3 with value 0xf148454be918d7f5
sw x3, 0(x2) # store 0xf148454be918d7f5 in memory
flw f27, 0(x2) # load 0xf148454be918d7f5 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmadd.s f19, f13, f27, f16, dyn # perform operation
fnmadd.s f19, f13, f27, f16, rdn # perform operation
fnmadd.s f19, f13, f27, f16, rmm # perform operation
fnmadd.s f19, f13, f27, f16, rne # perform operation
fnmadd.s f19, f13, f27, f16, rtz # perform operation
fnmadd.s f19, f13, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x7ca5f5b6221d5704 # load x3 with value 0x7ca5f5b6221d5704
sw x3, 0(x2) # store 0x7ca5f5b6221d5704 in memory
flw f24, 0(x2) # load 0x7ca5f5b6221d5704 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fnmadd.s f28, f7, f24, f10, dyn # perform operation
fnmadd.s f28, f7, f24, f10, rdn # perform operation
fnmadd.s f28, f7, f24, f10, rmm # perform operation
fnmadd.s f28, f7, f24, f10, rne # perform operation
fnmadd.s f28, f7, f24, f10, rtz # perform operation
fnmadd.s f28, f7, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x21762e652fce7664 # load x3 with value 0x21762e652fce7664
sw x3, 0(x2) # store 0x21762e652fce7664 in memory
flw f16, 0(x2) # load 0x21762e652fce7664 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmadd.s f11, f17, f16, f13, dyn # perform operation
fnmadd.s f11, f17, f16, f13, rdn # perform operation
fnmadd.s f11, f17, f16, f13, rmm # perform operation
fnmadd.s f11, f17, f16, f13, rne # perform operation
fnmadd.s f11, f17, f16, f13, rtz # perform operation
fnmadd.s f11, f17, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f17, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x95bfbcc716fda714 # load x3 with value 0x95bfbcc716fda714
sw x3, 0(x2) # store 0x95bfbcc716fda714 in memory
flw f16, 0(x2) # load 0x95bfbcc716fda714 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmadd.s f25, f20, f16, f13, dyn # perform operation
fnmadd.s f25, f20, f16, f13, rdn # perform operation
fnmadd.s f25, f20, f16, f13, rmm # perform operation
fnmadd.s f25, f20, f16, f13, rne # perform operation
fnmadd.s f25, f20, f16, f13, rtz # perform operation
fnmadd.s f25, f20, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0xa5169973005e866b # load x3 with value 0xa5169973005e866b
sw x3, 0(x2) # store 0xa5169973005e866b in memory
flw f15, 0(x2) # load 0xa5169973005e866b from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.s f18, f28, f15, f23, dyn # perform operation
fnmadd.s f18, f28, f15, f23, rdn # perform operation
fnmadd.s f18, f28, f15, f23, rmm # perform operation
fnmadd.s f18, f28, f15, f23, rne # perform operation
fnmadd.s f18, f28, f15, f23, rtz # perform operation
fnmadd.s f18, f28, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x50abdd331612094 # load x3 with value 0x50abdd331612094
sw x3, 0(x2) # store 0x50abdd331612094 in memory
flw f24, 0(x2) # load 0x50abdd331612094 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmadd.s f15, f26, f24, f14, dyn # perform operation
fnmadd.s f15, f26, f24, f14, rdn # perform operation
fnmadd.s f15, f26, f24, f14, rmm # perform operation
fnmadd.s f15, f26, f24, f14, rne # perform operation
fnmadd.s f15, f26, f24, f14, rtz # perform operation
fnmadd.s f15, f26, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xf7c169b01b0a9024 # load x3 with value 0xf7c169b01b0a9024
sw x3, 0(x2) # store 0xf7c169b01b0a9024 in memory
flw f21, 0(x2) # load 0xf7c169b01b0a9024 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fnmadd.s f5, f30, f21, f23, dyn # perform operation
fnmadd.s f5, f30, f21, f23, rdn # perform operation
fnmadd.s f5, f30, f21, f23, rmm # perform operation
fnmadd.s f5, f30, f21, f23, rne # perform operation
fnmadd.s f5, f30, f21, f23, rtz # perform operation
fnmadd.s f5, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x11d3d2a434c74ed9 # load x3 with value 0x11d3d2a434c74ed9
sw x3, 0(x2) # store 0x11d3d2a434c74ed9 in memory
flw f5, 0(x2) # load 0x11d3d2a434c74ed9 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fnmadd.s f16, f19, f5, f26, dyn # perform operation
fnmadd.s f16, f19, f5, f26, rdn # perform operation
fnmadd.s f16, f19, f5, f26, rmm # perform operation
fnmadd.s f16, f19, f5, f26, rne # perform operation
fnmadd.s f16, f19, f5, f26, rtz # perform operation
fnmadd.s f16, f19, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xaa9be503cb15e495 # load x3 with value 0xaa9be503cb15e495
sw x3, 0(x2) # store 0xaa9be503cb15e495 in memory
flw f10, 0(x2) # load 0xaa9be503cb15e495 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmadd.s f12, f24, f10, f1, dyn # perform operation
fnmadd.s f12, f24, f10, f1, rdn # perform operation
fnmadd.s f12, f24, f10, f1, rmm # perform operation
fnmadd.s f12, f24, f10, f1, rne # perform operation
fnmadd.s f12, f24, f10, f1, rtz # perform operation
fnmadd.s f12, f24, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f24, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x9bf0a09b004bd91b # load x3 with value 0x9bf0a09b004bd91b
sw x3, 0(x2) # store 0x9bf0a09b004bd91b in memory
flw f13, 0(x2) # load 0x9bf0a09b004bd91b from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f28, f7, f13, f14, dyn # perform operation
fnmadd.s f28, f7, f13, f14, rdn # perform operation
fnmadd.s f28, f7, f13, f14, rmm # perform operation
fnmadd.s f28, f7, f13, f14, rne # perform operation
fnmadd.s f28, f7, f13, f14, rtz # perform operation
fnmadd.s f28, f7, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x2132f55f6af76766 # load x3 with value 0x2132f55f6af76766
sw x3, 0(x2) # store 0x2132f55f6af76766 in memory
flw f9, 0(x2) # load 0x2132f55f6af76766 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmadd.s f26, f6, f9, f29, dyn # perform operation
fnmadd.s f26, f6, f9, f29, rdn # perform operation
fnmadd.s f26, f6, f9, f29, rmm # perform operation
fnmadd.s f26, f6, f9, f29, rne # perform operation
fnmadd.s f26, f6, f9, f29, rtz # perform operation
fnmadd.s f26, f6, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xb9add83aabe1acda # load x3 with value 0xb9add83aabe1acda
sw x3, 0(x2) # store 0xb9add83aabe1acda in memory
flw f19, 0(x2) # load 0xb9add83aabe1acda from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmadd.s f2, f21, f19, f25, dyn # perform operation
fnmadd.s f2, f21, f19, f25, rdn # perform operation
fnmadd.s f2, f21, f19, f25, rmm # perform operation
fnmadd.s f2, f21, f19, f25, rne # perform operation
fnmadd.s f2, f21, f19, f25, rtz # perform operation
fnmadd.s f2, f21, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x7013018c6313307e # load x3 with value 0x7013018c6313307e
sw x3, 0(x2) # store 0x7013018c6313307e in memory
flw f21, 0(x2) # load 0x7013018c6313307e from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmadd.s f9, f28, f21, f27, dyn # perform operation
fnmadd.s f9, f28, f21, f27, rdn # perform operation
fnmadd.s f9, f28, f21, f27, rmm # perform operation
fnmadd.s f9, f28, f21, f27, rne # perform operation
fnmadd.s f9, f28, f21, f27, rtz # perform operation
fnmadd.s f9, f28, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xaa32cbdaf90e0031 # load x3 with value 0xaa32cbdaf90e0031
sw x3, 0(x2) # store 0xaa32cbdaf90e0031 in memory
flw f12, 0(x2) # load 0xaa32cbdaf90e0031 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmadd.s f27, f18, f12, f7, dyn # perform operation
fnmadd.s f27, f18, f12, f7, rdn # perform operation
fnmadd.s f27, f18, f12, f7, rmm # perform operation
fnmadd.s f27, f18, f12, f7, rne # perform operation
fnmadd.s f27, f18, f12, f7, rtz # perform operation
fnmadd.s f27, f18, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f12, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x6135f61991c9bae1 # load x3 with value 0x6135f61991c9bae1
sw x3, 0(x2) # store 0x6135f61991c9bae1 in memory
flw f29, 0(x2) # load 0x6135f61991c9bae1 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmadd.s f7, f26, f29, f1, dyn # perform operation
fnmadd.s f7, f26, f29, f1, rdn # perform operation
fnmadd.s f7, f26, f29, f1, rmm # perform operation
fnmadd.s f7, f26, f29, f1, rne # perform operation
fnmadd.s f7, f26, f29, f1, rtz # perform operation
fnmadd.s f7, f26, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f26, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x4ca4fbcf4a3822a7 # load x3 with value 0x4ca4fbcf4a3822a7
sw x3, 0(x2) # store 0x4ca4fbcf4a3822a7 in memory
flw f23, 0(x2) # load 0x4ca4fbcf4a3822a7 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f31, f10, f23, f29, dyn # perform operation
fnmadd.s f31, f10, f23, f29, rdn # perform operation
fnmadd.s f31, f10, f23, f29, rmm # perform operation
fnmadd.s f31, f10, f23, f29, rne # perform operation
fnmadd.s f31, f10, f23, f29, rtz # perform operation
fnmadd.s f31, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xdd91112f61a1c3b # load x3 with value 0xdd91112f61a1c3b
sw x3, 0(x2) # store 0xdd91112f61a1c3b in memory
flw f21, 0(x2) # load 0xdd91112f61a1c3b from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f12, f19, f21, f7, dyn # perform operation
fnmadd.s f12, f19, f21, f7, rdn # perform operation
fnmadd.s f12, f19, f21, f7, rmm # perform operation
fnmadd.s f12, f19, f21, f7, rne # perform operation
fnmadd.s f12, f19, f21, f7, rtz # perform operation
fnmadd.s f12, f19, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f19, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x9f0a2e2d9419d2b0 # load x3 with value 0x9f0a2e2d9419d2b0
sw x3, 0(x2) # store 0x9f0a2e2d9419d2b0 in memory
flw f10, 0(x2) # load 0x9f0a2e2d9419d2b0 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f18, f11, f10, f15, dyn # perform operation
fnmadd.s f18, f11, f10, f15, rdn # perform operation
fnmadd.s f18, f11, f10, f15, rmm # perform operation
fnmadd.s f18, f11, f10, f15, rne # perform operation
fnmadd.s f18, f11, f10, f15, rtz # perform operation
fnmadd.s f18, f11, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xd232c6bd617da72b # load x3 with value 0xd232c6bd617da72b
sw x3, 0(x2) # store 0xd232c6bd617da72b in memory
flw f20, 0(x2) # load 0xd232c6bd617da72b from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f18, f22, f20, f15, dyn # perform operation
fnmadd.s f18, f22, f20, f15, rdn # perform operation
fnmadd.s f18, f22, f20, f15, rmm # perform operation
fnmadd.s f18, f22, f20, f15, rne # perform operation
fnmadd.s f18, f22, f20, f15, rtz # perform operation
fnmadd.s f18, f22, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x1fde5889defe64b8 # load x3 with value 0x1fde5889defe64b8
sw x3, 0(x2) # store 0x1fde5889defe64b8 in memory
flw f7, 0(x2) # load 0x1fde5889defe64b8 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmadd.s f21, f2, f7, f6, dyn # perform operation
fnmadd.s f21, f2, f7, f6, rdn # perform operation
fnmadd.s f21, f2, f7, f6, rmm # perform operation
fnmadd.s f21, f2, f7, f6, rne # perform operation
fnmadd.s f21, f2, f7, f6, rtz # perform operation
fnmadd.s f21, f2, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xdeea6463f9983e27 # load x3 with value 0xdeea6463f9983e27
sw x3, 0(x2) # store 0xdeea6463f9983e27 in memory
flw f15, 0(x2) # load 0xdeea6463f9983e27 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.s f19, f13, f15, f11, dyn # perform operation
fnmadd.s f19, f13, f15, f11, rdn # perform operation
fnmadd.s f19, f13, f15, f11, rmm # perform operation
fnmadd.s f19, f13, f15, f11, rne # perform operation
fnmadd.s f19, f13, f15, f11, rtz # perform operation
fnmadd.s f19, f13, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xc84a0c0de4241ef7 # load x3 with value 0xc84a0c0de4241ef7
sw x3, 0(x2) # store 0xc84a0c0de4241ef7 in memory
flw f8, 0(x2) # load 0xc84a0c0de4241ef7 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmadd.s f17, f19, f8, f2, dyn # perform operation
fnmadd.s f17, f19, f8, f2, rdn # perform operation
fnmadd.s f17, f19, f8, f2, rmm # perform operation
fnmadd.s f17, f19, f8, f2, rne # perform operation
fnmadd.s f17, f19, f8, f2, rtz # perform operation
fnmadd.s f17, f19, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x2100e1e391cee865 # load x3 with value 0x2100e1e391cee865
sw x3, 0(x2) # store 0x2100e1e391cee865 in memory
flw f21, 0(x2) # load 0x2100e1e391cee865 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmadd.s f25, f17, f21, f19, dyn # perform operation
fnmadd.s f25, f17, f21, f19, rdn # perform operation
fnmadd.s f25, f17, f21, f19, rmm # perform operation
fnmadd.s f25, f17, f21, f19, rne # perform operation
fnmadd.s f25, f17, f21, f19, rtz # perform operation
fnmadd.s f25, f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x7e19d2d11f5447bc # load x3 with value 0x7e19d2d11f5447bc
sw x3, 0(x2) # store 0x7e19d2d11f5447bc in memory
flw f22, 0(x2) # load 0x7e19d2d11f5447bc from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmadd.s f2, f30, f22, f8, dyn # perform operation
fnmadd.s f2, f30, f22, f8, rdn # perform operation
fnmadd.s f2, f30, f22, f8, rmm # perform operation
fnmadd.s f2, f30, f22, f8, rne # perform operation
fnmadd.s f2, f30, f22, f8, rtz # perform operation
fnmadd.s f2, f30, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x19f466b78aeee3b0 # load x3 with value 0x19f466b78aeee3b0
sw x3, 0(x2) # store 0x19f466b78aeee3b0 in memory
flw f3, 0(x2) # load 0x19f466b78aeee3b0 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f24, f16, f3, f28, dyn # perform operation
fnmadd.s f24, f16, f3, f28, rdn # perform operation
fnmadd.s f24, f16, f3, f28, rmm # perform operation
fnmadd.s f24, f16, f3, f28, rne # perform operation
fnmadd.s f24, f16, f3, f28, rtz # perform operation
fnmadd.s f24, f16, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x50a6b04566365d1f # load x3 with value 0x50a6b04566365d1f
sw x3, 0(x2) # store 0x50a6b04566365d1f in memory
flw f31, 0(x2) # load 0x50a6b04566365d1f from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f28, f23, f31, f22, dyn # perform operation
fnmadd.s f28, f23, f31, f22, rdn # perform operation
fnmadd.s f28, f23, f31, f22, rmm # perform operation
fnmadd.s f28, f23, f31, f22, rne # perform operation
fnmadd.s f28, f23, f31, f22, rtz # perform operation
fnmadd.s f28, f23, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x9fe171d226539efc # load x3 with value 0x9fe171d226539efc
sw x3, 0(x2) # store 0x9fe171d226539efc in memory
flw f26, 0(x2) # load 0x9fe171d226539efc from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmadd.s f30, f15, f26, f13, dyn # perform operation
fnmadd.s f30, f15, f26, f13, rdn # perform operation
fnmadd.s f30, f15, f26, f13, rmm # perform operation
fnmadd.s f30, f15, f26, f13, rne # perform operation
fnmadd.s f30, f15, f26, f13, rtz # perform operation
fnmadd.s f30, f15, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x35d8e70565806959 # load x3 with value 0x35d8e70565806959
sw x3, 0(x2) # store 0x35d8e70565806959 in memory
flw f30, 0(x2) # load 0x35d8e70565806959 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f20, f1, f30, f7, dyn # perform operation
fnmadd.s f20, f1, f30, f7, rdn # perform operation
fnmadd.s f20, f1, f30, f7, rmm # perform operation
fnmadd.s f20, f1, f30, f7, rne # perform operation
fnmadd.s f20, f1, f30, f7, rtz # perform operation
fnmadd.s f20, f1, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f1, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f1, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f1, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f1, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f1, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x5c6f749bed656b0f # load x3 with value 0x5c6f749bed656b0f
sw x3, 0(x2) # store 0x5c6f749bed656b0f in memory
flw f29, 0(x2) # load 0x5c6f749bed656b0f from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmadd.s f19, f3, f29, f26, dyn # perform operation
fnmadd.s f19, f3, f29, f26, rdn # perform operation
fnmadd.s f19, f3, f29, f26, rmm # perform operation
fnmadd.s f19, f3, f29, f26, rne # perform operation
fnmadd.s f19, f3, f29, f26, rtz # perform operation
fnmadd.s f19, f3, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x200cc421a76fe0c7 # load x3 with value 0x200cc421a76fe0c7
sw x3, 0(x2) # store 0x200cc421a76fe0c7 in memory
flw f30, 0(x2) # load 0x200cc421a76fe0c7 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fnmadd.s f25, f26, f30, f29, dyn # perform operation
fnmadd.s f25, f26, f30, f29, rdn # perform operation
fnmadd.s f25, f26, f30, f29, rmm # perform operation
fnmadd.s f25, f26, f30, f29, rne # perform operation
fnmadd.s f25, f26, f30, f29, rtz # perform operation
fnmadd.s f25, f26, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xa5adb02a830d9a0c # load x3 with value 0xa5adb02a830d9a0c
sw x3, 0(x2) # store 0xa5adb02a830d9a0c in memory
flw f16, 0(x2) # load 0xa5adb02a830d9a0c from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f2, f3, f16, f10, dyn # perform operation
fnmadd.s f2, f3, f16, f10, rdn # perform operation
fnmadd.s f2, f3, f16, f10, rmm # perform operation
fnmadd.s f2, f3, f16, f10, rne # perform operation
fnmadd.s f2, f3, f16, f10, rtz # perform operation
fnmadd.s f2, f3, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x97eb48ead34e4919 # load x3 with value 0x97eb48ead34e4919
sw x3, 0(x2) # store 0x97eb48ead34e4919 in memory
flw f28, 0(x2) # load 0x97eb48ead34e4919 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f17, f18, f28, f11, dyn # perform operation
fnmadd.s f17, f18, f28, f11, rdn # perform operation
fnmadd.s f17, f18, f28, f11, rmm # perform operation
fnmadd.s f17, f18, f28, f11, rne # perform operation
fnmadd.s f17, f18, f28, f11, rtz # perform operation
fnmadd.s f17, f18, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x49da09b5c616a685 # load x3 with value 0x49da09b5c616a685
sw x3, 0(x2) # store 0x49da09b5c616a685 in memory
flw f28, 0(x2) # load 0x49da09b5c616a685 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.s f29, f15, f28, f7, dyn # perform operation
fnmadd.s f29, f15, f28, f7, rdn # perform operation
fnmadd.s f29, f15, f28, f7, rmm # perform operation
fnmadd.s f29, f15, f28, f7, rne # perform operation
fnmadd.s f29, f15, f28, f7, rtz # perform operation
fnmadd.s f29, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x695f7b17a6122d5 # load x3 with value 0x695f7b17a6122d5
sw x3, 0(x2) # store 0x695f7b17a6122d5 in memory
flw f16, 0(x2) # load 0x695f7b17a6122d5 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmadd.s f14, f19, f16, f31, dyn # perform operation
fnmadd.s f14, f19, f16, f31, rdn # perform operation
fnmadd.s f14, f19, f16, f31, rmm # perform operation
fnmadd.s f14, f19, f16, f31, rne # perform operation
fnmadd.s f14, f19, f16, f31, rtz # perform operation
fnmadd.s f14, f19, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xd9bff69edd70fb64 # load x3 with value 0xd9bff69edd70fb64
sw x3, 0(x2) # store 0xd9bff69edd70fb64 in memory
flw f25, 0(x2) # load 0xd9bff69edd70fb64 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f29, f22, f25, f30, dyn # perform operation
fnmadd.s f29, f22, f25, f30, rdn # perform operation
fnmadd.s f29, f22, f25, f30, rmm # perform operation
fnmadd.s f29, f22, f25, f30, rne # perform operation
fnmadd.s f29, f22, f25, f30, rtz # perform operation
fnmadd.s f29, f22, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f22, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x65818da511f46189 # load x3 with value 0x65818da511f46189
sw x3, 0(x2) # store 0x65818da511f46189 in memory
flw f16, 0(x2) # load 0x65818da511f46189 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fnmadd.s f21, f14, f16, f24, dyn # perform operation
fnmadd.s f21, f14, f16, f24, rdn # perform operation
fnmadd.s f21, f14, f16, f24, rmm # perform operation
fnmadd.s f21, f14, f16, f24, rne # perform operation
fnmadd.s f21, f14, f16, f24, rtz # perform operation
fnmadd.s f21, f14, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xaa86d798d5b898d1 # load x3 with value 0xaa86d798d5b898d1
sw x3, 0(x2) # store 0xaa86d798d5b898d1 in memory
flw f24, 0(x2) # load 0xaa86d798d5b898d1 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fnmadd.s f18, f14, f24, f31, dyn # perform operation
fnmadd.s f18, f14, f24, f31, rdn # perform operation
fnmadd.s f18, f14, f24, f31, rmm # perform operation
fnmadd.s f18, f14, f24, f31, rne # perform operation
fnmadd.s f18, f14, f24, f31, rtz # perform operation
fnmadd.s f18, f14, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x8c82b47a2ce99872 # load x3 with value 0x8c82b47a2ce99872
sw x3, 0(x2) # store 0x8c82b47a2ce99872 in memory
flw f11, 0(x2) # load 0x8c82b47a2ce99872 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmadd.s f17, f20, f11, f21, dyn # perform operation
fnmadd.s f17, f20, f11, f21, rdn # perform operation
fnmadd.s f17, f20, f11, f21, rmm # perform operation
fnmadd.s f17, f20, f11, f21, rne # perform operation
fnmadd.s f17, f20, f11, f21, rtz # perform operation
fnmadd.s f17, f20, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xcb129cd33f90a85e # load x3 with value 0xcb129cd33f90a85e
sw x3, 0(x2) # store 0xcb129cd33f90a85e in memory
flw f30, 0(x2) # load 0xcb129cd33f90a85e from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fnmadd.s f21, f2, f30, f19, dyn # perform operation
fnmadd.s f21, f2, f30, f19, rdn # perform operation
fnmadd.s f21, f2, f30, f19, rmm # perform operation
fnmadd.s f21, f2, f30, f19, rne # perform operation
fnmadd.s f21, f2, f30, f19, rtz # perform operation
fnmadd.s f21, f2, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x8412ee4cfc4e7d80 # load x3 with value 0x8412ee4cfc4e7d80
sw x3, 0(x2) # store 0x8412ee4cfc4e7d80 in memory
flw f16, 0(x2) # load 0x8412ee4cfc4e7d80 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f31, f28, f16, f19, dyn # perform operation
fnmadd.s f31, f28, f16, f19, rdn # perform operation
fnmadd.s f31, f28, f16, f19, rmm # perform operation
fnmadd.s f31, f28, f16, f19, rne # perform operation
fnmadd.s f31, f28, f16, f19, rtz # perform operation
fnmadd.s f31, f28, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xe65a66a48eca592a # load x3 with value 0xe65a66a48eca592a
sw x3, 0(x2) # store 0xe65a66a48eca592a in memory
flw f11, 0(x2) # load 0xe65a66a48eca592a from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f3, f30, f11, f26, dyn # perform operation
fnmadd.s f3, f30, f11, f26, rdn # perform operation
fnmadd.s f3, f30, f11, f26, rmm # perform operation
fnmadd.s f3, f30, f11, f26, rne # perform operation
fnmadd.s f3, f30, f11, f26, rtz # perform operation
fnmadd.s f3, f30, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x1bf48bd9096e674a # load x3 with value 0x1bf48bd9096e674a
sw x3, 0(x2) # store 0x1bf48bd9096e674a in memory
flw f7, 0(x2) # load 0x1bf48bd9096e674a from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fnmadd.s f20, f27, f7, f15, dyn # perform operation
fnmadd.s f20, f27, f7, f15, rdn # perform operation
fnmadd.s f20, f27, f7, f15, rmm # perform operation
fnmadd.s f20, f27, f7, f15, rne # perform operation
fnmadd.s f20, f27, f7, f15, rtz # perform operation
fnmadd.s f20, f27, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x93f48d10765e5a78 # load x3 with value 0x93f48d10765e5a78
sw x3, 0(x2) # store 0x93f48d10765e5a78 in memory
flw f18, 0(x2) # load 0x93f48d10765e5a78 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fnmadd.s f24, f16, f18, f31, dyn # perform operation
fnmadd.s f24, f16, f18, f31, rdn # perform operation
fnmadd.s f24, f16, f18, f31, rmm # perform operation
fnmadd.s f24, f16, f18, f31, rne # perform operation
fnmadd.s f24, f16, f18, f31, rtz # perform operation
fnmadd.s f24, f16, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x1ecf5443cd31b7d7 # load x3 with value 0x1ecf5443cd31b7d7
sw x3, 0(x2) # store 0x1ecf5443cd31b7d7 in memory
flw f23, 0(x2) # load 0x1ecf5443cd31b7d7 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmadd.s f27, f26, f23, f17, dyn # perform operation
fnmadd.s f27, f26, f23, f17, rdn # perform operation
fnmadd.s f27, f26, f23, f17, rmm # perform operation
fnmadd.s f27, f26, f23, f17, rne # perform operation
fnmadd.s f27, f26, f23, f17, rtz # perform operation
fnmadd.s f27, f26, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x788599243fff60cc # load x3 with value 0x788599243fff60cc
sw x3, 0(x2) # store 0x788599243fff60cc in memory
flw f25, 0(x2) # load 0x788599243fff60cc from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmadd.s f3, f6, f25, f11, dyn # perform operation
fnmadd.s f3, f6, f25, f11, rdn # perform operation
fnmadd.s f3, f6, f25, f11, rmm # perform operation
fnmadd.s f3, f6, f25, f11, rne # perform operation
fnmadd.s f3, f6, f25, f11, rtz # perform operation
fnmadd.s f3, f6, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f6, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x3af478fc133d4bfa # load x3 with value 0x3af478fc133d4bfa
sw x3, 0(x2) # store 0x3af478fc133d4bfa in memory
flw f7, 0(x2) # load 0x3af478fc133d4bfa from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f25, f16, f7, f8, dyn # perform operation
fnmadd.s f25, f16, f7, f8, rdn # perform operation
fnmadd.s f25, f16, f7, f8, rmm # perform operation
fnmadd.s f25, f16, f7, f8, rne # perform operation
fnmadd.s f25, f16, f7, f8, rtz # perform operation
fnmadd.s f25, f16, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f16, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f16, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f16, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f16, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f16, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0xa1bdd32ca36fdd36 # load x3 with value 0xa1bdd32ca36fdd36
sw x3, 0(x2) # store 0xa1bdd32ca36fdd36 in memory
flw f22, 0(x2) # load 0xa1bdd32ca36fdd36 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f27, f11, f22, f6, dyn # perform operation
fnmadd.s f27, f11, f22, f6, rdn # perform operation
fnmadd.s f27, f11, f22, f6, rmm # perform operation
fnmadd.s f27, f11, f22, f6, rne # perform operation
fnmadd.s f27, f11, f22, f6, rtz # perform operation
fnmadd.s f27, f11, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f11, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x1e35676288a81948 # load x3 with value 0x1e35676288a81948
sw x3, 0(x2) # store 0x1e35676288a81948 in memory
flw f3, 0(x2) # load 0x1e35676288a81948 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmadd.s f30, f9, f3, f13, dyn # perform operation
fnmadd.s f30, f9, f3, f13, rdn # perform operation
fnmadd.s f30, f9, f3, f13, rmm # perform operation
fnmadd.s f30, f9, f3, f13, rne # perform operation
fnmadd.s f30, f9, f3, f13, rtz # perform operation
fnmadd.s f30, f9, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0xcdede4aa3aafbfd8 # load x3 with value 0xcdede4aa3aafbfd8
sw x3, 0(x2) # store 0xcdede4aa3aafbfd8 in memory
flw f8, 0(x2) # load 0xcdede4aa3aafbfd8 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f17, f21, f8, f22, dyn # perform operation
fnmadd.s f17, f21, f8, f22, rdn # perform operation
fnmadd.s f17, f21, f8, f22, rmm # perform operation
fnmadd.s f17, f21, f8, f22, rne # perform operation
fnmadd.s f17, f21, f8, f22, rtz # perform operation
fnmadd.s f17, f21, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f21, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0xdb576b363123550d # load x3 with value 0xdb576b363123550d
sw x3, 0(x2) # store 0xdb576b363123550d in memory
flw f31, 0(x2) # load 0xdb576b363123550d from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmadd.s f11, f26, f31, f17, dyn # perform operation
fnmadd.s f11, f26, f31, f17, rdn # perform operation
fnmadd.s f11, f26, f31, f17, rmm # perform operation
fnmadd.s f11, f26, f31, f17, rne # perform operation
fnmadd.s f11, f26, f31, f17, rtz # perform operation
fnmadd.s f11, f26, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f26, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f26, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f26, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f26, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f26, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xaadf34703ab79e19 # load x3 with value 0xaadf34703ab79e19
sw x3, 0(x2) # store 0xaadf34703ab79e19 in memory
flw f26, 0(x2) # load 0xaadf34703ab79e19 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmadd.s f30, f31, f26, f11, dyn # perform operation
fnmadd.s f30, f31, f26, f11, rdn # perform operation
fnmadd.s f30, f31, f26, f11, rmm # perform operation
fnmadd.s f30, f31, f26, f11, rne # perform operation
fnmadd.s f30, f31, f26, f11, rtz # perform operation
fnmadd.s f30, f31, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xc980e2f051259031 # load x3 with value 0xc980e2f051259031
sw x3, 0(x2) # store 0xc980e2f051259031 in memory
flw f8, 0(x2) # load 0xc980e2f051259031 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmadd.s f16, f25, f8, f19, dyn # perform operation
fnmadd.s f16, f25, f8, f19, rdn # perform operation
fnmadd.s f16, f25, f8, f19, rmm # perform operation
fnmadd.s f16, f25, f8, f19, rne # perform operation
fnmadd.s f16, f25, f8, f19, rtz # perform operation
fnmadd.s f16, f25, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x226f2184563ffb23 # load x3 with value 0x226f2184563ffb23
sw x3, 0(x2) # store 0x226f2184563ffb23 in memory
flw f20, 0(x2) # load 0x226f2184563ffb23 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f22, f12, f20, f3, dyn # perform operation
fnmadd.s f22, f12, f20, f3, rdn # perform operation
fnmadd.s f22, f12, f20, f3, rmm # perform operation
fnmadd.s f22, f12, f20, f3, rne # perform operation
fnmadd.s f22, f12, f20, f3, rtz # perform operation
fnmadd.s f22, f12, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x10f9f3323fffe00b # load x3 with value 0x10f9f3323fffe00b
sw x3, 0(x2) # store 0x10f9f3323fffe00b in memory
flw f12, 0(x2) # load 0x10f9f3323fffe00b from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmadd.s f6, f9, f12, f25, dyn # perform operation
fnmadd.s f6, f9, f12, f25, rdn # perform operation
fnmadd.s f6, f9, f12, f25, rmm # perform operation
fnmadd.s f6, f9, f12, f25, rne # perform operation
fnmadd.s f6, f9, f12, f25, rtz # perform operation
fnmadd.s f6, f9, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f9, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f9, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xe2627706c86a85b7 # load x3 with value 0xe2627706c86a85b7
sw x3, 0(x2) # store 0xe2627706c86a85b7 in memory
flw f30, 0(x2) # load 0xe2627706c86a85b7 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmadd.s f20, f3, f30, f10, dyn # perform operation
fnmadd.s f20, f3, f30, f10, rdn # perform operation
fnmadd.s f20, f3, f30, f10, rmm # perform operation
fnmadd.s f20, f3, f30, f10, rne # perform operation
fnmadd.s f20, f3, f30, f10, rtz # perform operation
fnmadd.s f20, f3, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x143e39fe59e4128c # load x3 with value 0x143e39fe59e4128c
sw x3, 0(x2) # store 0x143e39fe59e4128c in memory
flw f9, 0(x2) # load 0x143e39fe59e4128c from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmadd.s f27, f19, f9, f30, dyn # perform operation
fnmadd.s f27, f19, f9, f30, rdn # perform operation
fnmadd.s f27, f19, f9, f30, rmm # perform operation
fnmadd.s f27, f19, f9, f30, rne # perform operation
fnmadd.s f27, f19, f9, f30, rtz # perform operation
fnmadd.s f27, f19, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f9, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x99e4ba24ef13a85b # load x3 with value 0x99e4ba24ef13a85b
sw x3, 0(x2) # store 0x99e4ba24ef13a85b in memory
flw f17, 0(x2) # load 0x99e4ba24ef13a85b from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmadd.s f19, f31, f17, f15, dyn # perform operation
fnmadd.s f19, f31, f17, f15, rdn # perform operation
fnmadd.s f19, f31, f17, f15, rmm # perform operation
fnmadd.s f19, f31, f17, f15, rne # perform operation
fnmadd.s f19, f31, f17, f15, rtz # perform operation
fnmadd.s f19, f31, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f17, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x35cf5cdce652222f # load x3 with value 0x35cf5cdce652222f
sw x3, 0(x2) # store 0x35cf5cdce652222f in memory
flw f31, 0(x2) # load 0x35cf5cdce652222f from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmadd.s f21, f23, f31, f14, dyn # perform operation
fnmadd.s f21, f23, f31, f14, rdn # perform operation
fnmadd.s f21, f23, f31, f14, rmm # perform operation
fnmadd.s f21, f23, f31, f14, rne # perform operation
fnmadd.s f21, f23, f31, f14, rtz # perform operation
fnmadd.s f21, f23, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x5825a4bb69810e5b # load x3 with value 0x5825a4bb69810e5b
sw x3, 0(x2) # store 0x5825a4bb69810e5b in memory
flw f30, 0(x2) # load 0x5825a4bb69810e5b from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmadd.s f13, f31, f30, f23, dyn # perform operation
fnmadd.s f13, f31, f30, f23, rdn # perform operation
fnmadd.s f13, f31, f30, f23, rmm # perform operation
fnmadd.s f13, f31, f30, f23, rne # perform operation
fnmadd.s f13, f31, f30, f23, rtz # perform operation
fnmadd.s f13, f31, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f31, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xc3a7dafbba0b8e8e # load x3 with value 0xc3a7dafbba0b8e8e
sw x3, 0(x2) # store 0xc3a7dafbba0b8e8e in memory
flw f14, 0(x2) # load 0xc3a7dafbba0b8e8e from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmadd.s f29, f5, f14, f25, dyn # perform operation
fnmadd.s f29, f5, f14, f25, rdn # perform operation
fnmadd.s f29, f5, f14, f25, rmm # perform operation
fnmadd.s f29, f5, f14, f25, rne # perform operation
fnmadd.s f29, f5, f14, f25, rtz # perform operation
fnmadd.s f29, f5, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x29411cc354881d74 # load x3 with value 0x29411cc354881d74
sw x3, 0(x2) # store 0x29411cc354881d74 in memory
flw f31, 0(x2) # load 0x29411cc354881d74 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f18, f13, f31, f12, dyn # perform operation
fnmadd.s f18, f13, f31, f12, rdn # perform operation
fnmadd.s f18, f13, f31, f12, rmm # perform operation
fnmadd.s f18, f13, f31, f12, rne # perform operation
fnmadd.s f18, f13, f31, f12, rtz # perform operation
fnmadd.s f18, f13, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x86320c197e535568 # load x3 with value 0x86320c197e535568
sw x3, 0(x2) # store 0x86320c197e535568 in memory
flw f13, 0(x2) # load 0x86320c197e535568 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fnmadd.s f5, f18, f13, f10, dyn # perform operation
fnmadd.s f5, f18, f13, f10, rdn # perform operation
fnmadd.s f5, f18, f13, f10, rmm # perform operation
fnmadd.s f5, f18, f13, f10, rne # perform operation
fnmadd.s f5, f18, f13, f10, rtz # perform operation
fnmadd.s f5, f18, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0xa69c56b3b9c5a03c # load x3 with value 0xa69c56b3b9c5a03c
sw x3, 0(x2) # store 0xa69c56b3b9c5a03c in memory
flw f2, 0(x2) # load 0xa69c56b3b9c5a03c from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmadd.s f28, f12, f2, f21, dyn # perform operation
fnmadd.s f28, f12, f2, f21, rdn # perform operation
fnmadd.s f28, f12, f2, f21, rmm # perform operation
fnmadd.s f28, f12, f2, f21, rne # perform operation
fnmadd.s f28, f12, f2, f21, rtz # perform operation
fnmadd.s f28, f12, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7ab131a257250cc2 # load x3 with value 0x7ab131a257250cc2
sw x3, 0(x2) # store 0x7ab131a257250cc2 in memory
flw f28, 0(x2) # load 0x7ab131a257250cc2 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f14, f15, f28, f29, dyn # perform operation
fnmadd.s f14, f15, f28, f29, rdn # perform operation
fnmadd.s f14, f15, f28, f29, rmm # perform operation
fnmadd.s f14, f15, f28, f29, rne # perform operation
fnmadd.s f14, f15, f28, f29, rtz # perform operation
fnmadd.s f14, f15, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x71166dbeab2a0a14 # load x3 with value 0x71166dbeab2a0a14
sw x3, 0(x2) # store 0x71166dbeab2a0a14 in memory
flw f28, 0(x2) # load 0x71166dbeab2a0a14 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmadd.s f9, f22, f28, f17, dyn # perform operation
fnmadd.s f9, f22, f28, f17, rdn # perform operation
fnmadd.s f9, f22, f28, f17, rmm # perform operation
fnmadd.s f9, f22, f28, f17, rne # perform operation
fnmadd.s f9, f22, f28, f17, rtz # perform operation
fnmadd.s f9, f22, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f22, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x6589bc8f94b7185c # load x3 with value 0x6589bc8f94b7185c
sw x3, 0(x2) # store 0x6589bc8f94b7185c in memory
flw f3, 0(x2) # load 0x6589bc8f94b7185c from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmadd.s f11, f17, f3, f1, dyn # perform operation
fnmadd.s f11, f17, f3, f1, rdn # perform operation
fnmadd.s f11, f17, f3, f1, rmm # perform operation
fnmadd.s f11, f17, f3, f1, rne # perform operation
fnmadd.s f11, f17, f3, f1, rtz # perform operation
fnmadd.s f11, f17, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f17, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x32b466404c2be800 # load x3 with value 0x32b466404c2be800
sw x3, 0(x2) # store 0x32b466404c2be800 in memory
flw f3, 0(x2) # load 0x32b466404c2be800 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f22, f28, f3, f13, dyn # perform operation
fnmadd.s f22, f28, f3, f13, rdn # perform operation
fnmadd.s f22, f28, f3, f13, rmm # perform operation
fnmadd.s f22, f28, f3, f13, rne # perform operation
fnmadd.s f22, f28, f3, f13, rtz # perform operation
fnmadd.s f22, f28, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xf20b77ff3e1684ca # load x3 with value 0xf20b77ff3e1684ca
sw x3, 0(x2) # store 0xf20b77ff3e1684ca in memory
flw f2, 0(x2) # load 0xf20b77ff3e1684ca from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmadd.s f7, f9, f2, f12, dyn # perform operation
fnmadd.s f7, f9, f2, f12, rdn # perform operation
fnmadd.s f7, f9, f2, f12, rmm # perform operation
fnmadd.s f7, f9, f2, f12, rne # perform operation
fnmadd.s f7, f9, f2, f12, rtz # perform operation
fnmadd.s f7, f9, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x4567b5bec655d365 # load x3 with value 0x4567b5bec655d365
sw x3, 0(x2) # store 0x4567b5bec655d365 in memory
flw f14, 0(x2) # load 0x4567b5bec655d365 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmadd.s f9, f27, f14, f16, dyn # perform operation
fnmadd.s f9, f27, f14, f16, rdn # perform operation
fnmadd.s f9, f27, f14, f16, rmm # perform operation
fnmadd.s f9, f27, f14, f16, rne # perform operation
fnmadd.s f9, f27, f14, f16, rtz # perform operation
fnmadd.s f9, f27, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x57ccc2988bb99632 # load x3 with value 0x57ccc2988bb99632
sw x3, 0(x2) # store 0x57ccc2988bb99632 in memory
flw f3, 0(x2) # load 0x57ccc2988bb99632 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fnmadd.s f21, f10, f3, f28, dyn # perform operation
fnmadd.s f21, f10, f3, f28, rdn # perform operation
fnmadd.s f21, f10, f3, f28, rmm # perform operation
fnmadd.s f21, f10, f3, f28, rne # perform operation
fnmadd.s f21, f10, f3, f28, rtz # perform operation
fnmadd.s f21, f10, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x9c7ba795c3072216 # load x3 with value 0x9c7ba795c3072216
sw x3, 0(x2) # store 0x9c7ba795c3072216 in memory
flw f8, 0(x2) # load 0x9c7ba795c3072216 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f3, f5, f8, f25, dyn # perform operation
fnmadd.s f3, f5, f8, f25, rdn # perform operation
fnmadd.s f3, f5, f8, f25, rmm # perform operation
fnmadd.s f3, f5, f8, f25, rne # perform operation
fnmadd.s f3, f5, f8, f25, rtz # perform operation
fnmadd.s f3, f5, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x8be8ef8f4fa7745e # load x3 with value 0x8be8ef8f4fa7745e
sw x3, 0(x2) # store 0x8be8ef8f4fa7745e in memory
flw f11, 0(x2) # load 0x8be8ef8f4fa7745e from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f9, f7, f11, f29, dyn # perform operation
fnmadd.s f9, f7, f11, f29, rdn # perform operation
fnmadd.s f9, f7, f11, f29, rmm # perform operation
fnmadd.s f9, f7, f11, f29, rne # perform operation
fnmadd.s f9, f7, f11, f29, rtz # perform operation
fnmadd.s f9, f7, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f7, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x561f63d4e912dd1d # load x3 with value 0x561f63d4e912dd1d
sw x3, 0(x2) # store 0x561f63d4e912dd1d in memory
flw f1, 0(x2) # load 0x561f63d4e912dd1d from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmadd.s f13, f20, f1, f16, dyn # perform operation
fnmadd.s f13, f20, f1, f16, rdn # perform operation
fnmadd.s f13, f20, f1, f16, rmm # perform operation
fnmadd.s f13, f20, f1, f16, rne # perform operation
fnmadd.s f13, f20, f1, f16, rtz # perform operation
fnmadd.s f13, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x760326496d56cfd4 # load x3 with value 0x760326496d56cfd4
sw x3, 0(x2) # store 0x760326496d56cfd4 in memory
flw f11, 0(x2) # load 0x760326496d56cfd4 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f24, f25, f11, f9, dyn # perform operation
fnmadd.s f24, f25, f11, f9, rdn # perform operation
fnmadd.s f24, f25, f11, f9, rmm # perform operation
fnmadd.s f24, f25, f11, f9, rne # perform operation
fnmadd.s f24, f25, f11, f9, rtz # perform operation
fnmadd.s f24, f25, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x786bb0b0506bca77 # load x3 with value 0x786bb0b0506bca77
sw x3, 0(x2) # store 0x786bb0b0506bca77 in memory
flw f7, 0(x2) # load 0x786bb0b0506bca77 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmadd.s f6, f24, f7, f29, dyn # perform operation
fnmadd.s f6, f24, f7, f29, rdn # perform operation
fnmadd.s f6, f24, f7, f29, rmm # perform operation
fnmadd.s f6, f24, f7, f29, rne # perform operation
fnmadd.s f6, f24, f7, f29, rtz # perform operation
fnmadd.s f6, f24, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xdacd9e2c8dbd2394 # load x3 with value 0xdacd9e2c8dbd2394
sw x3, 0(x2) # store 0xdacd9e2c8dbd2394 in memory
flw f25, 0(x2) # load 0xdacd9e2c8dbd2394 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmadd.s f15, f28, f25, f16, dyn # perform operation
fnmadd.s f15, f28, f25, f16, rdn # perform operation
fnmadd.s f15, f28, f25, f16, rmm # perform operation
fnmadd.s f15, f28, f25, f16, rne # perform operation
fnmadd.s f15, f28, f25, f16, rtz # perform operation
fnmadd.s f15, f28, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f28, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x3704bff4ceedfa52 # load x3 with value 0x3704bff4ceedfa52
sw x3, 0(x2) # store 0x3704bff4ceedfa52 in memory
flw f29, 0(x2) # load 0x3704bff4ceedfa52 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fnmadd.s f23, f14, f29, f24, dyn # perform operation
fnmadd.s f23, f14, f29, f24, rdn # perform operation
fnmadd.s f23, f14, f29, f24, rmm # perform operation
fnmadd.s f23, f14, f29, f24, rne # perform operation
fnmadd.s f23, f14, f29, f24, rtz # perform operation
fnmadd.s f23, f14, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xde375f851223813c # load x3 with value 0xde375f851223813c
sw x3, 0(x2) # store 0xde375f851223813c in memory
flw f20, 0(x2) # load 0xde375f851223813c from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmadd.s f7, f24, f20, f22, dyn # perform operation
fnmadd.s f7, f24, f20, f22, rdn # perform operation
fnmadd.s f7, f24, f20, f22, rmm # perform operation
fnmadd.s f7, f24, f20, f22, rne # perform operation
fnmadd.s f7, f24, f20, f22, rtz # perform operation
fnmadd.s f7, f24, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x1c85db419a8a9292 # load x3 with value 0x1c85db419a8a9292
sw x3, 0(x2) # store 0x1c85db419a8a9292 in memory
flw f14, 0(x2) # load 0x1c85db419a8a9292 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmadd.s f30, f23, f14, f16, dyn # perform operation
fnmadd.s f30, f23, f14, f16, rdn # perform operation
fnmadd.s f30, f23, f14, f16, rmm # perform operation
fnmadd.s f30, f23, f14, f16, rne # perform operation
fnmadd.s f30, f23, f14, f16, rtz # perform operation
fnmadd.s f30, f23, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x4d04b06d4f7a779c # load x3 with value 0x4d04b06d4f7a779c
sw x3, 0(x2) # store 0x4d04b06d4f7a779c in memory
flw f16, 0(x2) # load 0x4d04b06d4f7a779c from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fnmadd.s f15, f11, f16, f18, dyn # perform operation
fnmadd.s f15, f11, f16, f18, rdn # perform operation
fnmadd.s f15, f11, f16, f18, rmm # perform operation
fnmadd.s f15, f11, f16, f18, rne # perform operation
fnmadd.s f15, f11, f16, f18, rtz # perform operation
fnmadd.s f15, f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xb1326eb6ac6979da # load x3 with value 0xb1326eb6ac6979da
sw x3, 0(x2) # store 0xb1326eb6ac6979da in memory
flw f7, 0(x2) # load 0xb1326eb6ac6979da from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f19, f24, f7, f3, dyn # perform operation
fnmadd.s f19, f24, f7, f3, rdn # perform operation
fnmadd.s f19, f24, f7, f3, rmm # perform operation
fnmadd.s f19, f24, f7, f3, rne # perform operation
fnmadd.s f19, f24, f7, f3, rtz # perform operation
fnmadd.s f19, f24, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x9ca671069e1fa3a6 # load x3 with value 0x9ca671069e1fa3a6
sw x3, 0(x2) # store 0x9ca671069e1fa3a6 in memory
flw f7, 0(x2) # load 0x9ca671069e1fa3a6 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmadd.s f16, f14, f7, f29, dyn # perform operation
fnmadd.s f16, f14, f7, f29, rdn # perform operation
fnmadd.s f16, f14, f7, f29, rmm # perform operation
fnmadd.s f16, f14, f7, f29, rne # perform operation
fnmadd.s f16, f14, f7, f29, rtz # perform operation
fnmadd.s f16, f14, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f14, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xc3f7f363cba7e608 # load x3 with value 0xc3f7f363cba7e608
sw x3, 0(x2) # store 0xc3f7f363cba7e608 in memory
flw f18, 0(x2) # load 0xc3f7f363cba7e608 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmadd.s f12, f30, f18, f27, dyn # perform operation
fnmadd.s f12, f30, f18, f27, rdn # perform operation
fnmadd.s f12, f30, f18, f27, rmm # perform operation
fnmadd.s f12, f30, f18, f27, rne # perform operation
fnmadd.s f12, f30, f18, f27, rtz # perform operation
fnmadd.s f12, f30, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f30, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f30, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f30, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f30, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f30, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x1bcdf7c771c5cf9d # load x3 with value 0x1bcdf7c771c5cf9d
sw x3, 0(x2) # store 0x1bcdf7c771c5cf9d in memory
flw f8, 0(x2) # load 0x1bcdf7c771c5cf9d from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f19, f10, f8, f6, dyn # perform operation
fnmadd.s f19, f10, f8, f6, rdn # perform operation
fnmadd.s f19, f10, f8, f6, rmm # perform operation
fnmadd.s f19, f10, f8, f6, rne # perform operation
fnmadd.s f19, f10, f8, f6, rtz # perform operation
fnmadd.s f19, f10, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x574352e0087ac381 # load x3 with value 0x574352e0087ac381
sw x3, 0(x2) # store 0x574352e0087ac381 in memory
flw f24, 0(x2) # load 0x574352e0087ac381 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmadd.s f13, f9, f24, f10, dyn # perform operation
fnmadd.s f13, f9, f24, f10, rdn # perform operation
fnmadd.s f13, f9, f24, f10, rmm # perform operation
fnmadd.s f13, f9, f24, f10, rne # perform operation
fnmadd.s f13, f9, f24, f10, rtz # perform operation
fnmadd.s f13, f9, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x879c77762e545855 # load x3 with value 0x879c77762e545855
sw x3, 0(x2) # store 0x879c77762e545855 in memory
flw f8, 0(x2) # load 0x879c77762e545855 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fnmadd.s f26, f21, f8, f9, dyn # perform operation
fnmadd.s f26, f21, f8, f9, rdn # perform operation
fnmadd.s f26, f21, f8, f9, rmm # perform operation
fnmadd.s f26, f21, f8, f9, rne # perform operation
fnmadd.s f26, f21, f8, f9, rtz # perform operation
fnmadd.s f26, f21, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x2d736a7ae9383377 # load x3 with value 0x2d736a7ae9383377
sw x3, 0(x2) # store 0x2d736a7ae9383377 in memory
flw f27, 0(x2) # load 0x2d736a7ae9383377 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f6, f28, f27, f2, dyn # perform operation
fnmadd.s f6, f28, f27, f2, rdn # perform operation
fnmadd.s f6, f28, f27, f2, rmm # perform operation
fnmadd.s f6, f28, f27, f2, rne # perform operation
fnmadd.s f6, f28, f27, f2, rtz # perform operation
fnmadd.s f6, f28, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xb825ae5ae1725d34 # load x3 with value 0xb825ae5ae1725d34
sw x3, 0(x2) # store 0xb825ae5ae1725d34 in memory
flw f3, 0(x2) # load 0xb825ae5ae1725d34 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f12, f31, f3, f19, dyn # perform operation
fnmadd.s f12, f31, f3, f19, rdn # perform operation
fnmadd.s f12, f31, f3, f19, rmm # perform operation
fnmadd.s f12, f31, f3, f19, rne # perform operation
fnmadd.s f12, f31, f3, f19, rtz # perform operation
fnmadd.s f12, f31, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x2a7930d6bcd07c19 # load x3 with value 0x2a7930d6bcd07c19
sw x3, 0(x2) # store 0x2a7930d6bcd07c19 in memory
flw f21, 0(x2) # load 0x2a7930d6bcd07c19 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.s f29, f25, f21, f28, dyn # perform operation
fnmadd.s f29, f25, f21, f28, rdn # perform operation
fnmadd.s f29, f25, f21, f28, rmm # perform operation
fnmadd.s f29, f25, f21, f28, rne # perform operation
fnmadd.s f29, f25, f21, f28, rtz # perform operation
fnmadd.s f29, f25, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x74332972f6936f07 # load x3 with value 0x74332972f6936f07
sw x3, 0(x2) # store 0x74332972f6936f07 in memory
flw f31, 0(x2) # load 0x74332972f6936f07 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmadd.s f16, f19, f31, f24, dyn # perform operation
fnmadd.s f16, f19, f31, f24, rdn # perform operation
fnmadd.s f16, f19, f31, f24, rmm # perform operation
fnmadd.s f16, f19, f31, f24, rne # perform operation
fnmadd.s f16, f19, f31, f24, rtz # perform operation
fnmadd.s f16, f19, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x1597a426c52ed8ae # load x3 with value 0x1597a426c52ed8ae
sw x3, 0(x2) # store 0x1597a426c52ed8ae in memory
flw f7, 0(x2) # load 0x1597a426c52ed8ae from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fnmadd.s f10, f28, f7, f2, dyn # perform operation
fnmadd.s f10, f28, f7, f2, rdn # perform operation
fnmadd.s f10, f28, f7, f2, rmm # perform operation
fnmadd.s f10, f28, f7, f2, rne # perform operation
fnmadd.s f10, f28, f7, f2, rtz # perform operation
fnmadd.s f10, f28, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x914fd23bd4227678 # load x3 with value 0x914fd23bd4227678
sw x3, 0(x2) # store 0x914fd23bd4227678 in memory
flw f29, 0(x2) # load 0x914fd23bd4227678 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f13, f26, f29, f27, dyn # perform operation
fnmadd.s f13, f26, f29, f27, rdn # perform operation
fnmadd.s f13, f26, f29, f27, rmm # perform operation
fnmadd.s f13, f26, f29, f27, rne # perform operation
fnmadd.s f13, f26, f29, f27, rtz # perform operation
fnmadd.s f13, f26, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xc186c0145a38f06a # load x3 with value 0xc186c0145a38f06a
sw x3, 0(x2) # store 0xc186c0145a38f06a in memory
flw f15, 0(x2) # load 0xc186c0145a38f06a from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fnmadd.s f7, f19, f15, f18, dyn # perform operation
fnmadd.s f7, f19, f15, f18, rdn # perform operation
fnmadd.s f7, f19, f15, f18, rmm # perform operation
fnmadd.s f7, f19, f15, f18, rne # perform operation
fnmadd.s f7, f19, f15, f18, rtz # perform operation
fnmadd.s f7, f19, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x1df114f347ef9978 # load x3 with value 0x1df114f347ef9978
sw x3, 0(x2) # store 0x1df114f347ef9978 in memory
flw f7, 0(x2) # load 0x1df114f347ef9978 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmadd.s f6, f11, f7, f22, dyn # perform operation
fnmadd.s f6, f11, f7, f22, rdn # perform operation
fnmadd.s f6, f11, f7, f22, rmm # perform operation
fnmadd.s f6, f11, f7, f22, rne # perform operation
fnmadd.s f6, f11, f7, f22, rtz # perform operation
fnmadd.s f6, f11, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x8a0f0c11ff98f14c # load x3 with value 0x8a0f0c11ff98f14c
sw x3, 0(x2) # store 0x8a0f0c11ff98f14c in memory
flw f11, 0(x2) # load 0x8a0f0c11ff98f14c from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmadd.s f27, f29, f11, f26, dyn # perform operation
fnmadd.s f27, f29, f11, f26, rdn # perform operation
fnmadd.s f27, f29, f11, f26, rmm # perform operation
fnmadd.s f27, f29, f11, f26, rne # perform operation
fnmadd.s f27, f29, f11, f26, rtz # perform operation
fnmadd.s f27, f29, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x4b2365e399299608 # load x3 with value 0x4b2365e399299608
sw x3, 0(x2) # store 0x4b2365e399299608 in memory
flw f23, 0(x2) # load 0x4b2365e399299608 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fnmadd.s f17, f1, f23, f8, dyn # perform operation
fnmadd.s f17, f1, f23, f8, rdn # perform operation
fnmadd.s f17, f1, f23, f8, rmm # perform operation
fnmadd.s f17, f1, f23, f8, rne # perform operation
fnmadd.s f17, f1, f23, f8, rtz # perform operation
fnmadd.s f17, f1, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x57646089f6b58449 # load x3 with value 0x57646089f6b58449
sw x3, 0(x2) # store 0x57646089f6b58449 in memory
flw f6, 0(x2) # load 0x57646089f6b58449 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f14, f18, f6, f26, dyn # perform operation
fnmadd.s f14, f18, f6, f26, rdn # perform operation
fnmadd.s f14, f18, f6, f26, rmm # perform operation
fnmadd.s f14, f18, f6, f26, rne # perform operation
fnmadd.s f14, f18, f6, f26, rtz # perform operation
fnmadd.s f14, f18, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xcc36755a6fab3763 # load x3 with value 0xcc36755a6fab3763
sw x3, 0(x2) # store 0xcc36755a6fab3763 in memory
flw f31, 0(x2) # load 0xcc36755a6fab3763 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmadd.s f5, f15, f31, f12, dyn # perform operation
fnmadd.s f5, f15, f31, f12, rdn # perform operation
fnmadd.s f5, f15, f31, f12, rmm # perform operation
fnmadd.s f5, f15, f31, f12, rne # perform operation
fnmadd.s f5, f15, f31, f12, rtz # perform operation
fnmadd.s f5, f15, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f15, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x70201856c926dc61 # load x3 with value 0x70201856c926dc61
sw x3, 0(x2) # store 0x70201856c926dc61 in memory
flw f31, 0(x2) # load 0x70201856c926dc61 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmadd.s f21, f15, f31, f30, dyn # perform operation
fnmadd.s f21, f15, f31, f30, rdn # perform operation
fnmadd.s f21, f15, f31, f30, rmm # perform operation
fnmadd.s f21, f15, f31, f30, rne # perform operation
fnmadd.s f21, f15, f31, f30, rtz # perform operation
fnmadd.s f21, f15, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x81f68892544ed2d4 # load x3 with value 0x81f68892544ed2d4
sw x3, 0(x2) # store 0x81f68892544ed2d4 in memory
flw f25, 0(x2) # load 0x81f68892544ed2d4 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f10, f7, f25, f28, dyn # perform operation
fnmadd.s f10, f7, f25, f28, rdn # perform operation
fnmadd.s f10, f7, f25, f28, rmm # perform operation
fnmadd.s f10, f7, f25, f28, rne # perform operation
fnmadd.s f10, f7, f25, f28, rtz # perform operation
fnmadd.s f10, f7, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x6f9ea8a7c9bd1e48 # load x3 with value 0x6f9ea8a7c9bd1e48
sw x3, 0(x2) # store 0x6f9ea8a7c9bd1e48 in memory
flw f23, 0(x2) # load 0x6f9ea8a7c9bd1e48 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmadd.s f31, f10, f23, f26, dyn # perform operation
fnmadd.s f31, f10, f23, f26, rdn # perform operation
fnmadd.s f31, f10, f23, f26, rmm # perform operation
fnmadd.s f31, f10, f23, f26, rne # perform operation
fnmadd.s f31, f10, f23, f26, rtz # perform operation
fnmadd.s f31, f10, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x6e6320b6b8f9fd84 # load x3 with value 0x6e6320b6b8f9fd84
sw x3, 0(x2) # store 0x6e6320b6b8f9fd84 in memory
flw f2, 0(x2) # load 0x6e6320b6b8f9fd84 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fnmadd.s f22, f31, f2, f30, dyn # perform operation
fnmadd.s f22, f31, f2, f30, rdn # perform operation
fnmadd.s f22, f31, f2, f30, rmm # perform operation
fnmadd.s f22, f31, f2, f30, rne # perform operation
fnmadd.s f22, f31, f2, f30, rtz # perform operation
fnmadd.s f22, f31, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f31, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f31, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f31, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f31, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f31, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xfd28485e9c67b075 # load x3 with value 0xfd28485e9c67b075
sw x3, 0(x2) # store 0xfd28485e9c67b075 in memory
flw f17, 0(x2) # load 0xfd28485e9c67b075 from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmadd.s f28, f16, f17, f18, dyn # perform operation
fnmadd.s f28, f16, f17, f18, rdn # perform operation
fnmadd.s f28, f16, f17, f18, rmm # perform operation
fnmadd.s f28, f16, f17, f18, rne # perform operation
fnmadd.s f28, f16, f17, f18, rtz # perform operation
fnmadd.s f28, f16, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xf629aede7dba4c2c # load x3 with value 0xf629aede7dba4c2c
sw x3, 0(x2) # store 0xf629aede7dba4c2c in memory
flw f18, 0(x2) # load 0xf629aede7dba4c2c from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmadd.s f28, f27, f18, f31, dyn # perform operation
fnmadd.s f28, f27, f18, f31, rdn # perform operation
fnmadd.s f28, f27, f18, f31, rmm # perform operation
fnmadd.s f28, f27, f18, f31, rne # perform operation
fnmadd.s f28, f27, f18, f31, rtz # perform operation
fnmadd.s f28, f27, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xdb88cabcafd52c1f # load x3 with value 0xdb88cabcafd52c1f
sw x3, 0(x2) # store 0xdb88cabcafd52c1f in memory
flw f27, 0(x2) # load 0xdb88cabcafd52c1f from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.s f26, f5, f27, f7, dyn # perform operation
fnmadd.s f26, f5, f27, f7, rdn # perform operation
fnmadd.s f26, f5, f27, f7, rmm # perform operation
fnmadd.s f26, f5, f27, f7, rne # perform operation
fnmadd.s f26, f5, f27, f7, rtz # perform operation
fnmadd.s f26, f5, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f5, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f5, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x733baa57d16e98d9 # load x3 with value 0x733baa57d16e98d9
sw x3, 0(x2) # store 0x733baa57d16e98d9 in memory
flw f28, 0(x2) # load 0x733baa57d16e98d9 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fnmadd.s f21, f6, f28, f31, dyn # perform operation
fnmadd.s f21, f6, f28, f31, rdn # perform operation
fnmadd.s f21, f6, f28, f31, rmm # perform operation
fnmadd.s f21, f6, f28, f31, rne # perform operation
fnmadd.s f21, f6, f28, f31, rtz # perform operation
fnmadd.s f21, f6, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xf944c0b64f274a71 # load x3 with value 0xf944c0b64f274a71
sw x3, 0(x2) # store 0xf944c0b64f274a71 in memory
flw f19, 0(x2) # load 0xf944c0b64f274a71 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmadd.s f10, f16, f19, f8, dyn # perform operation
fnmadd.s f10, f16, f19, f8, rdn # perform operation
fnmadd.s f10, f16, f19, f8, rmm # perform operation
fnmadd.s f10, f16, f19, f8, rne # perform operation
fnmadd.s f10, f16, f19, f8, rtz # perform operation
fnmadd.s f10, f16, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x5c9a71ed4aa26ec2 # load x3 with value 0x5c9a71ed4aa26ec2
sw x3, 0(x2) # store 0x5c9a71ed4aa26ec2 in memory
flw f2, 0(x2) # load 0x5c9a71ed4aa26ec2 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f27, f20, f2, f17, dyn # perform operation
fnmadd.s f27, f20, f2, f17, rdn # perform operation
fnmadd.s f27, f20, f2, f17, rmm # perform operation
fnmadd.s f27, f20, f2, f17, rne # perform operation
fnmadd.s f27, f20, f2, f17, rtz # perform operation
fnmadd.s f27, f20, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x7a91d44b021d176c # load x3 with value 0x7a91d44b021d176c
sw x3, 0(x2) # store 0x7a91d44b021d176c in memory
flw f11, 0(x2) # load 0x7a91d44b021d176c from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fnmadd.s f10, f24, f11, f30, dyn # perform operation
fnmadd.s f10, f24, f11, f30, rdn # perform operation
fnmadd.s f10, f24, f11, f30, rmm # perform operation
fnmadd.s f10, f24, f11, f30, rne # perform operation
fnmadd.s f10, f24, f11, f30, rtz # perform operation
fnmadd.s f10, f24, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x48f47ebc769defc6 # load x3 with value 0x48f47ebc769defc6
sw x3, 0(x2) # store 0x48f47ebc769defc6 in memory
flw f13, 0(x2) # load 0x48f47ebc769defc6 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmadd.s f1, f7, f13, f25, dyn # perform operation
fnmadd.s f1, f7, f13, f25, rdn # perform operation
fnmadd.s f1, f7, f13, f25, rmm # perform operation
fnmadd.s f1, f7, f13, f25, rne # perform operation
fnmadd.s f1, f7, f13, f25, rtz # perform operation
fnmadd.s f1, f7, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x51cc43392742ebee # load x3 with value 0x51cc43392742ebee
sw x3, 0(x2) # store 0x51cc43392742ebee in memory
flw f26, 0(x2) # load 0x51cc43392742ebee from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
fnmadd.s f29, f23, f26, f11, dyn # perform operation
fnmadd.s f29, f23, f26, f11, rdn # perform operation
fnmadd.s f29, f23, f26, f11, rmm # perform operation
fnmadd.s f29, f23, f26, f11, rne # perform operation
fnmadd.s f29, f23, f26, f11, rtz # perform operation
fnmadd.s f29, f23, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xaed8656187239b2e # load x3 with value 0xaed8656187239b2e
sw x3, 0(x2) # store 0xaed8656187239b2e in memory
flw f1, 0(x2) # load 0xaed8656187239b2e from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f6, f10, f1, f22, dyn # perform operation
fnmadd.s f6, f10, f1, f22, rdn # perform operation
fnmadd.s f6, f10, f1, f22, rmm # perform operation
fnmadd.s f6, f10, f1, f22, rne # perform operation
fnmadd.s f6, f10, f1, f22, rtz # perform operation
fnmadd.s f6, f10, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x11a4796871590214 # load x3 with value 0x11a4796871590214
sw x3, 0(x2) # store 0x11a4796871590214 in memory
flw f23, 0(x2) # load 0x11a4796871590214 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fnmadd.s f5, f25, f23, f18, dyn # perform operation
fnmadd.s f5, f25, f23, f18, rdn # perform operation
fnmadd.s f5, f25, f23, f18, rmm # perform operation
fnmadd.s f5, f25, f23, f18, rne # perform operation
fnmadd.s f5, f25, f23, f18, rtz # perform operation
fnmadd.s f5, f25, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xb22a0785eff73d7f # load x3 with value 0xb22a0785eff73d7f
sw x3, 0(x2) # store 0xb22a0785eff73d7f in memory
flw f19, 0(x2) # load 0xb22a0785eff73d7f from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmadd.s f10, f18, f19, f6, dyn # perform operation
fnmadd.s f10, f18, f19, f6, rdn # perform operation
fnmadd.s f10, f18, f19, f6, rmm # perform operation
fnmadd.s f10, f18, f19, f6, rne # perform operation
fnmadd.s f10, f18, f19, f6, rtz # perform operation
fnmadd.s f10, f18, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f18, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x9a3bf546205f8423 # load x3 with value 0x9a3bf546205f8423
sw x3, 0(x2) # store 0x9a3bf546205f8423 in memory
flw f9, 0(x2) # load 0x9a3bf546205f8423 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fnmadd.s f23, f5, f9, f18, dyn # perform operation
fnmadd.s f23, f5, f9, f18, rdn # perform operation
fnmadd.s f23, f5, f9, f18, rmm # perform operation
fnmadd.s f23, f5, f9, f18, rne # perform operation
fnmadd.s f23, f5, f9, f18, rtz # perform operation
fnmadd.s f23, f5, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f5, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f5, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f5, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f5, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f5, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x56e10188d543e277 # load x3 with value 0x56e10188d543e277
sw x3, 0(x2) # store 0x56e10188d543e277 in memory
flw f17, 0(x2) # load 0x56e10188d543e277 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmadd.s f21, f31, f17, f3, dyn # perform operation
fnmadd.s f21, f31, f17, f3, rdn # perform operation
fnmadd.s f21, f31, f17, f3, rmm # perform operation
fnmadd.s f21, f31, f17, f3, rne # perform operation
fnmadd.s f21, f31, f17, f3, rtz # perform operation
fnmadd.s f21, f31, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x96975c09d11a519 # load x3 with value 0x96975c09d11a519
sw x3, 0(x2) # store 0x96975c09d11a519 in memory
flw f22, 0(x2) # load 0x96975c09d11a519 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.s f11, f14, f22, f7, dyn # perform operation
fnmadd.s f11, f14, f22, f7, rdn # perform operation
fnmadd.s f11, f14, f22, f7, rmm # perform operation
fnmadd.s f11, f14, f22, f7, rne # perform operation
fnmadd.s f11, f14, f22, f7, rtz # perform operation
fnmadd.s f11, f14, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f22, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x9246b71f0ce1abed # load x3 with value 0x9246b71f0ce1abed
sw x3, 0(x2) # store 0x9246b71f0ce1abed in memory
flw f28, 0(x2) # load 0x9246b71f0ce1abed from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f23, f27, f28, f21, dyn # perform operation
fnmadd.s f23, f27, f28, f21, rdn # perform operation
fnmadd.s f23, f27, f28, f21, rmm # perform operation
fnmadd.s f23, f27, f28, f21, rne # perform operation
fnmadd.s f23, f27, f28, f21, rtz # perform operation
fnmadd.s f23, f27, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xbc770214ce9e527e # load x3 with value 0xbc770214ce9e527e
sw x3, 0(x2) # store 0xbc770214ce9e527e in memory
flw f2, 0(x2) # load 0xbc770214ce9e527e from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f11, f12, f2, f30, dyn # perform operation
fnmadd.s f11, f12, f2, f30, rdn # perform operation
fnmadd.s f11, f12, f2, f30, rmm # perform operation
fnmadd.s f11, f12, f2, f30, rne # perform operation
fnmadd.s f11, f12, f2, f30, rtz # perform operation
fnmadd.s f11, f12, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xea3ed895ae2ece90 # load x3 with value 0xea3ed895ae2ece90
sw x3, 0(x2) # store 0xea3ed895ae2ece90 in memory
flw f15, 0(x2) # load 0xea3ed895ae2ece90 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmadd.s f2, f5, f15, f23, dyn # perform operation
fnmadd.s f2, f5, f15, f23, rdn # perform operation
fnmadd.s f2, f5, f15, f23, rmm # perform operation
fnmadd.s f2, f5, f15, f23, rne # perform operation
fnmadd.s f2, f5, f15, f23, rtz # perform operation
fnmadd.s f2, f5, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f5, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f5, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f5, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f5, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f5, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xb3db697f76247627 # load x3 with value 0xb3db697f76247627
sw x3, 0(x2) # store 0xb3db697f76247627 in memory
flw f3, 0(x2) # load 0xb3db697f76247627 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmadd.s f18, f22, f3, f11, dyn # perform operation
fnmadd.s f18, f22, f3, f11, rdn # perform operation
fnmadd.s f18, f22, f3, f11, rmm # perform operation
fnmadd.s f18, f22, f3, f11, rne # perform operation
fnmadd.s f18, f22, f3, f11, rtz # perform operation
fnmadd.s f18, f22, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xb9a7c8d85e6fce89 # load x3 with value 0xb9a7c8d85e6fce89
sw x3, 0(x2) # store 0xb9a7c8d85e6fce89 in memory
flw f9, 0(x2) # load 0xb9a7c8d85e6fce89 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmadd.s f18, f14, f9, f1, dyn # perform operation
fnmadd.s f18, f14, f9, f1, rdn # perform operation
fnmadd.s f18, f14, f9, f1, rmm # perform operation
fnmadd.s f18, f14, f9, f1, rne # perform operation
fnmadd.s f18, f14, f9, f1, rtz # perform operation
fnmadd.s f18, f14, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x1bcc3c4f0a6aec9b # load x3 with value 0x1bcc3c4f0a6aec9b
sw x3, 0(x2) # store 0x1bcc3c4f0a6aec9b in memory
flw f14, 0(x2) # load 0x1bcc3c4f0a6aec9b from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f29, f7, f14, f25, dyn # perform operation
fnmadd.s f29, f7, f14, f25, rdn # perform operation
fnmadd.s f29, f7, f14, f25, rmm # perform operation
fnmadd.s f29, f7, f14, f25, rne # perform operation
fnmadd.s f29, f7, f14, f25, rtz # perform operation
fnmadd.s f29, f7, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x755547789c0f7ca1 # load x3 with value 0x755547789c0f7ca1
sw x3, 0(x2) # store 0x755547789c0f7ca1 in memory
flw f24, 0(x2) # load 0x755547789c0f7ca1 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fnmadd.s f31, f21, f24, f5, dyn # perform operation
fnmadd.s f31, f21, f24, f5, rdn # perform operation
fnmadd.s f31, f21, f24, f5, rmm # perform operation
fnmadd.s f31, f21, f24, f5, rne # perform operation
fnmadd.s f31, f21, f24, f5, rtz # perform operation
fnmadd.s f31, f21, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f21, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f21, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f21, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f21, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f21, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x30ee981f9f3bde20 # load x3 with value 0x30ee981f9f3bde20
sw x3, 0(x2) # store 0x30ee981f9f3bde20 in memory
flw f13, 0(x2) # load 0x30ee981f9f3bde20 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmadd.s f19, f6, f13, f15, dyn # perform operation
fnmadd.s f19, f6, f13, f15, rdn # perform operation
fnmadd.s f19, f6, f13, f15, rmm # perform operation
fnmadd.s f19, f6, f13, f15, rne # perform operation
fnmadd.s f19, f6, f13, f15, rtz # perform operation
fnmadd.s f19, f6, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x2fb6f79e6615203f # load x3 with value 0x2fb6f79e6615203f
sw x3, 0(x2) # store 0x2fb6f79e6615203f in memory
flw f15, 0(x2) # load 0x2fb6f79e6615203f from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f30, f31, f15, f2, dyn # perform operation
fnmadd.s f30, f31, f15, f2, rdn # perform operation
fnmadd.s f30, f31, f15, f2, rmm # perform operation
fnmadd.s f30, f31, f15, f2, rne # perform operation
fnmadd.s f30, f31, f15, f2, rtz # perform operation
fnmadd.s f30, f31, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x4739af96bd686986 # load x3 with value 0x4739af96bd686986
sw x3, 0(x2) # store 0x4739af96bd686986 in memory
flw f17, 0(x2) # load 0x4739af96bd686986 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmadd.s f1, f12, f17, f11, dyn # perform operation
fnmadd.s f1, f12, f17, f11, rdn # perform operation
fnmadd.s f1, f12, f17, f11, rmm # perform operation
fnmadd.s f1, f12, f17, f11, rne # perform operation
fnmadd.s f1, f12, f17, f11, rtz # perform operation
fnmadd.s f1, f12, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xf69dca1696de41eb # load x3 with value 0xf69dca1696de41eb
sw x3, 0(x2) # store 0xf69dca1696de41eb in memory
flw f19, 0(x2) # load 0xf69dca1696de41eb from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f16, f24, f19, f29, dyn # perform operation
fnmadd.s f16, f24, f19, f29, rdn # perform operation
fnmadd.s f16, f24, f19, f29, rmm # perform operation
fnmadd.s f16, f24, f19, f29, rne # perform operation
fnmadd.s f16, f24, f19, f29, rtz # perform operation
fnmadd.s f16, f24, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x9f44f57b29b40f91 # load x3 with value 0x9f44f57b29b40f91
sw x3, 0(x2) # store 0x9f44f57b29b40f91 in memory
flw f6, 0(x2) # load 0x9f44f57b29b40f91 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f20, f12, f6, f10, dyn # perform operation
fnmadd.s f20, f12, f6, f10, rdn # perform operation
fnmadd.s f20, f12, f6, f10, rmm # perform operation
fnmadd.s f20, f12, f6, f10, rne # perform operation
fnmadd.s f20, f12, f6, f10, rtz # perform operation
fnmadd.s f20, f12, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xf84b9f98efa99f62 # load x3 with value 0xf84b9f98efa99f62
sw x3, 0(x2) # store 0xf84b9f98efa99f62 in memory
flw f16, 0(x2) # load 0xf84b9f98efa99f62 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f10, f22, f16, f8, dyn # perform operation
fnmadd.s f10, f22, f16, f8, rdn # perform operation
fnmadd.s f10, f22, f16, f8, rmm # perform operation
fnmadd.s f10, f22, f16, f8, rne # perform operation
fnmadd.s f10, f22, f16, f8, rtz # perform operation
fnmadd.s f10, f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x2e0219b06f134fac # load x3 with value 0x2e0219b06f134fac
sw x3, 0(x2) # store 0x2e0219b06f134fac in memory
flw f19, 0(x2) # load 0x2e0219b06f134fac from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fnmadd.s f5, f3, f19, f14, dyn # perform operation
fnmadd.s f5, f3, f19, f14, rdn # perform operation
fnmadd.s f5, f3, f19, f14, rmm # perform operation
fnmadd.s f5, f3, f19, f14, rne # perform operation
fnmadd.s f5, f3, f19, f14, rtz # perform operation
fnmadd.s f5, f3, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x59eb45af3c2b10ab # load x3 with value 0x59eb45af3c2b10ab
sw x3, 0(x2) # store 0x59eb45af3c2b10ab in memory
flw f31, 0(x2) # load 0x59eb45af3c2b10ab from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fnmadd.s f28, f22, f31, f5, dyn # perform operation
fnmadd.s f28, f22, f31, f5, rdn # perform operation
fnmadd.s f28, f22, f31, f5, rmm # perform operation
fnmadd.s f28, f22, f31, f5, rne # perform operation
fnmadd.s f28, f22, f31, f5, rtz # perform operation
fnmadd.s f28, f22, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xf7e6d38719fe631 # load x3 with value 0xf7e6d38719fe631
sw x3, 0(x2) # store 0xf7e6d38719fe631 in memory
flw f21, 0(x2) # load 0xf7e6d38719fe631 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f19, f2, f21, f22, dyn # perform operation
fnmadd.s f19, f2, f21, f22, rdn # perform operation
fnmadd.s f19, f2, f21, f22, rmm # perform operation
fnmadd.s f19, f2, f21, f22, rne # perform operation
fnmadd.s f19, f2, f21, f22, rtz # perform operation
fnmadd.s f19, f2, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x5c5661733c267b00 # load x3 with value 0x5c5661733c267b00
sw x3, 0(x2) # store 0x5c5661733c267b00 in memory
flw f14, 0(x2) # load 0x5c5661733c267b00 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmadd.s f1, f26, f14, f19, dyn # perform operation
fnmadd.s f1, f26, f14, f19, rdn # perform operation
fnmadd.s f1, f26, f14, f19, rmm # perform operation
fnmadd.s f1, f26, f14, f19, rne # perform operation
fnmadd.s f1, f26, f14, f19, rtz # perform operation
fnmadd.s f1, f26, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x634d5ef2800245c9 # load x3 with value 0x634d5ef2800245c9
sw x3, 0(x2) # store 0x634d5ef2800245c9 in memory
flw f8, 0(x2) # load 0x634d5ef2800245c9 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmadd.s f18, f7, f8, f5, dyn # perform operation
fnmadd.s f18, f7, f8, f5, rdn # perform operation
fnmadd.s f18, f7, f8, f5, rmm # perform operation
fnmadd.s f18, f7, f8, f5, rne # perform operation
fnmadd.s f18, f7, f8, f5, rtz # perform operation
fnmadd.s f18, f7, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f7, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xfddc9a03fcaa8bb3 # load x3 with value 0xfddc9a03fcaa8bb3
sw x3, 0(x2) # store 0xfddc9a03fcaa8bb3 in memory
flw f3, 0(x2) # load 0xfddc9a03fcaa8bb3 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmadd.s f1, f14, f3, f24, dyn # perform operation
fnmadd.s f1, f14, f3, f24, rdn # perform operation
fnmadd.s f1, f14, f3, f24, rmm # perform operation
fnmadd.s f1, f14, f3, f24, rne # perform operation
fnmadd.s f1, f14, f3, f24, rtz # perform operation
fnmadd.s f1, f14, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x1d05233d95151f19 # load x3 with value 0x1d05233d95151f19
sw x3, 0(x2) # store 0x1d05233d95151f19 in memory
flw f18, 0(x2) # load 0x1d05233d95151f19 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f24, f21, f18, f25, dyn # perform operation
fnmadd.s f24, f21, f18, f25, rdn # perform operation
fnmadd.s f24, f21, f18, f25, rmm # perform operation
fnmadd.s f24, f21, f18, f25, rne # perform operation
fnmadd.s f24, f21, f18, f25, rtz # perform operation
fnmadd.s f24, f21, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xe1a8e670c1570cb5 # load x3 with value 0xe1a8e670c1570cb5
sw x3, 0(x2) # store 0xe1a8e670c1570cb5 in memory
flw f12, 0(x2) # load 0xe1a8e670c1570cb5 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmadd.s f31, f25, f12, f5, dyn # perform operation
fnmadd.s f31, f25, f12, f5, rdn # perform operation
fnmadd.s f31, f25, f12, f5, rmm # perform operation
fnmadd.s f31, f25, f12, f5, rne # perform operation
fnmadd.s f31, f25, f12, f5, rtz # perform operation
fnmadd.s f31, f25, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f25, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x7d12d6459e4a6228 # load x3 with value 0x7d12d6459e4a6228
sw x3, 0(x2) # store 0x7d12d6459e4a6228 in memory
flw f18, 0(x2) # load 0x7d12d6459e4a6228 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fnmadd.s f22, f3, f18, f20, dyn # perform operation
fnmadd.s f22, f3, f18, f20, rdn # perform operation
fnmadd.s f22, f3, f18, f20, rmm # perform operation
fnmadd.s f22, f3, f18, f20, rne # perform operation
fnmadd.s f22, f3, f18, f20, rtz # perform operation
fnmadd.s f22, f3, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f18, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xebc24bb52b625f58 # load x3 with value 0xebc24bb52b625f58
sw x3, 0(x2) # store 0xebc24bb52b625f58 in memory
flw f11, 0(x2) # load 0xebc24bb52b625f58 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmadd.s f7, f23, f11, f31, dyn # perform operation
fnmadd.s f7, f23, f11, f31, rdn # perform operation
fnmadd.s f7, f23, f11, f31, rmm # perform operation
fnmadd.s f7, f23, f11, f31, rne # perform operation
fnmadd.s f7, f23, f11, f31, rtz # perform operation
fnmadd.s f7, f23, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x766d6a514e860f2b # load x3 with value 0x766d6a514e860f2b
sw x3, 0(x2) # store 0x766d6a514e860f2b in memory
flw f21, 0(x2) # load 0x766d6a514e860f2b from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f29, f13, f21, f17, dyn # perform operation
fnmadd.s f29, f13, f21, f17, rdn # perform operation
fnmadd.s f29, f13, f21, f17, rmm # perform operation
fnmadd.s f29, f13, f21, f17, rne # perform operation
fnmadd.s f29, f13, f21, f17, rtz # perform operation
fnmadd.s f29, f13, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f21, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x26a93faf89b42674 # load x3 with value 0x26a93faf89b42674
sw x3, 0(x2) # store 0x26a93faf89b42674 in memory
flw f21, 0(x2) # load 0x26a93faf89b42674 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fnmadd.s f23, f30, f21, f3, dyn # perform operation
fnmadd.s f23, f30, f21, f3, rdn # perform operation
fnmadd.s f23, f30, f21, f3, rmm # perform operation
fnmadd.s f23, f30, f21, f3, rne # perform operation
fnmadd.s f23, f30, f21, f3, rtz # perform operation
fnmadd.s f23, f30, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xa72e094ac528e8a5 # load x3 with value 0xa72e094ac528e8a5
sw x3, 0(x2) # store 0xa72e094ac528e8a5 in memory
flw f12, 0(x2) # load 0xa72e094ac528e8a5 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f24, f17, f12, f2, dyn # perform operation
fnmadd.s f24, f17, f12, f2, rdn # perform operation
fnmadd.s f24, f17, f12, f2, rmm # perform operation
fnmadd.s f24, f17, f12, f2, rne # perform operation
fnmadd.s f24, f17, f12, f2, rtz # perform operation
fnmadd.s f24, f17, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f17, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x308bab1ed5d28146 # load x3 with value 0x308bab1ed5d28146
sw x3, 0(x2) # store 0x308bab1ed5d28146 in memory
flw f12, 0(x2) # load 0x308bab1ed5d28146 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmadd.s f14, f8, f12, f3, dyn # perform operation
fnmadd.s f14, f8, f12, f3, rdn # perform operation
fnmadd.s f14, f8, f12, f3, rmm # perform operation
fnmadd.s f14, f8, f12, f3, rne # perform operation
fnmadd.s f14, f8, f12, f3, rtz # perform operation
fnmadd.s f14, f8, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x791a99195752903e # load x3 with value 0x791a99195752903e
sw x3, 0(x2) # store 0x791a99195752903e in memory
flw f11, 0(x2) # load 0x791a99195752903e from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.s f5, f30, f11, f26, dyn # perform operation
fnmadd.s f5, f30, f11, f26, rdn # perform operation
fnmadd.s f5, f30, f11, f26, rmm # perform operation
fnmadd.s f5, f30, f11, f26, rne # perform operation
fnmadd.s f5, f30, f11, f26, rtz # perform operation
fnmadd.s f5, f30, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xa794512d87677d54 # load x3 with value 0xa794512d87677d54
sw x3, 0(x2) # store 0xa794512d87677d54 in memory
flw f23, 0(x2) # load 0xa794512d87677d54 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmadd.s f28, f2, f23, f6, dyn # perform operation
fnmadd.s f28, f2, f23, f6, rdn # perform operation
fnmadd.s f28, f2, f23, f6, rmm # perform operation
fnmadd.s f28, f2, f23, f6, rne # perform operation
fnmadd.s f28, f2, f23, f6, rtz # perform operation
fnmadd.s f28, f2, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f2, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x72b9f9827eae0332 # load x3 with value 0x72b9f9827eae0332
sw x3, 0(x2) # store 0x72b9f9827eae0332 in memory
flw f30, 0(x2) # load 0x72b9f9827eae0332 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fnmadd.s f15, f25, f30, f28, dyn # perform operation
fnmadd.s f15, f25, f30, f28, rdn # perform operation
fnmadd.s f15, f25, f30, f28, rmm # perform operation
fnmadd.s f15, f25, f30, f28, rne # perform operation
fnmadd.s f15, f25, f30, f28, rtz # perform operation
fnmadd.s f15, f25, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f25, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f25, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f25, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f25, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f25, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xd8e3c2646b10d210 # load x3 with value 0xd8e3c2646b10d210
sw x3, 0(x2) # store 0xd8e3c2646b10d210 in memory
flw f10, 0(x2) # load 0xd8e3c2646b10d210 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f3, f26, f10, f27, dyn # perform operation
fnmadd.s f3, f26, f10, f27, rdn # perform operation
fnmadd.s f3, f26, f10, f27, rmm # perform operation
fnmadd.s f3, f26, f10, f27, rne # perform operation
fnmadd.s f3, f26, f10, f27, rtz # perform operation
fnmadd.s f3, f26, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x61e74184d999aebf # load x3 with value 0x61e74184d999aebf
sw x3, 0(x2) # store 0x61e74184d999aebf in memory
flw f24, 0(x2) # load 0x61e74184d999aebf from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f5, f3, f24, f7, dyn # perform operation
fnmadd.s f5, f3, f24, f7, rdn # perform operation
fnmadd.s f5, f3, f24, f7, rmm # perform operation
fnmadd.s f5, f3, f24, f7, rne # perform operation
fnmadd.s f5, f3, f24, f7, rtz # perform operation
fnmadd.s f5, f3, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x13e7e447ae77750e # load x3 with value 0x13e7e447ae77750e
sw x3, 0(x2) # store 0x13e7e447ae77750e in memory
flw f20, 0(x2) # load 0x13e7e447ae77750e from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmadd.s f13, f19, f20, f7, dyn # perform operation
fnmadd.s f13, f19, f20, f7, rdn # perform operation
fnmadd.s f13, f19, f20, f7, rmm # perform operation
fnmadd.s f13, f19, f20, f7, rne # perform operation
fnmadd.s f13, f19, f20, f7, rtz # perform operation
fnmadd.s f13, f19, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x57ec3c5a079e95fb # load x3 with value 0x57ec3c5a079e95fb
sw x3, 0(x2) # store 0x57ec3c5a079e95fb in memory
flw f6, 0(x2) # load 0x57ec3c5a079e95fb from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fnmadd.s f7, f1, f6, f18, dyn # perform operation
fnmadd.s f7, f1, f6, f18, rdn # perform operation
fnmadd.s f7, f1, f6, f18, rmm # perform operation
fnmadd.s f7, f1, f6, f18, rne # perform operation
fnmadd.s f7, f1, f6, f18, rtz # perform operation
fnmadd.s f7, f1, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xcdeb92fddfc7ea27 # load x3 with value 0xcdeb92fddfc7ea27
sw x3, 0(x2) # store 0xcdeb92fddfc7ea27 in memory
flw f29, 0(x2) # load 0xcdeb92fddfc7ea27 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fnmadd.s f2, f31, f29, f6, dyn # perform operation
fnmadd.s f2, f31, f29, f6, rdn # perform operation
fnmadd.s f2, f31, f29, f6, rmm # perform operation
fnmadd.s f2, f31, f29, f6, rne # perform operation
fnmadd.s f2, f31, f29, f6, rtz # perform operation
fnmadd.s f2, f31, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x27a57d08093cc54e # load x3 with value 0x27a57d08093cc54e
sw x3, 0(x2) # store 0x27a57d08093cc54e in memory
flw f2, 0(x2) # load 0x27a57d08093cc54e from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmadd.s f14, f5, f2, f25, dyn # perform operation
fnmadd.s f14, f5, f2, f25, rdn # perform operation
fnmadd.s f14, f5, f2, f25, rmm # perform operation
fnmadd.s f14, f5, f2, f25, rne # perform operation
fnmadd.s f14, f5, f2, f25, rtz # perform operation
fnmadd.s f14, f5, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x1ca7ea7e16d9f4b1 # load x3 with value 0x1ca7ea7e16d9f4b1
sw x3, 0(x2) # store 0x1ca7ea7e16d9f4b1 in memory
flw f20, 0(x2) # load 0x1ca7ea7e16d9f4b1 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f30, f14, f20, f6, dyn # perform operation
fnmadd.s f30, f14, f20, f6, rdn # perform operation
fnmadd.s f30, f14, f20, f6, rmm # perform operation
fnmadd.s f30, f14, f20, f6, rne # perform operation
fnmadd.s f30, f14, f20, f6, rtz # perform operation
fnmadd.s f30, f14, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f20, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x277c604f19aeb06e # load x3 with value 0x277c604f19aeb06e
sw x3, 0(x2) # store 0x277c604f19aeb06e in memory
flw f1, 0(x2) # load 0x277c604f19aeb06e from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmadd.s f24, f22, f1, f21, dyn # perform operation
fnmadd.s f24, f22, f1, f21, rdn # perform operation
fnmadd.s f24, f22, f1, f21, rmm # perform operation
fnmadd.s f24, f22, f1, f21, rne # perform operation
fnmadd.s f24, f22, f1, f21, rtz # perform operation
fnmadd.s f24, f22, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f22, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x42bbb1fb89a08a48 # load x3 with value 0x42bbb1fb89a08a48
sw x3, 0(x2) # store 0x42bbb1fb89a08a48 in memory
flw f15, 0(x2) # load 0x42bbb1fb89a08a48 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fnmadd.s f16, f1, f15, f12, dyn # perform operation
fnmadd.s f16, f1, f15, f12, rdn # perform operation
fnmadd.s f16, f1, f15, f12, rmm # perform operation
fnmadd.s f16, f1, f15, f12, rne # perform operation
fnmadd.s f16, f1, f15, f12, rtz # perform operation
fnmadd.s f16, f1, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x658e4b4f675f995f # load x3 with value 0x658e4b4f675f995f
sw x3, 0(x2) # store 0x658e4b4f675f995f in memory
flw f3, 0(x2) # load 0x658e4b4f675f995f from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f31, f14, f3, f7, dyn # perform operation
fnmadd.s f31, f14, f3, f7, rdn # perform operation
fnmadd.s f31, f14, f3, f7, rmm # perform operation
fnmadd.s f31, f14, f3, f7, rne # perform operation
fnmadd.s f31, f14, f3, f7, rtz # perform operation
fnmadd.s f31, f14, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x3f676f990116398 # load x3 with value 0x3f676f990116398
sw x3, 0(x2) # store 0x3f676f990116398 in memory
flw f2, 0(x2) # load 0x3f676f990116398 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f9, f14, f2, f8, dyn # perform operation
fnmadd.s f9, f14, f2, f8, rdn # perform operation
fnmadd.s f9, f14, f2, f8, rmm # perform operation
fnmadd.s f9, f14, f2, f8, rne # perform operation
fnmadd.s f9, f14, f2, f8, rtz # perform operation
fnmadd.s f9, f14, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f14, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f14, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f14, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f14, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f14, f2, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x2781d87bcb8fd746 # load x3 with value 0x2781d87bcb8fd746
sw x3, 0(x2) # store 0x2781d87bcb8fd746 in memory
flw f22, 0(x2) # load 0x2781d87bcb8fd746 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f17, f20, f22, f19, dyn # perform operation
fnmadd.s f17, f20, f22, f19, rdn # perform operation
fnmadd.s f17, f20, f22, f19, rmm # perform operation
fnmadd.s f17, f20, f22, f19, rne # perform operation
fnmadd.s f17, f20, f22, f19, rtz # perform operation
fnmadd.s f17, f20, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x187aa20258dc23b6 # load x3 with value 0x187aa20258dc23b6
sw x3, 0(x2) # store 0x187aa20258dc23b6 in memory
flw f16, 0(x2) # load 0x187aa20258dc23b6 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmadd.s f24, f31, f16, f11, dyn # perform operation
fnmadd.s f24, f31, f16, f11, rdn # perform operation
fnmadd.s f24, f31, f16, f11, rmm # perform operation
fnmadd.s f24, f31, f16, f11, rne # perform operation
fnmadd.s f24, f31, f16, f11, rtz # perform operation
fnmadd.s f24, f31, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x304d44ac153b6906 # load x3 with value 0x304d44ac153b6906
sw x3, 0(x2) # store 0x304d44ac153b6906 in memory
flw f6, 0(x2) # load 0x304d44ac153b6906 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.s f21, f28, f6, f19, dyn # perform operation
fnmadd.s f21, f28, f6, f19, rdn # perform operation
fnmadd.s f21, f28, f6, f19, rmm # perform operation
fnmadd.s f21, f28, f6, f19, rne # perform operation
fnmadd.s f21, f28, f6, f19, rtz # perform operation
fnmadd.s f21, f28, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f28, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f28, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f28, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f28, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f28, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x1da06ff9d21dc9bb # load x3 with value 0x1da06ff9d21dc9bb
sw x3, 0(x2) # store 0x1da06ff9d21dc9bb in memory
flw f7, 0(x2) # load 0x1da06ff9d21dc9bb from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f21, f16, f7, f18, dyn # perform operation
fnmadd.s f21, f16, f7, f18, rdn # perform operation
fnmadd.s f21, f16, f7, f18, rmm # perform operation
fnmadd.s f21, f16, f7, f18, rne # perform operation
fnmadd.s f21, f16, f7, f18, rtz # perform operation
fnmadd.s f21, f16, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x45f32de76f6c943c # load x3 with value 0x45f32de76f6c943c
sw x3, 0(x2) # store 0x45f32de76f6c943c in memory
flw f19, 0(x2) # load 0x45f32de76f6c943c from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fnmadd.s f8, f13, f19, f3, dyn # perform operation
fnmadd.s f8, f13, f19, f3, rdn # perform operation
fnmadd.s f8, f13, f19, f3, rmm # perform operation
fnmadd.s f8, f13, f19, f3, rne # perform operation
fnmadd.s f8, f13, f19, f3, rtz # perform operation
fnmadd.s f8, f13, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xab854d3af578fa8b # load x3 with value 0xab854d3af578fa8b
sw x3, 0(x2) # store 0xab854d3af578fa8b in memory
flw f11, 0(x2) # load 0xab854d3af578fa8b from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmadd.s f5, f23, f11, f15, dyn # perform operation
fnmadd.s f5, f23, f11, f15, rdn # perform operation
fnmadd.s f5, f23, f11, f15, rmm # perform operation
fnmadd.s f5, f23, f11, f15, rne # perform operation
fnmadd.s f5, f23, f11, f15, rtz # perform operation
fnmadd.s f5, f23, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xfe04b5faa9991a1c # load x3 with value 0xfe04b5faa9991a1c
sw x3, 0(x2) # store 0xfe04b5faa9991a1c in memory
flw f16, 0(x2) # load 0xfe04b5faa9991a1c from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmadd.s f18, f24, f16, f2, dyn # perform operation
fnmadd.s f18, f24, f16, f2, rdn # perform operation
fnmadd.s f18, f24, f16, f2, rmm # perform operation
fnmadd.s f18, f24, f16, f2, rne # perform operation
fnmadd.s f18, f24, f16, f2, rtz # perform operation
fnmadd.s f18, f24, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x218bbc70aecf08 # load x3 with value 0x218bbc70aecf08
sw x3, 0(x2) # store 0x218bbc70aecf08 in memory
flw f1, 0(x2) # load 0x218bbc70aecf08 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f30, f19, f1, f20, dyn # perform operation
fnmadd.s f30, f19, f1, f20, rdn # perform operation
fnmadd.s f30, f19, f1, f20, rmm # perform operation
fnmadd.s f30, f19, f1, f20, rne # perform operation
fnmadd.s f30, f19, f1, f20, rtz # perform operation
fnmadd.s f30, f19, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f19, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xd2cac9885360a214 # load x3 with value 0xd2cac9885360a214
sw x3, 0(x2) # store 0xd2cac9885360a214 in memory
flw f30, 0(x2) # load 0xd2cac9885360a214 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f1, f28, f30, f26, dyn # perform operation
fnmadd.s f1, f28, f30, f26, rdn # perform operation
fnmadd.s f1, f28, f30, f26, rmm # perform operation
fnmadd.s f1, f28, f30, f26, rne # perform operation
fnmadd.s f1, f28, f30, f26, rtz # perform operation
fnmadd.s f1, f28, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x9f2f3d280c4c3c10 # load x3 with value 0x9f2f3d280c4c3c10
sw x3, 0(x2) # store 0x9f2f3d280c4c3c10 in memory
flw f22, 0(x2) # load 0x9f2f3d280c4c3c10 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f14, f18, f22, f1, dyn # perform operation
fnmadd.s f14, f18, f22, f1, rdn # perform operation
fnmadd.s f14, f18, f22, f1, rmm # perform operation
fnmadd.s f14, f18, f22, f1, rne # perform operation
fnmadd.s f14, f18, f22, f1, rtz # perform operation
fnmadd.s f14, f18, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xa23607497c850344 # load x3 with value 0xa23607497c850344
sw x3, 0(x2) # store 0xa23607497c850344 in memory
flw f1, 0(x2) # load 0xa23607497c850344 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f5, f20, f1, f2, dyn # perform operation
fnmadd.s f5, f20, f1, f2, rdn # perform operation
fnmadd.s f5, f20, f1, f2, rmm # perform operation
fnmadd.s f5, f20, f1, f2, rne # perform operation
fnmadd.s f5, f20, f1, f2, rtz # perform operation
fnmadd.s f5, f20, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f20, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x6399ed9582c24248 # load x3 with value 0x6399ed9582c24248
sw x3, 0(x2) # store 0x6399ed9582c24248 in memory
flw f12, 0(x2) # load 0x6399ed9582c24248 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmadd.s f19, f14, f12, f24, dyn # perform operation
fnmadd.s f19, f14, f12, f24, rdn # perform operation
fnmadd.s f19, f14, f12, f24, rmm # perform operation
fnmadd.s f19, f14, f12, f24, rne # perform operation
fnmadd.s f19, f14, f12, f24, rtz # perform operation
fnmadd.s f19, f14, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xb0fae521a33eb5b0 # load x3 with value 0xb0fae521a33eb5b0
sw x3, 0(x2) # store 0xb0fae521a33eb5b0 in memory
flw f14, 0(x2) # load 0xb0fae521a33eb5b0 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f7, f6, f14, f1, dyn # perform operation
fnmadd.s f7, f6, f14, f1, rdn # perform operation
fnmadd.s f7, f6, f14, f1, rmm # perform operation
fnmadd.s f7, f6, f14, f1, rne # perform operation
fnmadd.s f7, f6, f14, f1, rtz # perform operation
fnmadd.s f7, f6, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x5bb1f11c176ec3f1 # load x3 with value 0x5bb1f11c176ec3f1
sw x3, 0(x2) # store 0x5bb1f11c176ec3f1 in memory
flw f21, 0(x2) # load 0x5bb1f11c176ec3f1 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fnmadd.s f10, f13, f21, f2, dyn # perform operation
fnmadd.s f10, f13, f21, f2, rdn # perform operation
fnmadd.s f10, f13, f21, f2, rmm # perform operation
fnmadd.s f10, f13, f21, f2, rne # perform operation
fnmadd.s f10, f13, f21, f2, rtz # perform operation
fnmadd.s f10, f13, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f13, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x9b38b72c2f2061c9 # load x3 with value 0x9b38b72c2f2061c9
sw x3, 0(x2) # store 0x9b38b72c2f2061c9 in memory
flw f11, 0(x2) # load 0x9b38b72c2f2061c9 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f9, f14, f11, f15, dyn # perform operation
fnmadd.s f9, f14, f11, f15, rdn # perform operation
fnmadd.s f9, f14, f11, f15, rmm # perform operation
fnmadd.s f9, f14, f11, f15, rne # perform operation
fnmadd.s f9, f14, f11, f15, rtz # perform operation
fnmadd.s f9, f14, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f14, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f14, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f14, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f14, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f14, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xb3faa1bb9f296821 # load x3 with value 0xb3faa1bb9f296821
sw x3, 0(x2) # store 0xb3faa1bb9f296821 in memory
flw f15, 0(x2) # load 0xb3faa1bb9f296821 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmadd.s f12, f24, f15, f22, dyn # perform operation
fnmadd.s f12, f24, f15, f22, rdn # perform operation
fnmadd.s f12, f24, f15, f22, rmm # perform operation
fnmadd.s f12, f24, f15, f22, rne # perform operation
fnmadd.s f12, f24, f15, f22, rtz # perform operation
fnmadd.s f12, f24, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f24, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x98ede05f6843a453 # load x3 with value 0x98ede05f6843a453
sw x3, 0(x2) # store 0x98ede05f6843a453 in memory
flw f21, 0(x2) # load 0x98ede05f6843a453 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f3, f15, f21, f19, dyn # perform operation
fnmadd.s f3, f15, f21, f19, rdn # perform operation
fnmadd.s f3, f15, f21, f19, rmm # perform operation
fnmadd.s f3, f15, f21, f19, rne # perform operation
fnmadd.s f3, f15, f21, f19, rtz # perform operation
fnmadd.s f3, f15, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x288612f868168985 # load x3 with value 0x288612f868168985
sw x3, 0(x2) # store 0x288612f868168985 in memory
flw f7, 0(x2) # load 0x288612f868168985 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f24, f14, f7, f27, dyn # perform operation
fnmadd.s f24, f14, f7, f27, rdn # perform operation
fnmadd.s f24, f14, f7, f27, rmm # perform operation
fnmadd.s f24, f14, f7, f27, rne # perform operation
fnmadd.s f24, f14, f7, f27, rtz # perform operation
fnmadd.s f24, f14, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f14, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x19b166f8ced17016 # load x3 with value 0x19b166f8ced17016
sw x3, 0(x2) # store 0x19b166f8ced17016 in memory
flw f31, 0(x2) # load 0x19b166f8ced17016 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f24, f8, f31, f7, dyn # perform operation
fnmadd.s f24, f8, f31, f7, rdn # perform operation
fnmadd.s f24, f8, f31, f7, rmm # perform operation
fnmadd.s f24, f8, f31, f7, rne # perform operation
fnmadd.s f24, f8, f31, f7, rtz # perform operation
fnmadd.s f24, f8, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f8, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f8, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f8, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f8, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f8, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x5f4260fee99b539a # load x3 with value 0x5f4260fee99b539a
sw x3, 0(x2) # store 0x5f4260fee99b539a in memory
flw f15, 0(x2) # load 0x5f4260fee99b539a from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f26, f28, f15, f9, dyn # perform operation
fnmadd.s f26, f28, f15, f9, rdn # perform operation
fnmadd.s f26, f28, f15, f9, rmm # perform operation
fnmadd.s f26, f28, f15, f9, rne # perform operation
fnmadd.s f26, f28, f15, f9, rtz # perform operation
fnmadd.s f26, f28, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xaee2485e3df1c7fb # load x3 with value 0xaee2485e3df1c7fb
sw x3, 0(x2) # store 0xaee2485e3df1c7fb in memory
flw f12, 0(x2) # load 0xaee2485e3df1c7fb from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmadd.s f2, f31, f12, f29, dyn # perform operation
fnmadd.s f2, f31, f12, f29, rdn # perform operation
fnmadd.s f2, f31, f12, f29, rmm # perform operation
fnmadd.s f2, f31, f12, f29, rne # perform operation
fnmadd.s f2, f31, f12, f29, rtz # perform operation
fnmadd.s f2, f31, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f12, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xf83ca4b579f8a2c0 # load x3 with value 0xf83ca4b579f8a2c0
sw x3, 0(x2) # store 0xf83ca4b579f8a2c0 in memory
flw f1, 0(x2) # load 0xf83ca4b579f8a2c0 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f28, f23, f1, f21, dyn # perform operation
fnmadd.s f28, f23, f1, f21, rdn # perform operation
fnmadd.s f28, f23, f1, f21, rmm # perform operation
fnmadd.s f28, f23, f1, f21, rne # perform operation
fnmadd.s f28, f23, f1, f21, rtz # perform operation
fnmadd.s f28, f23, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x184217610511842b # load x3 with value 0x184217610511842b
sw x3, 0(x2) # store 0x184217610511842b in memory
flw f24, 0(x2) # load 0x184217610511842b from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fnmadd.s f1, f5, f24, f20, dyn # perform operation
fnmadd.s f1, f5, f24, f20, rdn # perform operation
fnmadd.s f1, f5, f24, f20, rmm # perform operation
fnmadd.s f1, f5, f24, f20, rne # perform operation
fnmadd.s f1, f5, f24, f20, rtz # perform operation
fnmadd.s f1, f5, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xc857e82d71eb45df # load x3 with value 0xc857e82d71eb45df
sw x3, 0(x2) # store 0xc857e82d71eb45df in memory
flw f6, 0(x2) # load 0xc857e82d71eb45df from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmadd.s f23, f3, f6, f22, dyn # perform operation
fnmadd.s f23, f3, f6, f22, rdn # perform operation
fnmadd.s f23, f3, f6, f22, rmm # perform operation
fnmadd.s f23, f3, f6, f22, rne # perform operation
fnmadd.s f23, f3, f6, f22, rtz # perform operation
fnmadd.s f23, f3, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xe23d22dcd2e7849b # load x3 with value 0xe23d22dcd2e7849b
sw x3, 0(x2) # store 0xe23d22dcd2e7849b in memory
flw f5, 0(x2) # load 0xe23d22dcd2e7849b from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fnmadd.s f9, f12, f5, f22, dyn # perform operation
fnmadd.s f9, f12, f5, f22, rdn # perform operation
fnmadd.s f9, f12, f5, f22, rmm # perform operation
fnmadd.s f9, f12, f5, f22, rne # perform operation
fnmadd.s f9, f12, f5, f22, rtz # perform operation
fnmadd.s f9, f12, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f5, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xde1624303cb6fab1 # load x3 with value 0xde1624303cb6fab1
sw x3, 0(x2) # store 0xde1624303cb6fab1 in memory
flw f22, 0(x2) # load 0xde1624303cb6fab1 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmadd.s f27, f25, f22, f2, dyn # perform operation
fnmadd.s f27, f25, f22, f2, rdn # perform operation
fnmadd.s f27, f25, f22, f2, rmm # perform operation
fnmadd.s f27, f25, f22, f2, rne # perform operation
fnmadd.s f27, f25, f22, f2, rtz # perform operation
fnmadd.s f27, f25, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x6e504ecd9b54baca # load x3 with value 0x6e504ecd9b54baca
sw x3, 0(x2) # store 0x6e504ecd9b54baca in memory
flw f13, 0(x2) # load 0x6e504ecd9b54baca from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmadd.s f23, f30, f13, f15, dyn # perform operation
fnmadd.s f23, f30, f13, f15, rdn # perform operation
fnmadd.s f23, f30, f13, f15, rmm # perform operation
fnmadd.s f23, f30, f13, f15, rne # perform operation
fnmadd.s f23, f30, f13, f15, rtz # perform operation
fnmadd.s f23, f30, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x44962a04c0c26d84 # load x3 with value 0x44962a04c0c26d84
sw x3, 0(x2) # store 0x44962a04c0c26d84 in memory
flw f14, 0(x2) # load 0x44962a04c0c26d84 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmadd.s f6, f22, f14, f29, dyn # perform operation
fnmadd.s f6, f22, f14, f29, rdn # perform operation
fnmadd.s f6, f22, f14, f29, rmm # perform operation
fnmadd.s f6, f22, f14, f29, rne # perform operation
fnmadd.s f6, f22, f14, f29, rtz # perform operation
fnmadd.s f6, f22, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x4c070ba8c029d5bf # load x3 with value 0x4c070ba8c029d5bf
sw x3, 0(x2) # store 0x4c070ba8c029d5bf in memory
flw f7, 0(x2) # load 0x4c070ba8c029d5bf from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmadd.s f24, f30, f7, f11, dyn # perform operation
fnmadd.s f24, f30, f7, f11, rdn # perform operation
fnmadd.s f24, f30, f7, f11, rmm # perform operation
fnmadd.s f24, f30, f7, f11, rne # perform operation
fnmadd.s f24, f30, f7, f11, rtz # perform operation
fnmadd.s f24, f30, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xe1bcda2863ff521 # load x3 with value 0xe1bcda2863ff521
sw x3, 0(x2) # store 0xe1bcda2863ff521 in memory
flw f17, 0(x2) # load 0xe1bcda2863ff521 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f11, f14, f17, f10, dyn # perform operation
fnmadd.s f11, f14, f17, f10, rdn # perform operation
fnmadd.s f11, f14, f17, f10, rmm # perform operation
fnmadd.s f11, f14, f17, f10, rne # perform operation
fnmadd.s f11, f14, f17, f10, rtz # perform operation
fnmadd.s f11, f14, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x730671b29d59751c # load x3 with value 0x730671b29d59751c
sw x3, 0(x2) # store 0x730671b29d59751c in memory
flw f17, 0(x2) # load 0x730671b29d59751c from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f13, f11, f17, f14, dyn # perform operation
fnmadd.s f13, f11, f17, f14, rdn # perform operation
fnmadd.s f13, f11, f17, f14, rmm # perform operation
fnmadd.s f13, f11, f17, f14, rne # perform operation
fnmadd.s f13, f11, f17, f14, rtz # perform operation
fnmadd.s f13, f11, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xb51cc6955cdf917a # load x3 with value 0xb51cc6955cdf917a
sw x3, 0(x2) # store 0xb51cc6955cdf917a in memory
flw f18, 0(x2) # load 0xb51cc6955cdf917a from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmadd.s f13, f28, f18, f5, dyn # perform operation
fnmadd.s f13, f28, f18, f5, rdn # perform operation
fnmadd.s f13, f28, f18, f5, rmm # perform operation
fnmadd.s f13, f28, f18, f5, rne # perform operation
fnmadd.s f13, f28, f18, f5, rtz # perform operation
fnmadd.s f13, f28, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x35442cc99010b7cc # load x3 with value 0x35442cc99010b7cc
sw x3, 0(x2) # store 0x35442cc99010b7cc in memory
flw f15, 0(x2) # load 0x35442cc99010b7cc from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmadd.s f20, f26, f15, f6, dyn # perform operation
fnmadd.s f20, f26, f15, f6, rdn # perform operation
fnmadd.s f20, f26, f15, f6, rmm # perform operation
fnmadd.s f20, f26, f15, f6, rne # perform operation
fnmadd.s f20, f26, f15, f6, rtz # perform operation
fnmadd.s f20, f26, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x9e634e532381299 # load x3 with value 0x9e634e532381299
sw x3, 0(x2) # store 0x9e634e532381299 in memory
flw f29, 0(x2) # load 0x9e634e532381299 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fnmadd.s f1, f6, f29, f23, dyn # perform operation
fnmadd.s f1, f6, f29, f23, rdn # perform operation
fnmadd.s f1, f6, f29, f23, rmm # perform operation
fnmadd.s f1, f6, f29, f23, rne # perform operation
fnmadd.s f1, f6, f29, f23, rtz # perform operation
fnmadd.s f1, f6, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x50b167f485cc070e # load x3 with value 0x50b167f485cc070e
sw x3, 0(x2) # store 0x50b167f485cc070e in memory
flw f18, 0(x2) # load 0x50b167f485cc070e from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fnmadd.s f14, f27, f18, f17, dyn # perform operation
fnmadd.s f14, f27, f18, f17, rdn # perform operation
fnmadd.s f14, f27, f18, f17, rmm # perform operation
fnmadd.s f14, f27, f18, f17, rne # perform operation
fnmadd.s f14, f27, f18, f17, rtz # perform operation
fnmadd.s f14, f27, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x69c21984d1e465e0 # load x3 with value 0x69c21984d1e465e0
sw x3, 0(x2) # store 0x69c21984d1e465e0 in memory
flw f15, 0(x2) # load 0x69c21984d1e465e0 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f29, f24, f15, f22, dyn # perform operation
fnmadd.s f29, f24, f15, f22, rdn # perform operation
fnmadd.s f29, f24, f15, f22, rmm # perform operation
fnmadd.s f29, f24, f15, f22, rne # perform operation
fnmadd.s f29, f24, f15, f22, rtz # perform operation
fnmadd.s f29, f24, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f24, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xe9e2922b1ca4c965 # load x3 with value 0xe9e2922b1ca4c965
sw x3, 0(x2) # store 0xe9e2922b1ca4c965 in memory
flw f5, 0(x2) # load 0xe9e2922b1ca4c965 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fnmadd.s f19, f15, f5, f20, dyn # perform operation
fnmadd.s f19, f15, f5, f20, rdn # perform operation
fnmadd.s f19, f15, f5, f20, rmm # perform operation
fnmadd.s f19, f15, f5, f20, rne # perform operation
fnmadd.s f19, f15, f5, f20, rtz # perform operation
fnmadd.s f19, f15, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f15, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f15, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f15, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f15, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f15, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x9d6f9cdf550bde5b # load x3 with value 0x9d6f9cdf550bde5b
sw x3, 0(x2) # store 0x9d6f9cdf550bde5b in memory
flw f3, 0(x2) # load 0x9d6f9cdf550bde5b from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fnmadd.s f30, f2, f3, f19, dyn # perform operation
fnmadd.s f30, f2, f3, f19, rdn # perform operation
fnmadd.s f30, f2, f3, f19, rmm # perform operation
fnmadd.s f30, f2, f3, f19, rne # perform operation
fnmadd.s f30, f2, f3, f19, rtz # perform operation
fnmadd.s f30, f2, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xd682adec5cefbf59 # load x3 with value 0xd682adec5cefbf59
sw x3, 0(x2) # store 0xd682adec5cefbf59 in memory
flw f7, 0(x2) # load 0xd682adec5cefbf59 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmadd.s f14, f24, f7, f6, dyn # perform operation
fnmadd.s f14, f24, f7, f6, rdn # perform operation
fnmadd.s f14, f24, f7, f6, rmm # perform operation
fnmadd.s f14, f24, f7, f6, rne # perform operation
fnmadd.s f14, f24, f7, f6, rtz # perform operation
fnmadd.s f14, f24, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x6ec7e088b9e861ae # load x3 with value 0x6ec7e088b9e861ae
sw x3, 0(x2) # store 0x6ec7e088b9e861ae in memory
flw f25, 0(x2) # load 0x6ec7e088b9e861ae from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fnmadd.s f8, f20, f25, f2, dyn # perform operation
fnmadd.s f8, f20, f25, f2, rdn # perform operation
fnmadd.s f8, f20, f25, f2, rmm # perform operation
fnmadd.s f8, f20, f25, f2, rne # perform operation
fnmadd.s f8, f20, f25, f2, rtz # perform operation
fnmadd.s f8, f20, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x31bd3564b6af9296 # load x3 with value 0x31bd3564b6af9296
sw x3, 0(x2) # store 0x31bd3564b6af9296 in memory
flw f20, 0(x2) # load 0x31bd3564b6af9296 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmadd.s f6, f21, f20, f17, dyn # perform operation
fnmadd.s f6, f21, f20, f17, rdn # perform operation
fnmadd.s f6, f21, f20, f17, rmm # perform operation
fnmadd.s f6, f21, f20, f17, rne # perform operation
fnmadd.s f6, f21, f20, f17, rtz # perform operation
fnmadd.s f6, f21, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f21, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xc1363fc86edddbca # load x3 with value 0xc1363fc86edddbca
sw x3, 0(x2) # store 0xc1363fc86edddbca in memory
flw f2, 0(x2) # load 0xc1363fc86edddbca from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmadd.s f27, f28, f2, f13, dyn # perform operation
fnmadd.s f27, f28, f2, f13, rdn # perform operation
fnmadd.s f27, f28, f2, f13, rmm # perform operation
fnmadd.s f27, f28, f2, f13, rne # perform operation
fnmadd.s f27, f28, f2, f13, rtz # perform operation
fnmadd.s f27, f28, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xd499cb1fdc22a5d7 # load x3 with value 0xd499cb1fdc22a5d7
sw x3, 0(x2) # store 0xd499cb1fdc22a5d7 in memory
flw f20, 0(x2) # load 0xd499cb1fdc22a5d7 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f25, f9, f20, f24, dyn # perform operation
fnmadd.s f25, f9, f20, f24, rdn # perform operation
fnmadd.s f25, f9, f20, f24, rmm # perform operation
fnmadd.s f25, f9, f20, f24, rne # perform operation
fnmadd.s f25, f9, f20, f24, rtz # perform operation
fnmadd.s f25, f9, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xe44abf5cb1c98fb # load x3 with value 0xe44abf5cb1c98fb
sw x3, 0(x2) # store 0xe44abf5cb1c98fb in memory
flw f1, 0(x2) # load 0xe44abf5cb1c98fb from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f12, f21, f1, f19, dyn # perform operation
fnmadd.s f12, f21, f1, f19, rdn # perform operation
fnmadd.s f12, f21, f1, f19, rmm # perform operation
fnmadd.s f12, f21, f1, f19, rne # perform operation
fnmadd.s f12, f21, f1, f19, rtz # perform operation
fnmadd.s f12, f21, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f21, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xabc6a9a3f8108dbb # load x3 with value 0xabc6a9a3f8108dbb
sw x3, 0(x2) # store 0xabc6a9a3f8108dbb in memory
flw f15, 0(x2) # load 0xabc6a9a3f8108dbb from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f20, f26, f15, f19, dyn # perform operation
fnmadd.s f20, f26, f15, f19, rdn # perform operation
fnmadd.s f20, f26, f15, f19, rmm # perform operation
fnmadd.s f20, f26, f15, f19, rne # perform operation
fnmadd.s f20, f26, f15, f19, rtz # perform operation
fnmadd.s f20, f26, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xb5a21cf12dfe8bd3 # load x3 with value 0xb5a21cf12dfe8bd3
sw x3, 0(x2) # store 0xb5a21cf12dfe8bd3 in memory
flw f22, 0(x2) # load 0xb5a21cf12dfe8bd3 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f12, f7, f22, f8, dyn # perform operation
fnmadd.s f12, f7, f22, f8, rdn # perform operation
fnmadd.s f12, f7, f22, f8, rmm # perform operation
fnmadd.s f12, f7, f22, f8, rne # perform operation
fnmadd.s f12, f7, f22, f8, rtz # perform operation
fnmadd.s f12, f7, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f7, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x656751d6c844543d # load x3 with value 0x656751d6c844543d
sw x3, 0(x2) # store 0x656751d6c844543d in memory
flw f11, 0(x2) # load 0x656751d6c844543d from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f16, f1, f11, f10, dyn # perform operation
fnmadd.s f16, f1, f11, f10, rdn # perform operation
fnmadd.s f16, f1, f11, f10, rmm # perform operation
fnmadd.s f16, f1, f11, f10, rne # perform operation
fnmadd.s f16, f1, f11, f10, rtz # perform operation
fnmadd.s f16, f1, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x72ce34922c4c5033 # load x3 with value 0x72ce34922c4c5033
sw x3, 0(x2) # store 0x72ce34922c4c5033 in memory
flw f30, 0(x2) # load 0x72ce34922c4c5033 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmadd.s f11, f15, f30, f25, dyn # perform operation
fnmadd.s f11, f15, f30, f25, rdn # perform operation
fnmadd.s f11, f15, f30, f25, rmm # perform operation
fnmadd.s f11, f15, f30, f25, rne # perform operation
fnmadd.s f11, f15, f30, f25, rtz # perform operation
fnmadd.s f11, f15, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xa2060846ae2d37ea # load x3 with value 0xa2060846ae2d37ea
sw x3, 0(x2) # store 0xa2060846ae2d37ea in memory
flw f7, 0(x2) # load 0xa2060846ae2d37ea from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmadd.s f1, f21, f7, f29, dyn # perform operation
fnmadd.s f1, f21, f7, f29, rdn # perform operation
fnmadd.s f1, f21, f7, f29, rmm # perform operation
fnmadd.s f1, f21, f7, f29, rne # perform operation
fnmadd.s f1, f21, f7, f29, rtz # perform operation
fnmadd.s f1, f21, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xa35e4931e6ddc89f # load x3 with value 0xa35e4931e6ddc89f
sw x3, 0(x2) # store 0xa35e4931e6ddc89f in memory
flw f13, 0(x2) # load 0xa35e4931e6ddc89f from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f24, f15, f13, f30, dyn # perform operation
fnmadd.s f24, f15, f13, f30, rdn # perform operation
fnmadd.s f24, f15, f13, f30, rmm # perform operation
fnmadd.s f24, f15, f13, f30, rne # perform operation
fnmadd.s f24, f15, f13, f30, rtz # perform operation
fnmadd.s f24, f15, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x88b27e17e50c1d74 # load x3 with value 0x88b27e17e50c1d74
sw x3, 0(x2) # store 0x88b27e17e50c1d74 in memory
flw f24, 0(x2) # load 0x88b27e17e50c1d74 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fnmadd.s f30, f12, f24, f29, dyn # perform operation
fnmadd.s f30, f12, f24, f29, rdn # perform operation
fnmadd.s f30, f12, f24, f29, rmm # perform operation
fnmadd.s f30, f12, f24, f29, rne # perform operation
fnmadd.s f30, f12, f24, f29, rtz # perform operation
fnmadd.s f30, f12, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xc6f3320d1be1216b # load x3 with value 0xc6f3320d1be1216b
sw x3, 0(x2) # store 0xc6f3320d1be1216b in memory
flw f27, 0(x2) # load 0xc6f3320d1be1216b from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmadd.s f11, f5, f27, f31, dyn # perform operation
fnmadd.s f11, f5, f27, f31, rdn # perform operation
fnmadd.s f11, f5, f27, f31, rmm # perform operation
fnmadd.s f11, f5, f27, f31, rne # perform operation
fnmadd.s f11, f5, f27, f31, rtz # perform operation
fnmadd.s f11, f5, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xdb7fd7d6c3663761 # load x3 with value 0xdb7fd7d6c3663761
sw x3, 0(x2) # store 0xdb7fd7d6c3663761 in memory
flw f13, 0(x2) # load 0xdb7fd7d6c3663761 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmadd.s f20, f21, f13, f30, dyn # perform operation
fnmadd.s f20, f21, f13, f30, rdn # perform operation
fnmadd.s f20, f21, f13, f30, rmm # perform operation
fnmadd.s f20, f21, f13, f30, rne # perform operation
fnmadd.s f20, f21, f13, f30, rtz # perform operation
fnmadd.s f20, f21, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f21, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x5fc62af7695b619 # load x3 with value 0x5fc62af7695b619
sw x3, 0(x2) # store 0x5fc62af7695b619 in memory
flw f8, 0(x2) # load 0x5fc62af7695b619 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmadd.s f13, f15, f8, f7, dyn # perform operation
fnmadd.s f13, f15, f8, f7, rdn # perform operation
fnmadd.s f13, f15, f8, f7, rmm # perform operation
fnmadd.s f13, f15, f8, f7, rne # perform operation
fnmadd.s f13, f15, f8, f7, rtz # perform operation
fnmadd.s f13, f15, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xeffd34b2afbc9844 # load x3 with value 0xeffd34b2afbc9844
sw x3, 0(x2) # store 0xeffd34b2afbc9844 in memory
flw f5, 0(x2) # load 0xeffd34b2afbc9844 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmadd.s f12, f26, f5, f8, dyn # perform operation
fnmadd.s f12, f26, f5, f8, rdn # perform operation
fnmadd.s f12, f26, f5, f8, rmm # perform operation
fnmadd.s f12, f26, f5, f8, rne # perform operation
fnmadd.s f12, f26, f5, f8, rtz # perform operation
fnmadd.s f12, f26, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f26, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xe6cf27a3df7086c0 # load x3 with value 0xe6cf27a3df7086c0
sw x3, 0(x2) # store 0xe6cf27a3df7086c0 in memory
flw f6, 0(x2) # load 0xe6cf27a3df7086c0 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fnmadd.s f19, f28, f6, f7, dyn # perform operation
fnmadd.s f19, f28, f6, f7, rdn # perform operation
fnmadd.s f19, f28, f6, f7, rmm # perform operation
fnmadd.s f19, f28, f6, f7, rne # perform operation
fnmadd.s f19, f28, f6, f7, rtz # perform operation
fnmadd.s f19, f28, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f28, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x168eafffa09fa95c # load x3 with value 0x168eafffa09fa95c
sw x3, 0(x2) # store 0x168eafffa09fa95c in memory
flw f25, 0(x2) # load 0x168eafffa09fa95c from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmadd.s f19, f31, f25, f2, dyn # perform operation
fnmadd.s f19, f31, f25, f2, rdn # perform operation
fnmadd.s f19, f31, f25, f2, rmm # perform operation
fnmadd.s f19, f31, f25, f2, rne # perform operation
fnmadd.s f19, f31, f25, f2, rtz # perform operation
fnmadd.s f19, f31, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xafecf9ebf00ae658 # load x3 with value 0xafecf9ebf00ae658
sw x3, 0(x2) # store 0xafecf9ebf00ae658 in memory
flw f1, 0(x2) # load 0xafecf9ebf00ae658 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmadd.s f15, f24, f1, f13, dyn # perform operation
fnmadd.s f15, f24, f1, f13, rdn # perform operation
fnmadd.s f15, f24, f1, f13, rmm # perform operation
fnmadd.s f15, f24, f1, f13, rne # perform operation
fnmadd.s f15, f24, f1, f13, rtz # perform operation
fnmadd.s f15, f24, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f24, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x6279cb0cbce9dda6 # load x3 with value 0x6279cb0cbce9dda6
sw x3, 0(x2) # store 0x6279cb0cbce9dda6 in memory
flw f7, 0(x2) # load 0x6279cb0cbce9dda6 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.s f6, f15, f7, f8, dyn # perform operation
fnmadd.s f6, f15, f7, f8, rdn # perform operation
fnmadd.s f6, f15, f7, f8, rmm # perform operation
fnmadd.s f6, f15, f7, f8, rne # perform operation
fnmadd.s f6, f15, f7, f8, rtz # perform operation
fnmadd.s f6, f15, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xcf715ad1806dcf51 # load x3 with value 0xcf715ad1806dcf51
sw x3, 0(x2) # store 0xcf715ad1806dcf51 in memory
flw f27, 0(x2) # load 0xcf715ad1806dcf51 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmadd.s f15, f21, f27, f5, dyn # perform operation
fnmadd.s f15, f21, f27, f5, rdn # perform operation
fnmadd.s f15, f21, f27, f5, rmm # perform operation
fnmadd.s f15, f21, f27, f5, rne # perform operation
fnmadd.s f15, f21, f27, f5, rtz # perform operation
fnmadd.s f15, f21, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x8b10b89c628a461e # load x3 with value 0x8b10b89c628a461e
sw x3, 0(x2) # store 0x8b10b89c628a461e in memory
flw f22, 0(x2) # load 0x8b10b89c628a461e from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmadd.s f24, f18, f22, f8, dyn # perform operation
fnmadd.s f24, f18, f22, f8, rdn # perform operation
fnmadd.s f24, f18, f22, f8, rmm # perform operation
fnmadd.s f24, f18, f22, f8, rne # perform operation
fnmadd.s f24, f18, f22, f8, rtz # perform operation
fnmadd.s f24, f18, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xda37c0c8e87d158c # load x3 with value 0xda37c0c8e87d158c
sw x3, 0(x2) # store 0xda37c0c8e87d158c in memory
flw f15, 0(x2) # load 0xda37c0c8e87d158c from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmadd.s f9, f26, f15, f24, dyn # perform operation
fnmadd.s f9, f26, f15, f24, rdn # perform operation
fnmadd.s f9, f26, f15, f24, rmm # perform operation
fnmadd.s f9, f26, f15, f24, rne # perform operation
fnmadd.s f9, f26, f15, f24, rtz # perform operation
fnmadd.s f9, f26, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f26, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xb387d8cb8667a466 # load x3 with value 0xb387d8cb8667a466
sw x3, 0(x2) # store 0xb387d8cb8667a466 in memory
flw f7, 0(x2) # load 0xb387d8cb8667a466 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmadd.s f18, f31, f7, f12, dyn # perform operation
fnmadd.s f18, f31, f7, f12, rdn # perform operation
fnmadd.s f18, f31, f7, f12, rmm # perform operation
fnmadd.s f18, f31, f7, f12, rne # perform operation
fnmadd.s f18, f31, f7, f12, rtz # perform operation
fnmadd.s f18, f31, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f31, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xad0045ce17cc7817 # load x3 with value 0xad0045ce17cc7817
sw x3, 0(x2) # store 0xad0045ce17cc7817 in memory
flw f17, 0(x2) # load 0xad0045ce17cc7817 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f26, f19, f17, f24, dyn # perform operation
fnmadd.s f26, f19, f17, f24, rdn # perform operation
fnmadd.s f26, f19, f17, f24, rmm # perform operation
fnmadd.s f26, f19, f17, f24, rne # perform operation
fnmadd.s f26, f19, f17, f24, rtz # perform operation
fnmadd.s f26, f19, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0xde490a1eaab88490 # load x3 with value 0xde490a1eaab88490
sw x3, 0(x2) # store 0xde490a1eaab88490 in memory
flw f31, 0(x2) # load 0xde490a1eaab88490 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmadd.s f6, f3, f31, f10, dyn # perform operation
fnmadd.s f6, f3, f31, f10, rdn # perform operation
fnmadd.s f6, f3, f31, f10, rmm # perform operation
fnmadd.s f6, f3, f31, f10, rne # perform operation
fnmadd.s f6, f3, f31, f10, rtz # perform operation
fnmadd.s f6, f3, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xff9a9f31411bb245 # load x3 with value 0xff9a9f31411bb245
sw x3, 0(x2) # store 0xff9a9f31411bb245 in memory
flw f3, 0(x2) # load 0xff9a9f31411bb245 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f1, f2, f3, f7, dyn # perform operation
fnmadd.s f1, f2, f3, f7, rdn # perform operation
fnmadd.s f1, f2, f3, f7, rmm # perform operation
fnmadd.s f1, f2, f3, f7, rne # perform operation
fnmadd.s f1, f2, f3, f7, rtz # perform operation
fnmadd.s f1, f2, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f2, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f2, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f2, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f2, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f2, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xa6725efd3544d485 # load x3 with value 0xa6725efd3544d485
sw x3, 0(x2) # store 0xa6725efd3544d485 in memory
flw f5, 0(x2) # load 0xa6725efd3544d485 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmadd.s f18, f20, f5, f12, dyn # perform operation
fnmadd.s f18, f20, f5, f12, rdn # perform operation
fnmadd.s f18, f20, f5, f12, rmm # perform operation
fnmadd.s f18, f20, f5, f12, rne # perform operation
fnmadd.s f18, f20, f5, f12, rtz # perform operation
fnmadd.s f18, f20, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x5667164bc38ac638 # load x3 with value 0x5667164bc38ac638
sw x3, 0(x2) # store 0x5667164bc38ac638 in memory
flw f28, 0(x2) # load 0x5667164bc38ac638 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fnmadd.s f3, f27, f28, f18, dyn # perform operation
fnmadd.s f3, f27, f28, f18, rdn # perform operation
fnmadd.s f3, f27, f28, f18, rmm # perform operation
fnmadd.s f3, f27, f28, f18, rne # perform operation
fnmadd.s f3, f27, f28, f18, rtz # perform operation
fnmadd.s f3, f27, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x5b03de6437ae6a3a # load x3 with value 0x5b03de6437ae6a3a
sw x3, 0(x2) # store 0x5b03de6437ae6a3a in memory
flw f6, 0(x2) # load 0x5b03de6437ae6a3a from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmadd.s f12, f8, f6, f9, dyn # perform operation
fnmadd.s f12, f8, f6, f9, rdn # perform operation
fnmadd.s f12, f8, f6, f9, rmm # perform operation
fnmadd.s f12, f8, f6, f9, rne # perform operation
fnmadd.s f12, f8, f6, f9, rtz # perform operation
fnmadd.s f12, f8, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x631850ec98bbc739 # load x3 with value 0x631850ec98bbc739
sw x3, 0(x2) # store 0x631850ec98bbc739 in memory
flw f6, 0(x2) # load 0x631850ec98bbc739 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f29, f12, f6, f19, dyn # perform operation
fnmadd.s f29, f12, f6, f19, rdn # perform operation
fnmadd.s f29, f12, f6, f19, rmm # perform operation
fnmadd.s f29, f12, f6, f19, rne # perform operation
fnmadd.s f29, f12, f6, f19, rtz # perform operation
fnmadd.s f29, f12, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x46a5b7b194b209ae # load x3 with value 0x46a5b7b194b209ae
sw x3, 0(x2) # store 0x46a5b7b194b209ae in memory
flw f5, 0(x2) # load 0x46a5b7b194b209ae from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmadd.s f19, f20, f5, f14, dyn # perform operation
fnmadd.s f19, f20, f5, f14, rdn # perform operation
fnmadd.s f19, f20, f5, f14, rmm # perform operation
fnmadd.s f19, f20, f5, f14, rne # perform operation
fnmadd.s f19, f20, f5, f14, rtz # perform operation
fnmadd.s f19, f20, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xed51838e03a7f9a0 # load x3 with value 0xed51838e03a7f9a0
sw x3, 0(x2) # store 0xed51838e03a7f9a0 in memory
flw f25, 0(x2) # load 0xed51838e03a7f9a0 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmadd.s f20, f22, f25, f18, dyn # perform operation
fnmadd.s f20, f22, f25, f18, rdn # perform operation
fnmadd.s f20, f22, f25, f18, rmm # perform operation
fnmadd.s f20, f22, f25, f18, rne # perform operation
fnmadd.s f20, f22, f25, f18, rtz # perform operation
fnmadd.s f20, f22, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x40fc1a07ca0b5bb9 # load x3 with value 0x40fc1a07ca0b5bb9
sw x3, 0(x2) # store 0x40fc1a07ca0b5bb9 in memory
flw f5, 0(x2) # load 0x40fc1a07ca0b5bb9 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fnmadd.s f26, f15, f5, f2, dyn # perform operation
fnmadd.s f26, f15, f5, f2, rdn # perform operation
fnmadd.s f26, f15, f5, f2, rmm # perform operation
fnmadd.s f26, f15, f5, f2, rne # perform operation
fnmadd.s f26, f15, f5, f2, rtz # perform operation
fnmadd.s f26, f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f15, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x990e02c3b22f476b # load x3 with value 0x990e02c3b22f476b
sw x3, 0(x2) # store 0x990e02c3b22f476b in memory
flw f16, 0(x2) # load 0x990e02c3b22f476b from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmadd.s f6, f25, f16, f21, dyn # perform operation
fnmadd.s f6, f25, f16, f21, rdn # perform operation
fnmadd.s f6, f25, f16, f21, rmm # perform operation
fnmadd.s f6, f25, f16, f21, rne # perform operation
fnmadd.s f6, f25, f16, f21, rtz # perform operation
fnmadd.s f6, f25, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x55bfe6585936a317 # load x3 with value 0x55bfe6585936a317
sw x3, 0(x2) # store 0x55bfe6585936a317 in memory
flw f28, 0(x2) # load 0x55bfe6585936a317 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f31, f27, f28, f9, dyn # perform operation
fnmadd.s f31, f27, f28, f9, rdn # perform operation
fnmadd.s f31, f27, f28, f9, rmm # perform operation
fnmadd.s f31, f27, f28, f9, rne # perform operation
fnmadd.s f31, f27, f28, f9, rtz # perform operation
fnmadd.s f31, f27, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x7416b01627d63323 # load x3 with value 0x7416b01627d63323
sw x3, 0(x2) # store 0x7416b01627d63323 in memory
flw f29, 0(x2) # load 0x7416b01627d63323 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmadd.s f23, f16, f29, f28, dyn # perform operation
fnmadd.s f23, f16, f29, f28, rdn # perform operation
fnmadd.s f23, f16, f29, f28, rmm # perform operation
fnmadd.s f23, f16, f29, f28, rne # perform operation
fnmadd.s f23, f16, f29, f28, rtz # perform operation
fnmadd.s f23, f16, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x9f724a3ede839fb # load x3 with value 0x9f724a3ede839fb
sw x3, 0(x2) # store 0x9f724a3ede839fb in memory
flw f29, 0(x2) # load 0x9f724a3ede839fb from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fnmadd.s f15, f31, f29, f5, dyn # perform operation
fnmadd.s f15, f31, f29, f5, rdn # perform operation
fnmadd.s f15, f31, f29, f5, rmm # perform operation
fnmadd.s f15, f31, f29, f5, rne # perform operation
fnmadd.s f15, f31, f29, f5, rtz # perform operation
fnmadd.s f15, f31, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f31, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f31, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f31, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f31, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f31, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x126c4b9b7b5d964e # load x3 with value 0x126c4b9b7b5d964e
sw x3, 0(x2) # store 0x126c4b9b7b5d964e in memory
flw f15, 0(x2) # load 0x126c4b9b7b5d964e from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fnmadd.s f6, f23, f15, f2, dyn # perform operation
fnmadd.s f6, f23, f15, f2, rdn # perform operation
fnmadd.s f6, f23, f15, f2, rmm # perform operation
fnmadd.s f6, f23, f15, f2, rne # perform operation
fnmadd.s f6, f23, f15, f2, rtz # perform operation
fnmadd.s f6, f23, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x241910abd6208962 # load x3 with value 0x241910abd6208962
sw x3, 0(x2) # store 0x241910abd6208962 in memory
flw f28, 0(x2) # load 0x241910abd6208962 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f8, f11, f28, f13, dyn # perform operation
fnmadd.s f8, f11, f28, f13, rdn # perform operation
fnmadd.s f8, f11, f28, f13, rmm # perform operation
fnmadd.s f8, f11, f28, f13, rne # perform operation
fnmadd.s f8, f11, f28, f13, rtz # perform operation
fnmadd.s f8, f11, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f11, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xa0159ab5e06f61f3 # load x3 with value 0xa0159ab5e06f61f3
sw x3, 0(x2) # store 0xa0159ab5e06f61f3 in memory
flw f20, 0(x2) # load 0xa0159ab5e06f61f3 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fnmadd.s f6, f21, f20, f15, dyn # perform operation
fnmadd.s f6, f21, f20, f15, rdn # perform operation
fnmadd.s f6, f21, f20, f15, rmm # perform operation
fnmadd.s f6, f21, f20, f15, rne # perform operation
fnmadd.s f6, f21, f20, f15, rtz # perform operation
fnmadd.s f6, f21, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f21, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f21, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f21, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f21, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f21, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x95bfeda6f9903e5d # load x3 with value 0x95bfeda6f9903e5d
sw x3, 0(x2) # store 0x95bfeda6f9903e5d in memory
flw f21, 0(x2) # load 0x95bfeda6f9903e5d from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmadd.s f27, f6, f21, f10, dyn # perform operation
fnmadd.s f27, f6, f21, f10, rdn # perform operation
fnmadd.s f27, f6, f21, f10, rmm # perform operation
fnmadd.s f27, f6, f21, f10, rne # perform operation
fnmadd.s f27, f6, f21, f10, rtz # perform operation
fnmadd.s f27, f6, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x4cf44e16f896a4a2 # load x3 with value 0x4cf44e16f896a4a2
sw x3, 0(x2) # store 0x4cf44e16f896a4a2 in memory
flw f13, 0(x2) # load 0x4cf44e16f896a4a2 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fnmadd.s f23, f10, f13, f21, dyn # perform operation
fnmadd.s f23, f10, f13, f21, rdn # perform operation
fnmadd.s f23, f10, f13, f21, rmm # perform operation
fnmadd.s f23, f10, f13, f21, rne # perform operation
fnmadd.s f23, f10, f13, f21, rtz # perform operation
fnmadd.s f23, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x7cdcbec15315588e # load x3 with value 0x7cdcbec15315588e
sw x3, 0(x2) # store 0x7cdcbec15315588e in memory
flw f5, 0(x2) # load 0x7cdcbec15315588e from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmadd.s f23, f28, f5, f2, dyn # perform operation
fnmadd.s f23, f28, f5, f2, rdn # perform operation
fnmadd.s f23, f28, f5, f2, rmm # perform operation
fnmadd.s f23, f28, f5, f2, rne # perform operation
fnmadd.s f23, f28, f5, f2, rtz # perform operation
fnmadd.s f23, f28, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x85be4c202701558d # load x3 with value 0x85be4c202701558d
sw x3, 0(x2) # store 0x85be4c202701558d in memory
flw f19, 0(x2) # load 0x85be4c202701558d from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f27, f18, f19, f16, dyn # perform operation
fnmadd.s f27, f18, f19, f16, rdn # perform operation
fnmadd.s f27, f18, f19, f16, rmm # perform operation
fnmadd.s f27, f18, f19, f16, rne # perform operation
fnmadd.s f27, f18, f19, f16, rtz # perform operation
fnmadd.s f27, f18, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x67826f254e69bdef # load x3 with value 0x67826f254e69bdef
sw x3, 0(x2) # store 0x67826f254e69bdef in memory
flw f19, 0(x2) # load 0x67826f254e69bdef from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fnmadd.s f30, f22, f19, f7, dyn # perform operation
fnmadd.s f30, f22, f19, f7, rdn # perform operation
fnmadd.s f30, f22, f19, f7, rmm # perform operation
fnmadd.s f30, f22, f19, f7, rne # perform operation
fnmadd.s f30, f22, f19, f7, rtz # perform operation
fnmadd.s f30, f22, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x8626b8a6da52b544 # load x3 with value 0x8626b8a6da52b544
sw x3, 0(x2) # store 0x8626b8a6da52b544 in memory
flw f10, 0(x2) # load 0x8626b8a6da52b544 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmadd.s f21, f31, f10, f17, dyn # perform operation
fnmadd.s f21, f31, f10, f17, rdn # perform operation
fnmadd.s f21, f31, f10, f17, rmm # perform operation
fnmadd.s f21, f31, f10, f17, rne # perform operation
fnmadd.s f21, f31, f10, f17, rtz # perform operation
fnmadd.s f21, f31, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x6c11196dfe281d54 # load x3 with value 0x6c11196dfe281d54
sw x3, 0(x2) # store 0x6c11196dfe281d54 in memory
flw f11, 0(x2) # load 0x6c11196dfe281d54 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.s f17, f6, f11, f23, dyn # perform operation
fnmadd.s f17, f6, f11, f23, rdn # perform operation
fnmadd.s f17, f6, f11, f23, rmm # perform operation
fnmadd.s f17, f6, f11, f23, rne # perform operation
fnmadd.s f17, f6, f11, f23, rtz # perform operation
fnmadd.s f17, f6, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f6, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x51a64e8299d32f07 # load x3 with value 0x51a64e8299d32f07
sw x3, 0(x2) # store 0x51a64e8299d32f07 in memory
flw f12, 0(x2) # load 0x51a64e8299d32f07 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmadd.s f8, f5, f12, f22, dyn # perform operation
fnmadd.s f8, f5, f12, f22, rdn # perform operation
fnmadd.s f8, f5, f12, f22, rmm # perform operation
fnmadd.s f8, f5, f12, f22, rne # perform operation
fnmadd.s f8, f5, f12, f22, rtz # perform operation
fnmadd.s f8, f5, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xc2298775a00cf67e # load x3 with value 0xc2298775a00cf67e
sw x3, 0(x2) # store 0xc2298775a00cf67e in memory
flw f5, 0(x2) # load 0xc2298775a00cf67e from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fnmadd.s f30, f29, f5, f3, dyn # perform operation
fnmadd.s f30, f29, f5, f3, rdn # perform operation
fnmadd.s f30, f29, f5, f3, rmm # perform operation
fnmadd.s f30, f29, f5, f3, rne # perform operation
fnmadd.s f30, f29, f5, f3, rtz # perform operation
fnmadd.s f30, f29, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f29, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f29, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f29, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f29, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f29, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0xb7377ee1ce213fb8 # load x3 with value 0xb7377ee1ce213fb8
sw x3, 0(x2) # store 0xb7377ee1ce213fb8 in memory
flw f27, 0(x2) # load 0xb7377ee1ce213fb8 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fnmadd.s f13, f6, f27, f5, dyn # perform operation
fnmadd.s f13, f6, f27, f5, rdn # perform operation
fnmadd.s f13, f6, f27, f5, rmm # perform operation
fnmadd.s f13, f6, f27, f5, rne # perform operation
fnmadd.s f13, f6, f27, f5, rtz # perform operation
fnmadd.s f13, f6, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x37b1b3553d5853a7 # load x3 with value 0x37b1b3553d5853a7
sw x3, 0(x2) # store 0x37b1b3553d5853a7 in memory
flw f6, 0(x2) # load 0x37b1b3553d5853a7 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmadd.s f30, f23, f6, f13, dyn # perform operation
fnmadd.s f30, f23, f6, f13, rdn # perform operation
fnmadd.s f30, f23, f6, f13, rmm # perform operation
fnmadd.s f30, f23, f6, f13, rne # perform operation
fnmadd.s f30, f23, f6, f13, rtz # perform operation
fnmadd.s f30, f23, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f6, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xc13d783e6b4f31e0 # load x3 with value 0xc13d783e6b4f31e0
sw x3, 0(x2) # store 0xc13d783e6b4f31e0 in memory
flw f22, 0(x2) # load 0xc13d783e6b4f31e0 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fnmadd.s f16, f19, f22, f12, dyn # perform operation
fnmadd.s f16, f19, f22, f12, rdn # perform operation
fnmadd.s f16, f19, f22, f12, rmm # perform operation
fnmadd.s f16, f19, f22, f12, rne # perform operation
fnmadd.s f16, f19, f22, f12, rtz # perform operation
fnmadd.s f16, f19, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xf88584b62f79c892 # load x3 with value 0xf88584b62f79c892
sw x3, 0(x2) # store 0xf88584b62f79c892 in memory
flw f21, 0(x2) # load 0xf88584b62f79c892 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fnmadd.s f30, f29, f21, f22, dyn # perform operation
fnmadd.s f30, f29, f21, f22, rdn # perform operation
fnmadd.s f30, f29, f21, f22, rmm # perform operation
fnmadd.s f30, f29, f21, f22, rne # perform operation
fnmadd.s f30, f29, f21, f22, rtz # perform operation
fnmadd.s f30, f29, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f29, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f29, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f29, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f29, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f29, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xcc712135cabe5927 # load x3 with value 0xcc712135cabe5927
sw x3, 0(x2) # store 0xcc712135cabe5927 in memory
flw f30, 0(x2) # load 0xcc712135cabe5927 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f26, f19, f30, f6, dyn # perform operation
fnmadd.s f26, f19, f30, f6, rdn # perform operation
fnmadd.s f26, f19, f30, f6, rmm # perform operation
fnmadd.s f26, f19, f30, f6, rne # perform operation
fnmadd.s f26, f19, f30, f6, rtz # perform operation
fnmadd.s f26, f19, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x7436d256e0a68685 # load x3 with value 0x7436d256e0a68685
sw x3, 0(x2) # store 0x7436d256e0a68685 in memory
flw f5, 0(x2) # load 0x7436d256e0a68685 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmadd.s f12, f7, f5, f19, dyn # perform operation
fnmadd.s f12, f7, f5, f19, rdn # perform operation
fnmadd.s f12, f7, f5, f19, rmm # perform operation
fnmadd.s f12, f7, f5, f19, rne # perform operation
fnmadd.s f12, f7, f5, f19, rtz # perform operation
fnmadd.s f12, f7, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f7, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x4d292ba227be662c # load x3 with value 0x4d292ba227be662c
sw x3, 0(x2) # store 0x4d292ba227be662c in memory
flw f29, 0(x2) # load 0x4d292ba227be662c from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fnmadd.s f17, f22, f29, f7, dyn # perform operation
fnmadd.s f17, f22, f29, f7, rdn # perform operation
fnmadd.s f17, f22, f29, f7, rmm # perform operation
fnmadd.s f17, f22, f29, f7, rne # perform operation
fnmadd.s f17, f22, f29, f7, rtz # perform operation
fnmadd.s f17, f22, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x3c8f60b9f61c7dee # load x3 with value 0x3c8f60b9f61c7dee
sw x3, 0(x2) # store 0x3c8f60b9f61c7dee in memory
flw f19, 0(x2) # load 0x3c8f60b9f61c7dee from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmadd.s f30, f18, f19, f15, dyn # perform operation
fnmadd.s f30, f18, f19, f15, rdn # perform operation
fnmadd.s f30, f18, f19, f15, rmm # perform operation
fnmadd.s f30, f18, f19, f15, rne # perform operation
fnmadd.s f30, f18, f19, f15, rtz # perform operation
fnmadd.s f30, f18, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xdec21edadd62d062 # load x3 with value 0xdec21edadd62d062
sw x3, 0(x2) # store 0xdec21edadd62d062 in memory
flw f1, 0(x2) # load 0xdec21edadd62d062 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmadd.s f29, f22, f1, f31, dyn # perform operation
fnmadd.s f29, f22, f1, f31, rdn # perform operation
fnmadd.s f29, f22, f1, f31, rmm # perform operation
fnmadd.s f29, f22, f1, f31, rne # perform operation
fnmadd.s f29, f22, f1, f31, rtz # perform operation
fnmadd.s f29, f22, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f22, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f22, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f22, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f22, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f22, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xa52415c82c7d6925 # load x3 with value 0xa52415c82c7d6925
sw x3, 0(x2) # store 0xa52415c82c7d6925 in memory
flw f16, 0(x2) # load 0xa52415c82c7d6925 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.s f19, f22, f16, f23, dyn # perform operation
fnmadd.s f19, f22, f16, f23, rdn # perform operation
fnmadd.s f19, f22, f16, f23, rmm # perform operation
fnmadd.s f19, f22, f16, f23, rne # perform operation
fnmadd.s f19, f22, f16, f23, rtz # perform operation
fnmadd.s f19, f22, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x6c412c8f5ba29ff2 # load x3 with value 0x6c412c8f5ba29ff2
sw x3, 0(x2) # store 0x6c412c8f5ba29ff2 in memory
flw f27, 0(x2) # load 0x6c412c8f5ba29ff2 from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f15, f10, f27, f19, dyn # perform operation
fnmadd.s f15, f10, f27, f19, rdn # perform operation
fnmadd.s f15, f10, f27, f19, rmm # perform operation
fnmadd.s f15, f10, f27, f19, rne # perform operation
fnmadd.s f15, f10, f27, f19, rtz # perform operation
fnmadd.s f15, f10, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xbf83a1b11fef824f # load x3 with value 0xbf83a1b11fef824f
sw x3, 0(x2) # store 0xbf83a1b11fef824f in memory
flw f1, 0(x2) # load 0xbf83a1b11fef824f from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmadd.s f24, f29, f1, f16, dyn # perform operation
fnmadd.s f24, f29, f1, f16, rdn # perform operation
fnmadd.s f24, f29, f1, f16, rmm # perform operation
fnmadd.s f24, f29, f1, f16, rne # perform operation
fnmadd.s f24, f29, f1, f16, rtz # perform operation
fnmadd.s f24, f29, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0xa53486471f0b310c # load x3 with value 0xa53486471f0b310c
sw x3, 0(x2) # store 0xa53486471f0b310c in memory
flw f25, 0(x2) # load 0xa53486471f0b310c from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f1, f10, f25, f29, dyn # perform operation
fnmadd.s f1, f10, f25, f29, rdn # perform operation
fnmadd.s f1, f10, f25, f29, rmm # perform operation
fnmadd.s f1, f10, f25, f29, rne # perform operation
fnmadd.s f1, f10, f25, f29, rtz # perform operation
fnmadd.s f1, f10, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x32e4694a5e7e3e13 # load x3 with value 0x32e4694a5e7e3e13
sw x3, 0(x2) # store 0x32e4694a5e7e3e13 in memory
flw f18, 0(x2) # load 0x32e4694a5e7e3e13 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f10, f15, f18, f16, dyn # perform operation
fnmadd.s f10, f15, f18, f16, rdn # perform operation
fnmadd.s f10, f15, f18, f16, rmm # perform operation
fnmadd.s f10, f15, f18, f16, rne # perform operation
fnmadd.s f10, f15, f18, f16, rtz # perform operation
fnmadd.s f10, f15, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xd5f42398dd141436 # load x3 with value 0xd5f42398dd141436
sw x3, 0(x2) # store 0xd5f42398dd141436 in memory
flw f16, 0(x2) # load 0xd5f42398dd141436 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmadd.s f24, f14, f16, f6, dyn # perform operation
fnmadd.s f24, f14, f16, f6, rdn # perform operation
fnmadd.s f24, f14, f16, f6, rmm # perform operation
fnmadd.s f24, f14, f16, f6, rne # perform operation
fnmadd.s f24, f14, f16, f6, rtz # perform operation
fnmadd.s f24, f14, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f14, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f14, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f14, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f14, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f14, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x68d4ae3f6d8a168f # load x3 with value 0x68d4ae3f6d8a168f
sw x3, 0(x2) # store 0x68d4ae3f6d8a168f in memory
flw f31, 0(x2) # load 0x68d4ae3f6d8a168f from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmadd.s f30, f26, f31, f9, dyn # perform operation
fnmadd.s f30, f26, f31, f9, rdn # perform operation
fnmadd.s f30, f26, f31, f9, rmm # perform operation
fnmadd.s f30, f26, f31, f9, rne # perform operation
fnmadd.s f30, f26, f31, f9, rtz # perform operation
fnmadd.s f30, f26, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0xb69046b58a1abacb # load x3 with value 0xb69046b58a1abacb
sw x3, 0(x2) # store 0xb69046b58a1abacb in memory
flw f22, 0(x2) # load 0xb69046b58a1abacb from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmadd.s f23, f27, f22, f24, dyn # perform operation
fnmadd.s f23, f27, f22, f24, rdn # perform operation
fnmadd.s f23, f27, f22, f24, rmm # perform operation
fnmadd.s f23, f27, f22, f24, rne # perform operation
fnmadd.s f23, f27, f22, f24, rtz # perform operation
fnmadd.s f23, f27, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x7b7f4d9a99e3dad9 # load x3 with value 0x7b7f4d9a99e3dad9
sw x3, 0(x2) # store 0x7b7f4d9a99e3dad9 in memory
flw f31, 0(x2) # load 0x7b7f4d9a99e3dad9 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmadd.s f26, f19, f31, f27, dyn # perform operation
fnmadd.s f26, f19, f31, f27, rdn # perform operation
fnmadd.s f26, f19, f31, f27, rmm # perform operation
fnmadd.s f26, f19, f31, f27, rne # perform operation
fnmadd.s f26, f19, f31, f27, rtz # perform operation
fnmadd.s f26, f19, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xa5a5da128752db2f # load x3 with value 0xa5a5da128752db2f
sw x3, 0(x2) # store 0xa5a5da128752db2f in memory
flw f5, 0(x2) # load 0xa5a5da128752db2f from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmadd.s f26, f23, f5, f10, dyn # perform operation
fnmadd.s f26, f23, f5, f10, rdn # perform operation
fnmadd.s f26, f23, f5, f10, rmm # perform operation
fnmadd.s f26, f23, f5, f10, rne # perform operation
fnmadd.s f26, f23, f5, f10, rtz # perform operation
fnmadd.s f26, f23, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x58d55a1a3c5cb923 # load x3 with value 0x58d55a1a3c5cb923
sw x3, 0(x2) # store 0x58d55a1a3c5cb923 in memory
flw f23, 0(x2) # load 0x58d55a1a3c5cb923 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fnmadd.s f29, f22, f23, f6, dyn # perform operation
fnmadd.s f29, f22, f23, f6, rdn # perform operation
fnmadd.s f29, f22, f23, f6, rmm # perform operation
fnmadd.s f29, f22, f23, f6, rne # perform operation
fnmadd.s f29, f22, f23, f6, rtz # perform operation
fnmadd.s f29, f22, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f22, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x6fdb9820562feb81 # load x3 with value 0x6fdb9820562feb81
sw x3, 0(x2) # store 0x6fdb9820562feb81 in memory
flw f6, 0(x2) # load 0x6fdb9820562feb81 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmadd.s f20, f30, f6, f8, dyn # perform operation
fnmadd.s f20, f30, f6, f8, rdn # perform operation
fnmadd.s f20, f30, f6, f8, rmm # perform operation
fnmadd.s f20, f30, f6, f8, rne # perform operation
fnmadd.s f20, f30, f6, f8, rtz # perform operation
fnmadd.s f20, f30, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x233a446bdaf24d7b # load x3 with value 0x233a446bdaf24d7b
sw x3, 0(x2) # store 0x233a446bdaf24d7b in memory
flw f25, 0(x2) # load 0x233a446bdaf24d7b from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmadd.s f8, f17, f25, f26, dyn # perform operation
fnmadd.s f8, f17, f25, f26, rdn # perform operation
fnmadd.s f8, f17, f25, f26, rmm # perform operation
fnmadd.s f8, f17, f25, f26, rne # perform operation
fnmadd.s f8, f17, f25, f26, rtz # perform operation
fnmadd.s f8, f17, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x8799bf92a95f458b # load x3 with value 0x8799bf92a95f458b
sw x3, 0(x2) # store 0x8799bf92a95f458b in memory
flw f21, 0(x2) # load 0x8799bf92a95f458b from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmadd.s f18, f1, f21, f6, dyn # perform operation
fnmadd.s f18, f1, f21, f6, rdn # perform operation
fnmadd.s f18, f1, f21, f6, rmm # perform operation
fnmadd.s f18, f1, f21, f6, rne # perform operation
fnmadd.s f18, f1, f21, f6, rtz # perform operation
fnmadd.s f18, f1, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xc0ad7fa68ec557f7 # load x3 with value 0xc0ad7fa68ec557f7
sw x3, 0(x2) # store 0xc0ad7fa68ec557f7 in memory
flw f31, 0(x2) # load 0xc0ad7fa68ec557f7 from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmadd.s f11, f7, f31, f18, dyn # perform operation
fnmadd.s f11, f7, f31, f18, rdn # perform operation
fnmadd.s f11, f7, f31, f18, rmm # perform operation
fnmadd.s f11, f7, f31, f18, rne # perform operation
fnmadd.s f11, f7, f31, f18, rtz # perform operation
fnmadd.s f11, f7, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xec1e826f2185d68e # load x3 with value 0xec1e826f2185d68e
sw x3, 0(x2) # store 0xec1e826f2185d68e in memory
flw f12, 0(x2) # load 0xec1e826f2185d68e from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f31, f15, f12, f14, dyn # perform operation
fnmadd.s f31, f15, f12, f14, rdn # perform operation
fnmadd.s f31, f15, f12, f14, rmm # perform operation
fnmadd.s f31, f15, f12, f14, rne # perform operation
fnmadd.s f31, f15, f12, f14, rtz # perform operation
fnmadd.s f31, f15, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x3cc887e9ab1fbd0f # load x3 with value 0x3cc887e9ab1fbd0f
sw x3, 0(x2) # store 0x3cc887e9ab1fbd0f in memory
flw f5, 0(x2) # load 0x3cc887e9ab1fbd0f from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fnmadd.s f23, f20, f5, f27, dyn # perform operation
fnmadd.s f23, f20, f5, f27, rdn # perform operation
fnmadd.s f23, f20, f5, f27, rmm # perform operation
fnmadd.s f23, f20, f5, f27, rne # perform operation
fnmadd.s f23, f20, f5, f27, rtz # perform operation
fnmadd.s f23, f20, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x2da4203da681a907 # load x3 with value 0x2da4203da681a907
sw x3, 0(x2) # store 0x2da4203da681a907 in memory
flw f27, 0(x2) # load 0x2da4203da681a907 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmadd.s f16, f13, f27, f2, dyn # perform operation
fnmadd.s f16, f13, f27, f2, rdn # perform operation
fnmadd.s f16, f13, f27, f2, rmm # perform operation
fnmadd.s f16, f13, f27, f2, rne # perform operation
fnmadd.s f16, f13, f27, f2, rtz # perform operation
fnmadd.s f16, f13, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xb201103c127d8483 # load x3 with value 0xb201103c127d8483
sw x3, 0(x2) # store 0xb201103c127d8483 in memory
flw f28, 0(x2) # load 0xb201103c127d8483 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f7, f14, f28, f30, dyn # perform operation
fnmadd.s f7, f14, f28, f30, rdn # perform operation
fnmadd.s f7, f14, f28, f30, rmm # perform operation
fnmadd.s f7, f14, f28, f30, rne # perform operation
fnmadd.s f7, f14, f28, f30, rtz # perform operation
fnmadd.s f7, f14, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f14, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xe1b2b3a487229275 # load x3 with value 0xe1b2b3a487229275
sw x3, 0(x2) # store 0xe1b2b3a487229275 in memory
flw f29, 0(x2) # load 0xe1b2b3a487229275 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fnmadd.s f16, f7, f29, f3, dyn # perform operation
fnmadd.s f16, f7, f29, f3, rdn # perform operation
fnmadd.s f16, f7, f29, f3, rmm # perform operation
fnmadd.s f16, f7, f29, f3, rne # perform operation
fnmadd.s f16, f7, f29, f3, rtz # perform operation
fnmadd.s f16, f7, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f7, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x83898a36c26797da # load x3 with value 0x83898a36c26797da
sw x3, 0(x2) # store 0x83898a36c26797da in memory
flw f22, 0(x2) # load 0x83898a36c26797da from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f30, f11, f22, f28, dyn # perform operation
fnmadd.s f30, f11, f22, f28, rdn # perform operation
fnmadd.s f30, f11, f22, f28, rmm # perform operation
fnmadd.s f30, f11, f22, f28, rne # perform operation
fnmadd.s f30, f11, f22, f28, rtz # perform operation
fnmadd.s f30, f11, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x2c5deff1e5763d4e # load x3 with value 0x2c5deff1e5763d4e
sw x3, 0(x2) # store 0x2c5deff1e5763d4e in memory
flw f3, 0(x2) # load 0x2c5deff1e5763d4e from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f28, f12, f3, f8, dyn # perform operation
fnmadd.s f28, f12, f3, f8, rdn # perform operation
fnmadd.s f28, f12, f3, f8, rmm # perform operation
fnmadd.s f28, f12, f3, f8, rne # perform operation
fnmadd.s f28, f12, f3, f8, rtz # perform operation
fnmadd.s f28, f12, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x35e124a86e4e8658 # load x3 with value 0x35e124a86e4e8658
sw x3, 0(x2) # store 0x35e124a86e4e8658 in memory
flw f29, 0(x2) # load 0x35e124a86e4e8658 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
fnmadd.s f6, f7, f29, f23, dyn # perform operation
fnmadd.s f6, f7, f29, f23, rdn # perform operation
fnmadd.s f6, f7, f29, f23, rmm # perform operation
fnmadd.s f6, f7, f29, f23, rne # perform operation
fnmadd.s f6, f7, f29, f23, rtz # perform operation
fnmadd.s f6, f7, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x844d9efc9407cd64 # load x3 with value 0x844d9efc9407cd64
sw x3, 0(x2) # store 0x844d9efc9407cd64 in memory
flw f7, 0(x2) # load 0x844d9efc9407cd64 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f6, f22, f7, f11, dyn # perform operation
fnmadd.s f6, f22, f7, f11, rdn # perform operation
fnmadd.s f6, f22, f7, f11, rmm # perform operation
fnmadd.s f6, f22, f7, f11, rne # perform operation
fnmadd.s f6, f22, f7, f11, rtz # perform operation
fnmadd.s f6, f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xd484eb3af2840727 # load x3 with value 0xd484eb3af2840727
sw x3, 0(x2) # store 0xd484eb3af2840727 in memory
flw f6, 0(x2) # load 0xd484eb3af2840727 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmadd.s f15, f18, f6, f20, dyn # perform operation
fnmadd.s f15, f18, f6, f20, rdn # perform operation
fnmadd.s f15, f18, f6, f20, rmm # perform operation
fnmadd.s f15, f18, f6, f20, rne # perform operation
fnmadd.s f15, f18, f6, f20, rtz # perform operation
fnmadd.s f15, f18, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x9ba28800f17f9c9c # load x3 with value 0x9ba28800f17f9c9c
sw x3, 0(x2) # store 0x9ba28800f17f9c9c in memory
flw f27, 0(x2) # load 0x9ba28800f17f9c9c from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmadd.s f5, f24, f27, f13, dyn # perform operation
fnmadd.s f5, f24, f27, f13, rdn # perform operation
fnmadd.s f5, f24, f27, f13, rmm # perform operation
fnmadd.s f5, f24, f27, f13, rne # perform operation
fnmadd.s f5, f24, f27, f13, rtz # perform operation
fnmadd.s f5, f24, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xf2344d91fd05f127 # load x3 with value 0xf2344d91fd05f127
sw x3, 0(x2) # store 0xf2344d91fd05f127 in memory
flw f19, 0(x2) # load 0xf2344d91fd05f127 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmadd.s f9, f28, f19, f25, dyn # perform operation
fnmadd.s f9, f28, f19, f25, rdn # perform operation
fnmadd.s f9, f28, f19, f25, rmm # perform operation
fnmadd.s f9, f28, f19, f25, rne # perform operation
fnmadd.s f9, f28, f19, f25, rtz # perform operation
fnmadd.s f9, f28, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x2e7a2e17cc6b9185 # load x3 with value 0x2e7a2e17cc6b9185
sw x3, 0(x2) # store 0x2e7a2e17cc6b9185 in memory
flw f25, 0(x2) # load 0x2e7a2e17cc6b9185 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fnmadd.s f9, f7, f25, f5, dyn # perform operation
fnmadd.s f9, f7, f25, f5, rdn # perform operation
fnmadd.s f9, f7, f25, f5, rmm # perform operation
fnmadd.s f9, f7, f25, f5, rne # perform operation
fnmadd.s f9, f7, f25, f5, rtz # perform operation
fnmadd.s f9, f7, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f7, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f7, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f7, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f7, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f7, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xcebb10e90d8ba65e # load x3 with value 0xcebb10e90d8ba65e
sw x3, 0(x2) # store 0xcebb10e90d8ba65e in memory
flw f2, 0(x2) # load 0xcebb10e90d8ba65e from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f5, f27, f2, f24, dyn # perform operation
fnmadd.s f5, f27, f2, f24, rdn # perform operation
fnmadd.s f5, f27, f2, f24, rmm # perform operation
fnmadd.s f5, f27, f2, f24, rne # perform operation
fnmadd.s f5, f27, f2, f24, rtz # perform operation
fnmadd.s f5, f27, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x1641ed2e74c4c347 # load x3 with value 0x1641ed2e74c4c347
sw x3, 0(x2) # store 0x1641ed2e74c4c347 in memory
flw f22, 0(x2) # load 0x1641ed2e74c4c347 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmadd.s f30, f18, f22, f2, dyn # perform operation
fnmadd.s f30, f18, f22, f2, rdn # perform operation
fnmadd.s f30, f18, f22, f2, rmm # perform operation
fnmadd.s f30, f18, f22, f2, rne # perform operation
fnmadd.s f30, f18, f22, f2, rtz # perform operation
fnmadd.s f30, f18, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x6d915bc3e61f9f70 # load x3 with value 0x6d915bc3e61f9f70
sw x3, 0(x2) # store 0x6d915bc3e61f9f70 in memory
flw f18, 0(x2) # load 0x6d915bc3e61f9f70 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f24, f1, f18, f7, dyn # perform operation
fnmadd.s f24, f1, f18, f7, rdn # perform operation
fnmadd.s f24, f1, f18, f7, rmm # perform operation
fnmadd.s f24, f1, f18, f7, rne # perform operation
fnmadd.s f24, f1, f18, f7, rtz # perform operation
fnmadd.s f24, f1, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f1, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x10c4bf94909a1103 # load x3 with value 0x10c4bf94909a1103
sw x3, 0(x2) # store 0x10c4bf94909a1103 in memory
flw f19, 0(x2) # load 0x10c4bf94909a1103 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f27, f21, f19, f8, dyn # perform operation
fnmadd.s f27, f21, f19, f8, rdn # perform operation
fnmadd.s f27, f21, f19, f8, rmm # perform operation
fnmadd.s f27, f21, f19, f8, rne # perform operation
fnmadd.s f27, f21, f19, f8, rtz # perform operation
fnmadd.s f27, f21, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xa9364c4b0e78e75c # load x3 with value 0xa9364c4b0e78e75c
sw x3, 0(x2) # store 0xa9364c4b0e78e75c in memory
flw f24, 0(x2) # load 0xa9364c4b0e78e75c from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f14, f11, f24, f16, dyn # perform operation
fnmadd.s f14, f11, f24, f16, rdn # perform operation
fnmadd.s f14, f11, f24, f16, rmm # perform operation
fnmadd.s f14, f11, f24, f16, rne # perform operation
fnmadd.s f14, f11, f24, f16, rtz # perform operation
fnmadd.s f14, f11, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f11, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x65d5c534644801a2 # load x3 with value 0x65d5c534644801a2
sw x3, 0(x2) # store 0x65d5c534644801a2 in memory
flw f18, 0(x2) # load 0x65d5c534644801a2 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmadd.s f29, f12, f18, f26, dyn # perform operation
fnmadd.s f29, f12, f18, f26, rdn # perform operation
fnmadd.s f29, f12, f18, f26, rmm # perform operation
fnmadd.s f29, f12, f18, f26, rne # perform operation
fnmadd.s f29, f12, f18, f26, rtz # perform operation
fnmadd.s f29, f12, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x480ff7f3e5657ba9 # load x3 with value 0x480ff7f3e5657ba9
sw x3, 0(x2) # store 0x480ff7f3e5657ba9 in memory
flw f3, 0(x2) # load 0x480ff7f3e5657ba9 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f16, f23, f3, f25, dyn # perform operation
fnmadd.s f16, f23, f3, f25, rdn # perform operation
fnmadd.s f16, f23, f3, f25, rmm # perform operation
fnmadd.s f16, f23, f3, f25, rne # perform operation
fnmadd.s f16, f23, f3, f25, rtz # perform operation
fnmadd.s f16, f23, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f3, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x273bbeabe2273a8c # load x3 with value 0x273bbeabe2273a8c
sw x3, 0(x2) # store 0x273bbeabe2273a8c in memory
flw f2, 0(x2) # load 0x273bbeabe2273a8c from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmadd.s f12, f23, f2, f22, dyn # perform operation
fnmadd.s f12, f23, f2, f22, rdn # perform operation
fnmadd.s f12, f23, f2, f22, rmm # perform operation
fnmadd.s f12, f23, f2, f22, rne # perform operation
fnmadd.s f12, f23, f2, f22, rtz # perform operation
fnmadd.s f12, f23, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f23, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xd051af5a84566282 # load x3 with value 0xd051af5a84566282
sw x3, 0(x2) # store 0xd051af5a84566282 in memory
flw f18, 0(x2) # load 0xd051af5a84566282 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
fnmadd.s f2, f8, f18, f9, dyn # perform operation
fnmadd.s f2, f8, f18, f9, rdn # perform operation
fnmadd.s f2, f8, f18, f9, rmm # perform operation
fnmadd.s f2, f8, f18, f9, rne # perform operation
fnmadd.s f2, f8, f18, f9, rtz # perform operation
fnmadd.s f2, f8, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xce6819aea548448 # load x3 with value 0xce6819aea548448
sw x3, 0(x2) # store 0xce6819aea548448 in memory
flw f21, 0(x2) # load 0xce6819aea548448 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f30, f31, f21, f18, dyn # perform operation
fnmadd.s f30, f31, f21, f18, rdn # perform operation
fnmadd.s f30, f31, f21, f18, rmm # perform operation
fnmadd.s f30, f31, f21, f18, rne # perform operation
fnmadd.s f30, f31, f21, f18, rtz # perform operation
fnmadd.s f30, f31, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f21, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x7ae1f194dfd1642b # load x3 with value 0x7ae1f194dfd1642b
sw x3, 0(x2) # store 0x7ae1f194dfd1642b in memory
flw f22, 0(x2) # load 0x7ae1f194dfd1642b from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f14, f5, f22, f25, dyn # perform operation
fnmadd.s f14, f5, f22, f25, rdn # perform operation
fnmadd.s f14, f5, f22, f25, rmm # perform operation
fnmadd.s f14, f5, f22, f25, rne # perform operation
fnmadd.s f14, f5, f22, f25, rtz # perform operation
fnmadd.s f14, f5, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x65ae0413e7c41d58 # load x3 with value 0x65ae0413e7c41d58
sw x3, 0(x2) # store 0x65ae0413e7c41d58 in memory
flw f23, 0(x2) # load 0x65ae0413e7c41d58 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmadd.s f21, f11, f23, f5, dyn # perform operation
fnmadd.s f21, f11, f23, f5, rdn # perform operation
fnmadd.s f21, f11, f23, f5, rmm # perform operation
fnmadd.s f21, f11, f23, f5, rne # perform operation
fnmadd.s f21, f11, f23, f5, rtz # perform operation
fnmadd.s f21, f11, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x78f0ad2f66c7f72a # load x3 with value 0x78f0ad2f66c7f72a
sw x3, 0(x2) # store 0x78f0ad2f66c7f72a in memory
flw f1, 0(x2) # load 0x78f0ad2f66c7f72a from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmadd.s f12, f3, f1, f8, dyn # perform operation
fnmadd.s f12, f3, f1, f8, rdn # perform operation
fnmadd.s f12, f3, f1, f8, rmm # perform operation
fnmadd.s f12, f3, f1, f8, rne # perform operation
fnmadd.s f12, f3, f1, f8, rtz # perform operation
fnmadd.s f12, f3, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x151cf100a597b5c4 # load x3 with value 0x151cf100a597b5c4
sw x3, 0(x2) # store 0x151cf100a597b5c4 in memory
flw f29, 0(x2) # load 0x151cf100a597b5c4 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmadd.s f25, f12, f29, f2, dyn # perform operation
fnmadd.s f25, f12, f29, f2, rdn # perform operation
fnmadd.s f25, f12, f29, f2, rmm # perform operation
fnmadd.s f25, f12, f29, f2, rne # perform operation
fnmadd.s f25, f12, f29, f2, rtz # perform operation
fnmadd.s f25, f12, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x3511b4ffb838fdc9 # load x3 with value 0x3511b4ffb838fdc9
sw x3, 0(x2) # store 0x3511b4ffb838fdc9 in memory
flw f5, 0(x2) # load 0x3511b4ffb838fdc9 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f17, f15, f5, f19, dyn # perform operation
fnmadd.s f17, f15, f5, f19, rdn # perform operation
fnmadd.s f17, f15, f5, f19, rmm # perform operation
fnmadd.s f17, f15, f5, f19, rne # perform operation
fnmadd.s f17, f15, f5, f19, rtz # perform operation
fnmadd.s f17, f15, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f15, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f15, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f15, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f15, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f15, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xd5fb1b9d883ba8e9 # load x3 with value 0xd5fb1b9d883ba8e9
sw x3, 0(x2) # store 0xd5fb1b9d883ba8e9 in memory
flw f27, 0(x2) # load 0xd5fb1b9d883ba8e9 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fnmadd.s f8, f7, f27, f2, dyn # perform operation
fnmadd.s f8, f7, f27, f2, rdn # perform operation
fnmadd.s f8, f7, f27, f2, rmm # perform operation
fnmadd.s f8, f7, f27, f2, rne # perform operation
fnmadd.s f8, f7, f27, f2, rtz # perform operation
fnmadd.s f8, f7, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xf06b26b453191daa # load x3 with value 0xf06b26b453191daa
sw x3, 0(x2) # store 0xf06b26b453191daa in memory
flw f6, 0(x2) # load 0xf06b26b453191daa from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.s f8, f31, f6, f12, dyn # perform operation
fnmadd.s f8, f31, f6, f12, rdn # perform operation
fnmadd.s f8, f31, f6, f12, rmm # perform operation
fnmadd.s f8, f31, f6, f12, rne # perform operation
fnmadd.s f8, f31, f6, f12, rtz # perform operation
fnmadd.s f8, f31, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x51d41306152c015c # load x3 with value 0x51d41306152c015c
sw x3, 0(x2) # store 0x51d41306152c015c in memory
flw f31, 0(x2) # load 0x51d41306152c015c from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmadd.s f20, f5, f31, f12, dyn # perform operation
fnmadd.s f20, f5, f31, f12, rdn # perform operation
fnmadd.s f20, f5, f31, f12, rmm # perform operation
fnmadd.s f20, f5, f31, f12, rne # perform operation
fnmadd.s f20, f5, f31, f12, rtz # perform operation
fnmadd.s f20, f5, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x79f18a51f6590398 # load x3 with value 0x79f18a51f6590398
sw x3, 0(x2) # store 0x79f18a51f6590398 in memory
flw f20, 0(x2) # load 0x79f18a51f6590398 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f31, f17, f20, f13, dyn # perform operation
fnmadd.s f31, f17, f20, f13, rdn # perform operation
fnmadd.s f31, f17, f20, f13, rmm # perform operation
fnmadd.s f31, f17, f20, f13, rne # perform operation
fnmadd.s f31, f17, f20, f13, rtz # perform operation
fnmadd.s f31, f17, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x27e0cb4f43d3ece4 # load x3 with value 0x27e0cb4f43d3ece4
sw x3, 0(x2) # store 0x27e0cb4f43d3ece4 in memory
flw f17, 0(x2) # load 0x27e0cb4f43d3ece4 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fnmadd.s f1, f31, f17, f22, dyn # perform operation
fnmadd.s f1, f31, f17, f22, rdn # perform operation
fnmadd.s f1, f31, f17, f22, rmm # perform operation
fnmadd.s f1, f31, f17, f22, rne # perform operation
fnmadd.s f1, f31, f17, f22, rtz # perform operation
fnmadd.s f1, f31, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x6eec42feda61801f # load x3 with value 0x6eec42feda61801f
sw x3, 0(x2) # store 0x6eec42feda61801f in memory
flw f9, 0(x2) # load 0x6eec42feda61801f from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f29, f7, f9, f25, dyn # perform operation
fnmadd.s f29, f7, f9, f25, rdn # perform operation
fnmadd.s f29, f7, f9, f25, rmm # perform operation
fnmadd.s f29, f7, f9, f25, rne # perform operation
fnmadd.s f29, f7, f9, f25, rtz # perform operation
fnmadd.s f29, f7, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x286ce21aa2076609 # load x3 with value 0x286ce21aa2076609
sw x3, 0(x2) # store 0x286ce21aa2076609 in memory
flw f2, 0(x2) # load 0x286ce21aa2076609 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f11, f5, f2, f21, dyn # perform operation
fnmadd.s f11, f5, f2, f21, rdn # perform operation
fnmadd.s f11, f5, f2, f21, rmm # perform operation
fnmadd.s f11, f5, f2, f21, rne # perform operation
fnmadd.s f11, f5, f2, f21, rtz # perform operation
fnmadd.s f11, f5, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x162473ac661bc28a # load x3 with value 0x162473ac661bc28a
sw x3, 0(x2) # store 0x162473ac661bc28a in memory
flw f14, 0(x2) # load 0x162473ac661bc28a from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmadd.s f27, f10, f14, f13, dyn # perform operation
fnmadd.s f27, f10, f14, f13, rdn # perform operation
fnmadd.s f27, f10, f14, f13, rmm # perform operation
fnmadd.s f27, f10, f14, f13, rne # perform operation
fnmadd.s f27, f10, f14, f13, rtz # perform operation
fnmadd.s f27, f10, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xf05baceb25e8a837 # load x3 with value 0xf05baceb25e8a837
sw x3, 0(x2) # store 0xf05baceb25e8a837 in memory
flw f20, 0(x2) # load 0xf05baceb25e8a837 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f16, f8, f20, f6, dyn # perform operation
fnmadd.s f16, f8, f20, f6, rdn # perform operation
fnmadd.s f16, f8, f20, f6, rmm # perform operation
fnmadd.s f16, f8, f20, f6, rne # perform operation
fnmadd.s f16, f8, f20, f6, rtz # perform operation
fnmadd.s f16, f8, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f20, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x60373dd9047185d0 # load x3 with value 0x60373dd9047185d0
sw x3, 0(x2) # store 0x60373dd9047185d0 in memory
flw f28, 0(x2) # load 0x60373dd9047185d0 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmadd.s f16, f13, f28, f24, dyn # perform operation
fnmadd.s f16, f13, f28, f24, rdn # perform operation
fnmadd.s f16, f13, f28, f24, rmm # perform operation
fnmadd.s f16, f13, f28, f24, rne # perform operation
fnmadd.s f16, f13, f28, f24, rtz # perform operation
fnmadd.s f16, f13, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x6de916aceb9227a1 # load x3 with value 0x6de916aceb9227a1
sw x3, 0(x2) # store 0x6de916aceb9227a1 in memory
flw f2, 0(x2) # load 0x6de916aceb9227a1 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmadd.s f19, f10, f2, f14, dyn # perform operation
fnmadd.s f19, f10, f2, f14, rdn # perform operation
fnmadd.s f19, f10, f2, f14, rmm # perform operation
fnmadd.s f19, f10, f2, f14, rne # perform operation
fnmadd.s f19, f10, f2, f14, rtz # perform operation
fnmadd.s f19, f10, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x3221dae76bf03f62 # load x3 with value 0x3221dae76bf03f62
sw x3, 0(x2) # store 0x3221dae76bf03f62 in memory
flw f9, 0(x2) # load 0x3221dae76bf03f62 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmadd.s f14, f22, f9, f31, dyn # perform operation
fnmadd.s f14, f22, f9, f31, rdn # perform operation
fnmadd.s f14, f22, f9, f31, rmm # perform operation
fnmadd.s f14, f22, f9, f31, rne # perform operation
fnmadd.s f14, f22, f9, f31, rtz # perform operation
fnmadd.s f14, f22, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xb2e65ee1162619e8 # load x3 with value 0xb2e65ee1162619e8
sw x3, 0(x2) # store 0xb2e65ee1162619e8 in memory
flw f2, 0(x2) # load 0xb2e65ee1162619e8 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmadd.s f1, f13, f2, f23, dyn # perform operation
fnmadd.s f1, f13, f2, f23, rdn # perform operation
fnmadd.s f1, f13, f2, f23, rmm # perform operation
fnmadd.s f1, f13, f2, f23, rne # perform operation
fnmadd.s f1, f13, f2, f23, rtz # perform operation
fnmadd.s f1, f13, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x836635c0ecbb0788 # load x3 with value 0x836635c0ecbb0788
sw x3, 0(x2) # store 0x836635c0ecbb0788 in memory
flw f14, 0(x2) # load 0x836635c0ecbb0788 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmadd.s f13, f7, f14, f17, dyn # perform operation
fnmadd.s f13, f7, f14, f17, rdn # perform operation
fnmadd.s f13, f7, f14, f17, rmm # perform operation
fnmadd.s f13, f7, f14, f17, rne # perform operation
fnmadd.s f13, f7, f14, f17, rtz # perform operation
fnmadd.s f13, f7, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x950d1077d266af2c # load x3 with value 0x950d1077d266af2c
sw x3, 0(x2) # store 0x950d1077d266af2c in memory
flw f31, 0(x2) # load 0x950d1077d266af2c from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmadd.s f30, f14, f31, f20, dyn # perform operation
fnmadd.s f30, f14, f31, f20, rdn # perform operation
fnmadd.s f30, f14, f31, f20, rmm # perform operation
fnmadd.s f30, f14, f31, f20, rne # perform operation
fnmadd.s f30, f14, f31, f20, rtz # perform operation
fnmadd.s f30, f14, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xd9f55a5f46a601ef # load x3 with value 0xd9f55a5f46a601ef
sw x3, 0(x2) # store 0xd9f55a5f46a601ef in memory
flw f20, 0(x2) # load 0xd9f55a5f46a601ef from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fnmadd.s f21, f10, f20, f18, dyn # perform operation
fnmadd.s f21, f10, f20, f18, rdn # perform operation
fnmadd.s f21, f10, f20, f18, rmm # perform operation
fnmadd.s f21, f10, f20, f18, rne # perform operation
fnmadd.s f21, f10, f20, f18, rtz # perform operation
fnmadd.s f21, f10, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x890850838c64874d # load x3 with value 0x890850838c64874d
sw x3, 0(x2) # store 0x890850838c64874d in memory
flw f21, 0(x2) # load 0x890850838c64874d from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fnmadd.s f28, f16, f21, f3, dyn # perform operation
fnmadd.s f28, f16, f21, f3, rdn # perform operation
fnmadd.s f28, f16, f21, f3, rmm # perform operation
fnmadd.s f28, f16, f21, f3, rne # perform operation
fnmadd.s f28, f16, f21, f3, rtz # perform operation
fnmadd.s f28, f16, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x7dbc62ccb84a852e # load x3 with value 0x7dbc62ccb84a852e
sw x3, 0(x2) # store 0x7dbc62ccb84a852e in memory
flw f14, 0(x2) # load 0x7dbc62ccb84a852e from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmadd.s f24, f12, f14, f30, dyn # perform operation
fnmadd.s f24, f12, f14, f30, rdn # perform operation
fnmadd.s f24, f12, f14, f30, rmm # perform operation
fnmadd.s f24, f12, f14, f30, rne # perform operation
fnmadd.s f24, f12, f14, f30, rtz # perform operation
fnmadd.s f24, f12, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f12, f14, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x483d3a512cc85e22 # load x3 with value 0x483d3a512cc85e22
sw x3, 0(x2) # store 0x483d3a512cc85e22 in memory
flw f21, 0(x2) # load 0x483d3a512cc85e22 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmadd.s f8, f10, f21, f27, dyn # perform operation
fnmadd.s f8, f10, f21, f27, rdn # perform operation
fnmadd.s f8, f10, f21, f27, rmm # perform operation
fnmadd.s f8, f10, f21, f27, rne # perform operation
fnmadd.s f8, f10, f21, f27, rtz # perform operation
fnmadd.s f8, f10, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x48ba61bd56e12656 # load x3 with value 0x48ba61bd56e12656
sw x3, 0(x2) # store 0x48ba61bd56e12656 in memory
flw f7, 0(x2) # load 0x48ba61bd56e12656 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fnmadd.s f2, f14, f7, f18, dyn # perform operation
fnmadd.s f2, f14, f7, f18, rdn # perform operation
fnmadd.s f2, f14, f7, f18, rmm # perform operation
fnmadd.s f2, f14, f7, f18, rne # perform operation
fnmadd.s f2, f14, f7, f18, rtz # perform operation
fnmadd.s f2, f14, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x2f7a4097fb18bb0b # load x3 with value 0x2f7a4097fb18bb0b
sw x3, 0(x2) # store 0x2f7a4097fb18bb0b in memory
flw f20, 0(x2) # load 0x2f7a4097fb18bb0b from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f21, f6, f20, f19, dyn # perform operation
fnmadd.s f21, f6, f20, f19, rdn # perform operation
fnmadd.s f21, f6, f20, f19, rmm # perform operation
fnmadd.s f21, f6, f20, f19, rne # perform operation
fnmadd.s f21, f6, f20, f19, rtz # perform operation
fnmadd.s f21, f6, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xa59a6ac5ae86f892 # load x3 with value 0xa59a6ac5ae86f892
sw x3, 0(x2) # store 0xa59a6ac5ae86f892 in memory
flw f12, 0(x2) # load 0xa59a6ac5ae86f892 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmadd.s f20, f16, f12, f21, dyn # perform operation
fnmadd.s f20, f16, f12, f21, rdn # perform operation
fnmadd.s f20, f16, f12, f21, rmm # perform operation
fnmadd.s f20, f16, f12, f21, rne # perform operation
fnmadd.s f20, f16, f12, f21, rtz # perform operation
fnmadd.s f20, f16, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x89a92823eed50173 # load x3 with value 0x89a92823eed50173
sw x3, 0(x2) # store 0x89a92823eed50173 in memory
flw f28, 0(x2) # load 0x89a92823eed50173 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f16, f17, f28, f18, dyn # perform operation
fnmadd.s f16, f17, f28, f18, rdn # perform operation
fnmadd.s f16, f17, f28, f18, rmm # perform operation
fnmadd.s f16, f17, f28, f18, rne # perform operation
fnmadd.s f16, f17, f28, f18, rtz # perform operation
fnmadd.s f16, f17, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xb3ebeb2b6d0b6b9d # load x3 with value 0xb3ebeb2b6d0b6b9d
sw x3, 0(x2) # store 0xb3ebeb2b6d0b6b9d in memory
flw f31, 0(x2) # load 0xb3ebeb2b6d0b6b9d from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fnmadd.s f17, f8, f31, f6, dyn # perform operation
fnmadd.s f17, f8, f31, f6, rdn # perform operation
fnmadd.s f17, f8, f31, f6, rmm # perform operation
fnmadd.s f17, f8, f31, f6, rne # perform operation
fnmadd.s f17, f8, f31, f6, rtz # perform operation
fnmadd.s f17, f8, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xed8c4a989d4e139f # load x3 with value 0xed8c4a989d4e139f
sw x3, 0(x2) # store 0xed8c4a989d4e139f in memory
flw f31, 0(x2) # load 0xed8c4a989d4e139f from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fnmadd.s f16, f29, f31, f18, dyn # perform operation
fnmadd.s f16, f29, f31, f18, rdn # perform operation
fnmadd.s f16, f29, f31, f18, rmm # perform operation
fnmadd.s f16, f29, f31, f18, rne # perform operation
fnmadd.s f16, f29, f31, f18, rtz # perform operation
fnmadd.s f16, f29, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x4864f9045ec43a14 # load x3 with value 0x4864f9045ec43a14
sw x3, 0(x2) # store 0x4864f9045ec43a14 in memory
flw f19, 0(x2) # load 0x4864f9045ec43a14 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmadd.s f27, f9, f19, f12, dyn # perform operation
fnmadd.s f27, f9, f19, f12, rdn # perform operation
fnmadd.s f27, f9, f19, f12, rmm # perform operation
fnmadd.s f27, f9, f19, f12, rne # perform operation
fnmadd.s f27, f9, f19, f12, rtz # perform operation
fnmadd.s f27, f9, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f9, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xdcce015bc000e5d6 # load x3 with value 0xdcce015bc000e5d6
sw x3, 0(x2) # store 0xdcce015bc000e5d6 in memory
flw f12, 0(x2) # load 0xdcce015bc000e5d6 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmadd.s f10, f11, f12, f6, dyn # perform operation
fnmadd.s f10, f11, f12, f6, rdn # perform operation
fnmadd.s f10, f11, f12, f6, rmm # perform operation
fnmadd.s f10, f11, f12, f6, rne # perform operation
fnmadd.s f10, f11, f12, f6, rtz # perform operation
fnmadd.s f10, f11, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f11, f12, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x71b6e720df45b3ad # load x3 with value 0x71b6e720df45b3ad
sw x3, 0(x2) # store 0x71b6e720df45b3ad in memory
flw f19, 0(x2) # load 0x71b6e720df45b3ad from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f17, f23, f19, f15, dyn # perform operation
fnmadd.s f17, f23, f19, f15, rdn # perform operation
fnmadd.s f17, f23, f19, f15, rmm # perform operation
fnmadd.s f17, f23, f19, f15, rne # perform operation
fnmadd.s f17, f23, f19, f15, rtz # perform operation
fnmadd.s f17, f23, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x8e8a1eadbd5c6141 # load x3 with value 0x8e8a1eadbd5c6141
sw x3, 0(x2) # store 0x8e8a1eadbd5c6141 in memory
flw f11, 0(x2) # load 0x8e8a1eadbd5c6141 from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmadd.s f2, f6, f11, f21, dyn # perform operation
fnmadd.s f2, f6, f11, f21, rdn # perform operation
fnmadd.s f2, f6, f11, f21, rmm # perform operation
fnmadd.s f2, f6, f11, f21, rne # perform operation
fnmadd.s f2, f6, f11, f21, rtz # perform operation
fnmadd.s f2, f6, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xaffc2eaaa6946b2f # load x3 with value 0xaffc2eaaa6946b2f
sw x3, 0(x2) # store 0xaffc2eaaa6946b2f in memory
flw f27, 0(x2) # load 0xaffc2eaaa6946b2f from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.s f13, f8, f27, f28, dyn # perform operation
fnmadd.s f13, f8, f27, f28, rdn # perform operation
fnmadd.s f13, f8, f27, f28, rmm # perform operation
fnmadd.s f13, f8, f27, f28, rne # perform operation
fnmadd.s f13, f8, f27, f28, rtz # perform operation
fnmadd.s f13, f8, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x71a7e57003bdb6b5 # load x3 with value 0x71a7e57003bdb6b5
sw x3, 0(x2) # store 0x71a7e57003bdb6b5 in memory
flw f21, 0(x2) # load 0x71a7e57003bdb6b5 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f8, f31, f21, f11, dyn # perform operation
fnmadd.s f8, f31, f21, f11, rdn # perform operation
fnmadd.s f8, f31, f21, f11, rmm # perform operation
fnmadd.s f8, f31, f21, f11, rne # perform operation
fnmadd.s f8, f31, f21, f11, rtz # perform operation
fnmadd.s f8, f31, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x60ce1d2adbff7e6b # load x3 with value 0x60ce1d2adbff7e6b
sw x3, 0(x2) # store 0x60ce1d2adbff7e6b in memory
flw f26, 0(x2) # load 0x60ce1d2adbff7e6b from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fnmadd.s f18, f17, f26, f27, dyn # perform operation
fnmadd.s f18, f17, f26, f27, rdn # perform operation
fnmadd.s f18, f17, f26, f27, rmm # perform operation
fnmadd.s f18, f17, f26, f27, rne # perform operation
fnmadd.s f18, f17, f26, f27, rtz # perform operation
fnmadd.s f18, f17, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f17, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f17, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f17, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f17, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f17, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xfc0b0a3645bd8a71 # load x3 with value 0xfc0b0a3645bd8a71
sw x3, 0(x2) # store 0xfc0b0a3645bd8a71 in memory
flw f9, 0(x2) # load 0xfc0b0a3645bd8a71 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f16, f8, f9, f20, dyn # perform operation
fnmadd.s f16, f8, f9, f20, rdn # perform operation
fnmadd.s f16, f8, f9, f20, rmm # perform operation
fnmadd.s f16, f8, f9, f20, rne # perform operation
fnmadd.s f16, f8, f9, f20, rtz # perform operation
fnmadd.s f16, f8, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xb1be7778e15ad156 # load x3 with value 0xb1be7778e15ad156
sw x3, 0(x2) # store 0xb1be7778e15ad156 in memory
flw f5, 0(x2) # load 0xb1be7778e15ad156 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fnmadd.s f9, f11, f5, f19, dyn # perform operation
fnmadd.s f9, f11, f5, f19, rdn # perform operation
fnmadd.s f9, f11, f5, f19, rmm # perform operation
fnmadd.s f9, f11, f5, f19, rne # perform operation
fnmadd.s f9, f11, f5, f19, rtz # perform operation
fnmadd.s f9, f11, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x821462f65378ffef # load x3 with value 0x821462f65378ffef
sw x3, 0(x2) # store 0x821462f65378ffef in memory
flw f27, 0(x2) # load 0x821462f65378ffef from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f19, f9, f27, f21, dyn # perform operation
fnmadd.s f19, f9, f27, f21, rdn # perform operation
fnmadd.s f19, f9, f27, f21, rmm # perform operation
fnmadd.s f19, f9, f27, f21, rne # perform operation
fnmadd.s f19, f9, f27, f21, rtz # perform operation
fnmadd.s f19, f9, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f9, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f9, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f9, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f9, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f9, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x94396d7a7b264832 # load x3 with value 0x94396d7a7b264832
sw x3, 0(x2) # store 0x94396d7a7b264832 in memory
flw f20, 0(x2) # load 0x94396d7a7b264832 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fnmadd.s f17, f10, f20, f18, dyn # perform operation
fnmadd.s f17, f10, f20, f18, rdn # perform operation
fnmadd.s f17, f10, f20, f18, rmm # perform operation
fnmadd.s f17, f10, f20, f18, rne # perform operation
fnmadd.s f17, f10, f20, f18, rtz # perform operation
fnmadd.s f17, f10, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f10, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xc0e3b231f66fc75b # load x3 with value 0xc0e3b231f66fc75b
sw x3, 0(x2) # store 0xc0e3b231f66fc75b in memory
flw f24, 0(x2) # load 0xc0e3b231f66fc75b from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f1, f16, f24, f6, dyn # perform operation
fnmadd.s f1, f16, f24, f6, rdn # perform operation
fnmadd.s f1, f16, f24, f6, rmm # perform operation
fnmadd.s f1, f16, f24, f6, rne # perform operation
fnmadd.s f1, f16, f24, f6, rtz # perform operation
fnmadd.s f1, f16, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xabc9373dcd1dbf72 # load x3 with value 0xabc9373dcd1dbf72
sw x3, 0(x2) # store 0xabc9373dcd1dbf72 in memory
flw f29, 0(x2) # load 0xabc9373dcd1dbf72 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f10, f14, f29, f27, dyn # perform operation
fnmadd.s f10, f14, f29, f27, rdn # perform operation
fnmadd.s f10, f14, f29, f27, rmm # perform operation
fnmadd.s f10, f14, f29, f27, rne # perform operation
fnmadd.s f10, f14, f29, f27, rtz # perform operation
fnmadd.s f10, f14, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x292f2807b5454701 # load x3 with value 0x292f2807b5454701
sw x3, 0(x2) # store 0x292f2807b5454701 in memory
flw f12, 0(x2) # load 0x292f2807b5454701 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fnmadd.s f31, f28, f12, f16, dyn # perform operation
fnmadd.s f31, f28, f12, f16, rdn # perform operation
fnmadd.s f31, f28, f12, f16, rmm # perform operation
fnmadd.s f31, f28, f12, f16, rne # perform operation
fnmadd.s f31, f28, f12, f16, rtz # perform operation
fnmadd.s f31, f28, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x3b785dcbc8152c60 # load x3 with value 0x3b785dcbc8152c60
sw x3, 0(x2) # store 0x3b785dcbc8152c60 in memory
flw f17, 0(x2) # load 0x3b785dcbc8152c60 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmadd.s f24, f13, f17, f31, dyn # perform operation
fnmadd.s f24, f13, f17, f31, rdn # perform operation
fnmadd.s f24, f13, f17, f31, rmm # perform operation
fnmadd.s f24, f13, f17, f31, rne # perform operation
fnmadd.s f24, f13, f17, f31, rtz # perform operation
fnmadd.s f24, f13, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f13, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f13, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f13, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f13, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f13, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xf909b1a1e87dfde4 # load x3 with value 0xf909b1a1e87dfde4
sw x3, 0(x2) # store 0xf909b1a1e87dfde4 in memory
flw f13, 0(x2) # load 0xf909b1a1e87dfde4 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmadd.s f6, f30, f13, f23, dyn # perform operation
fnmadd.s f6, f30, f13, f23, rdn # perform operation
fnmadd.s f6, f30, f13, f23, rmm # perform operation
fnmadd.s f6, f30, f13, f23, rne # perform operation
fnmadd.s f6, f30, f13, f23, rtz # perform operation
fnmadd.s f6, f30, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xff00aac1bd9e9f36 # load x3 with value 0xff00aac1bd9e9f36
sw x3, 0(x2) # store 0xff00aac1bd9e9f36 in memory
flw f5, 0(x2) # load 0xff00aac1bd9e9f36 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmadd.s f19, f6, f5, f17, dyn # perform operation
fnmadd.s f19, f6, f5, f17, rdn # perform operation
fnmadd.s f19, f6, f5, f17, rmm # perform operation
fnmadd.s f19, f6, f5, f17, rne # perform operation
fnmadd.s f19, f6, f5, f17, rtz # perform operation
fnmadd.s f19, f6, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f5, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x4887f71ba457138b # load x3 with value 0x4887f71ba457138b
sw x3, 0(x2) # store 0x4887f71ba457138b in memory
flw f25, 0(x2) # load 0x4887f71ba457138b from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmadd.s f12, f5, f25, f23, dyn # perform operation
fnmadd.s f12, f5, f25, f23, rdn # perform operation
fnmadd.s f12, f5, f25, f23, rmm # perform operation
fnmadd.s f12, f5, f25, f23, rne # perform operation
fnmadd.s f12, f5, f25, f23, rtz # perform operation
fnmadd.s f12, f5, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f25, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x10e941758069c774 # load x3 with value 0x10e941758069c774
sw x3, 0(x2) # store 0x10e941758069c774 in memory
flw f14, 0(x2) # load 0x10e941758069c774 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f11, f29, f14, f27, dyn # perform operation
fnmadd.s f11, f29, f14, f27, rdn # perform operation
fnmadd.s f11, f29, f14, f27, rmm # perform operation
fnmadd.s f11, f29, f14, f27, rne # perform operation
fnmadd.s f11, f29, f14, f27, rtz # perform operation
fnmadd.s f11, f29, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x8360357a163e0988 # load x3 with value 0x8360357a163e0988
sw x3, 0(x2) # store 0x8360357a163e0988 in memory
flw f14, 0(x2) # load 0x8360357a163e0988 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f8, f27, f14, f29, dyn # perform operation
fnmadd.s f8, f27, f14, f29, rdn # perform operation
fnmadd.s f8, f27, f14, f29, rmm # perform operation
fnmadd.s f8, f27, f14, f29, rne # perform operation
fnmadd.s f8, f27, f14, f29, rtz # perform operation
fnmadd.s f8, f27, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xecf98e22da3c4ea # load x3 with value 0xecf98e22da3c4ea
sw x3, 0(x2) # store 0xecf98e22da3c4ea in memory
flw f2, 0(x2) # load 0xecf98e22da3c4ea from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmadd.s f12, f15, f2, f22, dyn # perform operation
fnmadd.s f12, f15, f2, f22, rdn # perform operation
fnmadd.s f12, f15, f2, f22, rmm # perform operation
fnmadd.s f12, f15, f2, f22, rne # perform operation
fnmadd.s f12, f15, f2, f22, rtz # perform operation
fnmadd.s f12, f15, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xb8d373c2d39cd37c # load x3 with value 0xb8d373c2d39cd37c
sw x3, 0(x2) # store 0xb8d373c2d39cd37c in memory
flw f1, 0(x2) # load 0xb8d373c2d39cd37c from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmadd.s f17, f13, f1, f2, dyn # perform operation
fnmadd.s f17, f13, f1, f2, rdn # perform operation
fnmadd.s f17, f13, f1, f2, rmm # perform operation
fnmadd.s f17, f13, f1, f2, rne # perform operation
fnmadd.s f17, f13, f1, f2, rtz # perform operation
fnmadd.s f17, f13, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f13, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xb8ef1b45b1da5429 # load x3 with value 0xb8ef1b45b1da5429
sw x3, 0(x2) # store 0xb8ef1b45b1da5429 in memory
flw f29, 0(x2) # load 0xb8ef1b45b1da5429 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmadd.s f9, f3, f29, f28, dyn # perform operation
fnmadd.s f9, f3, f29, f28, rdn # perform operation
fnmadd.s f9, f3, f29, f28, rmm # perform operation
fnmadd.s f9, f3, f29, f28, rne # perform operation
fnmadd.s f9, f3, f29, f28, rtz # perform operation
fnmadd.s f9, f3, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x2995963584b9c518 # load x3 with value 0x2995963584b9c518
sw x3, 0(x2) # store 0x2995963584b9c518 in memory
flw f23, 0(x2) # load 0x2995963584b9c518 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmadd.s f30, f15, f23, f3, dyn # perform operation
fnmadd.s f30, f15, f23, f3, rdn # perform operation
fnmadd.s f30, f15, f23, f3, rmm # perform operation
fnmadd.s f30, f15, f23, f3, rne # perform operation
fnmadd.s f30, f15, f23, f3, rtz # perform operation
fnmadd.s f30, f15, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xc151664324a7d437 # load x3 with value 0xc151664324a7d437
sw x3, 0(x2) # store 0xc151664324a7d437 in memory
flw f24, 0(x2) # load 0xc151664324a7d437 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fnmadd.s f13, f20, f24, f11, dyn # perform operation
fnmadd.s f13, f20, f24, f11, rdn # perform operation
fnmadd.s f13, f20, f24, f11, rmm # perform operation
fnmadd.s f13, f20, f24, f11, rne # perform operation
fnmadd.s f13, f20, f24, f11, rtz # perform operation
fnmadd.s f13, f20, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xd1ea569fe067f8c5 # load x3 with value 0xd1ea569fe067f8c5
sw x3, 0(x2) # store 0xd1ea569fe067f8c5 in memory
flw f17, 0(x2) # load 0xd1ea569fe067f8c5 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmadd.s f2, f29, f17, f30, dyn # perform operation
fnmadd.s f2, f29, f17, f30, rdn # perform operation
fnmadd.s f2, f29, f17, f30, rmm # perform operation
fnmadd.s f2, f29, f17, f30, rne # perform operation
fnmadd.s f2, f29, f17, f30, rtz # perform operation
fnmadd.s f2, f29, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x47b8c3d55cf25f29 # load x3 with value 0x47b8c3d55cf25f29
sw x3, 0(x2) # store 0x47b8c3d55cf25f29 in memory
flw f7, 0(x2) # load 0x47b8c3d55cf25f29 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmadd.s f10, f31, f7, f20, dyn # perform operation
fnmadd.s f10, f31, f7, f20, rdn # perform operation
fnmadd.s f10, f31, f7, f20, rmm # perform operation
fnmadd.s f10, f31, f7, f20, rne # perform operation
fnmadd.s f10, f31, f7, f20, rtz # perform operation
fnmadd.s f10, f31, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f31, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x3640180d149a3b47 # load x3 with value 0x3640180d149a3b47
sw x3, 0(x2) # store 0x3640180d149a3b47 in memory
flw f2, 0(x2) # load 0x3640180d149a3b47 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fnmadd.s f26, f20, f2, f30, dyn # perform operation
fnmadd.s f26, f20, f2, f30, rdn # perform operation
fnmadd.s f26, f20, f2, f30, rmm # perform operation
fnmadd.s f26, f20, f2, f30, rne # perform operation
fnmadd.s f26, f20, f2, f30, rtz # perform operation
fnmadd.s f26, f20, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x6aeb070cea3b9935 # load x3 with value 0x6aeb070cea3b9935
sw x3, 0(x2) # store 0x6aeb070cea3b9935 in memory
flw f16, 0(x2) # load 0x6aeb070cea3b9935 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmadd.s f1, f19, f16, f14, dyn # perform operation
fnmadd.s f1, f19, f16, f14, rdn # perform operation
fnmadd.s f1, f19, f16, f14, rmm # perform operation
fnmadd.s f1, f19, f16, f14, rne # perform operation
fnmadd.s f1, f19, f16, f14, rtz # perform operation
fnmadd.s f1, f19, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xc1a53a9d2a42ceaa # load x3 with value 0xc1a53a9d2a42ceaa
sw x3, 0(x2) # store 0xc1a53a9d2a42ceaa in memory
flw f15, 0(x2) # load 0xc1a53a9d2a42ceaa from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmadd.s f24, f29, f15, f31, dyn # perform operation
fnmadd.s f24, f29, f15, f31, rdn # perform operation
fnmadd.s f24, f29, f15, f31, rmm # perform operation
fnmadd.s f24, f29, f15, f31, rne # perform operation
fnmadd.s f24, f29, f15, f31, rtz # perform operation
fnmadd.s f24, f29, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f15, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xe2a80e9ff48e8e79 # load x3 with value 0xe2a80e9ff48e8e79
sw x3, 0(x2) # store 0xe2a80e9ff48e8e79 in memory
flw f31, 0(x2) # load 0xe2a80e9ff48e8e79 from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmadd.s f14, f1, f31, f9, dyn # perform operation
fnmadd.s f14, f1, f31, f9, rdn # perform operation
fnmadd.s f14, f1, f31, f9, rmm # perform operation
fnmadd.s f14, f1, f31, f9, rne # perform operation
fnmadd.s f14, f1, f31, f9, rtz # perform operation
fnmadd.s f14, f1, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0xd298df3ae809552f # load x3 with value 0xd298df3ae809552f
sw x3, 0(x2) # store 0xd298df3ae809552f in memory
flw f8, 0(x2) # load 0xd298df3ae809552f from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmadd.s f27, f26, f8, f1, dyn # perform operation
fnmadd.s f27, f26, f8, f1, rdn # perform operation
fnmadd.s f27, f26, f8, f1, rmm # perform operation
fnmadd.s f27, f26, f8, f1, rne # perform operation
fnmadd.s f27, f26, f8, f1, rtz # perform operation
fnmadd.s f27, f26, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x3a5b4d8933110bf4 # load x3 with value 0x3a5b4d8933110bf4
sw x3, 0(x2) # store 0x3a5b4d8933110bf4 in memory
flw f28, 0(x2) # load 0x3a5b4d8933110bf4 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.s f19, f9, f28, f5, dyn # perform operation
fnmadd.s f19, f9, f28, f5, rdn # perform operation
fnmadd.s f19, f9, f28, f5, rmm # perform operation
fnmadd.s f19, f9, f28, f5, rne # perform operation
fnmadd.s f19, f9, f28, f5, rtz # perform operation
fnmadd.s f19, f9, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f9, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f9, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f9, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f9, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f9, f28, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xdc5987c3aed80e40 # load x3 with value 0xdc5987c3aed80e40
sw x3, 0(x2) # store 0xdc5987c3aed80e40 in memory
flw f12, 0(x2) # load 0xdc5987c3aed80e40 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmadd.s f24, f11, f12, f25, dyn # perform operation
fnmadd.s f24, f11, f12, f25, rdn # perform operation
fnmadd.s f24, f11, f12, f25, rmm # perform operation
fnmadd.s f24, f11, f12, f25, rne # perform operation
fnmadd.s f24, f11, f12, f25, rtz # perform operation
fnmadd.s f24, f11, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f11, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f11, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f11, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f11, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f11, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x144df14763969679 # load x3 with value 0x144df14763969679
sw x3, 0(x2) # store 0x144df14763969679 in memory
flw f10, 0(x2) # load 0x144df14763969679 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f20, f12, f10, f13, dyn # perform operation
fnmadd.s f20, f12, f10, f13, rdn # perform operation
fnmadd.s f20, f12, f10, f13, rmm # perform operation
fnmadd.s f20, f12, f10, f13, rne # perform operation
fnmadd.s f20, f12, f10, f13, rtz # perform operation
fnmadd.s f20, f12, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xe659fc38976e0927 # load x3 with value 0xe659fc38976e0927
sw x3, 0(x2) # store 0xe659fc38976e0927 in memory
flw f17, 0(x2) # load 0xe659fc38976e0927 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmadd.s f15, f25, f17, f19, dyn # perform operation
fnmadd.s f15, f25, f17, f19, rdn # perform operation
fnmadd.s f15, f25, f17, f19, rmm # perform operation
fnmadd.s f15, f25, f17, f19, rne # perform operation
fnmadd.s f15, f25, f17, f19, rtz # perform operation
fnmadd.s f15, f25, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f25, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x95852d781c7e1c88 # load x3 with value 0x95852d781c7e1c88
sw x3, 0(x2) # store 0x95852d781c7e1c88 in memory
flw f5, 0(x2) # load 0x95852d781c7e1c88 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmadd.s f18, f16, f5, f13, dyn # perform operation
fnmadd.s f18, f16, f5, f13, rdn # perform operation
fnmadd.s f18, f16, f5, f13, rmm # perform operation
fnmadd.s f18, f16, f5, f13, rne # perform operation
fnmadd.s f18, f16, f5, f13, rtz # perform operation
fnmadd.s f18, f16, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x65383a4b30b10560 # load x3 with value 0x65383a4b30b10560
sw x3, 0(x2) # store 0x65383a4b30b10560 in memory
flw f9, 0(x2) # load 0x65383a4b30b10560 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmadd.s f10, f31, f9, f28, dyn # perform operation
fnmadd.s f10, f31, f9, f28, rdn # perform operation
fnmadd.s f10, f31, f9, f28, rmm # perform operation
fnmadd.s f10, f31, f9, f28, rne # perform operation
fnmadd.s f10, f31, f9, f28, rtz # perform operation
fnmadd.s f10, f31, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f31, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f31, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xd49013845876ffcf # load x3 with value 0xd49013845876ffcf
sw x3, 0(x2) # store 0xd49013845876ffcf in memory
flw f1, 0(x2) # load 0xd49013845876ffcf from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fnmadd.s f9, f16, f1, f2, dyn # perform operation
fnmadd.s f9, f16, f1, f2, rdn # perform operation
fnmadd.s f9, f16, f1, f2, rmm # perform operation
fnmadd.s f9, f16, f1, f2, rne # perform operation
fnmadd.s f9, f16, f1, f2, rtz # perform operation
fnmadd.s f9, f16, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x30106e2391a1d16c # load x3 with value 0x30106e2391a1d16c
sw x3, 0(x2) # store 0x30106e2391a1d16c in memory
flw f17, 0(x2) # load 0x30106e2391a1d16c from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fnmadd.s f24, f9, f17, f16, dyn # perform operation
fnmadd.s f24, f9, f17, f16, rdn # perform operation
fnmadd.s f24, f9, f17, f16, rmm # perform operation
fnmadd.s f24, f9, f17, f16, rne # perform operation
fnmadd.s f24, f9, f17, f16, rtz # perform operation
fnmadd.s f24, f9, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x4ecf1657ea33fe29 # load x3 with value 0x4ecf1657ea33fe29
sw x3, 0(x2) # store 0x4ecf1657ea33fe29 in memory
flw f15, 0(x2) # load 0x4ecf1657ea33fe29 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmadd.s f7, f27, f15, f25, dyn # perform operation
fnmadd.s f7, f27, f15, f25, rdn # perform operation
fnmadd.s f7, f27, f15, f25, rmm # perform operation
fnmadd.s f7, f27, f15, f25, rne # perform operation
fnmadd.s f7, f27, f15, f25, rtz # perform operation
fnmadd.s f7, f27, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xfc35b04e88ffb72d # load x3 with value 0xfc35b04e88ffb72d
sw x3, 0(x2) # store 0xfc35b04e88ffb72d in memory
flw f21, 0(x2) # load 0xfc35b04e88ffb72d from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fnmadd.s f2, f13, f21, f10, dyn # perform operation
fnmadd.s f2, f13, f21, f10, rdn # perform operation
fnmadd.s f2, f13, f21, f10, rmm # perform operation
fnmadd.s f2, f13, f21, f10, rne # perform operation
fnmadd.s f2, f13, f21, f10, rtz # perform operation
fnmadd.s f2, f13, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x45791901912996fe # load x3 with value 0x45791901912996fe
sw x3, 0(x2) # store 0x45791901912996fe in memory
flw f23, 0(x2) # load 0x45791901912996fe from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f9, f2, f23, f28, dyn # perform operation
fnmadd.s f9, f2, f23, f28, rdn # perform operation
fnmadd.s f9, f2, f23, f28, rmm # perform operation
fnmadd.s f9, f2, f23, f28, rne # perform operation
fnmadd.s f9, f2, f23, f28, rtz # perform operation
fnmadd.s f9, f2, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x910512f8f69833ac # load x3 with value 0x910512f8f69833ac
sw x3, 0(x2) # store 0x910512f8f69833ac in memory
flw f18, 0(x2) # load 0x910512f8f69833ac from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fnmadd.s f28, f16, f18, f6, dyn # perform operation
fnmadd.s f28, f16, f18, f6, rdn # perform operation
fnmadd.s f28, f16, f18, f6, rmm # perform operation
fnmadd.s f28, f16, f18, f6, rne # perform operation
fnmadd.s f28, f16, f18, f6, rtz # perform operation
fnmadd.s f28, f16, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xb13d1e0f37b96230 # load x3 with value 0xb13d1e0f37b96230
sw x3, 0(x2) # store 0xb13d1e0f37b96230 in memory
flw f29, 0(x2) # load 0xb13d1e0f37b96230 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.s f30, f27, f29, f5, dyn # perform operation
fnmadd.s f30, f27, f29, f5, rdn # perform operation
fnmadd.s f30, f27, f29, f5, rmm # perform operation
fnmadd.s f30, f27, f29, f5, rne # perform operation
fnmadd.s f30, f27, f29, f5, rtz # perform operation
fnmadd.s f30, f27, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f27, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x4a1aadc4fc2c0acf # load x3 with value 0x4a1aadc4fc2c0acf
sw x3, 0(x2) # store 0x4a1aadc4fc2c0acf in memory
flw f13, 0(x2) # load 0x4a1aadc4fc2c0acf from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmadd.s f18, f8, f13, f12, dyn # perform operation
fnmadd.s f18, f8, f13, f12, rdn # perform operation
fnmadd.s f18, f8, f13, f12, rmm # perform operation
fnmadd.s f18, f8, f13, f12, rne # perform operation
fnmadd.s f18, f8, f13, f12, rtz # perform operation
fnmadd.s f18, f8, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f8, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xd32a6d4a401b46a3 # load x3 with value 0xd32a6d4a401b46a3
sw x3, 0(x2) # store 0xd32a6d4a401b46a3 in memory
flw f22, 0(x2) # load 0xd32a6d4a401b46a3 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f19, f23, f22, f30, dyn # perform operation
fnmadd.s f19, f23, f22, f30, rdn # perform operation
fnmadd.s f19, f23, f22, f30, rmm # perform operation
fnmadd.s f19, f23, f22, f30, rne # perform operation
fnmadd.s f19, f23, f22, f30, rtz # perform operation
fnmadd.s f19, f23, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f23, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f23, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f23, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f23, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f23, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x76949fd90a0ad6c6 # load x3 with value 0x76949fd90a0ad6c6
sw x3, 0(x2) # store 0x76949fd90a0ad6c6 in memory
flw f28, 0(x2) # load 0x76949fd90a0ad6c6 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmadd.s f21, f2, f28, f23, dyn # perform operation
fnmadd.s f21, f2, f28, f23, rdn # perform operation
fnmadd.s f21, f2, f28, f23, rmm # perform operation
fnmadd.s f21, f2, f28, f23, rne # perform operation
fnmadd.s f21, f2, f28, f23, rtz # perform operation
fnmadd.s f21, f2, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f28, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0xd098abaf2506844d # load x3 with value 0xd098abaf2506844d
sw x3, 0(x2) # store 0xd098abaf2506844d in memory
flw f7, 0(x2) # load 0xd098abaf2506844d from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f19, f5, f7, f27, dyn # perform operation
fnmadd.s f19, f5, f7, f27, rdn # perform operation
fnmadd.s f19, f5, f7, f27, rmm # perform operation
fnmadd.s f19, f5, f7, f27, rne # perform operation
fnmadd.s f19, f5, f7, f27, rtz # perform operation
fnmadd.s f19, f5, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x3c0d8dabfaacc604 # load x3 with value 0x3c0d8dabfaacc604
sw x3, 0(x2) # store 0x3c0d8dabfaacc604 in memory
flw f16, 0(x2) # load 0x3c0d8dabfaacc604 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmadd.s f27, f12, f16, f28, dyn # perform operation
fnmadd.s f27, f12, f16, f28, rdn # perform operation
fnmadd.s f27, f12, f16, f28, rmm # perform operation
fnmadd.s f27, f12, f16, f28, rne # perform operation
fnmadd.s f27, f12, f16, f28, rtz # perform operation
fnmadd.s f27, f12, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xf48dbfd37e23a97a # load x3 with value 0xf48dbfd37e23a97a
sw x3, 0(x2) # store 0xf48dbfd37e23a97a in memory
flw f3, 0(x2) # load 0xf48dbfd37e23a97a from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmadd.s f22, f20, f3, f21, dyn # perform operation
fnmadd.s f22, f20, f3, f21, rdn # perform operation
fnmadd.s f22, f20, f3, f21, rmm # perform operation
fnmadd.s f22, f20, f3, f21, rne # perform operation
fnmadd.s f22, f20, f3, f21, rtz # perform operation
fnmadd.s f22, f20, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xf24f13163a361341 # load x3 with value 0xf24f13163a361341
sw x3, 0(x2) # store 0xf24f13163a361341 in memory
flw f3, 0(x2) # load 0xf24f13163a361341 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fnmadd.s f6, f30, f3, f27, dyn # perform operation
fnmadd.s f6, f30, f3, f27, rdn # perform operation
fnmadd.s f6, f30, f3, f27, rmm # perform operation
fnmadd.s f6, f30, f3, f27, rne # perform operation
fnmadd.s f6, f30, f3, f27, rtz # perform operation
fnmadd.s f6, f30, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xa7b0bca44795756a # load x3 with value 0xa7b0bca44795756a
sw x3, 0(x2) # store 0xa7b0bca44795756a in memory
flw f12, 0(x2) # load 0xa7b0bca44795756a from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f3, f7, f12, f13, dyn # perform operation
fnmadd.s f3, f7, f12, f13, rdn # perform operation
fnmadd.s f3, f7, f12, f13, rmm # perform operation
fnmadd.s f3, f7, f12, f13, rne # perform operation
fnmadd.s f3, f7, f12, f13, rtz # perform operation
fnmadd.s f3, f7, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f7, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x45de7b3e70382942 # load x3 with value 0x45de7b3e70382942
sw x3, 0(x2) # store 0x45de7b3e70382942 in memory
flw f21, 0(x2) # load 0x45de7b3e70382942 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f23, f2, f21, f6, dyn # perform operation
fnmadd.s f23, f2, f21, f6, rdn # perform operation
fnmadd.s f23, f2, f21, f6, rmm # perform operation
fnmadd.s f23, f2, f21, f6, rne # perform operation
fnmadd.s f23, f2, f21, f6, rtz # perform operation
fnmadd.s f23, f2, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xdd88684bde14240f # load x3 with value 0xdd88684bde14240f
sw x3, 0(x2) # store 0xdd88684bde14240f in memory
flw f17, 0(x2) # load 0xdd88684bde14240f from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmadd.s f21, f13, f17, f9, dyn # perform operation
fnmadd.s f21, f13, f17, f9, rdn # perform operation
fnmadd.s f21, f13, f17, f9, rmm # perform operation
fnmadd.s f21, f13, f17, f9, rne # perform operation
fnmadd.s f21, f13, f17, f9, rtz # perform operation
fnmadd.s f21, f13, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f13, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x37922954688b84ff # load x3 with value 0x37922954688b84ff
sw x3, 0(x2) # store 0x37922954688b84ff in memory
flw f15, 0(x2) # load 0x37922954688b84ff from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmadd.s f21, f31, f15, f8, dyn # perform operation
fnmadd.s f21, f31, f15, f8, rdn # perform operation
fnmadd.s f21, f31, f15, f8, rmm # perform operation
fnmadd.s f21, f31, f15, f8, rne # perform operation
fnmadd.s f21, f31, f15, f8, rtz # perform operation
fnmadd.s f21, f31, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x5b0eeca918bb9b1c # load x3 with value 0x5b0eeca918bb9b1c
sw x3, 0(x2) # store 0x5b0eeca918bb9b1c in memory
flw f15, 0(x2) # load 0x5b0eeca918bb9b1c from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f22, f18, f15, f7, dyn # perform operation
fnmadd.s f22, f18, f15, f7, rdn # perform operation
fnmadd.s f22, f18, f15, f7, rmm # perform operation
fnmadd.s f22, f18, f15, f7, rne # perform operation
fnmadd.s f22, f18, f15, f7, rtz # perform operation
fnmadd.s f22, f18, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0xf29e60e5e962e7d # load x3 with value 0xf29e60e5e962e7d
sw x3, 0(x2) # store 0xf29e60e5e962e7d in memory
flw f20, 0(x2) # load 0xf29e60e5e962e7d from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmadd.s f6, f31, f20, f5, dyn # perform operation
fnmadd.s f6, f31, f20, f5, rdn # perform operation
fnmadd.s f6, f31, f20, f5, rmm # perform operation
fnmadd.s f6, f31, f20, f5, rne # perform operation
fnmadd.s f6, f31, f20, f5, rtz # perform operation
fnmadd.s f6, f31, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f31, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x1c97887c46be122d # load x3 with value 0x1c97887c46be122d
sw x3, 0(x2) # store 0x1c97887c46be122d in memory
flw f15, 0(x2) # load 0x1c97887c46be122d from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmadd.s f7, f30, f15, f29, dyn # perform operation
fnmadd.s f7, f30, f15, f29, rdn # perform operation
fnmadd.s f7, f30, f15, f29, rmm # perform operation
fnmadd.s f7, f30, f15, f29, rne # perform operation
fnmadd.s f7, f30, f15, f29, rtz # perform operation
fnmadd.s f7, f30, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xe7ceb74e90925f28 # load x3 with value 0xe7ceb74e90925f28
sw x3, 0(x2) # store 0xe7ceb74e90925f28 in memory
flw f17, 0(x2) # load 0xe7ceb74e90925f28 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmadd.s f16, f13, f17, f25, dyn # perform operation
fnmadd.s f16, f13, f17, f25, rdn # perform operation
fnmadd.s f16, f13, f17, f25, rmm # perform operation
fnmadd.s f16, f13, f17, f25, rne # perform operation
fnmadd.s f16, f13, f17, f25, rtz # perform operation
fnmadd.s f16, f13, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x9fadb2881091089a # load x3 with value 0x9fadb2881091089a
sw x3, 0(x2) # store 0x9fadb2881091089a in memory
flw f14, 0(x2) # load 0x9fadb2881091089a from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmadd.s f20, f29, f14, f16, dyn # perform operation
fnmadd.s f20, f29, f14, f16, rdn # perform operation
fnmadd.s f20, f29, f14, f16, rmm # perform operation
fnmadd.s f20, f29, f14, f16, rne # perform operation
fnmadd.s f20, f29, f14, f16, rtz # perform operation
fnmadd.s f20, f29, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x6e76011504978095 # load x3 with value 0x6e76011504978095
sw x3, 0(x2) # store 0x6e76011504978095 in memory
flw f13, 0(x2) # load 0x6e76011504978095 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmadd.s f17, f26, f13, f25, dyn # perform operation
fnmadd.s f17, f26, f13, f25, rdn # perform operation
fnmadd.s f17, f26, f13, f25, rmm # perform operation
fnmadd.s f17, f26, f13, f25, rne # perform operation
fnmadd.s f17, f26, f13, f25, rtz # perform operation
fnmadd.s f17, f26, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xff1654bc9cf869b7 # load x3 with value 0xff1654bc9cf869b7
sw x3, 0(x2) # store 0xff1654bc9cf869b7 in memory
flw f15, 0(x2) # load 0xff1654bc9cf869b7 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmadd.s f30, f22, f15, f19, dyn # perform operation
fnmadd.s f30, f22, f15, f19, rdn # perform operation
fnmadd.s f30, f22, f15, f19, rmm # perform operation
fnmadd.s f30, f22, f15, f19, rne # perform operation
fnmadd.s f30, f22, f15, f19, rtz # perform operation
fnmadd.s f30, f22, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x20890b3d77e9caef # load x3 with value 0x20890b3d77e9caef
sw x3, 0(x2) # store 0x20890b3d77e9caef in memory
flw f16, 0(x2) # load 0x20890b3d77e9caef from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmadd.s f18, f26, f16, f13, dyn # perform operation
fnmadd.s f18, f26, f16, f13, rdn # perform operation
fnmadd.s f18, f26, f16, f13, rmm # perform operation
fnmadd.s f18, f26, f16, f13, rne # perform operation
fnmadd.s f18, f26, f16, f13, rtz # perform operation
fnmadd.s f18, f26, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x2e1e791099c82712 # load x3 with value 0x2e1e791099c82712
sw x3, 0(x2) # store 0x2e1e791099c82712 in memory
flw f10, 0(x2) # load 0x2e1e791099c82712 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f1, f19, f10, f27, dyn # perform operation
fnmadd.s f1, f19, f10, f27, rdn # perform operation
fnmadd.s f1, f19, f10, f27, rmm # perform operation
fnmadd.s f1, f19, f10, f27, rne # perform operation
fnmadd.s f1, f19, f10, f27, rtz # perform operation
fnmadd.s f1, f19, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x4eae8d12fbd5ee5 # load x3 with value 0x4eae8d12fbd5ee5
sw x3, 0(x2) # store 0x4eae8d12fbd5ee5 in memory
flw f20, 0(x2) # load 0x4eae8d12fbd5ee5 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fnmadd.s f24, f21, f20, f13, dyn # perform operation
fnmadd.s f24, f21, f20, f13, rdn # perform operation
fnmadd.s f24, f21, f20, f13, rmm # perform operation
fnmadd.s f24, f21, f20, f13, rne # perform operation
fnmadd.s f24, f21, f20, f13, rtz # perform operation
fnmadd.s f24, f21, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x7c14ffe9c6474f35 # load x3 with value 0x7c14ffe9c6474f35
sw x3, 0(x2) # store 0x7c14ffe9c6474f35 in memory
flw f1, 0(x2) # load 0x7c14ffe9c6474f35 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmadd.s f18, f30, f1, f31, dyn # perform operation
fnmadd.s f18, f30, f1, f31, rdn # perform operation
fnmadd.s f18, f30, f1, f31, rmm # perform operation
fnmadd.s f18, f30, f1, f31, rne # perform operation
fnmadd.s f18, f30, f1, f31, rtz # perform operation
fnmadd.s f18, f30, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f30, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f30, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f30, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f30, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f30, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xf21374d3d281b556 # load x3 with value 0xf21374d3d281b556
sw x3, 0(x2) # store 0xf21374d3d281b556 in memory
flw f2, 0(x2) # load 0xf21374d3d281b556 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f25, f7, f2, f26, dyn # perform operation
fnmadd.s f25, f7, f2, f26, rdn # perform operation
fnmadd.s f25, f7, f2, f26, rmm # perform operation
fnmadd.s f25, f7, f2, f26, rne # perform operation
fnmadd.s f25, f7, f2, f26, rtz # perform operation
fnmadd.s f25, f7, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f7, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x7e80bc3adf79e58a # load x3 with value 0x7e80bc3adf79e58a
sw x3, 0(x2) # store 0x7e80bc3adf79e58a in memory
flw f5, 0(x2) # load 0x7e80bc3adf79e58a from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmadd.s f12, f6, f5, f21, dyn # perform operation
fnmadd.s f12, f6, f5, f21, rdn # perform operation
fnmadd.s f12, f6, f5, f21, rmm # perform operation
fnmadd.s f12, f6, f5, f21, rne # perform operation
fnmadd.s f12, f6, f5, f21, rtz # perform operation
fnmadd.s f12, f6, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0xd6e5927adac05cf0 # load x3 with value 0xd6e5927adac05cf0
sw x3, 0(x2) # store 0xd6e5927adac05cf0 in memory
flw f10, 0(x2) # load 0xd6e5927adac05cf0 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fnmadd.s f29, f31, f10, f2, dyn # perform operation
fnmadd.s f29, f31, f10, f2, rdn # perform operation
fnmadd.s f29, f31, f10, f2, rmm # perform operation
fnmadd.s f29, f31, f10, f2, rne # perform operation
fnmadd.s f29, f31, f10, f2, rtz # perform operation
fnmadd.s f29, f31, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x8b1b3b5ffd5333c5 # load x3 with value 0x8b1b3b5ffd5333c5
sw x3, 0(x2) # store 0x8b1b3b5ffd5333c5 in memory
flw f30, 0(x2) # load 0x8b1b3b5ffd5333c5 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmadd.s f17, f19, f30, f25, dyn # perform operation
fnmadd.s f17, f19, f30, f25, rdn # perform operation
fnmadd.s f17, f19, f30, f25, rmm # perform operation
fnmadd.s f17, f19, f30, f25, rne # perform operation
fnmadd.s f17, f19, f30, f25, rtz # perform operation
fnmadd.s f17, f19, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x6631ab19fd16fabf # load x3 with value 0x6631ab19fd16fabf
sw x3, 0(x2) # store 0x6631ab19fd16fabf in memory
flw f27, 0(x2) # load 0x6631ab19fd16fabf from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmadd.s f19, f30, f27, f23, dyn # perform operation
fnmadd.s f19, f30, f27, f23, rdn # perform operation
fnmadd.s f19, f30, f27, f23, rmm # perform operation
fnmadd.s f19, f30, f27, f23, rne # perform operation
fnmadd.s f19, f30, f27, f23, rtz # perform operation
fnmadd.s f19, f30, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x479dc46959b49e3a # load x3 with value 0x479dc46959b49e3a
sw x3, 0(x2) # store 0x479dc46959b49e3a in memory
flw f15, 0(x2) # load 0x479dc46959b49e3a from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.s f28, f27, f15, f22, dyn # perform operation
fnmadd.s f28, f27, f15, f22, rdn # perform operation
fnmadd.s f28, f27, f15, f22, rmm # perform operation
fnmadd.s f28, f27, f15, f22, rne # perform operation
fnmadd.s f28, f27, f15, f22, rtz # perform operation
fnmadd.s f28, f27, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xcbd49284d05b3f85 # load x3 with value 0xcbd49284d05b3f85
sw x3, 0(x2) # store 0xcbd49284d05b3f85 in memory
flw f23, 0(x2) # load 0xcbd49284d05b3f85 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmadd.s f1, f7, f23, f27, dyn # perform operation
fnmadd.s f1, f7, f23, f27, rdn # perform operation
fnmadd.s f1, f7, f23, f27, rmm # perform operation
fnmadd.s f1, f7, f23, f27, rne # perform operation
fnmadd.s f1, f7, f23, f27, rtz # perform operation
fnmadd.s f1, f7, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x7440d383290eac1 # load x3 with value 0x7440d383290eac1
sw x3, 0(x2) # store 0x7440d383290eac1 in memory
flw f26, 0(x2) # load 0x7440d383290eac1 from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmadd.s f18, f13, f26, f3, dyn # perform operation
fnmadd.s f18, f13, f26, f3, rdn # perform operation
fnmadd.s f18, f13, f26, f3, rmm # perform operation
fnmadd.s f18, f13, f26, f3, rne # perform operation
fnmadd.s f18, f13, f26, f3, rtz # perform operation
fnmadd.s f18, f13, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x2be32df308655a8d # load x3 with value 0x2be32df308655a8d
sw x3, 0(x2) # store 0x2be32df308655a8d in memory
flw f11, 0(x2) # load 0x2be32df308655a8d from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f9, f3, f11, f8, dyn # perform operation
fnmadd.s f9, f3, f11, f8, rdn # perform operation
fnmadd.s f9, f3, f11, f8, rmm # perform operation
fnmadd.s f9, f3, f11, f8, rne # perform operation
fnmadd.s f9, f3, f11, f8, rtz # perform operation
fnmadd.s f9, f3, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x1a6fc53485c96c06 # load x3 with value 0x1a6fc53485c96c06
sw x3, 0(x2) # store 0x1a6fc53485c96c06 in memory
flw f2, 0(x2) # load 0x1a6fc53485c96c06 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmadd.s f18, f12, f2, f22, dyn # perform operation
fnmadd.s f18, f12, f2, f22, rdn # perform operation
fnmadd.s f18, f12, f2, f22, rmm # perform operation
fnmadd.s f18, f12, f2, f22, rne # perform operation
fnmadd.s f18, f12, f2, f22, rtz # perform operation
fnmadd.s f18, f12, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x627fe6c4b3259459 # load x3 with value 0x627fe6c4b3259459
sw x3, 0(x2) # store 0x627fe6c4b3259459 in memory
flw f3, 0(x2) # load 0x627fe6c4b3259459 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmadd.s f9, f12, f3, f11, dyn # perform operation
fnmadd.s f9, f12, f3, f11, rdn # perform operation
fnmadd.s f9, f12, f3, f11, rmm # perform operation
fnmadd.s f9, f12, f3, f11, rne # perform operation
fnmadd.s f9, f12, f3, f11, rtz # perform operation
fnmadd.s f9, f12, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xf8907d0d68c61a9b # load x3 with value 0xf8907d0d68c61a9b
sw x3, 0(x2) # store 0xf8907d0d68c61a9b in memory
flw f27, 0(x2) # load 0xf8907d0d68c61a9b from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f17, f5, f27, f2, dyn # perform operation
fnmadd.s f17, f5, f27, f2, rdn # perform operation
fnmadd.s f17, f5, f27, f2, rmm # perform operation
fnmadd.s f17, f5, f27, f2, rne # perform operation
fnmadd.s f17, f5, f27, f2, rtz # perform operation
fnmadd.s f17, f5, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f5, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f5, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x4d6454f73ff1ef58 # load x3 with value 0x4d6454f73ff1ef58
sw x3, 0(x2) # store 0x4d6454f73ff1ef58 in memory
flw f17, 0(x2) # load 0x4d6454f73ff1ef58 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmadd.s f2, f20, f17, f16, dyn # perform operation
fnmadd.s f2, f20, f17, f16, rdn # perform operation
fnmadd.s f2, f20, f17, f16, rmm # perform operation
fnmadd.s f2, f20, f17, f16, rne # perform operation
fnmadd.s f2, f20, f17, f16, rtz # perform operation
fnmadd.s f2, f20, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xe57ff940258bf719 # load x3 with value 0xe57ff940258bf719
sw x3, 0(x2) # store 0xe57ff940258bf719 in memory
flw f9, 0(x2) # load 0xe57ff940258bf719 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmadd.s f8, f13, f9, f18, dyn # perform operation
fnmadd.s f8, f13, f9, f18, rdn # perform operation
fnmadd.s f8, f13, f9, f18, rmm # perform operation
fnmadd.s f8, f13, f9, f18, rne # perform operation
fnmadd.s f8, f13, f9, f18, rtz # perform operation
fnmadd.s f8, f13, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x3e20c20680225996 # load x3 with value 0x3e20c20680225996
sw x3, 0(x2) # store 0x3e20c20680225996 in memory
flw f31, 0(x2) # load 0x3e20c20680225996 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmadd.s f25, f17, f31, f14, dyn # perform operation
fnmadd.s f25, f17, f31, f14, rdn # perform operation
fnmadd.s f25, f17, f31, f14, rmm # perform operation
fnmadd.s f25, f17, f31, f14, rne # perform operation
fnmadd.s f25, f17, f31, f14, rtz # perform operation
fnmadd.s f25, f17, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x791db32592cff3ca # load x3 with value 0x791db32592cff3ca
sw x3, 0(x2) # store 0x791db32592cff3ca in memory
flw f25, 0(x2) # load 0x791db32592cff3ca from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmadd.s f13, f11, f25, f21, dyn # perform operation
fnmadd.s f13, f11, f25, f21, rdn # perform operation
fnmadd.s f13, f11, f25, f21, rmm # perform operation
fnmadd.s f13, f11, f25, f21, rne # perform operation
fnmadd.s f13, f11, f25, f21, rtz # perform operation
fnmadd.s f13, f11, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x939e71c62bdce27 # load x3 with value 0x939e71c62bdce27
sw x3, 0(x2) # store 0x939e71c62bdce27 in memory
flw f31, 0(x2) # load 0x939e71c62bdce27 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmadd.s f16, f19, f31, f26, dyn # perform operation
fnmadd.s f16, f19, f31, f26, rdn # perform operation
fnmadd.s f16, f19, f31, f26, rmm # perform operation
fnmadd.s f16, f19, f31, f26, rne # perform operation
fnmadd.s f16, f19, f31, f26, rtz # perform operation
fnmadd.s f16, f19, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x851dd797dd49f284 # load x3 with value 0x851dd797dd49f284
sw x3, 0(x2) # store 0x851dd797dd49f284 in memory
flw f21, 0(x2) # load 0x851dd797dd49f284 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f17, f9, f21, f7, dyn # perform operation
fnmadd.s f17, f9, f21, f7, rdn # perform operation
fnmadd.s f17, f9, f21, f7, rmm # perform operation
fnmadd.s f17, f9, f21, f7, rne # perform operation
fnmadd.s f17, f9, f21, f7, rtz # perform operation
fnmadd.s f17, f9, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xfb06a8f5bcbb14e9 # load x3 with value 0xfb06a8f5bcbb14e9
sw x3, 0(x2) # store 0xfb06a8f5bcbb14e9 in memory
flw f14, 0(x2) # load 0xfb06a8f5bcbb14e9 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f6, f17, f14, f9, dyn # perform operation
fnmadd.s f6, f17, f14, f9, rdn # perform operation
fnmadd.s f6, f17, f14, f9, rmm # perform operation
fnmadd.s f6, f17, f14, f9, rne # perform operation
fnmadd.s f6, f17, f14, f9, rtz # perform operation
fnmadd.s f6, f17, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x3dc68a914efbb2b # load x3 with value 0x3dc68a914efbb2b
sw x3, 0(x2) # store 0x3dc68a914efbb2b in memory
flw f14, 0(x2) # load 0x3dc68a914efbb2b from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f20, f27, f14, f24, dyn # perform operation
fnmadd.s f20, f27, f14, f24, rdn # perform operation
fnmadd.s f20, f27, f14, f24, rmm # perform operation
fnmadd.s f20, f27, f14, f24, rne # perform operation
fnmadd.s f20, f27, f14, f24, rtz # perform operation
fnmadd.s f20, f27, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x6cef7c5fa514d528 # load x3 with value 0x6cef7c5fa514d528
sw x3, 0(x2) # store 0x6cef7c5fa514d528 in memory
flw f22, 0(x2) # load 0x6cef7c5fa514d528 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fnmadd.s f31, f7, f22, f24, dyn # perform operation
fnmadd.s f31, f7, f22, f24, rdn # perform operation
fnmadd.s f31, f7, f22, f24, rmm # perform operation
fnmadd.s f31, f7, f22, f24, rne # perform operation
fnmadd.s f31, f7, f22, f24, rtz # perform operation
fnmadd.s f31, f7, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xa702f77d92cf79d # load x3 with value 0xa702f77d92cf79d
sw x3, 0(x2) # store 0xa702f77d92cf79d in memory
flw f28, 0(x2) # load 0xa702f77d92cf79d from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.s f26, f31, f28, f9, dyn # perform operation
fnmadd.s f26, f31, f28, f9, rdn # perform operation
fnmadd.s f26, f31, f28, f9, rmm # perform operation
fnmadd.s f26, f31, f28, f9, rne # perform operation
fnmadd.s f26, f31, f28, f9, rtz # perform operation
fnmadd.s f26, f31, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xfca3593bc1ff3d55 # load x3 with value 0xfca3593bc1ff3d55
sw x3, 0(x2) # store 0xfca3593bc1ff3d55 in memory
flw f5, 0(x2) # load 0xfca3593bc1ff3d55 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f10, f7, f5, f11, dyn # perform operation
fnmadd.s f10, f7, f5, f11, rdn # perform operation
fnmadd.s f10, f7, f5, f11, rmm # perform operation
fnmadd.s f10, f7, f5, f11, rne # perform operation
fnmadd.s f10, f7, f5, f11, rtz # perform operation
fnmadd.s f10, f7, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x56b150d0a1729fcc # load x3 with value 0x56b150d0a1729fcc
sw x3, 0(x2) # store 0x56b150d0a1729fcc in memory
flw f12, 0(x2) # load 0x56b150d0a1729fcc from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmadd.s f10, f8, f12, f15, dyn # perform operation
fnmadd.s f10, f8, f12, f15, rdn # perform operation
fnmadd.s f10, f8, f12, f15, rmm # perform operation
fnmadd.s f10, f8, f12, f15, rne # perform operation
fnmadd.s f10, f8, f12, f15, rtz # perform operation
fnmadd.s f10, f8, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f8, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xdb1a25a23264c91d # load x3 with value 0xdb1a25a23264c91d
sw x3, 0(x2) # store 0xdb1a25a23264c91d in memory
flw f18, 0(x2) # load 0xdb1a25a23264c91d from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f21, f26, f18, f17, dyn # perform operation
fnmadd.s f21, f26, f18, f17, rdn # perform operation
fnmadd.s f21, f26, f18, f17, rmm # perform operation
fnmadd.s f21, f26, f18, f17, rne # perform operation
fnmadd.s f21, f26, f18, f17, rtz # perform operation
fnmadd.s f21, f26, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f26, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x86abebd1653bc137 # load x3 with value 0x86abebd1653bc137
sw x3, 0(x2) # store 0x86abebd1653bc137 in memory
flw f18, 0(x2) # load 0x86abebd1653bc137 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmadd.s f26, f16, f18, f2, dyn # perform operation
fnmadd.s f26, f16, f18, f2, rdn # perform operation
fnmadd.s f26, f16, f18, f2, rmm # perform operation
fnmadd.s f26, f16, f18, f2, rne # perform operation
fnmadd.s f26, f16, f18, f2, rtz # perform operation
fnmadd.s f26, f16, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x7eb5cb1d5c63a804 # load x3 with value 0x7eb5cb1d5c63a804
sw x3, 0(x2) # store 0x7eb5cb1d5c63a804 in memory
flw f10, 0(x2) # load 0x7eb5cb1d5c63a804 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fnmadd.s f1, f5, f10, f12, dyn # perform operation
fnmadd.s f1, f5, f10, f12, rdn # perform operation
fnmadd.s f1, f5, f10, f12, rmm # perform operation
fnmadd.s f1, f5, f10, f12, rne # perform operation
fnmadd.s f1, f5, f10, f12, rtz # perform operation
fnmadd.s f1, f5, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x11171a083ebf32f1 # load x3 with value 0x11171a083ebf32f1
sw x3, 0(x2) # store 0x11171a083ebf32f1 in memory
flw f20, 0(x2) # load 0x11171a083ebf32f1 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fnmadd.s f27, f31, f20, f16, dyn # perform operation
fnmadd.s f27, f31, f20, f16, rdn # perform operation
fnmadd.s f27, f31, f20, f16, rmm # perform operation
fnmadd.s f27, f31, f20, f16, rne # perform operation
fnmadd.s f27, f31, f20, f16, rtz # perform operation
fnmadd.s f27, f31, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0xe952a70d5e2b50b2 # load x3 with value 0xe952a70d5e2b50b2
sw x3, 0(x2) # store 0xe952a70d5e2b50b2 in memory
flw f31, 0(x2) # load 0xe952a70d5e2b50b2 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmadd.s f28, f25, f31, f2, dyn # perform operation
fnmadd.s f28, f25, f31, f2, rdn # perform operation
fnmadd.s f28, f25, f31, f2, rmm # perform operation
fnmadd.s f28, f25, f31, f2, rne # perform operation
fnmadd.s f28, f25, f31, f2, rtz # perform operation
fnmadd.s f28, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x8ff6adba2e56b039 # load x3 with value 0x8ff6adba2e56b039
sw x3, 0(x2) # store 0x8ff6adba2e56b039 in memory
flw f24, 0(x2) # load 0x8ff6adba2e56b039 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f16, f9, f24, f1, dyn # perform operation
fnmadd.s f16, f9, f24, f1, rdn # perform operation
fnmadd.s f16, f9, f24, f1, rmm # perform operation
fnmadd.s f16, f9, f24, f1, rne # perform operation
fnmadd.s f16, f9, f24, f1, rtz # perform operation
fnmadd.s f16, f9, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xa0be89578921cf44 # load x3 with value 0xa0be89578921cf44
sw x3, 0(x2) # store 0xa0be89578921cf44 in memory
flw f11, 0(x2) # load 0xa0be89578921cf44 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fnmadd.s f15, f19, f11, f1, dyn # perform operation
fnmadd.s f15, f19, f11, f1, rdn # perform operation
fnmadd.s f15, f19, f11, f1, rmm # perform operation
fnmadd.s f15, f19, f11, f1, rne # perform operation
fnmadd.s f15, f19, f11, f1, rtz # perform operation
fnmadd.s f15, f19, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f19, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f19, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x680b752714bab71b # load x3 with value 0x680b752714bab71b
sw x3, 0(x2) # store 0x680b752714bab71b in memory
flw f7, 0(x2) # load 0x680b752714bab71b from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f12, f2, f7, f1, dyn # perform operation
fnmadd.s f12, f2, f7, f1, rdn # perform operation
fnmadd.s f12, f2, f7, f1, rmm # perform operation
fnmadd.s f12, f2, f7, f1, rne # perform operation
fnmadd.s f12, f2, f7, f1, rtz # perform operation
fnmadd.s f12, f2, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x11ba7db291094f72 # load x3 with value 0x11ba7db291094f72
sw x3, 0(x2) # store 0x11ba7db291094f72 in memory
flw f6, 0(x2) # load 0x11ba7db291094f72 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmadd.s f23, f12, f6, f3, dyn # perform operation
fnmadd.s f23, f12, f6, f3, rdn # perform operation
fnmadd.s f23, f12, f6, f3, rmm # perform operation
fnmadd.s f23, f12, f6, f3, rne # perform operation
fnmadd.s f23, f12, f6, f3, rtz # perform operation
fnmadd.s f23, f12, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f12, f6, f3 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
